<Type Name="SqlDataReader" FullName="System.Data.SqlClient.SqlDataReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d73c01c8b2b9a1947ad9f3391514cebd51f2a36f" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="40212149" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlDataReader : System.Data.Common.DbDataReader, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataReader extends System.Data.Common.DbDataReader implements class System.Data.IDataReader, class System.Data.IDataRecord, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlDataReader" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataReader&#xA;Inherits DbDataReader&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataReader : System::Data::Common::DbDataReader, IDisposable" />
  <TypeSignature Language="F#" Value="type SqlDataReader = class&#xA;    inherit DbDataReader&#xA;    interface IDataReader&#xA;    interface IDisposable&#xA;    interface IDataRecord" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataReader</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="16fab-101">提供一种从 SQL Server 数据库中读取只进的行流的方式。</span>
      <span class="sxs-lookup">
        <span data-stu-id="16fab-101">Provides a way of reading a forward-only stream of rows from a SQL Server database.</span>
      </span>
      <span data-ttu-id="16fab-102">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="16fab-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-103">若要创建<xref:System.Data.SqlClient.SqlDataReader>，必须调用<xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>方法的<xref:System.Data.SqlClient.SqlCommand>对象，而不是直接使用构造函数。</span><span class="sxs-lookup"><span data-stu-id="16fab-103">To create a <xref:System.Data.SqlClient.SqlDataReader>, you must call the <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> method of the <xref:System.Data.SqlClient.SqlCommand> object, instead of directly using a constructor.</span></span>  
  
 <span data-ttu-id="16fab-104">虽然<xref:System.Data.SqlClient.SqlDataReader>正在使用中，关联<xref:System.Data.SqlClient.SqlConnection>是繁忙的服务<xref:System.Data.SqlClient.SqlDataReader>，并可以在执行任何其他操作<xref:System.Data.SqlClient.SqlConnection>而不关闭它。</span><span class="sxs-lookup"><span data-stu-id="16fab-104">While the <xref:System.Data.SqlClient.SqlDataReader> is being used, the associated <xref:System.Data.SqlClient.SqlConnection> is busy serving the <xref:System.Data.SqlClient.SqlDataReader>, and no other operations can be performed on the <xref:System.Data.SqlClient.SqlConnection> other than closing it.</span></span> <span data-ttu-id="16fab-105">这是种情况一直<xref:System.Data.SqlClient.SqlDataReader.Close%2A>方法的<xref:System.Data.SqlClient.SqlDataReader>调用。</span><span class="sxs-lookup"><span data-stu-id="16fab-105">This is the case until the <xref:System.Data.SqlClient.SqlDataReader.Close%2A> method of the <xref:System.Data.SqlClient.SqlDataReader> is called.</span></span> <span data-ttu-id="16fab-106">例如，不能检索输出参数，直到调用后<xref:System.Data.SqlClient.SqlDataReader.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="16fab-106">For example, you cannot retrieve output parameters until after you call <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.</span></span>  
  
 <span data-ttu-id="16fab-107">对结果集由另一个进程或线程读取数据时所做的更改可能会对用户可见`SqlDataReader`。</span><span class="sxs-lookup"><span data-stu-id="16fab-107">Changes made to a result set by another process or thread while data is being read may be visible to the user of the `SqlDataReader`.</span></span> <span data-ttu-id="16fab-108">但是，确切的行为与时间有关。</span><span class="sxs-lookup"><span data-stu-id="16fab-108">However, the precise behavior is timing dependent.</span></span>  
  
 <span data-ttu-id="16fab-109"><xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A> 并<xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A>是后可以调用的唯一属性<xref:System.Data.SqlClient.SqlDataReader>已关闭。</span><span class="sxs-lookup"><span data-stu-id="16fab-109"><xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A> and <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.SqlClient.SqlDataReader> is closed.</span></span> <span data-ttu-id="16fab-110">尽管<xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A>可能会访问属性时<xref:System.Data.SqlClient.SqlDataReader>存在，始终调用<xref:System.Data.SqlClient.SqlDataReader.Close%2A>返回的值之前<xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A>以保证返回精确的值。</span><span class="sxs-lookup"><span data-stu-id="16fab-110">Although the <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> property may be accessed while the <xref:System.Data.SqlClient.SqlDataReader> exists, always call <xref:System.Data.SqlClient.SqlDataReader.Close%2A> before returning the value of <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> to guarantee an accurate return value.</span></span>  
  
 <span data-ttu-id="16fab-111">使用顺序访问时 (<xref:System.Data.CommandBehavior.SequentialAccess?displayProperty=nameWithType>)、 一个<xref:System.InvalidOperationException>情况下会引发<xref:System.Data.SqlClient.SqlDataReader>高级位置和另一个读取上一列上尝试执行操作。</span><span class="sxs-lookup"><span data-stu-id="16fab-111">When using sequential access (<xref:System.Data.CommandBehavior.SequentialAccess?displayProperty=nameWithType>), an <xref:System.InvalidOperationException> will be raised if the <xref:System.Data.SqlClient.SqlDataReader> position is advanced and another read operation is attempted on the previous column.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="16fab-112">为了获得最佳性能，<xref:System.Data.SqlClient.SqlDataReader>可避免创建不必要的对象或对其进行不必要的数据副本。</span><span class="sxs-lookup"><span data-stu-id="16fab-112">For optimal performance, <xref:System.Data.SqlClient.SqlDataReader> avoids creating unnecessary objects or making unnecessary copies of data.</span></span> <span data-ttu-id="16fab-113">因此，多个调用方法如<xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>返回对同一个对象的引用。</span><span class="sxs-lookup"><span data-stu-id="16fab-113">Therefore, multiple calls to methods such as <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A> return a reference to the same object.</span></span> <span data-ttu-id="16fab-114">如果您正在修改如由方法返回的对象的基础值要格外小心<xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>。</span><span class="sxs-lookup"><span data-stu-id="16fab-114">Use caution if you are modifying the underlying value of the objects returned by methods such as <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="16fab-115">下面的示例创建<xref:System.Data.SqlClient.SqlConnection>、 一个<xref:System.Data.SqlClient.SqlCommand>，和一个<xref:System.Data.SqlClient.SqlDataReader>。</span><span class="sxs-lookup"><span data-stu-id="16fab-115">The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a <xref:System.Data.SqlClient.SqlCommand>, and a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="16fab-116">该示例读取数据，将其写到控制台窗口。</span><span class="sxs-lookup"><span data-stu-id="16fab-116">The example reads through the data, writing it out to the console window.</span></span> <span data-ttu-id="16fab-117">然后关闭代码<xref:System.Data.SqlClient.SqlDataReader>。</span><span class="sxs-lookup"><span data-stu-id="16fab-117">The code then closes the <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="16fab-118"><xref:System.Data.SqlClient.SqlConnection>结束时自动关闭`using`代码块。</span><span class="sxs-lookup"><span data-stu-id="16fab-118">The <xref:System.Data.SqlClient.SqlConnection> is closed automatically at the end of the `using` code block.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="sqlDataReader.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="16fab-119">关闭 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-119">Closes the <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-120">必须显式调用<xref:System.Data.SqlClient.SqlDataReader.Close%2A>方法时都是通过使用<xref:System.Data.SqlClient.SqlDataReader>使用关联<xref:System.Data.SqlClient.SqlConnection>用于任何其他用途。</span><span class="sxs-lookup"><span data-stu-id="16fab-120">You must explicitly call the <xref:System.Data.SqlClient.SqlDataReader.Close%2A> method when you are through using the <xref:System.Data.SqlClient.SqlDataReader> to use the associated <xref:System.Data.SqlClient.SqlConnection> for any other purpose.</span></span>  
  
 <span data-ttu-id="16fab-121">`Close`方法在输出参数、 返回值的值中填充并`RecordsAffected`，增加关闭所需的时间`SqlDataReader`，它用于处理大型或复杂的查询。</span><span class="sxs-lookup"><span data-stu-id="16fab-121">The `Close` method fills in the values for output parameters, return values and `RecordsAffected`, increasing the time that it takes to close a `SqlDataReader` that was used to process a large or complex query.</span></span> <span data-ttu-id="16fab-122">当返回值和受影响查询的记录数都不重要，若要关闭所花费的时间`SqlDataReader`可以通过调用减少<xref:System.Data.SqlClient.SqlCommand.Cancel%2A>关联的方法<xref:System.Data.SqlClient.SqlCommand>对象之前调用`Close`方法。</span><span class="sxs-lookup"><span data-stu-id="16fab-122">When the return values and the number of records affected by a query are not significant, the time that it takes to close the `SqlDataReader` can be reduced by calling the <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> method of the associated <xref:System.Data.SqlClient.SqlCommand> object before calling the `Close` method.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="16fab-123">不要调用`Close`或`Dispose`连接、 DataReader 或在任何其他托管的对象上`Finalize`类的方法。</span><span class="sxs-lookup"><span data-stu-id="16fab-123">Do not call `Close` or `Dispose` on a Connection, a DataReader, or any other managed object in the `Finalize` method of your class.</span></span> <span data-ttu-id="16fab-124">在终结器中，您应仅释放类直接拥有的非托管的资源。</span><span class="sxs-lookup"><span data-stu-id="16fab-124">In a finalizer, you should only release unmanaged resources that your class owns directly.</span></span> <span data-ttu-id="16fab-125">如果类不拥有任何非托管资源，则不要在类定义中包含 `Finalize` 方法。</span><span class="sxs-lookup"><span data-stu-id="16fab-125">If your class does not own any unmanaged resources, do not include a `Finalize` method in your class definition.</span></span> <span data-ttu-id="16fab-126">有关详细信息，请参阅[垃圾回收](~/docs/standard/garbage-collection/index.md)。</span><span class="sxs-lookup"><span data-stu-id="16fab-126">For more information, see [Garbage Collection](~/docs/standard/garbage-collection/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="16fab-127">下面的示例创建<xref:System.Data.SqlClient.SqlConnection>、 一个`SqlCommand`，和一个<xref:System.Data.SqlClient.SqlDataReader>。</span><span class="sxs-lookup"><span data-stu-id="16fab-127">The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a `SqlCommand`, and a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="16fab-128">该示例读取数据，将其写到控制台窗口。</span><span class="sxs-lookup"><span data-stu-id="16fab-128">The example reads through the data, writing it out to the console window.</span></span> <span data-ttu-id="16fab-129">然后关闭代码<xref:System.Data.SqlClient.SqlDataReader>。</span><span class="sxs-lookup"><span data-stu-id="16fab-129">The code then closes the <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="16fab-130"><xref:System.Data.SqlClient.SqlConnection>结束时自动关闭`using`代码块。</span><span class="sxs-lookup"><span data-stu-id="16fab-130">The <xref:System.Data.SqlClient.SqlConnection> is closed automatically at the end of the `using` code block.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataReader.Close Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Close Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataReader.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="protected System.Data.SqlClient.SqlConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.Connection" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Connection As SqlConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Data::SqlClient::SqlConnection ^ Connection { System::Data::SqlClient::SqlConnection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.SqlClient.SqlConnection" Usage="System.Data.SqlClient.SqlDataReader.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16fab-131">获取与 <see cref="T:System.Data.SqlClient.SqlConnection" /> 关联的 <see cref="T:System.Data.SqlClient.SqlDataReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-131">Gets the <see cref="T:System.Data.SqlClient.SqlConnection" /> associated with the <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16fab-132">与 <see cref="T:System.Data.SqlClient.SqlConnection" /> 关联的 <see cref="T:System.Data.SqlClient.SqlDataReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-132">The <see cref="T:System.Data.SqlClient.SqlConnection" /> associated with the <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Data.SqlClient.SqlDataReader.Depth" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataReader.Depth</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16fab-133">获取一个值，用于指示当前行的嵌套深度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-133">Gets a value that indicates the depth of nesting for the current row.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16fab-134">当前行的嵌套深度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-134">The depth of nesting for the current row.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-135">最外面的表的深度为零。</span><span class="sxs-lookup"><span data-stu-id="16fab-135">The outermost table has a depth of zero.</span></span> <span data-ttu-id="16fab-136">SQL Server 的.NET Framework 数据提供程序不支持嵌套，并且始终返回零。</span><span class="sxs-lookup"><span data-stu-id="16fab-136">The .NET Framework Data Provider for SQL Server does not support nesting and always returns zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public override int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.FieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldCount : int" Usage="System.Data.SqlClient.SqlDataReader.FieldCount" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataRecord.FieldCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16fab-137">获取当前行中的列数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-137">Gets the number of columns in the current row.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16fab-138">如果未放在有效的记录集中，则为 0；否则为当前行中的列数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-138">When not positioned in a valid recordset, 0; otherwise the number of columns in the current row.</span>
          </span>
          <span data-ttu-id="16fab-139">默认值为 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-139">The default is -1.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-140">执行的查询按其性质，不返回行 （如 DELETE 查询），设置<xref:System.Data.SqlClient.SqlDataReader.FieldCount%2A>为 0。</span><span class="sxs-lookup"><span data-stu-id="16fab-140">Executing a query that, by its nature, does not return rows (such as a DELETE query), sets <xref:System.Data.SqlClient.SqlDataReader.FieldCount%2A> to 0.</span></span> <span data-ttu-id="16fab-141">但是。</span><span class="sxs-lookup"><span data-stu-id="16fab-141">However.</span></span> <span data-ttu-id="16fab-142">这不应混淆返回 0 行的查询 (例如，SELECT \* FROM*表*WHERE 1 = 2） 在这种情况下<xref:System.Data.SqlClient.SqlDataReader.FieldCount%2A>表，包括隐藏的字段中返回的列数。</span><span class="sxs-lookup"><span data-stu-id="16fab-142">this should not be confused with a query that returns 0 rows (such as SELECT \* FROM *table* WHERE 1 = 2) in which case <xref:System.Data.SqlClient.SqlDataReader.FieldCount%2A> returns the number of columns in the table, including hidden fields.</span></span> <span data-ttu-id="16fab-143">使用 <xref:System.Data.SqlClient.SqlDataReader.VisibleFieldCount%2A> 可排除隐藏的字段。</span><span class="sxs-lookup"><span data-stu-id="16fab-143">Use <xref:System.Data.SqlClient.SqlDataReader.VisibleFieldCount%2A> to exclude hidden fields.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="16fab-144">没有对 SQL Server 实例的当前连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-144">There is no current connection to an instance of SQL Server.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public override bool GetBoolean (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetBoolean(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBoolean (i As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetBoolean(int i);" />
      <MemberSignature Language="F#" Value="override this.GetBoolean : int -&gt; bool" Usage="sqlDataReader.GetBoolean i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetBoolean(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-145">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-145">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-146">以布尔值的形式获取指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-146">Gets the value of the specified column as a Boolean.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-147">列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-147">The value of the column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-148">不执行任何转换;因此，检索到的数据必须已经是一个布尔值，或生成异常。</span><span class="sxs-lookup"><span data-stu-id="16fab-148">No conversions are performed; therefore, the data retrieved must already be a Boolean, or an exception is generated.</span></span>  
  
 <span data-ttu-id="16fab-149">调用<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>来调用此方法之前检查 null 值。</span><span class="sxs-lookup"><span data-stu-id="16fab-149">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="16fab-150">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-150">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public override byte GetByte (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8 GetByte(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByte (i As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Byte GetByte(int i);" />
      <MemberSignature Language="F#" Value="override this.GetByte : int -&gt; byte" Usage="sqlDataReader.GetByte i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetByte(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-151">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-151">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-152">以字节的形式获取指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-152">Gets the value of the specified column as a byte.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-153">指定列的字节形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-153">The value of the specified column as a byte.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-154">不执行任何转换;因此，检索到的数据必须已为一个字节。</span><span class="sxs-lookup"><span data-stu-id="16fab-154">No conversions are performed; therefore, the data retrieved must already be a byte.</span></span>  
  
 <span data-ttu-id="16fab-155">调用<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>来调用此方法之前检查 null 值。</span><span class="sxs-lookup"><span data-stu-id="16fab-155">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="16fab-156">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-156">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override long GetBytes (int i, long dataIndex, byte[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetBytes(int32 i, int64 dataIndex, unsigned int8[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (i As Integer, dataIndex As Long, buffer As Byte(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetBytes(int i, long dataIndex, cli::array &lt;System::Byte&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : int * int64 * byte[] * int * int -&gt; int64" Usage="sqlDataReader.GetBytes (i, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-157">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-157">The zero-based column ordinal.</span>
          </span>
        </param>
        <param name="dataIndex">
          <span data-ttu-id="16fab-158">字段中的索引，从其开始读取操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-158">The index within the field from which to begin the read operation.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="16fab-159">要读入字节流的缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-159">The buffer into which to read the stream of bytes.</span>
          </span>
        </param>
        <param name="bufferIndex">
          <span data-ttu-id="16fab-160">
            <c>buffer</c> 中写入操作开始位置的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-160">The index within the <c>buffer</c> where the write operation is to start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="16fab-161">复制到缓冲区中的最大长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-161">The maximum length to copy into the buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-162">从指定的列偏移量将字节流读入缓冲区，并将其作为从给定的缓冲区偏移量开始的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-162">Reads a stream of bytes from the specified column offset into the buffer an array starting at the given buffer offset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-163">读取的实际字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-163">The actual number of bytes read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-164"><xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> 返回字段中的可用字节数。</span><span class="sxs-lookup"><span data-stu-id="16fab-164"><xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> returns the number of available bytes in the field.</span></span> <span data-ttu-id="16fab-165">大多数情况下，这是该字段的确切长度。</span><span class="sxs-lookup"><span data-stu-id="16fab-165">Most of the time this is the exact length of the field.</span></span> <span data-ttu-id="16fab-166">但是，返回的数字可能小于字段的真实长度如果`GetBytes`具有用于从字段中获取字节。</span><span class="sxs-lookup"><span data-stu-id="16fab-166">However, the number returned may be less than the true length of the field if `GetBytes` has already been used to obtain bytes from the field.</span></span> <span data-ttu-id="16fab-167">这可能情况下，例如，如果<xref:System.Data.SqlClient.SqlDataReader>正在读取到缓冲区中的大型数据结构。</span><span class="sxs-lookup"><span data-stu-id="16fab-167">This may be the case, for example, if the <xref:System.Data.SqlClient.SqlDataReader> is reading a large data structure into a buffer.</span></span> <span data-ttu-id="16fab-168">有关详细信息，请参阅`SequentialAccess`设置为<xref:System.Data.CommandBehavior>。</span><span class="sxs-lookup"><span data-stu-id="16fab-168">For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="16fab-169">如果传递的缓冲区，则`null`，<xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A>以字节为单位，不是剩余大小基于缓冲区偏移量参数中返回整个字段的长度。</span><span class="sxs-lookup"><span data-stu-id="16fab-169">If you pass a buffer that is `null`, <xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> returns the length of the entire field in bytes, not the remaining size based on the buffer offset parameter.</span></span>  
  
 <span data-ttu-id="16fab-170">不执行任何转换;因此，检索到的数据必须已经是一个字节数组。</span><span class="sxs-lookup"><span data-stu-id="16fab-170">No conversions are performed; therefore, the data retrieved must already be a byte array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public override char GetChar (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetChar(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChar (i As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetChar(int i);" />
      <MemberSignature Language="F#" Value="override this.GetChar : int -&gt; char" Usage="sqlDataReader.GetChar i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetChar(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-171">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-171">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-172">以单个字符的形式获取指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-172">Gets the value of the specified column as a single character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-173">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-173">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-174">对于 <xref:System.Data.SqlClient>，不受支持。</span><span class="sxs-lookup"><span data-stu-id="16fab-174">Not supported for <xref:System.Data.SqlClient>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="16fab-175">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-175">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override long GetChars (int i, long dataIndex, char[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetChars(int32 i, int64 dataIndex, char[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (i As Integer, dataIndex As Long, buffer As Char(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetChars(int i, long dataIndex, cli::array &lt;char&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetChars : int * int64 * char[] * int * int -&gt; int64" Usage="sqlDataReader.GetChars (i, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-176">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-176">The zero-based column ordinal.</span>
          </span>
        </param>
        <param name="dataIndex">
          <span data-ttu-id="16fab-177">字段中的索引，从其开始读取操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-177">The index within the field from which to begin the read operation.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="16fab-178">要读入字节流的缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-178">The buffer into which to read the stream of bytes.</span>
          </span>
        </param>
        <param name="bufferIndex">
          <span data-ttu-id="16fab-179">
            <c>buffer</c> 中写入操作开始位置的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-179">The index within the <c>buffer</c> where the write operation is to start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="16fab-180">复制到缓冲区中的最大长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-180">The maximum length to copy into the buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-181">从指定的列偏移量将字符流作为数组从给定的缓冲区偏移量开始读入缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-181">Reads a stream of characters from the specified column offset into the buffer as an array starting at the given buffer offset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-182">读取的实际字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-182">The actual number of characters read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-183"><xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> 返回字段中的可用字符数。</span><span class="sxs-lookup"><span data-stu-id="16fab-183"><xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> returns the number of available characters in the field.</span></span> <span data-ttu-id="16fab-184">通常这是该字段的确切长度。</span><span class="sxs-lookup"><span data-stu-id="16fab-184">Frequently this is the exact length of the field.</span></span> <span data-ttu-id="16fab-185">但是，返回的数字可能小于字段的真实长度如果`GetChars`具有用于从字段获取字符。</span><span class="sxs-lookup"><span data-stu-id="16fab-185">However, the number returned may be less than the true length of the field if `GetChars` has already been used to obtain characters from the field.</span></span> <span data-ttu-id="16fab-186">这可能情况下，例如，如果<xref:System.Data.SqlClient.SqlDataReader>正在读取到缓冲区中的大型数据结构。</span><span class="sxs-lookup"><span data-stu-id="16fab-186">This may be the case, for example, if the <xref:System.Data.SqlClient.SqlDataReader> is reading a large data structure into a buffer.</span></span> <span data-ttu-id="16fab-187">有关详细信息，请参阅`SequentialAccess`设置为<xref:System.Data.CommandBehavior>。</span><span class="sxs-lookup"><span data-stu-id="16fab-187">For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="16fab-188">实际读取的字符数可能小于请求的长度，如果已到达的字段的结尾。</span><span class="sxs-lookup"><span data-stu-id="16fab-188">The actual number of characters read can be less than the requested length, if the end of the field is reached.</span></span> <span data-ttu-id="16fab-189">如果传递的缓冲区，则`null`，<xref:System.Data.SqlClient.SqlDataReader.GetChars%2A>字符，不是剩余大小基于缓冲区偏移量参数中返回整个字段的长度。</span><span class="sxs-lookup"><span data-stu-id="16fab-189">If you pass a buffer that is `null`, <xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> returns the length of the entire field in characters, not the remaining size based on the buffer offset parameter.</span></span>  
  
 <span data-ttu-id="16fab-190">不执行任何转换;因此。</span><span class="sxs-lookup"><span data-stu-id="16fab-190">No conversions are performed; therefore.</span></span> <span data-ttu-id="16fab-191">检索到的数据必须已经是字符数组。</span><span class="sxs-lookup"><span data-stu-id="16fab-191">the data retrieved must already be a character array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="16fab-192"><xref:System.Data.SqlClient.SqlDataReader.GetChars%2A>方法将返回 0 时`dataIndex`为负。</span><span class="sxs-lookup"><span data-stu-id="16fab-192">The <xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> method returns 0 when `dataIndex` is negative.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public System.Data.IDataReader GetData (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDataReader GetData(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetData(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (i As Integer) As IDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::IDataReader ^ GetData(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetData : int -&gt; System.Data.IDataReader&#xA;override this.GetData : int -&gt; System.Data.IDataReader" Usage="sqlDataReader.GetData i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetData(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public override string GetDataTypeName (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDataTypeName(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDataTypeName (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDataTypeName(int i);" />
      <MemberSignature Language="F#" Value="override this.GetDataTypeName : int -&gt; string" Usage="sqlDataReader.GetDataTypeName i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDataTypeName(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-193">要查找的列的从零开始的序号位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-193">The zero-based ordinal position of the column to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-194">获取一个表示指定列的数据类型的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-194">Gets a string representing the data type of the specified column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-195">表示指定列的数据类型的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-195">The string representing the data type of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-196">返回后端数据类型的名称。</span><span class="sxs-lookup"><span data-stu-id="16fab-196">Returns the name of the back-end data type.</span></span>  
  
 <span data-ttu-id="16fab-197">`numeric` 有关 SQL Server 中的同义词`decimal`数据类型。</span><span class="sxs-lookup"><span data-stu-id="16fab-197">`numeric` is a synonym in SQL Server for the `decimal` data type.</span></span> <span data-ttu-id="16fab-198">`GetDataTypeName` 将返回"decimal"定义为 decimal 或 numeric 的列。</span><span class="sxs-lookup"><span data-stu-id="16fab-198">`GetDataTypeName` will return "decimal" for a column defined as either decimal or numeric.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public override DateTime GetDateTime (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime GetDateTime(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDateTime (i As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime GetDateTime(int i);" />
      <MemberSignature Language="F#" Value="override this.GetDateTime : int -&gt; DateTime" Usage="sqlDataReader.GetDateTime i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDateTime(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-199">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-199">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-200">以 <see cref="T:System.DateTime" /> 对象的形式获取指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-200">Gets the value of the specified column as a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-201">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-201">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-202">不执行任何转换;因此，检索到的数据必须已经是<xref:System.DateTime>对象。</span><span class="sxs-lookup"><span data-stu-id="16fab-202">No conversions are performed; therefore, the data retrieved must already be a <xref:System.DateTime> object.</span></span>  
  
 <span data-ttu-id="16fab-203">调用<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>来调用此方法之前检查 null 值。</span><span class="sxs-lookup"><span data-stu-id="16fab-203">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="16fab-204">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-204">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDateTimeOffset">
      <MemberSignature Language="C#" Value="public virtual DateTimeOffset GetDateTimeOffset (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTimeOffset GetDateTimeOffset(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDateTimeOffset (i As Integer) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTimeOffset GetDateTimeOffset(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetDateTimeOffset : int -&gt; DateTimeOffset&#xA;override this.GetDateTimeOffset : int -&gt; DateTimeOffset" Usage="sqlDataReader.GetDateTimeOffset i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-205">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-205">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-206">检索指定列的 <see cref="T:System.DateTimeOffset" /> 对象形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-206">Retrieves the value of the specified column as a <see cref="T:System.DateTimeOffset" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-207">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-207">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-208">不执行任何转换;因此，检索到的数据必须已经是<xref:System.DateTimeOffset>对象。</span><span class="sxs-lookup"><span data-stu-id="16fab-208">No conversions are performed; therefore, the data retrieved must already be a <xref:System.DateTimeOffset> object.</span></span>  
  
 <span data-ttu-id="16fab-209">调用<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>来调用此方法之前检查 null 值。</span><span class="sxs-lookup"><span data-stu-id="16fab-209">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="16fab-210">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-210">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public override decimal GetDecimal (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Decimal GetDecimal(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecimal (i As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Decimal GetDecimal(int i);" />
      <MemberSignature Language="F#" Value="override this.GetDecimal : int -&gt; decimal" Usage="sqlDataReader.GetDecimal i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDecimal(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-211">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-211">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-212">以 <see cref="T:System.Decimal" /> 对象的形式获取指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-212">Gets the value of the specified column as a <see cref="T:System.Decimal" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-213">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-213">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-214">不执行任何转换;因此，检索到的数据必须已经是<xref:System.Decimal>对象。</span><span class="sxs-lookup"><span data-stu-id="16fab-214">No conversions are performed; therefore, the data retrieved must already be a <xref:System.Decimal> object.</span></span>  
  
 <span data-ttu-id="16fab-215">调用<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>来调用此方法之前检查 null 值。</span><span class="sxs-lookup"><span data-stu-id="16fab-215">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="16fab-216">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-216">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public override double GetDouble (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 GetDouble(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDouble (i As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override double GetDouble(int i);" />
      <MemberSignature Language="F#" Value="override this.GetDouble : int -&gt; double" Usage="sqlDataReader.GetDouble i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDouble(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-217">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-217">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-218">以双精度浮点数字的形式获取指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-218">Gets the value of the specified column as a double-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-219">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-219">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-220">不执行任何转换。</span><span class="sxs-lookup"><span data-stu-id="16fab-220">No conversions are performed.</span></span> <span data-ttu-id="16fab-221">因此，检索到的数据必须已经是双精度浮点数字。</span><span class="sxs-lookup"><span data-stu-id="16fab-221">Therefore, the data retrieved must already be a double-precision floating point number.</span></span>  
  
 <span data-ttu-id="16fab-222">调用<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>来调用此方法之前检查 null 值。</span><span class="sxs-lookup"><span data-stu-id="16fab-222">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="16fab-223">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-223">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="sqlDataReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="16fab-224">返回循环访问 <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Data.SqlClient.SqlDataReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-224">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-225">
            <see cref="T:System.Collections.IEnumerator" /> 的一个 <see cref="T:System.Data.SqlClient.SqlDataReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-225">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-226">尽管此方法可用于检索显式枚举器，但在语言的支持`foreach`构造，它是直接以循环访问数据读取器中的行中使用循环构造简单得多。</span><span class="sxs-lookup"><span data-stu-id="16fab-226">Although you can use this method to retrieve an explicit enumerator, in languages that support a `foreach` construct, it is simpler to use the looping construct directly in order to iterate through the rows in the data reader.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public override Type GetFieldType (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetFieldType(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFieldType (i As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetFieldType(int i);" />
      <MemberSignature Language="F#" Value="override this.GetFieldType : int -&gt; Type" Usage="sqlDataReader.GetFieldType i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetFieldType(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-227">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-227">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-228">获取作为对象的数据类型的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-228">Gets the <see cref="T:System.Type" /> that is the data type of the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-229">作为对象的数据类型的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-229">The <see cref="T:System.Type" /> that is the data type of the object.</span>
          </span>
          <span data-ttu-id="16fab-230">在用户定义的类型 (UDT) 从数据库中返回的情况下，如果客户端上不存在该类型，则 GetFieldType 返回 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-230">If the type does not exist on the client, in the case of a User-Defined Type (UDT) returned from the database, **GetFieldType** returns null.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFieldValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T GetFieldValue&lt;T&gt; (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T GetFieldValue&lt;T&gt;(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFieldValue(Of T) (i As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; override T GetFieldValue(int i);" />
      <MemberSignature Language="F#" Value="override this.GetFieldValue : int -&gt; 'T" Usage="sqlDataReader.GetFieldValue i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="16fab-231">要返回的值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-231">The type of the value to be returned.</span>
          </span>
        </typeparam>
        <param name="i">
          <span data-ttu-id="16fab-232">要检索的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-232">The column to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-233">同步获取作为类型的指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-233">Synchronously gets the value of the specified column as a type.</span>
          </span>
          <span data-ttu-id="16fab-234">
            <see cref="M:System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)" /> 是此方法的异步版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-234">
              <see cref="M:System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)" /> is the asynchronous version of this method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-235">返回的类型对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-235">The returned type object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-236">`T` 可以是以下类型之一：</span><span class="sxs-lookup"><span data-stu-id="16fab-236">`T` can be one of the following types:</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="16fab-237">Boolean</span><span class="sxs-lookup"><span data-stu-id="16fab-237">Boolean</span></span>|<span data-ttu-id="16fab-238">Byte</span><span class="sxs-lookup"><span data-stu-id="16fab-238">Byte</span></span>|<span data-ttu-id="16fab-239">Char</span><span class="sxs-lookup"><span data-stu-id="16fab-239">Char</span></span>|<span data-ttu-id="16fab-240">DateTime</span><span class="sxs-lookup"><span data-stu-id="16fab-240">DateTime</span></span>|  
|<span data-ttu-id="16fab-241">DateTimeOffset</span><span class="sxs-lookup"><span data-stu-id="16fab-241">DateTimeOffset</span></span>|<span data-ttu-id="16fab-242">十进制</span><span class="sxs-lookup"><span data-stu-id="16fab-242">Decimal</span></span>|<span data-ttu-id="16fab-243">Double</span><span class="sxs-lookup"><span data-stu-id="16fab-243">Double</span></span>|<span data-ttu-id="16fab-244">Float</span><span class="sxs-lookup"><span data-stu-id="16fab-244">Float</span></span>|  
|<span data-ttu-id="16fab-245">GUID</span><span class="sxs-lookup"><span data-stu-id="16fab-245">Guid</span></span>|<span data-ttu-id="16fab-246">Int16</span><span class="sxs-lookup"><span data-stu-id="16fab-246">Int16</span></span>|<span data-ttu-id="16fab-247">Int32</span><span class="sxs-lookup"><span data-stu-id="16fab-247">Int32</span></span>|<span data-ttu-id="16fab-248">Int64</span><span class="sxs-lookup"><span data-stu-id="16fab-248">Int64</span></span>|  
|<span data-ttu-id="16fab-249">SqlBoolean</span><span class="sxs-lookup"><span data-stu-id="16fab-249">SqlBoolean</span></span>|<span data-ttu-id="16fab-250">以</span><span class="sxs-lookup"><span data-stu-id="16fab-250">SqlByte</span></span>|<span data-ttu-id="16fab-251">SqlDateTime</span><span class="sxs-lookup"><span data-stu-id="16fab-251">SqlDateTime</span></span>|<span data-ttu-id="16fab-252">SqlDecimal</span><span class="sxs-lookup"><span data-stu-id="16fab-252">SqlDecimal</span></span>|  
|<span data-ttu-id="16fab-253">SqlDouble</span><span class="sxs-lookup"><span data-stu-id="16fab-253">SqlDouble</span></span>|<span data-ttu-id="16fab-254">SqlGuid</span><span class="sxs-lookup"><span data-stu-id="16fab-254">SqlGuid</span></span>|<span data-ttu-id="16fab-255">SqlInt16</span><span class="sxs-lookup"><span data-stu-id="16fab-255">SqlInt16</span></span>|<span data-ttu-id="16fab-256">SqlInt32</span><span class="sxs-lookup"><span data-stu-id="16fab-256">SqlInt32</span></span>|  
|<span data-ttu-id="16fab-257">SqlInt64</span><span class="sxs-lookup"><span data-stu-id="16fab-257">SqlInt64</span></span>|<span data-ttu-id="16fab-258">SqlMoney</span><span class="sxs-lookup"><span data-stu-id="16fab-258">SqlMoney</span></span>|<span data-ttu-id="16fab-259">SqlSingle</span><span class="sxs-lookup"><span data-stu-id="16fab-259">SqlSingle</span></span>|<span data-ttu-id="16fab-260">SqlString</span><span class="sxs-lookup"><span data-stu-id="16fab-260">SqlString</span></span>|  
|<span data-ttu-id="16fab-261">String</span><span class="sxs-lookup"><span data-stu-id="16fab-261">String</span></span>|<span data-ttu-id="16fab-262">UDT，可以是任何 CLR 类型标记为<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>。</span><span class="sxs-lookup"><span data-stu-id="16fab-262">UDT, which can be any CLR type marked with <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>.</span></span>|||  
  
 <span data-ttu-id="16fab-263">有关详细信息，请参阅[SqlClient 流支持](~/docs/framework/data/adonet/sqlclient-streaming-support.md)。</span><span class="sxs-lookup"><span data-stu-id="16fab-263">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="16fab-264">连接中断或在数据检索期间已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-264">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="16fab-265">数据检索期间，<see cref="T:System.Data.SqlClient.SqlDataReader" /> 处于关闭状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-265">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="16fab-266">没有要读取的就绪数据 (例如，第一个 <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> 未被调用或返回错误)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-266">There is no data ready to be read (for example, the first <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="16fab-267">按顺序模式尝试读取上一步骤中读取的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-267">Tried to read a previously-read column in sequential mode.</span>
          </span>
          <span data-ttu-id="16fab-268">没有正在进行的异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-268">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="16fab-269">以顺序模式运行时，这适用于所有 Get\* 方法，读取流时也可对其进行调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-269">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="16fab-270">尝试读取不存在的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-270">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
          <span data-ttu-id="16fab-271">该列中的值为 null (<see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> == <see langword="true" />)，检索非 SQL 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-271">The value of the column was null (<see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> == <see langword="true" />), retrieving a non-SQL type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="16fab-272">
            <paramref name="T" /> 与 SQL Server 返回的类型不匹配或无法进行强制转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-272">
              <paramref name="T" /> doesn’t match the type returned by SQL Server or cannot be cast.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFieldValueAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;T&gt; GetFieldValueAsync&lt;T&gt; (int i, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;!!T&gt; GetFieldValueAsync&lt;T&gt;(int32 i, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; override System::Threading::Tasks::Task&lt;T&gt; ^ GetFieldValueAsync(int i, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.GetFieldValueAsync : int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'T&gt;" Usage="sqlDataReader.GetFieldValueAsync (i, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="16fab-273">要返回的值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-273">The type of the value to be returned.</span>
          </span>
        </typeparam>
        <param name="i">
          <span data-ttu-id="16fab-274">要检索的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-274">The column to be retrieved.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="16fab-275">取消指示，用于对应该取消操作的通知进行传播。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-275">The cancellation instruction, which propagates a notification that operations should be canceled.</span>
          </span>
          <span data-ttu-id="16fab-276">此构造函数不对取消做保证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-276">This does not guarantee the cancellation.</span>
          </span>
          <span data-ttu-id="16fab-277">设置为 <see langword="CancellationToken.None" /> 将此方法等效于 <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-277">A setting of <see langword="CancellationToken.None" /> makes this method equivalent to <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />.</span>
          </span>
          <span data-ttu-id="16fab-278">返回任务必须标记为已取消。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-278">The returned task must be marked as cancelled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-279">异步获取作为类型的指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-279">Asynchronously gets the value of the specified column as a type.</span>
          </span>
          <span data-ttu-id="16fab-280">
            <see cref="M:System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)" />是此方法的同步版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-280">
              <see cref="M:System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)" /> is the synchronous version of this method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-281">返回的类型对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-281">The returned type object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-282">`T` 可以是以下类型之一：</span><span class="sxs-lookup"><span data-stu-id="16fab-282">`T` can be one of the following types:</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="16fab-283">Boolean</span><span class="sxs-lookup"><span data-stu-id="16fab-283">Boolean</span></span>|<span data-ttu-id="16fab-284">Byte</span><span class="sxs-lookup"><span data-stu-id="16fab-284">Byte</span></span>|<span data-ttu-id="16fab-285">Char</span><span class="sxs-lookup"><span data-stu-id="16fab-285">Char</span></span>|<span data-ttu-id="16fab-286">DateTime</span><span class="sxs-lookup"><span data-stu-id="16fab-286">DateTime</span></span>|  
|<span data-ttu-id="16fab-287">DateTimeOffset</span><span class="sxs-lookup"><span data-stu-id="16fab-287">DateTimeOffset</span></span>|<span data-ttu-id="16fab-288">十进制</span><span class="sxs-lookup"><span data-stu-id="16fab-288">Decimal</span></span>|<span data-ttu-id="16fab-289">Double</span><span class="sxs-lookup"><span data-stu-id="16fab-289">Double</span></span>|<span data-ttu-id="16fab-290">Float</span><span class="sxs-lookup"><span data-stu-id="16fab-290">Float</span></span>|  
|<span data-ttu-id="16fab-291">GUID</span><span class="sxs-lookup"><span data-stu-id="16fab-291">Guid</span></span>|<span data-ttu-id="16fab-292">Int16</span><span class="sxs-lookup"><span data-stu-id="16fab-292">Int16</span></span>|<span data-ttu-id="16fab-293">Int32</span><span class="sxs-lookup"><span data-stu-id="16fab-293">Int32</span></span>|<span data-ttu-id="16fab-294">Int64</span><span class="sxs-lookup"><span data-stu-id="16fab-294">Int64</span></span>|  
|<span data-ttu-id="16fab-295">SqlBoolean</span><span class="sxs-lookup"><span data-stu-id="16fab-295">SqlBoolean</span></span>|<span data-ttu-id="16fab-296">以</span><span class="sxs-lookup"><span data-stu-id="16fab-296">SqlByte</span></span>|<span data-ttu-id="16fab-297">SqlDateTime</span><span class="sxs-lookup"><span data-stu-id="16fab-297">SqlDateTime</span></span>|<span data-ttu-id="16fab-298">SqlDecimal</span><span class="sxs-lookup"><span data-stu-id="16fab-298">SqlDecimal</span></span>|  
|<span data-ttu-id="16fab-299">SqlDouble</span><span class="sxs-lookup"><span data-stu-id="16fab-299">SqlDouble</span></span>|<span data-ttu-id="16fab-300">SqlGuid</span><span class="sxs-lookup"><span data-stu-id="16fab-300">SqlGuid</span></span>|<span data-ttu-id="16fab-301">SqlInt16</span><span class="sxs-lookup"><span data-stu-id="16fab-301">SqlInt16</span></span>|<span data-ttu-id="16fab-302">SqlInt32</span><span class="sxs-lookup"><span data-stu-id="16fab-302">SqlInt32</span></span>|  
|<span data-ttu-id="16fab-303">SqlInt64</span><span class="sxs-lookup"><span data-stu-id="16fab-303">SqlInt64</span></span>|<span data-ttu-id="16fab-304">SqlMoney</span><span class="sxs-lookup"><span data-stu-id="16fab-304">SqlMoney</span></span>|<span data-ttu-id="16fab-305">SqlSingle</span><span class="sxs-lookup"><span data-stu-id="16fab-305">SqlSingle</span></span>|<span data-ttu-id="16fab-306">SqlString</span><span class="sxs-lookup"><span data-stu-id="16fab-306">SqlString</span></span>|  
|<span data-ttu-id="16fab-307">String</span><span class="sxs-lookup"><span data-stu-id="16fab-307">String</span></span>|<span data-ttu-id="16fab-308">UDT，可以是任何 CLR 类型标记为<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>。</span><span class="sxs-lookup"><span data-stu-id="16fab-308">UDT, which can be any CLR type marked with <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>.</span></span>|||  
  
 <span data-ttu-id="16fab-309">有关详细信息，请参阅[SqlClient 流支持](~/docs/framework/data/adonet/sqlclient-streaming-support.md)。</span><span class="sxs-lookup"><span data-stu-id="16fab-309">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="16fab-310">连接中断或在数据检索期间已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-310">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="16fab-311">数据检索期间，<see cref="T:System.Data.SqlClient.SqlDataReader" /> 处于关闭状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-311">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="16fab-312">没有要读取的就绪数据 (例如，第一个 <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> 未被调用或返回错误)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-312">There is no data ready to be read (for example, the first <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="16fab-313">按顺序模式尝试读取上一步骤中读取的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-313">Tried to read a previously-read column in sequential mode.</span>
          </span>
          <span data-ttu-id="16fab-314">没有正在进行的异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-314">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="16fab-315">以顺序模式运行时，这适用于所有 Get\* 方法，读取流时也可对其进行调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-315">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
          <span data-ttu-id="16fab-316">在连接字符串中指定 <see langword="Context Connection=true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-316">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="16fab-317">尝试读取不存在的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-317">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
          <span data-ttu-id="16fab-318">该列中的值为 null (<see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> == <see langword="true" />)，检索非 SQL 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-318">The value of the column was null (<see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> == <see langword="true" />), retrieving a non-SQL type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="16fab-319">
            <paramref name="T" /> 与 SQL Server 返回的类型不匹配或无法进行强制转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-319">
              <paramref name="T" /> doesn’t match the type returned by SQL Server or cannot be cast.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public override float GetFloat (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 GetFloat(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFloat (i As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override float GetFloat(int i);" />
      <MemberSignature Language="F#" Value="override this.GetFloat : int -&gt; single" Usage="sqlDataReader.GetFloat i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetFloat(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-320">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-320">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-321">以单精度浮点数字的形式获取指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-321">Gets the value of the specified column as a single-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-322">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-322">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-323">不执行任何转换。</span><span class="sxs-lookup"><span data-stu-id="16fab-323">No conversions are performed.</span></span> <span data-ttu-id="16fab-324">因此，检索到的数据必须已经是单精度浮点数字。</span><span class="sxs-lookup"><span data-stu-id="16fab-324">Therefore, the data retrieved must already be a single-precision floating point number.</span></span>  
  
 <span data-ttu-id="16fab-325">调用<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>来调用此方法之前检查 null 值。</span><span class="sxs-lookup"><span data-stu-id="16fab-325">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="16fab-326">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-326">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public override Guid GetGuid (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Guid GetGuid(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGuid (i As Integer) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Guid GetGuid(int i);" />
      <MemberSignature Language="F#" Value="override this.GetGuid : int -&gt; Guid" Usage="sqlDataReader.GetGuid i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetGuid(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-327">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-327">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-328">获取指定列的值作为全局唯一标识符 (GUID)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-328">Gets the value of the specified column as a globally unique identifier (GUID).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-329">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-329">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-330">不执行任何转换;因此，检索到的数据必须已经是一个 GUID。</span><span class="sxs-lookup"><span data-stu-id="16fab-330">No conversions are performed; therefore, the data retrieved must already be a GUID.</span></span>  
  
 <span data-ttu-id="16fab-331">调用<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>来调用此方法之前检查 null 值。</span><span class="sxs-lookup"><span data-stu-id="16fab-331">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="16fab-332">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-332">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public override short GetInt16 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int16 GetInt16(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt16 (i As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override short GetInt16(int i);" />
      <MemberSignature Language="F#" Value="override this.GetInt16 : int -&gt; int16" Usage="sqlDataReader.GetInt16 i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetInt16(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-333">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-333">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-334">获取指定列的 16 位带符号整数形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-334">Gets the value of the specified column as a 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-335">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-335">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-336">不执行任何转换;因此，检索到的数据必须已经是 16 位有符号的整数。</span><span class="sxs-lookup"><span data-stu-id="16fab-336">No conversions are performed; therefore, the data retrieved must already be a 16-bit signed integer.</span></span>  
  
 <span data-ttu-id="16fab-337">调用<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>来调用此方法之前检查 null 值。</span><span class="sxs-lookup"><span data-stu-id="16fab-337">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="16fab-338">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-338">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public override int GetInt32 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetInt32(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt32 (i As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetInt32(int i);" />
      <MemberSignature Language="F#" Value="override this.GetInt32 : int -&gt; int" Usage="sqlDataReader.GetInt32 i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetInt32(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-339">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-339">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-340">获取指定列的 32 位带符号整数形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-340">Gets the value of the specified column as a 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-341">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-341">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-342">不执行任何转换;因此，检索到的数据必须已经是 32 位有符号的整数。</span><span class="sxs-lookup"><span data-stu-id="16fab-342">No conversions are performed; therefore, the data retrieved must already be a 32-bit signed integer.</span></span>  
  
 <span data-ttu-id="16fab-343">调用<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>来调用此方法之前检查 null 值。</span><span class="sxs-lookup"><span data-stu-id="16fab-343">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="16fab-344">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-344">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public override long GetInt64 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetInt64(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt64 (i As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetInt64(int i);" />
      <MemberSignature Language="F#" Value="override this.GetInt64 : int -&gt; int64" Usage="sqlDataReader.GetInt64 i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetInt64(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-345">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-345">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-346">以 64 位有符号整数的形式获取指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-346">Gets the value of the specified column as a 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-347">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-347">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-348">不执行任何转换;因此，检索到的数据必须已经是 64 位有符号的整数。</span><span class="sxs-lookup"><span data-stu-id="16fab-348">No conversions are performed; therefore, the data retrieved must already be a 64-bit signed integer.</span></span>  
  
 <span data-ttu-id="16fab-349">调用<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>来调用此方法之前检查 null 值。</span><span class="sxs-lookup"><span data-stu-id="16fab-349">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="16fab-350">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-350">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override string GetName (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetName(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetName(int i);" />
      <MemberSignature Language="F#" Value="override this.GetName : int -&gt; string" Usage="sqlDataReader.GetName i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetName(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-351">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-351">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-352">获取指定列的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-352">Gets the name of the specified column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-353">指定列的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-353">The name of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public override int GetOrdinal (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetOrdinal(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOrdinal (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetOrdinal(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetOrdinal : string -&gt; int" Usage="sqlDataReader.GetOrdinal name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetOrdinal(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="16fab-354">列的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-354">The name of the column.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-355">在给定列名时获取相应的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-355">Gets the column ordinal, given the name of the column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-356">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-356">The zero-based column ordinal.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-357">`GetOrdinal` 第一次执行区分大小写查找。</span><span class="sxs-lookup"><span data-stu-id="16fab-357">`GetOrdinal` performs a case-sensitive lookup first.</span></span> <span data-ttu-id="16fab-358">如果失败，第二个，则会不区分大小写的搜索 (进行不区分大小写的比较使用数据库排序规则)。</span><span class="sxs-lookup"><span data-stu-id="16fab-358">If it fails, a second, case-insensitive search occurs (a case-insensitive comparison is done using the database collation).</span></span> <span data-ttu-id="16fab-359">当比较受特定于区域性的大小写规则，会发生意外的结果。</span><span class="sxs-lookup"><span data-stu-id="16fab-359">Unexpected results can occur when comparisons are affected by culture-specific casing rules.</span></span> <span data-ttu-id="16fab-360">例如，在土耳其语，下面的示例生成错误结果由于土耳其语中的文件系统对字母 i 不使用语言的大小写规则"文件"中。</span><span class="sxs-lookup"><span data-stu-id="16fab-360">For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter 'i' in "file".</span></span> <span data-ttu-id="16fab-361">该方法将引发`IndexOutOfRange`异常，如果找不到从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="16fab-361">The method throws an `IndexOutOfRange` exception if the zero-based column ordinal is not found.</span></span>  
  
 <span data-ttu-id="16fab-362">`GetOrdinal` 不区分假名宽度。</span><span class="sxs-lookup"><span data-stu-id="16fab-362">`GetOrdinal` is kana-width insensitive.</span></span>  
  
 <span data-ttu-id="16fab-363">因为基于序号的查找比命名查找更有效，它是效率低下调用`GetOrdinal`在循环内。</span><span class="sxs-lookup"><span data-stu-id="16fab-363">Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call `GetOrdinal` within a loop.</span></span> <span data-ttu-id="16fab-364">节省时间，可以调用`GetOrdinal`一次，并且将结果分配给整数变量在循环内使用。</span><span class="sxs-lookup"><span data-stu-id="16fab-364">Save time by calling `GetOrdinal` once and assigning the results to an integer variable for use within the loop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="16fab-365">下面的示例演示如何使用 <xref:System.Data.SqlClient.SqlDataReader.GetOrdinal%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="16fab-365">The following example demonstrates how to use the <xref:System.Data.SqlClient.SqlDataReader.GetOrdinal%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataReader.GetOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.GetOrdinal/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataReader.GetOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.GetOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="16fab-366">指定的名称不是有效的列名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-366">The name specified is not a valid column name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificFieldType">
      <MemberSignature Language="C#" Value="public override Type GetProviderSpecificFieldType (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetProviderSpecificFieldType(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificFieldType (i As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetProviderSpecificFieldType(int i);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificFieldType : int -&gt; Type" Usage="sqlDataReader.GetProviderSpecificFieldType i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-367">表示列序号的 <see cref="T:System.Int32" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-367">An <see cref="T:System.Int32" /> representing the column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-368">获取一个 <see langword="Object" />，它表示基础提供程序特定的字段类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-368">Gets an <see langword="Object" /> that is a representation of the underlying provider-specific field type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-369">获取一个 <see cref="T:System.Object" />，它表示基础提供程序特定的字段类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-369">Gets an <see cref="T:System.Object" /> that is a representation of the underlying provider-specific field type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValue">
      <MemberSignature Language="C#" Value="public override object GetProviderSpecificValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetProviderSpecificValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValue (i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetProviderSpecificValue(int i);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificValue : int -&gt; obj" Usage="sqlDataReader.GetProviderSpecificValue i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-370">表示列序号的 <see cref="T:System.Int32" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-370">An <see cref="T:System.Int32" /> representing the column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-371">获取一个表示基础提供程序特定值的 <see langword="Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-371">Gets an <see langword="Object" /> that is a representation of the underlying provider specific value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-372">一个 <see cref="T:System.Object" />，它表示基础提供程序特定值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-372">An <see cref="T:System.Object" /> that is a representation of the underlying provider specific value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValues">
      <MemberSignature Language="C#" Value="public override int GetProviderSpecificValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetProviderSpecificValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetProviderSpecificValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificValues : obj[] -&gt; int" Usage="sqlDataReader.GetProviderSpecificValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="16fab-373">要将列值复制到其中的 <see cref="T:System.Object" /> 数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-373">An array of <see cref="T:System.Object" /> into which to copy the column values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-374">获取表示基础提供程序特定值的对象的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-374">Gets an array of objects that are a representation of the underlying provider specific values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-375">对象数组，它表示基础提供程序特定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-375">The array of objects that are a representation of the underlying provider specific values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchemaTable();" />
      <MemberSignature Language="F#" Value="override this.GetSchemaTable : unit -&gt; System.Data.DataTable" Usage="sqlDataReader.GetSchemaTable " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.GetSchemaTable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="16fab-376">返回一个描述 <see cref="T:System.Data.DataTable" /> 的列元数据的 <see cref="T:System.Data.SqlClient.SqlDataReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-376">Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-377">一个描述列元数据的 <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-377">A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-378">有关<xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A>方法按以下顺序返回有关每个列的元数据：</span><span class="sxs-lookup"><span data-stu-id="16fab-378">For the <xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A> method returns metadata about each column in the following order:</span></span>  
  
|<span data-ttu-id="16fab-379">DataReader 列</span><span class="sxs-lookup"><span data-stu-id="16fab-379">DataReader column</span></span>|<span data-ttu-id="16fab-380">描述</span><span class="sxs-lookup"><span data-stu-id="16fab-380">Description</span></span>|  
|-----------------------|-----------------|  
|<span data-ttu-id="16fab-381">AllowDBNull</span><span class="sxs-lookup"><span data-stu-id="16fab-381">AllowDBNull</span></span>|<span data-ttu-id="16fab-382">如果使用者可以将列设置为 null 值或提供程序无法确定使用者是否可以将列设置为 null 的值设置。</span><span class="sxs-lookup"><span data-stu-id="16fab-382">Set if the consumer can set the column to a null value or if the provider cannot determine whether the consumer can set the column to a null value.</span></span> <span data-ttu-id="16fab-383">否则，不设置。</span><span class="sxs-lookup"><span data-stu-id="16fab-383">Otherwise, not set.</span></span> <span data-ttu-id="16fab-384">列可能包含 null 值，即使它不能设置为 null 值。</span><span class="sxs-lookup"><span data-stu-id="16fab-384">A column may contain null values, even if it cannot be set to a null value.</span></span>|  
|<span data-ttu-id="16fab-385">BaseCatalogName</span><span class="sxs-lookup"><span data-stu-id="16fab-385">BaseCatalogName</span></span>|<span data-ttu-id="16fab-386">包含的列的数据存储区中的目录的名称。</span><span class="sxs-lookup"><span data-stu-id="16fab-386">The name of the catalog in the data store that contains the column.</span></span> <span data-ttu-id="16fab-387">如果无法确定基本目录名称为 NULL。</span><span class="sxs-lookup"><span data-stu-id="16fab-387">NULL if the base catalog name cannot be determined.</span></span> <span data-ttu-id="16fab-388">此列的默认值为 null 值。</span><span class="sxs-lookup"><span data-stu-id="16fab-388">The default of this column is a null value.</span></span>|  
|<span data-ttu-id="16fab-389">BaseColumnName</span><span class="sxs-lookup"><span data-stu-id="16fab-389">BaseColumnName</span></span>|<span data-ttu-id="16fab-390">数据存储区中列的名称。</span><span class="sxs-lookup"><span data-stu-id="16fab-390">The name of the column in the data store.</span></span> <span data-ttu-id="16fab-391">这可能是不同的列名称使用别名时才 ColumnName 列中返回。</span><span class="sxs-lookup"><span data-stu-id="16fab-391">This might be different than the column name returned in the ColumnName column if an alias was used.</span></span> <span data-ttu-id="16fab-392">如果无法确定基本列名或列数据中的行集列是派生的但并不完全相同，如果存储一个 null 值。</span><span class="sxs-lookup"><span data-stu-id="16fab-392">A null value if the base column name cannot be determined or if the rowset column is derived, but not identical to, a column in the data store.</span></span> <span data-ttu-id="16fab-393">此列的默认值为 null 值。</span><span class="sxs-lookup"><span data-stu-id="16fab-393">The default of this column is a null value.</span></span>|  
|<span data-ttu-id="16fab-394">BaseSchemaName</span><span class="sxs-lookup"><span data-stu-id="16fab-394">BaseSchemaName</span></span>|<span data-ttu-id="16fab-395">包含的列的数据存储区中的架构的名称。</span><span class="sxs-lookup"><span data-stu-id="16fab-395">The name of the schema in the data store that contains the column.</span></span> <span data-ttu-id="16fab-396">如果无法确定基本架构名称，null 值。</span><span class="sxs-lookup"><span data-stu-id="16fab-396">A null value if the base schema name cannot be determined.</span></span> <span data-ttu-id="16fab-397">此列的默认值为 null 值。</span><span class="sxs-lookup"><span data-stu-id="16fab-397">The default of this column is a null value.</span></span>|  
|<span data-ttu-id="16fab-398">BaseServerName</span><span class="sxs-lookup"><span data-stu-id="16fab-398">BaseServerName</span></span>|<span data-ttu-id="16fab-399">通过使用 Microsoft SQL Server 的实例的名称<xref:System.Data.SqlClient.SqlDataReader>。</span><span class="sxs-lookup"><span data-stu-id="16fab-399">The name of the instance of Microsoft SQL Server used by the <xref:System.Data.SqlClient.SqlDataReader>.</span></span>|  
|<span data-ttu-id="16fab-400">BaseTableName</span><span class="sxs-lookup"><span data-stu-id="16fab-400">BaseTableName</span></span>|<span data-ttu-id="16fab-401">表或视图中包含的列的数据存储区的名称。</span><span class="sxs-lookup"><span data-stu-id="16fab-401">The name of the table or view in the data store that contains the column.</span></span> <span data-ttu-id="16fab-402">如果无法确定基表名称，null 值。</span><span class="sxs-lookup"><span data-stu-id="16fab-402">A null value if the base table name cannot be determined.</span></span> <span data-ttu-id="16fab-403">此列的默认值为 null 值。</span><span class="sxs-lookup"><span data-stu-id="16fab-403">The default of this column is a null value.</span></span>|  
|<span data-ttu-id="16fab-404">列名</span><span class="sxs-lookup"><span data-stu-id="16fab-404">ColumnName</span></span>|<span data-ttu-id="16fab-405">列; 的名称这可能不是唯一的。</span><span class="sxs-lookup"><span data-stu-id="16fab-405">The name of the column; this might not be unique.</span></span> <span data-ttu-id="16fab-406">如果这不能确定，则返回 null 值。</span><span class="sxs-lookup"><span data-stu-id="16fab-406">If this cannot be determined, a null value is returned.</span></span> <span data-ttu-id="16fab-407">此名称始终反映当前视图或命令文本中的列的最新重命名。</span><span class="sxs-lookup"><span data-stu-id="16fab-407">This name always reflects the most recent renaming of the column in the current view or command text.</span></span>|  
|<span data-ttu-id="16fab-408">ColumnOrdinal</span><span class="sxs-lookup"><span data-stu-id="16fab-408">ColumnOrdinal</span></span>|<span data-ttu-id="16fab-409">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="16fab-409">The zero-based ordinal of the column.</span></span> <span data-ttu-id="16fab-410">此列不能包含 null 值。</span><span class="sxs-lookup"><span data-stu-id="16fab-410">This column cannot contain a null value.</span></span>|  
|<span data-ttu-id="16fab-411">ColumnSize</span><span class="sxs-lookup"><span data-stu-id="16fab-411">ColumnSize</span></span>|<span data-ttu-id="16fab-412">列中值的最大可取长度。</span><span class="sxs-lookup"><span data-stu-id="16fab-412">The maximum possible length of a value in the column.</span></span> <span data-ttu-id="16fab-413">对于使用固定长度的数据类型的列，这是数据类型的大小。</span><span class="sxs-lookup"><span data-stu-id="16fab-413">For columns that use a fixed-length data type, this is the size of the data type.</span></span> <span data-ttu-id="16fab-414">有关`nvarchar(MAX)`， `varchar(MAX)`，和`varbinary(MAX)`列存储在 SQL Server 数据库中，最大大小为 2 GB。</span><span class="sxs-lookup"><span data-stu-id="16fab-414">For `nvarchar(MAX)`, `varchar(MAX)`, and `varbinary(MAX)` columns stored in a SQL Server database, the maximum size is 2GB.</span></span> <span data-ttu-id="16fab-415">如果这些列存储和访问文件，最大大小限制由文件系统。</span><span class="sxs-lookup"><span data-stu-id="16fab-415">If these columns are stored and accessed as files, the limit on maximum size is imposed by the file system.</span></span> <span data-ttu-id="16fab-416">此值更改时使用`Type System Version`连接字符串中的关键字。</span><span class="sxs-lookup"><span data-stu-id="16fab-416">This value changes when using the `Type System Version` keyword in the connection string.</span></span>  <span data-ttu-id="16fab-417">对新类型它们表示为下层类型。</span><span class="sxs-lookup"><span data-stu-id="16fab-417">For new types they are represented as downlevel types.</span></span> <span data-ttu-id="16fab-418">最大值数据类型返回的正常的 4k`nvarchar`和 8000 `varchar`。</span><span class="sxs-lookup"><span data-stu-id="16fab-418">The MAX data types return the normal 4k for `nvarchar` and 8000 for `varchar`.</span></span> <span data-ttu-id="16fab-419">有关详细信息，请参阅[TRANSACT-SQL 参考](/sql/t-sql/language-reference)。</span><span class="sxs-lookup"><span data-stu-id="16fab-419">For more information, see the [Transact-SQL reference](/sql/t-sql/language-reference).</span></span>|
|<span data-ttu-id="16fab-420">DataTypeName</span><span class="sxs-lookup"><span data-stu-id="16fab-420">DataTypeName</span></span>|<span data-ttu-id="16fab-421">返回一个表示指定列的数据类型的字符串。</span><span class="sxs-lookup"><span data-stu-id="16fab-421">Returns a string representing the data type of the specified column.</span></span>|  
|<span data-ttu-id="16fab-422">IsAliased</span><span class="sxs-lookup"><span data-stu-id="16fab-422">IsAliased</span></span>|<span data-ttu-id="16fab-423">`true`： 列名称是别名。</span><span class="sxs-lookup"><span data-stu-id="16fab-423">`true`: The column name is an alias.</span></span><br /><br /> <span data-ttu-id="16fab-424">`false`： 在列名称不是别名。</span><span class="sxs-lookup"><span data-stu-id="16fab-424">`false`: The column name is not an alias.</span></span>|  
|<span data-ttu-id="16fab-425">IsAutoIncrement</span><span class="sxs-lookup"><span data-stu-id="16fab-425">IsAutoIncrement</span></span>|<span data-ttu-id="16fab-426">`true`: 列将值分配给新行以固定的增量。</span><span class="sxs-lookup"><span data-stu-id="16fab-426">`true`: The column assigns values to new rows in fixed increments.</span></span><br /><br /> <span data-ttu-id="16fab-427">`false`: 列不会分配到新行以固定的增量值。</span><span class="sxs-lookup"><span data-stu-id="16fab-427">`false`: The column does not assign values to new rows in fixed increments.</span></span> <span data-ttu-id="16fab-428">此列的默认值是`false`。</span><span class="sxs-lookup"><span data-stu-id="16fab-428">The default of this column is `false`.</span></span>|  
|<span data-ttu-id="16fab-429">IsColumnSet</span><span class="sxs-lookup"><span data-stu-id="16fab-429">IsColumnSet</span></span>|<span data-ttu-id="16fab-430">`true`: 列是列集的成员的稀疏列。</span><span class="sxs-lookup"><span data-stu-id="16fab-430">`true`: The column is a sparse column that is a member of a column set.</span></span>|  
|<span data-ttu-id="16fab-431">IsExpression</span><span class="sxs-lookup"><span data-stu-id="16fab-431">IsExpression</span></span>|<span data-ttu-id="16fab-432">`true`: 列是表达式。</span><span class="sxs-lookup"><span data-stu-id="16fab-432">`true`: The column is an expression.</span></span><br /><br /> <span data-ttu-id="16fab-433">`false`: 列不是表达式。</span><span class="sxs-lookup"><span data-stu-id="16fab-433">`false`: The column is not an expression.</span></span>|  
|<span data-ttu-id="16fab-434">IsHidden</span><span class="sxs-lookup"><span data-stu-id="16fab-434">IsHidden</span></span>|<span data-ttu-id="16fab-435">`true`： 隐藏列。</span><span class="sxs-lookup"><span data-stu-id="16fab-435">`true`: The column is hidden.</span></span><br /><br /> <span data-ttu-id="16fab-436">`false`: 列不隐藏。</span><span class="sxs-lookup"><span data-stu-id="16fab-436">`false`: The column is not hidden.</span></span>|  
|<span data-ttu-id="16fab-437">IsIdentity</span><span class="sxs-lookup"><span data-stu-id="16fab-437">IsIdentity</span></span>|<span data-ttu-id="16fab-438">`true`: 列是标识列。</span><span class="sxs-lookup"><span data-stu-id="16fab-438">`true`: The column is an identity column.</span></span><br /><br /> <span data-ttu-id="16fab-439">`false`: 列不是标识列。</span><span class="sxs-lookup"><span data-stu-id="16fab-439">`false`: The column is not an identity column.</span></span>|  
|<span data-ttu-id="16fab-440">IsKey</span><span class="sxs-lookup"><span data-stu-id="16fab-440">IsKey</span></span>|<span data-ttu-id="16fab-441">`true`： 此列是一组的行集中的列，合起来看，唯一标识行。</span><span class="sxs-lookup"><span data-stu-id="16fab-441">`true`: The column is one of a set of columns in the rowset that, taken together, uniquely identify the row.</span></span> <span data-ttu-id="16fab-442">使用列集`IsKey`设置为`true`必须唯一地标识行集中的行。</span><span class="sxs-lookup"><span data-stu-id="16fab-442">The set of columns with `IsKey` set to `true` must uniquely identify a row in the rowset.</span></span> <span data-ttu-id="16fab-443">没有任何要求这组列是列的最小集。</span><span class="sxs-lookup"><span data-stu-id="16fab-443">There is no requirement that this set of columns is a minimal set of columns.</span></span> <span data-ttu-id="16fab-444">这组列可能会生成从基表主键、 唯一约束或唯一索引。</span><span class="sxs-lookup"><span data-stu-id="16fab-444">This set of columns may be generated from a base table primary key, a unique constraint or a unique index.</span></span><br /><br /> <span data-ttu-id="16fab-445">`false`: 列不需要唯一标识行。</span><span class="sxs-lookup"><span data-stu-id="16fab-445">`false`: The column is not required to uniquely identify the row.</span></span>|  
|<span data-ttu-id="16fab-446">IsLong</span><span class="sxs-lookup"><span data-stu-id="16fab-446">IsLong</span></span>|<span data-ttu-id="16fab-447">`true`： 此列包含二进制长对象 (BLOB)，其中包含非常长的数据。</span><span class="sxs-lookup"><span data-stu-id="16fab-447">`true`: The column contains a Binary Long Object (BLOB) that contains very long data.</span></span> <span data-ttu-id="16fab-448">很长数据的定义是特定于提供程序。</span><span class="sxs-lookup"><span data-stu-id="16fab-448">The definition of very long data is provider-specific.</span></span><br /><br /> <span data-ttu-id="16fab-449">`false`: 列不包含二进制长对象 (BLOB)，其中包含非常长的数据。</span><span class="sxs-lookup"><span data-stu-id="16fab-449">`false`: The column does not contain a Binary Long Object (BLOB) that contains very long data.</span></span>|  
|<span data-ttu-id="16fab-450">为只读</span><span class="sxs-lookup"><span data-stu-id="16fab-450">IsReadOnly</span></span>|<span data-ttu-id="16fab-451">`true`： 不能修改的列。</span><span class="sxs-lookup"><span data-stu-id="16fab-451">`true`: The column cannot be modified.</span></span><br /><br /> <span data-ttu-id="16fab-452">`false`： 可以修改的列。</span><span class="sxs-lookup"><span data-stu-id="16fab-452">`false`: The column can be modified.</span></span>|  
|<span data-ttu-id="16fab-453">IsRowVersion</span><span class="sxs-lookup"><span data-stu-id="16fab-453">IsRowVersion</span></span>|<span data-ttu-id="16fab-454">`true`: 列包含无法写入到的永久行标识符，且具有行的标识到除任何有意义的值。</span><span class="sxs-lookup"><span data-stu-id="16fab-454">`true`: The column contains a persistent row identifier that cannot be written to, and has no meaningful value except to identity the row.</span></span><br /><br /> <span data-ttu-id="16fab-455">`false`: 列不包含无法写入到的永久行标识符，但其标识行以外没有有意义的值。</span><span class="sxs-lookup"><span data-stu-id="16fab-455">`false`: The column does not contain a persistent row identifier that cannot be written to, and has no meaningful value except to identity the row.</span></span>|  
|<span data-ttu-id="16fab-456">是唯一的</span><span class="sxs-lookup"><span data-stu-id="16fab-456">IsUnique</span></span>|<span data-ttu-id="16fab-457">`true`： 列的类型是`timestamp`。</span><span class="sxs-lookup"><span data-stu-id="16fab-457">`true`: Column is of type `timestamp`.</span></span><br /><br /> <span data-ttu-id="16fab-458">`false`： 列的类型不是`timestamp`。</span><span class="sxs-lookup"><span data-stu-id="16fab-458">`false`: Column is not of type `timestamp`.</span></span>|  
|<span data-ttu-id="16fab-459">NonVersionedProviderType</span><span class="sxs-lookup"><span data-stu-id="16fab-459">NonVersionedProviderType</span></span>|<span data-ttu-id="16fab-460">而不考虑当前列的类型`Type System Version`连接字符串中指定。</span><span class="sxs-lookup"><span data-stu-id="16fab-460">The type of the column irrespective of the current `Type System Version` specified in the connection string.</span></span> <span data-ttu-id="16fab-461">返回的值是从<xref:System.Data.SqlDbType>枚举。</span><span class="sxs-lookup"><span data-stu-id="16fab-461">The returned value is from the <xref:System.Data.SqlDbType> enumeration.</span></span>|  
|<span data-ttu-id="16fab-462">NumericPrecision</span><span class="sxs-lookup"><span data-stu-id="16fab-462">NumericPrecision</span></span>|<span data-ttu-id="16fab-463">如果`ProviderType`是数值数据类型，这是列的最大精度。</span><span class="sxs-lookup"><span data-stu-id="16fab-463">If `ProviderType` is a numeric data type, this is the maximum precision of the column.</span></span> <span data-ttu-id="16fab-464">精度取决于列的定义。</span><span class="sxs-lookup"><span data-stu-id="16fab-464">The precision depends on the definition of the column.</span></span> <span data-ttu-id="16fab-465">如果`ProviderType`不是数值数据类型，这是 255。</span><span class="sxs-lookup"><span data-stu-id="16fab-465">If `ProviderType` is not a numeric data type, this is 255.</span></span>|  
|<span data-ttu-id="16fab-466">NumericScale</span><span class="sxs-lookup"><span data-stu-id="16fab-466">NumericScale</span></span>|<span data-ttu-id="16fab-467">如果`ProviderType`DBTYPE_DECIMAL 或 DBTYPE_NUMERIC，小数点右侧的位数。</span><span class="sxs-lookup"><span data-stu-id="16fab-467">If `ProviderType` is DBTYPE_DECIMAL or DBTYPE_NUMERIC, the number of digits to the right of the decimal point.</span></span> <span data-ttu-id="16fab-468">否则，这就是 255。</span><span class="sxs-lookup"><span data-stu-id="16fab-468">Otherwise, this is 255.</span></span>|  
|<span data-ttu-id="16fab-469">ProviderSpecificDataType</span><span class="sxs-lookup"><span data-stu-id="16fab-469">ProviderSpecificDataType</span></span>|<span data-ttu-id="16fab-470">返回基于的列的特定于提供程序的数据类型`Type System Version`连接字符串中的关键字。</span><span class="sxs-lookup"><span data-stu-id="16fab-470">Returns the provider-specific data type of the column based on the `Type System Version` keyword in the connection string.</span></span>|  
|<span data-ttu-id="16fab-471">提供程序类型</span><span class="sxs-lookup"><span data-stu-id="16fab-471">ProviderType</span></span>|<span data-ttu-id="16fab-472">列的数据类型的指示符。</span><span class="sxs-lookup"><span data-stu-id="16fab-472">The indicator of the column's data type.</span></span> <span data-ttu-id="16fab-473">如果列的数据类型而异行，这必须是对象。</span><span class="sxs-lookup"><span data-stu-id="16fab-473">If the data type of the column varies from row to row, this must be Object.</span></span> <span data-ttu-id="16fab-474">此列不能包含 null 值。</span><span class="sxs-lookup"><span data-stu-id="16fab-474">This column cannot contain a null value.</span></span>|  
|<span data-ttu-id="16fab-475">UdtAssemblyQualifiedName</span><span class="sxs-lookup"><span data-stu-id="16fab-475">UdtAssemblyQualifiedName</span></span>|<span data-ttu-id="16fab-476">如果列是用户定义类型 (UDT)，这是为每个 UDT 的程序集限定的名称<xref:System.Type.AssemblyQualifiedName%2A>。</span><span class="sxs-lookup"><span data-stu-id="16fab-476">If the column is a user-defined type (UDT), this is the qualified name of the UDT's assembly as per <xref:System.Type.AssemblyQualifiedName%2A>.</span></span> <span data-ttu-id="16fab-477">如果该列不是 UDT，则为 null。</span><span class="sxs-lookup"><span data-stu-id="16fab-477">If the column is not a UDT, this is null.</span></span>|  
|<span data-ttu-id="16fab-478">XmlSchemaCollectionDatabase</span><span class="sxs-lookup"><span data-stu-id="16fab-478">XmlSchemaCollectionDatabase</span></span>|<span data-ttu-id="16fab-479">此 XML 实例的架构集合所在的位置，如果行中包含 XML 列的相关信息的数据库的名称。</span><span class="sxs-lookup"><span data-stu-id="16fab-479">The name of the database where the schema collection for this XML instance is located, if the row contains information about an XML column.</span></span> <span data-ttu-id="16fab-480">此值是`null`(`Nothing`在 Visual Basic 中) 如果在当前数据库中定义的集合。</span><span class="sxs-lookup"><span data-stu-id="16fab-480">This value is `null` (`Nothing` in Visual Basic) if the collection is defined within the current database.</span></span> <span data-ttu-id="16fab-481">如果没有架构集合，在这种情况下，这样做也为 null`XmlSchemaCollectionName`和`XmlSchemaCollectionOwningSchema`列也均为空。</span><span class="sxs-lookup"><span data-stu-id="16fab-481">It is also null if there is no schema collection, in which case the `XmlSchemaCollectionName` and `XmlSchemaCollectionOwningSchema` columns are also null.</span></span>|  
|<span data-ttu-id="16fab-482">XmlSchemaCollectionName</span><span class="sxs-lookup"><span data-stu-id="16fab-482">XmlSchemaCollectionName</span></span>|<span data-ttu-id="16fab-483">此 XML 实例中，如果行中包含 XML 列的相关信息的架构集合的名称。</span><span class="sxs-lookup"><span data-stu-id="16fab-483">The name of the schema collection for this XML instance, if the row contains information about an XML column.</span></span> <span data-ttu-id="16fab-484">此值是`null`(`Nothing`在 Visual Basic 中) 是否存在任何关联的架构集合。</span><span class="sxs-lookup"><span data-stu-id="16fab-484">This value is `null` (`Nothing` in Visual Basic) if there is no associated schema collection.</span></span> <span data-ttu-id="16fab-485">如果值为 null，`XmlSchemaCollectionDatabase`和`XmlSchemaCollectionOwningSchema`列也均为空。</span><span class="sxs-lookup"><span data-stu-id="16fab-485">If the value is null, the `XmlSchemaCollectionDatabase` and `XmlSchemaCollectionOwningSchema` columns are also null.</span></span>|  
|<span data-ttu-id="16fab-486">XmlSchemaCollectionOwningSchema</span><span class="sxs-lookup"><span data-stu-id="16fab-486">XmlSchemaCollectionOwningSchema</span></span>|<span data-ttu-id="16fab-487">此 XML 实例的架构集合所在的位置，如果行中包含 XML 列的相关信息所属关系架构。</span><span class="sxs-lookup"><span data-stu-id="16fab-487">The owning relational schema where the schema collection for this XML instance is located, if the row contains information about an XML column.</span></span> <span data-ttu-id="16fab-488">此值是`null`(`Nothing`在 Visual Basic 中) 如果在当前数据库中定义的集合。</span><span class="sxs-lookup"><span data-stu-id="16fab-488">This value is `null` (`Nothing` in Visual Basic) if the collection is defined within the current database.</span></span> <span data-ttu-id="16fab-489">如果没有架构集合，在这种情况下，这样做也为 null`XmlSchemaCollectionDatabase`和`XmlSchemaCollectionName`列也均为空。</span><span class="sxs-lookup"><span data-stu-id="16fab-489">It is also null if there is no schema collection, in which case the `XmlSchemaCollectionDatabase` and `XmlSchemaCollectionName` columns are also null.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="16fab-490">若要确保元数据列返回正确的信息，必须调用<xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>与`behavior`参数设置为`KeyInfo`。</span><span class="sxs-lookup"><span data-stu-id="16fab-490">To make sure that metadata columns return the correct information, you must call <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> with the `behavior` parameter set to `KeyInfo`.</span></span> <span data-ttu-id="16fab-491">否则，一些架构表中的列可能返回默认情况下，为 null，或不正确数据。</span><span class="sxs-lookup"><span data-stu-id="16fab-491">Otherwise, some of the columns in the schema table may return default, null, or incorrect data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="16fab-492">
            <see cref="T:System.Data.SqlClient.SqlDataReader" /> 已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-492">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlBinary">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlBinary GetSqlBinary (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlBinary GetSqlBinary(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlBinary (i As Integer) As SqlBinary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlBinary GetSqlBinary(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlBinary : int -&gt; System.Data.SqlTypes.SqlBinary&#xA;override this.GetSqlBinary : int -&gt; System.Data.SqlTypes.SqlBinary" Usage="sqlDataReader.GetSqlBinary i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBinary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-493">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-493">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-494">获取指定列的 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-494">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlBinary" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-495">表示为 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-495">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlBinary" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-496">不执行任何转换;因此检索到的数据必须已经是二进制结构或生成异常。</span><span class="sxs-lookup"><span data-stu-id="16fab-496">No conversions are performed; therefore the data retrieved must already be a binary structure or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlBoolean">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlBoolean GetSqlBoolean (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlBoolean GetSqlBoolean(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlBoolean (i As Integer) As SqlBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlBoolean GetSqlBoolean(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlBoolean : int -&gt; System.Data.SqlTypes.SqlBoolean&#xA;override this.GetSqlBoolean : int -&gt; System.Data.SqlTypes.SqlBoolean" Usage="sqlDataReader.GetSqlBoolean i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-497">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-497">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-498">获取指定列的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-498">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-499">列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-499">The value of the column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-500">不执行任何转换;因此，检索到的数据必须已经是一个布尔值或生成异常。</span><span class="sxs-lookup"><span data-stu-id="16fab-500">No conversions are performed; therefore, the data retrieved must already be a Boolean or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlByte">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlByte GetSqlByte (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlByte GetSqlByte(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlByte (i As Integer) As SqlByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlByte GetSqlByte(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlByte : int -&gt; System.Data.SqlTypes.SqlByte&#xA;override this.GetSqlByte : int -&gt; System.Data.SqlTypes.SqlByte" Usage="sqlDataReader.GetSqlByte i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-501">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-501">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-502">获取指定列的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-502">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlByte" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-503">表示为 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-503">The value of the column expressed as a  <see cref="T:System.Data.SqlTypes.SqlByte" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-504">不执行任何转换;因此检索到的数据必须已经是一个字节，或生成异常。</span><span class="sxs-lookup"><span data-stu-id="16fab-504">No conversions are performed; therefore the data retrieved must already be a byte, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlBytes">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlBytes GetSqlBytes (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.SqlTypes.SqlBytes GetSqlBytes(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlBytes(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlBytes (i As Integer) As SqlBytes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlBytes ^ GetSqlBytes(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlBytes : int -&gt; System.Data.SqlTypes.SqlBytes&#xA;override this.GetSqlBytes : int -&gt; System.Data.SqlTypes.SqlBytes" Usage="sqlDataReader.GetSqlBytes i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBytes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-505">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-505">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-506">获取指定列的 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-506">Gets the value of the specified column as <see cref="T:System.Data.SqlTypes.SqlBytes" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-507">表示为 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 的列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-507">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlBytes" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlChars">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlChars GetSqlChars (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.SqlTypes.SqlChars GetSqlChars(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlChars(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlChars (i As Integer) As SqlChars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlChars ^ GetSqlChars(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlChars : int -&gt; System.Data.SqlTypes.SqlChars&#xA;override this.GetSqlChars : int -&gt; System.Data.SqlTypes.SqlChars" Usage="sqlDataReader.GetSqlChars i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlChars</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-508">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-508">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-509">获取指定列的 <see cref="T:System.Data.SqlTypes.SqlChars" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-509">Gets the value of the specified column as <see cref="T:System.Data.SqlTypes.SqlChars" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-510">表示为 <see cref="T:System.Data.SqlTypes.SqlChars" /> 的列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-510">The value of the column expressed as a  <see cref="T:System.Data.SqlTypes.SqlChars" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDateTime">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlDateTime GetSqlDateTime (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlDateTime GetSqlDateTime(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDateTime (i As Integer) As SqlDateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlDateTime GetSqlDateTime(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlDateTime : int -&gt; System.Data.SqlTypes.SqlDateTime&#xA;override this.GetSqlDateTime : int -&gt; System.Data.SqlTypes.SqlDateTime" Usage="sqlDataReader.GetSqlDateTime i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlDateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-511">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-511">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-512">获取指定列的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-512">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-513">表示为 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-513">The value of the column expressed as a  <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-514">不执行任何转换;因此，检索到的数据必须已经是日期/时间值，或生成异常。</span><span class="sxs-lookup"><span data-stu-id="16fab-514">No conversions are performed; therefore, the data retrieved must already be a date/time value, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDecimal">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlDecimal GetSqlDecimal (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlDecimal GetSqlDecimal(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDecimal (i As Integer) As SqlDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlDecimal GetSqlDecimal(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlDecimal : int -&gt; System.Data.SqlTypes.SqlDecimal&#xA;override this.GetSqlDecimal : int -&gt; System.Data.SqlTypes.SqlDecimal" Usage="sqlDataReader.GetSqlDecimal i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-515">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-515">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-516">获取指定列的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-516">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-517">表示为 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-517">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-518">不执行任何转换;因此，检索到的数据必须已经是一个十进制值，或生成异常。</span><span class="sxs-lookup"><span data-stu-id="16fab-518">No conversions are performed; therefore, the data retrieved must already be a decimal value, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDouble">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlDouble GetSqlDouble (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlDouble GetSqlDouble(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDouble (i As Integer) As SqlDouble" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlDouble GetSqlDouble(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlDouble : int -&gt; System.Data.SqlTypes.SqlDouble&#xA;override this.GetSqlDouble : int -&gt; System.Data.SqlTypes.SqlDouble" Usage="sqlDataReader.GetSqlDouble i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlDouble</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-519">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-519">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-520">获取指定列的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-520">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlDouble" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-521">表示为 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-521">The value of the column expressed as a  <see cref="T:System.Data.SqlTypes.SqlDouble" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-522">不执行任何转换;因此，检索到的数据必须已经是双精度浮点数，或生成异常。</span><span class="sxs-lookup"><span data-stu-id="16fab-522">No conversions are performed; therefore, the data retrieved must already be a double-precision floating-point number, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlGuid">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlGuid GetSqlGuid (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlGuid GetSqlGuid(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlGuid (i As Integer) As SqlGuid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlGuid GetSqlGuid(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlGuid : int -&gt; System.Data.SqlTypes.SqlGuid&#xA;override this.GetSqlGuid : int -&gt; System.Data.SqlTypes.SqlGuid" Usage="sqlDataReader.GetSqlGuid i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlGuid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-523">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-523">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-524">获取指定列的 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-524">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlGuid" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-525">表示为 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-525">The value of the column expressed as a  <see cref="T:System.Data.SqlTypes.SqlGuid" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-526">不执行任何转换;因此，检索到的数据必须已经是一个 GUID，或生成异常。</span><span class="sxs-lookup"><span data-stu-id="16fab-526">No conversions are performed; therefore, the data retrieved must already be a GUID, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlInt16">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlInt16 GetSqlInt16 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlInt16 GetSqlInt16(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlInt16 (i As Integer) As SqlInt16" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlInt16 GetSqlInt16(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlInt16 : int -&gt; System.Data.SqlTypes.SqlInt16&#xA;override this.GetSqlInt16 : int -&gt; System.Data.SqlTypes.SqlInt16" Usage="sqlDataReader.GetSqlInt16 i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-527">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-527">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-528">获取指定列的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-528">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlInt16" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-529">表示为 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-529">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlInt16" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-530">不执行任何转换;因此，检索到的数据必须已经是一个 16 位有符号的整数，或生成异常。</span><span class="sxs-lookup"><span data-stu-id="16fab-530">No conversions are performed; therefore, the data retrieved must already be a 16-bit signed integer, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlInt32">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlInt32 GetSqlInt32 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlInt32 GetSqlInt32(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlInt32 (i As Integer) As SqlInt32" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlInt32 GetSqlInt32(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlInt32 : int -&gt; System.Data.SqlTypes.SqlInt32&#xA;override this.GetSqlInt32 : int -&gt; System.Data.SqlTypes.SqlInt32" Usage="sqlDataReader.GetSqlInt32 i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-531">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-531">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-532">获取指定列的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-532">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlInt32" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-533">表示为 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-533">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlInt32" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-534">不执行任何转换;因此检索到的数据必须已经是一个 32 位有符号的整数，或生成异常。</span><span class="sxs-lookup"><span data-stu-id="16fab-534">No conversions are performed; therefore the data retrieved must already be a 32-bit signed integer, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlInt64">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlInt64 GetSqlInt64 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlInt64 GetSqlInt64(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlInt64 (i As Integer) As SqlInt64" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlInt64 GetSqlInt64(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlInt64 : int -&gt; System.Data.SqlTypes.SqlInt64&#xA;override this.GetSqlInt64 : int -&gt; System.Data.SqlTypes.SqlInt64" Usage="sqlDataReader.GetSqlInt64 i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-535">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-535">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-536">获取指定列的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-536">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlInt64" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-537">表示为 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-537">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlInt64" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-538">不执行任何转换;因此，检索到的数据必须已经是 64 位带符号的整数，或生成异常。</span><span class="sxs-lookup"><span data-stu-id="16fab-538">No conversions are performed; therefore, the data retrieved must already be a 64-bit signed integer, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlMoney">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlMoney GetSqlMoney (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlMoney GetSqlMoney(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlMoney (i As Integer) As SqlMoney" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlMoney GetSqlMoney(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlMoney : int -&gt; System.Data.SqlTypes.SqlMoney&#xA;override this.GetSqlMoney : int -&gt; System.Data.SqlTypes.SqlMoney" Usage="sqlDataReader.GetSqlMoney i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlMoney</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-539">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-539">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-540">获取指定列的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-540">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlMoney" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-541">表示为 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-541">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlMoney" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-542">不执行任何转换;因此，检索到的数据必须已经是一个十进制值，或生成异常。</span><span class="sxs-lookup"><span data-stu-id="16fab-542">No conversions are performed; therefore, the data retrieved must already be a decimal value, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlSingle">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlSingle GetSqlSingle (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlSingle GetSqlSingle(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlSingle (i As Integer) As SqlSingle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlSingle GetSqlSingle(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlSingle : int -&gt; System.Data.SqlTypes.SqlSingle&#xA;override this.GetSqlSingle : int -&gt; System.Data.SqlTypes.SqlSingle" Usage="sqlDataReader.GetSqlSingle i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlSingle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-543">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-543">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-544">获取指定列的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-544">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlSingle" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-545">表示为 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-545">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlSingle" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-546">不执行任何转换;因此，检索到的数据必须已经是单精度浮点数，或生成异常。</span><span class="sxs-lookup"><span data-stu-id="16fab-546">No conversions are performed; therefore, the data retrieved must already be a single precision floating point number, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlString">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlString GetSqlString (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlString GetSqlString(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlString (i As Integer) As SqlString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlString GetSqlString(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlString : int -&gt; System.Data.SqlTypes.SqlString&#xA;override this.GetSqlString : int -&gt; System.Data.SqlTypes.SqlString" Usage="sqlDataReader.GetSqlString i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-547">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-547">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-548">获取指定列的 <see cref="T:System.Data.SqlTypes.SqlString" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-548">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlString" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-549">表示为 <see cref="T:System.Data.SqlTypes.SqlString" /> 的列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-549">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlString" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-550">不执行任何转换;因此，检索到的数据必须已经是一个字符串，或生成异常。</span><span class="sxs-lookup"><span data-stu-id="16fab-550">No conversions are performed; therefore, the data retrieved must already be a string, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlValue">
      <MemberSignature Language="C#" Value="public virtual object GetSqlValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetSqlValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlValue (i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetSqlValue(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlValue : int -&gt; obj&#xA;override this.GetSqlValue : int -&gt; obj" Usage="sqlDataReader.GetSqlValue i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-551">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-551">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-552">返回指定列中 SQL Server 类型的数据值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-552">Returns the data value in the specified column as a SQL Server type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-553">表示为 <see cref="T:System.Data.SqlDbType" /> 的列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-553">The value of the column expressed as a <see cref="T:System.Data.SqlDbType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-554"><xref:System.Data.SqlClient.SqlDataReader.GetSqlValue%2A> 返回的数据使用本机 SQL Server 类型。</span><span class="sxs-lookup"><span data-stu-id="16fab-554"><xref:System.Data.SqlClient.SqlDataReader.GetSqlValue%2A> returns data using the native SQL Server types.</span></span> <span data-ttu-id="16fab-555">若要检索使用.NET Framework 类型的数据，请参阅<xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>。</span><span class="sxs-lookup"><span data-stu-id="16fab-555">To retrieve data using the .NET Framework types, see <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlValues">
      <MemberSignature Language="C#" Value="public virtual int GetSqlValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetSqlValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetSqlValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlValues : obj[] -&gt; int&#xA;override this.GetSqlValues : obj[] -&gt; int" Usage="sqlDataReader.GetSqlValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="16fab-556">要将值复制到其中的 <see cref="T:System.Object" /> 数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-556">An array of <see cref="T:System.Object" /> into which to copy the values.</span>
          </span>
          <span data-ttu-id="16fab-557">这些列值表示为 SQL Server 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-557">The column values are expressed as SQL Server types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-558">填充包含记录中所有列的值的 <see cref="T:System.Object" /> 数组，这些值表示为 SQL Server 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-558">Fills an array of <see cref="T:System.Object" /> that contains the values for all the columns in the record, expressed as SQL Server types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-559">表示复制的列数的整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-559">An integer indicating the number of columns copied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-560">返回一个调用，而不 CLR 类型系统中使用 SQL 类型系统中的记录中的所有列的值。</span><span class="sxs-lookup"><span data-stu-id="16fab-560">Returns the values for all the columns in the record in a single call, using the SQL type system instead of the CLR type system.</span></span> <span data-ttu-id="16fab-561">长度<xref:System.Object>数组不需要以匹配的记录中的列数。</span><span class="sxs-lookup"><span data-stu-id="16fab-561">The length of the <xref:System.Object> array does not need to match the number of columns in the record.</span></span> <span data-ttu-id="16fab-562">可以将传递<xref:System.Object>数组，其中包含的记录中包含的列数少于。</span><span class="sxs-lookup"><span data-stu-id="16fab-562">You can pass an <xref:System.Object> array that contains fewer than the number of columns contained in the record.</span></span> <span data-ttu-id="16fab-563">数据量<xref:System.Object>数组保存复制到起始位置的列序号 0 的数组。</span><span class="sxs-lookup"><span data-stu-id="16fab-563">Only the amount of data the <xref:System.Object> array holds is copied to the array, starting at the column with ordinal 0.</span></span> <span data-ttu-id="16fab-564">你还可以传递<xref:System.Object>其长度是多个结果行中包含的列数的数组。</span><span class="sxs-lookup"><span data-stu-id="16fab-564">You can also pass an <xref:System.Object> array whose length is more than the number of columns contained in the resulting row.</span></span> <span data-ttu-id="16fab-565">任何剩余的列均保持不变。</span><span class="sxs-lookup"><span data-stu-id="16fab-565">Any remaining columns are untouched.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="16fab-566">
            <paramref name="values" /> 为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-566">
              <paramref name="values" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlXml">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlXml GetSqlXml (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.SqlTypes.SqlXml GetSqlXml(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlXml(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlXml (i As Integer) As SqlXml" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlXml ^ GetSqlXml(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetSqlXml : int -&gt; System.Data.SqlTypes.SqlXml&#xA;override this.GetSqlXml : int -&gt; System.Data.SqlTypes.SqlXml" Usage="sqlDataReader.GetSqlXml i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlXml</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-567">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-567">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-568">获取指定列的 XML 值形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-568">Gets the value of the specified column as an XML value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-569">包含相应字段中存储的 XML 的 <see cref="T:System.Data.SqlTypes.SqlXml" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-569">A <see cref="T:System.Data.SqlTypes.SqlXml" /> value that contains the XML stored within the corresponding field.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-570">不执行任何转换;因此，检索到的数据必须已经是一个 XML 值。</span><span class="sxs-lookup"><span data-stu-id="16fab-570">No conversions are performed; therefore, the data retrieved must already be an XML value.</span></span>  
  
 <span data-ttu-id="16fab-571">调用<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>来调用此方法之前检查 null 值。</span><span class="sxs-lookup"><span data-stu-id="16fab-571">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="16fab-572">传递的索引在 0 至 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围之外。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-572">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="16fab-573">已尝试读取或访问关闭的 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 中的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-573">An attempt was made to read or access columns in a closed <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="16fab-574">检索的数据与 <see cref="T:System.Data.SqlTypes.SqlXml" /> 类型不兼容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-574">The retrieved data is not compatible with the <see cref="T:System.Data.SqlTypes.SqlXml" /> type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetStream (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetStream(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetStream(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStream (i As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ GetStream(int i);" />
      <MemberSignature Language="F#" Value="override this.GetStream : int -&gt; System.IO.Stream" Usage="sqlDataReader.GetStream i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-575">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-575">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-576">检索作为 <see cref="T:System.IO.Stream" /> 的二进制、图像、varbinary、UDT 和变量数据类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-576">Retrieves binary, image, varbinary, UDT, and variant data types as a <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-577">一个流对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-577">A stream object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-578"><xref:System.IO.Stream.ReadTimeout%2A> 默认为的值<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>; 但可以修改<xref:System.IO.Stream.ReadTimeout%2A>通过<xref:System.Data.SqlClient.SqlDataReader.GetStream%2A>。</span><span class="sxs-lookup"><span data-stu-id="16fab-578"><xref:System.IO.Stream.ReadTimeout%2A> defaults to the value of <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>; but you can modify <xref:System.IO.Stream.ReadTimeout%2A> via <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A>.</span></span>  
  
 <span data-ttu-id="16fab-579">Null 值将返回一个空 （零个字节为单位） 为<xref:System.IO.Stream>。</span><span class="sxs-lookup"><span data-stu-id="16fab-579">Null values will be returned as an empty (zero bytes) <xref:System.IO.Stream>.</span></span>  
  
 <span data-ttu-id="16fab-580"><xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> 将引发<xref:System.InvalidOperationException>异常时返回的对象上使用<xref:System.Data.SqlClient.SqlDataReader.GetStream%2A>时<xref:System.Data.CommandBehavior.SequentialAccess>生效。</span><span class="sxs-lookup"><span data-stu-id="16fab-580"><xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> will raise an <xref:System.InvalidOperationException> exception when used on an object returned by <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A> when <xref:System.Data.CommandBehavior.SequentialAccess> is in effect.</span></span>  
  
 <span data-ttu-id="16fab-581"><xref:System.Data.SqlClient.SqlException> 从引发异常<xref:System.IO.Stream>作为引发<xref:System.IO.IOException>异常; 请检查内部异常以<xref:System.Data.SqlClient.SqlException>。</span><span class="sxs-lookup"><span data-stu-id="16fab-581"><xref:System.Data.SqlClient.SqlException> exceptions raised from <xref:System.IO.Stream> are thrown as <xref:System.IO.IOException> exceptions; check the inner exception for the <xref:System.Data.SqlClient.SqlException>.</span></span>  
  
 <span data-ttu-id="16fab-582">以下<xref:System.IO.Stream>成员不是可用于返回的对象<xref:System.Data.SqlClient.SqlDataReader.GetStream%2A>:</span><span class="sxs-lookup"><span data-stu-id="16fab-582">The following <xref:System.IO.Stream> members are not available for objects returned by <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A>:</span></span>  
  
-   <span data-ttu-id="16fab-583">BeginWrite</span><span class="sxs-lookup"><span data-stu-id="16fab-583">BeginWrite</span></span>  
  
-   <span data-ttu-id="16fab-584">EndWrite</span><span class="sxs-lookup"><span data-stu-id="16fab-584">EndWrite</span></span>  
  
-   <span data-ttu-id="16fab-585">长度</span><span class="sxs-lookup"><span data-stu-id="16fab-585">Length</span></span>  
  
-   <span data-ttu-id="16fab-586">位置</span><span class="sxs-lookup"><span data-stu-id="16fab-586">Position</span></span>  
  
-   <span data-ttu-id="16fab-587">查找</span><span class="sxs-lookup"><span data-stu-id="16fab-587">Seek</span></span>  
  
-   <span data-ttu-id="16fab-588">SetLength</span><span class="sxs-lookup"><span data-stu-id="16fab-588">SetLength</span></span>  
  
-   <span data-ttu-id="16fab-589">Write</span><span class="sxs-lookup"><span data-stu-id="16fab-589">Write</span></span>  
  
-   <span data-ttu-id="16fab-590">WriteByte</span><span class="sxs-lookup"><span data-stu-id="16fab-590">WriteByte</span></span>  
  
-   <span data-ttu-id="16fab-591">WriteTimeout</span><span class="sxs-lookup"><span data-stu-id="16fab-591">WriteTimeout</span></span>  
  
 <span data-ttu-id="16fab-592">当连接属性`ContextConnection=true`，<xref:System.Data.SqlClient.SqlDataReader.GetStream%2A>仅支持连续两个同步的数据检索 (<xref:System.Data.CommandBehavior.SequentialAccess>) 和非连续 (<xref:System.Data.CommandBehavior.Default>) 访问。</span><span class="sxs-lookup"><span data-stu-id="16fab-592">When the connection property `ContextConnection=true`, <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A> only supports synchronous data retrieval for both sequential (<xref:System.Data.CommandBehavior.SequentialAccess>) and non-sequential (<xref:System.Data.CommandBehavior.Default>) access.</span></span>  
  
 <span data-ttu-id="16fab-593">有关详细信息，请参阅[SqlClient 流支持](~/docs/framework/data/adonet/sqlclient-streaming-support.md)。</span><span class="sxs-lookup"><span data-stu-id="16fab-593">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="16fab-594">连接中断或在数据检索期间已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-594">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="16fab-595">数据检索期间，<see cref="T:System.Data.SqlClient.SqlDataReader" /> 处于关闭状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-595">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="16fab-596">没有要读取的就绪数据 (例如，第一个 <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> 未被调用或返回错误)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-596">There is no data ready to be read (for example, the first <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="16fab-597">按顺序模式尝试读取上一步骤中读取的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-597">Tried to read a previously-read column in sequential mode.</span>
          </span>
          <span data-ttu-id="16fab-598">没有正在进行的异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-598">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="16fab-599">以顺序模式运行时，这适用于所有 Get\* 方法，读取流时也可对其进行调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-599">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="16fab-600">尝试读取不存在的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-600">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="16fab-601">返回的类型不属于以下类型之一：</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-601">The returned type was not one of the types below:</span>
          </span>
          <span data-ttu-id="16fab-602">-   binary</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-602">-   binary</span>
          </span>
          <span data-ttu-id="16fab-603">-   image</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-603">-   image</span>
          </span>
          <span data-ttu-id="16fab-604">-   varbinary</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-604">-   varbinary</span>
          </span>
          <span data-ttu-id="16fab-605">-   udt</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-605">-   udt</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(int i);" />
      <MemberSignature Language="F#" Value="override this.GetString : int -&gt; string" Usage="sqlDataReader.GetString i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetString(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-606">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-606">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-607">获取指定列的字符串形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-607">Gets the value of the specified column as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-608">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-608">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-609">不执行任何转换;因此，检索到的数据必须已经是一个字符串。</span><span class="sxs-lookup"><span data-stu-id="16fab-609">No conversions are performed; therefore, the data retrieved must already be a string.</span></span>  
  
 <span data-ttu-id="16fab-610">调用<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>来调用此方法之前检查 null 值。</span><span class="sxs-lookup"><span data-stu-id="16fab-610">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="16fab-611">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-611">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTextReader">
      <MemberSignature Language="C#" Value="public override System.IO.TextReader GetTextReader (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.TextReader GetTextReader(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetTextReader(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetTextReader (i As Integer) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::TextReader ^ GetTextReader(int i);" />
      <MemberSignature Language="F#" Value="override this.GetTextReader : int -&gt; System.IO.TextReader" Usage="sqlDataReader.GetTextReader i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-612">要检索的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-612">The column to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-613">检索作为 <see cref="T:System.IO.TextReader" /> 的 Char、 NChar、 NText、 NVarChar、 text、 varChar 和 Variant data types。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-613">Retrieves Char, NChar, NText, NVarChar, text, varChar, and Variant data types as a <see cref="T:System.IO.TextReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-614">返回的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-614">The returned object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-615"><xref:System.Data.SqlClient.SqlException> 从引发异常<xref:System.IO.TextReader>作为引发<xref:System.IO.IOException>异常; 请检查内部异常以<xref:System.Data.SqlClient.SqlException>。</span><span class="sxs-lookup"><span data-stu-id="16fab-615"><xref:System.Data.SqlClient.SqlException> exceptions raised from <xref:System.IO.TextReader> are thrown as <xref:System.IO.IOException> exceptions; check the inner exception for the <xref:System.Data.SqlClient.SqlException>.</span></span>  
  
 <span data-ttu-id="16fab-616">Null 值将返回一个空 （零个字节为单位） 为<xref:System.IO.TextReader>。</span><span class="sxs-lookup"><span data-stu-id="16fab-616">Null values will be returned as an empty (zero bytes) <xref:System.IO.TextReader>.</span></span>  
  
 <span data-ttu-id="16fab-617"><xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> 将引发<xref:System.InvalidOperationException>异常时返回的对象上使用<xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A>时<xref:System.Data.CommandBehavior.SequentialAccess>生效。</span><span class="sxs-lookup"><span data-stu-id="16fab-617"><xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> will raise an <xref:System.InvalidOperationException> exception when used on an object returned by <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> when <xref:System.Data.CommandBehavior.SequentialAccess> is in effect.</span></span>  
  
 <span data-ttu-id="16fab-618">当连接属性`ContextConnection=true`，<xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A>仅支持连续两个同步的数据检索 (<xref:System.Data.CommandBehavior.SequentialAccess>) 和非连续 (<xref:System.Data.CommandBehavior.Default>) 访问。</span><span class="sxs-lookup"><span data-stu-id="16fab-618">When the connection property `ContextConnection=true`, <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> only supports synchronous data retrieval for both sequential (<xref:System.Data.CommandBehavior.SequentialAccess>) and non-sequential (<xref:System.Data.CommandBehavior.Default>) access.</span></span>  
  
 <span data-ttu-id="16fab-619">有关详细信息，请参阅[SqlClient 流支持](~/docs/framework/data/adonet/sqlclient-streaming-support.md)。</span><span class="sxs-lookup"><span data-stu-id="16fab-619">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="16fab-620">连接中断或在数据检索期间已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-620">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="16fab-621">数据检索期间，<see cref="T:System.Data.SqlClient.SqlDataReader" /> 处于关闭状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-621">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="16fab-622">没有要读取的就绪数据 (例如，第一个 <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> 未被调用或返回错误)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-622">There is no data ready to be read (for example, the first <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="16fab-623">按顺序模式尝试读取上一步骤中读取的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-623">Tried to read a previously-read column in sequential mode.</span>
          </span>
          <span data-ttu-id="16fab-624">没有正在进行的异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-624">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="16fab-625">以顺序模式运行时，这适用于所有 Get\* 方法，读取流时也可对其进行调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-625">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="16fab-626">尝试读取不存在的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-626">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="16fab-627">返回的类型不属于以下类型之一：</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-627">The returned type was not one of the types below:</span>
          </span>
          <span data-ttu-id="16fab-628">-   char</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-628">-   char</span>
          </span>
          <span data-ttu-id="16fab-629">-   nchar</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-629">-   nchar</span>
          </span>
          <span data-ttu-id="16fab-630">-   ntext</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-630">-   ntext</span>
          </span>
          <span data-ttu-id="16fab-631">-   nvarchar</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-631">-   nvarchar</span>
          </span>
          <span data-ttu-id="16fab-632">-   text</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-632">-   text</span>
          </span>
          <span data-ttu-id="16fab-633">-   varchar</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-633">-   varchar</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTimeSpan">
      <MemberSignature Language="C#" Value="public virtual TimeSpan GetTimeSpan (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TimeSpan GetTimeSpan(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetTimeSpan(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTimeSpan (i As Integer) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TimeSpan GetTimeSpan(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetTimeSpan : int -&gt; TimeSpan&#xA;override this.GetTimeSpan : int -&gt; TimeSpan" Usage="sqlDataReader.GetTimeSpan i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-634">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-634">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-635">检索指定列的 <see cref="T:System.TimeSpan" /> 对象形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-635">Retrieves the value of the specified column as a <see cref="T:System.TimeSpan" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-636">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-636">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-637">不执行任何转换;因此，检索到的数据必须已经是<xref:System.TimeSpan>对象。</span><span class="sxs-lookup"><span data-stu-id="16fab-637">No conversions are performed; therefore, the data retrieved must already be a <xref:System.TimeSpan> object.</span></span>  
  
 <span data-ttu-id="16fab-638">调用<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>来调用此方法之前检查 null 值。</span><span class="sxs-lookup"><span data-stu-id="16fab-638">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="16fab-639">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-639">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(int i);" />
      <MemberSignature Language="F#" Value="override this.GetValue : int -&gt; obj" Usage="sqlDataReader.GetValue i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetValue(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-640">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-640">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-641">获取指定列以本机格式表示的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-641">Gets the value of the specified column in its native format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-642">对于 null 数据库列，此方法返回 <see cref="T:System.DBNull" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-642">This method returns <see cref="T:System.DBNull" /> for null database columns.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-643"><xref:System.Data.SqlClient.SqlDataReader.GetValue%2A> 返回使用.NET Framework 类型的数据。</span><span class="sxs-lookup"><span data-stu-id="16fab-643"><xref:System.Data.SqlClient.SqlDataReader.GetValue%2A> returns data using the .NET Framework types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public override int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetValues : obj[] -&gt; int" Usage="sqlDataReader.GetValues values" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetValues(System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="16fab-644">要将属性列复制到的 <see cref="T:System.Object" /> 数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-644">An array of <see cref="T:System.Object" /> into which to copy the attribute columns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-645">使用当前行的列值来填充对象数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-645">Populates an array of objects with the column values of the current row.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-646">数组中的 <see cref="T:System.Object" /> 实例数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-646">The number of instances of <see cref="T:System.Object" /> in the array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-647">对于大多数应用程序，此方法用于检索所有列，而不是逐个都检索每个列提供一种有效方式。</span><span class="sxs-lookup"><span data-stu-id="16fab-647">For most applications, this method provides an efficient means for retrieving all columns, instead of retrieving each column individually.</span></span>  
  
 <span data-ttu-id="16fab-648">可以将传递<xref:System.Object>数组，其中包含少于得到的行中包含的列数。</span><span class="sxs-lookup"><span data-stu-id="16fab-648">You can pass an <xref:System.Object> array that contains fewer than the number of columns contained in the resulting row.</span></span> <span data-ttu-id="16fab-649">数据量<xref:System.Object>数组保存复制到数组。</span><span class="sxs-lookup"><span data-stu-id="16fab-649">Only the amount of data the <xref:System.Object> array holds is copied to the array.</span></span> <span data-ttu-id="16fab-650">你还可以传递<xref:System.Object>其长度是多个结果行中包含的列数的数组。</span><span class="sxs-lookup"><span data-stu-id="16fab-650">You can also pass an <xref:System.Object> array whose length is more than the number of columns contained in the resulting row.</span></span>  
  
 <span data-ttu-id="16fab-651">对于 null 数据库列，此方法返回 <xref:System.DBNull>。</span><span class="sxs-lookup"><span data-stu-id="16fab-651">This method returns <xref:System.DBNull> for null database columns.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="16fab-652">下面的示例演示了如何使用大小正确的数组中所提供的当前行中读取所有值<xref:System.Data.SqlClient.SqlDataReader>。</span><span class="sxs-lookup"><span data-stu-id="16fab-652">The following example demonstrates using a correctly sized  array  to read all values from the current row in the supplied <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="16fab-653">此外，该示例演示如何使用小于或大于可用的列数可能是一个固定大小的数组。</span><span class="sxs-lookup"><span data-stu-id="16fab-653">In addition, the sample demonstrates using a fixed-sized array that could be either smaller or larger than the number of available columns.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetValueObject#2](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValueObject/CS/source.cs#2)]
 [!code-vb[DataWorks DataTableReader.GetValueObject#2](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValueObject/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXmlReader">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlReader GetXmlReader (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlReader GetXmlReader(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetXmlReader(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXmlReader (i As Integer) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlReader ^ GetXmlReader(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetXmlReader : int -&gt; System.Xml.XmlReader&#xA;override this.GetXmlReader : int -&gt; System.Xml.XmlReader" Usage="sqlDataReader.GetXmlReader i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-654">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-654">The value of the specified column.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-655">检索作为 <see cref="T:System.Xml.XmlReader" /> 的类型 XML 数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-655">Retrieves data of type XML as an <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-656">返回的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-656">The returned object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-657"><xref:System.Xml.XmlReader>返回对象<xref:System.Data.SqlClient.SqlDataReader.GetXmlReader%2A>不支持异步操作。</span><span class="sxs-lookup"><span data-stu-id="16fab-657">The <xref:System.Xml.XmlReader> object returned by <xref:System.Data.SqlClient.SqlDataReader.GetXmlReader%2A> does not support asynchronous operations.</span></span> <span data-ttu-id="16fab-658">如果您需要在异步操作<xref:System.Xml.XmlReader>，在服务器上的类型转换到 nvarchar （max） 的 XML 列，并使用<xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A>与<xref:System.Xml.XmlReader.Create%2A>。</span><span class="sxs-lookup"><span data-stu-id="16fab-658">If you require asynchronous operations on an <xref:System.Xml.XmlReader>, cast the XML column to an NVARCHAR(MAX) on the server and use <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> with <xref:System.Xml.XmlReader.Create%2A>.</span></span>  
  
 <span data-ttu-id="16fab-659"><xref:System.Data.SqlClient.SqlException> 从引发异常<xref:System.Xml.XmlReader>作为引发<xref:System.Xml.XmlException>异常; 请检查内部异常以<xref:System.Data.SqlClient.SqlException>。</span><span class="sxs-lookup"><span data-stu-id="16fab-659"><xref:System.Data.SqlClient.SqlException> exceptions raised from <xref:System.Xml.XmlReader> are thrown as <xref:System.Xml.XmlException> exceptions; check the inner exception for the <xref:System.Data.SqlClient.SqlException>.</span></span>  
  
 <span data-ttu-id="16fab-660"><xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> 将引发<xref:System.InvalidOperationException>异常时返回的对象上使用<xref:System.Data.SqlClient.SqlDataReader.GetXmlReader%2A>时<xref:System.Data.CommandBehavior.SequentialAccess>生效。</span><span class="sxs-lookup"><span data-stu-id="16fab-660"><xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> will raise an <xref:System.InvalidOperationException> exception when used on an object returned by <xref:System.Data.SqlClient.SqlDataReader.GetXmlReader%2A> when <xref:System.Data.CommandBehavior.SequentialAccess> is in effect.</span></span>  
  
 <span data-ttu-id="16fab-661">有关详细信息，请参阅[SqlClient 流支持](~/docs/framework/data/adonet/sqlclient-streaming-support.md)。</span><span class="sxs-lookup"><span data-stu-id="16fab-661">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="16fab-662">连接中断或在数据检索期间已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-662">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="16fab-663">数据检索期间，<see cref="T:System.Data.SqlClient.SqlDataReader" /> 处于关闭状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-663">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="16fab-664">没有要读取的就绪数据 (例如，第一个 <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> 未被调用或返回错误)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-664">There is no data ready to be read (for example, the first <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="16fab-665">按顺序模式尝试读取上一步骤中读取的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-665">Trying to read a previously read column in sequential mode.</span>
          </span>
          <span data-ttu-id="16fab-666">没有正在进行的异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-666">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="16fab-667">以顺序模式运行时，这适用于所有 Get\* 方法，读取流时也可对其进行调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-667">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="16fab-668">尝试读取不存在的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-668">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="16fab-669">返回的类不是 xml。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-669">The returned type was not xml.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HasRows">
      <MemberSignature Language="C#" Value="public override bool HasRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRows" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.HasRows" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasRows { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasRows : bool" Usage="System.Data.SqlClient.SqlDataReader.HasRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16fab-670">获取一个值，该值指示 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 是否包含一行还是多行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-670">Gets a value that indicates whether the <see cref="T:System.Data.SqlClient.SqlDataReader" /> contains one or more rows.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16fab-671">如果 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 包含一行或多行，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-671">
              <see langword="true" /> if the <see cref="T:System.Data.SqlClient.SqlDataReader" /> contains one or more rows; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public override bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Data.SqlClient.SqlDataReader.IsClosed" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataReader.IsClosed</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16fab-672">检索一个布尔值，该值指示是否已关闭指定的 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-672">Retrieves a Boolean value that indicates whether the specified <see cref="T:System.Data.SqlClient.SqlDataReader" /> instance has been closed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16fab-673">如果指定的 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 实例已关闭，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-673">
              <see langword="true" /> if the specified <see cref="T:System.Data.SqlClient.SqlDataReader" /> instance is closed; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-674">不能从读取<xref:System.Data.SqlClient.SqlDataReader>已关闭的实例。</span><span class="sxs-lookup"><span data-stu-id="16fab-674">It is not possible to read from a <xref:System.Data.SqlClient.SqlDataReader> instance that is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCommandBehavior">
      <MemberSignature Language="C#" Value="protected bool IsCommandBehavior (System.Data.CommandBehavior condition);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsCommandBehavior(valuetype System.Data.CommandBehavior condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.IsCommandBehavior(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsCommandBehavior (condition As CommandBehavior) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsCommandBehavior(System::Data::CommandBehavior condition);" />
      <MemberSignature Language="F#" Value="member this.IsCommandBehavior : System.Data.CommandBehavior -&gt; bool" Usage="sqlDataReader.IsCommandBehavior condition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="16fab-675">
            <see cref="T:System.Data.CommandBehavior" /> 枚举。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-675">A <see cref="T:System.Data.CommandBehavior" /> enumeration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-676">确定指定的 <see cref="T:System.Data.CommandBehavior" /> 是否与 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 的对应项匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-676">Determines whether the specified <see cref="T:System.Data.CommandBehavior" /> matches that of the <see cref="T:System.Data.SqlClient.SqlDataReader" /> .</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-677">如果指定的 <see cref="T:System.Data.CommandBehavior" /> 为 true，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-677">
              <see langword="true" /> if the specified <see cref="T:System.Data.CommandBehavior" /> is true, <see langword="false" /> otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-678">此成员支持 .NET Framework 结构，不能在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="16fab-678">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public override bool IsDBNull (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDBNull(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDBNull (i As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDBNull(int i);" />
      <MemberSignature Language="F#" Value="override this.IsDBNull : int -&gt; bool" Usage="sqlDataReader.IsDBNull i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.IsDBNull(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-679">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-679">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-680">获取一个值，该值指示列中是否包含不存在的或缺少的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-680">Gets a value that indicates whether the column contains non-existent or missing values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-681">如果指定的列值与 <see cref="T:System.DBNull" /> 等效，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-681">
              <see langword="true" /> if the specified column value is equivalent to <see cref="T:System.DBNull" />; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-682">调用此方法来检查前调用的类型化的 null 列值 get 方法 (例如， <xref:System.Data.SqlClient.SqlDataReader.GetByte%2A>， <xref:System.Data.SqlClient.SqlDataReader.GetChar%2A>，依次类推) 以避免引发错误。</span><span class="sxs-lookup"><span data-stu-id="16fab-682">Call this method to check for null column values before calling the typed get methods (for example, <xref:System.Data.SqlClient.SqlDataReader.GetByte%2A>, <xref:System.Data.SqlClient.SqlDataReader.GetChar%2A>, and so on) to avoid raising an error.</span></span>  
  
 [!code-csharp[SqlDataReader_IsDbNull#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/sqldatareader_isdbnull/cs/source.cs#1)]
 [!code-vb[SqlDataReader_IsDbNull#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/sqldatareader_isdbnull/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNullAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;bool&gt; IsDBNullAsync (int i, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; IsDBNullAsync(int32 i, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;bool&gt; ^ IsDBNullAsync(int i, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.IsDBNullAsync : int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="sqlDataReader.IsDBNullAsync (i, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-683">从零开始的要检索的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-683">The zero-based column to be retrieved.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="16fab-684">取消指示，用于对应该取消操作的通知进行传播。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-684">The cancellation instruction, which propagates a notification that operations should be canceled.</span>
          </span>
          <span data-ttu-id="16fab-685">此构造函数不对取消做保证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-685">This does not guarantee the cancellation.</span>
          </span>
          <span data-ttu-id="16fab-686">设置为 <see langword="CancellationToken.None" /> 将此方法等效于 <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-686">A setting of <see langword="CancellationToken.None" /> makes this method equivalent to <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />.</span>
          </span>
          <span data-ttu-id="16fab-687">返回任务必须标记为已取消。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-687">The returned task must be marked as cancelled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-688">
            <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> 的异步版本，其获取指示列是否包含不存在或缺失值的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-688">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />, which gets a value that indicates whether the column contains non-existent or missing values.</span>
          </span>
          <span data-ttu-id="16fab-689">取消标记可用于请求在命令超时超过前放弃操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-689">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span>
          </span>
          <span data-ttu-id="16fab-690">将通过返回的任务对象报告异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-690">Exceptions will be reported via the returned Task object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-691">如果指定的列值与 <see langword="true" /> 等效，则为 <see langword="DBNull" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-691">
              <see langword="true" /> if the specified column value is equivalent to <see langword="DBNull" /> otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-692">有关详细信息，请参阅[SqlClient 流支持](~/docs/framework/data/adonet/sqlclient-streaming-support.md)。</span><span class="sxs-lookup"><span data-stu-id="16fab-692">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="16fab-693">连接中断或在数据检索期间已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-693">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="16fab-694">数据检索期间，<see cref="T:System.Data.SqlClient.SqlDataReader" /> 处于关闭状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-694">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="16fab-695">没有要读取的就绪数据 (例如，第一个 <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> 未被调用或返回错误)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-695">There is no data ready to be read (for example, the first <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="16fab-696">按顺序模式尝试读取上一步骤中读取的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-696">Trying to read a previously read column in sequential mode.</span>
          </span>
          <span data-ttu-id="16fab-697">没有正在进行的异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-697">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="16fab-698">以顺序模式运行时，这适用于所有 Get\* 方法，读取流时也可对其进行调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-698">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
          <span data-ttu-id="16fab-699">在连接字符串中指定 <see langword="Context Connection=true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-699">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="16fab-700">尝试读取不存在的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-700">Trying to read a column that does not exist.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="16fab-701">获取以本机格式表示的列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-701">Gets the value of a column in its native format.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int i); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="System.Data.SqlClient.SqlDataReader.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataRecord.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-702">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-702">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-703">在给定列序号的情况下，获取指定列的以本机格式表示的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-703">Gets the value of the specified column in its native format given the column ordinal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16fab-704">指定列的以本机格式表示的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-704">The value of the specified column in its native format.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="16fab-705">传递的索引超出了 0 到 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-705">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj" Usage="System.Data.SqlClient.SqlDataReader.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataRecord.Item(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="16fab-706">列名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-706">The column name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-707">在给定列名称的情况下，获取指定列的以本机格式表示的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-707">Gets the value of the specified column in its native format given the column name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16fab-708">指定列的以本机格式表示的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-708">The value of the specified column in its native format.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-709">第一次执行区分大小写的查找。</span><span class="sxs-lookup"><span data-stu-id="16fab-709">A case-sensitive lookup is performed first.</span></span> <span data-ttu-id="16fab-710">如果失败，进行第二个的不区分大小写搜索 (进行不区分大小写的比较使用数据库排序规则)。</span><span class="sxs-lookup"><span data-stu-id="16fab-710">If it fails, a second case-insensitive search is made (a case-insensitive comparison is done using the database collation).</span></span> <span data-ttu-id="16fab-711">当比较受特定于区域性的大小写规则，会发生意外的结果。</span><span class="sxs-lookup"><span data-stu-id="16fab-711">Unexpected results can occur when comparisons are affected by culture-specific casing rules.</span></span> <span data-ttu-id="16fab-712">例如，在土耳其语，下面的示例生成错误结果由于土耳其语中的文件系统对字母 i 不使用语言的大小写规则"文件"中。</span><span class="sxs-lookup"><span data-stu-id="16fab-712">For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter 'i' in "file".</span></span>  
  
 <span data-ttu-id="16fab-713">此方法是不区分假名宽度。</span><span class="sxs-lookup"><span data-stu-id="16fab-713">This method is kana-width insensitive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="16fab-714">未找到具有指定名称的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-714">No column with the specified name was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public override bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool NextResult();" />
      <MemberSignature Language="F#" Value="override this.NextResult : unit -&gt; bool" Usage="sqlDataReader.NextResult " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.NextResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="16fab-715">当读取批处理 Transact-SQL 语句的结果时，使数据读取器前进到下一个结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-715">Advances the data reader to the next result, when reading the results of batch Transact-SQL statements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-716">如果存在多个结果集，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-716">
              <see langword="true" /> if there are more result sets; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-717">用于处理多个结果，可以通过执行 TRANSACT-SQL 批处理语句生成。</span><span class="sxs-lookup"><span data-stu-id="16fab-717">Used to process multiple results, which can be generated by executing batch Transact-SQL statements.</span></span>  
  
 <span data-ttu-id="16fab-718">默认情况下，数据读取器定位在第一个结果。</span><span class="sxs-lookup"><span data-stu-id="16fab-718">By default, the data reader is positioned on the first result.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextResultAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;bool&gt; NextResultAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; NextResultAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;bool&gt; ^ NextResultAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.NextResultAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="sqlDataReader.NextResultAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="16fab-719">取消指令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-719">The cancellation instruction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-720">
            <see cref="M:System.Data.SqlClient.SqlDataReader.NextResult" /> 的异步版本，读取批处理 [!INCLUDE[tsql](~/includes/tsql-md.md)] 语句的结果时，将数据读取器推进到下一个结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-720">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlDataReader.NextResult" />, which advances the data reader to the next result, when reading the results of batch [!INCLUDE[tsql](~/includes/tsql-md.md)] statements.</span>
          </span>
          <span data-ttu-id="16fab-721">取消标记可用于请求在命令超时超过前放弃操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-721">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span>
          </span>
          <span data-ttu-id="16fab-722">将通过返回的任务对象报告异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-722">Exceptions will be reported via the returned Task object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-723">表示异步操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-723">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-724">有关 SQL Server 的.NET Framework 数据提供程序中异步编程的详细信息，请参阅[异步编程](~/docs/framework/data/adonet/asynchronous-programming.md)。</span><span class="sxs-lookup"><span data-stu-id="16fab-724">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="16fab-725">在完成任务前，为同一个实例多次调用 <see cref="M:System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-725">Calling <see cref="M:System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="16fab-726">在连接字符串中指定 <see langword="Context Connection=true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-726">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="16fab-727">执行命令文本时，SQL Server 返回了一个错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-727">SQL Server returned an error while executing the command text.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="sqlDataReader.Read " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.Read</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="16fab-728">让 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 前进到下一条记录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-728">Advances the <see cref="T:System.Data.SqlClient.SqlDataReader" /> to the next record.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-729">如果存在更多行，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-729">
              <see langword="true" /> if there are more rows; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-730">默认位置的<xref:System.Data.SqlClient.SqlDataReader>之前第一条记录。</span><span class="sxs-lookup"><span data-stu-id="16fab-730">The default position of the <xref:System.Data.SqlClient.SqlDataReader> is before the first record.</span></span> <span data-ttu-id="16fab-731">因此，您必须调用<xref:System.Data.SqlClient.SqlDataReader.Read%2A>才能开始访问任何数据。</span><span class="sxs-lookup"><span data-stu-id="16fab-731">Therefore, you must call <xref:System.Data.SqlClient.SqlDataReader.Read%2A> to begin accessing any data.</span></span>  
  
 <span data-ttu-id="16fab-732">只有一个`SqlDataReader`每个关联<xref:System.Data.SqlClient.SqlConnection>一次，可以在打开和第一个关闭之前，任何尝试打开另一个将失败。</span><span class="sxs-lookup"><span data-stu-id="16fab-732">Only one `SqlDataReader` per associated <xref:System.Data.SqlClient.SqlConnection> may be open at a time, and any attempt to open another will fail until the first one is closed.</span></span> <span data-ttu-id="16fab-733">同样，尽管`SqlDataReader`正在使用中，关联`SqlConnection`正忙于为服务它直到您调用<xref:System.Data.SqlClient.SqlDataReader.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="16fab-733">Similarly, while the `SqlDataReader` is being used, the associated `SqlConnection` is busy serving it until you call <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="16fab-734">下面的示例创建<xref:System.Data.SqlClient.SqlConnection>、 一个<xref:System.Data.SqlClient.SqlCommand>，和一个<xref:System.Data.SqlClient.SqlDataReader>。</span><span class="sxs-lookup"><span data-stu-id="16fab-734">The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a <xref:System.Data.SqlClient.SqlCommand>, and a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="16fab-735">该示例读取数据，将其写到控制台窗口。</span><span class="sxs-lookup"><span data-stu-id="16fab-735">The example reads through the data, writing it out to the console window.</span></span> <span data-ttu-id="16fab-736">然后关闭代码<xref:System.Data.SqlClient.SqlDataReader>。</span><span class="sxs-lookup"><span data-stu-id="16fab-736">The code then closes the <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="16fab-737"><xref:System.Data.SqlClient.SqlConnection>结束时自动关闭`using`代码块。</span><span class="sxs-lookup"><span data-stu-id="16fab-737">The <xref:System.Data.SqlClient.SqlConnection> is closed automatically at the end of the `using` code block.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="16fab-738">执行命令文本时，SQL Server 返回了一个错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-738">SQL Server returned an error while executing the command text.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;bool&gt; ReadAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; ReadAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;bool&gt; ^ ReadAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="sqlDataReader.ReadAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="16fab-739">取消指令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-739">The cancellation instruction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-740">
            <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> 的异步版本，将 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 前移到下一条记录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-740">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlDataReader.Read" />, which advances the <see cref="T:System.Data.SqlClient.SqlDataReader" /> to the next record.</span>
          </span>
          <span data-ttu-id="16fab-741">取消标记可用于请求在命令超时超过前放弃操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-741">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span>
          </span>
          <span data-ttu-id="16fab-742">将通过返回的任务对象报告异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-742">Exceptions will be reported via the returned Task object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-743">表示异步操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-743">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-744">如果`behavior`的参数<xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync%2A>设置为`Default`，<xref:System.Data.SqlClient.SqlDataReader.ReadAsync%2A>返回任务前读取整行。</span><span class="sxs-lookup"><span data-stu-id="16fab-744">If the `behavior` parameter of <xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync%2A> is set to `Default`, <xref:System.Data.SqlClient.SqlDataReader.ReadAsync%2A> reads the entire row before returning the Task.</span></span>  
  
 <span data-ttu-id="16fab-745">有关详细信息，包括有关 SQL Server 的.NET Framework 数据提供程序中异步编程的代码示例，请参阅[异步编程](~/docs/framework/data/adonet/asynchronous-programming.md)。</span><span class="sxs-lookup"><span data-stu-id="16fab-745">For more information, including code samples, about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="16fab-746">在完成任务前，为同一个实例多次调用 <see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-746">Calling <see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="16fab-747">在连接字符串中指定 <see langword="Context Connection=true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-747">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="16fab-748">执行命令文本时，SQL Server 返回了一个错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-748">SQL Server returned an error while executing the command text.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public override int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RecordsAffected { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RecordsAffected : int" Usage="System.Data.SqlClient.SqlDataReader.RecordsAffected" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataReader.RecordsAffected</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16fab-749">获取执行 Transact-SQL 语句所更改、插入或删除的行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-749">Gets the number of rows changed, inserted, or deleted by execution of the Transact-SQL statement.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16fab-750">已更改、插入或删除的行数；如果没有受影响的行或语句失败，则为 0；对于 SELECT 语句为 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-750">The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-751">此属性的值是累积的。</span><span class="sxs-lookup"><span data-stu-id="16fab-751">The value of this property is cumulative.</span></span> <span data-ttu-id="16fab-752">例如，如果在批处理模式下的值插入两个记录`RecordsAffected`会有两个。</span><span class="sxs-lookup"><span data-stu-id="16fab-752">For example, if two records are inserted in batch mode, the value of `RecordsAffected` will be two.</span></span>  
  
 <span data-ttu-id="16fab-753"><xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A> 并<xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A>是后可以调用的唯一属性<xref:System.Data.SqlClient.SqlDataReader>已关闭。</span><span class="sxs-lookup"><span data-stu-id="16fab-753"><xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A> and <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.SqlClient.SqlDataReader> is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDataRecord.GetData">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDataRecord.GetData (int i);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDataRecord.GetData(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.System#Data#IDataRecord#GetData(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function GetData (i As Integer) As IDataReader Implements IDataRecord.GetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDataRecord.GetData(int i) = System::Data::IDataRecord::GetData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetData(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="16fab-754">列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-754">A column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="16fab-755">返回指定列序号的 <see cref="T:System.Data.IDataReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-755">Returns an <see cref="T:System.Data.IDataReader" /> for the specified column ordinal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="16fab-756">指定列序号的 <see cref="T:System.Data.IDataReader" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-756">The <see cref="T:System.Data.IDataReader" /> instance for the specified column ordinal.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-757">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="16fab-757">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="16fab-758">它只能在 <xref:System.Data.SqlClient.SqlDataReader> 实例强制转换为 <xref:System.Data.IDataRecord> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="16fab-758">It can be used only when the <xref:System.Data.SqlClient.SqlDataReader> instance is cast to an <xref:System.Data.IDataRecord> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisibleFieldCount">
      <MemberSignature Language="C#" Value="public override int VisibleFieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisibleFieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.VisibleFieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property VisibleFieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int VisibleFieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.VisibleFieldCount : int" Usage="System.Data.SqlClient.SqlDataReader.VisibleFieldCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="16fab-759">获取 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 中未隐藏的字段的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-759">Gets the number of fields in the <see cref="T:System.Data.SqlClient.SqlDataReader" /> that are not hidden.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="16fab-760">未隐藏的字段的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="16fab-760">The number of fields that are not hidden.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16fab-761">此值用于确定 <xref:System.Data.SqlClient.SqlDataReader> 中的可见字段的数目。</span><span class="sxs-lookup"><span data-stu-id="16fab-761">This value is used to determine how many fields in the <xref:System.Data.SqlClient.SqlDataReader> are visible.</span></span> <span data-ttu-id="16fab-762">例如，对分部主键执行 SELECT 将以隐藏字段的形式返回该键的其余部分。</span><span class="sxs-lookup"><span data-stu-id="16fab-762">For example, a SELECT on a partial primary key returns the remaining parts of the key as hidden fields.</span></span> <span data-ttu-id="16fab-763">隐藏的字段始终追加在可见字段之后。</span><span class="sxs-lookup"><span data-stu-id="16fab-763">The hidden fields are always appended behind the visible fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>