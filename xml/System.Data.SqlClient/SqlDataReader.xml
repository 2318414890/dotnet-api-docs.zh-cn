<Type Name="SqlDataReader" FullName="System.Data.SqlClient.SqlDataReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fb1d61c397b0a3f844219bdaaf2a19c9b99bc722" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlDataReader : System.Data.Common.DbDataReader, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataReader extends System.Data.Common.DbDataReader implements class System.Data.IDataReader, class System.Data.IDataRecord, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlDataReader" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataReader&#xA;Inherits DbDataReader&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataReader : System::Data::Common::DbDataReader, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataReader</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="e4129-101">提供一种从 SQL Server 数据库中读取只进的行流的方式。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e4129-101">Provides a way of reading a forward-only stream of rows from a SQL Server database.</span>
      </span>
      <span data-ttu-id="e4129-102">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e4129-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-103">若要创建<xref:System.Data.SqlClient.SqlDataReader>，必须调用<xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>方法<xref:System.Data.SqlClient.SqlCommand>对象，而不是直接使用构造函数。</span><span class="sxs-lookup"><span data-stu-id="e4129-103">To create a <xref:System.Data.SqlClient.SqlDataReader>, you must call the <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> method of the <xref:System.Data.SqlClient.SqlCommand> object, instead of directly using a constructor.</span></span>  
  
 <span data-ttu-id="e4129-104">虽然<xref:System.Data.SqlClient.SqlDataReader>正在使用中，关联<xref:System.Data.SqlClient.SqlConnection>是繁忙的服务<xref:System.Data.SqlClient.SqlDataReader>，和可以对执行任何其他操作<xref:System.Data.SqlClient.SqlConnection>其关闭。</span><span class="sxs-lookup"><span data-stu-id="e4129-104">While the <xref:System.Data.SqlClient.SqlDataReader> is being used, the associated <xref:System.Data.SqlClient.SqlConnection> is busy serving the <xref:System.Data.SqlClient.SqlDataReader>, and no other operations can be performed on the <xref:System.Data.SqlClient.SqlConnection> other than closing it.</span></span> <span data-ttu-id="e4129-105">这是这种情况，直到<xref:System.Data.SqlClient.SqlDataReader.Close%2A>方法<xref:System.Data.SqlClient.SqlDataReader>调用。</span><span class="sxs-lookup"><span data-stu-id="e4129-105">This is the case until the <xref:System.Data.SqlClient.SqlDataReader.Close%2A> method of the <xref:System.Data.SqlClient.SqlDataReader> is called.</span></span> <span data-ttu-id="e4129-106">例如，无法检索输出参数，直到调用之后<xref:System.Data.SqlClient.SqlDataReader.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="e4129-106">For example, you cannot retrieve output parameters until after you call <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.</span></span>  
  
 <span data-ttu-id="e4129-107">对一个结果集由另一个进程或线程，在读取数据时所做的更改可能会对用户可见`SqlDataReader`。</span><span class="sxs-lookup"><span data-stu-id="e4129-107">Changes made to a result set by another process or thread while data is being read may be visible to the user of the `SqlDataReader`.</span></span> <span data-ttu-id="e4129-108">但是，确切的行为与执行时间有关。</span><span class="sxs-lookup"><span data-stu-id="e4129-108">However, the precise behavior is timing dependent.</span></span>  
  
 <span data-ttu-id="e4129-109"><xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A> 和<xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A>是可以后调用的唯一属性<xref:System.Data.SqlClient.SqlDataReader>已关闭。</span><span class="sxs-lookup"><span data-stu-id="e4129-109"><xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A> and <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.SqlClient.SqlDataReader> is closed.</span></span> <span data-ttu-id="e4129-110">尽管<xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A>可能访问属性时<xref:System.Data.SqlClient.SqlDataReader>存在，始终调用<xref:System.Data.SqlClient.SqlDataReader.Close%2A>在返回的值之前<xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A>若要确保返回精确的值。</span><span class="sxs-lookup"><span data-stu-id="e4129-110">Although the <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> property may be accessed while the <xref:System.Data.SqlClient.SqlDataReader> exists, always call <xref:System.Data.SqlClient.SqlDataReader.Close%2A> before returning the value of <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> to guarantee an accurate return value.</span></span>  
  
 <span data-ttu-id="e4129-111">使用顺序访问时 (<xref:System.Data.CommandBehavior.SequentialAccess?displayProperty=nameWithType>)、<xref:System.InvalidOperationException>如果将会引发<xref:System.Data.SqlClient.SqlDataReader>高级位置和另一个读取操作尝试在上一个列。</span><span class="sxs-lookup"><span data-stu-id="e4129-111">When using sequential access (<xref:System.Data.CommandBehavior.SequentialAccess?displayProperty=nameWithType>), an <xref:System.InvalidOperationException> will be raised if the <xref:System.Data.SqlClient.SqlDataReader> position is advanced and another read operation is attempted on the previous column.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e4129-112">为了获得最佳性能，<xref:System.Data.SqlClient.SqlDataReader>可避免创建不必要的对象或创建的数据副本。</span><span class="sxs-lookup"><span data-stu-id="e4129-112">For optimal performance, <xref:System.Data.SqlClient.SqlDataReader> avoids creating unnecessary objects or making unnecessary copies of data.</span></span> <span data-ttu-id="e4129-113">因此，多次调用方法如<xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>返回对同一对象的引用。</span><span class="sxs-lookup"><span data-stu-id="e4129-113">Therefore, multiple calls to methods such as <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A> return a reference to the same object.</span></span> <span data-ttu-id="e4129-114">如果您正在修改如返回方法的对象的基础值要格外小心<xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>。</span><span class="sxs-lookup"><span data-stu-id="e4129-114">Use caution if you are modifying the underlying value of the objects returned by methods such as <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4129-115">下面的示例创建<xref:System.Data.SqlClient.SqlConnection>、 <xref:System.Data.SqlClient.SqlCommand>，和一个<xref:System.Data.SqlClient.SqlDataReader>。</span><span class="sxs-lookup"><span data-stu-id="e4129-115">The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a <xref:System.Data.SqlClient.SqlCommand>, and a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="e4129-116">该示例读取到的数据，写出到控制台窗口。</span><span class="sxs-lookup"><span data-stu-id="e4129-116">The example reads through the data, writing it out to the console window.</span></span> <span data-ttu-id="e4129-117">随后此代码关闭<xref:System.Data.SqlClient.SqlDataReader>。</span><span class="sxs-lookup"><span data-stu-id="e4129-117">The code then closes the <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="e4129-118"><xref:System.Data.SqlClient.SqlConnection>末尾自动关闭`using`代码块。</span><span class="sxs-lookup"><span data-stu-id="e4129-118">The <xref:System.Data.SqlClient.SqlConnection> is closed automatically at the end of the `using` code block.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4129-119">关闭 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-119">Closes the <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-120">你必须明确地调用<xref:System.Data.SqlClient.SqlDataReader.Close%2A>方法时通过使用<xref:System.Data.SqlClient.SqlDataReader>用于关联<xref:System.Data.SqlClient.SqlConnection>用于任何其他用途。</span><span class="sxs-lookup"><span data-stu-id="e4129-120">You must explicitly call the <xref:System.Data.SqlClient.SqlDataReader.Close%2A> method when you are through using the <xref:System.Data.SqlClient.SqlDataReader> to use the associated <xref:System.Data.SqlClient.SqlConnection> for any other purpose.</span></span>  
  
 <span data-ttu-id="e4129-121">`Close`方法填充输出参数，返回值的值和`RecordsAffected`，增加关闭所花费的时间`SqlDataReader`用于处理大型或复杂的查询。</span><span class="sxs-lookup"><span data-stu-id="e4129-121">The `Close` method fills in the values for output parameters, return values and `RecordsAffected`, increasing the time that it takes to close a `SqlDataReader` that was used to process a large or complex query.</span></span> <span data-ttu-id="e4129-122">当返回的值和查询受影响的记录数都不重要，关闭所花费的时间`SqlDataReader`可通过调用来减少<xref:System.Data.SqlClient.SqlCommand.Cancel%2A>方法关联的<xref:System.Data.SqlClient.SqlCommand>对象之前调用`Close`方法。</span><span class="sxs-lookup"><span data-stu-id="e4129-122">When the return values and the number of records affected by a query are not significant, the time that it takes to close the `SqlDataReader` can be reduced by calling the <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> method of the associated <xref:System.Data.SqlClient.SqlCommand> object before calling the `Close` method.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e4129-123">不要调用`Close`或`Dispose`连接、 DataReader 或在任何其他托管的对象上`Finalize`你类的方法。</span><span class="sxs-lookup"><span data-stu-id="e4129-123">Do not call `Close` or `Dispose` on a Connection, a DataReader, or any other managed object in the `Finalize` method of your class.</span></span> <span data-ttu-id="e4129-124">在终结器中，你应仅释放类直接拥有的非托管的资源。</span><span class="sxs-lookup"><span data-stu-id="e4129-124">In a finalizer, you should only release unmanaged resources that your class owns directly.</span></span> <span data-ttu-id="e4129-125">如果类不拥有任何非托管资源，则不要在类定义中包含 `Finalize` 方法。</span><span class="sxs-lookup"><span data-stu-id="e4129-125">If your class does not own any unmanaged resources, do not include a `Finalize` method in your class definition.</span></span> <span data-ttu-id="e4129-126">有关详细信息，请参阅[垃圾回收](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9)。</span><span class="sxs-lookup"><span data-stu-id="e4129-126">For more information, see [Garbage Collection](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4129-127">下面的示例创建<xref:System.Data.SqlClient.SqlConnection>、 `SqlCommand`，和一个<xref:System.Data.SqlClient.SqlDataReader>。</span><span class="sxs-lookup"><span data-stu-id="e4129-127">The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a `SqlCommand`, and a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="e4129-128">该示例读取到的数据，写出到控制台窗口。</span><span class="sxs-lookup"><span data-stu-id="e4129-128">The example reads through the data, writing it out to the console window.</span></span> <span data-ttu-id="e4129-129">随后此代码关闭<xref:System.Data.SqlClient.SqlDataReader>。</span><span class="sxs-lookup"><span data-stu-id="e4129-129">The code then closes the <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="e4129-130"><xref:System.Data.SqlClient.SqlConnection>末尾自动关闭`using`代码块。</span><span class="sxs-lookup"><span data-stu-id="e4129-130">The <xref:System.Data.SqlClient.SqlConnection> is closed automatically at the end of the `using` code block.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataReader.Close Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Close Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataReader.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="protected System.Data.SqlClient.SqlConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.Connection" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Connection As SqlConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Data::SqlClient::SqlConnection ^ Connection { System::Data::SqlClient::SqlConnection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4129-131">获取与 <see cref="T:System.Data.SqlClient.SqlConnection" /> 关联的 <see cref="T:System.Data.SqlClient.SqlDataReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-131">Gets the <see cref="T:System.Data.SqlClient.SqlConnection" /> associated with the <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4129-132">与 <see cref="T:System.Data.SqlClient.SqlConnection" /> 关联的 <see cref="T:System.Data.SqlClient.SqlDataReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-132">The <see cref="T:System.Data.SqlClient.SqlConnection" /> associated with the <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataReader.Depth</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4129-133">获取一个值，用于指示当前行的嵌套深度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-133">Gets a value that indicates the depth of nesting for the current row.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4129-134">当前行的嵌套深度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-134">The depth of nesting for the current row.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-135">最外面的表的深度为零。</span><span class="sxs-lookup"><span data-stu-id="e4129-135">The outermost table has a depth of zero.</span></span> <span data-ttu-id="e4129-136">SQL Server.NET Framework 数据提供程序不支持嵌套，并始终返回零。</span><span class="sxs-lookup"><span data-stu-id="e4129-136">The .NET Framework Data Provider for SQL Server does not support nesting and always returns zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public override int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.FieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FieldCount { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataRecord.FieldCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4129-137">获取当前行中的列数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-137">Gets the number of columns in the current row.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4129-138">如果未放在有效的记录集中，则为 0；否则为当前行中的列数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-138">When not positioned in a valid recordset, 0; otherwise the number of columns in the current row.</span>
          </span>
          <span data-ttu-id="e4129-139">默认值为 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-139">The default is -1.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-140">执行的查询按其性质，不返回行 （如删除查询），设置<xref:System.Data.SqlClient.SqlDataReader.FieldCount%2A>为 0。</span><span class="sxs-lookup"><span data-stu-id="e4129-140">Executing a query that, by its nature, does not return rows (such as a DELETE query), sets <xref:System.Data.SqlClient.SqlDataReader.FieldCount%2A> to 0.</span></span> <span data-ttu-id="e4129-141">但是。</span><span class="sxs-lookup"><span data-stu-id="e4129-141">However.</span></span> <span data-ttu-id="e4129-142">不应与该查询将返回 0 行混淆这 (如 SELECT \* FROM*表*WHERE 1 = 2） 在这种情况下<xref:System.Data.SqlClient.SqlDataReader.FieldCount%2A>返回表，包括隐藏的字段中的列数。</span><span class="sxs-lookup"><span data-stu-id="e4129-142">this should not be confused with a query that returns 0 rows (such as SELECT \* FROM *table* WHERE 1 = 2) in which case <xref:System.Data.SqlClient.SqlDataReader.FieldCount%2A> returns the number of columns in the table, including hidden fields.</span></span> <span data-ttu-id="e4129-143">使用 <xref:System.Data.SqlClient.SqlDataReader.VisibleFieldCount%2A> 可排除隐藏的字段。</span><span class="sxs-lookup"><span data-stu-id="e4129-143">Use <xref:System.Data.SqlClient.SqlDataReader.VisibleFieldCount%2A> to exclude hidden fields.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e4129-144">没有对 SQL Server 实例的当前连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-144">There is no current connection to an instance of SQL Server.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public override bool GetBoolean (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetBoolean(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBoolean (i As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetBoolean(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetBoolean(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-145">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-145">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-146">以布尔值的形式获取指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-146">Gets the value of the specified column as a Boolean.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-147">列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-147">The value of the column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-148">不进行任何转换;因此，检索的数据必须已经是一个布尔值，或生成异常。</span><span class="sxs-lookup"><span data-stu-id="e4129-148">No conversions are performed; therefore, the data retrieved must already be a Boolean, or an exception is generated.</span></span>  
  
 <span data-ttu-id="e4129-149">调用<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>来调用此方法之前检查 null 值。</span><span class="sxs-lookup"><span data-stu-id="e4129-149">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="e4129-150">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-150">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public override byte GetByte (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8 GetByte(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByte (i As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Byte GetByte(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetByte(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-151">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-151">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-152">以字节的形式获取指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-152">Gets the value of the specified column as a byte.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-153">指定列的字节形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-153">The value of the specified column as a byte.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-154">不进行任何转换;因此，检索的数据必须已为一个字节。</span><span class="sxs-lookup"><span data-stu-id="e4129-154">No conversions are performed; therefore, the data retrieved must already be a byte.</span></span>  
  
 <span data-ttu-id="e4129-155">调用<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>来调用此方法之前检查 null 值。</span><span class="sxs-lookup"><span data-stu-id="e4129-155">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="e4129-156">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-156">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override long GetBytes (int i, long dataIndex, byte[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetBytes(int32 i, int64 dataIndex, unsigned int8[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (i As Integer, dataIndex As Long, buffer As Byte(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetBytes(int i, long dataIndex, cli::array &lt;System::Byte&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-157">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-157">The zero-based column ordinal.</span>
          </span>
        </param>
        <param name="dataIndex">
          <span data-ttu-id="e4129-158">字段中的索引，从其开始读取操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-158">The index within the field from which to begin the read operation.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="e4129-159">要读入字节流的缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-159">The buffer into which to read the stream of bytes.</span>
          </span>
        </param>
        <param name="bufferIndex">
          <span data-ttu-id="e4129-160">
            <c>buffer</c> 中写入操作开始位置的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-160">The index within the <c>buffer</c> where the write operation is to start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="e4129-161">复制到缓冲区中的最大长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-161">The maximum length to copy into the buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-162">从指定的列偏移量将字节流读入缓冲区，并将其作为从给定的缓冲区偏移量开始的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-162">Reads a stream of bytes from the specified column offset into the buffer an array starting at the given buffer offset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-163">读取的实际字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-163">The actual number of bytes read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-164"><xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> 返回的字段中的可用字节数。</span><span class="sxs-lookup"><span data-stu-id="e4129-164"><xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> returns the number of available bytes in the field.</span></span> <span data-ttu-id="e4129-165">大多数情况下这是字段的确切长度。</span><span class="sxs-lookup"><span data-stu-id="e4129-165">Most of the time this is the exact length of the field.</span></span> <span data-ttu-id="e4129-166">但是，返回的版本号可能会小于该字段的真实长度如果`GetBytes`具有用于从字段中获取字节。</span><span class="sxs-lookup"><span data-stu-id="e4129-166">However, the number returned may be less than the true length of the field if `GetBytes` has already been used to obtain bytes from the field.</span></span> <span data-ttu-id="e4129-167">这可能是这种情况，例如，如果<xref:System.Data.SqlClient.SqlDataReader>正在读取到缓冲区中的大型数据结构。</span><span class="sxs-lookup"><span data-stu-id="e4129-167">This may be the case, for example, if the <xref:System.Data.SqlClient.SqlDataReader> is reading a large data structure into a buffer.</span></span> <span data-ttu-id="e4129-168">有关详细信息，请参阅`SequentialAccess`设置<xref:System.Data.CommandBehavior>。</span><span class="sxs-lookup"><span data-stu-id="e4129-168">For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="e4129-169">如果传递的缓冲区，则`null`，<xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A>返回整个字段的长度以字节为单位，不是基于缓冲区偏移量参数的剩余大小。</span><span class="sxs-lookup"><span data-stu-id="e4129-169">If you pass a buffer that is `null`, <xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> returns the length of the entire field in bytes, not the remaining size based on the buffer offset parameter.</span></span>  
  
 <span data-ttu-id="e4129-170">不进行任何转换;因此，检索的数据必须已经是字节数组。</span><span class="sxs-lookup"><span data-stu-id="e4129-170">No conversions are performed; therefore, the data retrieved must already be a byte array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public override char GetChar (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetChar(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChar (i As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetChar(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetChar(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-171">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-171">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-172">以单个字符的形式获取指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-172">Gets the value of the specified column as a single character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-173">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-173">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-174">对于 <xref:System.Data.SqlClient>，不受支持。</span><span class="sxs-lookup"><span data-stu-id="e4129-174">Not supported for <xref:System.Data.SqlClient>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="e4129-175">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-175">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override long GetChars (int i, long dataIndex, char[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetChars(int32 i, int64 dataIndex, char[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (i As Integer, dataIndex As Long, buffer As Char(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetChars(int i, long dataIndex, cli::array &lt;char&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-176">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-176">The zero-based column ordinal.</span>
          </span>
        </param>
        <param name="dataIndex">
          <span data-ttu-id="e4129-177">字段中的索引，从其开始读取操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-177">The index within the field from which to begin the read operation.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="e4129-178">要读入字节流的缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-178">The buffer into which to read the stream of bytes.</span>
          </span>
        </param>
        <param name="bufferIndex">
          <span data-ttu-id="e4129-179">
            <c>buffer</c> 中写入操作开始位置的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-179">The index within the <c>buffer</c> where the write operation is to start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="e4129-180">复制到缓冲区中的最大长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-180">The maximum length to copy into the buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-181">从指定的列偏移量将字符流作为数组从给定的缓冲区偏移量开始读入缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-181">Reads a stream of characters from the specified column offset into the buffer as an array starting at the given buffer offset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-182">读取的实际字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-182">The actual number of characters read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-183"><xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> 返回的字段中的可用的字符数。</span><span class="sxs-lookup"><span data-stu-id="e4129-183"><xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> returns the number of available characters in the field.</span></span> <span data-ttu-id="e4129-184">通常它是字段的确切长度。</span><span class="sxs-lookup"><span data-stu-id="e4129-184">Frequently this is the exact length of the field.</span></span> <span data-ttu-id="e4129-185">但是，返回的版本号可能会小于该字段的真实长度如果`GetChars`具有用于从字段中获取字符。</span><span class="sxs-lookup"><span data-stu-id="e4129-185">However, the number returned may be less than the true length of the field if `GetChars` has already been used to obtain characters from the field.</span></span> <span data-ttu-id="e4129-186">这可能是这种情况，例如，如果<xref:System.Data.SqlClient.SqlDataReader>正在读取到缓冲区中的大型数据结构。</span><span class="sxs-lookup"><span data-stu-id="e4129-186">This may be the case, for example, if the <xref:System.Data.SqlClient.SqlDataReader> is reading a large data structure into a buffer.</span></span> <span data-ttu-id="e4129-187">有关详细信息，请参阅`SequentialAccess`设置<xref:System.Data.CommandBehavior>。</span><span class="sxs-lookup"><span data-stu-id="e4129-187">For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="e4129-188">实际读取的字符数可以小于请求的长度，如果字段的结尾为止。</span><span class="sxs-lookup"><span data-stu-id="e4129-188">The actual number of characters read can be less than the requested length, if the end of the field is reached.</span></span> <span data-ttu-id="e4129-189">如果传递的缓冲区，则`null`，<xref:System.Data.SqlClient.SqlDataReader.GetChars%2A>以字符为单位，不是基于缓冲区偏移量参数的剩余大小返回整个字段的长度。</span><span class="sxs-lookup"><span data-stu-id="e4129-189">If you pass a buffer that is `null`, <xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> returns the length of the entire field in characters, not the remaining size based on the buffer offset parameter.</span></span>  
  
 <span data-ttu-id="e4129-190">不进行任何转换;因此。</span><span class="sxs-lookup"><span data-stu-id="e4129-190">No conversions are performed; therefore.</span></span> <span data-ttu-id="e4129-191">检索的数据必须已为字符数组。</span><span class="sxs-lookup"><span data-stu-id="e4129-191">the data retrieved must already be a character array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e4129-192"><xref:System.Data.SqlClient.SqlDataReader.GetChars%2A>方法返回 0 时`dataIndex`为负。</span><span class="sxs-lookup"><span data-stu-id="e4129-192">The <xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> method returns 0 when `dataIndex` is negative.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public override string GetDataTypeName (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDataTypeName(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDataTypeName (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDataTypeName(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDataTypeName(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-193">要查找的列的从零开始的序号位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-193">The zero-based ordinal position of the column to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-194">获取一个表示指定列的数据类型的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-194">Gets a string representing the data type of the specified column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-195">表示指定列的数据类型的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-195">The string representing the data type of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-196">返回后端数据类型的名称。</span><span class="sxs-lookup"><span data-stu-id="e4129-196">Returns the name of the back-end data type.</span></span>  
  
 <span data-ttu-id="e4129-197">`numeric` 是为 SQL Server 中的同义词`decimal`数据类型。</span><span class="sxs-lookup"><span data-stu-id="e4129-197">`numeric` is a synonym in SQL Server for the `decimal` data type.</span></span> <span data-ttu-id="e4129-198">`GetDataTypeName` 将返回"十进制"定义为 decimal 或 numeric 列。</span><span class="sxs-lookup"><span data-stu-id="e4129-198">`GetDataTypeName` will return "decimal" for a column defined as either decimal or numeric.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public override DateTime GetDateTime (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime GetDateTime(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDateTime (i As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime GetDateTime(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDateTime(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-199">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-199">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-200">以 <see cref="T:System.DateTime" /> 对象的形式获取指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-200">Gets the value of the specified column as a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-201">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-201">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-202">不进行任何转换;因此，检索的数据必须已经是<xref:System.DateTime>对象。</span><span class="sxs-lookup"><span data-stu-id="e4129-202">No conversions are performed; therefore, the data retrieved must already be a <xref:System.DateTime> object.</span></span>  
  
 <span data-ttu-id="e4129-203">调用<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>来调用此方法之前检查 null 值。</span><span class="sxs-lookup"><span data-stu-id="e4129-203">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="e4129-204">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-204">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDateTimeOffset">
      <MemberSignature Language="C#" Value="public virtual DateTimeOffset GetDateTimeOffset (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTimeOffset GetDateTimeOffset(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetDateTimeOffset(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDateTimeOffset (i As Integer) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTimeOffset GetDateTimeOffset(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-205">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-205">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-206">检索指定列的 <see cref="T:System.DateTimeOffset" /> 对象形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-206">Retrieves the value of the specified column as a <see cref="T:System.DateTimeOffset" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-207">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-207">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-208">不进行任何转换;因此，检索的数据必须已经是<xref:System.DateTimeOffset>对象。</span><span class="sxs-lookup"><span data-stu-id="e4129-208">No conversions are performed; therefore, the data retrieved must already be a <xref:System.DateTimeOffset> object.</span></span>  
  
 <span data-ttu-id="e4129-209">调用<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>来调用此方法之前检查 null 值。</span><span class="sxs-lookup"><span data-stu-id="e4129-209">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="e4129-210">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-210">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public override decimal GetDecimal (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Decimal GetDecimal(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecimal (i As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Decimal GetDecimal(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDecimal(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-211">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-211">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-212">以 <see cref="T:System.Decimal" /> 对象的形式获取指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-212">Gets the value of the specified column as a <see cref="T:System.Decimal" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-213">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-213">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-214">不进行任何转换;因此，检索的数据必须已经是<xref:System.Decimal>对象。</span><span class="sxs-lookup"><span data-stu-id="e4129-214">No conversions are performed; therefore, the data retrieved must already be a <xref:System.Decimal> object.</span></span>  
  
 <span data-ttu-id="e4129-215">调用<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>来调用此方法之前检查 null 值。</span><span class="sxs-lookup"><span data-stu-id="e4129-215">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="e4129-216">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-216">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public override double GetDouble (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 GetDouble(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDouble (i As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override double GetDouble(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetDouble(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-217">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-217">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-218">以双精度浮点数字的形式获取指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-218">Gets the value of the specified column as a double-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-219">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-219">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-220">不进行任何转换。</span><span class="sxs-lookup"><span data-stu-id="e4129-220">No conversions are performed.</span></span> <span data-ttu-id="e4129-221">因此，检索的数据必须已经是双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="e4129-221">Therefore, the data retrieved must already be a double-precision floating point number.</span></span>  
  
 <span data-ttu-id="e4129-222">调用<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>来调用此方法之前检查 null 值。</span><span class="sxs-lookup"><span data-stu-id="e4129-222">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="e4129-223">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-223">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4129-224">返回循环访问 <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Data.SqlClient.SqlDataReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-224">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-225">
            <see cref="T:System.Collections.IEnumerator" /> 的一个 <see cref="T:System.Data.SqlClient.SqlDataReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-225">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-226">可以使用此方法来检索一个显式的枚举器，但在语言的支持`foreach`构造，它会更易于使用循环构造直接以循环访问数据读取器中的行。</span><span class="sxs-lookup"><span data-stu-id="e4129-226">Although you can use this method to retrieve an explicit enumerator, in languages that support a `foreach` construct, it is simpler to use the looping construct directly in order to iterate through the rows in the data reader.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public override Type GetFieldType (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetFieldType(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFieldType (i As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetFieldType(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetFieldType(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-227">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-227">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-228">获取作为对象的数据类型的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-228">Gets the <see cref="T:System.Type" /> that is the data type of the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-229">作为对象的数据类型的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-229">The <see cref="T:System.Type" /> that is the data type of the object.</span>
          </span>
          <span data-ttu-id="e4129-230">在用户定义的类型 (UDT) 从数据库中返回的情况下，如果客户端上不存在该类型，则 GetFieldType 返回 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-230">If the type does not exist on the client, in the case of a User-Defined Type (UDT) returned from the database, **GetFieldType** returns null.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFieldValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T GetFieldValue&lt;T&gt; (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T GetFieldValue&lt;T&gt;(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFieldValue(Of T) (i As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; override T GetFieldValue(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="e4129-231">要返回的值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-231">The type of the value to be returned.</span>
          </span>
        </typeparam>
        <param name="i">
          <span data-ttu-id="e4129-232">要检索的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-232">The column to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-233">同步获取作为类型的指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-233">Synchronously gets the value of the specified column as a type.</span>
          </span>
          <span data-ttu-id="e4129-234">
            <see cref="M:System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)" /> 是此方法的异步版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-234">
              <see cref="M:System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)" /> is the asynchronous version of this method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-235">返回的类型对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-235">The returned type object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-236">`T` 可以是以下类型之一：</span><span class="sxs-lookup"><span data-stu-id="e4129-236">`T` can be one of the following types:</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="e4129-237">Boolean</span><span class="sxs-lookup"><span data-stu-id="e4129-237">Boolean</span></span>|<span data-ttu-id="e4129-238">Byte</span><span class="sxs-lookup"><span data-stu-id="e4129-238">Byte</span></span>|<span data-ttu-id="e4129-239">Char</span><span class="sxs-lookup"><span data-stu-id="e4129-239">Char</span></span>|<span data-ttu-id="e4129-240">DateTime</span><span class="sxs-lookup"><span data-stu-id="e4129-240">DateTime</span></span>|  
|<span data-ttu-id="e4129-241">DateTimeOffset</span><span class="sxs-lookup"><span data-stu-id="e4129-241">DateTimeOffset</span></span>|<span data-ttu-id="e4129-242">Decimal</span><span class="sxs-lookup"><span data-stu-id="e4129-242">Decimal</span></span>|<span data-ttu-id="e4129-243">Double</span><span class="sxs-lookup"><span data-stu-id="e4129-243">Double</span></span>|<span data-ttu-id="e4129-244">Float</span><span class="sxs-lookup"><span data-stu-id="e4129-244">Float</span></span>|  
|<span data-ttu-id="e4129-245">GUID</span><span class="sxs-lookup"><span data-stu-id="e4129-245">Guid</span></span>|<span data-ttu-id="e4129-246">Int16</span><span class="sxs-lookup"><span data-stu-id="e4129-246">Int16</span></span>|<span data-ttu-id="e4129-247">Int32</span><span class="sxs-lookup"><span data-stu-id="e4129-247">Int32</span></span>|<span data-ttu-id="e4129-248">Int64</span><span class="sxs-lookup"><span data-stu-id="e4129-248">Int64</span></span>|  
|<span data-ttu-id="e4129-249">SqlBoolean</span><span class="sxs-lookup"><span data-stu-id="e4129-249">SqlBoolean</span></span>|<span data-ttu-id="e4129-250">SqlByte</span><span class="sxs-lookup"><span data-stu-id="e4129-250">SqlByte</span></span>|<span data-ttu-id="e4129-251">SqlDateTime</span><span class="sxs-lookup"><span data-stu-id="e4129-251">SqlDateTime</span></span>|<span data-ttu-id="e4129-252">SqlDecimal</span><span class="sxs-lookup"><span data-stu-id="e4129-252">SqlDecimal</span></span>|  
|<span data-ttu-id="e4129-253">SqlDouble</span><span class="sxs-lookup"><span data-stu-id="e4129-253">SqlDouble</span></span>|<span data-ttu-id="e4129-254">SqlGuid</span><span class="sxs-lookup"><span data-stu-id="e4129-254">SqlGuid</span></span>|<span data-ttu-id="e4129-255">SqlInt16</span><span class="sxs-lookup"><span data-stu-id="e4129-255">SqlInt16</span></span>|<span data-ttu-id="e4129-256">SqlInt32</span><span class="sxs-lookup"><span data-stu-id="e4129-256">SqlInt32</span></span>|  
|<span data-ttu-id="e4129-257">SqlInt64</span><span class="sxs-lookup"><span data-stu-id="e4129-257">SqlInt64</span></span>|<span data-ttu-id="e4129-258">SqlMoney</span><span class="sxs-lookup"><span data-stu-id="e4129-258">SqlMoney</span></span>|<span data-ttu-id="e4129-259">SqlSingle</span><span class="sxs-lookup"><span data-stu-id="e4129-259">SqlSingle</span></span>|<span data-ttu-id="e4129-260">SqlString</span><span class="sxs-lookup"><span data-stu-id="e4129-260">SqlString</span></span>|  
|<span data-ttu-id="e4129-261">String</span><span class="sxs-lookup"><span data-stu-id="e4129-261">String</span></span>|<span data-ttu-id="e4129-262">UDT，可以是任何 CLR 类型标记为<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>。</span><span class="sxs-lookup"><span data-stu-id="e4129-262">UDT, which can be any CLR type marked with <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>.</span></span>|||  
  
 <span data-ttu-id="e4129-263">有关详细信息，请参阅[SqlClient 流支持](~/docs/framework/data/adonet/sqlclient-streaming-support.md)。</span><span class="sxs-lookup"><span data-stu-id="e4129-263">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e4129-264">连接中断或在数据检索期间已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-264">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="e4129-265">数据检索期间，<see cref="T:System.Data.SqlClient.SqlDataReader" /> 处于关闭状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-265">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="e4129-266">没有要读取的就绪数据 (例如，第一个 <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> 未被调用或返回错误)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-266">There is no data ready to be read (for example, the first <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="e4129-267">按顺序模式尝试读取上一步骤中读取的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-267">Tried to read a previously-read column in sequential mode.</span>
          </span>
          <span data-ttu-id="e4129-268">没有正在进行的异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-268">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="e4129-269">以顺序模式运行时，这适用于所有 Get\* 方法，读取流时也可对其进行调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-269">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="e4129-270">尝试读取不存在的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-270">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
          <span data-ttu-id="e4129-271">该列中的值为 null (<see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> == <see langword="true" />)，检索非 SQL 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-271">The value of the column was null (<see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> == <see langword="true" />), retrieving a non-SQL type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="e4129-272">
            <paramref name="T" /> 与 [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] 返回的类型不匹配或无法进行转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-272">
              <paramref name="T" /> doesn’t match the type returned by [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] or cannot be cast.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFieldValueAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;T&gt; GetFieldValueAsync&lt;T&gt; (int i, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;!!T&gt; GetFieldValueAsync&lt;T&gt;(int32 i, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetFieldValueAsync``1(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; override System::Threading::Tasks::Task&lt;T&gt; ^ GetFieldValueAsync(int i, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="e4129-273">要返回的值的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-273">The type of the value to be returned.</span>
          </span>
        </typeparam>
        <param name="i">
          <span data-ttu-id="e4129-274">要检索的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-274">The column to be retrieved.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="e4129-275">取消指示，用于对应该取消操作的通知进行传播。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-275">The cancellation instruction, which propagates a notification that operations should be canceled.</span>
          </span>
          <span data-ttu-id="e4129-276">此构造函数不对取消做保证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-276">This does not guarantee the cancellation.</span>
          </span>
          <span data-ttu-id="e4129-277">设置为 <see langword="CancellationToken.None" /> 将此方法等效于 <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-277">A setting of <see langword="CancellationToken.None" /> makes this method equivalent to <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />.</span>
          </span>
          <span data-ttu-id="e4129-278">返回任务必须标记为已取消。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-278">The returned task must be marked as cancelled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-279">异步获取作为类型的指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-279">Asynchronously gets the value of the specified column as a type.</span>
          </span>
          <span data-ttu-id="e4129-280">
            <see cref="M:System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)" />是此方法的同步版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-280">
              <see cref="M:System.Data.SqlClient.SqlDataReader.GetFieldValue``1(System.Int32)" /> is the synchronous version of this method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-281">返回的类型对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-281">The returned type object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-282">`T` 可以是以下类型之一：</span><span class="sxs-lookup"><span data-stu-id="e4129-282">`T` can be one of the following types:</span></span>  
  
|||||  
|-|-|-|-|  
|<span data-ttu-id="e4129-283">Boolean</span><span class="sxs-lookup"><span data-stu-id="e4129-283">Boolean</span></span>|<span data-ttu-id="e4129-284">Byte</span><span class="sxs-lookup"><span data-stu-id="e4129-284">Byte</span></span>|<span data-ttu-id="e4129-285">Char</span><span class="sxs-lookup"><span data-stu-id="e4129-285">Char</span></span>|<span data-ttu-id="e4129-286">DateTime</span><span class="sxs-lookup"><span data-stu-id="e4129-286">DateTime</span></span>|  
|<span data-ttu-id="e4129-287">DateTimeOffset</span><span class="sxs-lookup"><span data-stu-id="e4129-287">DateTimeOffset</span></span>|<span data-ttu-id="e4129-288">Decimal</span><span class="sxs-lookup"><span data-stu-id="e4129-288">Decimal</span></span>|<span data-ttu-id="e4129-289">Double</span><span class="sxs-lookup"><span data-stu-id="e4129-289">Double</span></span>|<span data-ttu-id="e4129-290">Float</span><span class="sxs-lookup"><span data-stu-id="e4129-290">Float</span></span>|  
|<span data-ttu-id="e4129-291">GUID</span><span class="sxs-lookup"><span data-stu-id="e4129-291">Guid</span></span>|<span data-ttu-id="e4129-292">Int16</span><span class="sxs-lookup"><span data-stu-id="e4129-292">Int16</span></span>|<span data-ttu-id="e4129-293">Int32</span><span class="sxs-lookup"><span data-stu-id="e4129-293">Int32</span></span>|<span data-ttu-id="e4129-294">Int64</span><span class="sxs-lookup"><span data-stu-id="e4129-294">Int64</span></span>|  
|<span data-ttu-id="e4129-295">SqlBoolean</span><span class="sxs-lookup"><span data-stu-id="e4129-295">SqlBoolean</span></span>|<span data-ttu-id="e4129-296">SqlByte</span><span class="sxs-lookup"><span data-stu-id="e4129-296">SqlByte</span></span>|<span data-ttu-id="e4129-297">SqlDateTime</span><span class="sxs-lookup"><span data-stu-id="e4129-297">SqlDateTime</span></span>|<span data-ttu-id="e4129-298">SqlDecimal</span><span class="sxs-lookup"><span data-stu-id="e4129-298">SqlDecimal</span></span>|  
|<span data-ttu-id="e4129-299">SqlDouble</span><span class="sxs-lookup"><span data-stu-id="e4129-299">SqlDouble</span></span>|<span data-ttu-id="e4129-300">SqlGuid</span><span class="sxs-lookup"><span data-stu-id="e4129-300">SqlGuid</span></span>|<span data-ttu-id="e4129-301">SqlInt16</span><span class="sxs-lookup"><span data-stu-id="e4129-301">SqlInt16</span></span>|<span data-ttu-id="e4129-302">SqlInt32</span><span class="sxs-lookup"><span data-stu-id="e4129-302">SqlInt32</span></span>|  
|<span data-ttu-id="e4129-303">SqlInt64</span><span class="sxs-lookup"><span data-stu-id="e4129-303">SqlInt64</span></span>|<span data-ttu-id="e4129-304">SqlMoney</span><span class="sxs-lookup"><span data-stu-id="e4129-304">SqlMoney</span></span>|<span data-ttu-id="e4129-305">SqlSingle</span><span class="sxs-lookup"><span data-stu-id="e4129-305">SqlSingle</span></span>|<span data-ttu-id="e4129-306">SqlString</span><span class="sxs-lookup"><span data-stu-id="e4129-306">SqlString</span></span>|  
|<span data-ttu-id="e4129-307">String</span><span class="sxs-lookup"><span data-stu-id="e4129-307">String</span></span>|<span data-ttu-id="e4129-308">UDT，可以是任何 CLR 类型标记为<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>。</span><span class="sxs-lookup"><span data-stu-id="e4129-308">UDT, which can be any CLR type marked with <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>.</span></span>|||  
  
 <span data-ttu-id="e4129-309">有关详细信息，请参阅[SqlClient 流支持](~/docs/framework/data/adonet/sqlclient-streaming-support.md)。</span><span class="sxs-lookup"><span data-stu-id="e4129-309">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e4129-310">连接中断或在数据检索期间已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-310">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="e4129-311">数据检索期间，<see cref="T:System.Data.SqlClient.SqlDataReader" /> 处于关闭状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-311">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="e4129-312">没有要读取的就绪数据 (例如，第一个 <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> 未被调用或返回错误)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-312">There is no data ready to be read (for example, the first <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="e4129-313">按顺序模式尝试读取上一步骤中读取的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-313">Tried to read a previously-read column in sequential mode.</span>
          </span>
          <span data-ttu-id="e4129-314">没有正在进行的异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-314">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="e4129-315">以顺序模式运行时，这适用于所有 Get\* 方法，读取流时也可对其进行调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-315">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
          <span data-ttu-id="e4129-316">在连接字符串中指定 <see langword="Context Connection=true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-316">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="e4129-317">尝试读取不存在的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-317">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlTypes.SqlNullValueException">
          <span data-ttu-id="e4129-318">该列中的值为 null (<see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> == <see langword="true" />)，检索非 SQL 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-318">The value of the column was null (<see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> == <see langword="true" />), retrieving a non-SQL type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="e4129-319">
            <paramref name="T" /> 与 [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] 返回的类型不匹配或无法进行转换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-319">
              <paramref name="T" /> doesn’t match the type returned by [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] or cannot be cast.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public override float GetFloat (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 GetFloat(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFloat (i As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override float GetFloat(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetFloat(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-320">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-320">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-321">以单精度浮点数字的形式获取指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-321">Gets the value of the specified column as a single-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-322">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-322">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-323">不进行任何转换。</span><span class="sxs-lookup"><span data-stu-id="e4129-323">No conversions are performed.</span></span> <span data-ttu-id="e4129-324">因此，检索的数据必须已经是单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="e4129-324">Therefore, the data retrieved must already be a single-precision floating point number.</span></span>  
  
 <span data-ttu-id="e4129-325">调用<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>来调用此方法之前检查 null 值。</span><span class="sxs-lookup"><span data-stu-id="e4129-325">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="e4129-326">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-326">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public override Guid GetGuid (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Guid GetGuid(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGuid (i As Integer) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Guid GetGuid(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetGuid(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-327">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-327">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-328">获取指定列的值作为全局唯一标识符 (GUID)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-328">Gets the value of the specified column as a globally unique identifier (GUID).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-329">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-329">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-330">不进行任何转换;因此，检索的数据必须已经是一个 GUID。</span><span class="sxs-lookup"><span data-stu-id="e4129-330">No conversions are performed; therefore, the data retrieved must already be a GUID.</span></span>  
  
 <span data-ttu-id="e4129-331">调用<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>来调用此方法之前检查 null 值。</span><span class="sxs-lookup"><span data-stu-id="e4129-331">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="e4129-332">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-332">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public override short GetInt16 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int16 GetInt16(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt16 (i As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override short GetInt16(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetInt16(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-333">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-333">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-334">获取指定列的 16 位带符号整数形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-334">Gets the value of the specified column as a 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-335">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-335">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-336">不进行任何转换;因此，检索的数据必须已经是一个 16 位带符号的整数。</span><span class="sxs-lookup"><span data-stu-id="e4129-336">No conversions are performed; therefore, the data retrieved must already be a 16-bit signed integer.</span></span>  
  
 <span data-ttu-id="e4129-337">调用<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>来调用此方法之前检查 null 值。</span><span class="sxs-lookup"><span data-stu-id="e4129-337">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="e4129-338">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-338">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public override int GetInt32 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetInt32(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt32 (i As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetInt32(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetInt32(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-339">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-339">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-340">获取指定列的 32 位带符号整数形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-340">Gets the value of the specified column as a 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-341">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-341">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-342">不进行任何转换;因此，检索的数据必须已经是一个 32 位带符号的整数。</span><span class="sxs-lookup"><span data-stu-id="e4129-342">No conversions are performed; therefore, the data retrieved must already be a 32-bit signed integer.</span></span>  
  
 <span data-ttu-id="e4129-343">调用<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>来调用此方法之前检查 null 值。</span><span class="sxs-lookup"><span data-stu-id="e4129-343">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="e4129-344">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-344">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public override long GetInt64 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetInt64(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt64 (i As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetInt64(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetInt64(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-345">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-345">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-346">以 64 位有符号整数的形式获取指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-346">Gets the value of the specified column as a 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-347">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-347">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-348">不进行任何转换;因此，检索的数据必须已经是一个 64 位带符号的整数。</span><span class="sxs-lookup"><span data-stu-id="e4129-348">No conversions are performed; therefore, the data retrieved must already be a 64-bit signed integer.</span></span>  
  
 <span data-ttu-id="e4129-349">调用<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>来调用此方法之前检查 null 值。</span><span class="sxs-lookup"><span data-stu-id="e4129-349">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="e4129-350">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-350">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override string GetName (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetName(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetName(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetName(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-351">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-351">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-352">获取指定列的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-352">Gets the name of the specified column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-353">指定列的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-353">The name of the specified column.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public override int GetOrdinal (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetOrdinal(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOrdinal (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetOrdinal(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetOrdinal(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="e4129-354">列的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-354">The name of the column.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-355">在给定列名时获取相应的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-355">Gets the column ordinal, given the name of the column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-356">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-356">The zero-based column ordinal.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-357">`GetOrdinal` 第一次执行区分大小写的查找。</span><span class="sxs-lookup"><span data-stu-id="e4129-357">`GetOrdinal` performs a case-sensitive lookup first.</span></span> <span data-ttu-id="e4129-358">如果失败，第二个，则会不区分大小写的搜索 (不区分大小写的比较是使用数据库排序规则)。</span><span class="sxs-lookup"><span data-stu-id="e4129-358">If it fails, a second, case-insensitive search occurs (a case-insensitive comparison is done using the database collation).</span></span> <span data-ttu-id="e4129-359">当比较受区域性特定的大小写规则时，可能出现意外的结果。</span><span class="sxs-lookup"><span data-stu-id="e4129-359">Unexpected results can occur when comparisons are affected by culture-specific casing rules.</span></span> <span data-ttu-id="e4129-360">例如，在土耳其语，下面的示例将生成错误结果因为土耳其语中的文件系统不使用的字母 i 的语言的大小写规则"文件"中。</span><span class="sxs-lookup"><span data-stu-id="e4129-360">For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter 'i' in "file".</span></span> <span data-ttu-id="e4129-361">该方法将引发`IndexOutOfRange`异常如果找不到的从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="e4129-361">The method throws an `IndexOutOfRange` exception if the zero-based column ordinal is not found.</span></span>  
  
 <span data-ttu-id="e4129-362">`GetOrdinal` 不区分假名宽度。</span><span class="sxs-lookup"><span data-stu-id="e4129-362">`GetOrdinal` is kana-width insensitive.</span></span>  
  
 <span data-ttu-id="e4129-363">由于基于序号的查找，比命名查找更为有效，它是效率不高调用`GetOrdinal`在循环中。</span><span class="sxs-lookup"><span data-stu-id="e4129-363">Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call `GetOrdinal` within a loop.</span></span> <span data-ttu-id="e4129-364">通过调用来节省时间`GetOrdinal`一次，并且将结果分配给整数变量以便在循环内的使用。</span><span class="sxs-lookup"><span data-stu-id="e4129-364">Save time by calling `GetOrdinal` once and assigning the results to an integer variable for use within the loop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4129-365">下面的示例演示如何使用 <xref:System.Data.SqlClient.SqlDataReader.GetOrdinal%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="e4129-365">The following example demonstrates how to use the <xref:System.Data.SqlClient.SqlDataReader.GetOrdinal%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataReader.GetOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.GetOrdinal/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataReader.GetOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.GetOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="e4129-366">指定的名称不是有效的列名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-366">The name specified is not a valid column name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificFieldType">
      <MemberSignature Language="C#" Value="public override Type GetProviderSpecificFieldType (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetProviderSpecificFieldType(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificFieldType (i As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetProviderSpecificFieldType(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-367">表示列序号的 <see cref="T:System.Int32" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-367">An <see cref="T:System.Int32" /> representing the column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-368">获取一个 <see langword="Object" />，它表示基础提供程序特定的字段类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-368">Gets an <see langword="Object" /> that is a representation of the underlying provider-specific field type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-369">获取一个 <see cref="T:System.Object" />，它表示基础提供程序特定的字段类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-369">Gets an <see cref="T:System.Object" /> that is a representation of the underlying provider-specific field type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValue">
      <MemberSignature Language="C#" Value="public override object GetProviderSpecificValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetProviderSpecificValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValue (i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetProviderSpecificValue(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-370">表示列序号的 <see cref="T:System.Int32" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-370">An <see cref="T:System.Int32" /> representing the column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-371">获取一个表示基础提供程序特定值的 <see langword="Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-371">Gets an <see langword="Object" /> that is a representation of the underlying provider specific value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-372">一个 <see cref="T:System.Object" />，它表示基础提供程序特定值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-372">An <see cref="T:System.Object" /> that is a representation of the underlying provider specific value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValues">
      <MemberSignature Language="C#" Value="public override int GetProviderSpecificValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetProviderSpecificValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetProviderSpecificValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetProviderSpecificValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="e4129-373">要将列值复制到其中的 <see cref="T:System.Object" /> 数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-373">An array of <see cref="T:System.Object" /> into which to copy the column values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-374">获取表示基础提供程序特定值的对象的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-374">Gets an array of objects that are a representation of the underlying provider specific values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-375">对象数组，它表示基础提供程序特定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-375">The array of objects that are a representation of the underlying provider specific values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchemaTable();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.GetSchemaTable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4129-376">返回一个描述 <see cref="T:System.Data.DataTable" /> 的列元数据的 <see cref="T:System.Data.SqlClient.SqlDataReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-376">Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-377">一个描述列元数据的 <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-377">A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-378">有关<xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A>方法按以下顺序返回关于每个列的元数据：</span><span class="sxs-lookup"><span data-stu-id="e4129-378">For the <xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A> method returns metadata about each column in the following order:</span></span>  
  
|<span data-ttu-id="e4129-379">DataReader 列</span><span class="sxs-lookup"><span data-stu-id="e4129-379">DataReader column</span></span>|<span data-ttu-id="e4129-380">描述</span><span class="sxs-lookup"><span data-stu-id="e4129-380">Description</span></span>|  
|-----------------------|-----------------|  
|<span data-ttu-id="e4129-381">AllowDBNull</span><span class="sxs-lookup"><span data-stu-id="e4129-381">AllowDBNull</span></span>|<span data-ttu-id="e4129-382">如果使用者可以将列设置为 null 值或提供程序无法确定使用者是否可以将列设置为 null 值设置。</span><span class="sxs-lookup"><span data-stu-id="e4129-382">Set if the consumer can set the column to a null value or if the provider cannot determine whether the consumer can set the column to a null value.</span></span> <span data-ttu-id="e4129-383">否则，不设置。</span><span class="sxs-lookup"><span data-stu-id="e4129-383">Otherwise, not set.</span></span> <span data-ttu-id="e4129-384">列可能包含 null 值，即使它不能设置为 null 值。</span><span class="sxs-lookup"><span data-stu-id="e4129-384">A column may contain null values, even if it cannot be set to a null value.</span></span>|  
|<span data-ttu-id="e4129-385">BaseCatalogName</span><span class="sxs-lookup"><span data-stu-id="e4129-385">BaseCatalogName</span></span>|<span data-ttu-id="e4129-386">包含的列的数据存储区中目录的名称。</span><span class="sxs-lookup"><span data-stu-id="e4129-386">The name of the catalog in the data store that contains the column.</span></span> <span data-ttu-id="e4129-387">如果无法确定基目录名称为 NULL。</span><span class="sxs-lookup"><span data-stu-id="e4129-387">NULL if the base catalog name cannot be determined.</span></span> <span data-ttu-id="e4129-388">此列的默认值为 null 值。</span><span class="sxs-lookup"><span data-stu-id="e4129-388">The default of this column is a null value.</span></span>|  
|<span data-ttu-id="e4129-389">BaseColumnName</span><span class="sxs-lookup"><span data-stu-id="e4129-389">BaseColumnName</span></span>|<span data-ttu-id="e4129-390">数据存储区中列的名称。</span><span class="sxs-lookup"><span data-stu-id="e4129-390">The name of the column in the data store.</span></span> <span data-ttu-id="e4129-391">这可能是不同于列名称使用别名时才在 ColumnName 列中返回。</span><span class="sxs-lookup"><span data-stu-id="e4129-391">This might be different than the column name returned in the ColumnName column if an alias was used.</span></span> <span data-ttu-id="e4129-392">如果无法确定基列名称，或者如果派生的但并不完全相同，则行集列，数据中的列存储一个 null 值。</span><span class="sxs-lookup"><span data-stu-id="e4129-392">A null value if the base column name cannot be determined or if the rowset column is derived, but not identical to, a column in the data store.</span></span> <span data-ttu-id="e4129-393">此列的默认值为 null 值。</span><span class="sxs-lookup"><span data-stu-id="e4129-393">The default of this column is a null value.</span></span>|  
|<span data-ttu-id="e4129-394">BaseSchemaName</span><span class="sxs-lookup"><span data-stu-id="e4129-394">BaseSchemaName</span></span>|<span data-ttu-id="e4129-395">中包含的列的数据存储的架构的名称。</span><span class="sxs-lookup"><span data-stu-id="e4129-395">The name of the schema in the data store that contains the column.</span></span> <span data-ttu-id="e4129-396">如果无法确定基础架构名称，null 值。</span><span class="sxs-lookup"><span data-stu-id="e4129-396">A null value if the base schema name cannot be determined.</span></span> <span data-ttu-id="e4129-397">此列的默认值为 null 值。</span><span class="sxs-lookup"><span data-stu-id="e4129-397">The default of this column is a null value.</span></span>|  
|<span data-ttu-id="e4129-398">BaseServerName</span><span class="sxs-lookup"><span data-stu-id="e4129-398">BaseServerName</span></span>|<span data-ttu-id="e4129-399">使用 Microsoft SQL server 实例的名称<xref:System.Data.SqlClient.SqlDataReader>。</span><span class="sxs-lookup"><span data-stu-id="e4129-399">The name of the instance of Microsoft SQL Server used by the <xref:System.Data.SqlClient.SqlDataReader>.</span></span>|  
|<span data-ttu-id="e4129-400">BaseTableName</span><span class="sxs-lookup"><span data-stu-id="e4129-400">BaseTableName</span></span>|<span data-ttu-id="e4129-401">表或视图中包含的列的数据存储区的名称。</span><span class="sxs-lookup"><span data-stu-id="e4129-401">The name of the table or view in the data store that contains the column.</span></span> <span data-ttu-id="e4129-402">如果基表名称不能确定，null 值。</span><span class="sxs-lookup"><span data-stu-id="e4129-402">A null value if the base table name cannot be determined.</span></span> <span data-ttu-id="e4129-403">此列的默认值为 null 值。</span><span class="sxs-lookup"><span data-stu-id="e4129-403">The default of this column is a null value.</span></span>|  
|<span data-ttu-id="e4129-404">列名</span><span class="sxs-lookup"><span data-stu-id="e4129-404">ColumnName</span></span>|<span data-ttu-id="e4129-405">列; 的名称这可能不是唯一的。</span><span class="sxs-lookup"><span data-stu-id="e4129-405">The name of the column; this might not be unique.</span></span> <span data-ttu-id="e4129-406">如果无法确定该名称，则返回 null 值。</span><span class="sxs-lookup"><span data-stu-id="e4129-406">If this cannot be determined, a null value is returned.</span></span> <span data-ttu-id="e4129-407">此名称始终反映最新的当前视图或命令文本中的列重命名。</span><span class="sxs-lookup"><span data-stu-id="e4129-407">This name always reflects the most recent renaming of the column in the current view or command text.</span></span>|  
|<span data-ttu-id="e4129-408">ColumnOrdinal</span><span class="sxs-lookup"><span data-stu-id="e4129-408">ColumnOrdinal</span></span>|<span data-ttu-id="e4129-409">从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="e4129-409">The zero-based ordinal of the column.</span></span> <span data-ttu-id="e4129-410">此列不能包含 null 值。</span><span class="sxs-lookup"><span data-stu-id="e4129-410">This column cannot contain a null value.</span></span>|  
|<span data-ttu-id="e4129-411">ColumnSize</span><span class="sxs-lookup"><span data-stu-id="e4129-411">ColumnSize</span></span>|<span data-ttu-id="e4129-412">列中值的最大可取长度。</span><span class="sxs-lookup"><span data-stu-id="e4129-412">The maximum possible length of a value in the column.</span></span> <span data-ttu-id="e4129-413">对于使用固定长度的数据类型的列，这是数据类型的大小。</span><span class="sxs-lookup"><span data-stu-id="e4129-413">For columns that use a fixed-length data type, this is the size of the data type.</span></span> <span data-ttu-id="e4129-414">有关`nvarchar(MAX)`， `varchar(MAX)`，和`varbinary(MAX)`列存储在 SQL Server 数据库中，最大大小为 2 GB。</span><span class="sxs-lookup"><span data-stu-id="e4129-414">For `nvarchar(MAX)`, `varchar(MAX)`, and `varbinary(MAX)` columns stored in a SQL Server database, the maximum size is 2GB.</span></span> <span data-ttu-id="e4129-415">如果这些列存储和访问文件，文件系统受最大大小限制。</span><span class="sxs-lookup"><span data-stu-id="e4129-415">If these columns are stored and accessed as files, the limit on maximum size is imposed by the file system.</span></span> <span data-ttu-id="e4129-416">此值更改时使用`Type System Version`连接字符串中的关键字。</span><span class="sxs-lookup"><span data-stu-id="e4129-416">This value changes when using the `Type System Version` keyword in the connection string.</span></span>  <span data-ttu-id="e4129-417">对新类型系统会将它们表示为从下层类型。</span><span class="sxs-lookup"><span data-stu-id="e4129-417">For new types they are represented as downlevel types.</span></span> <span data-ttu-id="e4129-418">MAX 数据类型返回正常 4 k`nvarchar`和 8000 `varchar`。</span><span class="sxs-lookup"><span data-stu-id="e4129-418">The MAX data types return the normal 4k for `nvarchar` and 8000 for `varchar`.</span></span> <span data-ttu-id="e4129-419">有关详细信息，请参阅 SQL Server 联机丛书中的 TRANSACT-SQL 引用。</span><span class="sxs-lookup"><span data-stu-id="e4129-419">For more information, see the Transact-SQL reference in SQL Server Books Online.</span></span>|  
|<span data-ttu-id="e4129-420">DataTypeName</span><span class="sxs-lookup"><span data-stu-id="e4129-420">DataTypeName</span></span>|<span data-ttu-id="e4129-421">返回表示指定的列的数据类型的字符串。</span><span class="sxs-lookup"><span data-stu-id="e4129-421">Returns a string representing the data type of the specified column.</span></span>|  
|<span data-ttu-id="e4129-422">IsAliased</span><span class="sxs-lookup"><span data-stu-id="e4129-422">IsAliased</span></span>|<span data-ttu-id="e4129-423">`true`： 列名称是的别名。</span><span class="sxs-lookup"><span data-stu-id="e4129-423">`true`: The column name is an alias.</span></span><br /><br /> <span data-ttu-id="e4129-424">`false`: 列名称不是别名。</span><span class="sxs-lookup"><span data-stu-id="e4129-424">`false`: The column name is not an alias.</span></span>|  
|<span data-ttu-id="e4129-425">IsAutoIncrement</span><span class="sxs-lookup"><span data-stu-id="e4129-425">IsAutoIncrement</span></span>|<span data-ttu-id="e4129-426">`true`: 列将值分配给新行以固定的增量。</span><span class="sxs-lookup"><span data-stu-id="e4129-426">`true`: The column assigns values to new rows in fixed increments.</span></span><br /><br /> <span data-ttu-id="e4129-427">`false`: 列不会分配到新行以固定的增量值。</span><span class="sxs-lookup"><span data-stu-id="e4129-427">`false`: The column does not assign values to new rows in fixed increments.</span></span> <span data-ttu-id="e4129-428">此列的默认值是`false`。</span><span class="sxs-lookup"><span data-stu-id="e4129-428">The default of this column is `false`.</span></span>|  
|<span data-ttu-id="e4129-429">IsColumnSet</span><span class="sxs-lookup"><span data-stu-id="e4129-429">IsColumnSet</span></span>|<span data-ttu-id="e4129-430">`true`: 列是稀疏列的列集的成员。</span><span class="sxs-lookup"><span data-stu-id="e4129-430">`true`: The column is a sparse column that is a member of a column set.</span></span>|  
|<span data-ttu-id="e4129-431">IsExpression</span><span class="sxs-lookup"><span data-stu-id="e4129-431">IsExpression</span></span>|<span data-ttu-id="e4129-432">`true`: 列是一个表达式。</span><span class="sxs-lookup"><span data-stu-id="e4129-432">`true`: The column is an expression.</span></span><br /><br /> <span data-ttu-id="e4129-433">`false`: 列不是表达式。</span><span class="sxs-lookup"><span data-stu-id="e4129-433">`false`: The column is not an expression.</span></span>|  
|<span data-ttu-id="e4129-434">isHidden</span><span class="sxs-lookup"><span data-stu-id="e4129-434">IsHidden</span></span>|<span data-ttu-id="e4129-435">`true`: 列被隐藏。</span><span class="sxs-lookup"><span data-stu-id="e4129-435">`true`: The column is hidden.</span></span><br /><br /> <span data-ttu-id="e4129-436">`false`: 列不隐藏。</span><span class="sxs-lookup"><span data-stu-id="e4129-436">`false`: The column is not hidden.</span></span>|  
|<span data-ttu-id="e4129-437">IsIdentity</span><span class="sxs-lookup"><span data-stu-id="e4129-437">IsIdentity</span></span>|<span data-ttu-id="e4129-438">`true`: 列是标识列。</span><span class="sxs-lookup"><span data-stu-id="e4129-438">`true`: The column is an identity column.</span></span><br /><br /> <span data-ttu-id="e4129-439">`false`: 列不是标识列。</span><span class="sxs-lookup"><span data-stu-id="e4129-439">`false`: The column is not an identity column.</span></span>|  
|<span data-ttu-id="e4129-440">IsKey</span><span class="sxs-lookup"><span data-stu-id="e4129-440">IsKey</span></span>|<span data-ttu-id="e4129-441">`true`： 此列是一组的行集中的列，合在一起，唯一标识该行。</span><span class="sxs-lookup"><span data-stu-id="e4129-441">`true`: The column is one of a set of columns in the rowset that, taken together, uniquely identify the row.</span></span> <span data-ttu-id="e4129-442">列集`IsKey`设置为`true`必须唯一地标识行集中的行。</span><span class="sxs-lookup"><span data-stu-id="e4129-442">The set of columns with `IsKey` set to `true` must uniquely identify a row in the rowset.</span></span> <span data-ttu-id="e4129-443">没有任何要求此列集是列的最小集。</span><span class="sxs-lookup"><span data-stu-id="e4129-443">There is no requirement that this set of columns is a minimal set of columns.</span></span> <span data-ttu-id="e4129-444">此列集可能会生成从基表的主键、 唯一约束或唯一索引。</span><span class="sxs-lookup"><span data-stu-id="e4129-444">This set of columns may be generated from a base table primary key, a unique constraint or a unique index.</span></span><br /><br /> <span data-ttu-id="e4129-445">`false`: 列不需要唯一标识行。</span><span class="sxs-lookup"><span data-stu-id="e4129-445">`false`: The column is not required to uniquely identify the row.</span></span>|  
|<span data-ttu-id="e4129-446">IsLong</span><span class="sxs-lookup"><span data-stu-id="e4129-446">IsLong</span></span>|<span data-ttu-id="e4129-447">`true`: 列包含二进制长对象 (BLOB) 包含很长的数据。</span><span class="sxs-lookup"><span data-stu-id="e4129-447">`true`: The column contains a Binary Long Object (BLOB) that contains very long data.</span></span> <span data-ttu-id="e4129-448">很长的数据的定义是特定于提供程序。</span><span class="sxs-lookup"><span data-stu-id="e4129-448">The definition of very long data is provider-specific.</span></span><br /><br /> <span data-ttu-id="e4129-449">`false`: 列不包含二进制长对象 (BLOB) 包含很长的数据。</span><span class="sxs-lookup"><span data-stu-id="e4129-449">`false`: The column does not contain a Binary Long Object (BLOB) that contains very long data.</span></span>|  
|<span data-ttu-id="e4129-450">为只读</span><span class="sxs-lookup"><span data-stu-id="e4129-450">IsReadOnly</span></span>|<span data-ttu-id="e4129-451">`true`: 列不能修改。</span><span class="sxs-lookup"><span data-stu-id="e4129-451">`true`: The column cannot be modified.</span></span><br /><br /> <span data-ttu-id="e4129-452">`false`： 可以修改列。</span><span class="sxs-lookup"><span data-stu-id="e4129-452">`false`: The column can be modified.</span></span>|  
|<span data-ttu-id="e4129-453">IsRowVersion</span><span class="sxs-lookup"><span data-stu-id="e4129-453">IsRowVersion</span></span>|<span data-ttu-id="e4129-454">`true`: 列包含无法写入到，持久性行标识符，并且具有到标识以外没有有意义的值的行。</span><span class="sxs-lookup"><span data-stu-id="e4129-454">`true`: The column contains a persistent row identifier that cannot be written to, and has no meaningful value except to identity the row.</span></span><br /><br /> <span data-ttu-id="e4129-455">`false`： 列不包含一个持久性行标识符，它无法写入到，并且标识行以外没有有意义的值。</span><span class="sxs-lookup"><span data-stu-id="e4129-455">`false`: The column does not contain a persistent row identifier that cannot be written to, and has no meaningful value except to identity the row.</span></span>|  
|<span data-ttu-id="e4129-456">IsUnique</span><span class="sxs-lookup"><span data-stu-id="e4129-456">IsUnique</span></span>|<span data-ttu-id="e4129-457">`true`： 列的类型是`timestamp`。</span><span class="sxs-lookup"><span data-stu-id="e4129-457">`true`: Column is of type `timestamp`.</span></span><br /><br /> <span data-ttu-id="e4129-458">`false`： 列不属于类型`timestamp`。</span><span class="sxs-lookup"><span data-stu-id="e4129-458">`false`: Column is not of type `timestamp`.</span></span>|  
|<span data-ttu-id="e4129-459">NonVersionedProviderType</span><span class="sxs-lookup"><span data-stu-id="e4129-459">NonVersionedProviderType</span></span>|<span data-ttu-id="e4129-460">而不考虑当前列的类型`Type System Version`连接字符串中指定。</span><span class="sxs-lookup"><span data-stu-id="e4129-460">The type of the column irrespective of the current `Type System Version` specified in the connection string.</span></span> <span data-ttu-id="e4129-461">返回的值是从<xref:System.Data.SqlDbType>枚举。</span><span class="sxs-lookup"><span data-stu-id="e4129-461">The returned value is from the <xref:System.Data.SqlDbType> enumeration.</span></span>|  
|<span data-ttu-id="e4129-462">NumericPrecision</span><span class="sxs-lookup"><span data-stu-id="e4129-462">NumericPrecision</span></span>|<span data-ttu-id="e4129-463">如果`ProviderType`是数值数据类型，这是列的最大精度。</span><span class="sxs-lookup"><span data-stu-id="e4129-463">If `ProviderType` is a numeric data type, this is the maximum precision of the column.</span></span> <span data-ttu-id="e4129-464">精度取决于列的定义。</span><span class="sxs-lookup"><span data-stu-id="e4129-464">The precision depends on the definition of the column.</span></span> <span data-ttu-id="e4129-465">如果`ProviderType`不是数值数据类型，这为 255。</span><span class="sxs-lookup"><span data-stu-id="e4129-465">If `ProviderType` is not a numeric data type, this is 255.</span></span>|  
|<span data-ttu-id="e4129-466">NumericScale</span><span class="sxs-lookup"><span data-stu-id="e4129-466">NumericScale</span></span>|<span data-ttu-id="e4129-467">如果`ProviderType`DBTYPE_DECIMAL 或 DBTYPE_NUMERIC，小数点右侧的数字个数。</span><span class="sxs-lookup"><span data-stu-id="e4129-467">If `ProviderType` is DBTYPE_DECIMAL or DBTYPE_NUMERIC, the number of digits to the right of the decimal point.</span></span> <span data-ttu-id="e4129-468">否则，此为 255。</span><span class="sxs-lookup"><span data-stu-id="e4129-468">Otherwise, this is 255.</span></span>|  
|<span data-ttu-id="e4129-469">ProviderSpecificDataType</span><span class="sxs-lookup"><span data-stu-id="e4129-469">ProviderSpecificDataType</span></span>|<span data-ttu-id="e4129-470">返回基于的列的提供程序特定数据类型`Type System Version`连接字符串中的关键字。</span><span class="sxs-lookup"><span data-stu-id="e4129-470">Returns the provider-specific data type of the column based on the `Type System Version` keyword in the connection string.</span></span>|  
|<span data-ttu-id="e4129-471">ProviderType</span><span class="sxs-lookup"><span data-stu-id="e4129-471">ProviderType</span></span>|<span data-ttu-id="e4129-472">列的数据类型的指示符。</span><span class="sxs-lookup"><span data-stu-id="e4129-472">The indicator of the column's data type.</span></span> <span data-ttu-id="e4129-473">如果列的数据类型会从行至行发生变化，这必须是对象。</span><span class="sxs-lookup"><span data-stu-id="e4129-473">If the data type of the column varies from row to row, this must be Object.</span></span> <span data-ttu-id="e4129-474">此列不能包含 null 值。</span><span class="sxs-lookup"><span data-stu-id="e4129-474">This column cannot contain a null value.</span></span>|  
|<span data-ttu-id="e4129-475">UdtAssemblyQualifiedName</span><span class="sxs-lookup"><span data-stu-id="e4129-475">UdtAssemblyQualifiedName</span></span>|<span data-ttu-id="e4129-476">如果列是用户定义类型 (UDT)，这是为每个用户定义的类型的程序集限定的名称<xref:System.Type.AssemblyQualifiedName%2A>。</span><span class="sxs-lookup"><span data-stu-id="e4129-476">If the column is a user-defined type (UDT), this is the qualified name of the UDT's assembly as per <xref:System.Type.AssemblyQualifiedName%2A>.</span></span> <span data-ttu-id="e4129-477">如果列不是 UDT，这是 null。</span><span class="sxs-lookup"><span data-stu-id="e4129-477">If the column is not a UDT, this is null.</span></span>|  
|<span data-ttu-id="e4129-478">XmlSchemaCollectionDatabase</span><span class="sxs-lookup"><span data-stu-id="e4129-478">XmlSchemaCollectionDatabase</span></span>|<span data-ttu-id="e4129-479">此 XML 实例的架构集合所在的位置，如果行包含 XML 列的相关信息的数据库名称。</span><span class="sxs-lookup"><span data-stu-id="e4129-479">The name of the database where the schema collection for this XML instance is located, if the row contains information about an XML column.</span></span> <span data-ttu-id="e4129-480">此值是`null`(`Nothing`在 Visual Basic 中) 如果当前数据库中定义的集合。</span><span class="sxs-lookup"><span data-stu-id="e4129-480">This value is `null` (`Nothing` in Visual Basic) if the collection is defined within the current database.</span></span> <span data-ttu-id="e4129-481">如果集合不存在架构，在这种情况下，它为还 null`XmlSchemaCollectionName`和`XmlSchemaCollectionOwningSchema`列还均为空。</span><span class="sxs-lookup"><span data-stu-id="e4129-481">It is also null if there is no schema collection, in which case the `XmlSchemaCollectionName` and `XmlSchemaCollectionOwningSchema` columns are also null.</span></span>|  
|<span data-ttu-id="e4129-482">XmlSchemaCollectionName</span><span class="sxs-lookup"><span data-stu-id="e4129-482">XmlSchemaCollectionName</span></span>|<span data-ttu-id="e4129-483">此 XML 实例时，如果行包含 XML 列的相关信息的架构集合的名称。</span><span class="sxs-lookup"><span data-stu-id="e4129-483">The name of the schema collection for this XML instance, if the row contains information about an XML column.</span></span> <span data-ttu-id="e4129-484">此值是`null`(`Nothing`在 Visual Basic 中) 是否没有任何关联的架构集合。</span><span class="sxs-lookup"><span data-stu-id="e4129-484">This value is `null` (`Nothing` in Visual Basic) if there is no associated schema collection.</span></span> <span data-ttu-id="e4129-485">如果值为 null，`XmlSchemaCollectionDatabase`和`XmlSchemaCollectionOwningSchema`列还均为空。</span><span class="sxs-lookup"><span data-stu-id="e4129-485">If the value is null, the `XmlSchemaCollectionDatabase` and `XmlSchemaCollectionOwningSchema` columns are also null.</span></span>|  
|<span data-ttu-id="e4129-486">XmlSchemaCollectionOwningSchema</span><span class="sxs-lookup"><span data-stu-id="e4129-486">XmlSchemaCollectionOwningSchema</span></span>|<span data-ttu-id="e4129-487">此 XML 实例的架构集合所在的位置，如果行包含有关 XML 列的信息所属关系架构。</span><span class="sxs-lookup"><span data-stu-id="e4129-487">The owning relational schema where the schema collection for this XML instance is located, if the row contains information about an XML column.</span></span> <span data-ttu-id="e4129-488">此值是`null`(`Nothing`在 Visual Basic 中) 如果当前数据库中定义的集合。</span><span class="sxs-lookup"><span data-stu-id="e4129-488">This value is `null` (`Nothing` in Visual Basic) if the collection is defined within the current database.</span></span> <span data-ttu-id="e4129-489">如果集合不存在架构，在这种情况下，它为还 null`XmlSchemaCollectionDatabase`和`XmlSchemaCollectionName`列还均为空。</span><span class="sxs-lookup"><span data-stu-id="e4129-489">It is also null if there is no schema collection, in which case the `XmlSchemaCollectionDatabase` and `XmlSchemaCollectionName` columns are also null.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="e4129-490">若要确保元数据列返回正确的信息，必须调用<xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>与`behavior`参数设置为`KeyInfo`。</span><span class="sxs-lookup"><span data-stu-id="e4129-490">To make sure that metadata columns return the correct information, you must call <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> with the `behavior` parameter set to `KeyInfo`.</span></span> <span data-ttu-id="e4129-491">否则，一些架构表中的列可能返回默认情况下，null，或不正确的数据。</span><span class="sxs-lookup"><span data-stu-id="e4129-491">Otherwise, some of the columns in the schema table may return default, null, or incorrect data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e4129-492">
            <see cref="T:System.Data.SqlClient.SqlDataReader" /> 已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-492">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlBinary">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlBinary GetSqlBinary (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlBinary GetSqlBinary(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlBinary (i As Integer) As SqlBinary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlBinary GetSqlBinary(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBinary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-493">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-493">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-494">获取指定列的 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-494">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlBinary" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-495">表示为 <see cref="T:System.Data.SqlTypes.SqlBinary" /> 的列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-495">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlBinary" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-496">不进行任何转换;因此检索到的数据必须已经是二进制的结构或生成异常。</span><span class="sxs-lookup"><span data-stu-id="e4129-496">No conversions are performed; therefore the data retrieved must already be a binary structure or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlBoolean">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlBoolean GetSqlBoolean (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlBoolean GetSqlBoolean(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlBoolean (i As Integer) As SqlBoolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlBoolean GetSqlBoolean(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-497">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-497">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-498">获取指定列的 <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-498">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-499">列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-499">The value of the column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-500">不进行任何转换;因此，检索的数据必须已经是一个布尔值，或生成异常。</span><span class="sxs-lookup"><span data-stu-id="e4129-500">No conversions are performed; therefore, the data retrieved must already be a Boolean or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlByte">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlByte GetSqlByte (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlByte GetSqlByte(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlByte (i As Integer) As SqlByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlByte GetSqlByte(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-501">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-501">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-502">获取指定列的 <see cref="T:System.Data.SqlTypes.SqlByte" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-502">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlByte" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-503">表示为 <see cref="T:System.Data.SqlTypes.SqlByte" /> 的列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-503">The value of the column expressed as a  <see cref="T:System.Data.SqlTypes.SqlByte" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-504">不进行任何转换;因此检索到的数据必须已经是一个字节，或生成异常。</span><span class="sxs-lookup"><span data-stu-id="e4129-504">No conversions are performed; therefore the data retrieved must already be a byte, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlBytes">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlBytes GetSqlBytes (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.SqlTypes.SqlBytes GetSqlBytes(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlBytes(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlBytes (i As Integer) As SqlBytes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlBytes ^ GetSqlBytes(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBytes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-505">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-505">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-506">获取指定列的 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-506">Gets the value of the specified column as <see cref="T:System.Data.SqlTypes.SqlBytes" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-507">表示为 <see cref="T:System.Data.SqlTypes.SqlBytes" /> 的列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-507">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlBytes" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlChars">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlChars GetSqlChars (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.SqlTypes.SqlChars GetSqlChars(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlChars(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlChars (i As Integer) As SqlChars" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlChars ^ GetSqlChars(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlChars</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-508">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-508">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-509">获取指定列的 <see cref="T:System.Data.SqlTypes.SqlChars" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-509">Gets the value of the specified column as <see cref="T:System.Data.SqlTypes.SqlChars" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-510">表示为 <see cref="T:System.Data.SqlTypes.SqlChars" /> 的列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-510">The value of the column expressed as a  <see cref="T:System.Data.SqlTypes.SqlChars" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDateTime">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlDateTime GetSqlDateTime (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlDateTime GetSqlDateTime(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDateTime (i As Integer) As SqlDateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlDateTime GetSqlDateTime(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlDateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-511">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-511">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-512">获取指定列的 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-512">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-513">表示为 <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 的列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-513">The value of the column expressed as a  <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-514">不进行任何转换;因此，检索的数据必须已经是一个日期/时间值，或生成异常。</span><span class="sxs-lookup"><span data-stu-id="e4129-514">No conversions are performed; therefore, the data retrieved must already be a date/time value, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDecimal">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlDecimal GetSqlDecimal (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlDecimal GetSqlDecimal(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDecimal (i As Integer) As SqlDecimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlDecimal GetSqlDecimal(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-515">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-515">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-516">获取指定列的 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-516">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-517">表示为 <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 的列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-517">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-518">不进行任何转换;因此，检索的数据必须已经是一个十进制值，或生成异常。</span><span class="sxs-lookup"><span data-stu-id="e4129-518">No conversions are performed; therefore, the data retrieved must already be a decimal value, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlDouble">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlDouble GetSqlDouble (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlDouble GetSqlDouble(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlDouble (i As Integer) As SqlDouble" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlDouble GetSqlDouble(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlDouble</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-519">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-519">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-520">获取指定列的 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-520">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlDouble" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-521">表示为 <see cref="T:System.Data.SqlTypes.SqlDouble" /> 的列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-521">The value of the column expressed as a  <see cref="T:System.Data.SqlTypes.SqlDouble" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-522">不进行任何转换;因此，检索的数据必须已经是双精度浮点数，或生成异常。</span><span class="sxs-lookup"><span data-stu-id="e4129-522">No conversions are performed; therefore, the data retrieved must already be a double-precision floating-point number, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlGuid">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlGuid GetSqlGuid (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlGuid GetSqlGuid(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlGuid (i As Integer) As SqlGuid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlGuid GetSqlGuid(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlGuid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-523">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-523">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-524">获取指定列的 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-524">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlGuid" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-525">表示为 <see cref="T:System.Data.SqlTypes.SqlGuid" /> 的列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-525">The value of the column expressed as a  <see cref="T:System.Data.SqlTypes.SqlGuid" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-526">不进行任何转换;因此，检索的数据必须已经是一个 GUID，或生成异常。</span><span class="sxs-lookup"><span data-stu-id="e4129-526">No conversions are performed; therefore, the data retrieved must already be a GUID, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlInt16">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlInt16 GetSqlInt16 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlInt16 GetSqlInt16(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlInt16 (i As Integer) As SqlInt16" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlInt16 GetSqlInt16(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-527">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-527">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-528">获取指定列的 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-528">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlInt16" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-529">表示为 <see cref="T:System.Data.SqlTypes.SqlInt16" /> 的列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-529">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlInt16" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-530">不进行任何转换;因此，检索的数据必须已经是一个 16 位带符号的整数，或生成异常。</span><span class="sxs-lookup"><span data-stu-id="e4129-530">No conversions are performed; therefore, the data retrieved must already be a 16-bit signed integer, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlInt32">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlInt32 GetSqlInt32 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlInt32 GetSqlInt32(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlInt32 (i As Integer) As SqlInt32" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlInt32 GetSqlInt32(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-531">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-531">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-532">获取指定列的 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-532">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlInt32" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-533">表示为 <see cref="T:System.Data.SqlTypes.SqlInt32" /> 的列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-533">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlInt32" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-534">不进行任何转换;因此检索到的数据必须已经是一个 32 位带符号的整数，或生成异常。</span><span class="sxs-lookup"><span data-stu-id="e4129-534">No conversions are performed; therefore the data retrieved must already be a 32-bit signed integer, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlInt64">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlInt64 GetSqlInt64 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlInt64 GetSqlInt64(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlInt64 (i As Integer) As SqlInt64" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlInt64 GetSqlInt64(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-535">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-535">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-536">获取指定列的 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-536">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlInt64" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-537">表示为 <see cref="T:System.Data.SqlTypes.SqlInt64" /> 的列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-537">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlInt64" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-538">不进行任何转换;因此，检索的数据必须已经是一个 64 位带符号的整数，或生成异常。</span><span class="sxs-lookup"><span data-stu-id="e4129-538">No conversions are performed; therefore, the data retrieved must already be a 64-bit signed integer, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlMoney">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlMoney GetSqlMoney (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlMoney GetSqlMoney(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlMoney (i As Integer) As SqlMoney" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlMoney GetSqlMoney(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlMoney</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-539">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-539">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-540">获取指定列的 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-540">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlMoney" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-541">表示为 <see cref="T:System.Data.SqlTypes.SqlMoney" /> 的列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-541">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlMoney" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-542">不进行任何转换;因此，检索的数据必须已经是一个十进制值，或生成异常。</span><span class="sxs-lookup"><span data-stu-id="e4129-542">No conversions are performed; therefore, the data retrieved must already be a decimal value, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlSingle">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlSingle GetSqlSingle (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlSingle GetSqlSingle(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlSingle (i As Integer) As SqlSingle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlSingle GetSqlSingle(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlSingle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-543">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-543">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-544">获取指定列的 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-544">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlSingle" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-545">表示为 <see cref="T:System.Data.SqlTypes.SqlSingle" /> 的列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-545">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlSingle" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-546">不进行任何转换;因此，检索的数据必须已经是单精度浮点数，或生成异常。</span><span class="sxs-lookup"><span data-stu-id="e4129-546">No conversions are performed; therefore, the data retrieved must already be a single precision floating point number, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlString">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlString GetSqlString (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Data.SqlTypes.SqlString GetSqlString(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlString (i As Integer) As SqlString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlString GetSqlString(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-547">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-547">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-548">获取指定列的 <see cref="T:System.Data.SqlTypes.SqlString" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-548">Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlString" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-549">表示为 <see cref="T:System.Data.SqlTypes.SqlString" /> 的列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-549">The value of the column expressed as a <see cref="T:System.Data.SqlTypes.SqlString" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-550">不进行任何转换;因此，检索的数据必须已经是一个字符串，或生成异常。</span><span class="sxs-lookup"><span data-stu-id="e4129-550">No conversions are performed; therefore, the data retrieved must already be a string, or an exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlValue">
      <MemberSignature Language="C#" Value="public virtual object GetSqlValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetSqlValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlValue (i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetSqlValue(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-551">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-551">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-552">返回指定列中 SQL Server 类型的数据值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-552">Returns the data value in the specified column as a SQL Server type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-553">表示为 <see cref="T:System.Data.SqlDbType" /> 的列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-553">The value of the column expressed as a <see cref="T:System.Data.SqlDbType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-554"><xref:System.Data.SqlClient.SqlDataReader.GetSqlValue%2A> 返回使用本机 SQL Server 类型的数据。</span><span class="sxs-lookup"><span data-stu-id="e4129-554"><xref:System.Data.SqlClient.SqlDataReader.GetSqlValue%2A> returns data using the native SQL Server types.</span></span> <span data-ttu-id="e4129-555">若要检索使用.NET Framework 类型的数据，请参阅<xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>。</span><span class="sxs-lookup"><span data-stu-id="e4129-555">To retrieve data using the .NET Framework types, see <xref:System.Data.SqlClient.SqlDataReader.GetValue%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlValues">
      <MemberSignature Language="C#" Value="public virtual int GetSqlValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetSqlValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetSqlValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="e4129-556">要将值复制到其中的 <see cref="T:System.Object" /> 数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-556">An array of <see cref="T:System.Object" /> into which to copy the values.</span>
          </span>
          <span data-ttu-id="e4129-557">这些列值表示为 SQL Server 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-557">The column values are expressed as SQL Server types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-558">填充包含记录中所有列的值的 <see cref="T:System.Object" /> 数组，这些值表示为 SQL Server 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-558">Fills an array of <see cref="T:System.Object" /> that contains the values for all the columns in the record, expressed as SQL Server types.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-559">表示复制的列数的整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-559">An integer indicating the number of columns copied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-560">返回一个调用，而不 CLR 类型系统中使用 SQL 类型系统中的记录中的所有列的值。</span><span class="sxs-lookup"><span data-stu-id="e4129-560">Returns the values for all the columns in the record in a single call, using the SQL type system instead of the CLR type system.</span></span> <span data-ttu-id="e4129-561">长度<xref:System.Object>数组不需要匹配的记录中的列数。</span><span class="sxs-lookup"><span data-stu-id="e4129-561">The length of the <xref:System.Object> array does not need to match the number of columns in the record.</span></span> <span data-ttu-id="e4129-562">你可以将传递<xref:System.Object>数组，其中包含的记录中包含的列数少于。</span><span class="sxs-lookup"><span data-stu-id="e4129-562">You can pass an <xref:System.Object> array that contains fewer than the number of columns contained in the record.</span></span> <span data-ttu-id="e4129-563">数据量<xref:System.Object>数组包含复制到起始位置的列序号 0 的数组。</span><span class="sxs-lookup"><span data-stu-id="e4129-563">Only the amount of data the <xref:System.Object> array holds is copied to the array, starting at the column with ordinal 0.</span></span> <span data-ttu-id="e4129-564">你还可以传递<xref:System.Object>其长度是多个结果行中包含的列数的数组。</span><span class="sxs-lookup"><span data-stu-id="e4129-564">You can also pass an <xref:System.Object> array whose length is more than the number of columns contained in the resulting row.</span></span> <span data-ttu-id="e4129-565">任何剩余的列是不变。</span><span class="sxs-lookup"><span data-stu-id="e4129-565">Any remaining columns are untouched.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e4129-566">
            <paramref name="values" /> 为 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-566">
              <paramref name="values" /> is null.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlXml">
      <MemberSignature Language="C#" Value="public virtual System.Data.SqlTypes.SqlXml GetSqlXml (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.SqlTypes.SqlXml GetSqlXml(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetSqlXml(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSqlXml (i As Integer) As SqlXml" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::SqlTypes::SqlXml ^ GetSqlXml(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlXml</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-567">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-567">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-568">获取指定列的 XML 值形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-568">Gets the value of the specified column as an XML value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-569">包含相应字段中存储的 XML 的 <see cref="T:System.Data.SqlTypes.SqlXml" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-569">A <see cref="T:System.Data.SqlTypes.SqlXml" /> value that contains the XML stored within the corresponding field.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-570">不进行任何转换;因此，检索的数据必须已经是一个 XML 值。</span><span class="sxs-lookup"><span data-stu-id="e4129-570">No conversions are performed; therefore, the data retrieved must already be an XML value.</span></span>  
  
 <span data-ttu-id="e4129-571">调用<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>来调用此方法之前检查 null 值。</span><span class="sxs-lookup"><span data-stu-id="e4129-571">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e4129-572">传递的索引在 0 至 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围之外。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-572">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e4129-573">已尝试读取或访问关闭的 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 中的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-573">An attempt was made to read or access columns in a closed <see cref="T:System.Data.SqlClient.SqlDataReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="e4129-574">检索的数据与 <see cref="T:System.Data.SqlTypes.SqlXml" /> 类型不兼容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-574">The retrieved data is not compatible with the <see cref="T:System.Data.SqlTypes.SqlXml" /> type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetStream (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetStream(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetStream(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStream (i As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ GetStream(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-575">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-575">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-576">检索作为 <see cref="T:System.IO.Stream" /> 的二进制、图像、varbinary、UDT 和变量数据类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-576">Retrieves binary, image, varbinary, UDT, and variant data types as a <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-577">一个流对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-577">A stream object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-578"><xref:System.IO.Stream.ReadTimeout%2A> 默认值为<xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>; 但可以修改<xref:System.IO.Stream.ReadTimeout%2A>通过<xref:System.Data.SqlClient.SqlDataReader.GetStream%2A>。</span><span class="sxs-lookup"><span data-stu-id="e4129-578"><xref:System.IO.Stream.ReadTimeout%2A> defaults to the value of <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>; but you can modify <xref:System.IO.Stream.ReadTimeout%2A> via <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A>.</span></span>  
  
 <span data-ttu-id="e4129-579">Null 值将返回一个空 （零字节） 为<xref:System.IO.Stream>。</span><span class="sxs-lookup"><span data-stu-id="e4129-579">Null values will be returned as an empty (zero bytes) <xref:System.IO.Stream>.</span></span>  
  
 <span data-ttu-id="e4129-580"><xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> 将引发<xref:System.InvalidOperationException>异常时返回的对象上使用<xref:System.Data.SqlClient.SqlDataReader.GetStream%2A>时<xref:System.Data.CommandBehavior.SequentialAccess>生效。</span><span class="sxs-lookup"><span data-stu-id="e4129-580"><xref:System.Data.SqlClient.SqlDataReader.GetBytes%2A> will raise an <xref:System.InvalidOperationException> exception when used on an object returned by <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A> when <xref:System.Data.CommandBehavior.SequentialAccess> is in effect.</span></span>  
  
 <span data-ttu-id="e4129-581"><xref:System.Data.SqlClient.SqlException> 从引发异常<xref:System.IO.Stream>作为引发<xref:System.IO.IOException>异常; 请检查内部异常以<xref:System.Data.SqlClient.SqlException>。</span><span class="sxs-lookup"><span data-stu-id="e4129-581"><xref:System.Data.SqlClient.SqlException> exceptions raised from <xref:System.IO.Stream> are thrown as <xref:System.IO.IOException> exceptions; check the inner exception for the <xref:System.Data.SqlClient.SqlException>.</span></span>  
  
 <span data-ttu-id="e4129-582">以下<xref:System.IO.Stream>成员不是可用于返回的对象<xref:System.Data.SqlClient.SqlDataReader.GetStream%2A>:</span><span class="sxs-lookup"><span data-stu-id="e4129-582">The following <xref:System.IO.Stream> members are not available for objects returned by <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A>:</span></span>  
  
-   <span data-ttu-id="e4129-583">调用</span><span class="sxs-lookup"><span data-stu-id="e4129-583">BeginWrite</span></span>  
  
-   <span data-ttu-id="e4129-584">EndWrite</span><span class="sxs-lookup"><span data-stu-id="e4129-584">EndWrite</span></span>  
  
-   <span data-ttu-id="e4129-585">长度</span><span class="sxs-lookup"><span data-stu-id="e4129-585">Length</span></span>  
  
-   <span data-ttu-id="e4129-586">位置</span><span class="sxs-lookup"><span data-stu-id="e4129-586">Position</span></span>  
  
-   <span data-ttu-id="e4129-587">查找</span><span class="sxs-lookup"><span data-stu-id="e4129-587">Seek</span></span>  
  
-   <span data-ttu-id="e4129-588">SetLength</span><span class="sxs-lookup"><span data-stu-id="e4129-588">SetLength</span></span>  
  
-   <span data-ttu-id="e4129-589">Write</span><span class="sxs-lookup"><span data-stu-id="e4129-589">Write</span></span>  
  
-   <span data-ttu-id="e4129-590">WriteByte</span><span class="sxs-lookup"><span data-stu-id="e4129-590">WriteByte</span></span>  
  
-   <span data-ttu-id="e4129-591">WriteTimeout</span><span class="sxs-lookup"><span data-stu-id="e4129-591">WriteTimeout</span></span>  
  
 <span data-ttu-id="e4129-592">当连接属性`ContextConnection=true`，<xref:System.Data.SqlClient.SqlDataReader.GetStream%2A>仅顺序同时支持同步的数据检索 (<xref:System.Data.CommandBehavior.SequentialAccess>) 和非连续 (<xref:System.Data.CommandBehavior.Default>) 访问。</span><span class="sxs-lookup"><span data-stu-id="e4129-592">When the connection property `ContextConnection=true`, <xref:System.Data.SqlClient.SqlDataReader.GetStream%2A> only supports synchronous data retrieval for both sequential (<xref:System.Data.CommandBehavior.SequentialAccess>) and non-sequential (<xref:System.Data.CommandBehavior.Default>) access.</span></span>  
  
 <span data-ttu-id="e4129-593">有关详细信息，请参阅[SqlClient 流支持](~/docs/framework/data/adonet/sqlclient-streaming-support.md)。</span><span class="sxs-lookup"><span data-stu-id="e4129-593">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e4129-594">连接中断或在数据检索期间已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-594">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="e4129-595">数据检索期间，<see cref="T:System.Data.SqlClient.SqlDataReader" /> 处于关闭状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-595">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="e4129-596">没有要读取的就绪数据 (例如，第一个 <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> 未被调用或返回错误)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-596">There is no data ready to be read (for example, the first <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="e4129-597">按顺序模式尝试读取上一步骤中读取的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-597">Tried to read a previously-read column in sequential mode.</span>
          </span>
          <span data-ttu-id="e4129-598">没有正在进行的异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-598">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="e4129-599">以顺序模式运行时，这适用于所有 Get\* 方法，读取流时也可对其进行调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-599">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="e4129-600">尝试读取不存在的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-600">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="e4129-601">返回的类型不属于以下类型之一：</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-601">The returned type was not one of the types below:</span>
          </span>  
  
-   <span data-ttu-id="e4129-602">binary</span><span class="sxs-lookup"><span data-stu-id="e4129-602">binary</span></span>  
  
-   <span data-ttu-id="e4129-603">图像</span><span class="sxs-lookup"><span data-stu-id="e4129-603">image</span></span>  
  
-   <span data-ttu-id="e4129-604">varbinary</span><span class="sxs-lookup"><span data-stu-id="e4129-604">varbinary</span></span>  
  
-   <span data-ttu-id="e4129-605">UDT</span><span class="sxs-lookup"><span data-stu-id="e4129-605">udt</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetString(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-606">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-606">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-607">获取指定列的字符串形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-607">Gets the value of the specified column as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-608">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-608">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-609">不进行任何转换;因此，检索的数据已必须是字符串。</span><span class="sxs-lookup"><span data-stu-id="e4129-609">No conversions are performed; therefore, the data retrieved must already be a string.</span></span>  
  
 <span data-ttu-id="e4129-610">调用<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>来调用此方法之前检查 null 值。</span><span class="sxs-lookup"><span data-stu-id="e4129-610">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="e4129-611">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-611">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTextReader">
      <MemberSignature Language="C#" Value="public override System.IO.TextReader GetTextReader (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.TextReader GetTextReader(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetTextReader(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetTextReader (i As Integer) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::TextReader ^ GetTextReader(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-612">要检索的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-612">The column to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-613">检索作为 <see cref="T:System.IO.TextReader" /> 的 Char、 NChar、 NText、 NVarChar、 text、 varChar 和 Variant data types。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-613">Retrieves Char, NChar, NText, NVarChar, text, varChar, and Variant data types as a <see cref="T:System.IO.TextReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-614">返回的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-614">The returned object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-615"><xref:System.Data.SqlClient.SqlException> 从引发异常<xref:System.IO.TextReader>作为引发<xref:System.IO.IOException>异常; 请检查内部异常以<xref:System.Data.SqlClient.SqlException>。</span><span class="sxs-lookup"><span data-stu-id="e4129-615"><xref:System.Data.SqlClient.SqlException> exceptions raised from <xref:System.IO.TextReader> are thrown as <xref:System.IO.IOException> exceptions; check the inner exception for the <xref:System.Data.SqlClient.SqlException>.</span></span>  
  
 <span data-ttu-id="e4129-616">Null 值将返回一个空 （零字节） 为<xref:System.IO.TextReader>。</span><span class="sxs-lookup"><span data-stu-id="e4129-616">Null values will be returned as an empty (zero bytes) <xref:System.IO.TextReader>.</span></span>  
  
 <span data-ttu-id="e4129-617"><xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> 将引发<xref:System.InvalidOperationException>异常时返回的对象上使用<xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A>时<xref:System.Data.CommandBehavior.SequentialAccess>生效。</span><span class="sxs-lookup"><span data-stu-id="e4129-617"><xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> will raise an <xref:System.InvalidOperationException> exception when used on an object returned by <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> when <xref:System.Data.CommandBehavior.SequentialAccess> is in effect.</span></span>  
  
 <span data-ttu-id="e4129-618">当连接属性`ContextConnection=true`，<xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A>仅顺序同时支持同步的数据检索 (<xref:System.Data.CommandBehavior.SequentialAccess>) 和非连续 (<xref:System.Data.CommandBehavior.Default>) 访问。</span><span class="sxs-lookup"><span data-stu-id="e4129-618">When the connection property `ContextConnection=true`, <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> only supports synchronous data retrieval for both sequential (<xref:System.Data.CommandBehavior.SequentialAccess>) and non-sequential (<xref:System.Data.CommandBehavior.Default>) access.</span></span>  
  
 <span data-ttu-id="e4129-619">有关详细信息，请参阅[SqlClient 流支持](~/docs/framework/data/adonet/sqlclient-streaming-support.md)。</span><span class="sxs-lookup"><span data-stu-id="e4129-619">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e4129-620">连接中断或在数据检索期间已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-620">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="e4129-621">数据检索期间，<see cref="T:System.Data.SqlClient.SqlDataReader" /> 处于关闭状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-621">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="e4129-622">没有要读取的就绪数据 (例如，第一个 <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> 未被调用或返回错误)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-622">There is no data ready to be read (for example, the first <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="e4129-623">按顺序模式尝试读取上一步骤中读取的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-623">Tried to read a previously-read column in sequential mode.</span>
          </span>
          <span data-ttu-id="e4129-624">没有正在进行的异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-624">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="e4129-625">以顺序模式运行时，这适用于所有 Get\* 方法，读取流时也可对其进行调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-625">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="e4129-626">尝试读取不存在的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-626">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="e4129-627">返回的类型不属于以下类型之一：</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-627">The returned type was not one of the types below:</span>
          </span>  
  
-   <span data-ttu-id="e4129-628">char</span><span class="sxs-lookup"><span data-stu-id="e4129-628">char</span></span>  
  
-   <span data-ttu-id="e4129-629">nchar</span><span class="sxs-lookup"><span data-stu-id="e4129-629">nchar</span></span>  
  
-   <span data-ttu-id="e4129-630">ntext</span><span class="sxs-lookup"><span data-stu-id="e4129-630">ntext</span></span>  
  
-   <span data-ttu-id="e4129-631">nvarchar</span><span class="sxs-lookup"><span data-stu-id="e4129-631">nvarchar</span></span>  
  
-   <span data-ttu-id="e4129-632">文本</span><span class="sxs-lookup"><span data-stu-id="e4129-632">text</span></span>  
  
-   <span data-ttu-id="e4129-633">varchar</span><span class="sxs-lookup"><span data-stu-id="e4129-633">varchar</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTimeSpan">
      <MemberSignature Language="C#" Value="public virtual TimeSpan GetTimeSpan (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TimeSpan GetTimeSpan(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetTimeSpan(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTimeSpan (i As Integer) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TimeSpan GetTimeSpan(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-634">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-634">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-635">检索指定列的 <see cref="T:System.TimeSpan" /> 对象形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-635">Retrieves the value of the specified column as a <see cref="T:System.TimeSpan" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-636">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-636">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-637">不进行任何转换;因此，检索的数据必须已经是<xref:System.TimeSpan>对象。</span><span class="sxs-lookup"><span data-stu-id="e4129-637">No conversions are performed; therefore, the data retrieved must already be a <xref:System.TimeSpan> object.</span></span>  
  
 <span data-ttu-id="e4129-638">调用<xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A>来调用此方法之前检查 null 值。</span><span class="sxs-lookup"><span data-stu-id="e4129-638">Call <xref:System.Data.SqlClient.SqlDataReader.IsDBNull%2A> to check for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="e4129-639">指定的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-639">The specified cast is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetValue(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-640">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-640">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-641">获取指定列以本机格式表示的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-641">Gets the value of the specified column in its native format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-642">对于 null 数据库列，此方法返回 <see cref="T:System.DBNull" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-642">This method returns <see cref="T:System.DBNull" /> for null database columns.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-643"><xref:System.Data.SqlClient.SqlDataReader.GetValue%2A> 返回使用.NET Framework 类型的数据。</span><span class="sxs-lookup"><span data-stu-id="e4129-643"><xref:System.Data.SqlClient.SqlDataReader.GetValue%2A> returns data using the .NET Framework types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public override int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetValues(System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="e4129-644">要将属性列复制到的 <see cref="T:System.Object" /> 数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-644">An array of <see cref="T:System.Object" /> into which to copy the attribute columns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-645">使用当前行的列值来填充对象数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-645">Populates an array of objects with the column values of the current row.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-646">数组中的 <see cref="T:System.Object" /> 实例数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-646">The number of instances of <see cref="T:System.Object" /> in the array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-647">对于大多数应用程序，此方法用于检索所有列，而不是单独都检索每个列提供一种高效的方法。</span><span class="sxs-lookup"><span data-stu-id="e4129-647">For most applications, this method provides an efficient means for retrieving all columns, instead of retrieving each column individually.</span></span>  
  
 <span data-ttu-id="e4129-648">你可以将传递<xref:System.Object>数组，其中包含生成的行中包含的列数少于。</span><span class="sxs-lookup"><span data-stu-id="e4129-648">You can pass an <xref:System.Object> array that contains fewer than the number of columns contained in the resulting row.</span></span> <span data-ttu-id="e4129-649">数据量<xref:System.Object>数组包含复制到数组。</span><span class="sxs-lookup"><span data-stu-id="e4129-649">Only the amount of data the <xref:System.Object> array holds is copied to the array.</span></span> <span data-ttu-id="e4129-650">你还可以传递<xref:System.Object>其长度是多个结果行中包含的列数的数组。</span><span class="sxs-lookup"><span data-stu-id="e4129-650">You can also pass an <xref:System.Object> array whose length is more than the number of columns contained in the resulting row.</span></span>  
  
 <span data-ttu-id="e4129-651">对于 null 数据库列，此方法返回 <xref:System.DBNull>。</span><span class="sxs-lookup"><span data-stu-id="e4129-651">This method returns <xref:System.DBNull> for null database columns.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4129-652">下面的示例演示了如何使用大小正确的数组读取当前行从提供的所有值<xref:System.Data.SqlClient.SqlDataReader>。</span><span class="sxs-lookup"><span data-stu-id="e4129-652">The following example demonstrates using a correctly sized  array  to read all values from the current row in the supplied <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="e4129-653">此外，此示例演示如何使用可能是小于或大于可用的列数的固定大小的数组。</span><span class="sxs-lookup"><span data-stu-id="e4129-653">In addition, the sample demonstrates using a fixed-sized array that could be either smaller or larger than the number of available columns.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetValueObject#2](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValueObject/CS/source.cs#2)]
 [!code-vb[DataWorks DataTableReader.GetValueObject#2](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValueObject/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXmlReader">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlReader GetXmlReader (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlReader GetXmlReader(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.GetXmlReader(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXmlReader (i As Integer) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlReader ^ GetXmlReader(int i);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-654">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-654">The value of the specified column.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-655">检索作为 <see cref="T:System.Xml.XmlReader" /> 的类型 XML 数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-655">Retrieves data of type XML as an <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-656">返回的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-656">The returned object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-657"><xref:System.Xml.XmlReader>返回对象<xref:System.Data.SqlClient.SqlDataReader.GetXmlReader%2A>不支持异步操作。</span><span class="sxs-lookup"><span data-stu-id="e4129-657">The <xref:System.Xml.XmlReader> object returned by <xref:System.Data.SqlClient.SqlDataReader.GetXmlReader%2A> does not support asynchronous operations.</span></span> <span data-ttu-id="e4129-658">如果在上需要异步操作<xref:System.Xml.XmlReader>、 服务器上的类型转换为 nvarchar (MAX) 的 XML 列和使用<xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A>与<xref:System.Xml.XmlReader.Create%2A>。</span><span class="sxs-lookup"><span data-stu-id="e4129-658">If you require asynchronous operations on an <xref:System.Xml.XmlReader>, cast the XML column to an NVARCHAR(MAX) on the server and use <xref:System.Data.SqlClient.SqlDataReader.GetTextReader%2A> with <xref:System.Xml.XmlReader.Create%2A>.</span></span>  
  
 <span data-ttu-id="e4129-659"><xref:System.Data.SqlClient.SqlException> 从引发异常<xref:System.Xml.XmlReader>作为引发<xref:System.Xml.XmlException>异常; 请检查内部异常以<xref:System.Data.SqlClient.SqlException>。</span><span class="sxs-lookup"><span data-stu-id="e4129-659"><xref:System.Data.SqlClient.SqlException> exceptions raised from <xref:System.Xml.XmlReader> are thrown as <xref:System.Xml.XmlException> exceptions; check the inner exception for the <xref:System.Data.SqlClient.SqlException>.</span></span>  
  
 <span data-ttu-id="e4129-660"><xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> 将引发<xref:System.InvalidOperationException>异常时返回的对象上使用<xref:System.Data.SqlClient.SqlDataReader.GetXmlReader%2A>时<xref:System.Data.CommandBehavior.SequentialAccess>生效。</span><span class="sxs-lookup"><span data-stu-id="e4129-660"><xref:System.Data.SqlClient.SqlDataReader.GetChars%2A> will raise an <xref:System.InvalidOperationException> exception when used on an object returned by <xref:System.Data.SqlClient.SqlDataReader.GetXmlReader%2A> when <xref:System.Data.CommandBehavior.SequentialAccess> is in effect.</span></span>  
  
 <span data-ttu-id="e4129-661">有关详细信息，请参阅[SqlClient 流支持](~/docs/framework/data/adonet/sqlclient-streaming-support.md)。</span><span class="sxs-lookup"><span data-stu-id="e4129-661">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e4129-662">连接中断或在数据检索期间已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-662">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="e4129-663">数据检索期间，<see cref="T:System.Data.SqlClient.SqlDataReader" /> 处于关闭状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-663">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="e4129-664">没有要读取的就绪数据 (例如，第一个 <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> 未被调用或返回错误)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-664">There is no data ready to be read (for example, the first <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="e4129-665">按顺序模式尝试读取上一步骤中读取的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-665">Trying to read a previously read column in sequential mode.</span>
          </span>
          <span data-ttu-id="e4129-666">没有正在进行的异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-666">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="e4129-667">以顺序模式运行时，这适用于所有 Get\* 方法，读取流时也可对其进行调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-667">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="e4129-668">尝试读取不存在的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-668">Trying to read a column that does not exist.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="e4129-669">返回的类不是 xml。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-669">The returned type was not xml.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HasRows">
      <MemberSignature Language="C#" Value="public override bool HasRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRows" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.HasRows" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasRows { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4129-670">获取一个值，该值指示 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 是否包含一行还是多行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-670">Gets a value that indicates whether the <see cref="T:System.Data.SqlClient.SqlDataReader" /> contains one or more rows.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4129-671">如果 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 包含一行或多行，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-671">
              <see langword="true" /> if the <see cref="T:System.Data.SqlClient.SqlDataReader" /> contains one or more rows; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public override bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsClosed { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataReader.IsClosed</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4129-672">检索一个布尔值，该值指示是否已关闭指定的 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-672">Retrieves a Boolean value that indicates whether the specified <see cref="T:System.Data.SqlClient.SqlDataReader" /> instance has been closed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4129-673">如果指定的 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 实例已关闭，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-673">
              <see langword="true" /> if the specified <see cref="T:System.Data.SqlClient.SqlDataReader" /> instance is closed; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-674">不能从读取<xref:System.Data.SqlClient.SqlDataReader>已关闭的实例。</span><span class="sxs-lookup"><span data-stu-id="e4129-674">It is not possible to read from a <xref:System.Data.SqlClient.SqlDataReader> instance that is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCommandBehavior">
      <MemberSignature Language="C#" Value="protected bool IsCommandBehavior (System.Data.CommandBehavior condition);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsCommandBehavior(valuetype System.Data.CommandBehavior condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.IsCommandBehavior(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsCommandBehavior (condition As CommandBehavior) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsCommandBehavior(System::Data::CommandBehavior condition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="e4129-675">
            <see cref="T:System.Data.CommandBehavior" /> 枚举。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-675">A <see cref="T:System.Data.CommandBehavior" /> enumeration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-676">确定指定的 <see cref="T:System.Data.CommandBehavior" /> 是否与 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 的对应项匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-676">Determines whether the specified <see cref="T:System.Data.CommandBehavior" /> matches that of the <see cref="T:System.Data.SqlClient.SqlDataReader" /> .</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-677">如果指定的 <see cref="T:System.Data.CommandBehavior" /> 为 true，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-677">
              <see langword="true" /> if the specified <see cref="T:System.Data.CommandBehavior" /> is true, <see langword="false" /> otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-678">此成员支持 .NET Framework 结构，不能在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="e4129-678">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public override bool IsDBNull (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDBNull(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDBNull (i As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDBNull(int i);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.IsDBNull(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-679">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-679">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-680">获取一个值，该值指示列中是否包含不存在的或缺少的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-680">Gets a value that indicates whether the column contains non-existent or missing values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-681">如果指定的列值与 <see cref="T:System.DBNull" /> 等效，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-681">
              <see langword="true" /> if the specified column value is equivalent to <see cref="T:System.DBNull" />; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-682">调用此方法来检查前调用的类型化的 null 列值 get 方法 (例如， <xref:System.Data.SqlClient.SqlDataReader.GetByte%2A>， <xref:System.Data.SqlClient.SqlDataReader.GetChar%2A>，依次类推) 以避免产生一个错误。</span><span class="sxs-lookup"><span data-stu-id="e4129-682">Call this method to check for null column values before calling the typed get methods (for example, <xref:System.Data.SqlClient.SqlDataReader.GetByte%2A>, <xref:System.Data.SqlClient.SqlDataReader.GetChar%2A>, and so on) to avoid raising an error.</span></span>  
  
 [!code-csharp[SqlDataReader_IsDbNull#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/sqldatareader_isdbnull/cs/source.cs#1)]
 [!code-vb[SqlDataReader_IsDbNull#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/sqldatareader_isdbnull/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNullAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;bool&gt; IsDBNullAsync (int i, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; IsDBNullAsync(int32 i, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;bool&gt; ^ IsDBNullAsync(int i, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-683">从零开始的要检索的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-683">The zero-based column to be retrieved.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="e4129-684">取消指示，用于对应该取消操作的通知进行传播。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-684">The cancellation instruction, which propagates a notification that operations should be canceled.</span>
          </span>
          <span data-ttu-id="e4129-685">此构造函数不对取消做保证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-685">This does not guarantee the cancellation.</span>
          </span>
          <span data-ttu-id="e4129-686">设置为 <see langword="CancellationToken.None" /> 将此方法等效于 <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-686">A setting of <see langword="CancellationToken.None" /> makes this method equivalent to <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />.</span>
          </span>
          <span data-ttu-id="e4129-687">返回任务必须标记为已取消。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-687">The returned task must be marked as cancelled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-688">
            <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" /> 的异步版本，其获取指示列是否包含不存在或缺失值的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-688">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)" />, which gets a value that indicates whether the column contains non-existent or missing values.</span>
          </span>
          <span data-ttu-id="e4129-689">取消标记可用于请求在命令超时超过前放弃操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-689">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span>
          </span>
          <span data-ttu-id="e4129-690">将通过返回的任务对象报告异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-690">Exceptions will be reported via the returned Task object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-691">如果指定的列值与 <see langword="true" /> 等效，则为 <see langword="DBNull" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-691">
              <see langword="true" /> if the specified column value is equivalent to <see langword="DBNull" /> otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-692">有关详细信息，请参阅[SqlClient 流支持](~/docs/framework/data/adonet/sqlclient-streaming-support.md)。</span><span class="sxs-lookup"><span data-stu-id="e4129-692">For more information, see [SqlClient Streaming Support](~/docs/framework/data/adonet/sqlclient-streaming-support.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e4129-693">连接中断或在数据检索期间已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-693">The connection drops or is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="e4129-694">数据检索期间，<see cref="T:System.Data.SqlClient.SqlDataReader" /> 处于关闭状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-694">The <see cref="T:System.Data.SqlClient.SqlDataReader" /> is closed during the data retrieval.</span>
          </span>
          <span data-ttu-id="e4129-695">没有要读取的就绪数据 (例如，第一个 <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> 未被调用或返回错误)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-695">There is no data ready to be read (for example, the first <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> hasn't been called, or returned false).</span>
          </span>
          <span data-ttu-id="e4129-696">按顺序模式尝试读取上一步骤中读取的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-696">Trying to read a previously read column in sequential mode.</span>
          </span>
          <span data-ttu-id="e4129-697">没有正在进行的异步操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-697">There was an asynchronous operation in progress.</span>
          </span>
          <span data-ttu-id="e4129-698">以顺序模式运行时，这适用于所有 Get\* 方法，读取流时也可对其进行调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-698">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span>
          </span>
          <span data-ttu-id="e4129-699">在连接字符串中指定 <see langword="Context Connection=true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-699">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="e4129-700">尝试读取不存在的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-700">Trying to read a column that does not exist.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e4129-701">获取以本机格式表示的列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-701">Gets the value of a column in its native format.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int i); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataRecord.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-702">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-702">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-703">在给定列序号的情况下，获取指定列的以本机格式表示的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-703">Gets the value of the specified column in its native format given the column ordinal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4129-704">指定列的以本机格式表示的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-704">The value of the specified column in its native format.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="e4129-705">传递的索引超出了 0 到 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-705">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataRecord.Item(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="e4129-706">列名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-706">The column name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-707">在给定列名称的情况下，获取指定列的以本机格式表示的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-707">Gets the value of the specified column in its native format given the column name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4129-708">指定列的以本机格式表示的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-708">The value of the specified column in its native format.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-709">第一次执行区分大小写的查找。</span><span class="sxs-lookup"><span data-stu-id="e4129-709">A case-sensitive lookup is performed first.</span></span> <span data-ttu-id="e4129-710">如果失败，进行第二个的不区分大小写搜索 (不区分大小写的比较是使用数据库排序规则)。</span><span class="sxs-lookup"><span data-stu-id="e4129-710">If it fails, a second case-insensitive search is made (a case-insensitive comparison is done using the database collation).</span></span> <span data-ttu-id="e4129-711">当比较受区域性特定的大小写规则时，可能出现意外的结果。</span><span class="sxs-lookup"><span data-stu-id="e4129-711">Unexpected results can occur when comparisons are affected by culture-specific casing rules.</span></span> <span data-ttu-id="e4129-712">例如，在土耳其语，下面的示例将生成错误结果因为土耳其语中的文件系统不使用的字母 i 的语言的大小写规则"文件"中。</span><span class="sxs-lookup"><span data-stu-id="e4129-712">For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter 'i' in "file".</span></span>  
  
 <span data-ttu-id="e4129-713">此方法是不区分假名宽度。</span><span class="sxs-lookup"><span data-stu-id="e4129-713">This method is kana-width insensitive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="e4129-714">未找到具有指定名称的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-714">No column with the specified name was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public override bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool NextResult();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.NextResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4129-715">当读取批处理 Transact-SQL 语句的结果时，使数据读取器前进到下一个结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-715">Advances the data reader to the next result, when reading the results of batch Transact-SQL statements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-716">如果存在多个结果集，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-716">
              <see langword="true" /> if there are more result sets; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-717">用于处理多个结果，它可以通过执行批处理 TRANSACT-SQL 语句生成。</span><span class="sxs-lookup"><span data-stu-id="e4129-717">Used to process multiple results, which can be generated by executing batch Transact-SQL statements.</span></span>  
  
 <span data-ttu-id="e4129-718">默认情况下，数据读取器定位在的第一个结果中。</span><span class="sxs-lookup"><span data-stu-id="e4129-718">By default, the data reader is positioned on the first result.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextResultAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;bool&gt; NextResultAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; NextResultAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;bool&gt; ^ NextResultAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="e4129-719">取消指令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-719">The cancellation instruction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-720">
            <see cref="M:System.Data.SqlClient.SqlDataReader.NextResult" /> 的异步版本，读取批处理 [!INCLUDE[tsql](~/includes/tsql-md.md)] 语句的结果时，将数据读取器推进到下一个结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-720">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlDataReader.NextResult" />, which advances the data reader to the next result, when reading the results of batch [!INCLUDE[tsql](~/includes/tsql-md.md)] statements.</span>
          </span>
          <span data-ttu-id="e4129-721">取消标记可用于请求在命令超时超过前放弃操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-721">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span>
          </span>
          <span data-ttu-id="e4129-722">将通过返回的任务对象报告异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-722">Exceptions will be reported via the returned Task object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-723">表示异步操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-723">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-724">有关中的异步编程的详细信息[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]数据提供程序[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]，请参阅[异步编程](~/docs/framework/data/adonet/asynchronous-programming.md)。</span><span class="sxs-lookup"><span data-stu-id="e4129-724">For more information about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e4129-725">在完成任务前，为同一个实例多次调用 <see cref="M:System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-725">Calling <see cref="M:System.Data.SqlClient.SqlDataReader.NextResultAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="e4129-726">在连接字符串中指定 <see langword="Context Connection=true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-726">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="e4129-727">执行命令文本时，[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] 返回了一个错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-727">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataReader.Read</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4129-728">让 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 前进到下一条记录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-728">Advances the <see cref="T:System.Data.SqlClient.SqlDataReader" /> to the next record.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-729">如果存在更多行，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-729">
              <see langword="true" /> if there are more rows; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-730">默认位置<xref:System.Data.SqlClient.SqlDataReader>之前第一条记录。</span><span class="sxs-lookup"><span data-stu-id="e4129-730">The default position of the <xref:System.Data.SqlClient.SqlDataReader> is before the first record.</span></span> <span data-ttu-id="e4129-731">因此，必须调用<xref:System.Data.SqlClient.SqlDataReader.Read%2A>来开始访问任何数据。</span><span class="sxs-lookup"><span data-stu-id="e4129-731">Therefore, you must call <xref:System.Data.SqlClient.SqlDataReader.Read%2A> to begin accessing any data.</span></span>  
  
 <span data-ttu-id="e4129-732">只有一个`SqlDataReader`每个关联<xref:System.Data.SqlClient.SqlConnection>可能一次打开之前关闭第一个打开另一个的任何尝试将失败。</span><span class="sxs-lookup"><span data-stu-id="e4129-732">Only one `SqlDataReader` per associated <xref:System.Data.SqlClient.SqlConnection> may be open at a time, and any attempt to open another will fail until the first one is closed.</span></span> <span data-ttu-id="e4129-733">同样，尽管`SqlDataReader`正在使用中，关联`SqlConnection`正忙于为服务它直到你调用<xref:System.Data.SqlClient.SqlDataReader.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="e4129-733">Similarly, while the `SqlDataReader` is being used, the associated `SqlConnection` is busy serving it until you call <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4129-734">下面的示例创建<xref:System.Data.SqlClient.SqlConnection>、 <xref:System.Data.SqlClient.SqlCommand>，和一个<xref:System.Data.SqlClient.SqlDataReader>。</span><span class="sxs-lookup"><span data-stu-id="e4129-734">The following example creates a <xref:System.Data.SqlClient.SqlConnection>, a <xref:System.Data.SqlClient.SqlCommand>, and a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="e4129-735">该示例读取到的数据，写出到控制台窗口。</span><span class="sxs-lookup"><span data-stu-id="e4129-735">The example reads through the data, writing it out to the console window.</span></span> <span data-ttu-id="e4129-736">随后此代码关闭<xref:System.Data.SqlClient.SqlDataReader>。</span><span class="sxs-lookup"><span data-stu-id="e4129-736">The code then closes the <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="e4129-737"><xref:System.Data.SqlClient.SqlConnection>末尾自动关闭`using`代码块。</span><span class="sxs-lookup"><span data-stu-id="e4129-737">The <xref:System.Data.SqlClient.SqlConnection> is closed automatically at the end of the `using` code block.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="e4129-738">执行命令文本时，[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] 返回了一个错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-738">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;bool&gt; ReadAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; ReadAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;bool&gt; ^ ReadAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="e4129-739">取消指令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-739">The cancellation instruction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-740">
            <see cref="M:System.Data.SqlClient.SqlDataReader.Read" /> 的异步版本，将 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 前移到下一条记录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-740">An asynchronous version of <see cref="M:System.Data.SqlClient.SqlDataReader.Read" />, which advances the <see cref="T:System.Data.SqlClient.SqlDataReader" /> to the next record.</span>
          </span>
          <span data-ttu-id="e4129-741">取消标记可用于请求在命令超时超过前放弃操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-741">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span>
          </span>
          <span data-ttu-id="e4129-742">将通过返回的任务对象报告异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-742">Exceptions will be reported via the returned Task object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-743">表示异步操作的任务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-743">A task representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-744">如果`behavior`参数<xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync%2A>设置为`Default`，<xref:System.Data.SqlClient.SqlDataReader.ReadAsync%2A>在返回的任务前读取整行。</span><span class="sxs-lookup"><span data-stu-id="e4129-744">If the `behavior` parameter of <xref:System.Data.SqlClient.SqlCommand.ExecuteReaderAsync%2A> is set to `Default`, <xref:System.Data.SqlClient.SqlDataReader.ReadAsync%2A> reads the entire row before returning the Task.</span></span>  
  
 <span data-ttu-id="e4129-745">有关详细信息，包括有关异步编程中的代码示例，[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]数据提供程序[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]，请参阅[异步编程](~/docs/framework/data/adonet/asynchronous-programming.md)。</span><span class="sxs-lookup"><span data-stu-id="e4129-745">For more information, including code samples, about asynchronous programming in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] Data Provider for [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)], see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e4129-746">在完成任务前，为同一个实例多次调用 <see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-746">Calling <see cref="M:System.Data.SqlClient.SqlDataReader.ReadAsync(System.Threading.CancellationToken)" /> more than once for the same instance before task completion.</span>
          </span>
          <span data-ttu-id="e4129-747">在连接字符串中指定 <see langword="Context Connection=true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-747">
              <see langword="Context Connection=true" /> is specified in the connection string.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.SqlClient.SqlException">
          <span data-ttu-id="e4129-748">执行命令文本时，[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] 返回了一个错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-748">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)] returned an error while executing the command text.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public override int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RecordsAffected { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataReader.RecordsAffected</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4129-749">获取执行 Transact-SQL 语句所更改、插入或删除的行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-749">Gets the number of rows changed, inserted, or deleted by execution of the Transact-SQL statement.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4129-750">已更改、插入或删除的行数；如果没有受影响的行或语句失败，则为 0；对于 SELECT 语句为 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-750">The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-751"><xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A>读取了所有行并在关闭之前，未设置属性<xref:System.Data.SqlClient.SqlDataReader>。</span><span class="sxs-lookup"><span data-stu-id="e4129-751">The <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> property is not set until all rows are read and you close the <xref:System.Data.SqlClient.SqlDataReader>.</span></span>  
  
 <span data-ttu-id="e4129-752">此属性的值是累积的。</span><span class="sxs-lookup"><span data-stu-id="e4129-752">The value of this property is cumulative.</span></span> <span data-ttu-id="e4129-753">例如，如果两条记录插入在批处理模式下，值`RecordsAffected`会有两个。</span><span class="sxs-lookup"><span data-stu-id="e4129-753">For example, if two records are inserted in batch mode, the value of `RecordsAffected` will be two.</span></span>  
  
 <span data-ttu-id="e4129-754"><xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A> 和<xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A>是可以后调用的唯一属性<xref:System.Data.SqlClient.SqlDataReader>已关闭。</span><span class="sxs-lookup"><span data-stu-id="e4129-754"><xref:System.Data.SqlClient.SqlDataReader.IsClosed%2A> and <xref:System.Data.SqlClient.SqlDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.SqlClient.SqlDataReader> is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDataRecord.GetData">
      <MemberSignature Language="C#" Value="System.Data.IDataReader IDataRecord.GetData (int i);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Data.IDataReader System.Data.IDataRecord.GetData(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlDataReader.System#Data#IDataRecord#GetData(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function GetData (i As Integer) As IDataReader Implements IDataRecord.GetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Data::IDataReader ^ System.Data.IDataRecord.GetData(int i) = System::Data::IDataRecord::GetData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetData(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">
          <span data-ttu-id="e4129-755">列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-755">A column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4129-756">返回指定列序号的 <see cref="T:System.Data.IDataReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-756">Returns an <see cref="T:System.Data.IDataReader" /> for the specified column ordinal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4129-757">指定列序号的 <see cref="T:System.Data.IDataReader" /> 实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-757">The <see cref="T:System.Data.IDataReader" /> instance for the specified column ordinal.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-758">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="e4129-758">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e4129-759">它只能在 <xref:System.Data.SqlClient.SqlDataReader> 实例强制转换为 <xref:System.Data.IDataRecord> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="e4129-759">It can be used only when the <xref:System.Data.SqlClient.SqlDataReader> instance is cast to an <xref:System.Data.IDataRecord> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisibleFieldCount">
      <MemberSignature Language="C#" Value="public override int VisibleFieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisibleFieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlDataReader.VisibleFieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property VisibleFieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int VisibleFieldCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4129-760">获取 <see cref="T:System.Data.SqlClient.SqlDataReader" /> 中未隐藏的字段的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-760">Gets the number of fields in the <see cref="T:System.Data.SqlClient.SqlDataReader" /> that are not hidden.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4129-761">未隐藏的字段的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4129-761">The number of fields that are not hidden.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4129-762">此值用于确定 <xref:System.Data.SqlClient.SqlDataReader> 中的可见字段的数目。</span><span class="sxs-lookup"><span data-stu-id="e4129-762">This value is used to determine how many fields in the <xref:System.Data.SqlClient.SqlDataReader> are visible.</span></span> <span data-ttu-id="e4129-763">例如，对分部主键执行 SELECT 将以隐藏字段的形式返回该键的其余部分。</span><span class="sxs-lookup"><span data-stu-id="e4129-763">For example, a SELECT on a partial primary key returns the remaining parts of the key as hidden fields.</span></span> <span data-ttu-id="e4129-764">隐藏的字段始终追加在可见字段之后。</span><span class="sxs-lookup"><span data-stu-id="e4129-764">The hidden fields are always appended behind the visible fields.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>