<Type Name="SqlParameter" FullName="System.Data.SqlClient.SqlParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="99193b1b09fefa91f3e1d7090852d36cb5c0cd2c" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37672037" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlParameter : System.Data.Common.DbParameter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SqlParameter extends System.Data.Common.DbParameter implements class System.Data.IDataParameter, class System.Data.IDbDataParameter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlParameter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlParameter&#xA;Inherits DbParameter&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlParameter sealed : System::Data::Common::DbParameter, ICloneable" />
  <TypeSignature Language="F#" Value="type SqlParameter = class&#xA;    inherit DbParameter&#xA;    interface IDbDataParameter&#xA;    interface IDataParameter&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbParameter</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter("System.Data.SqlClient.SqlParameter+SqlParameterConverter, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a parameter to a <see cref="T:System.Data.SqlClient.SqlCommand" /> and optionally its mapping to <see cref="T:System.Data.DataSet" /> columns. This class cannot be inherited. For more information on parameters, see [Configuring Parameters and Parameter Data Types](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 参数名称不区分大小写。  
  
> [!NOTE]
>  无名称，也称为序号、 参数不支持.NET Framework 数据提供程序适用于 SQL Server。  
  
 有关详细信息，以及其他示例代码演示如何使用参数，请参阅[命令和参数](~/docs/framework/data/adonet/commands-and-parameters.md)。  
  
   
  
## Examples  
 下面的示例创建的多个实例<xref:System.Data.SqlClient.SqlParameter>通过<xref:System.Data.SqlClient.SqlParameterCollection>内的集合， <xref:System.Data.SqlClient.SqlDataAdapter>。 这些参数用于从数据源选择数据并将数据放入<xref:System.Data.DataSet>。 此示例假定<xref:System.Data.DataSet>和一个<xref:System.Data.SqlClient.SqlDataAdapter>已创建使用适当的架构、 命令和连接。 有关详细信息和使用参数的其他示例，请参阅[检索和修改 ADO.NET 中的数据](~/docs/framework/data/adonet/retrieving-and-modifying-data.md)并[配置参数和参数数据类型](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md)。  
  
 [!code-csharp[Classic WebData SqlParameter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.SqlClient.SqlParameterCollection" />
    <altmember cref="T:System.Data.SqlClient.SqlCommand" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例创建<xref:System.Data.SqlClient.SqlParameter>和设置的某些属性。  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, dbType As SqlDbType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter(System::String ^ parameterName, System::Data::SqlDbType dbType);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlParameter : string * System.Data.SqlDbType -&gt; System.Data.SqlClient.SqlParameter" Usage="new System.Data.SqlClient.SqlParameter (parameterName, dbType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
      </Parameters>
      <Docs>
        <param name="parameterName">The name of the parameter to map.</param>
        <param name="dbType">One of the <see cref="T:System.Data.SqlDbType" /> values.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter" /> class that uses the parameter name and the data type.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 数据类型并在适当时**大小**并<xref:System.Data.SqlClient.SqlParameter.Precision%2A>的值进行推断`dbType`参数。  
  
   
  
## Examples  
 下面的示例创建<xref:System.Data.SqlClient.SqlParameter>和设置的某些属性。  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The value supplied in the <paramref name="dbType" /> parameter is an invalid back-end data type.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter(System::String ^ parameterName, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlParameter : string * obj -&gt; System.Data.SqlClient.SqlParameter" Usage="new System.Data.SqlClient.SqlParameter (parameterName, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameterName">The name of the parameter to map.</param>
        <param name="value">An <see cref="T:System.Object" /> that is the value of the <see cref="T:System.Data.SqlClient.SqlParameter" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter" /> class that uses the parameter name and a value of the new <see cref="T:System.Data.SqlClient.SqlParameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当指定<xref:System.Object>中`value`参数，<xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>从的 Microsoft.NET Framework 类型推断<xref:System.Object>。  
  
 当你使用的此重载时要格外小心<xref:System.Data.SqlClient.SqlParameter>构造函数来指定整数参数值。 因为此重载接受`value`类型的<xref:System.Object>，必须将转换为整数值<xref:System.Object>键入时的值为零，如下面的 C# 示例所示。  
  
```  
Parameter = new SqlParameter("@pname", (object)0);  
```  
  
 如果不执行此转换，编译器将假定您尝试调用`SqlParameter`(`string`， `SqlDbType`) 构造函数重载。  
  
   
  
## Examples  
 下面的示例创建<xref:System.Data.SqlClient.SqlParameter>和设置的某些属性。  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter6 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter6 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter6 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter6 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, dbType As SqlDbType, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter(System::String ^ parameterName, System::Data::SqlDbType dbType, int size);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlParameter : string * System.Data.SqlDbType * int -&gt; System.Data.SqlClient.SqlParameter" Usage="new System.Data.SqlClient.SqlParameter (parameterName, dbType, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterName">The name of the parameter to map.</param>
        <param name="dbType">One of the <see cref="T:System.Data.SqlDbType" /> values.</param>
        <param name="size">The length of the parameter.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter" /> class that uses the parameter name, the <see cref="T:System.Data.SqlDbType" />, and the size.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **大小**的值来推断`dbType`参数，如果未显式设置`size`参数。  
  
   
  
## Examples  
 下面的示例创建<xref:System.Data.SqlClient.SqlParameter>和设置的某些属性。  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The value supplied in the <paramref name="dbType" /> parameter is an invalid back-end data type.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size, string sourceColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType, int32 size, string sourceColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, dbType As SqlDbType, size As Integer, sourceColumn As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter(System::String ^ parameterName, System::Data::SqlDbType dbType, int size, System::String ^ sourceColumn);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlParameter : string * System.Data.SqlDbType * int * string -&gt; System.Data.SqlClient.SqlParameter" Usage="new System.Data.SqlClient.SqlParameter (parameterName, dbType, size, sourceColumn)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="sourceColumn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">The name of the parameter to map.</param>
        <param name="dbType">One of the <see cref="T:System.Data.SqlDbType" /> values.</param>
        <param name="size">The length of the parameter.</param>
        <param name="sourceColumn">The name of the source column (<see cref="P:System.Data.SqlClient.SqlParameter.SourceColumn" />) if this <see cref="T:System.Data.SqlClient.SqlParameter" /> is used in a call to <see cref="Overload:System.Data.Common.DbDataAdapter.Update" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter" /> class that uses the parameter name, the <see cref="T:System.Data.SqlDbType" />, the size, and the source column name.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **大小**的值来推断`dbType`参数，如果未显式设置`size`参数。  
  
   
  
## Examples  
 下面的示例创建<xref:System.Data.SqlClient.SqlParameter>和设置的某些属性。  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter5 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter5 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The value supplied in the <paramref name="dbType" /> parameter is an invalid back-end data type.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size, System.Data.ParameterDirection direction, bool isNullable, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType, int32 size, valuetype System.Data.ParameterDirection direction, bool isNullable, unsigned int8 precision, unsigned int8 scale, string sourceColumn, valuetype System.Data.DataRowVersion sourceVersion, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, dbType As SqlDbType, size As Integer, direction As ParameterDirection, isNullable As Boolean, precision As Byte, scale As Byte, sourceColumn As String, sourceVersion As DataRowVersion, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter(System::String ^ parameterName, System::Data::SqlDbType dbType, int size, System::Data::ParameterDirection direction, bool isNullable, System::Byte precision, System::Byte scale, System::String ^ sourceColumn, System::Data::DataRowVersion sourceVersion, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlParameter : string * System.Data.SqlDbType * int * System.Data.ParameterDirection * bool * byte * byte * string * System.Data.DataRowVersion * obj -&gt; System.Data.SqlClient.SqlParameter" Usage="new System.Data.SqlClient.SqlParameter (parameterName, dbType, size, direction, isNullable, precision, scale, sourceColumn, sourceVersion, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" />
        <Parameter Name="isNullable" Type="System.Boolean" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
        <Parameter Name="sourceColumn" Type="System.String" />
        <Parameter Name="sourceVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameterName">The name of the parameter to map.</param>
        <param name="dbType">One of the <see cref="T:System.Data.SqlDbType" /> values.</param>
        <param name="size">The length of the parameter.</param>
        <param name="direction">One of the <see cref="T:System.Data.ParameterDirection" /> values.</param>
        <param name="isNullable">
          <see langword="true" /> if the value of the field can be null; otherwise <see langword="false" />.</param>
        <param name="precision">The total number of digits to the left and right of the decimal point to which <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> is resolved.</param>
        <param name="scale">The total number of decimal places to which <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> is resolved.</param>
        <param name="sourceColumn">The name of the source column (<see cref="P:System.Data.SqlClient.SqlParameter.SourceColumn" />) if this <see cref="T:System.Data.SqlClient.SqlParameter" /> is used in a call to <see cref="Overload:System.Data.Common.DbDataAdapter.Update" />.</param>
        <param name="sourceVersion">One of the <see cref="T:System.Data.DataRowVersion" /> values.</param>
        <param name="value">An <see cref="T:System.Object" /> that is the value of the <see cref="T:System.Data.SqlClient.SqlParameter" />.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter" /> class that uses the parameter name, the type of the parameter, the size of the parameter, a <see cref="T:System.Data.ParameterDirection" />, the precision of the parameter, the scale of the parameter, the source column, a <see cref="T:System.Data.DataRowVersion" /> to use, and the value of the parameter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **大小**并<xref:System.Data.SqlClient.SqlParameter.Precision%2A>的值进行推断`dbType`如果它们未显式设置的参数`size`和`precision`参数。  
  
   
  
## Examples  
 下面的示例创建<xref:System.Data.SqlClient.SqlParameter>和设置的某些属性。  
  
 [!code-csharp[Classic WebData SqlParameter.SqlParameter1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SqlParameter1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SqlParameter1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The value supplied in the <paramref name="dbType" /> parameter is an invalid back-end data type.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size, System.Data.ParameterDirection direction, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value, string xmlSchemaCollectionDatabase, string xmlSchemaCollectionOwningSchema, string xmlSchemaCollectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.SqlDbType dbType, int32 size, valuetype System.Data.ParameterDirection direction, unsigned int8 precision, unsigned int8 scale, string sourceColumn, valuetype System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value, string xmlSchemaCollectionDatabase, string xmlSchemaCollectionOwningSchema, string xmlSchemaCollectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameterName As String, dbType As SqlDbType, size As Integer, direction As ParameterDirection, precision As Byte, scale As Byte, sourceColumn As String, sourceVersion As DataRowVersion, sourceColumnNullMapping As Boolean, value As Object, xmlSchemaCollectionDatabase As String, xmlSchemaCollectionOwningSchema As String, xmlSchemaCollectionName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlParameter(System::String ^ parameterName, System::Data::SqlDbType dbType, int size, System::Data::ParameterDirection direction, System::Byte precision, System::Byte scale, System::String ^ sourceColumn, System::Data::DataRowVersion sourceVersion, bool sourceColumnNullMapping, System::Object ^ value, System::String ^ xmlSchemaCollectionDatabase, System::String ^ xmlSchemaCollectionOwningSchema, System::String ^ xmlSchemaCollectionName);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlParameter : string * System.Data.SqlDbType * int * System.Data.ParameterDirection * byte * byte * string * System.Data.DataRowVersion * bool * obj * string * string * string -&gt; System.Data.SqlClient.SqlParameter" Usage="new System.Data.SqlClient.SqlParameter (parameterName, dbType, size, direction, precision, scale, sourceColumn, sourceVersion, sourceColumnNullMapping, value, xmlSchemaCollectionDatabase, xmlSchemaCollectionOwningSchema, xmlSchemaCollectionName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.SqlDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
        <Parameter Name="sourceColumn" Type="System.String" />
        <Parameter Name="sourceVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="sourceColumnNullMapping" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="xmlSchemaCollectionDatabase" Type="System.String" />
        <Parameter Name="xmlSchemaCollectionOwningSchema" Type="System.String" />
        <Parameter Name="xmlSchemaCollectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">The name of the parameter to map.</param>
        <param name="dbType">One of the <see cref="T:System.Data.SqlDbType" /> values.</param>
        <param name="size">The length of the parameter.</param>
        <param name="direction">One of the <see cref="T:System.Data.ParameterDirection" /> values.</param>
        <param name="precision">The total number of digits to the left and right of the decimal point to which <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> is resolved.</param>
        <param name="scale">The total number of decimal places to which <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> is resolved.</param>
        <param name="sourceColumn">The name of the source column (<see cref="P:System.Data.SqlClient.SqlParameter.SourceColumn" />) if this <see cref="T:System.Data.SqlClient.SqlParameter" /> is used in a call to <see cref="Overload:System.Data.Common.DbDataAdapter.Update" />.</param>
        <param name="sourceVersion">One of the <see cref="T:System.Data.DataRowVersion" /> values.</param>
        <param name="sourceColumnNullMapping">
          <see langword="true" /> if the source column is nullable; <see langword="false" /> if it is not.</param>
        <param name="value">An <see cref="T:System.Object" /> that is the value of the <see cref="T:System.Data.SqlClient.SqlParameter" />.</param>
        <param name="xmlSchemaCollectionDatabase">The name of the database where the schema collection for this XML instance is located.</param>
        <param name="xmlSchemaCollectionOwningSchema">The owning relational schema where the schema collection for this XML instance is located.</param>
        <param name="xmlSchemaCollectionName">The name of the schema collection for this parameter.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter" /> class that uses the parameter name, the type of the parameter, the length of the parameter the direction, the precision, the scale, the name of the source column, one of the <see cref="T:System.Data.DataRowVersion" /> values, a Boolean for source column mapping, the value of the <see langword="SqlParameter" />, the name of the database where the schema collection for this XML instance is located, the owning relational schema where the schema collection for this XML instance is located, and the name of the schema collection for this parameter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlParameter.Size%2A>并<xref:System.Data.SqlClient.SqlParameter.Precision%2A>的值进行推断`dbType`如果它们未显式设置的参数`size`和`precision`参数。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareInfo">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlCompareOptions CompareInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.SqlTypes.SqlCompareOptions CompareInfo" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.CompareInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property CompareInfo As SqlCompareOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlTypes::SqlCompareOptions CompareInfo { System::Data::SqlTypes::SqlCompareOptions get(); void set(System::Data::SqlTypes::SqlCompareOptions value); };" />
      <MemberSignature Language="F#" Value="member this.CompareInfo : System.Data.SqlTypes.SqlCompareOptions with get, set" Usage="System.Data.SqlClient.SqlParameter.CompareInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlCompareOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Globalization.CompareInfo" /> object that defines how string comparisons should be performed for this parameter.</summary>
        <value>
          <see cref="T:System.Globalization.CompareInfo" /> 对象，它定义此参数的字符串比较。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public override System.Data.DbType DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DbType DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DbType As DbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::DbType DbType { System::Data::DbType get(); void set(System::Data::DbType value); };" />
      <MemberSignature Language="F#" Value="member this.DbType : System.Data.DbType with get, set" Usage="System.Data.SqlClient.SqlParameter.DbType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.DbType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Data.SqlDbType" /> of the parameter.</summary>
        <value>
          <see cref="T:System.Data.SqlDbType" /> 值之一。 默认值为 <see langword="NVarChar" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>和<xref:System.Data.SqlClient.SqlParameter.DbType%2A>链接。 因此，设置<xref:System.Data.SqlClient.SqlParameter.DbType%2A>更改<xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>为支持<xref:System.Data.SqlDbType>。  
  
 有关支持的数据类型的列表，请参阅相应<xref:System.Data.SqlDbType>成员。 有关详细信息，请参阅[DataAdapter 参数](~/docs/framework/data/adonet/dataadapter-parameters.md)。  
  
   
  
## Examples  
 下面的示例创建<xref:System.Data.SqlClient.SqlParameter>和设置的某些属性。  
  
 [!code-csharp[Classic WebData SqlParameter.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public override System.Data.ParameterDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ParameterDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Direction As ParameterDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ParameterDirection Direction { System::Data::ParameterDirection get(); void set(System::Data::ParameterDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Data.ParameterDirection with get, set" Usage="System.Data.SqlClient.SqlParameter.Direction" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.Direction</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ParameterDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.</summary>
        <value>
          <see cref="T:System.Data.ParameterDirection" /> 值之一。 默认值为 <see langword="Input" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Data.ParameterDirection>是输出，而执行的关联<xref:System.Data.SqlClient.SqlCommand>不会返回一个值，<xref:System.Data.SqlClient.SqlParameter>包含 null 值。  
  
 `Output``InputOut`，并`ReturnValue`参数返回通过调用<xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>状态，直到您关闭不能访问<xref:System.Data.SqlClient.SqlDataReader>。  
  
   
  
## Examples  
 下面的示例创建<xref:System.Data.SqlClient.SqlParameter>和设置的某些属性。  
  
 [命令和参数](~/docs/framework/data/adonet/commands-and-parameters.md)  
  
 [DataAdapter 参数](~/docs/framework/data/adonet/dataadapter-parameters.md)  
  
 [SQL Server 和 ADO.NET](http://msdn.microsoft.com/library/c18b1fb1-2af1-4de7-80a4-95e56fd976cb)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The property was not set to one of the valid <see cref="T:System.Data.ParameterDirection" /> values.</exception>
      </Docs>
    </Member>
    <Member MemberName="ForceColumnEncryption">
      <MemberSignature Language="C#" Value="public bool ForceColumnEncryption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ForceColumnEncryption" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.ForceColumnEncryption" />
      <MemberSignature Language="VB.NET" Value="Public Property ForceColumnEncryption As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ForceColumnEncryption { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ForceColumnEncryption : bool with get, set" Usage="System.Data.SqlClient.SqlParameter.ForceColumnEncryption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Enforces encryption of a parameter when using [Always Encrypted](/sql/relational-databases/security/encryption/always-encrypted-database-engine). If SQL Server informs the driver that the parameter does not need to be encrypted, the query using the parameter will fail. This property provides additional protection against security attacks that involve a compromised SQL Server providing incorrect encryption metadata to the client, which may lead to data disclosure.</summary>
        <value>
          <see langword="true" /> 如果参数具有强制列加密;否则为<see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public override bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool with get, set" Usage="System.Data.SqlClient.SqlParameter.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the parameter accepts null values. <see cref="P:System.Data.SqlClient.SqlParameter.IsNullable" /> is not used to validate the parameter’s value and will not prevent sending or receiving a null value when executing a command.</summary>
        <value>如果接受 null 值，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 处理 null 值使用<xref:System.DBNull>类。  
  
   
  
## Examples  
 下面的示例创建<xref:System.Data.SqlClient.SqlParameter>和设置的某些属性。  
  
 [!code-csharp[DataWorks SqlParam.Properties#2](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#2)]
 [!code-vb[DataWorks SqlParam.Properties#2](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocaleId">
      <MemberSignature Language="C#" Value="public int LocaleId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LocaleId" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.LocaleId" />
      <MemberSignature Language="VB.NET" Value="Public Property LocaleId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LocaleId { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LocaleId : int with get, set" Usage="System.Data.SqlClient.SqlParameter.LocaleId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the locale identifier that determines conventions and language for a particular region.</summary>
        <value>返回与此参数相关联的区域设置标识符。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 区域设置标识特定的地理区域的约定和语言。 用于特定字符串 （字符集） 进行编码的代码页根据使用该字符串或生成它的环境的区域设置。 此属性设置 （用于输入参数） 或者 （对于输出参数） 获取区域设置与服务器交换数据时要附加到一个字符串。 此属性一般用于连同<xref:System.Data.SqlClient.SqlParameter.CompareInfo%2A>属性。  
  
```  
static void CreateSqlParameterLocaleId(){  
   SqlParameter parameter = new SqlParameter("pName", SqlDbType.VarChar);  
   parameter.LocaleId = 1033;   // English - United States  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public int Offset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Offset" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Offset" />
      <MemberSignature Language="VB.NET" Value="Public Property Offset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Offset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Offset : int with get, set" Usage="System.Data.SqlClient.SqlParameter.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the offset to the <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> property.</summary>
        <value>
          <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 的偏移量。 默认值为 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Offset`属性用于二进制和字符串数据区块化客户端。 例如，若要在服务器上的列中插入文本的 10 MB，用户可能会执行的 1 MB 数据块的 10 个参数化的插入移动的值`Offset`1 MB 的每次迭代。  
  
 `Offset` 指定的二进制类型的字节数和的字符串的字符数。 字符串的计数不包括终止字符。  
  
   
  
## Examples  
 下面的示例创建<xref:System.Data.SqlClient.SqlParameter>和设置的某些属性。  
  
 [!code-csharp[DataWorks SqlParam.Properties#3](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#3)]
 [!code-vb[DataWorks SqlParam.Properties#3](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterName">
      <MemberSignature Language="C#" Value="public override string ParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.ParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ParameterName : string with get, set" Usage="System.Data.SqlClient.SqlParameter.ParameterName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.ParameterName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the <see cref="T:System.Data.SqlClient.SqlParameter" />.</summary>
        <value>
          <see cref="T:System.Data.SqlClient.SqlParameter" /> 的名称。 默认值为一个空字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlParameter.ParameterName%2A>窗体中指定@paramname。 必须设置<xref:System.Data.SqlClient.SqlParameter.ParameterName%2A>执行前<xref:System.Data.SqlClient.SqlCommand>依赖于参数。  
  
   
  
## Examples  
 下面的示例创建<xref:System.Data.SqlClient.SqlParameter>和设置的某些属性。  
  
 [!code-csharp[Classic WebData SqlParameter.ParameterName Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.ParameterName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.ParameterName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.ParameterName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Precision">
      <MemberSignature Language="C#" Value="public byte Precision { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Precision" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Precision" />
      <MemberSignature Language="VB.NET" Value="Public Property Precision As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Precision { System::Byte get(); void set(System::Byte value); };" />
      <MemberSignature Language="F#" Value="member this.Precision : byte with get, set" Usage="System.Data.SqlClient.SqlParameter.Precision" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Precision</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the maximum number of digits used to represent the <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> property.</summary>
        <value>用于表示 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 属性的最大位数。 默认值为 0。 这指示数据提供程序将设置 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 的精度。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlParameter.Precision%2A>属性由具有的参数<xref:System.Data.SqlDbType>的`Decimal`。  
  
 不需要指定的值<xref:System.Data.SqlClient.SqlParameter.Precision%2A>和<xref:System.Data.SqlClient.SqlParameter.Scale%2A>属性用于输入参数，它们可推断出的参数值。 `Precision` 和`Scale`是输出参数和必需的情况，需要指定参数的完整元数据，而不需要指示一个值，例如，具有特定的精度和小数位数指定 null 值。  
  
> [!NOTE]
>  不支持此属性将数据传递到数据库强制使用。 若要舍入、 截断，或者将其传递到数据库之前强制数据，请使用<xref:System.Math>的一部分，该类`System`之前将值分配给该参数的命名空间`Value`属性。  
  
> [!NOTE]
>  Microsoft.NET Framework 数据提供程序随.NET Framework 1.0 版不会验证<xref:System.Data.SqlClient.SqlParameter.Precision%2A>或<xref:System.Data.SqlClient.SqlParameter.Scale%2A>的<xref:System.Decimal>参数值。 这会导致在数据源处插入的截断的数据。 如果使用.NET Framework 1.0 版，验证<xref:System.Data.SqlClient.SqlParameter.Precision%2A>并<xref:System.Data.SqlClient.SqlParameter.Scale%2A>的<xref:System.Decimal>之前设置参数值的值。 如果当你使用.NET Framework 1.1 版或更高版本时，引发异常<xref:System.Decimal>参数值将设置与无效<xref:System.Data.SqlClient.SqlParameter.Precision%2A>。 <xref:System.Data.SqlClient.SqlParameter.Scale%2A> 值超出了<xref:System.Decimal>参数的小数位数仍将被截断。  
  
   
  
## Examples  
 下面的示例创建<xref:System.Data.SqlClient.SqlParameter>和设置的某些属性。  
  
 [!code-csharp[Classic WebData SqlParameter.Precision Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Precision Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.Precision Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Precision Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetDbType">
      <MemberSignature Language="C#" Value="public override void ResetDbType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetDbType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.ResetDbType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResetDbType ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResetDbType();" />
      <MemberSignature Language="F#" Value="override this.ResetDbType : unit -&gt; unit" Usage="sqlParameter.ResetDbType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resets the type associated with this <see cref="T:System.Data.SqlClient.SqlParameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 执行命令时包括参数值，代码可以显式设置参数的类型或参数可以推断其类型从其值。 调用此方法会重置参数，以便它可以再次推断出它的类型从传递的参数中的值。 调用此方法对两者的影响<xref:System.Data.SqlClient.SqlParameter.DbType%2A>并<xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>的属性<xref:System.Data.SqlClient.SqlParameter>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetSqlDbType">
      <MemberSignature Language="C#" Value="public void ResetSqlDbType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetSqlDbType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.ResetSqlDbType" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetSqlDbType ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetSqlDbType();" />
      <MemberSignature Language="F#" Value="member this.ResetSqlDbType : unit -&gt; unit" Usage="sqlParameter.ResetSqlDbType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resets the type associated with this <see cref="T:System.Data.SqlClient.SqlParameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 执行命令时包括参数值，代码可以显式设置参数的类型或参数可以推断其类型从其值。 调用此方法会重置参数，以便它可以再次推断出它的类型从传递的参数中的值。 调用此方法对两者的影响<xref:System.Data.SqlClient.SqlParameter.DbType%2A>并<xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>的属性<xref:System.Data.SqlClient.SqlParameter>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public byte Scale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Scale" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Scale" />
      <MemberSignature Language="VB.NET" Value="Public Property Scale As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte Scale { System::Byte get(); void set(System::Byte value); };" />
      <MemberSignature Language="F#" Value="member this.Scale : byte with get, set" Usage="System.Data.SqlClient.SqlParameter.Scale" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Scale</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the number of decimal places to which <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> is resolved.</summary>
        <value>所解析的 <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> 的小数位数。 默认值为 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlParameter.Scale%2A>属性由具有的参数<xref:System.Data.SqlDbType>的`Decimal`。  
  
> [!WARNING]
>  数据可能会被截断，如果<xref:System.Data.SqlClient.SqlParameter.Scale%2A>属性未显式指定和小数位数 0 （默认值） 不符合要求的服务器上的数据。  
  
 不需要指定的值<xref:System.Data.SqlClient.SqlParameter.Precision%2A>和<xref:System.Data.SqlClient.SqlParameter.Scale%2A>属性用于输入参数，它们可推断出的参数值。 `Precision` 和`Scale`是输出参数和必需的情况，需要指定参数的完整元数据，而不需要指示一个值，例如，具有特定的精度和小数位数指定 null 值。  
  
> [!NOTE]
>  不支持此属性将数据传递到数据库强制使用。 若要舍入、 截断，或者将其传递到数据库之前强制数据，请使用<xref:System.Math>的一部分，该类`System`之前将值分配给该参数的命名空间`Value`属性。  
  
> [!NOTE]
>  随.NET Framework 1.0 版的.NET framework 数据提供程序不会验证<xref:System.Data.SqlClient.SqlParameter.Precision%2A>或<xref:System.Data.SqlClient.SqlParameter.Scale%2A>的<xref:System.Decimal>参数值。 这会导致在数据源中要插入的截断的数据。 如果使用.NET Framework 1.0 版，验证<xref:System.Data.SqlClient.SqlParameter.Precision%2A>并<xref:System.Data.SqlClient.SqlParameter>的<xref:System.Decimal>之前设置参数值的值。 <xref:System.Data.SqlClient.SqlParameter.Scale%2A> 值超出了<xref:System.Decimal>参数的小数位数仍将被截断。  
  
   
  
## Examples  
 下面的示例创建<xref:System.Data.SqlClient.SqlParameter>和设置的某些属性。  
  
 [!code-csharp[DataWorks SqlParam.Properties#4](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#4)]
 [!code-vb[DataWorks SqlParam.Properties#4](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public override int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Size" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Size { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Size : int with get, set" Usage="System.Data.SqlClient.SqlParameter.Size" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataParameter.Size</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the maximum size, in bytes, of the data within the column.</summary>
        <value>列中的数据的最大大小（以字节为单位）。 默认值将根据参数值进行推断。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 返回值不受此属性;从存储过程的返回参数始终是固定大小的整数。  
  
 对于使用可变长度类型 (例如 nvarchar) 的输出参数，该参数的大小定义保存输出参数的缓冲区的大小。 输出参数可以截断为使用指定的大小<xref:System.Data.SqlClient.SqlParameter.Size%2A>。 对于字符类型，使用指定的大小<xref:System.Data.SqlClient.SqlParameter.Size%2A>是以字符为单位。  
  
 <xref:System.Data.SqlClient.SqlParameter.Size%2A>属性用于二进制和字符串类型。 类型参数`SqlType.String`，`Size`意味着在 Unicode 字符的长度。 类型参数`SqlType.Xml`，`Size`将被忽略。  
  
 对于非字符串数据类型和 ANSI 字符串数据，<xref:System.Data.SqlClient.SqlParameter.Size%2A>属性引用的字节数。 对于 Unicode 字符串数据，<xref:System.Data.SqlClient.SqlParameter.Size%2A>指的是字符数。 字符串的计数不包括终止字符。  
  
 对于可变长度数据类型，<xref:System.Data.SqlClient.SqlParameter.Size%2A>描述的最大传输到服务器的数据量。 例如，对于 Unicode 字符串值，<xref:System.Data.SqlClient.SqlParameter.Size%2A>无法用于限制发送到服务器的前 100 个字符的数据量。  
  
 如果未显式设置，其大小被推断从指定的参数值的实际大小。  
  
 如果大小参数值的小数部分，然后将截断值以匹配大小。  
  
 对于固定长度数据类型的值<xref:System.Data.SqlClient.SqlParameter.Size%2A>将被忽略。 它可以检索用于信息说明，并返回最大传输到服务器参数的值时，提供程序使用的字节数。  
  
 有关流式处理的信息，请参阅[SqlClient 流支持](~/docs/framework/data/adonet/sqlclient-streaming-support.md)。  
  
   
  
## Examples  
 下面的示例创建<xref:System.Data.SqlClient.SqlParameter>和设置的某些属性。  
  
 [!code-csharp[DataWorks SqlParam.Properties#5](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#5)]
 [!code-vb[DataWorks SqlParam.Properties#5](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumn">
      <MemberSignature Language="C#" Value="public override string SourceColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceColumn" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SourceColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceColumn As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SourceColumn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceColumn : string with get, set" Usage="System.Data.SqlClient.SqlParameter.SourceColumn" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.SourceColumn</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the source column mapped to the <see cref="T:System.Data.DataSet" /> and used for loading or returning the <see cref="P:System.Data.SqlClient.SqlParameter.Value" /></summary>
        <value>映射到 <see cref="T:System.Data.DataSet" /> 的源列的名称。 默认值为一个空字符串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Data.SqlClient.SqlParameter.SourceColumn%2A>设置为非空字符串，参数的值从与列中检索的任何<xref:System.Data.SqlClient.SqlParameter.SourceColumn%2A>名称。 如果<xref:System.Data.SqlClient.SqlParameter.Direction%2A>设置为`Input`，获取的值是<xref:System.Data.DataSet>。 如果<xref:System.Data.SqlClient.SqlParameter.Direction%2A>设置为`Output`，从数据源中获取的值。 一个<xref:System.Data.SqlClient.SqlParameter.Direction%2A>的`InputOutput`是这两者的组合。  
  
 有关如何使用详细信息<xref:System.Data.SqlClient.SqlParameter.SourceColumn%2A>属性，请参阅[DataAdapter 参数](~/docs/framework/data/adonet/dataadapter-parameters.md)并[使用 Dataadapter 更新数据源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。  
  
   
  
## Examples  
 下面的示例创建<xref:System.Data.SqlClient.SqlParameter>和设置的某些属性。  
  
 [!code-csharp[DataWorks SqlParam.Properties#6](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#6)]
 [!code-vb[DataWorks SqlParam.Properties#6](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumnNullMapping">
      <MemberSignature Language="C#" Value="public override bool SourceColumnNullMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SourceColumnNullMapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceColumnNullMapping As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SourceColumnNullMapping { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SourceColumnNullMapping : bool with get, set" Usage="System.Data.SqlClient.SqlParameter.SourceColumnNullMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Sets or gets a value which indicates whether the source column is nullable. This allows <see cref="T:System.Data.SqlClient.SqlCommandBuilder" /> to correctly generate Update statements for nullable columns.</summary>
        <value>
          <see langword="true" /> 如果源列可以为 null;<see langword="false" />如果不是。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping%2A> 由<xref:System.Data.SqlClient.SqlCommandBuilder>来正确处理为 null 的列时生成更新命令。 通常情况下，使用<xref:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping%2A>继承的开发人员仅限于<xref:System.Data.SqlClient.SqlCommandBuilder>。  
  
 <xref:System.Data.Common.DbCommandBuilder> 使用此属性来确定源列是否可以为 null，并将此属性设置为`true`是否可以为 null，和`false`如果不是。 当<xref:System.Data.SqlClient.SqlCommandBuilder>是生成其 Update 语句，它将检查<xref:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping%2A>为每个参数。 如果该属性是`true`，<xref:System.Data.SqlClient.SqlCommandBuilder>生成 WHERE 子句，如下所示 （在此查询表达式中，"FieldName"表示的字段的名称）：  
  
```  
((@IsNull_FieldName = 1 AND FieldName IS NULL) OR   
  (FieldName = @Original_FieldName))  
```  
  
 如果<xref:System.Data.SqlClient.SqlParameter.SourceColumnNullMapping%2A>为 false，该字段为<xref:System.Data.SqlClient.SqlCommandBuilder>生成以下 WHERE 子句：  
  
```  
FieldName = @OriginalFieldName  
```  
  
 此外，@IsNull_FieldName如果源字段包含 null 值和 0，如果它不包含 1。 此机制可以优化 SQL Server 中的性能，并提供的跨多个提供程序的通用代码。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceVersion">
      <MemberSignature Language="C#" Value="public override System.Data.DataRowVersion SourceVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowVersion SourceVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SourceVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SourceVersion As DataRowVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::DataRowVersion SourceVersion { System::Data::DataRowVersion get(); void set(System::Data::DataRowVersion value); };" />
      <MemberSignature Language="F#" Value="member this.SourceVersion : System.Data.DataRowVersion with get, set" Usage="System.Data.SqlClient.SqlParameter.SourceVersion" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.SourceVersion</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Data.DataRowVersion" /> to use when you load <see cref="P:System.Data.SqlClient.SqlParameter.Value" /></summary>
        <value>
          <see cref="T:System.Data.DataRowVersion" /> 值之一。 默认值为 <see langword="Current" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性由`SqlDataAdapter.UpdateCommand`以确定是否使用参数值的原始或当前值的更新过程。 这样可以更新主键。 此属性设置为的新版<xref:System.Data.DataRow>由`DataRow.Item`属性，或某个`DataRow.GetChildRows`方法的<xref:System.Data.DataRow>对象。  
  
   
  
## Examples  
 下面的示例创建<xref:System.Data.SqlClient.SqlParameter>和设置的某些属性。  
  
 [!code-csharp[DataWorks SqlParam.Properties#7](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#7)]
 [!code-vb[DataWorks SqlParam.Properties#7](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlDbType">
      <MemberSignature Language="C#" Value="public System.Data.SqlDbType SqlDbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.SqlDbType SqlDbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SqlDbType" />
      <MemberSignature Language="VB.NET" Value="Public Property SqlDbType As SqlDbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlDbType SqlDbType { System::Data::SqlDbType get(); void set(System::Data::SqlDbType value); };" />
      <MemberSignature Language="F#" Value="member this.SqlDbType : System.Data.SqlDbType with get, set" Usage="System.Data.SqlClient.SqlParameter.SqlDbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Data.Common.DbProviderSpecificTypeProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Data.SqlDbType" /> of the parameter.</summary>
        <value>
          <see cref="T:System.Data.SqlDbType" /> 值之一。 默认值为 <see langword="NVarChar" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>和<xref:System.Data.SqlClient.SqlParameter.DbType%2A>链接。 因此，设置<xref:System.Data.SqlClient.SqlParameter.DbType%2A>更改<xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>为支持<xref:System.Data.SqlDbType>。  
  
 有关支持的数据类型的列表，请参阅相应<xref:System.Data.SqlDbType>成员。 有关详细信息，请参阅[DataAdapter 参数](~/docs/framework/data/adonet/dataadapter-parameters.md)。  
  
 有关流式处理的信息，请参阅[SqlClient 流支持](~/docs/framework/data/adonet/sqlclient-streaming-support.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlValue">
      <MemberSignature Language="C#" Value="public object SqlValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SqlValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.SqlValue" />
      <MemberSignature Language="VB.NET" Value="Public Property SqlValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SqlValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SqlValue : obj with get, set" Usage="System.Data.SqlClient.SqlParameter.SqlValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the value of the parameter as an SQL type.</summary>
        <value>
          <see cref="T:System.Object" /> 对象，是使用 SQL 类型的参数的值。 默认值为 null。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 用于输入参数的值绑定到<xref:System.Data.SqlClient.SqlCommand>，发送到服务器。 对于输出参数和返回值参数，该数值将在完成<xref:System.Data.SqlClient.SqlCommand>前后<xref:System.Data.SqlClient.SqlDataReader>已关闭。  
  
 可以设置此属性为 null 或<xref:System.DBNull.Value?displayProperty=nameWithType>。 使用<xref:System.DBNull.Value?displayProperty=nameWithType>以参数的值的形式发送 NULL 值。 使用 null 或未设置<xref:System.Data.SqlClient.SqlParameter.SqlValue%2A?displayProperty=nameWithType>参数使用默认值。  
  
 如果应用程序指定的数据库类型，绑定的值转换为该类型时提供程序将数据发送到服务器。 提供程序尝试转换任何类型的值，如果它支持<xref:System.IConvertible>接口。 如果指定的类型不兼容的值，可能会导致转换错误。  
  
 同时<xref:System.Data.SqlClient.SqlParameter.DbType%2A>并<xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>属性可以通过设置推断出<xref:System.Data.SqlClient.SqlParameter.Value%2A?displayProperty=nameWithType>。  
  
 <xref:System.Data.SqlClient.SqlParameter.Value%2A?displayProperty=nameWithType>属性会被覆盖`SqlDataAdapter.UpdateCommand`。  
  
 使用<xref:System.Data.SqlClient.SqlParameter.Value%2A?displayProperty=nameWithType>属性以返回作为公共语言运行时 (CLR) 类型的参数值。  
  
 有关流式处理的信息，请参阅[SqlClient 流支持](~/docs/framework/data/adonet/sqlclient-streaming-support.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>For a description of this member, see <see cref="M:System.ICloneable.Clone" />.</summary>
        <returns>A new <see cref="T:System.Object" /> that is a copy of this instance.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此成员是显式接口成员的实现。 它只能在 <xref:System.Data.SqlClient.SqlParameter> 实例被强制转换为 <xref:System.ICloneable> 接口时使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlParameter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="sqlParameter.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets a string that contains the <see cref="P:System.Data.SqlClient.SqlParameter.ParameterName" />.</summary>
        <returns>A string that contains the <see cref="P:System.Data.SqlClient.SqlParameter.ParameterName" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Data.SqlClient.SqlParameter.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the type name for a table-valued parameter.</summary>
        <value>指定的表值参数的类型名称。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UdtTypeName">
      <MemberSignature Language="C#" Value="public string UdtTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UdtTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.UdtTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property UdtTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UdtTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UdtTypeName : string with get, set" Usage="System.Data.SqlClient.SqlParameter.UdtTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a <see langword="string" /> that represents a user-defined type as a parameter.</summary>
        <value>一个<see langword="string" />，表示在数据库中的用户定义的类型的完全限定的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关示例演示<xref:System.Data.SqlClient.SqlParameter.UdtTypeName%2A>，请参阅[检索 UDT 数据](http://msdn.microsoft.com/library/ms131080.aspx)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Data.SqlClient.SqlParameter.Value" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDataParameter.Value</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the value of the parameter.</summary>
        <value>充当参数值的 <see cref="T:System.Object" />。 默认值为 null。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 用于输入参数的值绑定到<xref:System.Data.SqlClient.SqlCommand>，发送到服务器。 对于输出参数和返回值参数，该数值将在完成<xref:System.Data.SqlClient.SqlCommand>前后<xref:System.Data.SqlClient.SqlDataReader>已关闭。  
  
 可以设置此属性为 null 或<xref:System.DBNull.Value>。 使用<xref:System.DBNull.Value>以参数的值的形式发送 NULL 值。 使用 null 或未设置<xref:System.Data.SqlClient.SqlParameter.Value%2A>参数使用默认值。  
  
 如果非 Unicode XML 数据作为字符串传递，将引发异常。  
  
 如果应用程序指定的数据库类型，绑定的值转换为该类型时提供程序将数据发送到服务器。 提供程序尝试转换任何类型的值，如果它支持<xref:System.IConvertible>接口。 如果指定的类型不兼容的值，可能会导致转换错误。  
  
 同时<xref:System.Data.SqlClient.SqlParameter.DbType%2A>和<xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>属性可以推断出的值设置。  
  
 <xref:System.Data.SqlClient.SqlParameter.Value%2A>属性会被覆盖`SqlDataAdapter.UpdateCommand`。  
  
 有关流式处理的信息，请参阅[SqlClient 流支持](~/docs/framework/data/adonet/sqlclient-streaming-support.md)。  
  
   
  
## Examples  
 下面的示例创建<xref:System.Data.SqlClient.SqlParameter>和设置的某些属性。  
  
 [!code-csharp[DataWorks SqlParam.Properties#8](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/CS/source.cs#8)]
 [!code-vb[DataWorks SqlParam.Properties#8](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlParam.Properties/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSchemaCollectionDatabase">
      <MemberSignature Language="C#" Value="public string XmlSchemaCollectionDatabase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlSchemaCollectionDatabase" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlSchemaCollectionDatabase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XmlSchemaCollectionDatabase { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlSchemaCollectionDatabase : string with get, set" Usage="System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the database where the schema collection for this XML instance is located.</summary>
        <value>此 XML 实例的架构集合所在的数据库的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此值为 null (`Nothing` Microsoft Visual Basic 中) 如果在当前数据库中定义的集合。 如果没有架构集合，在这种情况下，这样做也为 null<xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName%2A>和<xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema%2A>也均为 null。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSchemaCollectionName">
      <MemberSignature Language="C#" Value="public string XmlSchemaCollectionName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlSchemaCollectionName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlSchemaCollectionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XmlSchemaCollectionName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlSchemaCollectionName : string with get, set" Usage="System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the schema collection for this XML instance.</summary>
        <value>此 XML 实例的架构集合的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此值为 null (`Nothing` Microsoft Visual Basic 中) 是否存在任何关联的架构集合。 如果值为 null，则<xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase%2A>和<xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema%2A>也均为 null。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSchemaCollectionOwningSchema">
      <MemberSignature Language="C#" Value="public string XmlSchemaCollectionOwningSchema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlSchemaCollectionOwningSchema" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlSchemaCollectionOwningSchema As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XmlSchemaCollectionOwningSchema { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlSchemaCollectionOwningSchema : string with get, set" Usage="System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The owning relational schema where the schema collection for this XML instance is located.</summary>
        <value>此 XML 实例的所属关系架构。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此值为 null (`Nothing` Microsoft Visual Basic 中) 如果在当前数据库中定义的集合。 如果没有架构集合，在这种情况下，这样做也为 null<xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase%2A>和<xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName%2A>也均为 null。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>