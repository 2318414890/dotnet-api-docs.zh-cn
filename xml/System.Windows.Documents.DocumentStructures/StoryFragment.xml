<Type Name="StoryFragment" FullName="System.Windows.Documents.DocumentStructures.StoryFragment">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="707b720946692fa09160f617ae2624fb4bac4155" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39806850" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StoryFragment : System.Collections.Generic.IEnumerable&lt;System.Windows.Documents.DocumentStructures.BlockElement&gt;, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StoryFragment extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Documents.DocumentStructures.BlockElement&gt;, class System.Collections.IEnumerable, class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.DocumentStructures.StoryFragment" />
  <TypeSignature Language="VB.NET" Value="Public Class StoryFragment&#xA;Implements IAddChild, IEnumerable(Of BlockElement)" />
  <TypeSignature Language="C++ CLI" Value="public ref class StoryFragment : System::Collections::Generic::IEnumerable&lt;System::Windows::Documents::DocumentStructures::BlockElement ^&gt;, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type StoryFragment = class&#xA;    interface IAddChild&#xA;    interface seq&lt;BlockElement&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Windows.Documents.DocumentStructures.BlockElement&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Markup.ContentProperty("BlockElementList")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示 XPS 文档中的整篇文章或其中一部分。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 XPS 文章[!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)]文档是大致类似于报纸或杂志中的文章。 它是一段文本和图形的内容，通常在上一个主题，在单个[!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)]文档。 通常情况下，该视图所跨越多个页，但也可以是短于边栏页面 — 带边框的文章-杂志中。 一篇文章也可以继续在第 4 页首页新闻故事等不连续。 因此，给定的页面可以具有多个情景和多个情景的部分。 页眉或页脚也是文章的一种特殊，它们完全包含在单个页面上。  
  
 一个<xref:System.Windows.Documents.DocumentStructures.StoryFragment>表示所有或一篇文章的一部分。 它不能跨多个页上，但可以占用整个页面，或与其他片段中共享一个页面。 如果在多个页上有一个故事，它在每个页上的每个部分是一个单独的段落。 尽管情景可以具有不连续的片段，但没有片段本身可以是不连续。  
  
 仅<xref:System.Windows.Documents.DocumentStructures.StoryFragments>元素可以是父级的<xref:System.Windows.Documents.DocumentStructures.StoryFragment>。  位置<xref:System.Windows.Documents.DocumentStructures.StoryBreak>中的元素<xref:System.Windows.Documents.DocumentStructures.StoryFragment>指示文章包含多个片段中，如果其他片段前加上或位于当前段落之后。  
  
 时<xref:System.Windows.Documents.DocumentStructures.StoryFragment>中间某些结构元素的结束; say `<TableRowGroupStructure>`，然后[!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)]生成文档的应用程序必须插入元素的相应的结束标记 (在这种情况下`</TableRowGroupStructure>`) 之前`</StoryFragment>`标记，即使尽管结构正在继续执行在更高版本的片段。 (这是为了确保中的元素树<xref:System.Windows.Documents.DocumentStructures.StoryFragment>是有效的 XML。)继续该情景的片段必须以中断结构的开始标记开头。 中断结构的整个树必须处理相同的方式 （有一个例外，如下所述）： 必须为每个不匹配的开始标记的中断点上方添加结束标记。  
  
 异常时的情景中断后立即出现适用`</TableCellStructure>`标记，然后生成应用程序必须插入空表单元格结构 (`<TableCellStructure></TableCellStructure>`) 将继续故事的碎片中的相应点处。 这是必需的因此，需要合并对给定情景的所有片段的消费应用程序可以使用简单的算法来执行此操作。  
  
 例如，假设应用程序想要添加到以下材料[!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)]文档：  
  
```  
<SectionStructure>  
   <TableStructure>  
      <TableRowGroupStructure>  
         <TableRowStructure>  
            <TableCellStructure>  
               <ParagraphStructure>  
                  <NamedElement NameReference="SomeContent" />  
               </ParagraphStructure>  
            </TableCellStructure>  
            <TableCellStructure>  
               <ParagraphStructure>  
                  <NamedElement NameReference="MoreContent" />  
               </ParagraphStructure>  
            </TableCellStructure>  
         </TableRowStructure>  
         <TableRowStructure>  
            <TableCellStructure>  
               <ParagraphStructure>  
                  <NamedElement NameReference="EvenMoreContent" />  
               </ParagraphStructure>  
            </TableCellStructure>  
            <TableCellStructure>  
               <ParagraphStructure>  
                  <NamedElement NameReference="LastContent" />  
               </ParagraphStructure>  
            </TableCellStructure>  
         </TableRowStructure>  
      </TableRowGroupStructure>  
   </TableStructure>  
</SectionStructure>  
```  
  
 如果一个分页符将强制结束转换成片段之后`</TableCellStructure>`"SomeContent"，为应用程序必须创建拆分，如下面的示例中所示：  
  
```  
<StoryFragment StoryName="MyStory" FragmentType="Content">  
 <SectionStructure>  
    <TableStructure>  
       <TableRowGroupStructure>  
          <TableRowStructure>  
             <TableCellStructure>  
                <ParagraphStructure>  
                   <NamedElement NameReference="SomeContent" />  
                </ParagraphStructure>   
             </TableCellStructure>  
<!-- lines from here to end of fragment added by producer-->  
          </TableRowStructure>  
       </TableRowGroupStructure>  
    </TableStructure>  
 </SectionStructure>  
</StoryFragment>  
  
<StoryFragment StoryName="MyStory" FragmentType="Content">  
 <SectionStructure>  
    <TableStructure>  
       <TableRowGroupStructure>  
          <TableRowStructure>  
             <TableCellStructure>   
              <!-- extra cell added by producer-->  
             </TableCellStructure>  
<!-- lines from here to start of fragment added by producer-->  
             <TableCellStructure>  
                <ParagraphStructure>  
                   <NamedElement NameReference="MoreContent" />  
                </ParagraphStructure>  
             </TableCellStructure>  
          </TableRowStructure>  
          <TableRowStructure>  
             <TableCellStructure>  
                <ParagraphStructure>  
                   <NamedElement NameReference="EvenMoreContent" />  
                </ParagraphStructure>  
             </TableCellStructure>  
             <TableCellStructure>  
                <ParagraphStructure>  
                   <NamedElement NameReference="LastContent" />  
                </ParagraphStructure>  
             </TableCellStructure>  
          </TableRowStructure>  
       </TableRowGroupStructure>  
    </TableStructure>  
 </SectionStructure>  
</StoryFragment>  
```  
  
 读取该文档的应用程序可能需要合并此内容。 例如，考虑使用 XPS 查看器**复制到剪贴板的整篇文章**按钮; 或**盲人的 XPS**传递到语音合成器的情景的应用程序。  某些应用程序读取该文档可能需要合并的片段的一篇文章的子集。 例如，通过三次单击将整个段落复制到剪贴板的功能将需要进行合并，只要该段落跨越一个分页符，因为这样的段落将两个拆分<xref:System.Windows.Documents.DocumentStructures.StoryFragment>s。  
  
 **若要合并使用这种算法：**  
  
1.  删除`</StoryFragment>`结尾的第一个片段合并和删除`<StoryFragment>`从第二个开始。  
  
2.  如果第一个片段的最后一个结束标记的第二个片段与第一个开始标记相同的类型 (它们也不是`<NamedElement>`标记)，删除这两个。  
  
3.  重复步骤 2，直到两个片段位于*任一*一种状态：  
  
    -   不再前导片段尾随片段的第一个开始标记的最后一个结束标记之间的类型匹配。  
  
    -   前导的最后一个结束标记片段尾随片段的第一个开始标记都是`<NamedElement>`标记。  
  
 在上面的示例中，如果有尚未的空单元格添加生成的应用程序，然后合并的片段将生成的表，其中第一行必须首先包含而不是原始"SomeContent"和"MoreContent"引用的只有一个单元格每个包含的单个引用包含两个单元格的行  
  
 当合并整篇文章时，应重复同一文章的一部分的每个后续片段的算法。 属于一篇文章的片段索引中`<Story>`元素。 请参阅部分 9.1.15[!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)]可以获取在规范[XPS： 规范和许可证下载](http://www.microsoft.com/whdc/xps/downloads.mspx)。 将具有对给定情景的最后一个片段<xref:System.Windows.Documents.DocumentStructures.StoryBreak>元素作为其最后一个子级。  
  
   
  
## Examples  
 下面的示例演示`<StoryFragment>`的一部分[!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)]文档。  
  
 [!code-xaml[DocumentStructure#DocStructStoryFragContent1](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentStructure/CSharp/Content/FixedPage1_structure.xaml#docstructstoryfragcontent1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.DocumentStructures.StoryBreak" />
    <altmember cref="T:System.Windows.Documents.DocumentStructures.StoryFragments" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StoryFragment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentStructures.StoryFragment.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StoryFragment();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.Documents.DocumentStructures.BlockElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Windows.Documents.DocumentStructures.BlockElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentStructures.StoryFragment.Add(System.Windows.Documents.DocumentStructures.BlockElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (element As BlockElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Windows::Documents::DocumentStructures::BlockElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Documents.DocumentStructures.BlockElement -&gt; unit" Usage="storyFragment.Add element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Documents.DocumentStructures.BlockElement" />
      </Parameters>
      <Docs>
        <param name="element">要添加的块。</param>
        <summary>将块添加到文章段落中。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">传递的块是 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="FragmentName">
      <MemberSignature Language="C#" Value="public string FragmentName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FragmentName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentName" />
      <MemberSignature Language="VB.NET" Value="Public Property FragmentName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FragmentName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FragmentName : string with get, set" Usage="System.Windows.Documents.DocumentStructures.StoryFragment.FragmentName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置文章段落的名称。</summary>
        <value>表示此段落名称的 <see cref="T:System.String" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关详细信息`FragmentName`的属性`</StoryFragment>`的一部分[!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)]文档，请参阅的第 9 章[!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)]规范可以获取在[XPS： 规范和许可证下载](http://www.microsoft.com/whdc/xps/downloads.mspx).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentType" />
        <altmember cref="P:System.Windows.Documents.DocumentStructures.StoryFragment.StoryName" />
      </Docs>
    </Member>
    <Member MemberName="FragmentType">
      <MemberSignature Language="C#" Value="public string FragmentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FragmentType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentType" />
      <MemberSignature Language="VB.NET" Value="Public Property FragmentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FragmentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FragmentType : string with get, set" Usage="System.Windows.Documents.DocumentStructures.StoryFragment.FragmentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置段落的类型。</summary>
        <value>表示段落类型的 <see cref="T:System.String" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可能的值包括"页眉、"页脚"和"内容。  
  
 有关详细信息`FragmentType`的属性`</StoryFragment>`的一部分[!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)]文档，请参阅的第 9 章[!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)]规范可以获取在[XPS： 规范和许可证下载](http://www.microsoft.com/whdc/xps/downloads.mspx).  
  
   
  
## Examples  
 下面的示例演示`FragmentType`的属性`<StoryFragment>`属于[!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)]文档。  
  
 [!code-xaml[DocumentStructure#DocStructStoryFragContent1](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentStructure/CSharp/Content/FixedPage1_structure.xaml#docstructstoryfragcontent1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentName" />
      </Docs>
    </Member>
    <Member MemberName="StoryName">
      <MemberSignature Language="C#" Value="public string StoryName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StoryName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.DocumentStructures.StoryFragment.StoryName" />
      <MemberSignature Language="VB.NET" Value="Public Property StoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StoryName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StoryName : string with get, set" Usage="System.Windows.Documents.DocumentStructures.StoryFragment.StoryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置文章的名称。</summary>
        <value>表示文章名称的 <see cref="T:System.String" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对给定情景的所有片段必须都具有相同的值为此属性。 它必须匹配`StoryName`属性的`<Story>`元素。 请参阅部分 9.1.15[!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)]可以获取在规范[XPS： 规范和许可证下载](http://www.microsoft.com/whdc/xps/downloads.mspx)。  
  
 如果此属性可以为未指定<xref:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentType%2A>是页眉或页脚。  
  
   
  
## Examples  
 下面的示例演示`StoryName`的属性`<StoryFragment>`属于[!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)]文档。  
  
 [!code-xaml[DocumentStructure#DocStructStoryFragContent1](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentStructure/CSharp/Content/FixedPage1_structure.xaml#docstructstoryfragcontent1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentName" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Windows.Documents.DocumentStructures.BlockElement&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Windows.Documents.DocumentStructures.BlockElement&gt; IEnumerable&lt;BlockElement&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Windows.Documents.DocumentStructures.BlockElement&gt; System.Collections.Generic.IEnumerable&lt;System.Windows.Documents.DocumentStructures.BlockElement&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Collections#Generic#IEnumerable&lt;System#Windows#Documents#DocumentStructures#BlockElement&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of BlockElement) Implements IEnumerable(Of BlockElement).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Windows::Documents::DocumentStructures::BlockElement ^&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Windows.Documents.DocumentStructures.BlockElement&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Windows::Documents::DocumentStructures::BlockElement ^&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Windows.Documents.DocumentStructures.BlockElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>此方法尚未实现。</summary>
        <returns>始终引发 <see cref="T:System.NotSupportedException" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>此方法尚未实现。</summary>
        <returns>始终引发 <see cref="T:System.NotSupportedException" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">已添加的子 <see cref="T:System.Object" />。</param>
        <summary>此成员支持 .NET Framework 结构，不能在代码中直接使用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 将子对象添加到 <xref:System.Windows.Documents.DocumentStructures.StoryFragment> 中。  
  
 必须至少一个子级<xref:System.Windows.Documents.DocumentStructures.StoryFragment>子级只能是一种类型： <xref:System.Windows.Documents.DocumentStructures.ParagraphStructure>， <xref:System.Windows.Documents.DocumentStructures.FigureStructure>， <xref:System.Windows.Documents.DocumentStructures.ListStructure>， <xref:System.Windows.Documents.DocumentStructures.TableStructure>， <xref:System.Windows.Documents.DocumentStructures.SectionStructure>，和<xref:System.Windows.Documents.DocumentStructures.StoryBreak>。  
  
 一个<xref:System.Windows.Documents.DocumentStructures.StoryBreak>只是第一个或最后一个子级<xref:System.Windows.Documents.DocumentStructures.StoryFragment>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> 不是可作为此类的子级的类型之一。 请参阅“备注”。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">要添加到对象的文本。</param>
        <summary>将节点的文本内容添加到对象。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>