<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ParallelLoopResult.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5afaa97be2577030d0474fb91f8285761b19119c4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">afaa97be2577030d0474fb91f8285761b19119c4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Threading.Tasks.ParallelLoopResult">
          <source>Provides completion status on the execution of a <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Parallel" /&gt;</ph> loop.</source>
          <target state="translated">提供执行 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Parallel" /&gt;</ph> 循环的完成状态。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ParallelLoopResult">
          <source>If <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopResult.IsCompleted%2A&gt;</ph> returns true, then the loop ran to completion, such that all iterations of the loop were executed.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopResult.IsCompleted%2A&gt;</ph>返回 true，则循环已完成运行的以便执行所有的循环迭代。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ParallelLoopResult">
          <source>If <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopResult.IsCompleted%2A&gt;</ph> returns false and <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopResult.LowestBreakIteration%2A&gt;</ph> returns null, a call to <ph id="ph3">&lt;xref:System.Threading.Tasks.ParallelLoopState.Stop%2A&gt;</ph> was used to end the loop prematurely.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopResult.IsCompleted%2A&gt;</ph>返回 false 和<ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopResult.LowestBreakIteration%2A&gt;</ph>，则返回 null，调用<ph id="ph3">&lt;xref:System.Threading.Tasks.ParallelLoopState.Stop%2A&gt;</ph>用于提前结束循环。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ParallelLoopResult">
          <source>If <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopResult.IsCompleted%2A&gt;</ph> returns false and <ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopResult.LowestBreakIteration%2A&gt;</ph> returns a non-null integral value, <ph id="ph3">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A&gt;</ph> was used to end the loop prematurely.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopResult.IsCompleted%2A&gt;</ph>返回 false 和<ph id="ph2">&lt;xref:System.Threading.Tasks.ParallelLoopResult.LowestBreakIteration%2A&gt;</ph>返回非 null 的整数值，<ph id="ph3">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A&gt;</ph>用于提前结束循环。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.Tasks.ParallelLoopResult">
          <source>All public members of <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.ParallelLoopResult" /&gt;</ph> are thread safe and may be called from multiple threads concurrently.</source>
          <target state="translated">所有公共成员<ph id="ph1">&lt;see cref="T:System.Threading.Tasks.ParallelLoopResult" /&gt;</ph>都是线程安全的可能会从多个线程同时调用。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.ParallelLoopResult.IsCompleted">
          <source>Gets whether the loop ran to completion, such that all iterations of the loop were executed and the loop didn't receive a request to end prematurely.</source>
          <target state="translated">获取该循环是否已运行完成（即，该循环的所有迭代均已执行，并且该循环没有收到提前结束的请求）。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.ParallelLoopResult.IsCompleted">
          <source>true if the loop ran to completion; otherwise false;</source>
          <target state="translated">如果该循环已运行完成，则为 true；否则为 false。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="P:System.Threading.Tasks.ParallelLoopResult.LowestBreakIteration">
          <source>Gets the index of the lowest iteration from which <ph id="ph1">&lt;see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /&gt;</ph> was called.</source>
          <target state="translated">获取从中调用 <ph id="ph1">&lt;see cref="M:System.Threading.Tasks.ParallelLoopState.Break" /&gt;</ph> 的最低迭代的索引。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.ParallelLoopResult.LowestBreakIteration">
          <source>Returns an integer that represents the lowest iteration from which the Break statement was called.</source>
          <target state="translated">返回一个表示从中调用 Break 语句的最低迭代的整数。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Threading.Tasks.ParallelLoopResult.LowestBreakIteration">
          <source>If <ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A&gt;</ph> was not employed, this property will return null.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Threading.Tasks.ParallelLoopState.Break%2A&gt;</ph>已不使用此属性将返回 null。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>