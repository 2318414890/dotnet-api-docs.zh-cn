<Type Name="MessageProtectionOrder" FullName="System.ServiceModel.Security.MessageProtectionOrder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="47dc2ba10628aa0553fd5fbb771349a1b0c301c6" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37614651" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum MessageProtectionOrder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MessageProtectionOrder extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.MessageProtectionOrder" />
  <TypeSignature Language="VB.NET" Value="Public Enum MessageProtectionOrder" />
  <TypeSignature Language="C++ CLI" Value="public enum class MessageProtectionOrder" />
  <TypeSignature Language="F#" Value="type MessageProtectionOrder = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>指定保护消息的运算顺序。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此枚举与 <xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.MessageProtectionOrder%2A?displayProperty=nameWithType> 的 <xref:System.ServiceModel.Channels.AsymmetricSecurityBindingElement> 属性和 <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement.MessageProtectionOrder%2A?displayProperty=nameWithType> 类的 <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement> 属性一起使用。  
  
 如果消息容易受到摘要攻击 （例如，如果消息很短或平均信息量较低），应使用为 SignBeforeEncryptAndEncryptSignature 或 EncryptBeforeSign 选项。 (*平均信息量*是由服务器、 客户端，或两者，提供的随机数据，用于创建共享的密钥用于加密和解密数据。)  
  
## <a name="what-is-ordered"></a>已对哪些内容进行排序？  
 WCF 提供三个不同的保护级别，可以确定消息如何对使用 SOAP 消息安全保护。 默认值为 SignBeforeEncryptAndEncryptSignature。 此设置首先签名消息，加密消息正文，然后加密 XML 签名。 这就降低了成功加密猜测攻击签名的可能性。  
  
 但是，使用默认值会影响性能。 实际上，增加了安全性就会使性能打折扣。 加密签名可能会降低 10% 到 40% 的性能。 如果消息的数据的内容为低的值，并且性能吞吐量是更重要，使用 SignBeforeEncrypt。 使用此设置，签名摘要将以明文形式发送，因此该消息更易受到低平均信息量的猜测和验证攻击。  
  
## <a name="custom-bindings-only"></a>仅自定义绑定  
 若要更改 `MessageProtectionOrder` 属性，则需要创建自定义安全绑定。 有关创建自定义绑定的详细信息，请参阅[创建用户定义绑定](~/docs/framework/wcf/extending/creating-user-defined-bindings.md)。 有关创建自定义绑定的特定身份验证模式的详细信息，请参阅[如何： 为指定身份验证模式创建 SecurityBindingElement](~/docs/framework/wcf/feature-details/how-to-create-a-securitybindingelement-for-a-specified-authentication-mode.md)。  
  
   
  
## Examples  
 下面的示例创建<xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement>元素并设置其<xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement.MessageProtectionOrder%2A>属性设置为 SignBeforeEncrypt。  
  
 [!code-csharp[c_CustomBinding#3](~/samples/snippets/csharp/VS_Snippets_CFX/c_custombinding/cs/c_custombinding.cs#3)]
 [!code-vb[c_CustomBinding#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_custombinding/vb/source.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceModel.Security.MessageProtectionOrder" />
    <altmember cref="T:System.ServiceModel.Channels.AsymmetricSecurityBindingElement" />
    <altmember cref="T:System.ServiceModel.Channels.SymmetricSecurityBindingElement" />
  </Docs>
  <Members>
    <Member MemberName="EncryptBeforeSign">
      <MemberSignature Language="C#" Value="EncryptBeforeSign" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Security.MessageProtectionOrder EncryptBeforeSign = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Security.MessageProtectionOrder.EncryptBeforeSign" />
      <MemberSignature Language="VB.NET" Value="EncryptBeforeSign" />
      <MemberSignature Language="C++ CLI" Value="EncryptBeforeSign" />
      <MemberSignature Language="F#" Value="EncryptBeforeSign = 2" Usage="System.ServiceModel.Security.MessageProtectionOrder.EncryptBeforeSign" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.MessageProtectionOrder</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>指定先加密 SOAP 消息，再为其生成数字签名。</summary>
      </Docs>
    </Member>
    <Member MemberName="SignBeforeEncrypt">
      <MemberSignature Language="C#" Value="SignBeforeEncrypt" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Security.MessageProtectionOrder SignBeforeEncrypt = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Security.MessageProtectionOrder.SignBeforeEncrypt" />
      <MemberSignature Language="VB.NET" Value="SignBeforeEncrypt" />
      <MemberSignature Language="C++ CLI" Value="SignBeforeEncrypt" />
      <MemberSignature Language="F#" Value="SignBeforeEncrypt = 0" Usage="System.ServiceModel.Security.MessageProtectionOrder.SignBeforeEncrypt" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.MessageProtectionOrder</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>指定先为 SOAP 消息生成数字签名，再加密 SOAP 消息的所有部分，但不加密数字签名。</summary>
      </Docs>
    </Member>
    <Member MemberName="SignBeforeEncryptAndEncryptSignature">
      <MemberSignature Language="C#" Value="SignBeforeEncryptAndEncryptSignature" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Security.MessageProtectionOrder SignBeforeEncryptAndEncryptSignature = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Security.MessageProtectionOrder.SignBeforeEncryptAndEncryptSignature" />
      <MemberSignature Language="VB.NET" Value="SignBeforeEncryptAndEncryptSignature" />
      <MemberSignature Language="C++ CLI" Value="SignBeforeEncryptAndEncryptSignature" />
      <MemberSignature Language="F#" Value="SignBeforeEncryptAndEncryptSignature = 1" Usage="System.ServiceModel.Security.MessageProtectionOrder.SignBeforeEncryptAndEncryptSignature" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.MessageProtectionOrder</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>指定先为 SOAP 消息生成数字签名，再加密 SOAP 消息的所有部分，并且加密数字签名。</summary>
      </Docs>
    </Member>
  </Members>
</Type>