<Type Name="JapaneseCalendar" FullName="System.Globalization.JapaneseCalendar">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b1b91c1d020ab1952f24992a7cc78ae6796e0a35" /><Meta Name="ms.sourcegitcommit" Value="6089a30c0522e6f43256523e82e94b2ccedfb55b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/04/2019" /><Meta Name="ms.locfileid" Value="59014582" /></Metadata><TypeSignature Language="C#" Value="public class JapaneseCalendar : System.Globalization.Calendar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit JapaneseCalendar extends System.Globalization.Calendar" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.JapaneseCalendar" />
  <TypeSignature Language="VB.NET" Value="Public Class JapaneseCalendar&#xA;Inherits Calendar" />
  <TypeSignature Language="C++ CLI" Value="public ref class JapaneseCalendar : System::Globalization::Calendar" />
  <TypeSignature Language="F#" Value="type JapaneseCalendar = class&#xA;    inherit Calendar" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Calendars</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Globalization.Calendar</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="48c65-101">表示日本历。</span><span class="sxs-lookup"><span data-stu-id="48c65-101">Represents the Japanese calendar.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48c65-102">不过，一年和纪元是不同，日语日历，这是也称为 Wareki 日历，工作方式完全相同公历日历。</span><span class="sxs-lookup"><span data-stu-id="48c65-102">The Japanese calendar, which is also known as the Wareki calendar, works exactly like the Gregorian calendar, except that the year and era are different.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="48c65-103">有关使用信息<xref:System.Globalization.JapaneseCalendar>类和其他日历类在.NET 中的，请参阅[使用日历](~/docs/standard/datetime/working-with-calendars.md)。</span><span class="sxs-lookup"><span data-stu-id="48c65-103">For information about using the <xref:System.Globalization.JapaneseCalendar> class and the other calendar classes in .NET, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md).</span></span>  
  
 <span data-ttu-id="48c65-104">日本历识别为每个皇帝 reign 一个纪元。</span><span class="sxs-lookup"><span data-stu-id="48c65-104">The Japanese calendar recognizes one era for every emperor's reign.</span></span> <span data-ttu-id="48c65-105">两个最新纪元是日本平成 12 时代，公历 1989 年，从开始和 Reiwa 时代，从开始公历 2019 年。</span><span class="sxs-lookup"><span data-stu-id="48c65-105">The two most recent eras are the Heisei era, beginning in the Gregorian calendar year 1989, and the Reiwa era, beginning in the Gregorian calendar year 2019.</span></span> <span data-ttu-id="48c65-106">纪元名称通常显示年份。</span><span class="sxs-lookup"><span data-stu-id="48c65-106">The era name is typically displayed before the year.</span></span> <span data-ttu-id="48c65-107">例如，公历 2001 年为日语日历年平成 13。</span><span class="sxs-lookup"><span data-stu-id="48c65-107">For example, the Gregorian calendar year 2001 is the Japanese calendar year Heisei 13.</span></span> <span data-ttu-id="48c65-108">请注意，第一年的某个时间段称为"元年。"</span><span class="sxs-lookup"><span data-stu-id="48c65-108">Note that the first year of an era is called "Gannen."</span></span> <span data-ttu-id="48c65-109">因此，公历 1989 年是日语日历平成元年。</span><span class="sxs-lookup"><span data-stu-id="48c65-109">Therefore, the Gregorian calendar year 1989 was the Japanese calendar year Heisei Gannen.</span></span> <span data-ttu-id="48c65-110">默认情况下的格式设置操作指定的日期和时间格式字符串，例如"D"、"F"和"Y"，输出元年而不是"1"中的结果字符串。</span><span class="sxs-lookup"><span data-stu-id="48c65-110">By default, formatting operations with specified date and time format strings, such as "D", "F", and "Y", output Gannen rather than "1" in the result string.</span></span> 

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

 <span data-ttu-id="48c65-111">此类将分配数字到纪元，如下所示：</span><span class="sxs-lookup"><span data-stu-id="48c65-111">This class assigns numbers to the eras as follows:</span></span>  
  
|<span data-ttu-id="48c65-112">GetEra 值</span><span class="sxs-lookup"><span data-stu-id="48c65-112">GetEra value</span></span>|<span data-ttu-id="48c65-113">纪元名称</span><span class="sxs-lookup"><span data-stu-id="48c65-113">Era Name</span></span>|<span data-ttu-id="48c65-114">纪元的缩写</span><span class="sxs-lookup"><span data-stu-id="48c65-114">Era Abbreviation</span></span>|<span data-ttu-id="48c65-115">公历日期</span><span class="sxs-lookup"><span data-stu-id="48c65-115">Gregorian Dates</span></span>|  
|------------------|--------------|----------------------|---------------------|  
|<span data-ttu-id="48c65-116">5</span><span class="sxs-lookup"><span data-stu-id="48c65-116">5</span></span>|<span data-ttu-id="48c65-117">令和 (Reiwa)</span><span class="sxs-lookup"><span data-stu-id="48c65-117">令和 (Reiwa)</span></span>|<span data-ttu-id="48c65-118">令和 （R，r）</span><span class="sxs-lookup"><span data-stu-id="48c65-118">令和 (R, r)</span></span>|<span data-ttu-id="48c65-119">1，2019 年 5 提供</span><span class="sxs-lookup"><span data-stu-id="48c65-119">May 1, 2019 to present</span></span>|
|<span data-ttu-id="48c65-120">4</span><span class="sxs-lookup"><span data-stu-id="48c65-120">4</span></span>|<span data-ttu-id="48c65-121">平成 (日本平成 12)</span><span class="sxs-lookup"><span data-stu-id="48c65-121">平成 (Heisei)</span></span>|<span data-ttu-id="48c65-122">平 (H，h)</span><span class="sxs-lookup"><span data-stu-id="48c65-122">平 (H, h)</span></span>|<span data-ttu-id="48c65-123">1989 年 1 月 8日日到 2019 年 4 月 30日日</span><span class="sxs-lookup"><span data-stu-id="48c65-123">January 8, 1989 to April 30, 2019</span></span>|  
|<span data-ttu-id="48c65-124">3</span><span class="sxs-lookup"><span data-stu-id="48c65-124">3</span></span>|<span data-ttu-id="48c65-125">昭和 (Showa)</span><span class="sxs-lookup"><span data-stu-id="48c65-125">昭和 (Showa)</span></span>|<span data-ttu-id="48c65-126">昭 （S，s）</span><span class="sxs-lookup"><span data-stu-id="48c65-126">昭 (S, s)</span></span>|<span data-ttu-id="48c65-127">1926 年 12 月 25日日，到 1989 年 1 月 7日日</span><span class="sxs-lookup"><span data-stu-id="48c65-127">December 25, 1926 to January 7, 1989</span></span>|  
|<span data-ttu-id="48c65-128">2</span><span class="sxs-lookup"><span data-stu-id="48c65-128">2</span></span>|<span data-ttu-id="48c65-129">大正 (Taisho)</span><span class="sxs-lookup"><span data-stu-id="48c65-129">大正 (Taisho)</span></span>|<span data-ttu-id="48c65-130">大 （T，t）</span><span class="sxs-lookup"><span data-stu-id="48c65-130">大 (T, t)</span></span>|<span data-ttu-id="48c65-131">1912 年 7 月 30日日到 1926 年 12 月 24日，</span><span class="sxs-lookup"><span data-stu-id="48c65-131">July 30, 1912 to December 24, 1926</span></span>|  
|<span data-ttu-id="48c65-132">1</span><span class="sxs-lookup"><span data-stu-id="48c65-132">1</span></span>|<span data-ttu-id="48c65-133">明治 （明治）</span><span class="sxs-lookup"><span data-stu-id="48c65-133">明治 (Meiji)</span></span>|<span data-ttu-id="48c65-134">明 （M、 m）</span><span class="sxs-lookup"><span data-stu-id="48c65-134">明 (M, m)</span></span>|<span data-ttu-id="48c65-135">1868 年 9 月 8日日至 1912 年 7 月 29日日</span><span class="sxs-lookup"><span data-stu-id="48c65-135">September 8, 1868 to July 29, 1912</span></span>|  
  
 <span data-ttu-id="48c65-136">此类处理从 9 月 8 明治第 1 年 （公历，1868 年 9 月 8 日） 中的日期。</span><span class="sxs-lookup"><span data-stu-id="48c65-136">This class handles dates from September 8 in the year Meiji 1 (in the Gregorian calendar, September 8, 1868).</span></span> <span data-ttu-id="48c65-137">尽管日本历切换从一种阴历日历到太阳能日历年明治 6 (1873 公历日历) 中，此实现基于太阳日历。</span><span class="sxs-lookup"><span data-stu-id="48c65-137">Although the Japanese calendar was switched from a lunar calendar to a solar calendar in the year Meiji 6 (1873 of the Gregorian calendar), this implementation is based on the solar calendar only.</span></span>  
  
 <span data-ttu-id="48c65-138">日本历闰年公历日历中的相同闰年与相对应。</span><span class="sxs-lookup"><span data-stu-id="48c65-138">Leap years in the Japanese calendar correspond to the same leap years in the Gregorian calendar.</span></span> <span data-ttu-id="48c65-139">用公历日历闰年中，被指由 4 个，但如果是整除 100 除外的整除公历年。</span><span class="sxs-lookup"><span data-stu-id="48c65-139">A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="48c65-140">但是，由 400 是整除的公历年是闰年。</span><span class="sxs-lookup"><span data-stu-id="48c65-140">However, Gregorian years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="48c65-141">常见的一 365 年天，闰年 366 天。</span><span class="sxs-lookup"><span data-stu-id="48c65-141">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="48c65-142">日本日历具有 12 个月 28 至 31 天内使用：</span><span class="sxs-lookup"><span data-stu-id="48c65-142">The Japanese calendar has 12 months with 28 to 31 days each:</span></span>  
  
|<span data-ttu-id="48c65-143">GetMonth 值</span><span class="sxs-lookup"><span data-stu-id="48c65-143">GetMonth value</span></span>|<span data-ttu-id="48c65-144">月份</span><span class="sxs-lookup"><span data-stu-id="48c65-144">Month</span></span>|<span data-ttu-id="48c65-145">英语</span><span class="sxs-lookup"><span data-stu-id="48c65-145">English</span></span>|<span data-ttu-id="48c65-146">在平年中的天</span><span class="sxs-lookup"><span data-stu-id="48c65-146">Days in common years</span></span>|<span data-ttu-id="48c65-147">中的日闰年</span><span class="sxs-lookup"><span data-stu-id="48c65-147">Days in leap years</span></span>|  
|--------------------|-----------|-------------|--------------------------|------------------------|  
|<span data-ttu-id="48c65-148">1</span><span class="sxs-lookup"><span data-stu-id="48c65-148">1</span></span>|<span data-ttu-id="48c65-149">1月 (Ichigatsu)</span><span class="sxs-lookup"><span data-stu-id="48c65-149">1月 (Ichigatsu)</span></span>|<span data-ttu-id="48c65-150">年 1 月</span><span class="sxs-lookup"><span data-stu-id="48c65-150">January</span></span>|<span data-ttu-id="48c65-151">31</span><span class="sxs-lookup"><span data-stu-id="48c65-151">31</span></span>|<span data-ttu-id="48c65-152">31</span><span class="sxs-lookup"><span data-stu-id="48c65-152">31</span></span>|  
|<span data-ttu-id="48c65-153">2</span><span class="sxs-lookup"><span data-stu-id="48c65-153">2</span></span>|<span data-ttu-id="48c65-154">2月 (Nigatsu)</span><span class="sxs-lookup"><span data-stu-id="48c65-154">2月 (Nigatsu)</span></span>|<span data-ttu-id="48c65-155">年 2 月</span><span class="sxs-lookup"><span data-stu-id="48c65-155">February</span></span>|<span data-ttu-id="48c65-156">28</span><span class="sxs-lookup"><span data-stu-id="48c65-156">28</span></span>|<span data-ttu-id="48c65-157">29</span><span class="sxs-lookup"><span data-stu-id="48c65-157">29</span></span>|  
|<span data-ttu-id="48c65-158">3</span><span class="sxs-lookup"><span data-stu-id="48c65-158">3</span></span>|<span data-ttu-id="48c65-159">3月 (Sangatsu)</span><span class="sxs-lookup"><span data-stu-id="48c65-159">3月 (Sangatsu)</span></span>|<span data-ttu-id="48c65-160">年 3 月</span><span class="sxs-lookup"><span data-stu-id="48c65-160">March</span></span>|<span data-ttu-id="48c65-161">31</span><span class="sxs-lookup"><span data-stu-id="48c65-161">31</span></span>|<span data-ttu-id="48c65-162">31</span><span class="sxs-lookup"><span data-stu-id="48c65-162">31</span></span>|  
|<span data-ttu-id="48c65-163">4</span><span class="sxs-lookup"><span data-stu-id="48c65-163">4</span></span>|<span data-ttu-id="48c65-164">4月 (Shigatsu)</span><span class="sxs-lookup"><span data-stu-id="48c65-164">4月 (Shigatsu)</span></span>|<span data-ttu-id="48c65-165">年 4 月</span><span class="sxs-lookup"><span data-stu-id="48c65-165">April</span></span>|<span data-ttu-id="48c65-166">30</span><span class="sxs-lookup"><span data-stu-id="48c65-166">30</span></span>|<span data-ttu-id="48c65-167">30</span><span class="sxs-lookup"><span data-stu-id="48c65-167">30</span></span>|  
|<span data-ttu-id="48c65-168">5</span><span class="sxs-lookup"><span data-stu-id="48c65-168">5</span></span>|<span data-ttu-id="48c65-169">5月 (Gogatsu)</span><span class="sxs-lookup"><span data-stu-id="48c65-169">5月 (Gogatsu)</span></span>|<span data-ttu-id="48c65-170">5 月</span><span class="sxs-lookup"><span data-stu-id="48c65-170">May</span></span>|<span data-ttu-id="48c65-171">31</span><span class="sxs-lookup"><span data-stu-id="48c65-171">31</span></span>|<span data-ttu-id="48c65-172">31</span><span class="sxs-lookup"><span data-stu-id="48c65-172">31</span></span>|  
|<span data-ttu-id="48c65-173">6</span><span class="sxs-lookup"><span data-stu-id="48c65-173">6</span></span>|<span data-ttu-id="48c65-174">6月 (Rokugatsu)</span><span class="sxs-lookup"><span data-stu-id="48c65-174">6月 (Rokugatsu)</span></span>|<span data-ttu-id="48c65-175">June</span><span class="sxs-lookup"><span data-stu-id="48c65-175">June</span></span>|<span data-ttu-id="48c65-176">30</span><span class="sxs-lookup"><span data-stu-id="48c65-176">30</span></span>|<span data-ttu-id="48c65-177">30</span><span class="sxs-lookup"><span data-stu-id="48c65-177">30</span></span>|  
|<span data-ttu-id="48c65-178">7</span><span class="sxs-lookup"><span data-stu-id="48c65-178">7</span></span>|<span data-ttu-id="48c65-179">7月 (Shichigatsu)</span><span class="sxs-lookup"><span data-stu-id="48c65-179">7月 (Shichigatsu)</span></span>|<span data-ttu-id="48c65-180">年 7 月</span><span class="sxs-lookup"><span data-stu-id="48c65-180">July</span></span>|<span data-ttu-id="48c65-181">31</span><span class="sxs-lookup"><span data-stu-id="48c65-181">31</span></span>|<span data-ttu-id="48c65-182">31</span><span class="sxs-lookup"><span data-stu-id="48c65-182">31</span></span>|  
|<span data-ttu-id="48c65-183">8</span><span class="sxs-lookup"><span data-stu-id="48c65-183">8</span></span>|<span data-ttu-id="48c65-184">8月 (Hachigatsu)</span><span class="sxs-lookup"><span data-stu-id="48c65-184">8月 (Hachigatsu)</span></span>|<span data-ttu-id="48c65-185">年 8 月</span><span class="sxs-lookup"><span data-stu-id="48c65-185">August</span></span>|<span data-ttu-id="48c65-186">31</span><span class="sxs-lookup"><span data-stu-id="48c65-186">31</span></span>|<span data-ttu-id="48c65-187">31</span><span class="sxs-lookup"><span data-stu-id="48c65-187">31</span></span>|  
|<span data-ttu-id="48c65-188">9</span><span class="sxs-lookup"><span data-stu-id="48c65-188">9</span></span>|<span data-ttu-id="48c65-189">9月 (Kugatsu)</span><span class="sxs-lookup"><span data-stu-id="48c65-189">9月 (Kugatsu)</span></span>|<span data-ttu-id="48c65-190">年 9 月</span><span class="sxs-lookup"><span data-stu-id="48c65-190">September</span></span>|<span data-ttu-id="48c65-191">30</span><span class="sxs-lookup"><span data-stu-id="48c65-191">30</span></span>|<span data-ttu-id="48c65-192">30</span><span class="sxs-lookup"><span data-stu-id="48c65-192">30</span></span>|  
|<span data-ttu-id="48c65-193">10</span><span class="sxs-lookup"><span data-stu-id="48c65-193">10</span></span>|<span data-ttu-id="48c65-194">10月 (Juugatsu)</span><span class="sxs-lookup"><span data-stu-id="48c65-194">10月 (Juugatsu)</span></span>|<span data-ttu-id="48c65-195">年 10 月</span><span class="sxs-lookup"><span data-stu-id="48c65-195">October</span></span>|<span data-ttu-id="48c65-196">31</span><span class="sxs-lookup"><span data-stu-id="48c65-196">31</span></span>|<span data-ttu-id="48c65-197">31</span><span class="sxs-lookup"><span data-stu-id="48c65-197">31</span></span>|  
|<span data-ttu-id="48c65-198">11</span><span class="sxs-lookup"><span data-stu-id="48c65-198">11</span></span>|<span data-ttu-id="48c65-199">11月 (Juuichigatsu)</span><span class="sxs-lookup"><span data-stu-id="48c65-199">11月 (Juuichigatsu)</span></span>|<span data-ttu-id="48c65-200">年 11 月</span><span class="sxs-lookup"><span data-stu-id="48c65-200">November</span></span>|<span data-ttu-id="48c65-201">30</span><span class="sxs-lookup"><span data-stu-id="48c65-201">30</span></span>|<span data-ttu-id="48c65-202">30</span><span class="sxs-lookup"><span data-stu-id="48c65-202">30</span></span>|  
|<span data-ttu-id="48c65-203">12</span><span class="sxs-lookup"><span data-stu-id="48c65-203">12</span></span>|<span data-ttu-id="48c65-204">12月 (Juunigatsu)</span><span class="sxs-lookup"><span data-stu-id="48c65-204">12月 (Juunigatsu)</span></span>|<span data-ttu-id="48c65-205">年 12 月</span><span class="sxs-lookup"><span data-stu-id="48c65-205">December</span></span>|<span data-ttu-id="48c65-206">31</span><span class="sxs-lookup"><span data-stu-id="48c65-206">31</span></span>|<span data-ttu-id="48c65-207">31</span><span class="sxs-lookup"><span data-stu-id="48c65-207">31</span></span>|  
  
 <span data-ttu-id="48c65-208">Nigatsu，相当于 2 月的公历月，已在闰年的 29 天和 28 在平年。</span><span class="sxs-lookup"><span data-stu-id="48c65-208">Nigatsu, which is equivalent to the Gregorian calendar month of February, has 29 days during leap years and 28 during common years.</span></span>  
  
 <span data-ttu-id="48c65-209">日期公元 2001 年 1 月 1 日</span><span class="sxs-lookup"><span data-stu-id="48c65-209">The date January 1, 2001 A.D.</span></span> <span data-ttu-id="48c65-210">在公历中等同 Ichigatsu 日本历平成 13 年中的第一天。</span><span class="sxs-lookup"><span data-stu-id="48c65-210">in the Gregorian calendar is equivalent to the first day of Ichigatsu in the year Heisei 13 in the Japanese calendar.</span></span>  
  
 <span data-ttu-id="48c65-211">如果<xref:System.Globalization.JapaneseCalendar>是日语区域性的当前日历<xref:System.DateTime.Parse%2A?displayProperty=nameWithType>识别前面一年的纪元缩写。</span><span class="sxs-lookup"><span data-stu-id="48c65-211">If the <xref:System.Globalization.JapaneseCalendar> is the current calendar of the Japanese culture, <xref:System.DateTime.Parse%2A?displayProperty=nameWithType> recognizes the era abbreviations in front of the year.</span></span> <span data-ttu-id="48c65-212">缩写是单字符不区分大小写拉丁字母缩写或单字符日文汉字缩写。</span><span class="sxs-lookup"><span data-stu-id="48c65-212">The abbreviation is either the single-character case-insensitive Latin alphabet abbreviation or the single-character Kanji abbreviation.</span></span> <span data-ttu-id="48c65-213">xref:System.DateTime.Parse%2A?displayProperty=nameWithType > 还将"1"或元年 （元年） 识别为某个时间段的第一年。</span><span class="sxs-lookup"><span data-stu-id="48c65-213">xref:System.DateTime.Parse%2A?displayProperty=nameWithType> also recognizes either "1" or Gannen (元年) as the first year of an era.</span></span>
  
 <span data-ttu-id="48c65-214">每个<xref:System.Globalization.CultureInfo>对象支持一组的日历。</span><span class="sxs-lookup"><span data-stu-id="48c65-214">Each <xref:System.Globalization.CultureInfo> object supports a set of calendars.</span></span> <span data-ttu-id="48c65-215"><xref:System.Globalization.CultureInfo.Calendar%2A>属性返回区域性的默认日历和<xref:System.Globalization.CultureInfo.OptionalCalendars%2A>属性返回一个数组，包含所有支持的区域性的日历。</span><span class="sxs-lookup"><span data-stu-id="48c65-215">The <xref:System.Globalization.CultureInfo.Calendar%2A> property returns the default calendar for the culture, and the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property returns an array containing all the calendars supported by the culture.</span></span> <span data-ttu-id="48c65-216">若要更改使用的日历<xref:System.Globalization.CultureInfo>，将<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType>属性设置为一个新<xref:System.Globalization.Calendar>。</span><span class="sxs-lookup"><span data-stu-id="48c65-216">To change the calendar used by a <xref:System.Globalization.CultureInfo>, set the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> property to a new <xref:System.Globalization.Calendar>.</span></span>
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="T:System.Globalization.GregorianCalendar" />
    <altmember cref="P:System.Globalization.CultureInfo.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.OptionalCalendars" />
    <related type="Article" href="~/docs/standard/datetime/working-with-calendars.md"><span data-ttu-id="48c65-217">使用日历</span><span class="sxs-lookup"><span data-stu-id="48c65-217">Working with Calendars</span></span></related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Calendar-3360a84a"><span data-ttu-id="48c65-218">示例:日历周范围实用工具</span><span class="sxs-lookup"><span data-stu-id="48c65-218">Sample: Calendar Week Range Utility</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JapaneseCalendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JapaneseCalendar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="48c65-219">初始化 <see cref="T:System.Globalization.JapaneseCalendar" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="48c65-219">Initializes a new instance of the <see cref="T:System.Globalization.JapaneseCalendar" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.TypeInitializationException"><span data-ttu-id="48c65-220">由于缺少区域性信息，因此无法初始化 <see cref="T:System.Globalization.JapaneseCalendar" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="48c65-220">Unable to initialize a <see cref="T:System.Globalization.JapaneseCalendar" /> object because of missing culture information.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public override DateTime AddMonths (DateTime time, int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddMonths(valuetype System.DateTime time, int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.AddMonths(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddMonths (time As DateTime, months As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddMonths(DateTime time, int months);" />
      <MemberSignature Language="F#" Value="override this.AddMonths : DateTime * int -&gt; DateTime" Usage="japaneseCalendar.AddMonths (time, months)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="48c65-221">将向其添加月数的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="48c65-221">The <see cref="T:System.DateTime" /> to which to add months.</span></span></param>
        <param name="months"><span data-ttu-id="48c65-222">要添加的月数。</span><span class="sxs-lookup"><span data-stu-id="48c65-222">The number of months to add.</span></span></param>
        <summary><span data-ttu-id="48c65-223">返回与指定 <see cref="T:System.DateTime" /> 相距指定月数的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="48c65-223">Returns a <see cref="T:System.DateTime" /> that is the specified number of months away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="48c65-224">将指定月数添加到指定的 <see cref="T:System.DateTime" /> 中时得到的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="48c65-224">The <see cref="T:System.DateTime" /> that results from adding the specified number of months to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48c65-225">所产生的日部分<xref:System.DateTime>如果结果的日期不是结果生成的年的月份中的有效日期影响。</span><span class="sxs-lookup"><span data-stu-id="48c65-225">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="48c65-226">它已更改为生成的年在生成每月最后一个有效的日期。</span><span class="sxs-lookup"><span data-stu-id="48c65-226">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="48c65-227">所生成的年份部分<xref:System.DateTime>受影响，如果结果的月份之外的指定年份<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="48c65-227">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="48c65-228">所产生的时代一部分<xref:System.DateTime>之外的纪元的指定生成的年是否影响<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="48c65-228">The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="48c65-229">所生成的时间的日部分<xref:System.DateTime>保持不变，与指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="48c65-229">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="48c65-230">例如，如果指定的月份是 Juugatsu （10 月），包含 31 天，则指定的日期是该月 31 日和`months`为 6，生成的年是一个多个指定的年份，生成的月份是 Shigatsu （年 4 月），并生成一天为 30 天，即 Shigatsu （年 4 月） 中的最后一天。</span><span class="sxs-lookup"><span data-stu-id="48c65-230">For example, if the specified month is Juugatsu (October), which has 31 days, the specified day is the 31st day of that month, and `months` is 6, the resulting year is one more than the specified year, the resulting month is Shigatsu (April), and the resulting day is the 30th day, which is the last day in Shigatsu (April).</span></span>  
  
 <span data-ttu-id="48c65-231">如果`months`为负，从而<xref:System.DateTime>早于指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="48c65-231">If `months` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="48c65-232"><xref:System.DateTime.Kind%2A>所返回的属性<xref:System.DateTime>值始终等于<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="48c65-232">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="48c65-233">可以保留<xref:System.DateTime.Kind%2A>的属性`time`参数通过调用<xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType>方法，如以下示例所示。</span><span class="sxs-lookup"><span data-stu-id="48c65-233">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]
 [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]  
  
   
  
## Examples  
 <span data-ttu-id="48c65-234">下面的代码示例显示的多个组件的值<xref:System.DateTime>方面日本历。</span><span class="sxs-lookup"><span data-stu-id="48c65-234">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CPP/japanesecalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CS/japanesecalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/VB/japanesecalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="48c65-235">生成的 <see cref="T:System.DateTime" /> 超出了支持的范围。</span><span class="sxs-lookup"><span data-stu-id="48c65-235">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="months" /> <span data-ttu-id="48c65-236">小于 -120000。</span><span class="sxs-lookup"><span data-stu-id="48c65-236">is less than -120000.</span></span>  
  
<span data-ttu-id="48c65-237">- 或 -</span><span class="sxs-lookup"><span data-stu-id="48c65-237">-or-</span></span> 
 <paramref name="months" /> <span data-ttu-id="48c65-238">大于 120000。</span><span class="sxs-lookup"><span data-stu-id="48c65-238">is greater than 120000.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public override DateTime AddYears (DateTime time, int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddYears(valuetype System.DateTime time, int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.AddYears(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddYears (time As DateTime, years As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddYears(DateTime time, int years);" />
      <MemberSignature Language="F#" Value="override this.AddYears : DateTime * int -&gt; DateTime" Usage="japaneseCalendar.AddYears (time, years)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="48c65-239">将向其添加年数的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="48c65-239">The <see cref="T:System.DateTime" /> to which to add years.</span></span></param>
        <param name="years"><span data-ttu-id="48c65-240">要添加的年数。</span><span class="sxs-lookup"><span data-stu-id="48c65-240">The number of years to add.</span></span></param>
        <summary><span data-ttu-id="48c65-241">返回与指定 <see cref="T:System.DateTime" /> 相距指定年数的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="48c65-241">Returns a <see cref="T:System.DateTime" /> that is the specified number of years away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="48c65-242">将指定年数添加到指定的 <see cref="T:System.DateTime" /> 中时得到的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="48c65-242">The <see cref="T:System.DateTime" /> that results from adding the specified number of years to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48c65-243">所产生的日部分<xref:System.DateTime>如果结果的日期不是结果生成的年的月份中的有效日期影响。</span><span class="sxs-lookup"><span data-stu-id="48c65-243">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="48c65-244">它已更改为生成的年在生成每月最后一个有效的日期。</span><span class="sxs-lookup"><span data-stu-id="48c65-244">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="48c65-245">所生成的月份部分<xref:System.DateTime>保持不变，与指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="48c65-245">The month part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="48c65-246">所产生的时代一部分<xref:System.DateTime>之外的纪元的指定生成的年是否影响<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="48c65-246">The era part of the resulting <xref:System.DateTime> is affected if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="48c65-247">所生成的时间的日部分<xref:System.DateTime>保持不变，与指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="48c65-247">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="48c65-248">例如，Nigatsu （年 2 月） 具有除闰年时它有 29 天期间的第 28 天。</span><span class="sxs-lookup"><span data-stu-id="48c65-248">For example, Nigatsu (February) has 28 days except during leap years when it has 29 days.</span></span> <span data-ttu-id="48c65-249">如果指定的日期在闰年和的值是 29 日 Nigatsu （年 2 月） 的`years`为 1，结果的日期将是下一年的 28 天的 Nigatsu （年 2 月）。</span><span class="sxs-lookup"><span data-stu-id="48c65-249">If the specified date is the 29th day of Nigatsu (February) in a leap year and the value of `years` is 1, the resulting date will be the 28th day of Nigatsu (February) in the following year.</span></span>  
  
 <span data-ttu-id="48c65-250">如果`years`为负，从而<xref:System.DateTime>早于指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="48c65-250">If `years` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="48c65-251"><xref:System.DateTime.Kind%2A>所返回的属性<xref:System.DateTime>值始终等于<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="48c65-251">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="48c65-252">可以保留<xref:System.DateTime.Kind%2A>的属性`time`参数通过调用<xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType>方法，如以下示例所示。</span><span class="sxs-lookup"><span data-stu-id="48c65-252">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]
 [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]  
  
   
  
## Examples  
 <span data-ttu-id="48c65-253">下面的代码示例显示的多个组件的值<xref:System.DateTime>方面日本历。</span><span class="sxs-lookup"><span data-stu-id="48c65-253">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CPP/japanesecalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CS/japanesecalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/VB/japanesecalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="48c65-254">生成的 <see cref="T:System.DateTime" /> 超出了支持的范围。</span><span class="sxs-lookup"><span data-stu-id="48c65-254">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="time" /> <span data-ttu-id="48c65-255">超出 <see cref="T:System.Globalization.JapaneseCalendar" /> 类型支持的范围。</span><span class="sxs-lookup"><span data-stu-id="48c65-255">is outside the supported range of the <see cref="T:System.Globalization.JapaneseCalendar" /> type.</span></span>  
  
<span data-ttu-id="48c65-256">- 或 -</span><span class="sxs-lookup"><span data-stu-id="48c65-256">-or-</span></span> 
 <paramref name="years" /> <span data-ttu-id="48c65-257">小于 -10,000 或大于 10,000。</span><span class="sxs-lookup"><span data-stu-id="48c65-257">is less than -10,000 or greater than 10,000.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AlgorithmType">
      <MemberSignature Language="C#" Value="public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarAlgorithmType AlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JapaneseCalendar.AlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AlgorithmType As CalendarAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CalendarAlgorithmType AlgorithmType { System::Globalization::CalendarAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmType : System.Globalization.CalendarAlgorithmType" Usage="System.Globalization.JapaneseCalendar.AlgorithmType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48c65-258">获取一个值，该值指示当前日历是阳历、阴历还是二者的组合。</span><span class="sxs-lookup"><span data-stu-id="48c65-258">Gets a value that indicates whether the current calendar is solar-based, lunar-based, or a combination of both.</span></span></summary>
        <value><span data-ttu-id="48c65-259">始终返回 <see cref="F:System.Globalization.CalendarAlgorithmType.SolarCalendar" />。</span><span class="sxs-lookup"><span data-stu-id="48c65-259">Always returns <see cref="F:System.Globalization.CalendarAlgorithmType.SolarCalendar" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="48c65-260">下面的示例使用反射来实例化每个<xref:System.Globalization.Calendar>类型，.NET 类库中找到并显示的值及其<xref:System.Globalization.Calendar.AlgorithmType%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="48c65-260">The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Class Library and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/cs/algorithmtype1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/vb/algorithmtype1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eras">
      <MemberSignature Language="C#" Value="public override int[] Eras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] Eras" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JapaneseCalendar.Eras" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Eras As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;int&gt; ^ Eras { cli::array &lt;int&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Eras : int[]" Usage="System.Globalization.JapaneseCalendar.Eras" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48c65-261">获取 <see cref="T:System.Globalization.JapaneseCalendar" /> 中的纪元列表。</span><span class="sxs-lookup"><span data-stu-id="48c65-261">Gets the list of eras in the <see cref="T:System.Globalization.JapaneseCalendar" />.</span></span></summary>
        <value><span data-ttu-id="48c65-262">表示 <see cref="T:System.Globalization.JapaneseCalendar" /> 中的纪元的整数数组。</span><span class="sxs-lookup"><span data-stu-id="48c65-262">An array of integers that represents the eras in the <see cref="T:System.Globalization.JapaneseCalendar" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48c65-263">日本历识别为每个皇帝 reign 一个纪元。</span><span class="sxs-lookup"><span data-stu-id="48c65-263">The Japanese calendar recognizes one era for every emperor's reign.</span></span> <span data-ttu-id="48c65-264">两个最新纪元是日本平成 12 时代，公历 1989 年，从开始和 Reiwa 时代，从开始公历 2019 年。</span><span class="sxs-lookup"><span data-stu-id="48c65-264">The two most recent eras are the Heisei era, beginning in the Gregorian calendar year 1989, and the Reiwa era, beginning in the Gregorian calendar year 2019.</span></span> <span data-ttu-id="48c65-265">纪元名称通常显示年份。</span><span class="sxs-lookup"><span data-stu-id="48c65-265">The era name is typically displayed before the year.</span></span> <span data-ttu-id="48c65-266">例如，公历 2001 年为日语日历年平成 13。</span><span class="sxs-lookup"><span data-stu-id="48c65-266">For example, the Gregorian calendar year 2001 is the Japanese calendar year Heisei 13.</span></span> <span data-ttu-id="48c65-267">请注意，第一年的某个时间段称为"元年。"</span><span class="sxs-lookup"><span data-stu-id="48c65-267">Note that the first year of an era is called "Gannen."</span></span> <span data-ttu-id="48c65-268">因此，公历 1989 年是日语日历平成元年。</span><span class="sxs-lookup"><span data-stu-id="48c65-268">Therefore, the Gregorian calendar year 1989 was the Japanese calendar year Heisei Gannen.</span></span>  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

 <span data-ttu-id="48c65-269">此类将分配数字到纪元，如下所示：</span><span class="sxs-lookup"><span data-stu-id="48c65-269">This class assigns numbers to the eras as follows:</span></span>  
  
|<span data-ttu-id="48c65-270">GetEra 值</span><span class="sxs-lookup"><span data-stu-id="48c65-270">GetEra value</span></span>|<span data-ttu-id="48c65-271">纪元名称</span><span class="sxs-lookup"><span data-stu-id="48c65-271">Era Name</span></span>|<span data-ttu-id="48c65-272">纪元的缩写</span><span class="sxs-lookup"><span data-stu-id="48c65-272">Era Abbreviation</span></span>|<span data-ttu-id="48c65-273">公历日期</span><span class="sxs-lookup"><span data-stu-id="48c65-273">Gregorian Dates</span></span>|  
|------------------|--------------|----------------------|---------------------|  
|<span data-ttu-id="48c65-274">5</span><span class="sxs-lookup"><span data-stu-id="48c65-274">5</span></span>|<span data-ttu-id="48c65-275">令和 (Reiwa)</span><span class="sxs-lookup"><span data-stu-id="48c65-275">令和 (Reiwa)</span></span>|<span data-ttu-id="48c65-276">令和 （R，r）</span><span class="sxs-lookup"><span data-stu-id="48c65-276">令和 (R, r)</span></span>|<span data-ttu-id="48c65-277">1，2019 年 5 提供</span><span class="sxs-lookup"><span data-stu-id="48c65-277">May 1, 2019 to present</span></span>|
|<span data-ttu-id="48c65-278">4</span><span class="sxs-lookup"><span data-stu-id="48c65-278">4</span></span>|<span data-ttu-id="48c65-279">平成 (日本平成 12)</span><span class="sxs-lookup"><span data-stu-id="48c65-279">平成 (Heisei)</span></span>|<span data-ttu-id="48c65-280">平 (H，h)</span><span class="sxs-lookup"><span data-stu-id="48c65-280">平 (H, h)</span></span>|<span data-ttu-id="48c65-281">年 1 月 8 日 1989 1989年提供</span><span class="sxs-lookup"><span data-stu-id="48c65-281">January 8, 1989 to present</span></span>|  
|<span data-ttu-id="48c65-282">3</span><span class="sxs-lookup"><span data-stu-id="48c65-282">3</span></span>|<span data-ttu-id="48c65-283">昭和 (Showa)</span><span class="sxs-lookup"><span data-stu-id="48c65-283">昭和 (Showa)</span></span>|<span data-ttu-id="48c65-284">昭 （S，s）</span><span class="sxs-lookup"><span data-stu-id="48c65-284">昭 (S, s)</span></span>|<span data-ttu-id="48c65-285">1926 年 12 月 25日日，到 1989 年 1 月 7日日</span><span class="sxs-lookup"><span data-stu-id="48c65-285">December 25, 1926 to January 7, 1989</span></span>|  
|<span data-ttu-id="48c65-286">2</span><span class="sxs-lookup"><span data-stu-id="48c65-286">2</span></span>|<span data-ttu-id="48c65-287">大正 (Taisho)</span><span class="sxs-lookup"><span data-stu-id="48c65-287">大正 (Taisho)</span></span>|<span data-ttu-id="48c65-288">大 （T，t）</span><span class="sxs-lookup"><span data-stu-id="48c65-288">大 (T, t)</span></span>|<span data-ttu-id="48c65-289">1912 年 7 月 30日日到 1926 年 12 月 24日，</span><span class="sxs-lookup"><span data-stu-id="48c65-289">July 30, 1912 to December 24, 1926</span></span>|  
|<span data-ttu-id="48c65-290">1</span><span class="sxs-lookup"><span data-stu-id="48c65-290">1</span></span>|<span data-ttu-id="48c65-291">明治 （明治）</span><span class="sxs-lookup"><span data-stu-id="48c65-291">明治 (Meiji)</span></span>|<span data-ttu-id="48c65-292">明 （M、 m）</span><span class="sxs-lookup"><span data-stu-id="48c65-292">明 (M, m)</span></span>|<span data-ttu-id="48c65-293">1868 年 9 月 8日日至 1912 年 7 月 29日日</span><span class="sxs-lookup"><span data-stu-id="48c65-293">September 8, 1868 to July 29, 1912</span></span>|  
  
 <span data-ttu-id="48c65-294">此类处理从 9 月 8 年明治 1 (1868 年 1 月 1，公历日历) 中的日期。</span><span class="sxs-lookup"><span data-stu-id="48c65-294">This class handles dates from September 8 in the year Meiji 1 (January 1, 1868 of the Gregorian calendar).</span></span> <span data-ttu-id="48c65-295">尽管日本历切换从一种阴历日历到太阳能日历年明治 6 (1873 公历日历) 中，此实现基于太阳日历。</span><span class="sxs-lookup"><span data-stu-id="48c65-295">Although the Japanese calendar was switched from a lunar calendar to a solar calendar in the year Meiji 6 (1873 of the Gregorian calendar), this implementation is based on the solar calendar only.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="48c65-296">应在将来添加其他纪元，应用程序可能会遇到多个日本历的预期五个纪元。</span><span class="sxs-lookup"><span data-stu-id="48c65-296">Should additional eras be added in the future, applications may encounter more than the expected five eras for the Japanese calendar.</span></span> <span data-ttu-id="48c65-297">应测试您的应用程序，以确保它们继续在这种情况下; 中工作请参阅[纪元处理日本历](/windows/desktop/Intl/era-handling-for-the-japanese-calendar)。</span><span class="sxs-lookup"><span data-stu-id="48c65-297">Your applications should be tested to ensure that they continue to work in such an event; see [Era Handling for the Japanese Calendar](/windows/desktop/Intl/era-handling-for-the-japanese-calendar).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48c65-298">下面的示例显示中包含的值<xref:System.Globalization.JapaneseCalendar.Eras%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="48c65-298">The following example displays the values contained in the <xref:System.Globalization.JapaneseCalendar.Eras%2A> property.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar.Eras#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.Eras/CPP/yslin_japanesecalendar_eras.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar.Eras#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.Eras/CS/yslin_japanesecalendar_eras.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar.Eras#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.Eras/VB/yslin_japanesecalendar_eras.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfMonth">
      <MemberSignature Language="C#" Value="public override int GetDayOfMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfMonth : DateTime -&gt; int" Usage="japaneseCalendar.GetDayOfMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="48c65-299">要读取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="48c65-299">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="48c65-300">返回指定 <see cref="T:System.DateTime" /> 中的月中日期。</span><span class="sxs-lookup"><span data-stu-id="48c65-300">Returns the day of the month in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="48c65-301">1 到 31 之间的一个整数，用于表示指定的 <see cref="T:System.DateTime" /> 中的月中日期。</span><span class="sxs-lookup"><span data-stu-id="48c65-301">An integer from 1 to 31 that represents the day of the month in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="48c65-302">下面的代码示例显示的多个组件的值<xref:System.DateTime>方面日本历。</span><span class="sxs-lookup"><span data-stu-id="48c65-302">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CPP/japanesecalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CS/japanesecalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/VB/japanesecalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Day" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfWeek">
      <MemberSignature Language="C#" Value="public override DayOfWeek GetDayOfWeek (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DayOfWeek GetDayOfWeek(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfWeek (time As DateTime) As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DayOfWeek GetDayOfWeek(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfWeek : DateTime -&gt; DayOfWeek" Usage="japaneseCalendar.GetDayOfWeek time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="48c65-303">要读取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="48c65-303">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="48c65-304">返回指定 <see cref="T:System.DateTime" /> 中的周中日期。</span><span class="sxs-lookup"><span data-stu-id="48c65-304">Returns the day of the week in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="48c65-305">一个 <see cref="T:System.DayOfWeek" /> 值，用于表示指定的 <see cref="T:System.DateTime" /> 中的周中日期。</span><span class="sxs-lookup"><span data-stu-id="48c65-305">A <see cref="T:System.DayOfWeek" /> value that represents the day of the week in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48c65-306"><xref:System.DayOfWeek>值如下所示：</span><span class="sxs-lookup"><span data-stu-id="48c65-306">The <xref:System.DayOfWeek> values are as follows:</span></span>  
  
|<span data-ttu-id="48c65-307">DayOfWeek 值</span><span class="sxs-lookup"><span data-stu-id="48c65-307">DayOfWeek value</span></span>|<span data-ttu-id="48c65-308">指示</span><span class="sxs-lookup"><span data-stu-id="48c65-308">which indicates</span></span>|  
|---------------------|---------------------|  
|<span data-ttu-id="48c65-309">星期日</span><span class="sxs-lookup"><span data-stu-id="48c65-309">Sunday</span></span>|<span data-ttu-id="48c65-310">日曜日 (Nichiyoubi)</span><span class="sxs-lookup"><span data-stu-id="48c65-310">日曜日 (Nichiyoubi)</span></span>|  
|<span data-ttu-id="48c65-311">星期一</span><span class="sxs-lookup"><span data-stu-id="48c65-311">Monday</span></span>|<span data-ttu-id="48c65-312">月曜日 (Getsuyoubi)</span><span class="sxs-lookup"><span data-stu-id="48c65-312">月曜日 (Getsuyoubi)</span></span>|  
|<span data-ttu-id="48c65-313">星期二</span><span class="sxs-lookup"><span data-stu-id="48c65-313">Tuesday</span></span>|<span data-ttu-id="48c65-314">火曜日 (Kayoubi)</span><span class="sxs-lookup"><span data-stu-id="48c65-314">火曜日 (Kayoubi)</span></span>|  
|<span data-ttu-id="48c65-315">星期三</span><span class="sxs-lookup"><span data-stu-id="48c65-315">Wednesday</span></span>|<span data-ttu-id="48c65-316">水曜日 (Suiyoubi)</span><span class="sxs-lookup"><span data-stu-id="48c65-316">水曜日 (Suiyoubi)</span></span>|  
|<span data-ttu-id="48c65-317">星期四</span><span class="sxs-lookup"><span data-stu-id="48c65-317">Thursday</span></span>|<span data-ttu-id="48c65-318">木曜日 (Mokuyoubi)</span><span class="sxs-lookup"><span data-stu-id="48c65-318">木曜日 (Mokuyoubi)</span></span>|  
|<span data-ttu-id="48c65-319">星期五</span><span class="sxs-lookup"><span data-stu-id="48c65-319">Friday</span></span>|<span data-ttu-id="48c65-320">金曜日 (Kinyoubi)</span><span class="sxs-lookup"><span data-stu-id="48c65-320">金曜日 (Kinyoubi)</span></span>|  
|<span data-ttu-id="48c65-321">星期六</span><span class="sxs-lookup"><span data-stu-id="48c65-321">Saturday</span></span>|<span data-ttu-id="48c65-322">土曜日 (Doyoubi)</span><span class="sxs-lookup"><span data-stu-id="48c65-322">土曜日 (Doyoubi)</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="48c65-323">下面的代码示例显示的多个组件的值<xref:System.DateTime>方面日本历。</span><span class="sxs-lookup"><span data-stu-id="48c65-323">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CPP/japanesecalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CS/japanesecalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/VB/japanesecalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfWeek" />
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfYear">
      <MemberSignature Language="C#" Value="public override int GetDayOfYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfYear(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfYear : DateTime -&gt; int" Usage="japaneseCalendar.GetDayOfYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="48c65-324">要读取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="48c65-324">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="48c65-325">返回指定 <see cref="T:System.DateTime" /> 中的日期是该年中的第几天。</span><span class="sxs-lookup"><span data-stu-id="48c65-325">Returns the day of the year in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="48c65-326">1 到 366 之间的一个整数，用于表示指定的 <see cref="T:System.DateTime" /> 中的年中日期。</span><span class="sxs-lookup"><span data-stu-id="48c65-326">An integer from 1 to 366 that represents the day of the year in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48c65-327">一年中的一天被指从一年的第一天的天数。</span><span class="sxs-lookup"><span data-stu-id="48c65-327">The day of the year is defined as the number of days from the first day of the year.</span></span> <span data-ttu-id="48c65-328">例如，<xref:System.Globalization.JapaneseCalendar.GetDayOfYear%2A>对的第一个月的第一天返回 1，并<xref:System.Globalization.JapaneseCalendar.GetDayOfYear%2A>最后一天的最后一个月返回总天数该年份的这是相同的值作为返回的<xref:System.Globalization.JapaneseCalendar.GetDaysInYear%2A>。</span><span class="sxs-lookup"><span data-stu-id="48c65-328">For example, <xref:System.Globalization.JapaneseCalendar.GetDayOfYear%2A> for the first day of the first month returns 1, and <xref:System.Globalization.JapaneseCalendar.GetDayOfYear%2A> for the last day of the last month returns the total number of days in that year, which is the same value as that returned by <xref:System.Globalization.JapaneseCalendar.GetDaysInYear%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48c65-329">下面的代码示例显示的多个组件的值<xref:System.DateTime>方面日本历。</span><span class="sxs-lookup"><span data-stu-id="48c65-329">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CPP/japanesecalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CS/japanesecalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/VB/japanesecalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfYear" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public override int GetDaysInMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInMonth (year As Integer, month As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="override this.GetDaysInMonth : int * int * int -&gt; int" Usage="japaneseCalendar.GetDaysInMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="48c65-330">一个整数，用于表示年份。</span><span class="sxs-lookup"><span data-stu-id="48c65-330">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="48c65-331">1 到 12 之间的一个整数，用于表示月份。</span><span class="sxs-lookup"><span data-stu-id="48c65-331">An integer from 1 to 12 that represents the month.</span></span></param>
        <param name="era"><span data-ttu-id="48c65-332">一个整数，用于表示纪元。</span><span class="sxs-lookup"><span data-stu-id="48c65-332">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="48c65-333">返回指定纪元中指定年份的指定月份中的天数。</span><span class="sxs-lookup"><span data-stu-id="48c65-333">Returns the number of days in the specified month in the specified year in the specified era.</span></span></summary>
        <returns><span data-ttu-id="48c65-334">指定纪元中指定年份的指定月份中的天数。</span><span class="sxs-lookup"><span data-stu-id="48c65-334">The number of days in the specified month in the specified year in the specified era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48c65-335">例如，此方法为 Nigatsu 返回 28 或 29，(2 月`month`= 2)，具体取决于`year`是否为闰年。</span><span class="sxs-lookup"><span data-stu-id="48c65-335">For example, this method returns 28 or 29 for Nigatsu (February, `month` = 2), depending on whether `year` is a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48c65-336">下面的代码示例调用<xref:System.Globalization.JapaneseCalendar.GetDaysInMonth%2A>为每个纪元中的五年的第二个月。</span><span class="sxs-lookup"><span data-stu-id="48c65-336">The following code example calls <xref:System.Globalization.JapaneseCalendar.GetDaysInMonth%2A> for the second month in each of five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar.GetDaysInMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.GetDaysInMonth/CPP/japanesecalendar_getdaysinmonth.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar.GetDaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.GetDaysInMonth/CS/japanesecalendar_getdaysinmonth.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar.GetDaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.GetDaysInMonth/VB/japanesecalendar_getdaysinmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> <span data-ttu-id="48c65-337">超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="48c65-337">is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="48c65-338">- 或 -</span><span class="sxs-lookup"><span data-stu-id="48c65-338">-or-</span></span> 
 <paramref name="month" /> <span data-ttu-id="48c65-339">超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="48c65-339">is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="48c65-340">- 或 -</span><span class="sxs-lookup"><span data-stu-id="48c65-340">-or-</span></span> 
 <paramref name="era" /> <span data-ttu-id="48c65-341">超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="48c65-341">is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.JapaneseCalendar.Eras" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public override int GetDaysInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetDaysInYear : int * int -&gt; int" Usage="japaneseCalendar.GetDaysInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="48c65-342">一个整数，用于表示年份。</span><span class="sxs-lookup"><span data-stu-id="48c65-342">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="48c65-343">一个整数，用于表示纪元。</span><span class="sxs-lookup"><span data-stu-id="48c65-343">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="48c65-344">返回指定纪元中指定年份的天数。</span><span class="sxs-lookup"><span data-stu-id="48c65-344">Returns the number of days in the specified year in the specified era.</span></span></summary>
        <returns><span data-ttu-id="48c65-345">指定纪元中指定年份的天数。</span><span class="sxs-lookup"><span data-stu-id="48c65-345">The number of days in the specified year in the specified era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48c65-346">例如，此方法返回 365 或 366，具体取决于是否`year`是否为闰年。</span><span class="sxs-lookup"><span data-stu-id="48c65-346">For example, this method returns 365 or 366, depending on whether `year` is a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48c65-347">下面的示例调用<xref:System.Globalization.JapaneseCalendar.GetDaysInYear%2A>五年中每个纪元。</span><span class="sxs-lookup"><span data-stu-id="48c65-347">The following example calls <xref:System.Globalization.JapaneseCalendar.GetDaysInYear%2A> for five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar.GetDaysInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.GetDaysInYear/CPP/japanesecalendar_getdaysinyear.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar.GetDaysInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.GetDaysInYear/CS/japanesecalendar_getdaysinyear.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar.GetDaysInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.GetDaysInYear/VB/japanesecalendar_getdaysinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> <span data-ttu-id="48c65-348">超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="48c65-348">is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="48c65-349">- 或 -</span><span class="sxs-lookup"><span data-stu-id="48c65-349">-or-</span></span> 
 <paramref name="era" /> <span data-ttu-id="48c65-350">超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="48c65-350">is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.JapaneseCalendar.Eras" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public override int GetEra (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEra(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetEra(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEra (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetEra(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetEra : DateTime -&gt; int" Usage="japaneseCalendar.GetEra time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="48c65-351">要读取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="48c65-351">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="48c65-352">返回指定 <see cref="T:System.DateTime" /> 中的纪元。</span><span class="sxs-lookup"><span data-stu-id="48c65-352">Returns the era in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="48c65-353">一个整数，用于表示指定 <see cref="T:System.DateTime" /> 中的纪元。</span><span class="sxs-lookup"><span data-stu-id="48c65-353">An integer that represents the era in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48c65-354">日本历识别为每个皇帝 reign 一个纪元。</span><span class="sxs-lookup"><span data-stu-id="48c65-354">The Japanese calendar recognizes one era for every emperor's reign.</span></span> <span data-ttu-id="48c65-355">两个最新纪元是日本平成 12 时代，公历 1989 年，从开始和 Reiwa 时代，从开始公历 2019 年。</span><span class="sxs-lookup"><span data-stu-id="48c65-355">The two most recent eras are the Heisei era, beginning in the Gregorian calendar year 1989, and the Reiwa era, beginning in the Gregorian calendar year 2019.</span></span> <span data-ttu-id="48c65-356">纪元名称通常显示年份。</span><span class="sxs-lookup"><span data-stu-id="48c65-356">The era name is typically displayed before the year.</span></span> <span data-ttu-id="48c65-357">例如，公历 2001 年为日语日历年平成 13。</span><span class="sxs-lookup"><span data-stu-id="48c65-357">For example, the Gregorian calendar year 2001 is the Japanese calendar year Heisei 13.</span></span> <span data-ttu-id="48c65-358">请注意，第一年的某个时间段称为"元年。"</span><span class="sxs-lookup"><span data-stu-id="48c65-358">Note that the first year of an era is called "Gannen."</span></span> <span data-ttu-id="48c65-359">因此，公历 1989 年是日语日历平成元年。</span><span class="sxs-lookup"><span data-stu-id="48c65-359">Therefore, the Gregorian calendar year 1989 was the Japanese calendar year Heisei Gannen.</span></span>  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

 <span data-ttu-id="48c65-360">此类将分配数字到纪元，如下所示：</span><span class="sxs-lookup"><span data-stu-id="48c65-360">This class assigns numbers to the eras as follows:</span></span>  
  
|<span data-ttu-id="48c65-361">GetEra 值</span><span class="sxs-lookup"><span data-stu-id="48c65-361">GetEra value</span></span>|<span data-ttu-id="48c65-362">纪元名称</span><span class="sxs-lookup"><span data-stu-id="48c65-362">Era Name</span></span>|<span data-ttu-id="48c65-363">纪元的缩写</span><span class="sxs-lookup"><span data-stu-id="48c65-363">Era Abbreviation</span></span>|<span data-ttu-id="48c65-364">公历日期</span><span class="sxs-lookup"><span data-stu-id="48c65-364">Gregorian Dates</span></span>|  
|------------------|--------------|----------------------|---------------------|  
|<span data-ttu-id="48c65-365">5</span><span class="sxs-lookup"><span data-stu-id="48c65-365">5</span></span>|<span data-ttu-id="48c65-366">令和 (Reiwa)</span><span class="sxs-lookup"><span data-stu-id="48c65-366">令和 (Reiwa)</span></span>|<span data-ttu-id="48c65-367">令和 （R，r）</span><span class="sxs-lookup"><span data-stu-id="48c65-367">令和 (R, r)</span></span>|<span data-ttu-id="48c65-368">1，2019 年 5 提供</span><span class="sxs-lookup"><span data-stu-id="48c65-368">May 1, 2019 to present</span></span>|
|<span data-ttu-id="48c65-369">4</span><span class="sxs-lookup"><span data-stu-id="48c65-369">4</span></span>|<span data-ttu-id="48c65-370">平成 (日本平成 12)</span><span class="sxs-lookup"><span data-stu-id="48c65-370">平成 (Heisei)</span></span>|<span data-ttu-id="48c65-371">平 (H，h)</span><span class="sxs-lookup"><span data-stu-id="48c65-371">平 (H, h)</span></span>|<span data-ttu-id="48c65-372">1989 年 1 月 8日日到 2019 年 4 月 30日日</span><span class="sxs-lookup"><span data-stu-id="48c65-372">January 8, 1989 to April 30, 2019</span></span>|  
|<span data-ttu-id="48c65-373">3</span><span class="sxs-lookup"><span data-stu-id="48c65-373">3</span></span>|<span data-ttu-id="48c65-374">昭和 (Showa)</span><span class="sxs-lookup"><span data-stu-id="48c65-374">昭和 (Showa)</span></span>|<span data-ttu-id="48c65-375">昭 （S，s）</span><span class="sxs-lookup"><span data-stu-id="48c65-375">昭 (S, s)</span></span>|<span data-ttu-id="48c65-376">1926 年 12 月 25日日，到 1989 年 1 月 7日日</span><span class="sxs-lookup"><span data-stu-id="48c65-376">December 25, 1926 to January 7, 1989</span></span>|  
|<span data-ttu-id="48c65-377">2</span><span class="sxs-lookup"><span data-stu-id="48c65-377">2</span></span>|<span data-ttu-id="48c65-378">大正 (Taisho)</span><span class="sxs-lookup"><span data-stu-id="48c65-378">大正 (Taisho)</span></span>|<span data-ttu-id="48c65-379">大 （T，t）</span><span class="sxs-lookup"><span data-stu-id="48c65-379">大 (T, t)</span></span>|<span data-ttu-id="48c65-380">1912 年 7 月 30日日到 1926 年 12 月 24日，</span><span class="sxs-lookup"><span data-stu-id="48c65-380">July 30, 1912 to December 24, 1926</span></span>|  
|<span data-ttu-id="48c65-381">1</span><span class="sxs-lookup"><span data-stu-id="48c65-381">1</span></span>|<span data-ttu-id="48c65-382">明治 （明治）</span><span class="sxs-lookup"><span data-stu-id="48c65-382">明治 (Meiji)</span></span>|<span data-ttu-id="48c65-383">明 （M、 m）</span><span class="sxs-lookup"><span data-stu-id="48c65-383">明 (M, m)</span></span>|<span data-ttu-id="48c65-384">1868 年 9 月 8日日至 1912 年 7 月 29日日</span><span class="sxs-lookup"><span data-stu-id="48c65-384">September 8, 1868 to July 29, 1912</span></span>|  
  
 <span data-ttu-id="48c65-385">通常，<xref:System.Globalization.JapaneseCalendar>类支持从 9 月 8 年明治 1 (年 9 月 8，1868 公历)，这是值中的<xref:System.Globalization.JapaneseCalendar.MinSupportedDateTime%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="48c65-385">Ordinarily, the <xref:System.Globalization.JapaneseCalendar> class supports dates from September 8 in the year Meiji 1 (September 8, 1868 of the Gregorian calendar), which is the value of the <xref:System.Globalization.JapaneseCalendar.MinSupportedDateTime%2A> property.</span></span> <span data-ttu-id="48c65-386">但是，<xref:System.Globalization.JapaneseCalendar.GetEra%2A>方法成功返回用于表示的日期纪元从 1 月 1 日到 9 月 7 日明治 1 年 (1868 年 1 月 1，通过 1868 年 9 月 7 日公历日历中)。</span><span class="sxs-lookup"><span data-stu-id="48c65-386">However, the <xref:System.Globalization.JapaneseCalendar.GetEra%2A> method successfully returns the era for dates from January 1 through September 7 in the year Meiji 1 (January 1, 1868 through September 7, 1868 in the Gregorian calendar).</span></span> <span data-ttu-id="48c65-387">对于早于 1868 年 1 月 1 日公历日期，该方法将引发<xref:System.ArgumentOutOfRangeException>异常。</span><span class="sxs-lookup"><span data-stu-id="48c65-387">For dates earlier than January 1, 1868 in the Gregorian calendar, the method throws an <xref:System.ArgumentOutOfRangeException> exception.</span></span>  
  
## Examples  
 <span data-ttu-id="48c65-388">下面的示例显示的多个组件的值<xref:System.DateTime>方面日本历。</span><span class="sxs-lookup"><span data-stu-id="48c65-388">The following example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CPP/japanesecalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CS/japanesecalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/VB/japanesecalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="48c65-389">生成的 <see cref="T:System.DateTime" /> 超出了支持的范围。</span><span class="sxs-lookup"><span data-stu-id="48c65-389">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.JapaneseCalendar.Eras" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public override int GetLeapMonth (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLeapMonth(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetLeapMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLeapMonth (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetLeapMonth(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetLeapMonth : int * int -&gt; int" Usage="japaneseCalendar.GetLeapMonth (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="era" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="48c65-390">年份。</span><span class="sxs-lookup"><span data-stu-id="48c65-390">A year.</span></span></param>
        <param name="era"><span data-ttu-id="48c65-391">纪元。</span><span class="sxs-lookup"><span data-stu-id="48c65-391">An era.</span></span></param>
        <summary><span data-ttu-id="48c65-392">计算指定纪元年份的闰月。</span><span class="sxs-lookup"><span data-stu-id="48c65-392">Calculates the leap month for a specified year and era.</span></span></summary>
        <returns><span data-ttu-id="48c65-393">返回值总是为 0，因为 <see cref="T:System.Globalization.JapaneseCalendar" /> 类型不支持闰月的概念。</span><span class="sxs-lookup"><span data-stu-id="48c65-393">The return value is always 0 because the <see cref="T:System.Globalization.JapaneseCalendar" /> type does not support the notion of a leap month.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48c65-394">在日历中支持闰月的概念，特定月后或在一年中的任何月份之后发生的闰月。</span><span class="sxs-lookup"><span data-stu-id="48c65-394">In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year.</span></span> <span data-ttu-id="48c65-395">例如，<xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>方法返回一个数字，介于 1 到 13，该值指示指定日期与关联的月份之间。</span><span class="sxs-lookup"><span data-stu-id="48c65-395">For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns a number between 1 and 13 that indicates the month associated with a specified date.</span></span> <span data-ttu-id="48c65-396">如果，在一年的第八个和第九个月之间存在闰月<xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>方法的第八个月内，闰第 8 个月的 9 和 10 中的第九个月返回 8。</span><span class="sxs-lookup"><span data-stu-id="48c65-396">If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> <span data-ttu-id="48c65-397">或 <paramref name="era" /> 超出了 <see cref="T:System.Globalization.JapaneseCalendar" /> 类型支持的范围。</span><span class="sxs-lookup"><span data-stu-id="48c65-397">or <paramref name="era" /> is outside the range supported by the <see cref="T:System.Globalization.JapaneseCalendar" /> type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonth">
      <MemberSignature Language="C#" Value="public override int GetMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetMonth : DateTime -&gt; int" Usage="japaneseCalendar.GetMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="48c65-398">要读取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="48c65-398">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="48c65-399">返回指定 <see cref="T:System.DateTime" /> 中的月份。</span><span class="sxs-lookup"><span data-stu-id="48c65-399">Returns the month in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="48c65-400">1 到 12 之间的一个整数，用于表示指定的 <see cref="T:System.DateTime" /> 中的月份。</span><span class="sxs-lookup"><span data-stu-id="48c65-400">An integer from 1 to 12 that represents the month in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="48c65-401">下面的示例显示的多个组件的值<xref:System.DateTime>方面日本历。</span><span class="sxs-lookup"><span data-stu-id="48c65-401">The following example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CPP/japanesecalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CS/japanesecalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/VB/japanesecalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Month" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public override int GetMonthsInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonthsInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonthsInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonthsInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetMonthsInYear : int * int -&gt; int" Usage="japaneseCalendar.GetMonthsInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="48c65-402">一个整数，用于表示年份。</span><span class="sxs-lookup"><span data-stu-id="48c65-402">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="48c65-403">一个整数，用于表示纪元。</span><span class="sxs-lookup"><span data-stu-id="48c65-403">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="48c65-404">返回指定纪元中指定年份的月数。</span><span class="sxs-lookup"><span data-stu-id="48c65-404">Returns the number of months in the specified year in the specified era.</span></span></summary>
        <returns><span data-ttu-id="48c65-405">返回值始终为 12。</span><span class="sxs-lookup"><span data-stu-id="48c65-405">The return value is always 12.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="48c65-406">下面的示例调用<xref:System.Globalization.JapaneseCalendar.GetMonthsInYear%2A>第一个五年中每个纪元。</span><span class="sxs-lookup"><span data-stu-id="48c65-406">The following example calls <xref:System.Globalization.JapaneseCalendar.GetMonthsInYear%2A> for the first five years in each era.</span></span> <span data-ttu-id="48c65-407">因为<xref:System.Globalization.JapaneseCalendar>类支持仅 12 个月年，它指示在每个支持的纪元有 12 个月<xref:System.Globalization.JapaneseCalendar>类。</span><span class="sxs-lookup"><span data-stu-id="48c65-407">Because the <xref:System.Globalization.JapaneseCalendar> class supports only 12-month years, it indicates that there are 12 months in each of the eras supported by the <xref:System.Globalization.JapaneseCalendar> class.</span></span> 
  
 [!code-cpp[System.Globalization.JapaneseCalendar.GetMonthsInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.GetMonthsInYear/CPP/japanesecalendar_getmonthsinyear.cpp)]
 [!code-csharp[System.Globalization.JapaneseCalendar.GetMonthsInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.GetMonthsInYear/CS/japanesecalendar_getmonthsinyear.cs)]
 [!code-vb[System.Globalization.JapaneseCalendar.GetMonthsInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.GetMonthsInYear/VB/japanesecalendar_getmonthsinyear.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> <span data-ttu-id="48c65-408">超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="48c65-408">is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="48c65-409">- 或 -</span><span class="sxs-lookup"><span data-stu-id="48c65-409">-or-</span></span> 
 <paramref name="era" /> <span data-ttu-id="48c65-410">超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="48c65-410">is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.JapaneseCalendar.Eras" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDaysInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetWeekOfYear">
      <MemberSignature Language="C#" Value="public override int GetWeekOfYear (DateTime time, System.Globalization.CalendarWeekRule rule, DayOfWeek firstDayOfWeek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetWeekOfYear(valuetype System.DateTime time, valuetype System.Globalization.CalendarWeekRule rule, valuetype System.DayOfWeek firstDayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetWeekOfYear (time As DateTime, rule As CalendarWeekRule, firstDayOfWeek As DayOfWeek) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetWeekOfYear(DateTime time, System::Globalization::CalendarWeekRule rule, DayOfWeek firstDayOfWeek);" />
      <MemberSignature Language="F#" Value="override this.GetWeekOfYear : DateTime * System.Globalization.CalendarWeekRule * DayOfWeek -&gt; int" Usage="japaneseCalendar.GetWeekOfYear (time, rule, firstDayOfWeek)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="rule" Type="System.Globalization.CalendarWeekRule" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="firstDayOfWeek" Type="System.DayOfWeek" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="48c65-411">要读取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="48c65-411">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <param name="rule"><span data-ttu-id="48c65-412"><see cref="T:System.Globalization.CalendarWeekRule" /> 值之一，用于定义一个日历周。</span><span class="sxs-lookup"><span data-stu-id="48c65-412">One of the <see cref="T:System.Globalization.CalendarWeekRule" /> values that defines a calendar week.</span></span></param>
        <param name="firstDayOfWeek"><span data-ttu-id="48c65-413"><see cref="T:System.DayOfWeek" /> 值之一，用于表示一个星期的第一天。</span><span class="sxs-lookup"><span data-stu-id="48c65-413">One of the <see cref="T:System.DayOfWeek" /> values that represents the first day of the week.</span></span></param>
        <summary><span data-ttu-id="48c65-414">返回一年中包含指定 <see cref="T:System.DateTime" /> 值中的日期的那个星期。</span><span class="sxs-lookup"><span data-stu-id="48c65-414">Returns the week of the year that includes the date in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="48c65-415">从 1 开始的一个整数，用于表示一年中包含 <paramref name="time" /> 参数内日期的那个星期。</span><span class="sxs-lookup"><span data-stu-id="48c65-415">A 1-based integer that represents the week of the year that includes the date in the <paramref name="time" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48c65-416">此方法可用于通过设置来确定年份的周数`time`到一年中的最后一天的参数。</span><span class="sxs-lookup"><span data-stu-id="48c65-416">This method can be used to determine the number of weeks in the year by setting the `time` parameter to the last day of the year.</span></span>  
  
 <span data-ttu-id="48c65-417"><xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>属性包含可用于特定于区域性的值`rule`和`firstDayOfWeek`参数。</span><span class="sxs-lookup"><span data-stu-id="48c65-417">The <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property contains culture-specific values that can be used for the `rule` and `firstDayOfWeek` parameters.</span></span>  
  
 <span data-ttu-id="48c65-418"><xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>的属性<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>包含默认<xref:System.DayOfWeek>值，该值表示特定区域性，使用中指定的日历周的第一天<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>属性<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="48c65-418">The <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> contains the default <xref:System.DayOfWeek> value that represents the first day of the week for a specific culture, using the calendar specified in the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="48c65-419"><xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A>的属性<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>包含默认<xref:System.Globalization.CalendarWeekRule>值，该值定义特定区域性，使用日历中指定一个日历周<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>属性<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="48c65-419">The <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> contains the default <xref:System.Globalization.CalendarWeekRule> value that defines a calendar week for a specific culture, using the calendar specified in the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="48c65-420">例如，在<xref:System.Globalization.GregorianCalendar>，则<xref:System.Globalization.Calendar.GetWeekOfYear%2A>的 1 月 1 日的方法返回 1。</span><span class="sxs-lookup"><span data-stu-id="48c65-420">For example, in <xref:System.Globalization.GregorianCalendar>, the <xref:System.Globalization.Calendar.GetWeekOfYear%2A> method for January 1 returns 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48c65-421">下面的代码示例演示如何的结果<xref:System.Globalization.Calendar.GetWeekOfYear%2A>各不相同，具体取决于<xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>和<xref:System.Globalization.CalendarWeekRule>使用的值。</span><span class="sxs-lookup"><span data-stu-id="48c65-421">The following code example shows how the result of <xref:System.Globalization.Calendar.GetWeekOfYear%2A> varies depending on the <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> and <xref:System.Globalization.CalendarWeekRule> values used.</span></span> <span data-ttu-id="48c65-422">如果指定的日期，在一年的最后一天<xref:System.Globalization.Calendar.GetWeekOfYear%2A>返回该年份的周的总数。</span><span class="sxs-lookup"><span data-stu-id="48c65-422">If the specified date is the last day of the year, <xref:System.Globalization.Calendar.GetWeekOfYear%2A> returns the total number of weeks in that year.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CPP/yslin_calendar_getweekofyear.cpp#1)]
 [!code-csharp[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CS/yslin_calendar_getweekofyear.cs#1)]
 [!code-vb[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/VB/yslin_calendar_getweekofyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="time" /> <span data-ttu-id="48c65-423">或 <paramref name="firstDayOfWeek" /> 超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="48c65-423">or <paramref name="firstDayOfWeek" /> is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="48c65-424">- 或 -</span><span class="sxs-lookup"><span data-stu-id="48c65-424">-or-</span></span> 
 <paramref name="rule" /> <span data-ttu-id="48c65-425">不是有效的 <see cref="T:System.Globalization.CalendarWeekRule" /> 值。</span><span class="sxs-lookup"><span data-stu-id="48c65-425">is not a valid <see cref="T:System.Globalization.CalendarWeekRule" /> value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetYear">
      <MemberSignature Language="C#" Value="public override int GetYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.GetYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetYear(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetYear : DateTime -&gt; int" Usage="japaneseCalendar.GetYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="48c65-426">要读取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="48c65-426">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="48c65-427">返回指定 <see cref="T:System.DateTime" /> 中的年份。</span><span class="sxs-lookup"><span data-stu-id="48c65-427">Returns the year in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="48c65-428">一个整数，用于表示指定的 <see cref="T:System.DateTime" /> 中的年份。</span><span class="sxs-lookup"><span data-stu-id="48c65-428">An integer that represents the year in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="48c65-429">下面的代码示例显示的多个组件的值<xref:System.DateTime>方面日本历。</span><span class="sxs-lookup"><span data-stu-id="48c65-429">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CPP/japanesecalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/CS/japanesecalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_AddGet/VB/japanesecalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Year" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public override bool IsLeapDay (int year, int month, int day, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapDay(int32 year, int32 month, int32 day, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapDay (year As Integer, month As Integer, day As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapDay(int year, int month, int day, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapDay : int * int * int * int -&gt; bool" Usage="japaneseCalendar.IsLeapDay (year, month, day, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="48c65-430">一个整数，用于表示年份。</span><span class="sxs-lookup"><span data-stu-id="48c65-430">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="48c65-431">1 到 12 之间的一个整数，用于表示月份。</span><span class="sxs-lookup"><span data-stu-id="48c65-431">An integer from 1 to 12 that represents the month.</span></span></param>
        <param name="day"><span data-ttu-id="48c65-432">1 到 31 之间的一个整数，用于表示天。</span><span class="sxs-lookup"><span data-stu-id="48c65-432">An integer from 1 to 31 that represents the day.</span></span></param>
        <param name="era"><span data-ttu-id="48c65-433">一个整数，用于表示纪元。</span><span class="sxs-lookup"><span data-stu-id="48c65-433">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="48c65-434">确定指定纪元中的指定日期是否为闰日。</span><span class="sxs-lookup"><span data-stu-id="48c65-434">Determines whether the specified date in the specified era is a leap day.</span></span></summary>
        <returns><see langword="true" /><span data-ttu-id="48c65-435">（如果指定的日期是闰日）；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="48c65-435">, if the specified day is a leap day; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48c65-436">日本历闰年公历日历中的相同闰年与相对应。</span><span class="sxs-lookup"><span data-stu-id="48c65-436">Leap years in the Japanese calendar correspond to the same leap years in the Gregorian calendar.</span></span> <span data-ttu-id="48c65-437">用公历日历闰年中，被指由 4 个，但如果是整除 100 除外的整除公历年。</span><span class="sxs-lookup"><span data-stu-id="48c65-437">A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="48c65-438">但是，由 400 是整除的公历年是闰年。</span><span class="sxs-lookup"><span data-stu-id="48c65-438">However, Gregorian years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="48c65-439">常见的一 365 年天，闰年 366 天。</span><span class="sxs-lookup"><span data-stu-id="48c65-439">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="48c65-440">闰日是仅在闰年中发生一天。</span><span class="sxs-lookup"><span data-stu-id="48c65-440">A leap day is a day that occurs only in a leap year.</span></span> <span data-ttu-id="48c65-441">例如，29 日的 Nigatsu （年 2 月） 是唯一的闰日。</span><span class="sxs-lookup"><span data-stu-id="48c65-441">For example, the 29th day of Nigatsu (February) is the only leap day.</span></span>  
  
## Examples

<span data-ttu-id="48c65-442">下面的示例调用<xref:System.Globalization.JapaneseCalendar.IsLeapDay%2A>中每个纪元的五年的第二个月 （年 2 月） 的最后一天。</span><span class="sxs-lookup"><span data-stu-id="48c65-442">The following example calls <xref:System.Globalization.JapaneseCalendar.IsLeapDay%2A> for the last day of the second month (February) for five years in each of the eras.</span></span> <span data-ttu-id="48c65-443">当前纪元中的示例输出是 Reiwa 纪元。</span><span class="sxs-lookup"><span data-stu-id="48c65-443">The current era in the example output is the Reiwa era.</span></span> 
  
 [!code-cpp[System.Globalization.JapaneseCalendar.IsLeapDay#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.IsLeapDay/CPP/japanesecalendar_isleapday.cpp)]
 [!code-csharp[System.Globalization.JapaneseCalendar.IsLeapDay#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.IsLeapDay/CS/japanesecalendar_isleapday.cs)]
 [!code-vb[System.Globalization.JapaneseCalendar.IsLeapDay#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.IsLeapDay/VB/japanesecalendar_isleapday.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> <span data-ttu-id="48c65-444">超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="48c65-444">is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="48c65-445">- 或 -</span><span class="sxs-lookup"><span data-stu-id="48c65-445">-or-</span></span> 
 <paramref name="month" /> <span data-ttu-id="48c65-446">超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="48c65-446">is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="48c65-447">- 或 -</span><span class="sxs-lookup"><span data-stu-id="48c65-447">-or-</span></span> 
 <paramref name="day" /> <span data-ttu-id="48c65-448">超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="48c65-448">is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="48c65-449">- 或 -</span><span class="sxs-lookup"><span data-stu-id="48c65-449">-or-</span></span> 
 <paramref name="era" /> <span data-ttu-id="48c65-450">超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="48c65-450">is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.JapaneseCalendar.Eras" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public override bool IsLeapMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapMonth (year As Integer, month As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapMonth : int * int * int -&gt; bool" Usage="japaneseCalendar.IsLeapMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="48c65-451">一个整数，用于表示年份。</span><span class="sxs-lookup"><span data-stu-id="48c65-451">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="48c65-452">1 到 12 之间的一个整数，用于表示月份。</span><span class="sxs-lookup"><span data-stu-id="48c65-452">An integer from 1 to 12 that represents the month.</span></span></param>
        <param name="era"><span data-ttu-id="48c65-453">一个整数，用于表示纪元。</span><span class="sxs-lookup"><span data-stu-id="48c65-453">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="48c65-454">确定指定纪元中指定年份的指定月份是否为闰月。</span><span class="sxs-lookup"><span data-stu-id="48c65-454">Determines whether the specified month in the specified year in the specified era is a leap month.</span></span></summary>
        <returns><span data-ttu-id="48c65-455">除非被派生类重写，否则此方法始终返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="48c65-455">This method always returns <see langword="false" />, unless overridden by a derived class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48c65-456">日本历闰年公历日历中的相同闰年与相对应。</span><span class="sxs-lookup"><span data-stu-id="48c65-456">Leap years in the Japanese calendar correspond to the same leap years in the Gregorian calendar.</span></span> <span data-ttu-id="48c65-457">用公历日历闰年中，被指由 4 个，但如果是整除 100 除外的整除公历年。</span><span class="sxs-lookup"><span data-stu-id="48c65-457">A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="48c65-458">但是，由 400 是整除的公历年是闰年。</span><span class="sxs-lookup"><span data-stu-id="48c65-458">However, Gregorian years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="48c65-459">常见的一 365 年天，闰年 366 天。</span><span class="sxs-lookup"><span data-stu-id="48c65-459">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="48c65-460">闰月是整月，仅在闰年中发生。</span><span class="sxs-lookup"><span data-stu-id="48c65-460">A leap month is an entire month that occurs only in a leap year.</span></span> <span data-ttu-id="48c65-461">日本日历不具有任何闰月。</span><span class="sxs-lookup"><span data-stu-id="48c65-461">The Japanese calendar does not have any leap months.</span></span>  
  
## Examples  
 <span data-ttu-id="48c65-462">下面的示例调用<xref:System.Globalization.JapaneseCalendar.IsLeapMonth%2A>当前纪元中在第一个五年中的每月。</span><span class="sxs-lookup"><span data-stu-id="48c65-462">The following example calls <xref:System.Globalization.JapaneseCalendar.IsLeapMonth%2A> for all the months in the first five years in the current era.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar.IsLeapMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.IsLeapMonth/CPP/japanesecalendar_isleapmonth.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar.IsLeapMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.IsLeapMonth/CS/japanesecalendar_isleapmonth.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar.IsLeapMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.IsLeapMonth/VB/japanesecalendar_isleapmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> <span data-ttu-id="48c65-463">超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="48c65-463">is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="48c65-464">- 或 -</span><span class="sxs-lookup"><span data-stu-id="48c65-464">-or-</span></span> 
 <paramref name="month" /> <span data-ttu-id="48c65-465">超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="48c65-465">is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="48c65-466">- 或 -</span><span class="sxs-lookup"><span data-stu-id="48c65-466">-or-</span></span> 
 <paramref name="era" /> <span data-ttu-id="48c65-467">超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="48c65-467">is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.JapaneseCalendar.Eras" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public override bool IsLeapYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.IsLeapYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapYear (year As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapYear : int * int -&gt; bool" Usage="japaneseCalendar.IsLeapYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="48c65-468">一个整数，用于表示年份。</span><span class="sxs-lookup"><span data-stu-id="48c65-468">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="48c65-469">一个整数，用于表示纪元。</span><span class="sxs-lookup"><span data-stu-id="48c65-469">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="48c65-470">确定指定纪元中的指定年份是否为闰年。</span><span class="sxs-lookup"><span data-stu-id="48c65-470">Determines whether the specified year in the specified era is a leap year.</span></span></summary>
        <returns><see langword="true" /><span data-ttu-id="48c65-471">（如果指定的年是闰年）；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="48c65-471">, if the specified year is a leap year; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48c65-472">日本历闰年公历日历中的相同闰年与相对应。</span><span class="sxs-lookup"><span data-stu-id="48c65-472">Leap years in the Japanese calendar correspond to the same leap years in the Gregorian calendar.</span></span> <span data-ttu-id="48c65-473">用公历日历闰年中，被指由 4 个，但如果是整除 100 除外的整除公历年。</span><span class="sxs-lookup"><span data-stu-id="48c65-473">A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="48c65-474">但是，由 400 是整除的公历年是闰年。</span><span class="sxs-lookup"><span data-stu-id="48c65-474">However, Gregorian years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="48c65-475">常见的一 365 年天，闰年 366 天。</span><span class="sxs-lookup"><span data-stu-id="48c65-475">A common year has 365 days and a leap year has 366 days.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48c65-476">下面的示例调用<xref:System.Globalization.JapaneseCalendar.IsLeapYear%2A>五年中每个纪元。</span><span class="sxs-lookup"><span data-stu-id="48c65-476">The following example calls <xref:System.Globalization.JapaneseCalendar.IsLeapYear%2A> for five years in each of the eras.</span></span> <span data-ttu-id="48c65-477">当前纪元中的示例输出是 Reiwa 纪元。</span><span class="sxs-lookup"><span data-stu-id="48c65-477">The current era in the example output is the Reiwa era.</span></span> 
  
 [!code-cpp[System.Globalization.JapaneseCalendar.IsLeapYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.IsLeapYear/CPP/japanesecalendar_isleapyear.cpp)]
 [!code-csharp[System.Globalization.JapaneseCalendar.IsLeapYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.IsLeapYear/CS/japanesecalendar_isleapyear.cs)]
 [!code-vb[System.Globalization.JapaneseCalendar.IsLeapYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar.IsLeapYear/VB/japanesecalendar_isleapyear.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> <span data-ttu-id="48c65-478">超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="48c65-478">is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="48c65-479">- 或 -</span><span class="sxs-lookup"><span data-stu-id="48c65-479">-or-</span></span> 
 <paramref name="era" /> <span data-ttu-id="48c65-480">超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="48c65-480">is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.JapaneseCalendar.Eras" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MaxSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MaxSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JapaneseCalendar.MaxSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MaxSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxSupportedDateTime : DateTime" Usage="System.Globalization.JapaneseCalendar.MaxSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48c65-481">获取当前 <see cref="T:System.Globalization.JapaneseCalendar" /> 对象支持的最晚日期和时间。</span><span class="sxs-lookup"><span data-stu-id="48c65-481">Gets the latest date and time supported by the current <see cref="T:System.Globalization.JapaneseCalendar" /> object.</span></span></summary>
        <value><span data-ttu-id="48c65-482">最晚日期和时间受<see cref="T:System.Globalization.JapaneseCalendar" />类型，这相当于一最后时刻到来年 12 月 31 日结束的公元 9999 年</span><span class="sxs-lookup"><span data-stu-id="48c65-482">The latest date and time supported by the <see cref="T:System.Globalization.JapaneseCalendar" /> type, which is equivalent to the last moment of December 31, 9999 C.E.</span></span> <span data-ttu-id="48c65-483">在公历。</span><span class="sxs-lookup"><span data-stu-id="48c65-483">in the Gregorian calendar.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="48c65-484">下面的代码示例获取的最小值和日历的最大值。</span><span class="sxs-lookup"><span data-stu-id="48c65-484">The following code example gets the minimum value and the maximum value of the calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_MinMax/CPP/japanesecalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_MinMax/CS/japanesecalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_MinMax/VB/japanesecalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MinSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JapaneseCalendar.MinSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MinSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MinSupportedDateTime : DateTime" Usage="System.Globalization.JapaneseCalendar.MinSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48c65-485">获取当前 <see cref="T:System.Globalization.JapaneseCalendar" /> 对象支持的最早日期和时间。</span><span class="sxs-lookup"><span data-stu-id="48c65-485">Gets the earliest date and time supported by the current <see cref="T:System.Globalization.JapaneseCalendar" /> object.</span></span></summary>
        <value><span data-ttu-id="48c65-486">最早日期和时间受<see cref="T:System.Globalization.JapaneseCalendar" />类型，这相当于公历公元 1868 年 9 月 8 日的那一刻</span><span class="sxs-lookup"><span data-stu-id="48c65-486">The earliest date and time supported by the <see cref="T:System.Globalization.JapaneseCalendar" /> type, which is equivalent to the first moment of September 8, 1868 C.E.</span></span> <span data-ttu-id="48c65-487">在公历。</span><span class="sxs-lookup"><span data-stu-id="48c65-487">in the Gregorian calendar.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48c65-488">支持的最早日期<xref:System.Globalization.JapaneseCalendar>类是年 9 月 8，为公元 1868，明治纪元在第一年。</span><span class="sxs-lookup"><span data-stu-id="48c65-488">The earliest date supported by the <xref:System.Globalization.JapaneseCalendar> class is September 8, 1868 C.E., in the first year of the Meiji era.</span></span> <span data-ttu-id="48c65-489">通常，日期和时间使用的操作<xref:System.Globalization.JapaneseCalendar>类引发<xref:System.ArgumentOutOfRangeException>此日期之前的日期的异常。</span><span class="sxs-lookup"><span data-stu-id="48c65-489">Ordinarily, date and time operations that use the <xref:System.Globalization.JapaneseCalendar> class throw an <xref:System.ArgumentOutOfRangeException> exception for dates before this date.</span></span> <span data-ttu-id="48c65-490">但是，某些成员，如<xref:System.Globalization.JapaneseCalendar.GetEra%2A>方法中，年明治 1 支持从 1868 年 1 月 1 日至 9 月 7 日的日期。</span><span class="sxs-lookup"><span data-stu-id="48c65-490">However, some members, such as the <xref:System.Globalization.JapaneseCalendar.GetEra%2A> method, support dates from January 1, 1868 through September 7 in the year Meiji 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="48c65-491">下面的示例获取了日历支持的最早和最新日期。</span><span class="sxs-lookup"><span data-stu-id="48c65-491">The following example gets the earliest and latest dates supported by the calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JapaneseCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_MinMax/CPP/japanesecalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.JapaneseCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_MinMax/CS/japanesecalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.JapaneseCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JapaneseCalendar_MinMax/VB/japanesecalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToDateTime (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="F#" Value="override this.ToDateTime : int * int * int * int * int * int * int * int -&gt; DateTime" Usage="japaneseCalendar.ToDateTime (year, month, day, hour, minute, second, millisecond, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="48c65-492">一个整数，用于表示年份。</span><span class="sxs-lookup"><span data-stu-id="48c65-492">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="48c65-493">1 到 12 之间的一个整数，用于表示月份。</span><span class="sxs-lookup"><span data-stu-id="48c65-493">An integer from 1 to 12 that represents the month.</span></span></param>
        <param name="day"><span data-ttu-id="48c65-494">1 到 31 之间的一个整数，用于表示天。</span><span class="sxs-lookup"><span data-stu-id="48c65-494">An integer from 1 to 31 that represents the day.</span></span></param>
        <param name="hour"><span data-ttu-id="48c65-495">0 到 23 之间的一个整数，用于表示小时。</span><span class="sxs-lookup"><span data-stu-id="48c65-495">An integer from 0 to 23 that represents the hour.</span></span></param>
        <param name="minute"><span data-ttu-id="48c65-496">0 到 59 之间的一个整数，用于表示分钟。</span><span class="sxs-lookup"><span data-stu-id="48c65-496">An integer from 0 to 59 that represents the minute.</span></span></param>
        <param name="second"><span data-ttu-id="48c65-497">0 到 59 之间的一个整数，用于表示秒。</span><span class="sxs-lookup"><span data-stu-id="48c65-497">An integer from 0 to 59 that represents the second.</span></span></param>
        <param name="millisecond"><span data-ttu-id="48c65-498">0 到 999 之间的一个整数，用于表示毫秒。</span><span class="sxs-lookup"><span data-stu-id="48c65-498">An integer from 0 to 999 that represents the millisecond.</span></span></param>
        <param name="era"><span data-ttu-id="48c65-499">一个整数，用于表示纪元。</span><span class="sxs-lookup"><span data-stu-id="48c65-499">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="48c65-500">返回设置为指定纪元中指定日期和时间的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="48c65-500">Returns a <see cref="T:System.DateTime" /> that is set to the specified date and time in the specified era.</span></span></summary>
        <returns><span data-ttu-id="48c65-501">设置为当前纪元中指定日期和时间的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="48c65-501">The <see cref="T:System.DateTime" /> that is set to the specified date and time in the current era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48c65-502"><xref:System.Globalization.JapaneseCalendar.ToDateTime%2A>方法很有用，因为它可以将当前日历中的任何日期转换为公历日期。</span><span class="sxs-lookup"><span data-stu-id="48c65-502">The <xref:System.Globalization.JapaneseCalendar.ToDateTime%2A> method is useful because it can convert any date in the current calendar to a Gregorian calendar date.</span></span> <span data-ttu-id="48c65-503">公历日期，随后可用，例如，来比较不同日历中的日期或特定日历中创建等效的日期。</span><span class="sxs-lookup"><span data-stu-id="48c65-503">The Gregorian date can subsequently be used, for example, to compare dates in different calendars or create an equivalent date in a particular calendar.</span></span>  

<span data-ttu-id="48c65-504">因为<xref:System.Globalization.JapaneseCalendar>支持多个纪元基于统治的皇帝，应始终调用此方法，并显式指定纪元以避免意外的日期并清除代码的意图。</span><span class="sxs-lookup"><span data-stu-id="48c65-504">Because the <xref:System.Globalization.JapaneseCalendar> supports multiple eras based on the reign of the emperor, you should always call this method and explicitly specify an era to avoid an unintended date and to make the intent of your code clear.</span></span> <span data-ttu-id="48c65-505">该示例演示如何实例化始终处于当前纪元的日期和一个属于指定的纪元。</span><span class="sxs-lookup"><span data-stu-id="48c65-505">The example shows how to instantiate a date that is always in the current era and one that belongs to a specified era.</span></span>

## Examples

<span data-ttu-id="48c65-506">下面的示例实例化两个日期。</span><span class="sxs-lookup"><span data-stu-id="48c65-506">The following example instantiates two dates.</span></span> <span data-ttu-id="48c65-507">第一个始终是当前纪元中的第二个年份的第一天，而第二个标识 Taisho 纪元中的特定一天。</span><span class="sxs-lookup"><span data-stu-id="48c65-507">The first is always the first day of the second year in the current era, while the second identifies a specific day in the Taisho era.</span></span> <span data-ttu-id="48c65-508">该示例的输出是与为当前纪元的平成纪元产生的。</span><span class="sxs-lookup"><span data-stu-id="48c65-508">The output from the example was produced with the Heisei era as the current era.</span></span>

[!code-csharp[Specifying the era](~/samples/snippets/csharp/api/system.globalization/japanesecalendar/todatetime/program.cs)]
[!code-vb[Specifying the era](~/samples/snippets/visualbasic/api/system.globalization/japanesecalendar/todatetime/Program.vb)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> <span data-ttu-id="48c65-509">超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="48c65-509">is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="48c65-510">- 或 -</span><span class="sxs-lookup"><span data-stu-id="48c65-510">-or-</span></span> 
 <paramref name="month" /> <span data-ttu-id="48c65-511">超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="48c65-511">is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="48c65-512">- 或 -</span><span class="sxs-lookup"><span data-stu-id="48c65-512">-or-</span></span> 
 <paramref name="day" /> <span data-ttu-id="48c65-513">超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="48c65-513">is outside the range supported by the calendar.</span></span>  
  
<span data-ttu-id="48c65-514">- 或 -</span><span class="sxs-lookup"><span data-stu-id="48c65-514">-or-</span></span> 
 <paramref name="hour" /> <span data-ttu-id="48c65-515">小于 0 或大于 23。</span><span class="sxs-lookup"><span data-stu-id="48c65-515">is less than zero or greater than 23.</span></span>  
  
<span data-ttu-id="48c65-516">- 或 -</span><span class="sxs-lookup"><span data-stu-id="48c65-516">-or-</span></span> 
 <paramref name="minute" /> <span data-ttu-id="48c65-517">小于 0 或大于 59。</span><span class="sxs-lookup"><span data-stu-id="48c65-517">is less than zero or greater than 59.</span></span>  
  
<span data-ttu-id="48c65-518">- 或 -</span><span class="sxs-lookup"><span data-stu-id="48c65-518">-or-</span></span> 
 <paramref name="second" /> <span data-ttu-id="48c65-519">小于 0 或大于 59。</span><span class="sxs-lookup"><span data-stu-id="48c65-519">is less than zero or greater than 59.</span></span>  
  
<span data-ttu-id="48c65-520">- 或 -</span><span class="sxs-lookup"><span data-stu-id="48c65-520">-or-</span></span> 
 <paramref name="millisecond" /> <span data-ttu-id="48c65-521">小于 0 或大于 999。</span><span class="sxs-lookup"><span data-stu-id="48c65-521">is less than zero or greater than 999.</span></span>  
  
<span data-ttu-id="48c65-522">- 或 -</span><span class="sxs-lookup"><span data-stu-id="48c65-522">-or-</span></span> 
 <paramref name="era" /> <span data-ttu-id="48c65-523">超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="48c65-523">is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.JapaneseCalendar.Eras" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JapaneseCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToFourDigitYear">
      <MemberSignature Language="C#" Value="public override int ToFourDigitYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ToFourDigitYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JapaneseCalendar.ToFourDigitYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToFourDigitYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ToFourDigitYear(int year);" />
      <MemberSignature Language="F#" Value="override this.ToFourDigitYear : int -&gt; int" Usage="japaneseCalendar.ToFourDigitYear year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="48c65-524">一个表示要转换的年份的整数（通常为两位数）。</span><span class="sxs-lookup"><span data-stu-id="48c65-524">An integer (usually two digits) that represents the year to convert.</span></span></param>
        <summary><span data-ttu-id="48c65-525">使用 <see cref="P:System.Globalization.JapaneseCalendar.TwoDigitYearMax" /> 属性将指定的年份转换为四位数年份，以确定相应的纪元。</span><span class="sxs-lookup"><span data-stu-id="48c65-525">Converts the specified year to a four-digit year by using the <see cref="P:System.Globalization.JapaneseCalendar.TwoDigitYearMax" /> property to determine the appropriate century.</span></span></summary>
        <returns><span data-ttu-id="48c65-526">包含 <paramref name="year" /> 的四位数表示形式的整数。</span><span class="sxs-lookup"><span data-stu-id="48c65-526">An integer that contains the four-digit representation of <paramref name="year" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48c65-527">此方法实现 <xref:System.Globalization.Calendar.ToFourDigitYear%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="48c65-527">This method implements <xref:System.Globalization.Calendar.ToFourDigitYear%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="48c65-528">日语日历中的每年通常是长时间不超过四位数字，因为此实现始终返回的值`year`参数。</span><span class="sxs-lookup"><span data-stu-id="48c65-528">Because the year in the Japanese calendar is typically less than four digits long, this implementation always returns the value of the `year` parameter.</span></span>  
  
 <xref:System.Globalization.JapaneseCalendar.ToFourDigitYear%2A> <span data-ttu-id="48c65-529">支持两位数年份或四位数年份。</span><span class="sxs-lookup"><span data-stu-id="48c65-529">supports either a two-digit year or a four-digit year.</span></span> <span data-ttu-id="48c65-530">但是，有效的年是通常表示为两位数字 (小于 100)。</span><span class="sxs-lookup"><span data-stu-id="48c65-530">However, a valid year is generally represented as two digits (less than 100).</span></span> <span data-ttu-id="48c65-531">传递的两位数的年份值会导致方法将值转换为四位数字值根据<xref:System.Globalization.JapaneseCalendar.TwoDigitYearMax%2A>值，该值表示相应的纪元。</span><span class="sxs-lookup"><span data-stu-id="48c65-531">Passing a two-digit year value causes the method to convert the value to a four-digit value according to the <xref:System.Globalization.JapaneseCalendar.TwoDigitYearMax%2A> value representing the appropriate century.</span></span> <span data-ttu-id="48c65-532">如果应用程序提供了四位数字的值或零或负值，它提供<xref:System.Globalization.JapaneseCalendar.ToFourDigitYear%2A>将引发异常。</span><span class="sxs-lookup"><span data-stu-id="48c65-532">If the application supplies a four-digit value, or if it supplies zero or a negative value, <xref:System.Globalization.JapaneseCalendar.ToFourDigitYear%2A> throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> <span data-ttu-id="48c65-533">超出了日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="48c65-533">is outside the range supported by the calendar.</span></span></exception>
        <altmember cref="P:System.Globalization.JapaneseCalendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="TwoDigitYearMax">
      <MemberSignature Language="C#" Value="public override int TwoDigitYearMax { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TwoDigitYearMax" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JapaneseCalendar.TwoDigitYearMax" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TwoDigitYearMax As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TwoDigitYearMax { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TwoDigitYearMax : int with get, set" Usage="System.Globalization.JapaneseCalendar.TwoDigitYearMax" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48c65-534">获取或设置可以用两位数年份表示的 100 年范围内的最后一年。</span><span class="sxs-lookup"><span data-stu-id="48c65-534">Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</span></span></summary>
        <value><span data-ttu-id="48c65-535">可以用两位数年份表示的 100 年范围内的最后一年。</span><span class="sxs-lookup"><span data-stu-id="48c65-535">The last year of a 100-year range that can be represented by a 2-digit year.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48c65-536">此属性实现 <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="48c65-536">This property implements <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="48c65-537">此实现日语日历中的每年通常是长时间不超过四位数字，因为默认情况下返回 99，并且不会影响返回值的<xref:System.Globalization.JapaneseCalendar.ToFourDigitYear%2A>。</span><span class="sxs-lookup"><span data-stu-id="48c65-537">Because the year in the Japanese calendar is typically less than four digits long, this implementation returns 99 by default and does not affect the return value of <xref:System.Globalization.JapaneseCalendar.ToFourDigitYear%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="48c65-538">为设置操作指定的值小于 99。</span><span class="sxs-lookup"><span data-stu-id="48c65-538">The value specified in a set operation is less than 99.</span></span>  
  
<span data-ttu-id="48c65-539">- 或 -</span><span class="sxs-lookup"><span data-stu-id="48c65-539">-or-</span></span> 
<span data-ttu-id="48c65-540">为 Set 操作指定的值大于 8011（或 <see langword="MaxSupportedDateTime.Year" />）。</span><span class="sxs-lookup"><span data-stu-id="48c65-540">The value specified in a set operation is greater than 8011 (or <see langword="MaxSupportedDateTime.Year" />).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="48c65-541">在设置操作中，当前实例是只读的。</span><span class="sxs-lookup"><span data-stu-id="48c65-541">In a set operation, the current instance is read-only.</span></span></exception>
        <altmember cref="M:System.Globalization.JapaneseCalendar.ToFourDigitYear(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>