<Type Name="SortVersion" FullName="System.Globalization.SortVersion">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fa9da51a20c2086ec49656850e4f9dac5b8e517b" />
    <Meta Name="ms.sourcegitcommit" Value="d0bb31ec8354fa58c62c2a646057eec11d3e2150" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/17/2018" />
    <Meta Name="ms.locfileid" Value="36562558" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SortVersion : IEquatable&lt;System.Globalization.SortVersion&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SortVersion extends System.Object implements class System.IEquatable`1&lt;class System.Globalization.SortVersion&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.SortVersion" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SortVersion&#xA;Implements IEquatable(Of SortVersion)" />
  <TypeSignature Language="C++ CLI" Value="public ref class SortVersion sealed : IEquatable&lt;System::Globalization::SortVersion ^&gt;" />
  <TypeSignature Language="F#" Value="type SortVersion = class&#xA;    interface IEquatable&lt;SortVersion&gt;" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Globalization.SortVersion&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>提供用于比较和排序字符串的 Unicode 版本的相关信息。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 从[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]通过[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]、 每个版本的.net Framework 具有包含包含排序权重的表和数据在字符串标准化的基于 Unicode 的特定版本。 在[!INCLUDE[net_v45](~/includes/net-v45-md.md)]，这些表是否存在取决于操作系统：  
  
-   在[!INCLUDE[win7](~/includes/win7-md.md)]和以前版本的 Windows 操作系统，表将继续用于比较和排序字符串。  
  
-   在[!INCLUDE[win8](~/includes/win8-md.md)]，.NET Framework 委托的字符串比较和排序操作对操作系统。  
  
 因此，字符串比较的结果可以依赖.NET Framework 版本中，不仅在操作系统版本上，如下表所示。 请注意，受支持的 Unicode 版本的列表仅适用于字符比较和排序；不适用于 Unicode 字符串按类别分类。  
  
|.NET Framework 版本|操作系统|Unicode 版本|  
|----------------------------|----------------------|---------------------|  
|[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]|所有操作系统|Unicode 5.0|  
|[!INCLUDE[net_v45](~/includes/net-v45-md.md)] 和更高版本的.NET Framework|[!INCLUDE[win7](~/includes/win7-md.md)]|Unicode 5.0|  
|[!INCLUDE[net_v45](~/includes/net-v45-md.md)] 和更高版本的.NET Framework|[!INCLUDE[win8](~/includes/win8-md.md)] 和更高版本的 Windows 操作系统版本|Unicode 6.0|  
  
 在[!INCLUDE[win8](~/includes/win8-md.md)]，这是因为的 Unicode 版本的字符串比较中使用和排序取决于操作系统的版本，即使对于.NET Framework 的特定版本运行的应用程序可能不同的字符串比较的结果。  
  
 <xref:System.Globalization.SortVersion>类提供了有关使用.NET Framework 进行字符串比较和排序的 Unicode 版本的信息。 它使开发人员编写应用程序，可以检测并已成功处理的用于比较和排序的应用程序的字符串的 Unicode 版本中的更改。  
  
 可以实例化<xref:System.Globalization.SortVersion>两种方式的对象：  
  
-   通过调用<xref:System.Globalization.SortVersion.%23ctor%2A>构造函数中，它会实例化一个新<xref:System.Globalization.SortVersion>对象基于版本编号和排序 id。 重新创建时，此构造函数是最有用<xref:System.Globalization.SortVersion>中保存的数据对象。  
  
-   通过检索的值<xref:System.Globalization.CompareInfo.Version%2A?displayProperty=nameWithType>属性。 此属性提供有关使用.NET Framework 应用程序正在其运行的 Unicode 版本的信息。  
  
 <xref:System.Globalization.SortVersion>类具有两个属性<xref:System.Globalization.SortVersion.FullVersion%2A>和<xref:System.Globalization.SortVersion.SortId%2A>，这表示 Unicode 版本和用于字符串比较的特定区域性。 <xref:System.Globalization.SortVersion.FullVersion%2A>属性是一个任意的数字值，反映了用于字符串比较的 Unicode 版本和<xref:System.Globalization.SortVersion.SortId%2A>属性是一个任意<xref:System.Guid>反映其约定用于字符串比较的区域性。 仅当比较两个时，这两个属性的值很重要<xref:System.Globalization.SortVersion>通过使用对象<xref:System.Globalization.SortVersion.Equals%2A>方法，<xref:System.Globalization.SortVersion.op_Equality%2A>运算符，或<xref:System.Globalization.SortVersion.op_Inequality%2A>运算符。  
  
 通常使用<xref:System.Globalization.SortVersion>对象时保存或检索某种形式的区分区域性的排序字符串数据，如索引或文本字符串本身。 这需要执行以下步骤：  
  
1.  保存的有序的字符串数据时，<xref:System.Globalization.SortVersion.FullVersion%2A>和<xref:System.Globalization.SortVersion.SortId%2A>还会保存属性值。  
  
2.  当检索有序的字符串数据时，你可以重新创建<xref:System.Globalization.SortVersion>对象用于通过调用排序字符串<xref:System.Globalization.SortVersion.%23ctor%2A>构造函数。  
  
3.  此新实例化<xref:System.Globalization.SortVersion>对象进行比较<xref:System.Globalization.SortVersion>反映其约定使用字符串数据进行排序的区域性的对象。  
  
4.  如果两个<xref:System.Globalization.SortVersion>对象是否不相等，必须重新排序的字符串数据。  
  
 说明如示例所示。  
  
   
  
## Examples  
 下面的示例包含一部分中使用的应用程序的源代码<xref:System.Globalization.SortVersion>类，以确保的固有名称<xref:System.Globalization.RegionInfo>对象进行正确排序的当前系统和当前区域性。 它使用<xref:System.IO.BinaryReader>并<xref:System.IO.BinaryWriter>对象来存储和检索排序将数据从数据文件，名为`Regions.dat`而不是检索和每次运行该应用程序时对数据进行排序。 该示例首先检查以确定是否存在数据文件。 如果不是，它将创建数据和设置`reindex`标志以指示数据必须可重新排列和重新保存。 否则为它检索数据，并比较了已保存<xref:System.Globalization.SortVersion>对象与<xref:System.Globalization.SortVersion>当前系统上的当前区域性的对象。 如果它们不相等，或者`reindex`以前已设置标志，它会采用<xref:System.Globalization.RegionInfo>数据。  
  
 [!code-csharp[System.Globalization.SortVersion#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.sortversion/cs/example1.cs#1)]
 [!code-vb[System.Globalization.SortVersion#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.sortversion/vb/example1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Globalization.CompareInfo.Version" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortVersion (int fullVersion, Guid sortId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 fullVersion, valuetype System.Guid sortId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.#ctor(System.Int32,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fullVersion As Integer, sortId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortVersion(int fullVersion, Guid sortId);" />
      <MemberSignature Language="F#" Value="new System.Globalization.SortVersion : int * Guid -&gt; System.Globalization.SortVersion" Usage="new System.Globalization.SortVersion (fullVersion, sortId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fullVersion" Type="System.Int32" />
        <Parameter Name="sortId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="fullVersion">版本号。</param>
        <param name="sortId">排序 ID。</param>
        <summary>创建 <see cref="T:System.Globalization.SortVersion" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数实例化<xref:System.Globalization.SortVersion>对象使用指定的版本和排序 id。 `fullVersion`自变量分配给<xref:System.Globalization.SortVersion.FullVersion%2A>属性。 `sortId`自变量分配给<xref:System.Globalization.SortVersion.SortId%2A>属性。  
  
 此构造函数可用于重新创建<xref:System.Globalization.SortVersion>对象从已序列化或保存的数据。 此版本然后可以与当前的应用程序版本，以确定是否可用于显示和排序应用程序的字符串的 Unicode 版本的比较。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CompareInfo.Version" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>返回一个值，该值指示两个 <see cref="T:System.Globalization.SortVersion" /> 实例是否相等。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Globalization.SortVersion other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Globalization.SortVersion other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As SortVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Globalization::SortVersion ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Globalization.SortVersion -&gt; bool" Usage="sortVersion.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Globalization.SortVersion" />
      </Parameters>
      <Docs>
        <param name="other">与该实例进行比较的对象。</param>
        <summary>返回一个值，该值指示此 <see cref="T:System.Globalization.SortVersion" /> 实例是否与指定的 <see cref="T:System.Globalization.SortVersion" /> 对象相等。</summary>
        <returns>如果 <paramref name="other" /> 与此实例的版本相同，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 两个<xref:System.Globalization.SortVersion>对象相等，如果他们<xref:System.Globalization.SortVersion.FullVersion%2A>和<xref:System.Globalization.SortVersion.SortId%2A>属性相等。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="sortVersion.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">与此实例进行比较的对象。</param>
        <summary>返回一个值，该值指示此 <see cref="T:System.Globalization.SortVersion" /> 实例是否与指定的对象相等。</summary>
        <returns>如果 <paramref name="obj" /> 是表示与此实例版本相同的 <see cref="T:System.Globalization.SortVersion" /> 对象，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 两个<xref:System.Globalization.SortVersion>对象相等，如果他们<xref:System.Globalization.SortVersion.FullVersion%2A>和<xref:System.Globalization.SortVersion.SortId%2A>属性相等。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      </Docs>
    </Member>
    <Member MemberName="FullVersion">
      <MemberSignature Language="C#" Value="public int FullVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FullVersion" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.SortVersion.FullVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FullVersion { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FullVersion : int" Usage="System.Globalization.SortVersion.FullVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Globalization.SortVersion" /> 对象的全版本号。</summary>
        <value>此 <see cref="T:System.Globalization.SortVersion" /> 对象的版本号。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Globalization.SortVersion.FullVersion%2A>属性会反映出用于规范化和比较字符串的 Unicode 版本。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="sortVersion.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回此实例的哈希代码。</summary>
        <returns>32 位有符号整数哈希代码。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Globalization.SortVersion left, System.Globalization.SortVersion right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Globalization.SortVersion left, class System.Globalization.SortVersion right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As SortVersion, right As SortVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Globalization::SortVersion ^ left, System::Globalization::SortVersion ^ right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Globalization.SortVersion * System.Globalization.SortVersion -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Globalization.SortVersion" />
        <Parameter Name="right" Type="System.Globalization.SortVersion" />
      </Parameters>
      <Docs>
        <param name="left">要比较的第一个实例。</param>
        <param name="right">要比较的第二个实例。</param>
        <summary>指示两个 <see cref="T:System.Globalization.SortVersion" /> 实例是否相等。</summary>
        <returns>如果 <paramref name="left" /> 和 <paramref name="right" /> 的值相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 两个<xref:System.Globalization.SortVersion>对象是否相等，如果两者均`null`，或者，如果其<xref:System.Globalization.SortVersion.FullVersion%2A>和<xref:System.Globalization.SortVersion.SortId%2A>属性相等。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)" />
        <altmember cref="M:System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Globalization.SortVersion left, System.Globalization.SortVersion right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Globalization.SortVersion left, class System.Globalization.SortVersion right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As SortVersion, right As SortVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Globalization::SortVersion ^ left, System::Globalization::SortVersion ^ right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Globalization.SortVersion * System.Globalization.SortVersion -&gt; bool" Usage="System.Globalization.SortVersion.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Globalization.SortVersion" />
        <Parameter Name="right" Type="System.Globalization.SortVersion" />
      </Parameters>
      <Docs>
        <param name="left">要比较的第一个实例。</param>
        <param name="right">要比较的第二个实例。</param>
        <summary>指示两个 <see cref="T:System.Globalization.SortVersion" /> 实例是否不相等。</summary>
        <returns>如果 <paramref name="left" /> 和 <paramref name="right" /> 的值不相等，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 两个<xref:System.Globalization.SortVersion>对象是否不相等，如果其中一个是`null`和另一个则没有，或如果它们具有不同<xref:System.Globalization.SortVersion.FullVersion%2A>或<xref:System.Globalization.SortVersion.SortId%2A>属性值。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)" />
        <altmember cref="M:System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)" />
      </Docs>
    </Member>
    <Member MemberName="SortId">
      <MemberSignature Language="C#" Value="public Guid SortId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid SortId" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.SortVersion.SortId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid SortId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.SortId : Guid" Usage="System.Globalization.SortVersion.SortId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此 <see cref="T:System.Globalization.SortVersion" /> 对象的全局唯一标识符。</summary>
        <value>此 <see cref="T:System.Globalization.SortVersion" /> 对象的全局唯一标识符。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Globalization.SortVersion.SortId%2A>属性反映其约定影响字符串的比较和排序的区域性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>