<Type Name="HijriCalendar" FullName="System.Globalization.HijriCalendar">
  <Metadata><Meta Name="ms.openlocfilehash" Value="80ece07e9cd54c5f4b42b133220d2f3ee9a49413" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57943411" /></Metadata><TypeSignature Language="C#" Value="public class HijriCalendar : System.Globalization.Calendar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit HijriCalendar extends System.Globalization.Calendar" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.HijriCalendar" />
  <TypeSignature Language="VB.NET" Value="Public Class HijriCalendar&#xA;Inherits Calendar" />
  <TypeSignature Language="C++ CLI" Value="public ref class HijriCalendar : System::Globalization::Calendar" />
  <TypeSignature Language="F#" Value="type HijriCalendar = class&#xA;    inherit Calendar" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Calendars</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Globalization.Calendar</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="30f90-101">表示回历。</span><span class="sxs-lookup"><span data-stu-id="30f90-101">Represents the Hijri calendar.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f90-102">在伊斯兰日历识别一个时代：纪元</span><span class="sxs-lookup"><span data-stu-id="30f90-102">The Hijri calendar recognizes one era: A.H.</span></span> <span data-ttu-id="30f90-103">(拉丁文"Anno Hegirae"，这意味着"year 的迁移后，"迁移的 Muhammad (PBUH) 从麦加迁引用)。</span><span class="sxs-lookup"><span data-stu-id="30f90-103">(Latin "Anno Hegirae", which means "the year of the migration," in reference to the migration of Muhammad (PBUH) from Mecca).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="30f90-104">有关使用信息<xref:System.Globalization.HijriCalendar>类和其他日历.NET Framework 中的类，请参阅[使用日历](~/docs/standard/datetime/working-with-calendars.md)。</span><span class="sxs-lookup"><span data-stu-id="30f90-104">For information about using the <xref:System.Globalization.HijriCalendar> class and the other calendar classes in the .NET Framework, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md).</span></span>  
  
 <span data-ttu-id="30f90-105">在结尾的年份，则可被 30、 第二次、 5、 7、 10%、 13、 16、 18、 21、 24 每隔 30 年周期，26 和 29 年份是闰年。</span><span class="sxs-lookup"><span data-stu-id="30f90-105">In every 30-year cycle that ends with a year that is evenly divisible by 30, the 2nd, 5th, 7th, 10th, 13th, 16th, 18th, 21st, 24th, 26th, and 29th years are leap years.</span></span> <span data-ttu-id="30f90-106">常见年有 354 天和闰年有 355 天。</span><span class="sxs-lookup"><span data-stu-id="30f90-106">A common year has 354 days and a leap year has 355 days.</span></span>  
  
 <span data-ttu-id="30f90-107">在伊斯兰日历具有 12 个月 29 到 30 天内使用：</span><span class="sxs-lookup"><span data-stu-id="30f90-107">The Hijri calendar has 12 months with 29 to 30 days each:</span></span>  
  
|<span data-ttu-id="30f90-108">GetMonth 值</span><span class="sxs-lookup"><span data-stu-id="30f90-108">GetMonth value</span></span>|<span data-ttu-id="30f90-109">月份</span><span class="sxs-lookup"><span data-stu-id="30f90-109">Month</span></span>|<span data-ttu-id="30f90-110">在平年中的天</span><span class="sxs-lookup"><span data-stu-id="30f90-110">Days in common years</span></span>|<span data-ttu-id="30f90-111">中的日闰年</span><span class="sxs-lookup"><span data-stu-id="30f90-111">Days in leap years</span></span>|  
|--------------------|-----------|--------------------------|------------------------|  
|<span data-ttu-id="30f90-112">1</span><span class="sxs-lookup"><span data-stu-id="30f90-112">1</span></span>|<span data-ttu-id="30f90-113">محرم (Muharram)</span><span class="sxs-lookup"><span data-stu-id="30f90-113">محرم (Muharram)</span></span>|<span data-ttu-id="30f90-114">30</span><span class="sxs-lookup"><span data-stu-id="30f90-114">30</span></span>|<span data-ttu-id="30f90-115">30</span><span class="sxs-lookup"><span data-stu-id="30f90-115">30</span></span>|  
|<span data-ttu-id="30f90-116">2</span><span class="sxs-lookup"><span data-stu-id="30f90-116">2</span></span>|<span data-ttu-id="30f90-117">صفر (Safar)</span><span class="sxs-lookup"><span data-stu-id="30f90-117">صفر (Safar)</span></span>|<span data-ttu-id="30f90-118">29</span><span class="sxs-lookup"><span data-stu-id="30f90-118">29</span></span>|<span data-ttu-id="30f90-119">29</span><span class="sxs-lookup"><span data-stu-id="30f90-119">29</span></span>|  
|<span data-ttu-id="30f90-120">3</span><span class="sxs-lookup"><span data-stu-id="30f90-120">3</span></span>|<span data-ttu-id="30f90-121">ربيع الاول (Rabi 我)</span><span class="sxs-lookup"><span data-stu-id="30f90-121">‏ربيع الاول (Rabi I)</span></span>|<span data-ttu-id="30f90-122">30</span><span class="sxs-lookup"><span data-stu-id="30f90-122">30</span></span>|<span data-ttu-id="30f90-123">30</span><span class="sxs-lookup"><span data-stu-id="30f90-123">30</span></span>|  
|<span data-ttu-id="30f90-124">4</span><span class="sxs-lookup"><span data-stu-id="30f90-124">4</span></span>|<span data-ttu-id="30f90-125">‏ربيع الثاني (Rabi II)</span><span class="sxs-lookup"><span data-stu-id="30f90-125">‏ربيع الثاني (Rabi II)</span></span>|<span data-ttu-id="30f90-126">29</span><span class="sxs-lookup"><span data-stu-id="30f90-126">29</span></span>|<span data-ttu-id="30f90-127">29</span><span class="sxs-lookup"><span data-stu-id="30f90-127">29</span></span>|  
|<span data-ttu-id="30f90-128">5</span><span class="sxs-lookup"><span data-stu-id="30f90-128">5</span></span>|<span data-ttu-id="30f90-129">جمادى الاولى (Jumada 我)</span><span class="sxs-lookup"><span data-stu-id="30f90-129">جمادى الاولى (Jumada I)</span></span>|<span data-ttu-id="30f90-130">30</span><span class="sxs-lookup"><span data-stu-id="30f90-130">30</span></span>|<span data-ttu-id="30f90-131">30</span><span class="sxs-lookup"><span data-stu-id="30f90-131">30</span></span>|  
|<span data-ttu-id="30f90-132">6</span><span class="sxs-lookup"><span data-stu-id="30f90-132">6</span></span>|<span data-ttu-id="30f90-133">جمادى الثانية (Jumada ii 部分)</span><span class="sxs-lookup"><span data-stu-id="30f90-133">جمادى الثانية (Jumada II)</span></span>|<span data-ttu-id="30f90-134">29</span><span class="sxs-lookup"><span data-stu-id="30f90-134">29</span></span>|<span data-ttu-id="30f90-135">29</span><span class="sxs-lookup"><span data-stu-id="30f90-135">29</span></span>|  
|<span data-ttu-id="30f90-136">7</span><span class="sxs-lookup"><span data-stu-id="30f90-136">7</span></span>|<span data-ttu-id="30f90-137">رجب (Rajab)</span><span class="sxs-lookup"><span data-stu-id="30f90-137">رجب (Rajab)</span></span>|<span data-ttu-id="30f90-138">30</span><span class="sxs-lookup"><span data-stu-id="30f90-138">30</span></span>|<span data-ttu-id="30f90-139">30</span><span class="sxs-lookup"><span data-stu-id="30f90-139">30</span></span>|  
|<span data-ttu-id="30f90-140">8</span><span class="sxs-lookup"><span data-stu-id="30f90-140">8</span></span>|<span data-ttu-id="30f90-141">شعبان (Shaban)</span><span class="sxs-lookup"><span data-stu-id="30f90-141">شعبان (Shaban)</span></span>|<span data-ttu-id="30f90-142">29</span><span class="sxs-lookup"><span data-stu-id="30f90-142">29</span></span>|<span data-ttu-id="30f90-143">29</span><span class="sxs-lookup"><span data-stu-id="30f90-143">29</span></span>|  
|<span data-ttu-id="30f90-144">9</span><span class="sxs-lookup"><span data-stu-id="30f90-144">9</span></span>|<span data-ttu-id="30f90-145">رمضان （斋月）</span><span class="sxs-lookup"><span data-stu-id="30f90-145">رمضان (Ramadan)</span></span>|<span data-ttu-id="30f90-146">30</span><span class="sxs-lookup"><span data-stu-id="30f90-146">30</span></span>|<span data-ttu-id="30f90-147">30</span><span class="sxs-lookup"><span data-stu-id="30f90-147">30</span></span>|  
|<span data-ttu-id="30f90-148">10</span><span class="sxs-lookup"><span data-stu-id="30f90-148">10</span></span>|<span data-ttu-id="30f90-149">شوال （中等）</span><span class="sxs-lookup"><span data-stu-id="30f90-149">شوال (Shawwal)</span></span>|<span data-ttu-id="30f90-150">29</span><span class="sxs-lookup"><span data-stu-id="30f90-150">29</span></span>|<span data-ttu-id="30f90-151">29</span><span class="sxs-lookup"><span data-stu-id="30f90-151">29</span></span>|  
|<span data-ttu-id="30f90-152">11</span><span class="sxs-lookup"><span data-stu-id="30f90-152">11</span></span>|<span data-ttu-id="30f90-153">ذو القعدة (Zulkadah)</span><span class="sxs-lookup"><span data-stu-id="30f90-153">ذو القعدة (Zulkadah)</span></span>|<span data-ttu-id="30f90-154">30</span><span class="sxs-lookup"><span data-stu-id="30f90-154">30</span></span>|<span data-ttu-id="30f90-155">30</span><span class="sxs-lookup"><span data-stu-id="30f90-155">30</span></span>|  
|<span data-ttu-id="30f90-156">12</span><span class="sxs-lookup"><span data-stu-id="30f90-156">12</span></span>|<span data-ttu-id="30f90-157">ذو الحجة （闰年）</span><span class="sxs-lookup"><span data-stu-id="30f90-157">ذو الحجة (Zulhijjah)</span></span>|<span data-ttu-id="30f90-158">29</span><span class="sxs-lookup"><span data-stu-id="30f90-158">29</span></span>|<span data-ttu-id="30f90-159">30</span><span class="sxs-lookup"><span data-stu-id="30f90-159">30</span></span>|  
  
 <span data-ttu-id="30f90-160">斋月，月在穆斯林世界里，正式开始和结束根据基于观测到的新月法令。</span><span class="sxs-lookup"><span data-stu-id="30f90-160">Ramadan, the month of fasting in the Muslim world, officially starts and ends according to a decree that is based on the observation of the new moon.</span></span> <span data-ttu-id="30f90-161">因此，在 Shaban 天数和斋月的最大天数不同。</span><span class="sxs-lookup"><span data-stu-id="30f90-161">Therefore, the number of days in Shaban and the number of days in Ramadan vary.</span></span>  
  
 <span data-ttu-id="30f90-162">日期公元 2001 年 1 月 1 日</span><span class="sxs-lookup"><span data-stu-id="30f90-162">The date January 1, 2001 A.D.</span></span> <span data-ttu-id="30f90-163">在公历日历是大致相当于中等 A.H.1421 年的第六个天</span><span class="sxs-lookup"><span data-stu-id="30f90-163">in the Gregorian calendar is roughly equivalent to the sixth day of Shawwal in the year 1421 A.H.</span></span> <span data-ttu-id="30f90-164">在回历。</span><span class="sxs-lookup"><span data-stu-id="30f90-164">in the Hijri calendar.</span></span>  
  
 <span data-ttu-id="30f90-165">此实现<xref:System.Globalization.HijriCalendar>类通过增加或减少值从 0 到 2 天以适应开始和结束斋月的方差和满足国家/地区之间的日期差异调整日历日期。</span><span class="sxs-lookup"><span data-stu-id="30f90-165">This implementation of the <xref:System.Globalization.HijriCalendar> class adjusts the calendar date by adding or subtracting a value from zero to two days to accommodate the variances in the start and the end of Ramadan and to accommodate the date difference between countries/regions.</span></span> <span data-ttu-id="30f90-166">值存储在<xref:System.Globalization.HijriCalendar.HijriAdjustment%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="30f90-166">That value is stored in the <xref:System.Globalization.HijriCalendar.HijriAdjustment%2A> property.</span></span> <span data-ttu-id="30f90-167">如果<xref:System.Globalization.HijriCalendar.HijriAdjustment%2A>未设置显式，从控制面板的区域和语言选项部分中的设置中派生其值并存储在注册表值 HKEY_CURRENT_USER\Control Panel\International\AddHijriDate 中。</span><span class="sxs-lookup"><span data-stu-id="30f90-167">If <xref:System.Globalization.HijriCalendar.HijriAdjustment%2A> is not set explicitly, it derives its value from the settings in the regional and language options portion of Control Panel and is stored in the registry value HKEY_CURRENT_USER\Control Panel\International\AddHijriDate.</span></span> <span data-ttu-id="30f90-168">但是，该信息可以更改的生命周期内<xref:System.AppDomain>。</span><span class="sxs-lookup"><span data-stu-id="30f90-168">However, that information can change during the life of the <xref:System.AppDomain>.</span></span> <span data-ttu-id="30f90-169"><xref:System.Globalization.HijriCalendar>类不检测系统设置中的更改自动。</span><span class="sxs-lookup"><span data-stu-id="30f90-169">The <xref:System.Globalization.HijriCalendar> class does not detect changes in the system settings automatically.</span></span>  
  
 <span data-ttu-id="30f90-170">每个<xref:System.Globalization.CultureInfo>支持一组的日历。</span><span class="sxs-lookup"><span data-stu-id="30f90-170">Each <xref:System.Globalization.CultureInfo> supports a set of calendars.</span></span> <span data-ttu-id="30f90-171"><xref:System.Globalization.CultureInfo.Calendar%2A>属性返回区域性的默认日历和<xref:System.Globalization.CultureInfo.OptionalCalendars%2A>属性返回一个数组，包含所有支持的区域性的日历。</span><span class="sxs-lookup"><span data-stu-id="30f90-171">The <xref:System.Globalization.CultureInfo.Calendar%2A> property returns the default calendar for the culture, and the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property returns an array containing all the calendars supported by the culture.</span></span> <span data-ttu-id="30f90-172">若要更改使用的日历<xref:System.Globalization.CultureInfo>，该应用程序应设置<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>的属性<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>到新<xref:System.Globalization.Calendar>。</span><span class="sxs-lookup"><span data-stu-id="30f90-172">To change the calendar used by a <xref:System.Globalization.CultureInfo>, the application should set the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> to a new <xref:System.Globalization.Calendar>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.OptionalCalendars" />
    <altmember cref="T:System.Globalization.UmAlQuraCalendar" />
    <related type="Article" href="~/docs/standard/datetime/working-with-calendars.md"><span data-ttu-id="30f90-173">使用日历</span><span class="sxs-lookup"><span data-stu-id="30f90-173">Working with Calendars</span></span></related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Calendar-3360a84a"><span data-ttu-id="30f90-174">示例:日历周范围实用工具</span><span class="sxs-lookup"><span data-stu-id="30f90-174">Sample: Calendar Week Range Utility</span></span></related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/vstudio/This-is-a-desktop-program-cd99bfd4"><span data-ttu-id="30f90-175">示例:在 3D 中查看阿拉伯国家/地区的阿拉伯回历日期</span><span class="sxs-lookup"><span data-stu-id="30f90-175">Sample: Viewing the Hijri Date for Arabian countries in 3D</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HijriCalendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HijriCalendar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="30f90-176">初始化 <see cref="T:System.Globalization.HijriCalendar" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="30f90-176">Initializes a new instance of the <see cref="T:System.Globalization.HijriCalendar" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public override DateTime AddMonths (DateTime time, int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddMonths(valuetype System.DateTime time, int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.AddMonths(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddMonths (time As DateTime, months As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddMonths(DateTime time, int months);" />
      <MemberSignature Language="F#" Value="override this.AddMonths : DateTime * int -&gt; DateTime" Usage="hijriCalendar.AddMonths (time, months)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="30f90-177">要向其添加月数的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="30f90-177">The <see cref="T:System.DateTime" /> to add months to.</span></span></param>
        <param name="months"><span data-ttu-id="30f90-178">要添加的月数。</span><span class="sxs-lookup"><span data-stu-id="30f90-178">The number of months to add.</span></span></param>
        <summary><span data-ttu-id="30f90-179">返回与指定 <see cref="T:System.DateTime" /> 相距指定月数的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="30f90-179">Returns a <see cref="T:System.DateTime" /> that is the specified number of months away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="30f90-180">将指定月数添加到指定的 <see cref="T:System.DateTime" /> 中时得到的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="30f90-180">The <see cref="T:System.DateTime" /> that results from adding the specified number of months to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f90-181">所产生的日部分<xref:System.DateTime>如果结果的日期不是结果生成的年的月份中的有效日期影响。</span><span class="sxs-lookup"><span data-stu-id="30f90-181">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="30f90-182">它已更改为生成的年在生成每月最后一个有效的日期。</span><span class="sxs-lookup"><span data-stu-id="30f90-182">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="30f90-183">所生成的年份部分<xref:System.DateTime>受影响，如果结果的月份之外的指定年份<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="30f90-183">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="30f90-184">此实现支持仅为当前纪元。</span><span class="sxs-lookup"><span data-stu-id="30f90-184">This implementation supports only the current era.</span></span> <span data-ttu-id="30f90-185">因此，<xref:System.ArgumentException>如果生成的年之外的指定纪元，且引发<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="30f90-185">Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="30f90-186">所生成的时间的日部分<xref:System.DateTime>保持不变，与指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="30f90-186">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="30f90-187">例如，如果指定的月份是 Zulkadah，包含 30 天，指定的日期是该月的第 30 天和的值`months`参数是 3，生成的年是一个多个指定的年份，生成的月份是 Safar，并生成 d在为 29 日，即 Safar 中的最后一天。</span><span class="sxs-lookup"><span data-stu-id="30f90-187">For example, if the specified month is Zulkadah, which has 30 days, the specified day is the 30th day of that month, and the value of the `months` parameter is 3, the resulting year is one more than the specified year, the resulting month is Safar, and the resulting day is the 29th day, which is the last day in Safar.</span></span>  
  
 <span data-ttu-id="30f90-188">如果的值`months`参数为负，从而<xref:System.DateTime>早于指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="30f90-188">If the value of the `months` parameter is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="30f90-189"><xref:System.DateTime.Kind%2A>所返回的属性<xref:System.DateTime>值始终等于<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="30f90-189">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="30f90-190">可以保留<xref:System.DateTime.Kind%2A>的属性`time`参数通过调用<xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType>方法，如以下示例所示。</span><span class="sxs-lookup"><span data-stu-id="30f90-190">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]
 [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]  
  
   
  
## Examples  
 <span data-ttu-id="30f90-191">下面的代码示例显示的多个组件的值<xref:System.DateTime>的回历。</span><span class="sxs-lookup"><span data-stu-id="30f90-191">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hijri calendar.</span></span>  
  
 [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CPP/hijricalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CS/hijricalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/VB/hijricalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="30f90-192">生成的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="30f90-192">The resulting <see cref="T:System.DateTime" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="30f90-193"><paramref name="months" /> 小于 -120000。</span><span class="sxs-lookup"><span data-stu-id="30f90-193"><paramref name="months" /> is less than -120000.</span></span>  
  
<span data-ttu-id="30f90-194">- 或 -</span><span class="sxs-lookup"><span data-stu-id="30f90-194">-or-</span></span> 
 <span data-ttu-id="30f90-195"><paramref name="months" /> 大于 120000。</span><span class="sxs-lookup"><span data-stu-id="30f90-195"><paramref name="months" /> is greater than 120000.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.HijriCalendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public override DateTime AddYears (DateTime time, int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddYears(valuetype System.DateTime time, int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.AddYears(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddYears (time As DateTime, years As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddYears(DateTime time, int years);" />
      <MemberSignature Language="F#" Value="override this.AddYears : DateTime * int -&gt; DateTime" Usage="hijriCalendar.AddYears (time, years)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="30f90-196">要向其添加年数的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="30f90-196">The <see cref="T:System.DateTime" /> to add years to.</span></span></param>
        <param name="years"><span data-ttu-id="30f90-197">要添加的年数。</span><span class="sxs-lookup"><span data-stu-id="30f90-197">The number of years to add.</span></span></param>
        <summary><span data-ttu-id="30f90-198">返回与指定 <see cref="T:System.DateTime" /> 相距指定年数的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="30f90-198">Returns a <see cref="T:System.DateTime" /> that is the specified number of years away from the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="30f90-199">将指定年数添加到指定的 <see cref="T:System.DateTime" /> 中时得到的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="30f90-199">The <see cref="T:System.DateTime" /> that results from adding the specified number of years to the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f90-200">所产生的日部分<xref:System.DateTime>如果结果的日期不是结果生成的年的月份中的有效日期影响。</span><span class="sxs-lookup"><span data-stu-id="30f90-200">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="30f90-201">它已更改为生成的年在生成每月最后一个有效的日期。</span><span class="sxs-lookup"><span data-stu-id="30f90-201">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="30f90-202">所生成的月份部分<xref:System.DateTime>保持不变，与指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="30f90-202">The month part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="30f90-203">此实现支持仅为当前纪元。</span><span class="sxs-lookup"><span data-stu-id="30f90-203">This implementation supports only the current era.</span></span> <span data-ttu-id="30f90-204">因此，<xref:System.ArgumentException>如果生成的年之外的指定纪元，且引发<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="30f90-204">Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="30f90-205">所生成的时间的日部分<xref:System.DateTime>保持不变，与指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="30f90-205">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="30f90-206">例如，闰年有 29 天，但在闰年时它有 30 天。</span><span class="sxs-lookup"><span data-stu-id="30f90-206">For example, Zulhijjah has 29 days, except during leap years when it has 30 days.</span></span> <span data-ttu-id="30f90-207">如果指定的日期是闰年中为闰年的 30 天和的值`years`为 1，则得到的日期将是闰年 29 日在下一年中的。</span><span class="sxs-lookup"><span data-stu-id="30f90-207">If the specified date is the 30th day of Zulhijjah in a leap year and the value of `years` is 1, the resulting date will be the 29th day of Zulhijjah in the following year.</span></span>  
  
 <span data-ttu-id="30f90-208">如果`years`为负，从而<xref:System.DateTime>早于指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="30f90-208">If `years` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="30f90-209"><xref:System.DateTime.Kind%2A>所返回的属性<xref:System.DateTime>值始终等于<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="30f90-209">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="30f90-210">可以保留<xref:System.DateTime.Kind%2A>的属性`time`参数通过调用<xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType>方法，如以下示例所示。</span><span class="sxs-lookup"><span data-stu-id="30f90-210">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]
 [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]  
  
   
  
## Examples  
 <span data-ttu-id="30f90-211">下面的代码示例显示的多个组件的值<xref:System.DateTime>的回历。</span><span class="sxs-lookup"><span data-stu-id="30f90-211">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hijri calendar.</span></span>  
  
 [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CPP/hijricalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CS/hijricalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/VB/hijricalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="30f90-212">生成的 <see cref="T:System.DateTime" /> 超出了支持的范围。</span><span class="sxs-lookup"><span data-stu-id="30f90-212">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.HijriCalendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AlgorithmType">
      <MemberSignature Language="C#" Value="public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarAlgorithmType AlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.HijriCalendar.AlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AlgorithmType As CalendarAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CalendarAlgorithmType AlgorithmType { System::Globalization::CalendarAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmType : System.Globalization.CalendarAlgorithmType" Usage="System.Globalization.HijriCalendar.AlgorithmType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="30f90-213">获取一个值，该值指示当前日历是阳历、阴历还是二者的组合。</span><span class="sxs-lookup"><span data-stu-id="30f90-213">Gets a value that indicates whether the current calendar is solar-based, lunar-based, or a combination of both.</span></span></summary>
        <value><span data-ttu-id="30f90-214">始终返回 <see cref="F:System.Globalization.CalendarAlgorithmType.LunarCalendar" />。</span><span class="sxs-lookup"><span data-stu-id="30f90-214">Always returns <see cref="F:System.Globalization.CalendarAlgorithmType.LunarCalendar" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="30f90-215">下面的示例使用反射来实例化每个<xref:System.Globalization.Calendar>类型在.NET Framework 中找到并显示的值及其<xref:System.Globalization.Calendar.AlgorithmType%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="30f90-215">The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/cs/algorithmtype1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/vb/algorithmtype1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DaysInYearBeforeMinSupportedYear">
      <MemberSignature Language="C#" Value="protected override int DaysInYearBeforeMinSupportedYear { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DaysInYearBeforeMinSupportedYear" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.HijriCalendar.DaysInYearBeforeMinSupportedYear" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DaysInYearBeforeMinSupportedYear As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int DaysInYearBeforeMinSupportedYear { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DaysInYearBeforeMinSupportedYear : int" Usage="System.Globalization.HijriCalendar.DaysInYearBeforeMinSupportedYear" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="30f90-216">获取 <see cref="P:System.Globalization.HijriCalendar.MinSupportedDateTime" /> 属性指定的年份之前的年中天数。</span><span class="sxs-lookup"><span data-stu-id="30f90-216">Gets the number of days in the year that precedes the year that is specified by the <see cref="P:System.Globalization.HijriCalendar.MinSupportedDateTime" /> property.</span></span></summary>
        <value><span data-ttu-id="30f90-217">由 <see cref="P:System.Globalization.HijriCalendar.MinSupportedDateTime" /> 指定的在年之前的一年的天数。</span><span class="sxs-lookup"><span data-stu-id="30f90-217">The number of days in the year that precedes the year specified by <see cref="P:System.Globalization.HijriCalendar.MinSupportedDateTime" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f90-218">此属性返回的常量值的数量累计为 354。</span><span class="sxs-lookup"><span data-stu-id="30f90-218">This property returns a constant value of 354.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eras">
      <MemberSignature Language="C#" Value="public override int[] Eras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] Eras" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.HijriCalendar.Eras" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Eras As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;int&gt; ^ Eras { cli::array &lt;int&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Eras : int[]" Usage="System.Globalization.HijriCalendar.Eras" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="30f90-219">获取 <see cref="T:System.Globalization.HijriCalendar" /> 中的纪元列表。</span><span class="sxs-lookup"><span data-stu-id="30f90-219">Gets the list of eras in the <see cref="T:System.Globalization.HijriCalendar" />.</span></span></summary>
        <value><span data-ttu-id="30f90-220">表示 <see cref="T:System.Globalization.HijriCalendar" /> 中的纪元的整数数组。</span><span class="sxs-lookup"><span data-stu-id="30f90-220">An array of integers that represents the eras in the <see cref="T:System.Globalization.HijriCalendar" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f90-221">在伊斯兰日历识别一个时代：纪元</span><span class="sxs-lookup"><span data-stu-id="30f90-221">The Hijri calendar recognizes one era: A.H.</span></span> <span data-ttu-id="30f90-222">(拉丁文"Anno Hegirae"，这意味着"year 的迁移后，"迁移的 Muhammad (PBUH) 从麦加迁引用)。</span><span class="sxs-lookup"><span data-stu-id="30f90-222">(Latin "Anno Hegirae", which means "the year of the migration," in reference to the migration of Muhammad (PBUH) from Mecca).</span></span> <span data-ttu-id="30f90-223">此属性始终返回具有只有一个元素的数组。</span><span class="sxs-lookup"><span data-stu-id="30f90-223">This property always returns an array with only one element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HijriCalendar.HijriEra" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfMonth">
      <MemberSignature Language="C#" Value="public override int GetDayOfMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfMonth : DateTime -&gt; int" Usage="hijriCalendar.GetDayOfMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="30f90-224">要读取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="30f90-224">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="30f90-225">返回指定 <see cref="T:System.DateTime" /> 中的月中日期。</span><span class="sxs-lookup"><span data-stu-id="30f90-225">Returns the day of the month in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="30f90-226">1 到 30 之间的一个整数，用于表示指定的 <see cref="T:System.DateTime" /> 中的月中日期。</span><span class="sxs-lookup"><span data-stu-id="30f90-226">An integer from 1 to 30 that represents the day of the month in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="30f90-227">下面的代码示例显示的多个组件的值<xref:System.DateTime>的回历。</span><span class="sxs-lookup"><span data-stu-id="30f90-227">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hijri calendar.</span></span>  
  
 [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CPP/hijricalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CS/hijricalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/VB/hijricalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Day" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfWeek">
      <MemberSignature Language="C#" Value="public override DayOfWeek GetDayOfWeek (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DayOfWeek GetDayOfWeek(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfWeek (time As DateTime) As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DayOfWeek GetDayOfWeek(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfWeek : DateTime -&gt; DayOfWeek" Usage="hijriCalendar.GetDayOfWeek time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="30f90-228">要读取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="30f90-228">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="30f90-229">返回指定 <see cref="T:System.DateTime" /> 中的周中日期。</span><span class="sxs-lookup"><span data-stu-id="30f90-229">Returns the day of the week in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="30f90-230">一个 <see cref="T:System.DayOfWeek" /> 值，用于表示指定的 <see cref="T:System.DateTime" /> 中的周中日期。</span><span class="sxs-lookup"><span data-stu-id="30f90-230">A <see cref="T:System.DayOfWeek" /> value that represents the day of the week in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f90-231"><xref:System.DayOfWeek>值如下所示：</span><span class="sxs-lookup"><span data-stu-id="30f90-231">The <xref:System.DayOfWeek> values are as follows:</span></span>  
  
|<span data-ttu-id="30f90-232">DayOfWeek 值</span><span class="sxs-lookup"><span data-stu-id="30f90-232">DayOfWeek value</span></span>|<span data-ttu-id="30f90-233">指示</span><span class="sxs-lookup"><span data-stu-id="30f90-233">which indicates</span></span>|  
|---------------------|---------------------|  
|<span data-ttu-id="30f90-234">星期日</span><span class="sxs-lookup"><span data-stu-id="30f90-234">Sunday</span></span>|<span data-ttu-id="30f90-235">الاحد (Al Ahad)</span><span class="sxs-lookup"><span data-stu-id="30f90-235">الاحد (Al-Ahad)</span></span>|  
|<span data-ttu-id="30f90-236">星期一</span><span class="sxs-lookup"><span data-stu-id="30f90-236">Monday</span></span>|<span data-ttu-id="30f90-237">الاثنين (Al Ithnayn)</span><span class="sxs-lookup"><span data-stu-id="30f90-237">الاثنين (Al-Ithnayn)</span></span>|  
|<span data-ttu-id="30f90-238">星期二</span><span class="sxs-lookup"><span data-stu-id="30f90-238">Tuesday</span></span>|<span data-ttu-id="30f90-239">الثلاثاء (在 Thulaathaa)</span><span class="sxs-lookup"><span data-stu-id="30f90-239">الثلاثاء (At-Thulaathaa')</span></span>|  
|<span data-ttu-id="30f90-240">星期三</span><span class="sxs-lookup"><span data-stu-id="30f90-240">Wednesday</span></span>|<span data-ttu-id="30f90-241">الاربعاء (Al-Arbi'aa')</span><span class="sxs-lookup"><span data-stu-id="30f90-241">الاربعاء (Al-Arbi'aa')</span></span>|  
|<span data-ttu-id="30f90-242">星期四</span><span class="sxs-lookup"><span data-stu-id="30f90-242">Thursday</span></span>|<span data-ttu-id="30f90-243">الخميس (Al Khamiis)</span><span class="sxs-lookup"><span data-stu-id="30f90-243">الخميس (Al-Khamiis)</span></span>|  
|<span data-ttu-id="30f90-244">星期五</span><span class="sxs-lookup"><span data-stu-id="30f90-244">Friday</span></span>|<span data-ttu-id="30f90-245">الجمعة (Al Jumu'ah)</span><span class="sxs-lookup"><span data-stu-id="30f90-245">الجمعة (Al-Jumu'ah)</span></span>|  
|<span data-ttu-id="30f90-246">星期六</span><span class="sxs-lookup"><span data-stu-id="30f90-246">Saturday</span></span>|<span data-ttu-id="30f90-247">السبت (作为 Sabt)</span><span class="sxs-lookup"><span data-stu-id="30f90-247">السبت (As-Sabt)</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="30f90-248">下面的代码示例显示的多个组件的值<xref:System.DateTime>的回历。</span><span class="sxs-lookup"><span data-stu-id="30f90-248">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hijri calendar.</span></span>  
  
 [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CPP/hijricalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CS/hijricalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/VB/hijricalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfWeek" />
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfYear">
      <MemberSignature Language="C#" Value="public override int GetDayOfYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfYear(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfYear : DateTime -&gt; int" Usage="hijriCalendar.GetDayOfYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="30f90-249">要读取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="30f90-249">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="30f90-250">返回指定 <see cref="T:System.DateTime" /> 中的日期是该年中的第几天。</span><span class="sxs-lookup"><span data-stu-id="30f90-250">Returns the day of the year in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="30f90-251">1 到 355 之间的一个整数，用于表示指定 <see cref="T:System.DateTime" /> 中的年中日期。</span><span class="sxs-lookup"><span data-stu-id="30f90-251">An integer from 1 to 355 that represents the day of the year in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f90-252">一年中的一天被指从一年的第一天的天数。</span><span class="sxs-lookup"><span data-stu-id="30f90-252">The day of the year is defined as the number of days from the first day of the year.</span></span> <span data-ttu-id="30f90-253">例如，<xref:System.Globalization.HijriCalendar.GetDayOfYear%2A>对的第一个月的第一天返回 1，并<xref:System.Globalization.HijriCalendar.GetDayOfYear%2A>的上个月的最后一天返回该年份的总天数，这相同的值返回<xref:System.Globalization.HijriCalendar.GetDaysInYear%2A>。</span><span class="sxs-lookup"><span data-stu-id="30f90-253">For example, <xref:System.Globalization.HijriCalendar.GetDayOfYear%2A> for the first day of the first month returns 1, and <xref:System.Globalization.HijriCalendar.GetDayOfYear%2A> for the last day of the last month returns the total number of days in that year, which is the same value returned by <xref:System.Globalization.HijriCalendar.GetDaysInYear%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30f90-254">下面的代码示例显示的多个组件的值<xref:System.DateTime>的回历。</span><span class="sxs-lookup"><span data-stu-id="30f90-254">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hijri calendar.</span></span>  
  
 [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CPP/hijricalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CS/hijricalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/VB/hijricalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfYear" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public override int GetDaysInMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInMonth (year As Integer, month As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="override this.GetDaysInMonth : int * int * int -&gt; int" Usage="hijriCalendar.GetDaysInMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="30f90-255">一个整数，用于表示年份。</span><span class="sxs-lookup"><span data-stu-id="30f90-255">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="30f90-256">1 到 12 之间的一个整数，用于表示月份。</span><span class="sxs-lookup"><span data-stu-id="30f90-256">An integer from 1 to 12 that represents the month.</span></span></param>
        <param name="era"><span data-ttu-id="30f90-257">一个整数，用于表示纪元。</span><span class="sxs-lookup"><span data-stu-id="30f90-257">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="30f90-258">返回指定纪元年份中指定月份的天数。</span><span class="sxs-lookup"><span data-stu-id="30f90-258">Returns the number of days in the specified month of the specified year and era.</span></span></summary>
        <returns><span data-ttu-id="30f90-259">指定纪元中指定年份的指定月份中的天数。</span><span class="sxs-lookup"><span data-stu-id="30f90-259">The number of days in the specified month in the specified year in the specified era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f90-260">例如，此方法为闰年返回 29 或 30 (`month` = 12)，具体取决于`year`是否为闰年。</span><span class="sxs-lookup"><span data-stu-id="30f90-260">For example, this method returns 29 or 30 for Zulhijjah (`month` = 12), depending on whether `year` is a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30f90-261">下面的代码示例调用`GetDaysInMonth`第 12 个月中每个五年中每个纪元。</span><span class="sxs-lookup"><span data-stu-id="30f90-261">The following code example calls `GetDaysInMonth` for the twelfth month in each of five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.HijriCalendar.GetDaysInMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.GetDaysInMonth/CPP/hijricalendar_getdaysinmonth.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar.GetDaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.GetDaysInMonth/CS/hijricalendar_getdaysinmonth.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar.GetDaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.GetDaysInMonth/VB/hijricalendar_getdaysinmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="30f90-262"><paramref name="era" /> 超出了此日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="30f90-262"><paramref name="era" /> is outside the range supported by this calendar.</span></span>  
  
<span data-ttu-id="30f90-263">- 或 -</span><span class="sxs-lookup"><span data-stu-id="30f90-263">-or-</span></span> 
 <span data-ttu-id="30f90-264"><paramref name="year" /> 超出了此日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="30f90-264"><paramref name="year" /> is outside the range supported by this calendar.</span></span>  
  
<span data-ttu-id="30f90-265">- 或 -</span><span class="sxs-lookup"><span data-stu-id="30f90-265">-or-</span></span> 
 <span data-ttu-id="30f90-266"><paramref name="month" /> 超出了此日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="30f90-266"><paramref name="month" /> is outside the range supported by this calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HijriCalendar.HijriEra" />
        <altmember cref="P:System.Globalization.HijriCalendar.Eras" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public override int GetDaysInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetDaysInYear : int * int -&gt; int" Usage="hijriCalendar.GetDaysInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="30f90-267">一个整数，用于表示年份。</span><span class="sxs-lookup"><span data-stu-id="30f90-267">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="30f90-268">一个整数，用于表示纪元。</span><span class="sxs-lookup"><span data-stu-id="30f90-268">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="30f90-269">返回指定纪元年份中的天数。</span><span class="sxs-lookup"><span data-stu-id="30f90-269">Returns the number of days in the specified year and era.</span></span></summary>
        <returns><span data-ttu-id="30f90-270">指定纪元年份中的天数。</span><span class="sxs-lookup"><span data-stu-id="30f90-270">The number of days in the specified year and era.</span></span> <span data-ttu-id="30f90-271">天数在平年中为 354，在闰年中为 355。</span><span class="sxs-lookup"><span data-stu-id="30f90-271">The number of days is 354 in a common year or 355 in a leap year.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="30f90-272">下面的代码示例调用`GetDaysInYear`五年中每个纪元。</span><span class="sxs-lookup"><span data-stu-id="30f90-272">The following code example calls `GetDaysInYear` for five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.HijriCalendar.GetDaysInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.GetDaysInYear/CPP/hijricalendar_getdaysinyear.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar.GetDaysInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.GetDaysInYear/CS/hijricalendar_getdaysinyear.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar.GetDaysInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.GetDaysInYear/VB/hijricalendar_getdaysinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="30f90-273"><paramref name="year" /> 或 <paramref name="era" /> 超出了此日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="30f90-273"><paramref name="year" /> or <paramref name="era" /> is outside the range supported by this calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HijriCalendar.HijriEra" />
        <altmember cref="P:System.Globalization.HijriCalendar.Eras" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public override int GetEra (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEra(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.GetEra(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEra (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetEra(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetEra : DateTime -&gt; int" Usage="hijriCalendar.GetEra time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="30f90-274">要读取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="30f90-274">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="30f90-275">返回指定 <see cref="T:System.DateTime" /> 中的纪元。</span><span class="sxs-lookup"><span data-stu-id="30f90-275">Returns the era in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="30f90-276">一个整数，用于表示指定 <see cref="T:System.DateTime" /> 中的纪元。</span><span class="sxs-lookup"><span data-stu-id="30f90-276">An integer that represents the era in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f90-277">在伊斯兰日历识别一个时代：纪元</span><span class="sxs-lookup"><span data-stu-id="30f90-277">The Hijri calendar recognizes one era: A.H.</span></span> <span data-ttu-id="30f90-278">(拉丁文"Anno Hegirae"，这意味着"year 的迁移后，"迁移的 Muhammad (PBUH) 从麦加迁引用)。</span><span class="sxs-lookup"><span data-stu-id="30f90-278">(Latin "Anno Hegirae", which means "the year of the migration," in reference to the migration of Muhammad (PBUH) from Mecca).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30f90-279">下面的代码示例显示的多个组件的值<xref:System.DateTime>的回历。</span><span class="sxs-lookup"><span data-stu-id="30f90-279">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hijri calendar.</span></span>  
  
 [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CPP/hijricalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CS/hijricalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/VB/hijricalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HijriCalendar.HijriEra" />
        <altmember cref="P:System.Globalization.HijriCalendar.Eras" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public override int GetLeapMonth (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLeapMonth(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.GetLeapMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLeapMonth (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetLeapMonth(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetLeapMonth : int * int -&gt; int" Usage="hijriCalendar.GetLeapMonth (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="era" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="30f90-280">年份。</span><span class="sxs-lookup"><span data-stu-id="30f90-280">A year.</span></span></param>
        <param name="era"><span data-ttu-id="30f90-281">纪元。</span><span class="sxs-lookup"><span data-stu-id="30f90-281">An era.</span></span> <span data-ttu-id="30f90-282">指定 <see cref="F:System.Globalization.Calendar.CurrentEra" /> 或 <see cref="F:System.Globalization.HijriCalendar.HijriEra" />。</span><span class="sxs-lookup"><span data-stu-id="30f90-282">Specify <see cref="F:System.Globalization.Calendar.CurrentEra" /> or <see cref="F:System.Globalization.HijriCalendar.HijriEra" />.</span></span></param>
        <summary><span data-ttu-id="30f90-283">计算指定纪元年份的闰月。</span><span class="sxs-lookup"><span data-stu-id="30f90-283">Calculates the leap month for a specified year and era.</span></span></summary>
        <returns><span data-ttu-id="30f90-284">总为 0，因为 <see cref="T:System.Globalization.HijriCalendar" /> 类型不支持闰月的概念。</span><span class="sxs-lookup"><span data-stu-id="30f90-284">Always 0 because the <see cref="T:System.Globalization.HijriCalendar" /> type does not support the notion of a leap month.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f90-285">在日历中支持闰月的概念，特定月后或在一年中的任何月份之后发生的闰月。</span><span class="sxs-lookup"><span data-stu-id="30f90-285">In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year.</span></span> <span data-ttu-id="30f90-286">例如，<xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>方法返回一个数字，介于 1 到 13，该值指示指定日期与关联的月份之间。</span><span class="sxs-lookup"><span data-stu-id="30f90-286">For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns a number between 1 and 13 that indicates the month associated with a specified date.</span></span> <span data-ttu-id="30f90-287">如果，在一年的第八个和第九个月之间存在闰月<xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>方法的第八个月内，闰第 8 个月的 9 和 10 中的第九个月返回 8。</span><span class="sxs-lookup"><span data-stu-id="30f90-287">If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="30f90-288"><paramref name="year" /> 小于回历年 1 或大于 9666 年。</span><span class="sxs-lookup"><span data-stu-id="30f90-288"><paramref name="year" /> is less than the Hijri calendar year 1 or greater than the year 9666.</span></span>  
  
<span data-ttu-id="30f90-289">- 或 -</span><span class="sxs-lookup"><span data-stu-id="30f90-289">-or-</span></span> 
 <span data-ttu-id="30f90-290"><paramref name="era" /> 不是 <see cref="F:System.Globalization.Calendar.CurrentEra" /> 或 <see cref="F:System.Globalization.HijriCalendar.HijriEra" />。</span><span class="sxs-lookup"><span data-stu-id="30f90-290"><paramref name="era" /> is not <see cref="F:System.Globalization.Calendar.CurrentEra" /> or <see cref="F:System.Globalization.HijriCalendar.HijriEra" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonth">
      <MemberSignature Language="C#" Value="public override int GetMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.GetMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetMonth : DateTime -&gt; int" Usage="hijriCalendar.GetMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="30f90-291">要读取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="30f90-291">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="30f90-292">返回指定 <see cref="T:System.DateTime" /> 中的月份。</span><span class="sxs-lookup"><span data-stu-id="30f90-292">Returns the month in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="30f90-293">1 到 12 之间的一个整数，用于表示指定的 <see cref="T:System.DateTime" /> 中的月份。</span><span class="sxs-lookup"><span data-stu-id="30f90-293">An integer from 1 to 12 that represents the month in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="30f90-294">下面的代码示例显示的多个组件的值<xref:System.DateTime>的回历。</span><span class="sxs-lookup"><span data-stu-id="30f90-294">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hijri calendar.</span></span>  
  
 [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CPP/hijricalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CS/hijricalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/VB/hijricalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Month" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public override int GetMonthsInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonthsInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonthsInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonthsInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetMonthsInYear : int * int -&gt; int" Usage="hijriCalendar.GetMonthsInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="30f90-295">一个整数，用于表示年份。</span><span class="sxs-lookup"><span data-stu-id="30f90-295">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="30f90-296">一个整数，用于表示纪元。</span><span class="sxs-lookup"><span data-stu-id="30f90-296">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="30f90-297">返回指定纪元年份中的月数。</span><span class="sxs-lookup"><span data-stu-id="30f90-297">Returns the number of months in the specified year and era.</span></span></summary>
        <returns><span data-ttu-id="30f90-298">指定纪元年份中的月数。</span><span class="sxs-lookup"><span data-stu-id="30f90-298">The number of months in the specified year and era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="30f90-299">下面的代码示例调用每个纪元中的五年 GetMonthsInYear 方法。</span><span class="sxs-lookup"><span data-stu-id="30f90-299">The following code example calls the GetMonthsInYear method for five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.HijriCalendar.GetMonthsInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.GetMonthsInYear/CPP/hijricalendar_getmonthsinyear.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar.GetMonthsInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.GetMonthsInYear/CS/hijricalendar_getmonthsinyear.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar.GetMonthsInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.GetMonthsInYear/VB/hijricalendar_getmonthsinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="30f90-300"><paramref name="era" /> 超出了此日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="30f90-300"><paramref name="era" /> is outside the range supported by this calendar.</span></span>  
  
<span data-ttu-id="30f90-301">- 或 -</span><span class="sxs-lookup"><span data-stu-id="30f90-301">-or-</span></span> 
 <span data-ttu-id="30f90-302"><paramref name="year" /> 超出了此日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="30f90-302"><paramref name="year" /> is outside the range supported by this calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HijriCalendar.HijriEra" />
        <altmember cref="P:System.Globalization.HijriCalendar.Eras" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDaysInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetYear">
      <MemberSignature Language="C#" Value="public override int GetYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.GetYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetYear(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetYear : DateTime -&gt; int" Usage="hijriCalendar.GetYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time"><span data-ttu-id="30f90-303">要读取的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="30f90-303">The <see cref="T:System.DateTime" /> to read.</span></span></param>
        <summary><span data-ttu-id="30f90-304">返回指定 <see cref="T:System.DateTime" /> 中的年份。</span><span class="sxs-lookup"><span data-stu-id="30f90-304">Returns the year in the specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="30f90-305">一个整数，用于表示指定的 <see cref="T:System.DateTime" /> 中的年份。</span><span class="sxs-lookup"><span data-stu-id="30f90-305">An integer that represents the year in the specified <see cref="T:System.DateTime" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="30f90-306">下面的代码示例显示的多个组件的值<xref:System.DateTime>的回历。</span><span class="sxs-lookup"><span data-stu-id="30f90-306">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hijri calendar.</span></span>  
  
 [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CPP/hijricalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CS/hijricalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/VB/hijricalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Year" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="HijriAdjustment">
      <MemberSignature Language="C#" Value="public int HijriAdjustment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HijriAdjustment" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.HijriCalendar.HijriAdjustment" />
      <MemberSignature Language="VB.NET" Value="Public Property HijriAdjustment As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HijriAdjustment { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.HijriAdjustment : int with get, set" Usage="System.Globalization.HijriCalendar.HijriAdjustment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="30f90-307">获取或设置要在日历中添加或减去的天数，以适应斋月的开头和结尾的差异以及国家/地区间的日期差别。</span><span class="sxs-lookup"><span data-stu-id="30f90-307">Gets or sets the number of days to add or subtract from the calendar to accommodate the variances in the start and the end of Ramadan and to accommodate the date difference between countries/regions.</span></span></summary>
        <value><span data-ttu-id="30f90-308">-2 到 2 之间的一个整数，表示要在日历中添加或减去的天数。</span><span class="sxs-lookup"><span data-stu-id="30f90-308">An integer from -2 to 2 that represents the number of days to add or subtract from the calendar.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f90-309">此实现<xref:System.Globalization.HijriCalendar>类通过增加或减少值从 0 到 2 天以适应开始和结束斋月的方差和满足国家/地区之间的日期差异调整日历日期。</span><span class="sxs-lookup"><span data-stu-id="30f90-309">This implementation of the <xref:System.Globalization.HijriCalendar> class adjusts the calendar date by adding or subtracting a value from zero to two days to accommodate the variances in the start and the end of Ramadan and to accommodate the date difference between countries/regions.</span></span> <span data-ttu-id="30f90-310">值存储在<xref:System.Globalization.HijriCalendar.HijriAdjustment%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="30f90-310">That value is stored in the <xref:System.Globalization.HijriCalendar.HijriAdjustment%2A> property.</span></span> <span data-ttu-id="30f90-311">如果<xref:System.Globalization.HijriCalendar.HijriAdjustment%2A>未设置显式，从控制面板的区域和语言选项部分中的设置中派生其值并存储在注册表值 HKEY_CURRENT_USER\Control Panel\International\AddHijriDate 中。</span><span class="sxs-lookup"><span data-stu-id="30f90-311">If <xref:System.Globalization.HijriCalendar.HijriAdjustment%2A> is not set explicitly, it derives its value from the settings in the regional and language options portion of Control Panel and is stored in the registry value HKEY_CURRENT_USER\Control Panel\International\AddHijriDate.</span></span> <span data-ttu-id="30f90-312">但是，该信息可以更改的生命周期内<xref:System.AppDomain>。</span><span class="sxs-lookup"><span data-stu-id="30f90-312">However, that information can change during the life of the <xref:System.AppDomain>.</span></span> <span data-ttu-id="30f90-313"><xref:System.Globalization.HijriCalendar>类不检测系统设置中的更改自动。</span><span class="sxs-lookup"><span data-stu-id="30f90-313">The <xref:System.Globalization.HijriCalendar> class does not detect changes in the system settings automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30f90-314">下面的代码示例演示如何<xref:System.Globalization.HijriCalendar.HijriAdjustment%2A>会影响日期。</span><span class="sxs-lookup"><span data-stu-id="30f90-314">The following code example shows how <xref:System.Globalization.HijriCalendar.HijriAdjustment%2A> affects the date.</span></span>  
  
 [!code-cpp[System.Globalization.HijriCalendar.HijriAdjustment#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.HijriAdjustment/CPP/hijriadjustment.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar.HijriAdjustment#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.HijriAdjustment/CS/hijriadjustment.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar.HijriAdjustment#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.HijriAdjustment/VB/hijriadjustment.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="30f90-315">属性设置为无效值。</span><span class="sxs-lookup"><span data-stu-id="30f90-315">The property is being set to an invalid value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HijriEra">
      <MemberSignature Language="C#" Value="public static readonly int HijriEra;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 HijriEra" />
      <MemberSignature Language="DocId" Value="F:System.Globalization.HijriCalendar.HijriEra" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HijriEra As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int HijriEra;" />
      <MemberSignature Language="F#" Value=" staticval mutable HijriEra : int" Usage="System.Globalization.HijriCalendar.HijriEra" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="30f90-316">表示当前纪元。</span><span class="sxs-lookup"><span data-stu-id="30f90-316">Represents the current era.</span></span> <span data-ttu-id="30f90-317">此字段为常数。</span><span class="sxs-lookup"><span data-stu-id="30f90-317">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f90-318">值<xref:System.Globalization.HijriCalendar.HijriEra>字段为 1。</span><span class="sxs-lookup"><span data-stu-id="30f90-318">The value of the <xref:System.Globalization.HijriCalendar.HijriEra> field is 1.</span></span>  
  
 <span data-ttu-id="30f90-319">在伊斯兰日历识别一个时代：纪元</span><span class="sxs-lookup"><span data-stu-id="30f90-319">The Hijri calendar recognizes one era: A.H.</span></span> <span data-ttu-id="30f90-320">(拉丁文"Anno Hegirae"，这意味着"year 的迁移后，"迁移的 Muhammad (PBUH) 从麦加迁引用)。</span><span class="sxs-lookup"><span data-stu-id="30f90-320">(Latin "Anno Hegirae", which means "the year of the migration," in reference to the migration of Muhammad (PBUH) from Mecca).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.HijriCalendar.Eras" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public override bool IsLeapDay (int year, int month, int day, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapDay(int32 year, int32 month, int32 day, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapDay (year As Integer, month As Integer, day As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapDay(int year, int month, int day, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapDay : int * int * int * int -&gt; bool" Usage="hijriCalendar.IsLeapDay (year, month, day, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="30f90-321">一个整数，用于表示年份。</span><span class="sxs-lookup"><span data-stu-id="30f90-321">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="30f90-322">1 到 12 之间的一个整数，用于表示月份。</span><span class="sxs-lookup"><span data-stu-id="30f90-322">An integer from 1 to 12 that represents the month.</span></span></param>
        <param name="day"><span data-ttu-id="30f90-323">1 到 30 之间的一个整数，用于表示月中日期。</span><span class="sxs-lookup"><span data-stu-id="30f90-323">An integer from 1 to 30 that represents the day.</span></span></param>
        <param name="era"><span data-ttu-id="30f90-324">一个整数，用于表示纪元。</span><span class="sxs-lookup"><span data-stu-id="30f90-324">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="30f90-325">确定指定的日期是否为闰日。</span><span class="sxs-lookup"><span data-stu-id="30f90-325">Determines whether the specified date is a leap day.</span></span></summary>
        <returns><span data-ttu-id="30f90-326">如果指定的日期是闰日，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="30f90-326"><see langword="true" /> if the specified day is a leap day; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f90-327">在结尾的年份，则可被 30、 第二次、 5、 7、 10%、 13、 16、 18、 21、 24 每隔 30 年周期，26 和 29 年份是闰年。</span><span class="sxs-lookup"><span data-stu-id="30f90-327">In every 30-year cycle that ends with a year that is evenly divisible by 30, the 2nd, 5th, 7th, 10th, 13th, 16th, 18th, 21st, 24th, 26th, and 29th years are leap years.</span></span> <span data-ttu-id="30f90-328">常见年有 354 天和闰年有 355 天。</span><span class="sxs-lookup"><span data-stu-id="30f90-328">A common year has 354 days and a leap year has 355 days.</span></span>  
  
 <span data-ttu-id="30f90-329">闰日是仅在闰年中发生一天。</span><span class="sxs-lookup"><span data-stu-id="30f90-329">A leap day is a day that occurs only in a leap year.</span></span> <span data-ttu-id="30f90-330">在伊斯兰日历，在闰年的 30 天是唯一的闰日。</span><span class="sxs-lookup"><span data-stu-id="30f90-330">In the Hijri calendar, the 30th day of Zulhijjah is the only leap day.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30f90-331">下面的代码示例调用`IsLeapDay`中每个纪元的五年的第二个月 （年 2 月） 的最后一天的方法。</span><span class="sxs-lookup"><span data-stu-id="30f90-331">The following code example calls the `IsLeapDay` method for the last day of the second month (February) for five years in each of the eras.</span></span>  
  
 [!code-cpp[System.Globalization.HijriCalendar.IsLeapDay#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapDay/CPP/hijricalendar_isleapday.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar.IsLeapDay#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapDay/CS/hijricalendar_isleapday.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar.IsLeapDay#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapDay/VB/hijricalendar_isleapday.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="30f90-332"><paramref name="era" /> 超出了此日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="30f90-332"><paramref name="era" /> is outside the range supported by this calendar.</span></span>  
  
<span data-ttu-id="30f90-333">- 或 -</span><span class="sxs-lookup"><span data-stu-id="30f90-333">-or-</span></span> 
 <span data-ttu-id="30f90-334"><paramref name="year" /> 超出了此日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="30f90-334"><paramref name="year" /> is outside the range supported by this calendar.</span></span>  
  
<span data-ttu-id="30f90-335">- 或 -</span><span class="sxs-lookup"><span data-stu-id="30f90-335">-or-</span></span> 
 <span data-ttu-id="30f90-336"><paramref name="month" /> 超出了此日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="30f90-336"><paramref name="month" /> is outside the range supported by this calendar.</span></span>  
  
<span data-ttu-id="30f90-337">- 或 -</span><span class="sxs-lookup"><span data-stu-id="30f90-337">-or-</span></span> 
 <span data-ttu-id="30f90-338"><paramref name="day" /> 超出了此日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="30f90-338"><paramref name="day" /> is outside the range supported by this calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HijriCalendar.HijriEra" />
        <altmember cref="P:System.Globalization.HijriCalendar.Eras" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HijriCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HijriCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public override bool IsLeapMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapMonth (year As Integer, month As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapMonth : int * int * int -&gt; bool" Usage="hijriCalendar.IsLeapMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="30f90-339">一个整数，用于表示年份。</span><span class="sxs-lookup"><span data-stu-id="30f90-339">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="30f90-340">1 到 12 之间的一个整数，用于表示月份。</span><span class="sxs-lookup"><span data-stu-id="30f90-340">An integer from 1 to 12 that represents the month.</span></span></param>
        <param name="era"><span data-ttu-id="30f90-341">一个整数，用于表示纪元。</span><span class="sxs-lookup"><span data-stu-id="30f90-341">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="30f90-342">确定指定纪元年份中的指定月份是否为闰月。</span><span class="sxs-lookup"><span data-stu-id="30f90-342">Determines whether the specified month in the specified year and era is a leap month.</span></span></summary>
        <returns><span data-ttu-id="30f90-343">此方法始终返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="30f90-343">This method always returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f90-344">在结尾的年份，则可被 30、 第二次、 5、 7、 10%、 13、 16、 18、 21、 24 每隔 30 年周期，26 和 29 年份是闰年。</span><span class="sxs-lookup"><span data-stu-id="30f90-344">In every 30-year cycle that ends with a year that is evenly divisible by 30, the 2nd, 5th, 7th, 10th, 13th, 16th, 18th, 21st, 24th, 26th, and 29th years are leap years.</span></span> <span data-ttu-id="30f90-345">常见年有 354 天和闰年有 355 天。</span><span class="sxs-lookup"><span data-stu-id="30f90-345">A common year has 354 days and a leap year has 355 days.</span></span>  
  
 <span data-ttu-id="30f90-346">闰月是整月，仅在闰年中发生。</span><span class="sxs-lookup"><span data-stu-id="30f90-346">A leap month is an entire month that occurs only in a leap year.</span></span> <span data-ttu-id="30f90-347">在伊斯兰日历不具有任何闰月。</span><span class="sxs-lookup"><span data-stu-id="30f90-347">The Hijri calendar does not have any leap months.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30f90-348">下面的代码示例调用`IsLeapMonth`中的当前纪元中的五年的每月。</span><span class="sxs-lookup"><span data-stu-id="30f90-348">The following code example calls `IsLeapMonth` for all the months in five years in the current era.</span></span>  
  
 [!code-cpp[System.Globalization.HijriCalendar.IsLeapMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapMonth/CPP/hijricalendar_isleapmonth.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar.IsLeapMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapMonth/CS/hijricalendar_isleapmonth.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar.IsLeapMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapMonth/VB/hijricalendar_isleapmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="30f90-349"><paramref name="era" /> 超出了此日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="30f90-349"><paramref name="era" /> is outside the range supported by this calendar.</span></span>  
  
<span data-ttu-id="30f90-350">- 或 -</span><span class="sxs-lookup"><span data-stu-id="30f90-350">-or-</span></span> 
 <span data-ttu-id="30f90-351"><paramref name="year" /> 超出了此日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="30f90-351"><paramref name="year" /> is outside the range supported by this calendar.</span></span>  
  
<span data-ttu-id="30f90-352">- 或 -</span><span class="sxs-lookup"><span data-stu-id="30f90-352">-or-</span></span> 
 <span data-ttu-id="30f90-353"><paramref name="month" /> 超出了此日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="30f90-353"><paramref name="month" /> is outside the range supported by this calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HijriCalendar.HijriEra" />
        <altmember cref="P:System.Globalization.HijriCalendar.Eras" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HijriCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HijriCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public override bool IsLeapYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.IsLeapYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapYear (year As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapYear : int * int -&gt; bool" Usage="hijriCalendar.IsLeapYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="30f90-354">一个整数，用于表示年份。</span><span class="sxs-lookup"><span data-stu-id="30f90-354">An integer that represents the year.</span></span></param>
        <param name="era"><span data-ttu-id="30f90-355">一个整数，用于表示纪元。</span><span class="sxs-lookup"><span data-stu-id="30f90-355">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="30f90-356">确定指定纪元中的指定年份是否为闰年。</span><span class="sxs-lookup"><span data-stu-id="30f90-356">Determines whether the specified year in the specified era is a leap year.</span></span></summary>
        <returns><span data-ttu-id="30f90-357">如果指定的年是闰年，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="30f90-357"><see langword="true" /> if the specified year is a leap year; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f90-358">在结尾的年份，则可被 30、 第二次、 5、 7、 10%、 13、 16、 18、 21、 24 每隔 30 年周期，26 和 29 年份是闰年。</span><span class="sxs-lookup"><span data-stu-id="30f90-358">In every 30-year cycle that ends with a year that is evenly divisible by 30, the 2nd, 5th, 7th, 10th, 13th, 16th, 18th, 21st, 24th, 26th, and 29th years are leap years.</span></span> <span data-ttu-id="30f90-359">常见年有 354 天和闰年有 355 天。</span><span class="sxs-lookup"><span data-stu-id="30f90-359">A common year has 354 days and a leap year has 355 days.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30f90-360">下面的代码示例调用`IsLeapYear`五年中每个纪元的方法。</span><span class="sxs-lookup"><span data-stu-id="30f90-360">The following code example calls the `IsLeapYear` method for five years in each of the eras.</span></span>  
  
 [!code-cpp[System.Globalization.HijriCalendar.IsLeapYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapYear/CPP/hijricalendar_isleapyear.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar.IsLeapYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapYear/CS/hijricalendar_isleapyear.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar.IsLeapYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapYear/VB/hijricalendar_isleapyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="30f90-361"><paramref name="era" /> 超出了此日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="30f90-361"><paramref name="era" /> is outside the range supported by this calendar.</span></span>  
  
<span data-ttu-id="30f90-362">- 或 -</span><span class="sxs-lookup"><span data-stu-id="30f90-362">-or-</span></span> 
 <span data-ttu-id="30f90-363"><paramref name="year" /> 超出了此日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="30f90-363"><paramref name="year" /> is outside the range supported by this calendar.</span></span></exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HijriCalendar.HijriEra" />
        <altmember cref="P:System.Globalization.HijriCalendar.Eras" />
        <altmember cref="M:System.Globalization.HijriCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HijriCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MaxSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MaxSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.HijriCalendar.MaxSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MaxSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxSupportedDateTime : DateTime" Usage="System.Globalization.HijriCalendar.MaxSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="30f90-364">获取此日历支持的最晚日期和时间。</span><span class="sxs-lookup"><span data-stu-id="30f90-364">Gets the latest date and time supported by this calendar.</span></span></summary>
        <value><span data-ttu-id="30f90-365">最晚日期和时间受<see cref="T:System.Globalization.HijriCalendar" />类型，这相当于一最后时刻到来年 12 月 31 日结束的公元 9999 年</span><span class="sxs-lookup"><span data-stu-id="30f90-365">The latest date and time supported by the <see cref="T:System.Globalization.HijriCalendar" /> type, which is equivalent to the last moment of December 31, 9999 C.E.</span></span> <span data-ttu-id="30f90-366">在公历。</span><span class="sxs-lookup"><span data-stu-id="30f90-366">in the Gregorian calendar.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f90-367">公元 9999 年 12 月 31 日</span><span class="sxs-lookup"><span data-stu-id="30f90-367">December 31, 9999 C.E.</span></span> <span data-ttu-id="30f90-368">等效于在伊斯兰日历中 9666 年的第四个月的第三天。</span><span class="sxs-lookup"><span data-stu-id="30f90-368">is equivalent to the 3rd day of the 4th month of the year 9666 in the Hijri calendar.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30f90-369">下面的代码示例获取的最小值和日历的最大值。</span><span class="sxs-lookup"><span data-stu-id="30f90-369">The following code example gets the minimum value and the maximum value of the calendar.</span></span>  
  
 [!code-cpp[System.Globalization.HijriCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_MinMax/CPP/hijricalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_MinMax/CS/hijricalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_MinMax/VB/hijricalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MinSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.HijriCalendar.MinSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MinSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MinSupportedDateTime : DateTime" Usage="System.Globalization.HijriCalendar.MinSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="30f90-370">获取此日历支持的最早日期和时间。</span><span class="sxs-lookup"><span data-stu-id="30f90-370">Gets the earliest date and time supported by this calendar.</span></span></summary>
        <value><span data-ttu-id="30f90-371">最早日期和时间受<see cref="T:System.Globalization.HijriCalendar" />类型，等效于公元 622 年 7 月 18 日的那一刻</span><span class="sxs-lookup"><span data-stu-id="30f90-371">The earliest date and time supported by the <see cref="T:System.Globalization.HijriCalendar" /> type, which is equivalent to the first moment of July 18, 622 C.E.</span></span> <span data-ttu-id="30f90-372">在公历。</span><span class="sxs-lookup"><span data-stu-id="30f90-372">in the Gregorian calendar.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f90-373">Microsoft Visual Basic 表示时间上支持的最小日期的指定时间为一天的<xref:System.DateTime>类型，即公历公元 0001 年 1 月 1 日</span><span class="sxs-lookup"><span data-stu-id="30f90-373">Microsoft Visual Basic represents time of day as the specified time on the minimum date  supported by the <xref:System.DateTime> type, which is January 1, 0001 C.E.</span></span> <span data-ttu-id="30f90-374">但是，<xref:System.Globalization.HijriCalendar>类型不支持该最小日期。</span><span class="sxs-lookup"><span data-stu-id="30f90-374">However, the <xref:System.Globalization.HijriCalendar> type does not support that minimum date.</span></span> <span data-ttu-id="30f90-375">因此，如果您调用方法来设置使用当前日历的日期时间的格式，但未指定的格式说明符，格式设置使用 ISO 8601 可排序的 ("s") 日期/时间模式而不是默认常规 ("G") 的日期/时间模式的格式说明符格式说明符。</span><span class="sxs-lookup"><span data-stu-id="30f90-375">Consequently, if you call a method to format the time of day using the current calendar but you do not specify a format specifier, formatting uses the ISO 8601 sortable ("s") date/time pattern format specifier instead of the default general ("G") date/time pattern format specifier.</span></span> <span data-ttu-id="30f90-376">有关详细信息，请参阅[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="30f90-376">For more information, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30f90-377">下面的代码示例获取的最小值和日历的最大值。</span><span class="sxs-lookup"><span data-stu-id="30f90-377">The following code example gets the minimum value and the maximum value of the calendar.</span></span>  
  
 [!code-cpp[System.Globalization.HijriCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_MinMax/CPP/hijricalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_MinMax/CS/hijricalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_MinMax/VB/hijricalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToDateTime (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="F#" Value="override this.ToDateTime : int * int * int * int * int * int * int * int -&gt; DateTime" Usage="hijriCalendar.ToDateTime (year, month, day, hour, minute, second, millisecond, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="30f90-378">一个整数，用于表示年份。</span><span class="sxs-lookup"><span data-stu-id="30f90-378">An integer that represents the year.</span></span></param>
        <param name="month"><span data-ttu-id="30f90-379">1 到 12 之间的一个整数，用于表示月份。</span><span class="sxs-lookup"><span data-stu-id="30f90-379">An integer from 1 to 12 that represents the month.</span></span></param>
        <param name="day"><span data-ttu-id="30f90-380">1 到 30 之间的一个整数，用于表示月中日期。</span><span class="sxs-lookup"><span data-stu-id="30f90-380">An integer from 1 to 30 that represents the day.</span></span></param>
        <param name="hour"><span data-ttu-id="30f90-381">0 到 23 之间的一个整数，用于表示小时。</span><span class="sxs-lookup"><span data-stu-id="30f90-381">An integer from 0 to 23 that represents the hour.</span></span></param>
        <param name="minute"><span data-ttu-id="30f90-382">0 到 59 之间的一个整数，用于表示分钟。</span><span class="sxs-lookup"><span data-stu-id="30f90-382">An integer from 0 to 59 that represents the minute.</span></span></param>
        <param name="second"><span data-ttu-id="30f90-383">0 到 59 之间的一个整数，用于表示秒。</span><span class="sxs-lookup"><span data-stu-id="30f90-383">An integer from 0 to 59 that represents the second.</span></span></param>
        <param name="millisecond"><span data-ttu-id="30f90-384">0 到 999 之间的一个整数，用于表示毫秒。</span><span class="sxs-lookup"><span data-stu-id="30f90-384">An integer from 0 to 999 that represents the millisecond.</span></span></param>
        <param name="era"><span data-ttu-id="30f90-385">一个整数，用于表示纪元。</span><span class="sxs-lookup"><span data-stu-id="30f90-385">An integer that represents the era.</span></span></param>
        <summary><span data-ttu-id="30f90-386">返回设置为指定的日期、时间和纪元的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="30f90-386">Returns a <see cref="T:System.DateTime" /> that is set to the specified date, time, and era.</span></span></summary>
        <returns><span data-ttu-id="30f90-387">设置为当前纪元中指定日期和时间的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="30f90-387">The <see cref="T:System.DateTime" /> that is set to the specified date and time in the current era.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="30f90-388"><paramref name="era" /> 超出了此日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="30f90-388"><paramref name="era" /> is outside the range supported by this calendar.</span></span>  
  
<span data-ttu-id="30f90-389">- 或 -</span><span class="sxs-lookup"><span data-stu-id="30f90-389">-or-</span></span> 
 <span data-ttu-id="30f90-390"><paramref name="year" /> 超出了此日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="30f90-390"><paramref name="year" /> is outside the range supported by this calendar.</span></span>  
  
<span data-ttu-id="30f90-391">- 或 -</span><span class="sxs-lookup"><span data-stu-id="30f90-391">-or-</span></span> 
 <span data-ttu-id="30f90-392"><paramref name="month" /> 超出了此日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="30f90-392"><paramref name="month" /> is outside the range supported by this calendar.</span></span>  
  
<span data-ttu-id="30f90-393">- 或 -</span><span class="sxs-lookup"><span data-stu-id="30f90-393">-or-</span></span> 
 <span data-ttu-id="30f90-394"><paramref name="day" /> 超出了此日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="30f90-394"><paramref name="day" /> is outside the range supported by this calendar.</span></span>  
  
<span data-ttu-id="30f90-395">- 或 -</span><span class="sxs-lookup"><span data-stu-id="30f90-395">-or-</span></span> 
 <span data-ttu-id="30f90-396"><paramref name="hour" /> 小于 0 或大于 23。</span><span class="sxs-lookup"><span data-stu-id="30f90-396"><paramref name="hour" /> is less than zero or greater than 23.</span></span>  
  
<span data-ttu-id="30f90-397">- 或 -</span><span class="sxs-lookup"><span data-stu-id="30f90-397">-or-</span></span> 
 <span data-ttu-id="30f90-398"><paramref name="minute" /> 小于 0 或大于 59。</span><span class="sxs-lookup"><span data-stu-id="30f90-398"><paramref name="minute" /> is less than zero or greater than 59.</span></span>  
  
<span data-ttu-id="30f90-399">- 或 -</span><span class="sxs-lookup"><span data-stu-id="30f90-399">-or-</span></span> 
 <span data-ttu-id="30f90-400"><paramref name="second" /> 小于 0 或大于 59。</span><span class="sxs-lookup"><span data-stu-id="30f90-400"><paramref name="second" /> is less than zero or greater than 59.</span></span>  
  
<span data-ttu-id="30f90-401">- 或 -</span><span class="sxs-lookup"><span data-stu-id="30f90-401">-or-</span></span> 
 <span data-ttu-id="30f90-402"><paramref name="millisecond" /> 小于 0 或大于 999。</span><span class="sxs-lookup"><span data-stu-id="30f90-402"><paramref name="millisecond" /> is less than zero or greater than 999.</span></span></exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HijriCalendar.HijriEra" />
        <altmember cref="P:System.Globalization.HijriCalendar.Eras" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToFourDigitYear">
      <MemberSignature Language="C#" Value="public override int ToFourDigitYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ToFourDigitYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.ToFourDigitYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToFourDigitYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ToFourDigitYear(int year);" />
      <MemberSignature Language="F#" Value="override this.ToFourDigitYear : int -&gt; int" Usage="hijriCalendar.ToFourDigitYear year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="30f90-403">一个两位数或四位数的整数，用于表示要转换的年份。</span><span class="sxs-lookup"><span data-stu-id="30f90-403">A two-digit or four-digit integer that represents the year to convert.</span></span></param>
        <summary><span data-ttu-id="30f90-404">使用 <see cref="P:System.Globalization.HijriCalendar.TwoDigitYearMax" /> 属性将指定的年份转换为四位数年份，以确定相应的纪元。</span><span class="sxs-lookup"><span data-stu-id="30f90-404">Converts the specified year to a four-digit year by using the <see cref="P:System.Globalization.HijriCalendar.TwoDigitYearMax" /> property to determine the appropriate century.</span></span></summary>
        <returns><span data-ttu-id="30f90-405">包含 <paramref name="year" /> 的四位数表示形式的整数。</span><span class="sxs-lookup"><span data-stu-id="30f90-405">An integer that contains the four-digit representation of <paramref name="year" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f90-406"><xref:System.Globalization.HijriCalendar.TwoDigitYearMax%2A> 是可以用两位数年份表示的 100 年范围内的最后一年。</span><span class="sxs-lookup"><span data-stu-id="30f90-406"><xref:System.Globalization.HijriCalendar.TwoDigitYearMax%2A> is the last year in the 100-year range that can be represented by a two-digit year.</span></span> <span data-ttu-id="30f90-407">通过查找两位数字的唯一匹配项来确定在世纪`year`该 100 年范围内。</span><span class="sxs-lookup"><span data-stu-id="30f90-407">The century is determined by finding the sole occurrence of the two-digit `year` within that 100-year range.</span></span> <span data-ttu-id="30f90-408">例如，如果<xref:System.Globalization.HijriCalendar.TwoDigitYearMax%2A>设置为 1429，则 100 年范围是从 1330年为 1429年; 因此，为 30 的 2 位值被解释为 1330，而 29 一个 2 位值被解释为 1429年。</span><span class="sxs-lookup"><span data-stu-id="30f90-408">For example, if <xref:System.Globalization.HijriCalendar.TwoDigitYearMax%2A> is set to 1429, the 100-year range is from 1330 to 1429; therefore, a 2-digit value of 30 is interpreted as 1330, while a 2-digit value of 29 is interpreted as 1429.</span></span>  
  
 <span data-ttu-id="30f90-409"><xref:System.Globalization.HijriCalendar.ToFourDigitYear%2A> 支持两位数年份或四位数年份。</span><span class="sxs-lookup"><span data-stu-id="30f90-409"><xref:System.Globalization.HijriCalendar.ToFourDigitYear%2A> supports either a two-digit year or a four-digit year.</span></span> <span data-ttu-id="30f90-410">传递一个两位数的年份值 (小于 100) 导致该方法将值转换为四位数字值根据<xref:System.Globalization.HijriCalendar.TwoDigitYearMax%2A>值，该值表示相应的纪元。</span><span class="sxs-lookup"><span data-stu-id="30f90-410">Passing a two-digit year value (less than 100) causes the method to convert the value to a four-digit value according to the <xref:System.Globalization.HijriCalendar.TwoDigitYearMax%2A> value representing the appropriate century.</span></span> <span data-ttu-id="30f90-411">如果应用程序提供对在支持的日历范围内的四位数年份值<xref:System.Globalization.HijriCalendar.ToFourDigitYear%2A>，该方法返回的实际输入的值。</span><span class="sxs-lookup"><span data-stu-id="30f90-411">If the application supplies a four-digit year value that is within the supported calendar range to <xref:System.Globalization.HijriCalendar.ToFourDigitYear%2A>, the method returns the actual input value.</span></span> <span data-ttu-id="30f90-412">如果应用程序提供支持的日历范围之外的四位数字值或提供一个负值，则该方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="30f90-412">If the application supplies a four-digit value that is outside the supported calendar range, or if it supplies a negative value, the method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="30f90-413"><paramref name="year" /> 超出了此日历支持的范围。</span><span class="sxs-lookup"><span data-stu-id="30f90-413"><paramref name="year" /> is outside the range supported by this calendar.</span></span></exception>
        <altmember cref="P:System.Globalization.HijriCalendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="TwoDigitYearMax">
      <MemberSignature Language="C#" Value="public override int TwoDigitYearMax { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TwoDigitYearMax" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.HijriCalendar.TwoDigitYearMax" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TwoDigitYearMax As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TwoDigitYearMax { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TwoDigitYearMax : int with get, set" Usage="System.Globalization.HijriCalendar.TwoDigitYearMax" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="30f90-414">获取或设置可以用两位数年份表示的 100 年范围内的最后一年。</span><span class="sxs-lookup"><span data-stu-id="30f90-414">Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</span></span></summary>
        <value><span data-ttu-id="30f90-415">可以用两位数年份表示的 100 年范围内的最后一年。</span><span class="sxs-lookup"><span data-stu-id="30f90-415">The last year of a 100-year range that can be represented by a 2-digit year.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30f90-416">此属性允许两位数年份，以正确转换为四位数年份。</span><span class="sxs-lookup"><span data-stu-id="30f90-416">This property allows a 2-digit year to be properly translated to a 4-digit year.</span></span> <span data-ttu-id="30f90-417">例如，如果此属性设置为 1429年，100 年范围是从 1330年为 1429年。</span><span class="sxs-lookup"><span data-stu-id="30f90-417">For example, if this property is set to 1429, the 100-year range is from 1330 to 1429.</span></span> <span data-ttu-id="30f90-418">因此，为 30 的 2 位值被解释为 1330，而 29 一个 2 位值被解释为 1429年。</span><span class="sxs-lookup"><span data-stu-id="30f90-418">Therefore, a 2-digit value of 30 is interpreted as 1330, while a 2-digit value of 29 is interpreted as 1429.</span></span>  
  
 <span data-ttu-id="30f90-419">此属性的初始值被派生自控制面板的区域和语言选项部分中的设置。</span><span class="sxs-lookup"><span data-stu-id="30f90-419">The initial value of this property is derived from the settings in the regional and language options portion of Control Panel.</span></span> <span data-ttu-id="30f90-420">但是，该信息可以更改的生命周期内<xref:System.AppDomain>。</span><span class="sxs-lookup"><span data-stu-id="30f90-420">However, that information can change during the life of the <xref:System.AppDomain>.</span></span> <span data-ttu-id="30f90-421"><xref:System.Globalization.HijriCalendar>类不检测系统设置中的更改自动。</span><span class="sxs-lookup"><span data-stu-id="30f90-421">The <xref:System.Globalization.HijriCalendar> class does not detect changes in the system settings automatically.</span></span>  
  
 <span data-ttu-id="30f90-422">应用程序应将此值设置为 99，以指示是按字面 2 位数字的年份。</span><span class="sxs-lookup"><span data-stu-id="30f90-422">The application should set this value to 99 to indicate that 2-digit years are to be taken literally.</span></span> <span data-ttu-id="30f90-423">例如，如果此属性设置为 99，100 年范围是从 0 （不是有效值对于大多数日历） 到 99。</span><span class="sxs-lookup"><span data-stu-id="30f90-423">For example, if this property is set to 99, the 100-year range is from 0 (not a valid value for most calendars) to 99.</span></span> <span data-ttu-id="30f90-424">因此，为 30 的 2 位值被解释为 30。</span><span class="sxs-lookup"><span data-stu-id="30f90-424">Therefore, a 2-digit value of 30 is interpreted as 30.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="30f90-425">此日历为只读。</span><span class="sxs-lookup"><span data-stu-id="30f90-425">This calendar is read-only.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="30f90-426">设置操作中的值小于 100 或大于 9666。</span><span class="sxs-lookup"><span data-stu-id="30f90-426">The value in a set operation is less than 100 or greater than 9666.</span></span></exception>
        <altmember cref="M:System.Globalization.HijriCalendar.ToFourDigitYear(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>