<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TextElementEnumerator.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-567ae5a" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c5b04be-ac4f-4958-bcde-0afae05845525b95e0156062b38c0d1ce876f4a2550fefe49e1b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5b95e0156062b38c0d1ce876f4a2550fefe49e1b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3507e865a3613c00760f25ad1045aaa11bae4dd8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/23/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Globalization.TextElementEnumerator">
          <source>Enumerates the text elements of a string.</source>
          <target state="translated">枚举字符串的文本元素。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.</source>
          <target state="translated">.NET Framework 定义的文本元素的单个字符，即字形的形式显示的文本单位。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>A text element can be any of the following:</source>
          <target state="translated">文本元素可以是以下任一项：</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>A base character, which is represented as a single <ph id="ph1">&lt;xref:System.Char&gt;</ph> value.</source>
          <target state="translated">基字符，表示为单个<ph id="ph1">&lt;xref:System.Char&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>For example, LATIN CAPITAL LETTER A (U+0041) and LATIN SMALL LETTER AE (U+00E6) are base characters.</source>
          <target state="translated">例如，拉丁资本字母 (U + 0041) 和拉丁文小写字母遍历 (U + 00E6) 都是基字符。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>A combining character sequence, which consists of a base character and one or more combining characters.</source>
          <target state="translated">组合字符序列，其中包含基字符和一个或多个组合字符。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>For example, example, LATIN CAPITAL LETTER A (U+0041) followed by COMBINING MACRON (U+0304) is a combining character sequence.</source>
          <target state="translated">例如，示例中，LATIN CAPITAL LETTER (U + 0041) 后跟组合长音符 (U + 0304) 是组合字符序列。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>Surrogate pairs, which the <bpt id="p1">[</bpt>Unicode Standard<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept> defines as a coded character representation for a single abstract character that consists of a sequence of two code units: a high surrogate, and a low surrogate.</source>
          <target state="translated">代理项对，其中<bpt id="p1">[</bpt>Unicode 标准<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept>将定义两个代码单元的序列组成单个抽象字符编码的字符表示形式： 一个高代理项和一个低代理项。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>Surrogate pairs are used to represent characters outside of the Unicode Basic Multilingual Plane as UTF-16 encoded characters.</source>
          <target state="translated">代理项对用于表示为 utf-16 编码字符字符之外 Unicode 基本多语言平面。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>For example, GOTHIC LETTER SAUIL (U+10343) is represented in UTF-16 encoding as a high surrogate whose value is 0xD800 and a low surrogate whose value is 0xDF43.</source>
          <target state="translated">例如，黑字母 SAUIL (U + 10343) 都在 UTF 16 编码其值是 0xD800 一个高代理项以及其值是 0xDF43 一个低代理项。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>A surrogate pair can represent a base character or a combining character.</source>
          <target state="translated">代理项对可以表示基字符或组合字符。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> class allows you to work with the text elements in a string rather than with single <ph id="ph2">&lt;xref:System.Char&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph>类允许你以字符串中的文本元素而不是使用单一<ph id="ph2">&lt;xref:System.Char&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>You instantiate a <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> object that represents a particular string by passing the string to the <ph id="ph2">&lt;xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">实例化<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph>对象，通过传递的字符串表示特定字符串<ph id="ph2">&lt;xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>This returns an enumerator that is positioned before the first text element in the string.</source>
          <target state="translated">这将返回的枚举数定位在字符串中的第一个文本元素的前面。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>Calling the <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> method also brings the enumerator back to this position.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph>方法还会枚举器放回此位置。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>Because this represents an invalid state, you must call <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first text element of the string before reading the value of the <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> property to return the current text element.</source>
          <target state="translated">由于此项表示状态无效，因此你必须调用<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph>枚举数前移到字符串的第一个文本元素，然后读取的值才能<ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph>属性以返回当前文本元素。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>When working with a <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> object, you are responsible for positioning the enumerator.</source>
          <target state="translated">使用时<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph>对象，你将负责定位枚举数。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> property returns the same text element until you call either <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph>属性返回相同的文本元素，直到你调用<ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph>或<ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>The enumerator is in an invalid state if it is positioned before the first text element or after the last text element in the string.</source>
          <target state="translated">如果它位于第一个文本元素之前或之后在字符串中的最后一个文本元素，则枚举数将处于无效状态。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>When the enumerator is in an invalid state, attempting to retrieve the value of the <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> property throws an exception.</source>
          <target state="translated">尝试检索的值时则枚举数将处于无效状态，<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph>属性引发异常。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>You can determine whether the enumerator is in an invalid state by testing whether the return value of the <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> property is <ph id="ph2">`false`</ph>.</source>
          <target state="translated">你可以确定枚举器是否处于无效状态通过测试是否的返回值<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph>属性是<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> object represents a snapshot of the current state of a string variable or string literal at the moment that the <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> object is instantiated.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph>对象表示的字符串变量或时间的字符串的当前状态的快照，<ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph>实例化对象。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>Note that:</source>
          <target state="translated">请注意：</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>Text element enumerators can only be used to read data in a string.</source>
          <target state="translated">文本元素枚举器仅可用于读取字符串中的数据。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>They cannot modify the underlying string.</source>
          <target state="translated">他们无法修改的基础字符串。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>An enumerator does not have exclusive access to the string that it represents.</source>
          <target state="translated">枚举数没有对它所表示的字符串独占访问权。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>A string variable can be modified after the enumerator is created.</source>
          <target state="translated">创建枚举器后，可以修改字符串变量。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> object enumerates the text elements present in the string at the time that the <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> object was instantiated.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph>对象枚举时出现在字符串的文本元素的<ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph>已实例化对象。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>It does not reflect any subsequent changes to the string variable if that variable is modified afterward.</source>
          <target state="translated">如果以后修改该变量，它不反映到字符串变量的任何后续更改。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>Because the <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> class does not override <ph id="ph2">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>, two <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> objects that represent the same string will be considered unequal.</source>
          <target state="translated">因为<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph>类不会覆盖<ph id="ph2">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph>、 两个<ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph>表示相同的字符串的对象将被视为不相等。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Globalization.TextElementEnumerator">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph> class to enumerate the text elements of a string.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator&gt;</ph>类来枚举字符串的文本元素。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Globalization.TextElementEnumerator.Current">
          <source>Gets the current text element in the string.</source>
          <target state="translated">获取字符串中的当前文本元素。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.TextElementEnumerator.Current">
          <source>An object containing the current text element in the string.</source>
          <target state="translated">包含字符串中当前文本元素的对象。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.TextElementEnumerator.Current">
          <source>After an enumerator is created or after a <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> is called, <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> must be called to advance the enumerator to the first text element of the string before reading the value of <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">创建一个枚举器或<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph>调用时，<ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph>必须调用枚举数前移到字符串的第一个文本元素，然后读取的值才能<ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.TextElementEnumerator.Current">
          <source>Otherwise, <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">否则为<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph>是不确定的。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.TextElementEnumerator.Current">
          <source><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> also throws an exception if the last call to <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph3">`false`</ph>, which indicates the end of the string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> 如果最后一次调用到也会引发异常<ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph>返回<ph id="ph3">`false`</ph>，这表示字符串的末尾。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.TextElementEnumerator.Current">
          <source><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> does not move the position of the enumerator, and consecutive calls to <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> return the same object until either <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> 不会移动的位置的枚举器，并对连续调用<ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph>之前返回同一对象<ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph>或<ph id="ph4">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph>调用。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Globalization.TextElementEnumerator.Current">
          <source>The enumerator is positioned before the first text element of the string or after the last text element.</source>
          <target state="translated">枚举数位于字符串的第一个文本元素之前或最后一个文本元素之后。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Globalization.TextElementEnumerator.ElementIndex">
          <source>Gets the index of the text element that the enumerator is currently positioned over.</source>
          <target state="translated">获取枚举数当前置于其上的文本元素的索引。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Globalization.TextElementEnumerator.ElementIndex">
          <source>The index of the text element that the enumerator is currently positioned over.</source>
          <target state="translated">枚举数当前置于其上的文本元素的索引。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Globalization.TextElementEnumerator.ElementIndex">
          <source>The enumerator is positioned before the first text element of the string or after the last text element.</source>
          <target state="translated">枚举数位于字符串的第一个文本元素之前或最后一个文本元素之后。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Globalization.TextElementEnumerator.GetTextElement">
          <source>Gets the current text element in the string.</source>
          <target state="translated">获取字符串中的当前文本元素。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Globalization.TextElementEnumerator.GetTextElement">
          <source>A new string containing the current text element in the string being read.</source>
          <target state="translated">一个包含所读取的字符串中当前文本元素的新字符串。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.TextElementEnumerator.GetTextElement">
          <source>This method returns the same text element as the <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> property.</source>
          <target state="translated">此方法返回与位于同一文本元素<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Globalization.TextElementEnumerator.GetTextElement">
          <source>The enumerator is positioned before the first text element of the string or after the last text element.</source>
          <target state="translated">枚举数位于字符串的第一个文本元素之前或最后一个文本元素之后。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Globalization.TextElementEnumerator.MoveNext">
          <source>Advances the enumerator to the next text element of the string.</source>
          <target state="translated">将枚举数前移到字符串的下一个文本元素。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Globalization.TextElementEnumerator.MoveNext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the enumerator was successfully advanced to the next text element; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the enumerator has passed the end of the string.</source>
          <target state="translated">如果枚举数成功前移到下一个文本元素，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；如果枚举数已超过字符串的结尾，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.TextElementEnumerator.MoveNext">
          <source>After an enumerator is created or after a <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> is called, the enumerator is positioned before the first text element of the string, and the first call to <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> moves the enumerator over the first text element of the string.</source>
          <target state="translated">创建一个枚举器或<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph>是调用，枚举数定位在字符串中，并首次调用的第一个文本元素之前<ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph>将枚举器移到字符串的第一个文本元素上。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.TextElementEnumerator.MoveNext">
          <source>If the string is modified after this enumerator was created, <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> throws an exception.</source>
          <target state="translated">如果创建此枚举器之后，该字符串修改<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph>引发异常。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.TextElementEnumerator.MoveNext">
          <source>After the end of the string is passed, subsequent calls to <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> return <ph id="ph2">`false`</ph> until <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated">字符串末尾传递，因为在后续调用后<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph>返回<ph id="ph2">`false`</ph>直到<ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph>调用。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Globalization.TextElementEnumerator.Reset">
          <source>Sets the enumerator to its initial position, which is before the first text element in the string.</source>
          <target state="translated">将枚举数设置为其初始位置，该位置位于字符串中第一个文本元素之前。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.TextElementEnumerator.Reset">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph> method moves the enumerator to the beginning of the string, before the first text element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph>方法将枚举器转到前的第一个文本元素的字符串的开头。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Globalization.TextElementEnumerator.Reset">
          <source>After calling <ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph>, you must call <ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first text element of the string before calling <ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph> to read the value of the first text element.</source>
          <target state="translated">在调用<ph id="ph1">&lt;xref:System.Globalization.TextElementEnumerator.Reset%2A&gt;</ph>，必须调用<ph id="ph2">&lt;xref:System.Globalization.TextElementEnumerator.MoveNext%2A&gt;</ph>将枚举数前移到之前调用的字符串的第一个文本元素<ph id="ph3">&lt;xref:System.Globalization.TextElementEnumerator.Current%2A&gt;</ph>若要读取的第一个文本元素的值。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>