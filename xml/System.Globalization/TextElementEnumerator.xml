<Type Name="TextElementEnumerator" FullName="System.Globalization.TextElementEnumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cbf8e17410599af369261ad8f54a24ddedaa1f83" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52375886" /></Metadata><TypeSignature Language="C#" Value="public class TextElementEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TextElementEnumerator extends System.Object implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.TextElementEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Class TextElementEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextElementEnumerator : System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type TextElementEnumerator = class&#xA;    interface IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d766d-101">枚举字符串的文本元素。</span><span class="sxs-lookup"><span data-stu-id="d766d-101">Enumerates the text elements of a string.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d766d-102">.NET Framework 作为一个单元显示为单个字符，即，字形的文本定义的文本元素。</span><span class="sxs-lookup"><span data-stu-id="d766d-102">The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.</span></span> <span data-ttu-id="d766d-103">一个文本元素可以是以下任一项：</span><span class="sxs-lookup"><span data-stu-id="d766d-103">A text element can be any of the following:</span></span>  
  
-   <span data-ttu-id="d766d-104">表示为单个基字符<xref:System.Char>值。</span><span class="sxs-lookup"><span data-stu-id="d766d-104">A base character, which is represented as a single <xref:System.Char> value.</span></span> <span data-ttu-id="d766d-105">例如，拉丁文大写字母字母 (u+0041) 和拉丁文小写字母 AE (U + 00E6) 是基本的字符。</span><span class="sxs-lookup"><span data-stu-id="d766d-105">For example, LATIN CAPITAL LETTER A (U+0041) and LATIN SMALL LETTER AE (U+00E6) are base characters.</span></span>  
  
-   <span data-ttu-id="d766d-106">组合字符序列，其中包含基本字符和一个或多个组合字符。</span><span class="sxs-lookup"><span data-stu-id="d766d-106">A combining character sequence, which consists of a base character and one or more combining characters.</span></span> <span data-ttu-id="d766d-107">例如，示例中，LATIN CAPITAL LETTER (u+0041) 后, 跟组合长音符 (U + 0304) 是组合字符序列。</span><span class="sxs-lookup"><span data-stu-id="d766d-107">For example, example, LATIN CAPITAL LETTER A (U+0041) followed by COMBINING MACRON (U+0304) is a combining character sequence.</span></span>  
  
-   <span data-ttu-id="d766d-108">代理项对，其中[Unicode 标准](https://go.microsoft.com/fwlink/?linkid=37123)定义为包含两个代码单元的一系列的单一抽象字符的编码的字符集表示形式： 高代理项和低代理项。</span><span class="sxs-lookup"><span data-stu-id="d766d-108">Surrogate pairs, which the [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123) defines as a coded character representation for a single abstract character that consists of a sequence of two code units: a high surrogate, and a low surrogate.</span></span> <span data-ttu-id="d766d-109">代理项对用于表示为 utf-16 编码字符 Unicode 基本多文种平面之外的字符。</span><span class="sxs-lookup"><span data-stu-id="d766d-109">Surrogate pairs are used to represent characters outside of the Unicode Basic Multilingual Plane as UTF-16 encoded characters.</span></span> <span data-ttu-id="d766d-110">例如，UTF 16 编码作为其值是 0xD800 一个高代理项以及其值是 0xDF43 的低代理项中表示文字母 SAUIL (U + 10343)。</span><span class="sxs-lookup"><span data-stu-id="d766d-110">For example, GOTHIC LETTER SAUIL (U+10343) is represented in UTF-16 encoding as a high surrogate whose value is 0xD800 and a low surrogate whose value is 0xDF43.</span></span> <span data-ttu-id="d766d-111">代理项对可以表示基字符或组合字符。</span><span class="sxs-lookup"><span data-stu-id="d766d-111">A surrogate pair can represent a base character or a combining character.</span></span>  
  
 <span data-ttu-id="d766d-112"><xref:System.Globalization.TextElementEnumerator>类可用于处理字符串中的文本元素，而不是一个<xref:System.Char>对象。</span><span class="sxs-lookup"><span data-stu-id="d766d-112">The <xref:System.Globalization.TextElementEnumerator> class allows you to work with the text elements in a string rather than with single <xref:System.Char> objects.</span></span>  
  
 <span data-ttu-id="d766d-113">实例化<xref:System.Globalization.TextElementEnumerator>对象，表示通过连接到的字符串表示特定字符串<xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="d766d-113">You instantiate a <xref:System.Globalization.TextElementEnumerator> object that represents a particular string by passing the string to the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d766d-114">这将返回的枚举数放在字符串中的第一个文本元素之前。</span><span class="sxs-lookup"><span data-stu-id="d766d-114">This returns an enumerator that is positioned before the first text element in the string.</span></span> <span data-ttu-id="d766d-115">调用<xref:System.Globalization.TextElementEnumerator.Reset%2A>方法也会枚举数放回此位置。</span><span class="sxs-lookup"><span data-stu-id="d766d-115">Calling the <xref:System.Globalization.TextElementEnumerator.Reset%2A> method also brings the enumerator back to this position.</span></span> <span data-ttu-id="d766d-116">因为这表示无效状态，因此必须调用<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>读取的值之前将枚举数前移到字符串的第一个文本元素<xref:System.Globalization.TextElementEnumerator.Current%2A>属性以返回当前文本元素。</span><span class="sxs-lookup"><span data-stu-id="d766d-116">Because this represents an invalid state, you must call <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> to advance the enumerator to the first text element of the string before reading the value of the <xref:System.Globalization.TextElementEnumerator.Current%2A> property to return the current text element.</span></span>  
  
 <span data-ttu-id="d766d-117">使用时<xref:System.Globalization.TextElementEnumerator>对象，你需要负责定位枚举器。</span><span class="sxs-lookup"><span data-stu-id="d766d-117">When working with a <xref:System.Globalization.TextElementEnumerator> object, you are responsible for positioning the enumerator.</span></span> <span data-ttu-id="d766d-118"><xref:System.Globalization.TextElementEnumerator.Current%2A>属性返回相同的文本元素，直到您调用<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>或<xref:System.Globalization.TextElementEnumerator.Reset%2A>。</span><span class="sxs-lookup"><span data-stu-id="d766d-118">The <xref:System.Globalization.TextElementEnumerator.Current%2A> property returns the same text element until you call either <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> or <xref:System.Globalization.TextElementEnumerator.Reset%2A>.</span></span> <span data-ttu-id="d766d-119">枚举器处于无效状态，如果它位于第一个文本元素之前或之后在字符串中最后一个文本元素。</span><span class="sxs-lookup"><span data-stu-id="d766d-119">The enumerator is in an invalid state if it is positioned before the first text element or after the last text element in the string.</span></span> <span data-ttu-id="d766d-120">尝试检索的值时该枚举数将处于无效状态，<xref:System.Globalization.TextElementEnumerator.Current%2A>属性引发异常。</span><span class="sxs-lookup"><span data-stu-id="d766d-120">When the enumerator is in an invalid state, attempting to retrieve the value of the <xref:System.Globalization.TextElementEnumerator.Current%2A> property throws an exception.</span></span> <span data-ttu-id="d766d-121">您可以确定枚举器是否处于无效状态的测试是否的返回值<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>属性是`false`。</span><span class="sxs-lookup"><span data-stu-id="d766d-121">You can determine whether the enumerator is in an invalid state by testing whether the return value of the <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> property is `false`.</span></span>  
  
 <span data-ttu-id="d766d-122"><xref:System.Globalization.TextElementEnumerator>对象表示的字符串变量或字符串文本在时间点的当前状态的快照的<xref:System.Globalization.TextElementEnumerator>实例化对象。</span><span class="sxs-lookup"><span data-stu-id="d766d-122">The <xref:System.Globalization.TextElementEnumerator> object represents a snapshot of the current state of a string variable or string literal at the moment that the <xref:System.Globalization.TextElementEnumerator> object is instantiated.</span></span> <span data-ttu-id="d766d-123">请注意：</span><span class="sxs-lookup"><span data-stu-id="d766d-123">Note that:</span></span>  
  
-   <span data-ttu-id="d766d-124">文本元素的枚举器仅用于读取字符串中的数据。</span><span class="sxs-lookup"><span data-stu-id="d766d-124">Text element enumerators can only be used to read data in a string.</span></span> <span data-ttu-id="d766d-125">它们不能修改基础字符串。</span><span class="sxs-lookup"><span data-stu-id="d766d-125">They cannot modify the underlying string.</span></span>  
  
-   <span data-ttu-id="d766d-126">一个枚举器没有字符串，它表示对独占访问权限。</span><span class="sxs-lookup"><span data-stu-id="d766d-126">An enumerator does not have exclusive access to the string that it represents.</span></span> <span data-ttu-id="d766d-127">创建枚举器后，可以修改字符串变量。</span><span class="sxs-lookup"><span data-stu-id="d766d-127">A string variable can be modified after the enumerator is created.</span></span>  
  
-   <span data-ttu-id="d766d-128">一个<xref:System.Globalization.TextElementEnumerator>对象枚举在字符串中时显示的文本元素的<xref:System.Globalization.TextElementEnumerator>对象实例化。</span><span class="sxs-lookup"><span data-stu-id="d766d-128">A <xref:System.Globalization.TextElementEnumerator> object enumerates the text elements present in the string at the time that the <xref:System.Globalization.TextElementEnumerator> object was instantiated.</span></span> <span data-ttu-id="d766d-129">如果以后修改该变量，它不反映到字符串变量的任何后续更改。</span><span class="sxs-lookup"><span data-stu-id="d766d-129">It does not reflect any subsequent changes to the string variable if that variable is modified afterward.</span></span>  
  
-   <span data-ttu-id="d766d-130">因为<xref:System.Globalization.TextElementEnumerator>类不重写<xref:System.Object.Equals%2A?displayProperty=nameWithType>、 两个<xref:System.Globalization.TextElementEnumerator>对象表示相同的字符串将被视为不相等。</span><span class="sxs-lookup"><span data-stu-id="d766d-130">Because the <xref:System.Globalization.TextElementEnumerator> class does not override <xref:System.Object.Equals%2A?displayProperty=nameWithType>, two <xref:System.Globalization.TextElementEnumerator> objects that represent the same string will be considered unequal.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d766d-131">下面的示例使用<xref:System.Globalization.TextElementEnumerator>类来枚举字符串的文本元素。</span><span class="sxs-lookup"><span data-stu-id="d766d-131">The following example uses the <xref:System.Globalization.TextElementEnumerator> class to enumerate the text elements of a string.</span></span>  
  
 [!code-cpp[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/CPP/tee_summary.cpp#1)]
 [!code-csharp[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/CS/tee_summary.cs#1)]
 [!code-vb[System.Globalization.TextElementEnumerator.Summary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/VB/tee_summary.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.StringInfo" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextElementEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="System.Globalization.TextElementEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d766d-132">获取字符串中的当前文本元素。</span><span class="sxs-lookup"><span data-stu-id="d766d-132">Gets the current text element in the string.</span></span></summary>
        <value><span data-ttu-id="d766d-133">包含字符串中当前文本元素的对象。</span><span class="sxs-lookup"><span data-stu-id="d766d-133">An object containing the current text element in the string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d766d-134">创建一个枚举器或<xref:System.Globalization.TextElementEnumerator.Reset%2A>调用时，<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>枚举数前移到字符串的第一个文本元素，读取的值之前必须调用<xref:System.Globalization.TextElementEnumerator.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="d766d-134">After an enumerator is created or after a <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> must be called to advance the enumerator to the first text element of the string before reading the value of <xref:System.Globalization.TextElementEnumerator.Current%2A>.</span></span> <span data-ttu-id="d766d-135">否则为<xref:System.Globalization.TextElementEnumerator.Current%2A>是不确定的。</span><span class="sxs-lookup"><span data-stu-id="d766d-135">Otherwise, <xref:System.Globalization.TextElementEnumerator.Current%2A> is undefined.</span></span>  
  
 <span data-ttu-id="d766d-136"><xref:System.Globalization.TextElementEnumerator.Current%2A> 此外会引发异常，如果最后一次调用到<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>返回`false`，这指示字符串的末尾。</span><span class="sxs-lookup"><span data-stu-id="d766d-136"><xref:System.Globalization.TextElementEnumerator.Current%2A> also throws an exception if the last call to <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> returned `false`, which indicates the end of the string.</span></span>  
  
 <span data-ttu-id="d766d-137"><xref:System.Globalization.TextElementEnumerator.Current%2A> 不会移动位置的枚举器，并对连续调用<xref:System.Globalization.TextElementEnumerator.Current%2A>直到返回同一对象<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>或<xref:System.Globalization.TextElementEnumerator.Reset%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="d766d-137"><xref:System.Globalization.TextElementEnumerator.Current%2A> does not move the position of the enumerator, and consecutive calls to <xref:System.Globalization.TextElementEnumerator.Current%2A> return the same object until either <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> or <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d766d-138">枚举数位于字符串的第一个文本元素之前或最后一个文本元素之后。</span><span class="sxs-lookup"><span data-stu-id="d766d-138">The enumerator is positioned before the first text element of the string or after the last text element.</span></span></exception>
        <altmember cref="M:System.Globalization.TextElementEnumerator.GetTextElement" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.ElementIndex" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.MoveNext" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="ElementIndex">
      <MemberSignature Language="C#" Value="public int ElementIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ElementIndex" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextElementEnumerator.ElementIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ElementIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementIndex : int" Usage="System.Globalization.TextElementEnumerator.ElementIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d766d-139">获取枚举数当前置于其上的文本元素的索引。</span><span class="sxs-lookup"><span data-stu-id="d766d-139">Gets the index of the text element that the enumerator is currently positioned over.</span></span></summary>
        <value><span data-ttu-id="d766d-140">枚举数当前置于其上的文本元素的索引。</span><span class="sxs-lookup"><span data-stu-id="d766d-140">The index of the text element that the enumerator is currently positioned over.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d766d-141">枚举数位于字符串的第一个文本元素之前或最后一个文本元素之后。</span><span class="sxs-lookup"><span data-stu-id="d766d-141">The enumerator is positioned before the first text element of the string or after the last text element.</span></span></exception>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.GetTextElement" />
      </Docs>
    </Member>
    <Member MemberName="GetTextElement">
      <MemberSignature Language="C#" Value="public string GetTextElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTextElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.GetTextElement" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextElement () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTextElement();" />
      <MemberSignature Language="F#" Value="member this.GetTextElement : unit -&gt; string" Usage="textElementEnumerator.GetTextElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d766d-142">获取字符串中的当前文本元素。</span><span class="sxs-lookup"><span data-stu-id="d766d-142">Gets the current text element in the string.</span></span></summary>
        <returns><span data-ttu-id="d766d-143">一个包含所读取的字符串中当前文本元素的新字符串。</span><span class="sxs-lookup"><span data-stu-id="d766d-143">A new string containing the current text element in the string being read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d766d-144">此方法返回相同的文本元素作为<xref:System.Globalization.TextElementEnumerator.Current%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="d766d-144">This method returns the same text element as the <xref:System.Globalization.TextElementEnumerator.Current%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d766d-145">枚举数位于字符串的第一个文本元素之前或最后一个文本元素之后。</span><span class="sxs-lookup"><span data-stu-id="d766d-145">The enumerator is positioned before the first text element of the string or after the last text element.</span></span></exception>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.ElementIndex" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="textElementEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d766d-146">将枚举数前移到字符串的下一个文本元素。</span><span class="sxs-lookup"><span data-stu-id="d766d-146">Advances the enumerator to the next text element of the string.</span></span></summary>
        <returns><span data-ttu-id="d766d-147">如果枚举数成功前移到下一个文本元素，则为 <see langword="true" />；如果枚举数已超过字符串的结尾，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d766d-147"><see langword="true" /> if the enumerator was successfully advanced to the next text element; <see langword="false" /> if the enumerator has passed the end of the string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d766d-148">创建一个枚举器或<xref:System.Globalization.TextElementEnumerator.Reset%2A>是调用，枚举数位于字符串，并在首次调用的第一个文本元素之前<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>将枚举数移到字符串的第一个文本元素上。</span><span class="sxs-lookup"><span data-stu-id="d766d-148">After an enumerator is created or after a <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called, the enumerator is positioned before the first text element of the string, and the first call to <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> moves the enumerator over the first text element of the string.</span></span>  
  
 <span data-ttu-id="d766d-149">如果创建此枚举器之后, 修改字符串<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>将引发异常。</span><span class="sxs-lookup"><span data-stu-id="d766d-149">If the string is modified after this enumerator was created, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> throws an exception.</span></span>  
  
 <span data-ttu-id="d766d-150">字符串的末尾是传递，因为在后续调用后<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>返回`false`直到<xref:System.Globalization.TextElementEnumerator.Reset%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="d766d-150">After the end of the string is passed, subsequent calls to <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> return `false` until <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="textElementEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d766d-151">将枚举数设置为其初始位置，该位置位于字符串中第一个文本元素之前。</span><span class="sxs-lookup"><span data-stu-id="d766d-151">Sets the enumerator to its initial position, which is before the first text element in the string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d766d-152"><xref:System.Globalization.TextElementEnumerator.Reset%2A>方法将枚举数移到前的第一个文本元素的字符串开头。</span><span class="sxs-lookup"><span data-stu-id="d766d-152">The <xref:System.Globalization.TextElementEnumerator.Reset%2A> method moves the enumerator to the beginning of the string, before the first text element.</span></span> <span data-ttu-id="d766d-153">在调用<xref:System.Globalization.TextElementEnumerator.Reset%2A>，必须调用<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>将枚举数前移到字符串之前调用的第一个文本元素<xref:System.Globalization.TextElementEnumerator.Current%2A>读取第一个文本元素的值。</span><span class="sxs-lookup"><span data-stu-id="d766d-153">After calling <xref:System.Globalization.TextElementEnumerator.Reset%2A>, you must call <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> to advance the enumerator to the first text element of the string before calling <xref:System.Globalization.TextElementEnumerator.Current%2A> to read the value of the first text element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.TextElementEnumerator.MoveNext" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
      </Docs>
    </Member>
  </Members>
</Type>