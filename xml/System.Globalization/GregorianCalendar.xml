<Type Name="GregorianCalendar" FullName="System.Globalization.GregorianCalendar">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1ba6abff9ac3358e0aa7009f50c1159468ad2fa6" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class GregorianCalendar : System.Globalization.Calendar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit GregorianCalendar extends System.Globalization.Calendar" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.GregorianCalendar" />
  <TypeSignature Language="VB.NET" Value="Public Class GregorianCalendar&#xA;Inherits Calendar" />
  <TypeSignature Language="C++ CLI" Value="public ref class GregorianCalendar : System::Globalization::Calendar" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Calendars</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Globalization.Calendar</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="628be-101">表示公历。</span>
      <span class="sxs-lookup">
        <span data-stu-id="628be-101">Represents the Gregorian calendar.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628be-102">公历日历识别两个纪元： 公元前</span><span class="sxs-lookup"><span data-stu-id="628be-102">The Gregorian calendar recognizes two eras: B.C.</span></span> <span data-ttu-id="628be-103">B.C.E.和公元或</span><span class="sxs-lookup"><span data-stu-id="628be-103">or B.C.E., and A.D.</span></span> <span data-ttu-id="628be-104">或基督纪元</span><span class="sxs-lookup"><span data-stu-id="628be-104">or C.E.</span></span> <span data-ttu-id="628be-105">此实现的<xref:System.Globalization.GregorianCalendar>类识别当前纪元 (A.D.</span><span class="sxs-lookup"><span data-stu-id="628be-105">This implementation of the <xref:System.Globalization.GregorianCalendar> class recognizes only the current era (A.D.</span></span> <span data-ttu-id="628be-106">或公元）。</span><span class="sxs-lookup"><span data-stu-id="628be-106">or C.E.).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="628be-107">有关使用信息<xref:System.Globalization.GregorianCalendar>类和其他日历.NET Framework 中的类，请参阅[使用日历](~/docs/standard/datetime/working-with-calendars.md)。</span><span class="sxs-lookup"><span data-stu-id="628be-107">For information about using the <xref:System.Globalization.GregorianCalendar> class and the other calendar classes in the .NET Framework, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md).</span></span>  
  
 <span data-ttu-id="628be-108">闰年公历日历中定义为一年，除非它是由 100 可被 4，整除。</span><span class="sxs-lookup"><span data-stu-id="628be-108">A leap year in the Gregorian calendar is defined as a year that is evenly divisible by 4, unless it is divisible by 100.</span></span> <span data-ttu-id="628be-109">但是，可被被 400 的年是闰年。</span><span class="sxs-lookup"><span data-stu-id="628be-109">However, years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="628be-110">例如，不 1900 年是闰年，但 2000 年。</span><span class="sxs-lookup"><span data-stu-id="628be-110">For example, the year 1900 was not a leap year, but the year 2000 was.</span></span> <span data-ttu-id="628be-111">平 365 年天并且初始屏幕闰年有 366 天。</span><span class="sxs-lookup"><span data-stu-id="628be-111">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="628be-112">公历具有 28 到 31 天的 12 个月： 年 1 月 （31 天）、 年 2 月 (28 或 29 天为单位)、 年 3 月 （31 天）、 年 4 月 （30 天）、 5 月 （31 天），年 6 月 （30 天）、 年 7 月 （31 天）、 年 8 月 （31 天）、 年 9 月 （30 天）、 年 10 月 （31 天），年 11 月 （30 天）和年 12 月 （31 天）。</span><span class="sxs-lookup"><span data-stu-id="628be-112">The Gregorian calendar has 12 months with 28 to 31 days each: January (31 days), February (28 or 29 days), March (31 days), April (30 days), May (31 days), June (30 days), July (31 days), August (31 days), September (30 days), October (31 days), November (30 days), and December (31 days).</span></span> <span data-ttu-id="628be-113">2 月有 29 天在闰年和 28 在平年。</span><span class="sxs-lookup"><span data-stu-id="628be-113">February has 29 days during leap years and 28 during common years.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="628be-114">默认情况下，所有<xref:System.DateTime>和<xref:System.DateTimeOffset>值 express 中公历日期和时间。</span><span class="sxs-lookup"><span data-stu-id="628be-114">By default, all <xref:System.DateTime> and <xref:System.DateTimeOffset> values express dates and times in the Gregorian calendar.</span></span>  
  
 <span data-ttu-id="628be-115">公历开发，作为罗马儒略历的替换 (这由<xref:System.Globalization.JulianCalendar>类) 和上 1582 年 10 月 15，首次引入中少量的区域性。</span><span class="sxs-lookup"><span data-stu-id="628be-115">The Gregorian calendar was developed as a replacement for the Julian calendar (which is represented by the <xref:System.Globalization.JulianCalendar> class) and was first introduced in a small number of cultures on October 15, 1582.</span></span> <span data-ttu-id="628be-116">当处理历史日期之前的公历的区域性的采用，应使用原始的日历，如果它是在.NET Framework 中可用。</span><span class="sxs-lookup"><span data-stu-id="628be-116">When working with historic dates that precede a culture's adoption of the Gregorian calendar, you should use the original calendar if it is available in the .NET Framework.</span></span> <span data-ttu-id="628be-117">例如，丹麦从更改罗马儒略历为公历日历年 2 月月 19 日 （在儒略历） 或 3 月 1 日 （公历） 中的 1700年上。</span><span class="sxs-lookup"><span data-stu-id="628be-117">For example, Denmark changed from the Julian calendar to the Gregorian calendar on February 19 (in the Julian calendar) or March 1 (in the Gregorian calendar) of 1700.</span></span> <span data-ttu-id="628be-118">在这种情况下，对于之前的采用公历日期，应使用罗马儒略历。</span><span class="sxs-lookup"><span data-stu-id="628be-118">In this case, for dates before the adoption of the Gregorian calendar, you should use the Julian calendar.</span></span> <span data-ttu-id="628be-119">但请注意任何区域性提供的内部支持<xref:System.Globalization.JulianCalendar>类。</span><span class="sxs-lookup"><span data-stu-id="628be-119">However, note that no culture offers intrinsic support for the <xref:System.Globalization.JulianCalendar> class.</span></span> <span data-ttu-id="628be-120">必须使用<xref:System.Globalization.JulianCalendar>作为独立日历类。</span><span class="sxs-lookup"><span data-stu-id="628be-120">You must use the <xref:System.Globalization.JulianCalendar> class as a standalone calendar.</span></span> <span data-ttu-id="628be-121">有关详细信息，请参阅。</span><span class="sxs-lookup"><span data-stu-id="628be-121">For more information, see .</span></span>  
  
 <span data-ttu-id="628be-122">下面的示例演示 1700 年 2 月 18，罗马儒略历，即罗马儒略历正式丹麦中使用的最后一天中为早于 1700 在公历日历年 3 月 1，一天。</span><span class="sxs-lookup"><span data-stu-id="628be-122">The following example illustrates that February 18, 1700 in the Julian calendar, which is the last day the Julian calendar was officially used in Denmark, is one day earlier than March 1, 1700 in the Gregorian calendar.</span></span>  
  
 [!code-csharp[System.Globalization.GregorianCalendar.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.gregoriancalendar.class/cs/minimum1.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.gregoriancalendar.class/vb/minimum1.vb#1)]  
  
 <span data-ttu-id="628be-123">每个<xref:System.Globalization.CultureInfo>支持一组的日历。</span><span class="sxs-lookup"><span data-stu-id="628be-123">Each <xref:System.Globalization.CultureInfo> supports a set of calendars.</span></span> <span data-ttu-id="628be-124"><xref:System.Globalization.CultureInfo.Calendar%2A>属性返回区域性的默认日历和<xref:System.Globalization.CultureInfo.OptionalCalendars%2A>属性返回一个包含所有支持的区域性的日历数组。</span><span class="sxs-lookup"><span data-stu-id="628be-124">The <xref:System.Globalization.CultureInfo.Calendar%2A> property returns the default calendar for the culture, and the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property returns an array containing all the calendars supported by the culture.</span></span> <span data-ttu-id="628be-125">若要更改使用的日历<xref:System.Globalization.CultureInfo>，应用程序可以设置<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>到新的属性<xref:System.Globalization.Calendar>。</span><span class="sxs-lookup"><span data-stu-id="628be-125">To change the calendar used by a <xref:System.Globalization.CultureInfo>, the application can set the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property to a new <xref:System.Globalization.Calendar>.</span></span>  
  
 <span data-ttu-id="628be-126"><xref:System.Globalization.DateTimeFormatInfo.GetEra%2A> 仅当忽略缩写的纪元名称中的标点<xref:System.Globalization.GregorianCalendar>中选择<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType>并且区域性使用"公元"</span><span class="sxs-lookup"><span data-stu-id="628be-126"><xref:System.Globalization.DateTimeFormatInfo.GetEra%2A> ignores punctuation in abbreviated era names, only if the <xref:System.Globalization.GregorianCalendar> is selected in <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> and the culture uses "A.D."</span></span> <span data-ttu-id="628be-127">作为纪元名称，即"公元"</span><span class="sxs-lookup"><span data-stu-id="628be-127">as the era name, that is, "A.D."</span></span> <span data-ttu-id="628be-128">等效于"AD"。</span><span class="sxs-lookup"><span data-stu-id="628be-128">is equivalent to "AD".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="628be-129">下面的代码示例演示<xref:System.Globalization.DateTimeFormatInfo>忽略纪元名称中的标点，只有当日历为公历并且区域性使用的纪元名称"公元"。</span><span class="sxs-lookup"><span data-stu-id="628be-129">The following code example shows that <xref:System.Globalization.DateTimeFormatInfo> ignores the punctuation in the era name, only if the calendar is Gregorian and the culture uses the era name "A.D.".</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/CPP/gregorian_getera.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/CS/gregorian_getera.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/VB/gregorian_getera.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.OptionalCalendars" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="628be-130">初始化 <see cref="T:System.Globalization.GregorianCalendar" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-130">Initializes a new instance of the <see cref="T:System.Globalization.GregorianCalendar" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GregorianCalendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GregorianCalendar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="628be-131">使用默认的 <see cref="T:System.Globalization.GregorianCalendar" /> 值初始化 <see cref="T:System.Globalization.GregorianCalendarTypes" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-131">Initializes a new instance of the <see cref="T:System.Globalization.GregorianCalendar" /> class using the default <see cref="T:System.Globalization.GregorianCalendarTypes" /> value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628be-132">默认值<xref:System.Globalization.GregorianCalendarTypes>值是<xref:System.Globalization.GregorianCalendarTypes.Localized>。</span><span class="sxs-lookup"><span data-stu-id="628be-132">The default <xref:System.Globalization.GregorianCalendarTypes> value is <xref:System.Globalization.GregorianCalendarTypes.Localized>.</span></span> <span data-ttu-id="628be-133">如果<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType>属性<xref:System.Globalization.CultureInfo>设置为<xref:System.Globalization.GregorianCalendar>创建使用此构造函数，与关联的语言中已本地化的日期和时间<xref:System.Globalization.CultureInfo>。</span><span class="sxs-lookup"><span data-stu-id="628be-133">If the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> property of the <xref:System.Globalization.CultureInfo> is set to a <xref:System.Globalization.GregorianCalendar> that is created with this constructor, the dates and times are localized in the language associated with the <xref:System.Globalization.CultureInfo>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="628be-134">下面的代码示例输出<xref:System.DateTime>使用<xref:System.Globalization.GregorianCalendar>的已本地化。</span><span class="sxs-lookup"><span data-stu-id="628be-134">The following code example prints a <xref:System.DateTime> using a <xref:System.Globalization.GregorianCalendar> that is localized.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendarLocalized#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarLocalized/CPP/gregorianlocalized.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendarLocalized#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarLocalized/CS/gregorianlocalized.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendarLocalized#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarLocalized/VB/gregorianlocalized.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.GregorianCalendarTypes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GregorianCalendar (System.Globalization.GregorianCalendarTypes type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Globalization.GregorianCalendarTypes type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.#ctor(System.Globalization.GregorianCalendarTypes)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As GregorianCalendarTypes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GregorianCalendar(System::Globalization::GregorianCalendarTypes type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Globalization.GregorianCalendarTypes" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="628be-135">
            <see cref="T:System.Globalization.GregorianCalendarTypes" /> 值，指示要创建的日历的语言版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-135">The <see cref="T:System.Globalization.GregorianCalendarTypes" /> value that denotes which language version of the calendar to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="628be-136">使用指定的 <see cref="T:System.Globalization.GregorianCalendar" /> 值初始化 <see cref="T:System.Globalization.GregorianCalendarTypes" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-136">Initializes a new instance of the <see cref="T:System.Globalization.GregorianCalendar" /> class using the specified <see cref="T:System.Globalization.GregorianCalendarTypes" /> value.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="628be-137">
            <paramref name="type" /> 不是 <see cref="T:System.Globalization.GregorianCalendarTypes" /> 枚举的成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-137">
              <paramref name="type" /> is not a member of the <see cref="T:System.Globalization.GregorianCalendarTypes" /> enumeration.</span>
          </span>
        </exception>
        <altmember cref="T:System.Globalization.GregorianCalendarTypes" />
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public override DateTime AddMonths (DateTime time, int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddMonths(valuetype System.DateTime time, int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.AddMonths(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddMonths (time As DateTime, months As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddMonths(DateTime time, int months);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="628be-138">将向其添加月数的 <see cref="T:System.DateTime" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-138">The <see cref="T:System.DateTime" /> to which to add months.</span>
          </span>
        </param>
        <param name="months">
          <span data-ttu-id="628be-139">要添加的月数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-139">The number of months to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="628be-140">返回与指定 <see cref="T:System.DateTime" /> 相距指定月数的 <see cref="T:System.DateTime" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-140">Returns a <see cref="T:System.DateTime" /> that is the specified number of months away from the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="628be-141">将指定月数添加到指定的 <see cref="T:System.DateTime" /> 中时得到的 <see cref="T:System.DateTime" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-141">The <see cref="T:System.DateTime" /> that results from adding the specified number of months to the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628be-142">日部分的生成<xref:System.DateTime>如果结果的日期不是有效的一天中生成月份影响。</span><span class="sxs-lookup"><span data-stu-id="628be-142">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="628be-143">它将更改为在生成每年的生成的每月最后一个有效的一天。</span><span class="sxs-lookup"><span data-stu-id="628be-143">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="628be-144">所生成的年份部分<xref:System.DateTime>如果外部的指定年，则结果月份受到<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="628be-144">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="628be-145">此实现支持仅当前纪元。</span><span class="sxs-lookup"><span data-stu-id="628be-145">This implementation supports only the current era.</span></span> <span data-ttu-id="628be-146">因此，<xref:System.ArgumentException>如果所得年份未指定纪元，将引发<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="628be-146">Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="628be-147">所生成的一天时间部分<xref:System.DateTime>保持与指定相同<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="628be-147">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="628be-148">例如，如果指定的月份是年 10 月，其中包含 31 天，指定的日期是该月第 31 天和的值`months`参数为 6，则结果年份是一个多个指定的年份，生成的月份是年 4 月，并生成 day 为 30 天，这是年 4 月的最后一天。</span><span class="sxs-lookup"><span data-stu-id="628be-148">For example, if the specified month is October, which has 31 days, the specified day is the 31st day of that month, and the value of the `months` parameter is 6, the resulting year is one more than the specified year, the resulting month is April, and the resulting day is the 30th day, which is the last day in April.</span></span>  
  
 <span data-ttu-id="628be-149">如果值`months`参数是负数，生成<xref:System.DateTime>早于指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="628be-149">If the value of the `months` parameter is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="628be-150"><xref:System.DateTime.Kind%2A>属性返回<xref:System.DateTime>值始终等于<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="628be-150">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="628be-151">您可以保留<xref:System.DateTime.Kind%2A>属性`time`通过调用的参数<xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType>方法，如以下示例所示。</span><span class="sxs-lookup"><span data-stu-id="628be-151">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]
 [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]  
  
   
  
## Examples  
 <span data-ttu-id="628be-152">下面的代码示例显示几个组成部分的值<xref:System.DateTime>根据公历。</span><span class="sxs-lookup"><span data-stu-id="628be-152">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CPP/gregoriancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CS/gregoriancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/VB/gregoriancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="628be-153">生成的 <see cref="T:System.DateTime" /> 超出了支持的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-153">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="628be-154">
            <paramref name="months" /> 小于 -120000。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-154">
              <paramref name="months" /> is less than -120000.</span>
          </span>
          <span data-ttu-id="628be-155">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-155">-or-</span>
          </span>
          <span data-ttu-id="628be-156">
            <paramref name="months" /> 大于 120000。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-156">
              <paramref name="months" /> is greater than 120000.</span>
          </span>
        </exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.GregorianCalendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public override DateTime AddYears (DateTime time, int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddYears(valuetype System.DateTime time, int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.AddYears(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddYears (time As DateTime, years As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddYears(DateTime time, int years);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="628be-157">将向其添加年数的 <see cref="T:System.DateTime" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-157">The <see cref="T:System.DateTime" /> to which to add years.</span>
          </span>
        </param>
        <param name="years">
          <span data-ttu-id="628be-158">要添加的年数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-158">The number of years to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="628be-159">返回与指定 <see cref="T:System.DateTime" /> 相距指定年数的 <see cref="T:System.DateTime" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-159">Returns a <see cref="T:System.DateTime" /> that is the specified number of years away from the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="628be-160">将指定年数添加到指定的 <see cref="T:System.DateTime" /> 中时得到的 <see cref="T:System.DateTime" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-160">The <see cref="T:System.DateTime" /> that results from adding the specified number of years to the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628be-161">日部分的生成<xref:System.DateTime>如果结果的日期不是有效的一天中生成月份影响。</span><span class="sxs-lookup"><span data-stu-id="628be-161">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="628be-162">它将更改为在生成每年的生成的每月最后一个有效的一天。</span><span class="sxs-lookup"><span data-stu-id="628be-162">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="628be-163">所生成的月份部分<xref:System.DateTime>保持与指定相同<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="628be-163">The month part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="628be-164">此实现支持仅当前纪元。</span><span class="sxs-lookup"><span data-stu-id="628be-164">This implementation supports only the current era.</span></span> <span data-ttu-id="628be-165">因此，<xref:System.ArgumentException>如果所得年份未指定纪元，将引发<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="628be-165">Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="628be-166">所生成的一天时间部分<xref:System.DateTime>保持与指定相同<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="628be-166">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="628be-167">例如，年 2 月有 28 天，但在闰年时它有 29 天。</span><span class="sxs-lookup"><span data-stu-id="628be-167">For example, February has 28 days, except during leap years when it has 29 days.</span></span> <span data-ttu-id="628be-168">如果指定的日期是闰年 2 月 29 日和的值`years`为 1，则结果日期将是第二中下一年的年 2 月 28 日。</span><span class="sxs-lookup"><span data-stu-id="628be-168">If the specified date is the 29th day of February in a leap year and the value of `years` is 1, the resulting date will be the 28th day of February in the following year.</span></span>  
  
 <span data-ttu-id="628be-169">如果`years`为负，生成<xref:System.DateTime>早于指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="628be-169">If `years` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="628be-170"><xref:System.DateTime.Kind%2A>属性返回<xref:System.DateTime>值始终等于<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="628be-170">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="628be-171">您可以保留<xref:System.DateTime.Kind%2A>属性`time`通过调用的参数<xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType>方法，如以下示例所示。</span><span class="sxs-lookup"><span data-stu-id="628be-171">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]
 [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]  
  
   
  
## Examples  
 <span data-ttu-id="628be-172">下面的代码示例显示几个组成部分的值<xref:System.DateTime>根据公历。</span><span class="sxs-lookup"><span data-stu-id="628be-172">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CPP/gregoriancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CS/gregoriancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/VB/gregoriancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="628be-173">生成的 <see cref="T:System.DateTime" /> 超出了支持的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-173">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span>
          </span>
        </exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.GregorianCalendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="ADEra">
      <MemberSignature Language="C#" Value="public const int ADEra = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ADEra = (1)" />
      <MemberSignature Language="DocId" Value="F:System.Globalization.GregorianCalendar.ADEra" />
      <MemberSignature Language="VB.NET" Value="Public Const ADEra As Integer  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: int ADEra = 1;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="628be-174">表示当前纪元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-174">Represents the current era.</span>
          </span>
          <span data-ttu-id="628be-175">此字段为常数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-175">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628be-176">公历日历识别两个纪元： 公元前</span><span class="sxs-lookup"><span data-stu-id="628be-176">The Gregorian calendar recognizes two eras: B.C.</span></span> <span data-ttu-id="628be-177">B.C.E.和公元或</span><span class="sxs-lookup"><span data-stu-id="628be-177">or B.C.E., and A.D.</span></span> <span data-ttu-id="628be-178">或基督纪元</span><span class="sxs-lookup"><span data-stu-id="628be-178">or C.E.</span></span> <span data-ttu-id="628be-179">此实现的<xref:System.Globalization.GregorianCalendar>类识别当前纪元 (A.D.</span><span class="sxs-lookup"><span data-stu-id="628be-179">This implementation of the <xref:System.Globalization.GregorianCalendar> class recognizes only the current era (A.D.</span></span> <span data-ttu-id="628be-180">或公元）。</span><span class="sxs-lookup"><span data-stu-id="628be-180">or C.E.).</span></span> <span data-ttu-id="628be-181">此字段始终返回 1。</span><span class="sxs-lookup"><span data-stu-id="628be-181">This field always returns 1.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.GregorianCalendar.Eras" />
      </Docs>
    </Member>
    <Member MemberName="AlgorithmType">
      <MemberSignature Language="C#" Value="public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarAlgorithmType AlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.GregorianCalendar.AlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AlgorithmType As CalendarAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CalendarAlgorithmType AlgorithmType { System::Globalization::CalendarAlgorithmType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="628be-182">获取一个值，该值指示当前日历是阳历、阴历还是二者的组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-182">Gets a value that indicates whether the current calendar is solar-based, lunar-based, or a combination of both.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="628be-183">始终返回 <see cref="F:System.Globalization.CalendarAlgorithmType.SolarCalendar" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-183">Always returns <see cref="F:System.Globalization.CalendarAlgorithmType.SolarCalendar" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="628be-184">下面的示例使用反射来实例化每个<xref:System.Globalization.Calendar>类型在.NET Framework 中找到并显示的值其<xref:System.Globalization.Calendar.AlgorithmType%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="628be-184">The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/cs/algorithmtype1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/vb/algorithmtype1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarType">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.GregorianCalendarTypes CalendarType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.GregorianCalendarTypes CalendarType" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.GregorianCalendar.CalendarType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CalendarType As GregorianCalendarTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::GregorianCalendarTypes CalendarType { System::Globalization::GregorianCalendarTypes get(); void set(System::Globalization::GregorianCalendarTypes value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.GregorianCalendarTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="628be-185">获取或设置 <see cref="T:System.Globalization.GregorianCalendarTypes" /> 值，该值指示当前 <see cref="T:System.Globalization.GregorianCalendar" /> 的语言版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-185">Gets or sets the <see cref="T:System.Globalization.GregorianCalendarTypes" /> value that denotes the language version of the current <see cref="T:System.Globalization.GregorianCalendar" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="628be-186">一个 <see cref="T:System.Globalization.GregorianCalendarTypes" /> 值，该值指示当前 <see cref="T:System.Globalization.GregorianCalendar" /> 的语言版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-186">A <see cref="T:System.Globalization.GregorianCalendarTypes" /> value that denotes the language version of the current <see cref="T:System.Globalization.GregorianCalendar" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="628be-187">下面的代码示例演示如何确定支持的区域性的 GregorianCalendar 语言版本。</span><span class="sxs-lookup"><span data-stu-id="628be-187">The following code example demonstrates how to determine the GregorianCalendar language version supported by the culture.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendarTypes#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarTypes/CPP/gregoriancalendartypes.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendarTypes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarTypes/CS/gregoriancalendartypes.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendarTypes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarTypes/VB/gregoriancalendartypes.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="628be-188">在设置操作中指定的值不是 <see cref="T:System.Globalization.GregorianCalendarTypes" /> 枚举的成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-188">The value specified in a set operation is not a member of the <see cref="T:System.Globalization.GregorianCalendarTypes" /> enumeration.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="628be-189">在设置操作中，当前实例是只读的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-189">In a set operation, the current instance is read-only.</span>
          </span>
        </exception>
        <altmember cref="T:System.Globalization.GregorianCalendarTypes" />
      </Docs>
    </Member>
    <Member MemberName="Eras">
      <MemberSignature Language="C#" Value="public override int[] Eras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] Eras" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.GregorianCalendar.Eras" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Eras As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;int&gt; ^ Eras { cli::array &lt;int&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="628be-190">获取 <see cref="T:System.Globalization.GregorianCalendar" /> 中的纪元列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-190">Gets the list of eras in the <see cref="T:System.Globalization.GregorianCalendar" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="628be-191">表示 <see cref="T:System.Globalization.GregorianCalendar" /> 中的纪元的整数数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-191">An array of integers that represents the eras in the <see cref="T:System.Globalization.GregorianCalendar" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628be-192">公历日历识别两个纪元： 公元前</span><span class="sxs-lookup"><span data-stu-id="628be-192">The Gregorian calendar recognizes two eras: B.C.</span></span> <span data-ttu-id="628be-193">B.C.E.和公元或</span><span class="sxs-lookup"><span data-stu-id="628be-193">or B.C.E., and A.D.</span></span> <span data-ttu-id="628be-194">或基督纪元</span><span class="sxs-lookup"><span data-stu-id="628be-194">or C.E.</span></span> <span data-ttu-id="628be-195">此实现的<xref:System.Globalization.GregorianCalendar>类识别当前纪元 (A.D.</span><span class="sxs-lookup"><span data-stu-id="628be-195">This implementation of the <xref:System.Globalization.GregorianCalendar> class recognizes only the current era (A.D.</span></span> <span data-ttu-id="628be-196">或公元）。</span><span class="sxs-lookup"><span data-stu-id="628be-196">or C.E.).</span></span> <span data-ttu-id="628be-197">此属性始终返回包含仅有一个元素的数组。</span><span class="sxs-lookup"><span data-stu-id="628be-197">This property always returns an array with only one element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.GregorianCalendar.ADEra" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfMonth">
      <MemberSignature Language="C#" Value="public override int GetDayOfMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.GetDayOfMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfMonth(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="628be-198">要读取的 <see cref="T:System.DateTime" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-198">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="628be-199">返回指定 <see cref="T:System.DateTime" /> 中的月中日期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-199">Returns the day of the month in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="628be-200">1 到 31 之间的一个整数，用于表示 <paramref name="time" /> 中的月中日期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-200">An integer from 1 to 31 that represents the day of the month in <paramref name="time" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="628be-201">下面的代码示例显示几个组成部分的值<xref:System.DateTime>根据公历。</span><span class="sxs-lookup"><span data-stu-id="628be-201">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CPP/gregoriancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CS/gregoriancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/VB/gregoriancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Day" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfWeek">
      <MemberSignature Language="C#" Value="public override DayOfWeek GetDayOfWeek (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DayOfWeek GetDayOfWeek(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.GetDayOfWeek(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfWeek (time As DateTime) As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DayOfWeek GetDayOfWeek(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="628be-202">要读取的 <see cref="T:System.DateTime" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-202">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="628be-203">返回指定 <see cref="T:System.DateTime" /> 中的周中日期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-203">Returns the day of the week in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="628be-204">一个 <see cref="T:System.DayOfWeek" /> 值，用于表示 <paramref name="time" /> 中的周中日期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-204">A <see cref="T:System.DayOfWeek" /> value that represents the day of the week in <paramref name="time" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628be-205"><xref:System.DayOfWeek>的值为星期一到星期日、 星期一、 星期二、 星期三、 星期四、 星期五、 之间。</span><span class="sxs-lookup"><span data-stu-id="628be-205">The <xref:System.DayOfWeek> values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, and Saturday.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="628be-206">下面的代码示例显示几个组成部分的值<xref:System.DateTime>根据公历。</span><span class="sxs-lookup"><span data-stu-id="628be-206">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CPP/gregoriancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CS/gregoriancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/VB/gregoriancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfWeek" />
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfYear">
      <MemberSignature Language="C#" Value="public override int GetDayOfYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.GetDayOfYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfYear(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="628be-207">要读取的 <see cref="T:System.DateTime" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-207">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="628be-208">返回指定 <see cref="T:System.DateTime" /> 中的日期是该年中的第几天。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-208">Returns the day of the year in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="628be-209">1 到 366 之间的一个整数，用于表示 <paramref name="time" /> 中的年中日期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-209">An integer from 1 to 366 that represents the day of the year in <paramref name="time" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628be-210">每年的日期被指从该年度的第一天的天数。</span><span class="sxs-lookup"><span data-stu-id="628be-210">The day of the year is defined as the number of days from the first day of the year.</span></span> <span data-ttu-id="628be-211">例如，<xref:System.Globalization.GregorianCalendar.GetDayOfYear%2A>对的第一个月的第一天返回 1，和<xref:System.Globalization.GregorianCalendar.GetDayOfYear%2A>上个月的最后一天返回该年中的天的总数，其中相同的值返回<xref:System.Globalization.GregorianCalendar.GetDaysInYear%2A>。</span><span class="sxs-lookup"><span data-stu-id="628be-211">For example, <xref:System.Globalization.GregorianCalendar.GetDayOfYear%2A> for the first day of the first month returns 1, and <xref:System.Globalization.GregorianCalendar.GetDayOfYear%2A> for the last day of the last month returns the total number of days in that year, which is the same value returned by <xref:System.Globalization.GregorianCalendar.GetDaysInYear%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="628be-212">下面的代码示例显示几个组成部分的值<xref:System.DateTime>根据公历。</span><span class="sxs-lookup"><span data-stu-id="628be-212">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CPP/gregoriancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CS/gregoriancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/VB/gregoriancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfYear" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public override int GetDaysInMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInMonth (year As Integer, month As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInMonth(int year, int month, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="628be-213">一个整数，用于表示年份。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-213">An integer that represents the year.</span>
          </span>
        </param>
        <param name="month">
          <span data-ttu-id="628be-214">1 到 12 之间的一个整数，用于表示月份。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-214">An integer from 1 to 12 that represents the month.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="628be-215">一个整数，用于表示纪元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-215">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="628be-216">返回指定纪元中指定年份的指定月份中的天数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-216">Returns the number of days in the specified month in the specified year in the specified era.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="628be-217">指定纪元中指定年份的指定月份中的天数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-217">The number of days in the specified month in the specified year in the specified era.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628be-218">例如，此方法返回 28 或 29，年 2 月 (`month` = 2)，具体取决于`year`是否为闰年。</span><span class="sxs-lookup"><span data-stu-id="628be-218">For example, this method returns 28 or 29 for February (`month` = 2), depending on whether `year` is a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="628be-219">下面的代码示例为每个五年中每个纪元中的第二个月份调用</span><span class="sxs-lookup"><span data-stu-id="628be-219">The following code example calls GetDaysInMonth for the second month in each of five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar.GetDaysInMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetDaysInMonth/CPP/gregoriancalendar_getdaysinmonth.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar.GetDaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetDaysInMonth/CS/gregoriancalendar_getdaysinmonth.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar.GetDaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetDaysInMonth/VB/gregoriancalendar_getdaysinmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="628be-220">
            <paramref name="era" /> 超出了日历支持的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-220">
              <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="628be-221">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-221">-or-</span>
          </span>
          <span data-ttu-id="628be-222">
            <paramref name="year" /> 超出了日历支持的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-222">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="628be-223">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-223">-or-</span>
          </span>
          <span data-ttu-id="628be-224">
            <paramref name="month" /> 超出了日历支持的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-224">
              <paramref name="month" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.GregorianCalendar.ADEra" />
        <altmember cref="P:System.Globalization.GregorianCalendar.Eras" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public override int GetDaysInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInYear(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="628be-225">一个整数，用于表示年份。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-225">An integer that represents the year.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="628be-226">一个整数，用于表示纪元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-226">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="628be-227">返回指定纪元中指定年份的天数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-227">Returns the number of days in the specified year in the specified era.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="628be-228">指定纪元中指定年份的天数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-228">The number of days in the specified year in the specified era.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628be-229">例如，此方法返回 365 或 366，具体取决于是否`year`是否为闰年。</span><span class="sxs-lookup"><span data-stu-id="628be-229">For example, this method returns 365 or 366, depending on whether `year` is a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="628be-230">下面的代码示例为每个纪元中的五年调用 GetDaysInYear。</span><span class="sxs-lookup"><span data-stu-id="628be-230">The following code example calls GetDaysInYear for five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar.GetDaysInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetDaysInYear/CPP/gregoriancalendar_getdaysinyear.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar.GetDaysInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetDaysInYear/CS/gregoriancalendar_getdaysinyear.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar.GetDaysInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetDaysInYear/VB/gregoriancalendar_getdaysinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="628be-231">
            <paramref name="era" /> 超出了日历支持的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-231">
              <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="628be-232">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-232">-or-</span>
          </span>
          <span data-ttu-id="628be-233">
            <paramref name="year" /> 超出了日历支持的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-233">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.GregorianCalendar.ADEra" />
        <altmember cref="P:System.Globalization.GregorianCalendar.Eras" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public override int GetEra (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEra(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.GetEra(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEra (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetEra(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="628be-234">要读取的 <see cref="T:System.DateTime" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-234">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="628be-235">返回指定 <see cref="T:System.DateTime" /> 中的纪元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-235">Returns the era in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="628be-236">一个整数，用于表示 <paramref name="time" /> 中的纪元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-236">An integer that represents the era in <paramref name="time" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628be-237">公历日历识别两个纪元： 公元前</span><span class="sxs-lookup"><span data-stu-id="628be-237">The Gregorian calendar recognizes two eras: B.C.</span></span> <span data-ttu-id="628be-238">B.C.E.和公元或</span><span class="sxs-lookup"><span data-stu-id="628be-238">or B.C.E., and A.D.</span></span> <span data-ttu-id="628be-239">或基督纪元</span><span class="sxs-lookup"><span data-stu-id="628be-239">or C.E.</span></span> <span data-ttu-id="628be-240">此实现的<xref:System.Globalization.GregorianCalendar>类识别当前纪元 (A.D.</span><span class="sxs-lookup"><span data-stu-id="628be-240">This implementation of the <xref:System.Globalization.GregorianCalendar> class recognizes only the current era (A.D.</span></span> <span data-ttu-id="628be-241">或公元）。</span><span class="sxs-lookup"><span data-stu-id="628be-241">or C.E.).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="628be-242">下面的代码示例显示几个组成部分的值<xref:System.DateTime>根据公历。</span><span class="sxs-lookup"><span data-stu-id="628be-242">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CPP/gregoriancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CS/gregoriancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/VB/gregoriancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.GregorianCalendar.ADEra" />
        <altmember cref="P:System.Globalization.GregorianCalendar.Eras" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public override int GetLeapMonth (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLeapMonth(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.GetLeapMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLeapMonth (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetLeapMonth(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="628be-243">年份。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-243">A year.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="628be-244">纪元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-244">An era.</span>
          </span>
          <span data-ttu-id="628be-245">指定 <see cref="F:System.Globalization.GregorianCalendar.ADEra" /> 或 <see langword="GregorianCalendar.Eras[Calendar.CurrentEra]" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-245">Specify either <see cref="F:System.Globalization.GregorianCalendar.ADEra" /> or <see langword="GregorianCalendar.Eras[Calendar.CurrentEra]" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="628be-246">计算指定纪元年份的闰月。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-246">Calculates the leap month for a specified year and era.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="628be-247">总为 0，因为公历无法识别闰月。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-247">Always 0 because the Gregorian calendar does not recognize leap months.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="628be-248">
            <paramref name="year" /> 小于公历 1 年或大于公历 9999 年。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-248">
              <paramref name="year" /> is less than the Gregorian calendar year 1 or greater than the Gregorian calendar year 9999.</span>
          </span>
          <span data-ttu-id="628be-249">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-249">-or-</span>
          </span>
          <span data-ttu-id="628be-250">
            <paramref name="era" /> 不是 <see cref="F:System.Globalization.GregorianCalendar.ADEra" /> 或 <see langword="GregorianCalendar.Eras[Calendar.CurrentEra]" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-250">
              <paramref name="era" /> is not <see cref="F:System.Globalization.GregorianCalendar.ADEra" /> or <see langword="GregorianCalendar.Eras[Calendar.CurrentEra]" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonth">
      <MemberSignature Language="C#" Value="public override int GetMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.GetMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonth(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="628be-251">要读取的 <see cref="T:System.DateTime" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-251">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="628be-252">返回指定 <see cref="T:System.DateTime" /> 中的月份。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-252">Returns the month in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="628be-253">1 到 12 之间的一个整数，用于表示 <paramref name="time" /> 中的月份。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-253">An integer from 1 to 12 that represents the month in <paramref name="time" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="628be-254">下面的代码示例显示几个组成部分的值<xref:System.DateTime>根据公历。</span><span class="sxs-lookup"><span data-stu-id="628be-254">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CPP/gregoriancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CS/gregoriancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/VB/gregoriancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Month" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public override int GetMonthsInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonthsInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonthsInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonthsInYear(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="628be-255">一个整数，用于表示年份。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-255">An integer that represents the year.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="628be-256">一个整数，用于表示纪元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-256">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="628be-257">返回指定纪元中指定年份的月数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-257">Returns the number of months in the specified year in the specified era.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="628be-258">指定纪元中指定年份的月数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-258">The number of months in the specified year in the specified era.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="628be-259">下面的代码示例为每个纪元中的五年调用 GetMonthsInYear。</span><span class="sxs-lookup"><span data-stu-id="628be-259">The following code example calls GetMonthsInYear for five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar.GetMonthsInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetMonthsInYear/CPP/gregoriancalendar_getmonthsinyear.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar.GetMonthsInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetMonthsInYear/CS/gregoriancalendar_getmonthsinyear.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar.GetMonthsInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetMonthsInYear/VB/gregoriancalendar_getmonthsinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="628be-260">
            <paramref name="era" /> 超出了日历支持的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-260">
              <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="628be-261">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-261">-or-</span>
          </span>
          <span data-ttu-id="628be-262">
            <paramref name="year" /> 超出了日历支持的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-262">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.GregorianCalendar.ADEra" />
        <altmember cref="P:System.Globalization.GregorianCalendar.Eras" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDaysInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetYear">
      <MemberSignature Language="C#" Value="public override int GetYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.GetYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetYear(DateTime time);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="628be-263">要读取的 <see cref="T:System.DateTime" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-263">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="628be-264">返回指定 <see cref="T:System.DateTime" /> 中的年份。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-264">Returns the year in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="628be-265">一个整数，用于表示 <paramref name="time" /> 中的年份。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-265">An integer that represents the year in <paramref name="time" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="628be-266">下面的代码示例显示几个组成部分的值<xref:System.DateTime>根据公历。</span><span class="sxs-lookup"><span data-stu-id="628be-266">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CPP/gregoriancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/CS/gregoriancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_AddGet/VB/gregoriancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Year" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public override bool IsLeapDay (int year, int month, int day, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapDay(int32 year, int32 month, int32 day, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapDay (year As Integer, month As Integer, day As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapDay(int year, int month, int day, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="628be-267">一个整数，用于表示年份。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-267">An integer that represents the year.</span>
          </span>
        </param>
        <param name="month">
          <span data-ttu-id="628be-268">1 到 12 之间的一个整数，用于表示月份。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-268">An integer from 1 to 12 that represents the month.</span>
          </span>
        </param>
        <param name="day">
          <span data-ttu-id="628be-269">1 到 31 之间的一个整数，用于表示天。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-269">An integer from 1 to 31 that represents the day.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="628be-270">一个整数，用于表示纪元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-270">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="628be-271">确定指定纪元中的指定日期是否为闰日。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-271">Determines whether the specified date in the specified era is a leap day.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="628be-272">如果指定的日期是闰日，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-272">
              <see langword="true" /> if the specified day is a leap day; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628be-273">在公历日历闰年中，被指由 4 个，但如果它是由 100 可除外的整除的年份。</span><span class="sxs-lookup"><span data-stu-id="628be-273">A leap year in the Gregorian calendar is defined as a year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="628be-274">但是，可被被 400 的年是闰年。</span><span class="sxs-lookup"><span data-stu-id="628be-274">However, years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="628be-275">例如，不 1900 年是闰年，但 2000 年。</span><span class="sxs-lookup"><span data-stu-id="628be-275">For example, the year 1900 was not a leap year, but the year 2000 was.</span></span> <span data-ttu-id="628be-276">平 365 年天并且初始屏幕闰年有 366 天。</span><span class="sxs-lookup"><span data-stu-id="628be-276">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="628be-277">闰日是仅在闰年中发生了一天。</span><span class="sxs-lookup"><span data-stu-id="628be-277">A leap day is a day that occurs only in a leap year.</span></span> <span data-ttu-id="628be-278">在公历日历的年 2 月 29 日是唯一的闰日。</span><span class="sxs-lookup"><span data-stu-id="628be-278">In the Gregorian calendar, the 29th day of February is the only leap day.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="628be-279">下面的代码示例调用每个纪元五年中第二个月 （年 2 月） 的最后一天 IsLeapDay。</span><span class="sxs-lookup"><span data-stu-id="628be-279">The following code example calls IsLeapDay for the last day of the second month (February) for five years in each of the eras.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar.IsLeapDay#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.IsLeapDay/CPP/gregoriancalendar_isleapday.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar.IsLeapDay#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.IsLeapDay/CS/gregoriancalendar_isleapday.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar.IsLeapDay#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.IsLeapDay/VB/gregoriancalendar_isleapday.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="628be-280">
            <paramref name="era" /> 超出了日历支持的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-280">
              <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="628be-281">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-281">-or-</span>
          </span>
          <span data-ttu-id="628be-282">
            <paramref name="year" /> 超出了日历支持的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-282">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="628be-283">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-283">-or-</span>
          </span>
          <span data-ttu-id="628be-284">
            <paramref name="month" /> 超出了日历支持的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-284">
              <paramref name="month" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="628be-285">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-285">-or-</span>
          </span>
          <span data-ttu-id="628be-286">
            <paramref name="day" /> 超出了日历支持的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-286">
              <paramref name="day" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.GregorianCalendar.ADEra" />
        <altmember cref="P:System.Globalization.GregorianCalendar.Eras" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public override bool IsLeapMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapMonth (year As Integer, month As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapMonth(int year, int month, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="628be-287">一个整数，用于表示年份。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-287">An integer that represents the year.</span>
          </span>
        </param>
        <param name="month">
          <span data-ttu-id="628be-288">1 到 12 之间的一个整数，用于表示月份。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-288">An integer from 1 to 12 that represents the month.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="628be-289">一个整数，用于表示纪元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-289">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="628be-290">确定指定纪元中指定年份的指定月份是否为闰月。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-290">Determines whether the specified month in the specified year in the specified era is a leap month.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="628be-291">除非被派生类重写，否则此方法始终返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-291">This method always returns <see langword="false" />, unless overridden by a derived class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628be-292">在公历日历闰年中，被指由 4 个，但如果它是由 100 可除外的整除的年份。</span><span class="sxs-lookup"><span data-stu-id="628be-292">A leap year in the Gregorian calendar is defined as a year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="628be-293">但是，可被被 400 的年是闰年。</span><span class="sxs-lookup"><span data-stu-id="628be-293">However, years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="628be-294">例如，不 1900 年是闰年，但 2000 年。</span><span class="sxs-lookup"><span data-stu-id="628be-294">For example, the year 1900 was not a leap year, but the year 2000 was.</span></span> <span data-ttu-id="628be-295">平 365 年天并且初始屏幕闰年有 366 天。</span><span class="sxs-lookup"><span data-stu-id="628be-295">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="628be-296">闰月是仅在闰年中发生的整月。</span><span class="sxs-lookup"><span data-stu-id="628be-296">A leap month is an entire month that occurs only in a leap year.</span></span> <span data-ttu-id="628be-297">公历没有闰月。</span><span class="sxs-lookup"><span data-stu-id="628be-297">The Gregorian calendar does not have any leap months.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="628be-298">以下代码示例调用 IsLeapMonth 当前纪元中的五年中的所有每月。</span><span class="sxs-lookup"><span data-stu-id="628be-298">The following code example calls IsLeapMonth for all the months in five years in the current era.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar.IsLeapMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.IsLeapMonth/CPP/gregoriancalendar_isleapmonth.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar.IsLeapMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.IsLeapMonth/CS/gregoriancalendar_isleapmonth.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar.IsLeapMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.IsLeapMonth/VB/gregoriancalendar_isleapmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="628be-299">
            <paramref name="era" /> 超出了日历支持的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-299">
              <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="628be-300">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-300">-or-</span>
          </span>
          <span data-ttu-id="628be-301">
            <paramref name="year" /> 超出了日历支持的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-301">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="628be-302">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-302">-or-</span>
          </span>
          <span data-ttu-id="628be-303">
            <paramref name="month" /> 超出了日历支持的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-303">
              <paramref name="month" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.GregorianCalendar.ADEra" />
        <altmember cref="P:System.Globalization.GregorianCalendar.Eras" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public override bool IsLeapYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.IsLeapYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapYear (year As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapYear(int year, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="628be-304">一个整数，用于表示年份。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-304">An integer that represents the year.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="628be-305">一个整数，用于表示纪元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-305">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="628be-306">确定指定纪元中的指定年份是否为闰年。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-306">Determines whether the specified year in the specified era is a leap year.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="628be-307">如果指定的年是闰年，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-307">
              <see langword="true" /> if the specified year is a leap year; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628be-308">在公历日历闰年中，被指由 4 个，但如果它是由 100 可除外的整除的年份。</span><span class="sxs-lookup"><span data-stu-id="628be-308">A leap year in the Gregorian calendar is defined as a year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="628be-309">但是，可被被 400 的年是闰年。</span><span class="sxs-lookup"><span data-stu-id="628be-309">However, years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="628be-310">例如，不 1900 年是闰年，但 2000 年。</span><span class="sxs-lookup"><span data-stu-id="628be-310">For example, the year 1900 was not a leap year, but the year 2000 was.</span></span> <span data-ttu-id="628be-311">平 365 年天并且初始屏幕闰年有 366 天。</span><span class="sxs-lookup"><span data-stu-id="628be-311">A common year has 365 days and a leap year has 366 days.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="628be-312">下面的代码示例调用 IsLeapYear 为五年中每个纪元。</span><span class="sxs-lookup"><span data-stu-id="628be-312">The following code example calls IsLeapYear for five years in each of the eras.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar.IsLeapYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.IsLeapYear/CPP/gregoriancalendar_isleapyear.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar.IsLeapYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.IsLeapYear/CS/gregoriancalendar_isleapyear.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar.IsLeapYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.IsLeapYear/VB/gregoriancalendar_isleapyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="628be-313">
            <paramref name="era" /> 超出了日历支持的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-313">
              <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="628be-314">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-314">-or-</span>
          </span>
          <span data-ttu-id="628be-315">
            <paramref name="year" /> 超出了日历支持的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-315">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.GregorianCalendar.ADEra" />
        <altmember cref="P:System.Globalization.GregorianCalendar.Eras" />
        <altmember cref="M:System.Globalization.GregorianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MaxSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MaxSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.GregorianCalendar.MaxSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MaxSupportedDateTime { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="628be-316">获取 <see cref="T:System.Globalization.GregorianCalendar" /> 类型支持的最晚日期和时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-316">Gets the latest date and time supported by the <see cref="T:System.Globalization.GregorianCalendar" /> type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="628be-317">最新的日期和时间受<see cref="T:System.Globalization.GregorianCalendar" />类型，即的那一刻年 12 月 31 日公元 9999 年</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-317">The latest date and time supported by the <see cref="T:System.Globalization.GregorianCalendar" /> type, which is the last moment of December 31, 9999 C.E.</span>
          </span>
          <span data-ttu-id="628be-318">它等效于<see cref="F:System.DateTime.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-318">and is equivalent to <see cref="F:System.DateTime.MaxValue" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="628be-319">下面的代码示例获取的最小值和日历的最大值。</span><span class="sxs-lookup"><span data-stu-id="628be-319">The following code example gets the minimum value and the maximum value of the calendar.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_MinMax/CPP/gregoriancalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_MinMax/CS/gregoriancalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_MinMax/VB/gregoriancalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MinSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.GregorianCalendar.MinSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MinSupportedDateTime { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="628be-320">获取 <see cref="T:System.Globalization.GregorianCalendar" /> 类型支持的最早日期和时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-320">Gets the earliest date and time supported by the <see cref="T:System.Globalization.GregorianCalendar" /> type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="628be-321">最早的日期和时间受<see cref="T:System.Globalization.GregorianCalendar" />类型，即的那一刻 1 月 1 日公元 0001 年</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-321">The earliest date and time supported by the <see cref="T:System.Globalization.GregorianCalendar" /> type, which is the first moment of January 1, 0001 C.E.</span>
          </span>
          <span data-ttu-id="628be-322">它等效于<see cref="F:System.DateTime.MinValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-322">and is equivalent to <see cref="F:System.DateTime.MinValue" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628be-323">尽管的值<xref:System.Globalization.GregorianCalendar.MinSupportedDateTime%2A>属性为的那一刻 1 月 1 日公元 0001 年，公历日历不引入之前 1582，年 10 月 15，并且其采用在欧洲 continent 和全球整个速度太慢。</span><span class="sxs-lookup"><span data-stu-id="628be-323">Although the value of the <xref:System.Globalization.GregorianCalendar.MinSupportedDateTime%2A> property is the first moment of January 1, 0001 C.E., the Gregorian calendar was not introduced until October 15, 1582, and its adoption throughout the European continent and worldwide was slow.</span></span> <span data-ttu-id="628be-324">大多数区域以欧洲、 American 和澳大利亚洲直到它们采用公历，使用儒略历，由表示<xref:System.Globalization.JulianCalendar>类。</span><span class="sxs-lookup"><span data-stu-id="628be-324">Until they adopted the Gregorian calendar, most cultures in the European, American, and Australian continents used the Julian calendar, which is represented by the <xref:System.Globalization.JulianCalendar> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="628be-325">下面的代码示例获取的最小值和日历的最大值。</span><span class="sxs-lookup"><span data-stu-id="628be-325">The following code example gets the minimum value and the maximum value of the calendar.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_MinMax/CPP/gregoriancalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_MinMax/CS/gregoriancalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar_MinMax/VB/gregoriancalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToDateTime (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="628be-326">一个整数，用于表示年份。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-326">An integer that represents the year.</span>
          </span>
        </param>
        <param name="month">
          <span data-ttu-id="628be-327">1 到 12 之间的一个整数，用于表示月份。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-327">An integer from 1 to 12 that represents the month.</span>
          </span>
        </param>
        <param name="day">
          <span data-ttu-id="628be-328">1 到 31 之间的一个整数，用于表示天。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-328">An integer from 1 to 31 that represents the day.</span>
          </span>
        </param>
        <param name="hour">
          <span data-ttu-id="628be-329">0 到 23 之间的一个整数，用于表示小时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-329">An integer from 0 to 23 that represents the hour.</span>
          </span>
        </param>
        <param name="minute">
          <span data-ttu-id="628be-330">0 到 59 之间的一个整数，用于表示分钟。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-330">An integer from 0 to 59 that represents the minute.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="628be-331">0 到 59 之间的一个整数，用于表示秒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-331">An integer from 0 to 59 that represents the second.</span>
          </span>
        </param>
        <param name="millisecond">
          <span data-ttu-id="628be-332">0 到 999 之间的一个整数，用于表示毫秒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-332">An integer from 0 to 999 that represents the millisecond.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="628be-333">一个整数，用于表示纪元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-333">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="628be-334">返回设置为指定纪元中指定日期和时间的 <see cref="T:System.DateTime" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-334">Returns a <see cref="T:System.DateTime" /> that is set to the specified date and time in the specified era.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="628be-335">设置为当前纪元中指定日期和时间的 <see cref="T:System.DateTime" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-335">The <see cref="T:System.DateTime" /> that is set to the specified date and time in the current era.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="628be-336">
            <paramref name="era" /> 超出了日历支持的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-336">
              <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="628be-337">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-337">-or-</span>
          </span>
          <span data-ttu-id="628be-338">
            <paramref name="year" /> 超出了日历支持的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-338">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="628be-339">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-339">-or-</span>
          </span>
          <span data-ttu-id="628be-340">
            <paramref name="month" /> 超出了日历支持的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-340">
              <paramref name="month" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="628be-341">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-341">-or-</span>
          </span>
          <span data-ttu-id="628be-342">
            <paramref name="day" /> 超出了日历支持的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-342">
              <paramref name="day" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="628be-343">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-343">-or-</span>
          </span>
          <span data-ttu-id="628be-344">
            <paramref name="hour" /> 小于 0 或大于 23。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-344">
              <paramref name="hour" /> is less than zero or greater than 23.</span>
          </span>
          <span data-ttu-id="628be-345">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-345">-or-</span>
          </span>
          <span data-ttu-id="628be-346">
            <paramref name="minute" /> 小于 0 或大于 59。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-346">
              <paramref name="minute" /> is less than zero or greater than 59.</span>
          </span>
          <span data-ttu-id="628be-347">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-347">-or-</span>
          </span>
          <span data-ttu-id="628be-348">
            <paramref name="second" /> 小于 0 或大于 59。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-348">
              <paramref name="second" /> is less than zero or greater than 59.</span>
          </span>
          <span data-ttu-id="628be-349">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-349">-or-</span>
          </span>
          <span data-ttu-id="628be-350">
            <paramref name="millisecond" /> 小于 0 或大于 999。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-350">
              <paramref name="millisecond" /> is less than zero or greater than 999.</span>
          </span>
        </exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.GregorianCalendar.ADEra" />
        <altmember cref="P:System.Globalization.GregorianCalendar.Eras" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.GregorianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToFourDigitYear">
      <MemberSignature Language="C#" Value="public override int ToFourDigitYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ToFourDigitYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.GregorianCalendar.ToFourDigitYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToFourDigitYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ToFourDigitYear(int year);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="628be-351">一个两位数或四位数的整数，用于表示要转换的年份。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-351">A two-digit or four-digit integer that represents the year to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="628be-352">使用 <see cref="P:System.Globalization.GregorianCalendar.TwoDigitYearMax" /> 属性将指定的年份转换为四位数年份，以确定相应的纪元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-352">Converts the specified year to a four-digit year by using the <see cref="P:System.Globalization.GregorianCalendar.TwoDigitYearMax" /> property to determine the appropriate century.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="628be-353">包含 <paramref name="year" /> 的四位数表示形式的整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-353">An integer that contains the four-digit representation of <paramref name="year" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628be-354"><xref:System.Globalization.GregorianCalendar.TwoDigitYearMax%2A> 是可以用两位数年份表示的 100 年范围内的最后一年。</span><span class="sxs-lookup"><span data-stu-id="628be-354"><xref:System.Globalization.GregorianCalendar.TwoDigitYearMax%2A> is the last year in the 100-year range that can be represented by a two-digit year.</span></span> <span data-ttu-id="628be-355">通过查找两位数字的唯一匹配项来确定世纪`year`该 100 年范围内。</span><span class="sxs-lookup"><span data-stu-id="628be-355">The century is determined by finding the sole occurrence of the two-digit `year` within that 100-year range.</span></span> <span data-ttu-id="628be-356">例如，如果<xref:System.Globalization.GregorianCalendar.TwoDigitYearMax%2A>设置为 2029，则 100 年范围是从 1930年为 2029年。</span><span class="sxs-lookup"><span data-stu-id="628be-356">For example, if <xref:System.Globalization.GregorianCalendar.TwoDigitYearMax%2A> is set to 2029, the 100-year range is from 1930 to 2029.</span></span> <span data-ttu-id="628be-357">因此，为 30 的 2 位值被解释为 1930，而 29 一个 2 位数字值被解释为 2029年。</span><span class="sxs-lookup"><span data-stu-id="628be-357">Therefore, a 2-digit value of 30 is interpreted as 1930, while a 2-digit value of 29 is interpreted as 2029.</span></span>  
  
 <span data-ttu-id="628be-358"><xref:System.Globalization.GregorianCalendar.ToFourDigitYear%2A> 支持两位数年份或四位数年份。</span><span class="sxs-lookup"><span data-stu-id="628be-358"><xref:System.Globalization.GregorianCalendar.ToFourDigitYear%2A> supports either a two-digit year or a four-digit year.</span></span> <span data-ttu-id="628be-359">将两位数年份值 (小于 100) 传递会导致方法的值转换为一个四位数字值根据<xref:System.Globalization.GregorianCalendar.TwoDigitYearMax%2A>值，该值表示相应的纪元。</span><span class="sxs-lookup"><span data-stu-id="628be-359">Passing a two-digit year value (less than 100) causes the method to convert the value to a four-digit value according to the <xref:System.Globalization.GregorianCalendar.TwoDigitYearMax%2A> value representing the appropriate century.</span></span> <span data-ttu-id="628be-360">如果应用程序提供在支持的日历范围到内的四位数年份值<xref:System.Globalization.GregorianCalendar.ToFourDigitYear%2A>，该方法返回实际的输入的值。</span><span class="sxs-lookup"><span data-stu-id="628be-360">If the application supplies a four-digit year value that is within the supported calendar range to <xref:System.Globalization.GregorianCalendar.ToFourDigitYear%2A>, the method returns the actual input value.</span></span> <span data-ttu-id="628be-361">如果应用程序提供一个四位数字值超出了支持的日历，或者它提供了负值，则该方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="628be-361">If the application supplies a four-digit value that is outside the supported calendar range, or if it supplies a negative value, the method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="628be-362">
            <paramref name="year" /> 超出了日历支持的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-362">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.GregorianCalendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="TwoDigitYearMax">
      <MemberSignature Language="C#" Value="public override int TwoDigitYearMax { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TwoDigitYearMax" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.GregorianCalendar.TwoDigitYearMax" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TwoDigitYearMax As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TwoDigitYearMax { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="628be-363">获取或设置可以用两位数年份表示的 100 年范围内的最后一年。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-363">Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="628be-364">可以用两位数年份表示的 100 年范围内的最后一年。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-364">The last year of a 100-year range that can be represented by a 2-digit year.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="628be-365">此属性允许两位数年份，要正确转换为 4 位数年份。</span><span class="sxs-lookup"><span data-stu-id="628be-365">This property allows a 2-digit year to be properly translated to a 4-digit year.</span></span> <span data-ttu-id="628be-366">例如，如果此属性设置为 2029年，100 年范围是从 1930年为 2029年。</span><span class="sxs-lookup"><span data-stu-id="628be-366">For example, if this property is set to 2029, the 100-year range is from 1930 to 2029.</span></span> <span data-ttu-id="628be-367">因此，为 30 的 2 位值被解释为 1930，而 29 一个 2 位数字值被解释为 2029年。</span><span class="sxs-lookup"><span data-stu-id="628be-367">Therefore, a 2-digit value of 30 is interpreted as 1930, while a 2-digit value of 29 is interpreted as 2029.</span></span>  
  
 <span data-ttu-id="628be-368">此属性的初始值被派生自控制面板的区域和语言选项部分中的设置。</span><span class="sxs-lookup"><span data-stu-id="628be-368">The initial value of this property is derived from the settings in the regional and language options portion of Control Panel.</span></span> <span data-ttu-id="628be-369">但是，该信息可以更改的生命周期内<xref:System.AppDomain>。</span><span class="sxs-lookup"><span data-stu-id="628be-369">However, that information can change during the life of the <xref:System.AppDomain>.</span></span> <span data-ttu-id="628be-370"><xref:System.Globalization.GregorianCalendar>类不会检测系统设置中的更改自动。</span><span class="sxs-lookup"><span data-stu-id="628be-370">The <xref:System.Globalization.GregorianCalendar> class does not detect changes in the system settings automatically.</span></span>  
  
 <span data-ttu-id="628be-371">应用程序应将此值设置为 99，以指示按字面解释 2 位数字的年份。</span><span class="sxs-lookup"><span data-stu-id="628be-371">The application should set this value to 99 to indicate that 2-digit years are to be taken literally.</span></span> <span data-ttu-id="628be-372">例如，如果此属性设置为 99，100 年范围为 0 （不是有效值对于大多数日历而言） 和 99 之间。</span><span class="sxs-lookup"><span data-stu-id="628be-372">For example, if this property is set to 99, the 100-year range is from 0 (not a valid value for most calendars) to 99.</span></span> <span data-ttu-id="628be-373">因此，为 30 的 2 位值被解释为 30。</span><span class="sxs-lookup"><span data-stu-id="628be-373">Therefore, a 2-digit value of 30 is interpreted as 30.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="628be-374">为设置操作指定的值小于 99。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-374">The value specified in a set operation is less than 99.</span>
          </span>
          <span data-ttu-id="628be-375">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-375">-or-</span>
          </span>
          <span data-ttu-id="628be-376">为设置操作指定的值大于 <see langword="MaxSupportedDateTime.Year" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-376">The value specified in a set operation is greater than <see langword="MaxSupportedDateTime.Year" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="628be-377">在设置操作中，当前实例是只读的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="628be-377">In a set operation, the current instance is read-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.Globalization.GregorianCalendar.ToFourDigitYear(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>