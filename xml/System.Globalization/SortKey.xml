<Type Name="SortKey" FullName="System.Globalization.SortKey">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="402e16fd3f99ddc42de49f426774f1f141d44c8d" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37759459" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SortKey" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable beforefieldinit SortKey extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.SortKey" />
  <TypeSignature Language="VB.NET" Value="Public Class SortKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class SortKey" />
  <TypeSignature Language="F#" Value="type SortKey = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="89bf5-101">Represents the result of mapping a string to its sort key.</span>
      <span class="sxs-lookup">
        <span data-stu-id="89bf5-101">Represents the result of mapping a string to its sort key.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89bf5-102">两个字符串的区分区域性的比较取决于在具有多个类别的排序权重，包括语言、 字母、 字符串中的每个字符大小写和音调符号权重。</span><span class="sxs-lookup"><span data-stu-id="89bf5-102">A culture-sensitive comparison of two strings depends on each character in the strings having several categories of sort weights, including script, alphabetic, case, and diacritic weights.</span></span> <span data-ttu-id="89bf5-103">排序关键字可用作特定字符串这些权重的存储库。</span><span class="sxs-lookup"><span data-stu-id="89bf5-103">A sort key serves as the repository of these weights for a particular string.</span></span>  
  
 <span data-ttu-id="89bf5-104"><xref:System.Globalization.CompareInfo.GetSortKey%2A?displayProperty=nameWithType> 方法返回 <xref:System.Globalization.SortKey> 类的实例，它反映指定字符串中字符的区分区域性的映射。</span><span class="sxs-lookup"><span data-stu-id="89bf5-104">The <xref:System.Globalization.CompareInfo.GetSortKey%2A?displayProperty=nameWithType> method returns an instance of the <xref:System.Globalization.SortKey> class that reflects the culture-sensitive mapping of characters in a specified string.</span></span> <span data-ttu-id="89bf5-105">值<xref:System.Globalization.SortKey>对象是其关键数据，返回的<xref:System.Globalization.SortKey.KeyData%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="89bf5-105">The value of a <xref:System.Globalization.SortKey> object is its key data, which is returned by the <xref:System.Globalization.SortKey.KeyData%2A> property.</span></span> <span data-ttu-id="89bf5-106">此键的数据包含的一系列字节进行编码的字符串、 特定于区域性的排序规则和用户指定的比较选项。</span><span class="sxs-lookup"><span data-stu-id="89bf5-106">This key data consists of a series of bytes that encode the string, culture-specific sorting rules, and user-specified comparison options.</span></span> <span data-ttu-id="89bf5-107">使用排序关键字的比较包含，每个排序键中的相应密钥数据的按位比较。</span><span class="sxs-lookup"><span data-stu-id="89bf5-107">A comparison using sort keys consists of a bitwise comparison of the corresponding key data in each sort key.</span></span>  <span data-ttu-id="89bf5-108">例如，如果您通过调用带 <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29> 的值的 <xref:System.Globalization.CompareOptions.IgnoreCase?displayProperty=nameWithType> 方法来创建一个排序键，则使用该排序键的字符串比较运算不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="89bf5-108">For example, if you create a sort key by calling the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29> method with a value of <xref:System.Globalization.CompareOptions.IgnoreCase?displayProperty=nameWithType>, a string comparison operation that uses the sort key is case-insensitive.</span></span>  
  
 <span data-ttu-id="89bf5-109">在创建字符串的排序键之后，可通过调用静态 <xref:System.Globalization.SortKey.Compare%2A?displayProperty=nameWithType> 方法比较排序键。</span><span class="sxs-lookup"><span data-stu-id="89bf5-109">After you create a sort key for a string, you compare sort keys by calling the static <xref:System.Globalization.SortKey.Compare%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="89bf5-110">此方法执行简单的逐字节比较，因此它比 <xref:System.String.Compare%2A?displayProperty=nameWithType> 或 <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> 方法的速度快得多。</span><span class="sxs-lookup"><span data-stu-id="89bf5-110">This method performs a simple byte-by-byte comparison, so it is much faster than the <xref:System.String.Compare%2A?displayProperty=nameWithType> or <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> method.</span></span>  
  
## <a name="performance-considerations"></a><span data-ttu-id="89bf5-111">性能注意事项</span><span class="sxs-lookup"><span data-stu-id="89bf5-111">Performance considerations</span></span>  
 <span data-ttu-id="89bf5-112">执行字符串比较时，<xref:System.Globalization.SortKey.Compare%2A> 和 <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> 方法生成相同的结果，但它们面向不同的方案。</span><span class="sxs-lookup"><span data-stu-id="89bf5-112">When performing a string comparison, the <xref:System.Globalization.SortKey.Compare%2A> and <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> methods yield the same results, but they target different scenarios.</span></span>  
  
 <span data-ttu-id="89bf5-113">在高级别，<xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType>方法生成每个字符串的排序键、 执行比较，然后丢弃排序键并返回比较的结果。</span><span class="sxs-lookup"><span data-stu-id="89bf5-113">At a high level, the <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> method generates the sort key for each string, performs the comparison, and then discards the sort key and returns the result of the comparison.</span></span> <span data-ttu-id="89bf5-114">但是，<xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType>方法实际上不会生成整个排序键进行比较。</span><span class="sxs-lookup"><span data-stu-id="89bf5-114">However, the <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> method actually doesn't generate an entire sort key to perform the comparison.</span></span> <span data-ttu-id="89bf5-115">相反，此方法将为每个字符串中的每个文本元素（即，基字符、代理项对或组合字符序列）生成关键数据。</span><span class="sxs-lookup"><span data-stu-id="89bf5-115">Instead, the method generates the key data for each text element (that is, base character, surrogate pair, or combining character sequence) in each string.</span></span> <span data-ttu-id="89bf5-116">该方法然后将相应的文本元素的键数据进行比较。</span><span class="sxs-lookup"><span data-stu-id="89bf5-116">The method then compares the key data for the corresponding text elements.</span></span> <span data-ttu-id="89bf5-117">一旦确定最终结果的比较，操作立即终止。</span><span class="sxs-lookup"><span data-stu-id="89bf5-117">The operation terminates as soon as the ultimate result of the comparison is determined.</span></span> <span data-ttu-id="89bf5-118">计算排序密钥信息，但没有<xref:System.Globalization.SortKey>创建对象。</span><span class="sxs-lookup"><span data-stu-id="89bf5-118">Sort key information is computed, but no <xref:System.Globalization.SortKey> object is created.</span></span> <span data-ttu-id="89bf5-119">此策略是经济实惠的方案就性能而言，如果一次，比较这两个字符串，但会非常高，如果相同的字符串比较很多次。</span><span class="sxs-lookup"><span data-stu-id="89bf5-119">This strategy is economical in terms of performance if both strings are compared once, but becomes expensive if the same strings are compared many times.</span></span>  
  
 <span data-ttu-id="89bf5-120"><xref:System.Globalization.SortKey.Compare%2A>方法需要一代<xref:System.Globalization.SortKey>之前执行比较每个字符串的对象。</span><span class="sxs-lookup"><span data-stu-id="89bf5-120">The <xref:System.Globalization.SortKey.Compare%2A> method requires generation of a <xref:System.Globalization.SortKey> object for each string before performing the comparison.</span></span> <span data-ttu-id="89bf5-121">此策略是第一次比较的性能开销由于时间和内存来生成<xref:System.Globalization.SortKey>对象。</span><span class="sxs-lookup"><span data-stu-id="89bf5-121">This strategy is expensive in terms of performance for the first comparison because of the time and memory invested to generate the <xref:System.Globalization.SortKey> objects.</span></span> <span data-ttu-id="89bf5-122">但是，它将成为相同的排序键进行比较很多时候如果经济实惠的方案。</span><span class="sxs-lookup"><span data-stu-id="89bf5-122">However, it becomes economical if the same sort keys are compared many times.</span></span>  
  
 <span data-ttu-id="89bf5-123">例如，假设您编写的应用程序数据库表中基于字符串的索引列与指定的搜索字符串匹配的行中搜索。</span><span class="sxs-lookup"><span data-stu-id="89bf5-123">For example, suppose you write an application that searches a database table for the row in which the string-based index column matches a specified search string.</span></span> <span data-ttu-id="89bf5-124">表中包含数以万计的行，并将每一行中的索引的搜索字符串进行比较将花费很长时间。</span><span class="sxs-lookup"><span data-stu-id="89bf5-124">The table contains thousands of rows, and comparing the search string to the index in each row will take a long time.</span></span> <span data-ttu-id="89bf5-125">因此，当应用程序存储一个行并将其索引的列，它还生成并在致力于提高搜索性能列存储索引的排序键。</span><span class="sxs-lookup"><span data-stu-id="89bf5-125">Therefore, when the application stores a row and its index column, it also generates and stores the sort key for the index in a column dedicated to improving search performance.</span></span> <span data-ttu-id="89bf5-126">当应用程序搜索目标行时，它会将索引字符串，而不是比较索引字符串的搜索字符串的排序关键字的搜索字符串的排序键进行比较。</span><span class="sxs-lookup"><span data-stu-id="89bf5-126">When the application searches for a target row, it compares the sort key for the search string to the sort key for the index string, instead of comparing the search string to the index string.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="89bf5-127">安全注意事项</span><span class="sxs-lookup"><span data-stu-id="89bf5-127">Security considerations</span></span>  
 <span data-ttu-id="89bf5-128"><xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType>方法将返回<xref:System.Globalization.SortKey>的值的对象根据指定的字符串并<xref:System.Globalization.CompareOptions>值，并与基础关联的区域性<xref:System.Globalization.CompareInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="89bf5-128">The <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> method returns a <xref:System.Globalization.SortKey> object with the value based on a specified string and <xref:System.Globalization.CompareOptions> value, and the culture associated with the underlying <xref:System.Globalization.CompareInfo> object.</span></span> <span data-ttu-id="89bf5-129">如果安全决策取决于字符串比较或大小写更改，则您应使用固定区域性的 <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> 方法来确保操作行为的一致性，无论操作系统的区域性设置如何。</span><span class="sxs-lookup"><span data-stu-id="89bf5-129">If a security decision depends on a string comparison or case change, you should use the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> method of the invariant culture to ensure that the behavior of the operation is consistent, regardless of the culture settings of the operating system.</span></span>  
  
 <span data-ttu-id="89bf5-130">使用以下步骤获取排序键：</span><span class="sxs-lookup"><span data-stu-id="89bf5-130">Use the following steps to obtain a sort key:</span></span>  
  
1.  <span data-ttu-id="89bf5-131">从 <xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=nameWithType> 属性中检索固定区域性。</span><span class="sxs-lookup"><span data-stu-id="89bf5-131">Retrieve the invariant culture from the <xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=nameWithType> property.</span></span>  
  
2.  <span data-ttu-id="89bf5-132">从 <xref:System.Globalization.CompareInfo> 属性中检索固定区域性的 <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType> 对象。</span><span class="sxs-lookup"><span data-stu-id="89bf5-132">Retrieve a <xref:System.Globalization.CompareInfo> object for the invariant culture from the <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType> property.</span></span>  
  
3.  <span data-ttu-id="89bf5-133">调用 <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="89bf5-133">Call the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="89bf5-134">使用 <xref:System.Globalization.SortKey> 对象的值等效于调用带指定的 LCMAP_SORTKEY 值的 Windows `LCMapString` 方法。</span><span class="sxs-lookup"><span data-stu-id="89bf5-134">Working with the value of a <xref:System.Globalization.SortKey> object is equivalent to calling the Windows `LCMapString` method with the LCMAP_SORTKEY value specified.</span></span> <span data-ttu-id="89bf5-135">但是，对于<xref:System.Globalization.SortKey>对象，包含英文字符的排序关键字先于朝鲜语字符的排序关键字。</span><span class="sxs-lookup"><span data-stu-id="89bf5-135">However, for the <xref:System.Globalization.SortKey> object, the sort keys for English characters precede the sort keys for Korean characters.</span></span>  
  
 <span data-ttu-id="89bf5-136"><xref:System.Globalization.SortKey> 对象可以序列化，但仅限于，以便它们可以跨<xref:System.AppDomain>对象。</span><span class="sxs-lookup"><span data-stu-id="89bf5-136"><xref:System.Globalization.SortKey> objects can be serialized, but only so that they can cross <xref:System.AppDomain> objects.</span></span> <span data-ttu-id="89bf5-137">如果应用程序对 <xref:System.Globalization.SortKey> 对象进行序列化，则此应用程序必须在提供了 .NET Framework 的新版本时重新生成所有排序键。</span><span class="sxs-lookup"><span data-stu-id="89bf5-137">If an application serializes a <xref:System.Globalization.SortKey> object, the application must regenerate all the sort keys when there is a new version of the .NET Framework.</span></span>  
  
 <span data-ttu-id="89bf5-138">有关排序关键字的详细信息，请参阅 Unicode 技术标准 #10:"Unicode 排序算法"上[Unicode Consortium 网站](http://go.microsoft.com/fwlink/?linkid=37123)。</span><span class="sxs-lookup"><span data-stu-id="89bf5-138">For more information about sort keys, see Unicode Technical Standard #10, "Unicode Collation Algorithm" on the [Unicode Consortium website](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="89bf5-139">下面的示例使用“en-US”和“es-ES”区域性以及“en-US”和“es-ES”传统区域性比较字符串“llama”。</span><span class="sxs-lookup"><span data-stu-id="89bf5-139">The following example compares the string "llama" using the "en-US" and "es-ES" cultures, and the "en-US" and "es-ES" traditional cultures.</span></span>  
  
 [!code-cpp[System.Globalization.SortKey.Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.SortKey.Compare/CPP/sortkey_compare.cpp#1)]
 [!code-csharp[System.Globalization.SortKey.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.SortKey.Compare/CS/sortkey_compare.cs#1)]
 [!code-vb[System.Globalization.SortKey.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.SortKey.Compare/VB/sortkey_compare.vb#1)]  
  
 <span data-ttu-id="89bf5-140">下面的示例演示如何使用 <xref:System.Globalization.SortKey> 类提高完全依赖于排序和搜索大型数组的应用程序中的性能。</span><span class="sxs-lookup"><span data-stu-id="89bf5-140">The following example shows how you can use the <xref:System.Globalization.SortKey> class to improve performance in an application that relies extensively on sorting and searching a large array.</span></span> <span data-ttu-id="89bf5-141">该示例创建无序的名称数组，此实例中有 13 个元素。</span><span class="sxs-lookup"><span data-stu-id="89bf5-141">The example creates an unordered array of names, which in this case has 13 elements.</span></span> <span data-ttu-id="89bf5-142">然后它将每个名称的排序键存储在并行数组中，后者会将其传递到 <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="89bf5-142">It then stores the sort key of each name in a parallel array, which it passes to the <xref:System.Array.Sort%28System.Array%2CSystem.Array%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="89bf5-143">结果为已排序的数组。</span><span class="sxs-lookup"><span data-stu-id="89bf5-143">The result is a sorted array.</span></span> <span data-ttu-id="89bf5-144">然后，该示例搜索三个字符串的数组。</span><span class="sxs-lookup"><span data-stu-id="89bf5-144">The example then searches the array for three strings.</span></span> <span data-ttu-id="89bf5-145">对于每个搜索字符串，它调用 <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> 方法来检索字符串的排序键，然后调用 <xref:System.Array.FindIndex%2A?displayProperty=nameWithType> 方法来检索该排序键在排序键数组中的索引。</span><span class="sxs-lookup"><span data-stu-id="89bf5-145">For each search string, it calls the <xref:System.Globalization.CompareInfo.GetSortKey%28System.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> method to retrieve the string's sort key, and then calls the <xref:System.Array.FindIndex%2A?displayProperty=nameWithType> method to retrieve the index of that sort key in the array of sort keys.</span></span> <span data-ttu-id="89bf5-146">由于名称和排序键数组是并行的，因此返回的索引也是 `names` 数组中的名称的索引。</span><span class="sxs-lookup"><span data-stu-id="89bf5-146">Because the name and sort key arrays are parallel, the returned index is also the index of the name in the `names` array.</span></span>  
  
 [!code-csharp[System.Globalization.SortKey.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.sortkey.class/cs/sortkey1.cs#1)]
 [!code-vb[System.Globalization.SortKey.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.sortkey.class/vb/sortkey1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Globalization.CompareInfo.GetSortKey(System.String,System.Globalization.CompareOptions)" />
    <altmember cref="P:System.Globalization.SortKey.KeyData" />
  </Docs>
  <Members>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (System.Globalization.SortKey sortkey1, System.Globalization.SortKey sortkey2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(class System.Globalization.SortKey sortkey1, class System.Globalization.SortKey sortkey2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (sortkey1 As SortKey, sortkey2 As SortKey) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::Globalization::SortKey ^ sortkey1, System::Globalization::SortKey ^ sortkey2);" />
      <MemberSignature Language="F#" Value="static member Compare : System.Globalization.SortKey * System.Globalization.SortKey -&gt; int" Usage="System.Globalization.SortKey.Compare (sortkey1, sortkey2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortkey1" Type="System.Globalization.SortKey" />
        <Parameter Name="sortkey2" Type="System.Globalization.SortKey" />
      </Parameters>
      <Docs>
        <param name="sortkey1">
          <span data-ttu-id="89bf5-147">The first sort key to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89bf5-147">The first sort key to compare.</span>
          </span>
        </param>
        <param name="sortkey2">
          <span data-ttu-id="89bf5-148">The second sort key to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89bf5-148">The second sort key to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89bf5-149">Compares two sort keys.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89bf5-149">Compares two sort keys.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89bf5-150">A signed integer that indicates the relationship between <paramref name="sortkey1" /> and <paramref name="sortkey2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89bf5-150">A signed integer that indicates the relationship between <paramref name="sortkey1" /> and <paramref name="sortkey2" />.</span>
          </span>
          <span data-ttu-id="89bf5-151">
            <list type="table">
              <listheader>
                <term> Value  </term>
                <description> Condition  </description>
              </listheader>
              <item>
                <term> Less than zero  </term>
                <description>
                  <paramref name="sortkey1" /> is less than <paramref name="sortkey2" />.  </description>
              </item>
              <item>
                <term> Zero  </term>
                <description>
                  <paramref name="sortkey1" /> is equal to <paramref name="sortkey2" />.  </description>
              </item>
              <item>
                <term> Greater than zero  </term>
                <description>
                  <paramref name="sortkey1" /> is greater than <paramref name="sortkey2" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="89bf5-151">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description>
                    <paramref name="sortkey1" /> is less than <paramref name="sortkey2" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description>
                    <paramref name="sortkey1" /> is equal to <paramref name="sortkey2" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description>
                    <paramref name="sortkey1" /> is greater than <paramref name="sortkey2" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89bf5-152"><xref:System.Globalization.SortKey.Compare%2A>方法比较<xref:System.Globalization.SortKey.KeyData%2A>的属性`sortkey1`和`sortkey2`参数。</span><span class="sxs-lookup"><span data-stu-id="89bf5-152">The <xref:System.Globalization.SortKey.Compare%2A> method compares the <xref:System.Globalization.SortKey.KeyData%2A> properties of the `sortkey1` and `sortkey2` parameters.</span></span> <span data-ttu-id="89bf5-153">该方法生成与相同的结果<xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="89bf5-153">The method yields the same results as the <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="89bf5-154">有关详细信息<xref:System.Globalization.SortKey.Compare%2A>方法，并比较的排序键，请参阅<xref:System.Globalization.SortKey>类主题。</span><span class="sxs-lookup"><span data-stu-id="89bf5-154">For more information about the <xref:System.Globalization.SortKey.Compare%2A> method and the comparison of sort keys, see the <xref:System.Globalization.SortKey> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="89bf5-155">下面的代码示例对使用两个字符串进行比较<xref:System.Globalization.SortKey.Compare%2A>方法，并等效于<xref:System.Globalization.CompareInfo.Compare%28System.String%2CSystem.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="89bf5-155">The following code example compares two strings using the <xref:System.Globalization.SortKey.Compare%2A> method and the equivalent <xref:System.Globalization.CompareInfo.Compare%28System.String%2CSystem.String%2CSystem.Globalization.CompareOptions%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[sys.glob.sortkey.compare#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.compare/cs/skcmp.cs#1)]
 [!code-vb[sys.glob.sortkey.compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.compare/vb/skcmp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="89bf5-156">
            <paramref name="sortkey1" /> or <paramref name="sortkey2" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89bf5-156">
              <paramref name="sortkey1" /> or <paramref name="sortkey2" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="sortKey.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="89bf5-157">The object to compare with the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89bf5-157">The object to compare with the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89bf5-158">Determines whether the specified object is equal to the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89bf5-158">Determines whether the specified object is equal to the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89bf5-159">
            <see langword="true" /> if the <paramref name="value" /> parameter is equal to the current <see cref="T:System.Globalization.SortKey" /> object; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89bf5-159">
              <see langword="true" /> if the <paramref name="value" /> parameter is equal to the current <see cref="T:System.Globalization.SortKey" /> object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89bf5-160">两个<xref:System.Globalization.SortKey>对象被视为相等，如果其<xref:System.Globalization.SortKey.KeyData%2A>属性相等。</span><span class="sxs-lookup"><span data-stu-id="89bf5-160">Two <xref:System.Globalization.SortKey> objects are considered equal if their <xref:System.Globalization.SortKey.KeyData%2A> properties are equal.</span></span>  
  
 <span data-ttu-id="89bf5-161">此方法重写<xref:System.Object.Equals%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="89bf5-161">This method overrides <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="89bf5-162">下面的代码示例显示的结果<xref:System.Globalization.SortKey.Equals%2A>与不同相比<xref:System.Globalization.SortKey>对象。</span><span class="sxs-lookup"><span data-stu-id="89bf5-162">The following code example shows the results of <xref:System.Globalization.SortKey.Equals%2A> when compared with different <xref:System.Globalization.SortKey> objects.</span></span>  
  
 [!code-cpp[System.Globalization.SortKey.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.SortKey.Equals/CPP/sortkey_equals.cpp#1)]
 [!code-csharp[System.Globalization.SortKey.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.SortKey.Equals/CS/sortkey_equals.cs#1)]
 [!code-vb[System.Globalization.SortKey.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.SortKey.Equals/VB/sortkey_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="89bf5-163">
            <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89bf5-163">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Object.Equals(System.Object)" />
        <altmember cref="P:System.Globalization.SortKey.KeyData" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="sortKey.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="89bf5-164">Serves as a hash function for the current <see cref="T:System.Globalization.SortKey" /> object that is suitable for hashing algorithms and data structures such as a hash table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89bf5-164">Serves as a hash function for the current <see cref="T:System.Globalization.SortKey" /> object that is suitable for hashing algorithms and data structures such as a hash table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89bf5-165">A hash code for the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89bf5-165">A hash code for the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89bf5-166">此方法为根据 <xref:System.Globalization.SortKey.Equals%2A> 方法视为相等的两个对象生成相同的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="89bf5-166">This method generates the same hash code for two objects that are equal according to the <xref:System.Globalization.SortKey.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="89bf5-167">此方法重写<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="89bf5-167">This method overrides <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.Globalization.SortKey.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="KeyData">
      <MemberSignature Language="C#" Value="public virtual byte[] KeyData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] KeyData" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.SortKey.KeyData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyData As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ KeyData { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyData : byte[]" Usage="System.Globalization.SortKey.KeyData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89bf5-168">Gets the byte array representing the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89bf5-168">Gets the byte array representing the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89bf5-169">表示当前的字节数组<see cref="T:System.Globalization.SortKey" />对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89bf5-169">A byte array representing the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89bf5-170">有关使用返回的数据的详细信息<xref:System.Globalization.SortKey.KeyData%2A>属性中比较字符串，请参阅<xref:System.Globalization.SortKey>类主题。</span><span class="sxs-lookup"><span data-stu-id="89bf5-170">For more information about the use of the data returned by the <xref:System.Globalization.SortKey.KeyData%2A> property in comparing strings, see the <xref:System.Globalization.SortKey> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="89bf5-171">下面的代码示例显示原始字符串的等效的字符串和区分大小写的排序关键字和不区分大小写的排序键的键数据。</span><span class="sxs-lookup"><span data-stu-id="89bf5-171">The following code example displays an original string and the equivalent string and key data for a case-sensitive sort key and a case-insensitive sort key.</span></span>  
  
 [!code-csharp[sys.glob.sortkey.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.tostring/cs/ts.cs#1)]
 [!code-vb[sys.glob.sortkey.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.tostring/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalString">
      <MemberSignature Language="C#" Value="public virtual string OriginalString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OriginalString" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.SortKey.OriginalString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OriginalString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OriginalString { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OriginalString : string" Usage="System.Globalization.SortKey.OriginalString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89bf5-172">Gets the original string used to create the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89bf5-172">Gets the original string used to create the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89bf5-173">用于创建当前的原始字符串<see cref="T:System.Globalization.SortKey" />对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89bf5-173">The original string used to create the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="89bf5-174">下面的代码示例显示原始字符串的等效的字符串和区分大小写的排序关键字和不区分大小写的排序键的键数据。</span><span class="sxs-lookup"><span data-stu-id="89bf5-174">The following code example displays an original string and the equivalent string and key data for a case-sensitive sort key and a case-insensitive sort key.</span></span>  
  
 [!code-csharp[sys.glob.sortkey.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.tostring/cs/ts.cs#1)]
 [!code-vb[sys.glob.sortkey.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.tostring/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.SortKey.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="sortKey.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="89bf5-175">Returns a string that represents the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89bf5-175">Returns a string that represents the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89bf5-176">A string that represents the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="89bf5-176">A string that represents the current <see cref="T:System.Globalization.SortKey" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89bf5-177">返回值是字符串"SortKey-"的串联、 区域性标识符和比较选项的当前<xref:System.Globalization.SortKey>对象，并且的值<xref:System.Globalization.SortKey.OriginalString%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="89bf5-177">The return value is the concatenation of the string "SortKey - ", the culture identifier and compare options of the current <xref:System.Globalization.SortKey> object, and the value of the <xref:System.Globalization.SortKey.OriginalString%2A> property.</span></span>  
  
 <span data-ttu-id="89bf5-178">此方法重写<xref:System.Object.ToString%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="89bf5-178">This method overrides <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="89bf5-179">下面的代码示例显示为原始字符串，字符串后所得的<xref:System.Globalization.SortKey.ToString%2A>方法的区分大小写，不区分大小写的排序键，并区分大小写，不区分大小写的排序键的键数据。</span><span class="sxs-lookup"><span data-stu-id="89bf5-179">The following code example displays an original string, the strings yielded by the <xref:System.Globalization.SortKey.ToString%2A> method for case-sensitive and case-insensitive sort keys, and the key data for case-sensitive and case-insensitive sort keys.</span></span>  
  
 [!code-csharp[sys.glob.sortkey.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.sortkey.tostring/cs/ts.cs#1)]
 [!code-vb[sys.glob.sortkey.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.sortkey.tostring/vb/ts.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>