<Type Name="TaiwanCalendar" FullName="System.Globalization.TaiwanCalendar">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f61ea0e805d6530d359b1eacdeb16f2c02637fa6" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36563113" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TaiwanCalendar : System.Globalization.Calendar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TaiwanCalendar extends System.Globalization.Calendar" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.TaiwanCalendar" />
  <TypeSignature Language="VB.NET" Value="Public Class TaiwanCalendar&#xA;Inherits Calendar" />
  <TypeSignature Language="C++ CLI" Value="public ref class TaiwanCalendar : System::Globalization::Calendar" />
  <TypeSignature Language="F#" Value="type TaiwanCalendar = class&#xA;    inherit Calendar" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Calendars</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Globalization.Calendar</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3b232-101">the Taiwan calendar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3b232-101">the Taiwan calendar.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b232-102">表示中国台湾日历的工作方式完全一样公历，，，只的年份和纪元不相同。</span><span class="sxs-lookup"><span data-stu-id="3b232-102">The Taiwan calendar works exactly like the Gregorian calendar, except that the year and era are different.</span></span> <span data-ttu-id="3b232-103"><xref:System.Globalization.TaiwanCalendar>类只识别当前纪元。</span><span class="sxs-lookup"><span data-stu-id="3b232-103">The <xref:System.Globalization.TaiwanCalendar> class recognizes only the current era.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3b232-104">有关使用信息<xref:System.Globalization.TaiwanCalendar>类和其他日历.NET Framework 中的类，请参阅[使用日历](~/docs/standard/datetime/working-with-calendars.md)。</span><span class="sxs-lookup"><span data-stu-id="3b232-104">For information about using the <xref:System.Globalization.TaiwanCalendar> class and the other calendar classes in the .NET Framework, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md).</span></span>  
  
 <span data-ttu-id="3b232-105">表示中国台湾日历闰年公历日历中的相同闰年与相对应。</span><span class="sxs-lookup"><span data-stu-id="3b232-105">Leap years in the Taiwan calendar correspond to the same leap years in the Gregorian calendar.</span></span> <span data-ttu-id="3b232-106">闰年公历日历中定义为公历年份整除的由 4 个，但如果它是由 100 可除外。</span><span class="sxs-lookup"><span data-stu-id="3b232-106">A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="3b232-107">但是，可被被 400 的公历年是闰年。</span><span class="sxs-lookup"><span data-stu-id="3b232-107">However, Gregorian years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="3b232-108">平 365 年天并且初始屏幕闰年有 366 天。</span><span class="sxs-lookup"><span data-stu-id="3b232-108">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="3b232-109">表示中国台湾日历具有 28 到 31 天的 12 个月：</span><span class="sxs-lookup"><span data-stu-id="3b232-109">The Taiwan calendar has 12 months with 28 to 31 days each:</span></span>  
  
|<span data-ttu-id="3b232-110">GetMonth 值</span><span class="sxs-lookup"><span data-stu-id="3b232-110">GetMonth value</span></span>|<span data-ttu-id="3b232-111">月份</span><span class="sxs-lookup"><span data-stu-id="3b232-111">Month</span></span>|<span data-ttu-id="3b232-112">天数在平年</span><span class="sxs-lookup"><span data-stu-id="3b232-112">Days in common years</span></span>|<span data-ttu-id="3b232-113">中的天闰年</span><span class="sxs-lookup"><span data-stu-id="3b232-113">Days in leap years</span></span>|  
|--------------------|-----------|--------------------------|------------------------|  
|<span data-ttu-id="3b232-114">1</span><span class="sxs-lookup"><span data-stu-id="3b232-114">1</span></span>|<span data-ttu-id="3b232-115">1月 （年 1 月）</span><span class="sxs-lookup"><span data-stu-id="3b232-115">1月 (January)</span></span>|<span data-ttu-id="3b232-116">31</span><span class="sxs-lookup"><span data-stu-id="3b232-116">31</span></span>|<span data-ttu-id="3b232-117">31</span><span class="sxs-lookup"><span data-stu-id="3b232-117">31</span></span>|  
|<span data-ttu-id="3b232-118">2</span><span class="sxs-lookup"><span data-stu-id="3b232-118">2</span></span>|<span data-ttu-id="3b232-119">2月 （年 2 月）</span><span class="sxs-lookup"><span data-stu-id="3b232-119">2月 (February)</span></span>|<span data-ttu-id="3b232-120">28</span><span class="sxs-lookup"><span data-stu-id="3b232-120">28</span></span>|<span data-ttu-id="3b232-121">29</span><span class="sxs-lookup"><span data-stu-id="3b232-121">29</span></span>|  
|<span data-ttu-id="3b232-122">3</span><span class="sxs-lookup"><span data-stu-id="3b232-122">3</span></span>|<span data-ttu-id="3b232-123">3月 （年 3 月）</span><span class="sxs-lookup"><span data-stu-id="3b232-123">3月 (March)</span></span>|<span data-ttu-id="3b232-124">31</span><span class="sxs-lookup"><span data-stu-id="3b232-124">31</span></span>|<span data-ttu-id="3b232-125">31</span><span class="sxs-lookup"><span data-stu-id="3b232-125">31</span></span>|  
|<span data-ttu-id="3b232-126">4</span><span class="sxs-lookup"><span data-stu-id="3b232-126">4</span></span>|<span data-ttu-id="3b232-127">4月 （年 4 月）</span><span class="sxs-lookup"><span data-stu-id="3b232-127">4月 (April)</span></span>|<span data-ttu-id="3b232-128">30</span><span class="sxs-lookup"><span data-stu-id="3b232-128">30</span></span>|<span data-ttu-id="3b232-129">30</span><span class="sxs-lookup"><span data-stu-id="3b232-129">30</span></span>|  
|<span data-ttu-id="3b232-130">5</span><span class="sxs-lookup"><span data-stu-id="3b232-130">5</span></span>|<span data-ttu-id="3b232-131">5月 （5 月）</span><span class="sxs-lookup"><span data-stu-id="3b232-131">5月 (May)</span></span>|<span data-ttu-id="3b232-132">31</span><span class="sxs-lookup"><span data-stu-id="3b232-132">31</span></span>|<span data-ttu-id="3b232-133">31</span><span class="sxs-lookup"><span data-stu-id="3b232-133">31</span></span>|  
|<span data-ttu-id="3b232-134">6</span><span class="sxs-lookup"><span data-stu-id="3b232-134">6</span></span>|<span data-ttu-id="3b232-135">6月 （年 6 月）</span><span class="sxs-lookup"><span data-stu-id="3b232-135">6月 (June)</span></span>|<span data-ttu-id="3b232-136">30</span><span class="sxs-lookup"><span data-stu-id="3b232-136">30</span></span>|<span data-ttu-id="3b232-137">30</span><span class="sxs-lookup"><span data-stu-id="3b232-137">30</span></span>|  
|<span data-ttu-id="3b232-138">7</span><span class="sxs-lookup"><span data-stu-id="3b232-138">7</span></span>|<span data-ttu-id="3b232-139">7月 （年 7 月）</span><span class="sxs-lookup"><span data-stu-id="3b232-139">7月 (July)</span></span>|<span data-ttu-id="3b232-140">31</span><span class="sxs-lookup"><span data-stu-id="3b232-140">31</span></span>|<span data-ttu-id="3b232-141">31</span><span class="sxs-lookup"><span data-stu-id="3b232-141">31</span></span>|  
|<span data-ttu-id="3b232-142">8</span><span class="sxs-lookup"><span data-stu-id="3b232-142">8</span></span>|<span data-ttu-id="3b232-143">8月 （年 8 月）</span><span class="sxs-lookup"><span data-stu-id="3b232-143">8月 (August)</span></span>|<span data-ttu-id="3b232-144">31</span><span class="sxs-lookup"><span data-stu-id="3b232-144">31</span></span>|<span data-ttu-id="3b232-145">31</span><span class="sxs-lookup"><span data-stu-id="3b232-145">31</span></span>|  
|<span data-ttu-id="3b232-146">9</span><span class="sxs-lookup"><span data-stu-id="3b232-146">9</span></span>|<span data-ttu-id="3b232-147">9月 （年 9 月）</span><span class="sxs-lookup"><span data-stu-id="3b232-147">9月 (September)</span></span>|<span data-ttu-id="3b232-148">30</span><span class="sxs-lookup"><span data-stu-id="3b232-148">30</span></span>|<span data-ttu-id="3b232-149">30</span><span class="sxs-lookup"><span data-stu-id="3b232-149">30</span></span>|  
|<span data-ttu-id="3b232-150">10</span><span class="sxs-lookup"><span data-stu-id="3b232-150">10</span></span>|<span data-ttu-id="3b232-151">10月 （年 10 月）</span><span class="sxs-lookup"><span data-stu-id="3b232-151">10月 (October)</span></span>|<span data-ttu-id="3b232-152">31</span><span class="sxs-lookup"><span data-stu-id="3b232-152">31</span></span>|<span data-ttu-id="3b232-153">31</span><span class="sxs-lookup"><span data-stu-id="3b232-153">31</span></span>|  
|<span data-ttu-id="3b232-154">11</span><span class="sxs-lookup"><span data-stu-id="3b232-154">11</span></span>|<span data-ttu-id="3b232-155">11月 （年 11 月）</span><span class="sxs-lookup"><span data-stu-id="3b232-155">11月 (November)</span></span>|<span data-ttu-id="3b232-156">30</span><span class="sxs-lookup"><span data-stu-id="3b232-156">30</span></span>|<span data-ttu-id="3b232-157">30</span><span class="sxs-lookup"><span data-stu-id="3b232-157">30</span></span>|  
|<span data-ttu-id="3b232-158">12</span><span class="sxs-lookup"><span data-stu-id="3b232-158">12</span></span>|<span data-ttu-id="3b232-159">12月 （年 12 月）</span><span class="sxs-lookup"><span data-stu-id="3b232-159">12月 (December)</span></span>|<span data-ttu-id="3b232-160">31</span><span class="sxs-lookup"><span data-stu-id="3b232-160">31</span></span>|<span data-ttu-id="3b232-161">31</span><span class="sxs-lookup"><span data-stu-id="3b232-161">31</span></span>|  
  
 <span data-ttu-id="3b232-162">2 月有 29 天在闰年和 28 在平年。</span><span class="sxs-lookup"><span data-stu-id="3b232-162">February has 29 days during leap years and 28 during common years.</span></span>  
  
 <span data-ttu-id="3b232-163">日期公元 2001 年 1 月 1 日</span><span class="sxs-lookup"><span data-stu-id="3b232-163">The date January 1, 2001 C.E.</span></span> <span data-ttu-id="3b232-164">在公历日历中相当于中国台湾日历当前纪元的年份 90 中的年 1 月的第一天。</span><span class="sxs-lookup"><span data-stu-id="3b232-164">in the Gregorian calendar is equivalent to the first day of January in the year 90 of the current era in the Taiwan calendar.</span></span>  
  
 <span data-ttu-id="3b232-165">每个<xref:System.Globalization.CultureInfo>支持一组的日历。</span><span class="sxs-lookup"><span data-stu-id="3b232-165">Each <xref:System.Globalization.CultureInfo> supports a set of calendars.</span></span> <span data-ttu-id="3b232-166"><xref:System.Globalization.CultureInfo.Calendar%2A>属性返回区域性的默认日历和<xref:System.Globalization.CultureInfo.OptionalCalendars%2A>属性返回一个包含所有支持的区域性的日历数组。</span><span class="sxs-lookup"><span data-stu-id="3b232-166">The <xref:System.Globalization.CultureInfo.Calendar%2A> property returns the default calendar for the culture, and the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property returns an array containing all the calendars supported by the culture.</span></span> <span data-ttu-id="3b232-167">若要更改使用的日历<xref:System.Globalization.CultureInfo>，应用程序应设置<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>属性<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>到新<xref:System.Globalization.Calendar>。</span><span class="sxs-lookup"><span data-stu-id="3b232-167">To change the calendar used by a <xref:System.Globalization.CultureInfo>, the application should set the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> to a new <xref:System.Globalization.Calendar>.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="usage">
      <span data-ttu-id="3b232-168">
        <para>-如果<see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" />是<see cref="T:System.Globalization.TaiwanCalendar" />但<see cref="P:System.Threading.Thread.CurrentCulture" />不是"ZH-TW"，然后<see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />， <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />，和<see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" />返回空字符串 ("")。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="3b232-168">
          <para>-   If <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> is the <see cref="T:System.Globalization.TaiwanCalendar" /> but the <see cref="P:System.Threading.Thread.CurrentCulture" /> is not "zh-TW", then <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, and <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> return an empty string ("").</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="T:System.Globalization.GregorianCalendar" />
    <altmember cref="P:System.Globalization.CultureInfo.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.OptionalCalendars" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaiwanCalendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaiwanCalendar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3b232-169">Initializes a new instance of the <see cref="T:System.Globalization.TaiwanCalendar" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-169">Initializes a new instance of the <see cref="T:System.Globalization.TaiwanCalendar" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.TypeInitializationException">
          <span data-ttu-id="3b232-170">Unable to initialize a <see cref="T:System.Globalization.TaiwanCalendar" /> object because of missing culture information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-170">Unable to initialize a <see cref="T:System.Globalization.TaiwanCalendar" /> object because of missing culture information.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public override DateTime AddMonths (DateTime time, int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddMonths(valuetype System.DateTime time, int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.AddMonths(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddMonths (time As DateTime, months As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddMonths(DateTime time, int months);" />
      <MemberSignature Language="F#" Value="override this.AddMonths : DateTime * int -&gt; DateTime" Usage="taiwanCalendar.AddMonths (time, months)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="3b232-171">The <see cref="T:System.DateTime" /> to which to add months.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-171">The <see cref="T:System.DateTime" /> to which to add months.</span>
          </span>
        </param>
        <param name="months">
          <span data-ttu-id="3b232-172">The number of months to add.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-172">The number of months to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b232-173">Returns a <see cref="T:System.DateTime" /> that is the specified number of months away from the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-173">Returns a <see cref="T:System.DateTime" /> that is the specified number of months away from the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b232-174">The <see cref="T:System.DateTime" /> that results from adding the specified number of months to the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-174">The <see cref="T:System.DateTime" /> that results from adding the specified number of months to the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b232-175">日部分的生成<xref:System.DateTime>如果结果的日期不是有效的一天中生成月份影响。</span><span class="sxs-lookup"><span data-stu-id="3b232-175">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="3b232-176">它将更改为在生成每年的生成的每月最后一个有效的一天。</span><span class="sxs-lookup"><span data-stu-id="3b232-176">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="3b232-177">所生成的年份部分<xref:System.DateTime>如果外部的指定年，则结果月份受到<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="3b232-177">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="3b232-178">此实现支持仅当前纪元。</span><span class="sxs-lookup"><span data-stu-id="3b232-178">This implementation supports only the current era.</span></span> <span data-ttu-id="3b232-179">因此，<xref:System.ArgumentException>如果所得年份未指定纪元，将引发<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="3b232-179">Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="3b232-180">所生成的一天时间部分<xref:System.DateTime>保持与指定相同<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="3b232-180">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="3b232-181">例如，如果指定的月份是年 10 月，其中包含 31 天，指定的日期是该月第 31 天和的值`months`参数为 6，则结果年份是一个多个指定的年份，生成的月份是年 4 月，并生成 day 为 30 天，这是年 4 月的最后一天。</span><span class="sxs-lookup"><span data-stu-id="3b232-181">For example, if the specified month is October, which has 31 days, the specified day is the 31st day of that month, and the value of the `months` parameter is 6, the resulting year is one more than the specified year, the resulting month is April, and the resulting day is the 30th day, which is the last day in April.</span></span>  
  
 <span data-ttu-id="3b232-182">如果值`months`参数是负数，生成<xref:System.DateTime>早于指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="3b232-182">If the value of the `months` parameter is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="3b232-183"><xref:System.DateTime.Kind%2A>属性返回<xref:System.DateTime>值始终等于<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3b232-183">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3b232-184">您可以保留<xref:System.DateTime.Kind%2A>属性`time`通过调用的参数<xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType>方法，如以下示例所示。</span><span class="sxs-lookup"><span data-stu-id="3b232-184">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]
 [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]  
  
   
  
## Examples  
 <span data-ttu-id="3b232-185">下面的代码示例演示如何将<xref:System.Globalization.TaiwanCalendar.AddMonths%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3b232-185">The following code example demonstrates the use of the <xref:System.Globalization.TaiwanCalendar.AddMonths%2A> method.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CPP/taiwancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CS/taiwancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/VB/taiwancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b232-186">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-186">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b232-187">
            <paramref name="months" /> is less than -120000.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-187">
              <paramref name="months" /> is less than -120000.</span>
          </span>
          <span data-ttu-id="3b232-188">-or-  <paramref name="months" /> is greater than 120000.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-188">-or-  <paramref name="months" /> is greater than 120000.</span>
          </span>
        </exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public override DateTime AddYears (DateTime time, int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddYears(valuetype System.DateTime time, int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.AddYears(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddYears (time As DateTime, years As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddYears(DateTime time, int years);" />
      <MemberSignature Language="F#" Value="override this.AddYears : DateTime * int -&gt; DateTime" Usage="taiwanCalendar.AddYears (time, years)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="3b232-189">The <see cref="T:System.DateTime" /> to which to add years.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-189">The <see cref="T:System.DateTime" /> to which to add years.</span>
          </span>
        </param>
        <param name="years">
          <span data-ttu-id="3b232-190">The number of years to add.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-190">The number of years to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b232-191">Returns a <see cref="T:System.DateTime" /> that is the specified number of years away from the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-191">Returns a <see cref="T:System.DateTime" /> that is the specified number of years away from the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b232-192">The <see cref="T:System.DateTime" /> that results from adding the specified number of years to the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-192">The <see cref="T:System.DateTime" /> that results from adding the specified number of years to the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b232-193">日部分的生成<xref:System.DateTime>如果结果的日期不是有效的一天中生成月份影响。</span><span class="sxs-lookup"><span data-stu-id="3b232-193">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="3b232-194">它将更改为在生成每年的生成的每月最后一个有效的一天。</span><span class="sxs-lookup"><span data-stu-id="3b232-194">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="3b232-195">所生成的月份部分<xref:System.DateTime>保持与指定相同<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="3b232-195">The month part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="3b232-196">此实现支持仅当前纪元。</span><span class="sxs-lookup"><span data-stu-id="3b232-196">This implementation supports only the current era.</span></span> <span data-ttu-id="3b232-197">因此，<xref:System.ArgumentException>如果所得年份未指定纪元，将引发<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="3b232-197">Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="3b232-198">所生成的一天时间部分<xref:System.DateTime>保持与指定相同<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="3b232-198">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="3b232-199">例如，年 2 月有 28 天，但在闰年时它有 29 天。</span><span class="sxs-lookup"><span data-stu-id="3b232-199">For example, February has 28 days, except during leap years when it has 29 days.</span></span> <span data-ttu-id="3b232-200">如果指定的日期是闰年 2 月 29 日和的值`years`为 1，则得到的日期是第二中下一年的年 2 月 28 日。</span><span class="sxs-lookup"><span data-stu-id="3b232-200">If the specified date is the 29th day of February in a leap year and the value of `years` is 1, the resulting date is the 28th day of February in the following year.</span></span>  
  
 <span data-ttu-id="3b232-201">如果`years`为负，生成<xref:System.DateTime>早于指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="3b232-201">If `years` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="3b232-202"><xref:System.DateTime.Kind%2A>属性返回<xref:System.DateTime>值始终等于<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3b232-202">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3b232-203">您可以保留<xref:System.DateTime.Kind%2A>属性`time`通过调用的参数<xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType>方法，如以下示例所示。</span><span class="sxs-lookup"><span data-stu-id="3b232-203">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]
 [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]  
  
   
  
## Examples  
 <span data-ttu-id="3b232-204">下面的代码示例显示使用<xref:System.Globalization.TaiwanCalendar.AddYears%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3b232-204">The following code example displays the use of the <xref:System.Globalization.TaiwanCalendar.AddYears%2A> method.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CPP/taiwancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CS/taiwancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/VB/taiwancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3b232-205">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-205">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span>
          </span>
        </exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.AddMonths(System.DateTime,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AlgorithmType">
      <MemberSignature Language="C#" Value="public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarAlgorithmType AlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TaiwanCalendar.AlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AlgorithmType As CalendarAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CalendarAlgorithmType AlgorithmType { System::Globalization::CalendarAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmType : System.Globalization.CalendarAlgorithmType" Usage="System.Globalization.TaiwanCalendar.AlgorithmType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3b232-206">Gets a value that indicates whether the current calendar is solar-based, lunar-based, or a combination of both.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-206">Gets a value that indicates whether the current calendar is solar-based, lunar-based, or a combination of both.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3b232-207">始终返回 <see cref="F:System.Globalization.CalendarAlgorithmType.SolarCalendar" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-207">Always returns <see cref="F:System.Globalization.CalendarAlgorithmType.SolarCalendar" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3b232-208">下面的示例使用反射来实例化每个<xref:System.Globalization.Calendar>类型在.NET Framework 中找到并显示的值其<xref:System.Globalization.Calendar.AlgorithmType%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3b232-208">The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/cs/algorithmtype1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/vb/algorithmtype1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eras">
      <MemberSignature Language="C#" Value="public override int[] Eras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] Eras" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TaiwanCalendar.Eras" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Eras As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;int&gt; ^ Eras { cli::array &lt;int&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Eras : int[]" Usage="System.Globalization.TaiwanCalendar.Eras" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3b232-209">Gets the list of eras in the <see cref="T:System.Globalization.TaiwanCalendar" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-209">Gets the list of eras in the <see cref="T:System.Globalization.TaiwanCalendar" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3b232-210">一个数组，包含单个元素为其值始终是当前纪元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-210">An array that consists of a single element for which the value is always the current era.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b232-211">此属性返回的数组中的值是范围从 1 到的最大数纪元的数字。</span><span class="sxs-lookup"><span data-stu-id="3b232-211">The values in the array returned by this property are numbers that range from 1 to the largest era number.</span></span> <span data-ttu-id="3b232-212">在第一个数组元素中返回的最大数纪元和中的最后一个元素返回的最小数纪元。</span><span class="sxs-lookup"><span data-stu-id="3b232-212">The largest era number is returned in the first array element and the smallest era number is returned in the last element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfMonth">
      <MemberSignature Language="C#" Value="public override int GetDayOfMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetDayOfMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfMonth : DateTime -&gt; int" Usage="taiwanCalendar.GetDayOfMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="3b232-213">The <see cref="T:System.DateTime" /> to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-213">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b232-214">Returns the day of the month in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-214">Returns the day of the month in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b232-215">An integer from 1 to 31 that represents the day of the month in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-215">An integer from 1 to 31 that represents the day of the month in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3b232-216">下面的代码示例演示如何将<xref:System.Globalization.TaiwanCalendar.GetDayOfMonth%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3b232-216">The following code example demonstrates the use of the <xref:System.Globalization.TaiwanCalendar.GetDayOfMonth%2A> method.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CPP/taiwancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CS/taiwancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/VB/taiwancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Day" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDayOfWeek(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfWeek">
      <MemberSignature Language="C#" Value="public override DayOfWeek GetDayOfWeek (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DayOfWeek GetDayOfWeek(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetDayOfWeek(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfWeek (time As DateTime) As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DayOfWeek GetDayOfWeek(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfWeek : DateTime -&gt; DayOfWeek" Usage="taiwanCalendar.GetDayOfWeek time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="3b232-217">The <see cref="T:System.DateTime" /> to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-217">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b232-218">Returns the day of the week in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-218">Returns the day of the week in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b232-219">A <see cref="T:System.DayOfWeek" /> value that represents the day of the week in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-219">A <see cref="T:System.DayOfWeek" /> value that represents the day of the week in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b232-220"><xref:System.DayOfWeek>值如下：</span><span class="sxs-lookup"><span data-stu-id="3b232-220">The <xref:System.DayOfWeek> values are as follows:</span></span>  
  
|<span data-ttu-id="3b232-221">DayOfWeek 值</span><span class="sxs-lookup"><span data-stu-id="3b232-221">DayOfWeek value</span></span>|<span data-ttu-id="3b232-222">指示</span><span class="sxs-lookup"><span data-stu-id="3b232-222">which indicates</span></span>|  
|---------------------|---------------------|  
|<span data-ttu-id="3b232-223">星期日</span><span class="sxs-lookup"><span data-stu-id="3b232-223">Sunday</span></span>|<span data-ttu-id="3b232-224">星期日</span><span class="sxs-lookup"><span data-stu-id="3b232-224">星期日</span></span>|  
|<span data-ttu-id="3b232-225">星期一</span><span class="sxs-lookup"><span data-stu-id="3b232-225">Monday</span></span>|<span data-ttu-id="3b232-226">星期一</span><span class="sxs-lookup"><span data-stu-id="3b232-226">星期一</span></span>|  
|<span data-ttu-id="3b232-227">星期二</span><span class="sxs-lookup"><span data-stu-id="3b232-227">Tuesday</span></span>|<span data-ttu-id="3b232-228">星期二</span><span class="sxs-lookup"><span data-stu-id="3b232-228">星期二</span></span>|  
|<span data-ttu-id="3b232-229">星期三</span><span class="sxs-lookup"><span data-stu-id="3b232-229">Wednesday</span></span>|<span data-ttu-id="3b232-230">星期三</span><span class="sxs-lookup"><span data-stu-id="3b232-230">星期三</span></span>|  
|<span data-ttu-id="3b232-231">星期四</span><span class="sxs-lookup"><span data-stu-id="3b232-231">Thursday</span></span>|<span data-ttu-id="3b232-232">星期四</span><span class="sxs-lookup"><span data-stu-id="3b232-232">星期四</span></span>|  
|<span data-ttu-id="3b232-233">星期五</span><span class="sxs-lookup"><span data-stu-id="3b232-233">Friday</span></span>|<span data-ttu-id="3b232-234">星期五</span><span class="sxs-lookup"><span data-stu-id="3b232-234">星期五</span></span>|  
|<span data-ttu-id="3b232-235">星期六</span><span class="sxs-lookup"><span data-stu-id="3b232-235">Saturday</span></span>|<span data-ttu-id="3b232-236">星期六</span><span class="sxs-lookup"><span data-stu-id="3b232-236">星期六</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3b232-237">下面的代码示例演示如何将<xref:System.Globalization.TaiwanCalendar.GetDayOfWeek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3b232-237">The following code example demonstrates the use of the <xref:System.Globalization.TaiwanCalendar.GetDayOfWeek%2A> method.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CPP/taiwancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CS/taiwancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/VB/taiwancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfWeek" />
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDayOfMonth(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfYear">
      <MemberSignature Language="C#" Value="public override int GetDayOfYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetDayOfYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfYear(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfYear : DateTime -&gt; int" Usage="taiwanCalendar.GetDayOfYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="3b232-238">The <see cref="T:System.DateTime" /> to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-238">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b232-239">Returns the day of the year in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-239">Returns the day of the year in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b232-240">An integer from 1 to 366 that represents the day of the year in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-240">An integer from 1 to 366 that represents the day of the year in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b232-241">每年的日期被指从该年度的第一天的天数。</span><span class="sxs-lookup"><span data-stu-id="3b232-241">The day of the year is defined as the number of days from the first day of the year.</span></span> <span data-ttu-id="3b232-242">例如，<xref:System.Globalization.TaiwanCalendar.GetDayOfYear%2A>对的第一个月的第一天返回 1，和<xref:System.Globalization.TaiwanCalendar.GetDayOfYear%2A>最后一天的上个月返回总天数这一年。</span><span class="sxs-lookup"><span data-stu-id="3b232-242">For example, <xref:System.Globalization.TaiwanCalendar.GetDayOfYear%2A> for the first day of the first month returns 1, and <xref:System.Globalization.TaiwanCalendar.GetDayOfYear%2A> for the last day of the last month returns the total number of days in that year.</span></span> <span data-ttu-id="3b232-243">总是返回的值相同<xref:System.Globalization.TaiwanCalendar.GetDaysInYear%2A>。</span><span class="sxs-lookup"><span data-stu-id="3b232-243">The total is the same as the value returned by <xref:System.Globalization.TaiwanCalendar.GetDaysInYear%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b232-244">下面的代码示例演示如何将<xref:System.Globalization.TaiwanCalendar.GetDayOfYear%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3b232-244">The following code example demonstrates the use of the <xref:System.Globalization.TaiwanCalendar.GetDayOfYear%2A> method.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CPP/taiwancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CS/taiwancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/VB/taiwancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfYear" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDayOfWeek(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public override int GetDaysInMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInMonth (year As Integer, month As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="override this.GetDaysInMonth : int * int * int -&gt; int" Usage="taiwanCalendar.GetDaysInMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="3b232-245">An integer that represents the year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-245">An integer that represents the year.</span>
          </span>
        </param>
        <param name="month">
          <span data-ttu-id="3b232-246">An integer from 1 to 12 that represents the month.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-246">An integer from 1 to 12 that represents the month.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="3b232-247">An integer that represents the era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-247">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b232-248">Returns the number of days in the specified month in the specified year in the specified era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-248">Returns the number of days in the specified month in the specified year in the specified era.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b232-249">The number of days in the specified month in the specified year in the specified era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-249">The number of days in the specified month in the specified year in the specified era.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b232-250">例如，此方法返回 28 或 29，年 2 月 (`month` = 2)，具体取决于`year`是否为闰年。</span><span class="sxs-lookup"><span data-stu-id="3b232-250">For example, this method returns 28 or 29 for February (`month` = 2), depending on whether `year` is a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b232-251">下面的示例调用<xref:System.Globalization.TaiwanCalendar.GetDaysInMonth%2A>为每个五年中每个纪元中的第二个月。</span><span class="sxs-lookup"><span data-stu-id="3b232-251">The following example calls <xref:System.Globalization.TaiwanCalendar.GetDaysInMonth%2A> for the second month in each of five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar.GetDaysInMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.GetDaysInMonth/CPP/taiwancalendar_getdaysinmonth.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar.GetDaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.GetDaysInMonth/CS/taiwancalendar_getdaysinmonth.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar.GetDaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.GetDaysInMonth/VB/taiwancalendar_getdaysinmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b232-252">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-252">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="3b232-253">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-253">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="3b232-254">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-254">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.TaiwanCalendar.Eras" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public override int GetDaysInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetDaysInYear : int * int -&gt; int" Usage="taiwanCalendar.GetDaysInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="3b232-255">An integer that represents the year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-255">An integer that represents the year.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="3b232-256">An integer that represents the era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-256">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b232-257">Returns the number of days in the specified year in the specified era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-257">Returns the number of days in the specified year in the specified era.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b232-258">The number of days in the specified year in the specified era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-258">The number of days in the specified year in the specified era.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b232-259">例如，此方法返回 365 或 366，具体取决于是否`year`是否为闰年。</span><span class="sxs-lookup"><span data-stu-id="3b232-259">For example, this method returns 365 or 366, depending on whether `year` is a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b232-260">下面的示例调用<xref:System.Globalization.TaiwanCalendar.GetDaysInYear%2A>为每个纪元中的五年。</span><span class="sxs-lookup"><span data-stu-id="3b232-260">The following example calls <xref:System.Globalization.TaiwanCalendar.GetDaysInYear%2A> for five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar.GetDaysInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.GetDaysInYear/CPP/taiwancalendar_getdaysinyear.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar.GetDaysInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.GetDaysInYear/CS/taiwancalendar_getdaysinyear.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar.GetDaysInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.GetDaysInYear/VB/taiwancalendar_getdaysinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b232-261">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-261">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="3b232-262">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-262">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.TaiwanCalendar.Eras" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public override int GetEra (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEra(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetEra(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEra (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetEra(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetEra : DateTime -&gt; int" Usage="taiwanCalendar.GetEra time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="3b232-263">The <see cref="T:System.DateTime" /> to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-263">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b232-264">Returns the era in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-264">Returns the era in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b232-265">An integer that represents the era in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-265">An integer that represents the era in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b232-266"><xref:System.Globalization.TaiwanCalendar>类只识别当前纪元。</span><span class="sxs-lookup"><span data-stu-id="3b232-266">The <xref:System.Globalization.TaiwanCalendar> class recognizes only the current era.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b232-267">下面的代码示例演示如何将<xref:System.Globalization.TaiwanCalendar.GetEra%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3b232-267">The following code example demonstrates the use of the <xref:System.Globalization.TaiwanCalendar.GetEra%2A> method.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CPP/taiwancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CS/taiwancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/VB/taiwancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.TaiwanCalendar.Eras" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetYear(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public override int GetLeapMonth (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLeapMonth(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetLeapMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLeapMonth (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetLeapMonth(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetLeapMonth : int * int -&gt; int" Usage="taiwanCalendar.GetLeapMonth (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="3b232-268">A year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-268">A year.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="3b232-269">An era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-269">An era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b232-270">Calculates the leap month for a specified year and era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-270">Calculates the leap month for a specified year and era.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b232-271">The return value is always 0 because the <see cref="T:System.Globalization.TaiwanCalendar" /> class does not support the notion of a leap month.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-271">The return value is always 0 because the <see cref="T:System.Globalization.TaiwanCalendar" /> class does not support the notion of a leap month.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b232-272">在日历中支持闰月的概念，在某个特定的月份之后或在每一年中的任何月份之后发生的闰月。</span><span class="sxs-lookup"><span data-stu-id="3b232-272">In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year.</span></span> <span data-ttu-id="3b232-273">例如，<xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>方法返回一个数字，介于 1 和 13，该值指示指定的日期与关联的月份。</span><span class="sxs-lookup"><span data-stu-id="3b232-273">For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns a number between 1 and 13 that indicates the month associated with a specified date.</span></span> <span data-ttu-id="3b232-274">如果一年中，在第八个和第 9 个月之间存在闰月<xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>方法闰第八个月的 9 和 10 第 9 个月的第八个月份返回 8。</span><span class="sxs-lookup"><span data-stu-id="3b232-274">If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMonth">
      <MemberSignature Language="C#" Value="public override int GetMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetMonth : DateTime -&gt; int" Usage="taiwanCalendar.GetMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="3b232-275">The <see cref="T:System.DateTime" /> to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-275">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b232-276">Returns the month in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-276">Returns the month in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b232-277">An integer from 1 to 12 that represents the month in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-277">An integer from 1 to 12 that represents the month in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3b232-278">下面的代码示例演示如何将<xref:System.Globalization.TaiwanCalendar.GetMonth%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3b232-278">The following code example demonstrates the use of the <xref:System.Globalization.TaiwanCalendar.GetMonth%2A> method.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CPP/taiwancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CS/taiwancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/VB/taiwancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Month" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetYear(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public override int GetMonthsInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonthsInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonthsInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonthsInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetMonthsInYear : int * int -&gt; int" Usage="taiwanCalendar.GetMonthsInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="3b232-279">An integer that represents the year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-279">An integer that represents the year.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="3b232-280">An integer that represents the era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-280">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b232-281">Returns the number of months in the specified year in the specified era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-281">Returns the number of months in the specified year in the specified era.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b232-282">The number of months in the specified year in the specified era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-282">The number of months in the specified year in the specified era.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3b232-283">下面的示例调用<xref:System.Globalization.TaiwanCalendar.GetMonthsInYear%2A>为每个纪元中的五年。</span><span class="sxs-lookup"><span data-stu-id="3b232-283">The following example calls <xref:System.Globalization.TaiwanCalendar.GetMonthsInYear%2A> for five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar.GetMonthsInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.GetMonthsInYear/CPP/taiwancalendar_getmonthsinyear.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar.GetMonthsInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.GetMonthsInYear/CS/taiwancalendar_getmonthsinyear.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar.GetMonthsInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.GetMonthsInYear/VB/taiwancalendar_getmonthsinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b232-284">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-284">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="3b232-285">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-285">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.TaiwanCalendar.Eras" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDaysInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetWeekOfYear">
      <MemberSignature Language="C#" Value="public override int GetWeekOfYear (DateTime time, System.Globalization.CalendarWeekRule rule, DayOfWeek firstDayOfWeek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetWeekOfYear(valuetype System.DateTime time, valuetype System.Globalization.CalendarWeekRule rule, valuetype System.DayOfWeek firstDayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetWeekOfYear (time As DateTime, rule As CalendarWeekRule, firstDayOfWeek As DayOfWeek) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetWeekOfYear(DateTime time, System::Globalization::CalendarWeekRule rule, DayOfWeek firstDayOfWeek);" />
      <MemberSignature Language="F#" Value="override this.GetWeekOfYear : DateTime * System.Globalization.CalendarWeekRule * DayOfWeek -&gt; int" Usage="taiwanCalendar.GetWeekOfYear (time, rule, firstDayOfWeek)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="rule" Type="System.Globalization.CalendarWeekRule" />
        <Parameter Name="firstDayOfWeek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="3b232-286">The <see cref="T:System.DateTime" /> to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-286">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <param name="rule">
          <span data-ttu-id="3b232-287">One of the <see cref="T:System.Globalization.CalendarWeekRule" /> values that defines a calendar week.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-287">One of the <see cref="T:System.Globalization.CalendarWeekRule" /> values that defines a calendar week.</span>
          </span>
        </param>
        <param name="firstDayOfWeek">
          <span data-ttu-id="3b232-288">One of the <see cref="T:System.DayOfWeek" /> values that represents the first day of the week.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-288">One of the <see cref="T:System.DayOfWeek" /> values that represents the first day of the week.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b232-289">Returns the week of the year that includes the date in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-289">Returns the week of the year that includes the date in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b232-290">A positive integer that represents the week of the year that includes the date in the <paramref name="time" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-290">A positive integer that represents the week of the year that includes the date in the <paramref name="time" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b232-291">此方法可以用于通过设置确定的年份中的周数`time`年份的最后一天的参数。</span><span class="sxs-lookup"><span data-stu-id="3b232-291">This method can be used to determine the number of weeks in the year by setting the `time` parameter to the last day of the year.</span></span>  
  
 <span data-ttu-id="3b232-292"><xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>属性包含可用于的区域性特定值`rule`和`firstDayOfWeek`参数。</span><span class="sxs-lookup"><span data-stu-id="3b232-292">The <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property contains culture-specific values that can be used for the `rule` and `firstDayOfWeek` parameters.</span></span>  
  
 <span data-ttu-id="3b232-293"><xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>属性<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>包含默认<xref:System.DayOfWeek>值，该值表示特定区域性，使用中指定的日历周的第一天<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>属性<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3b232-293">The <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> contains the default <xref:System.DayOfWeek> value that represents the first day of the week for a specific culture, using the calendar specified in the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3b232-294"><xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A>属性<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>包含默认<xref:System.Globalization.CalendarWeekRule>值，该值定义的特定区域性，使用的日历中指定一个日历周<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>属性<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3b232-294">The <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> contains the default <xref:System.Globalization.CalendarWeekRule> value that defines a calendar week for a specific culture, using the calendar specified in the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3b232-295">例如，在<xref:System.Globalization.GregorianCalendar>、<xref:System.Globalization.Calendar.GetWeekOfYear%2A>的 1 月 1 日的方法返回 1。</span><span class="sxs-lookup"><span data-stu-id="3b232-295">For example, in <xref:System.Globalization.GregorianCalendar>, the <xref:System.Globalization.Calendar.GetWeekOfYear%2A> method for January 1 returns 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b232-296">下面的代码示例演示如何的结果<xref:System.Globalization.Calendar.GetWeekOfYear%2A>各不相同，具体取决于<xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>和<xref:System.Globalization.CalendarWeekRule>使用的值。</span><span class="sxs-lookup"><span data-stu-id="3b232-296">The following code example shows how the result of <xref:System.Globalization.Calendar.GetWeekOfYear%2A> varies depending on the <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> and <xref:System.Globalization.CalendarWeekRule> values used.</span></span> <span data-ttu-id="3b232-297">如果指定的日期是年中的最后一天<xref:System.Globalization.Calendar.GetWeekOfYear%2A>返回该年份的总的周数。</span><span class="sxs-lookup"><span data-stu-id="3b232-297">If the specified date is the last day of the year, <xref:System.Globalization.Calendar.GetWeekOfYear%2A> returns the total number of weeks in that year.</span></span>  
  
 [!code-cpp[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CPP/yslin_calendar_getweekofyear.cpp#1)]
 [!code-csharp[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CS/yslin_calendar_getweekofyear.cs#1)]
 [!code-vb[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/VB/yslin_calendar_getweekofyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b232-298">
            <paramref name="time" /> or <paramref name="firstDayOfWeek" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-298">
              <paramref name="time" /> or <paramref name="firstDayOfWeek" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="3b232-299">-or-  <paramref name="rule" /> is not a valid <see cref="T:System.Globalization.CalendarWeekRule" /> value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-299">-or-  <paramref name="rule" /> is not a valid <see cref="T:System.Globalization.CalendarWeekRule" /> value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetYear">
      <MemberSignature Language="C#" Value="public override int GetYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.GetYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetYear(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetYear : DateTime -&gt; int" Usage="taiwanCalendar.GetYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="3b232-300">The <see cref="T:System.DateTime" /> to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-300">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b232-301">Returns the year in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-301">Returns the year in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b232-302">An integer that represents the year in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-302">An integer that represents the year in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3b232-303">下面的代码示例演示如何将<xref:System.Globalization.TaiwanCalendar.GetYear%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3b232-303">The following code example demonstrates the use of the <xref:System.Globalization.TaiwanCalendar.GetYear%2A> method.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CPP/taiwancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/CS/taiwancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_AddGet/VB/taiwancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Year" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDayOfYear(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public override bool IsLeapDay (int year, int month, int day, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapDay(int32 year, int32 month, int32 day, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapDay (year As Integer, month As Integer, day As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapDay(int year, int month, int day, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapDay : int * int * int * int -&gt; bool" Usage="taiwanCalendar.IsLeapDay (year, month, day, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="3b232-304">An integer that represents the year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-304">An integer that represents the year.</span>
          </span>
        </param>
        <param name="month">
          <span data-ttu-id="3b232-305">An integer from 1 to 12 that represents the month.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-305">An integer from 1 to 12 that represents the month.</span>
          </span>
        </param>
        <param name="day">
          <span data-ttu-id="3b232-306">An integer from 1 to 31 that represents the day.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-306">An integer from 1 to 31 that represents the day.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="3b232-307">An integer that represents the era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-307">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b232-308">Determines whether the specified date in the specified era is a leap day.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-308">Determines whether the specified date in the specified era is a leap day.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b232-309">
            <see langword="true" /> if the specified day is a leap day; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-309">
              <see langword="true" /> if the specified day is a leap day; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b232-310">表示中国台湾日历闰年公历日历中的相同闰年与相对应。</span><span class="sxs-lookup"><span data-stu-id="3b232-310">Leap years in the Taiwan calendar correspond to the same leap years in the Gregorian calendar.</span></span> <span data-ttu-id="3b232-311">闰年公历日历中定义为公历年份整除的由 4 个，但如果它是由 100 可除外。</span><span class="sxs-lookup"><span data-stu-id="3b232-311">A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="3b232-312">但是，可被被 400 的公历年是闰年。</span><span class="sxs-lookup"><span data-stu-id="3b232-312">However, Gregorian years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="3b232-313">平 365 年天并且初始屏幕闰年有 366 天。</span><span class="sxs-lookup"><span data-stu-id="3b232-313">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="3b232-314">闰日是仅在闰年中发生了一天。</span><span class="sxs-lookup"><span data-stu-id="3b232-314">A leap day is a day that occurs only in a leap year.</span></span> <span data-ttu-id="3b232-315">例如，年 2 月 29 日是唯一的闰日。</span><span class="sxs-lookup"><span data-stu-id="3b232-315">For example, the 29th day of February is the only leap day.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b232-316">下面的示例调用<xref:System.Globalization.TaiwanCalendar.IsLeapDay%2A>五年中每个纪元的第二个月份 （年 2 月） 的最后一天。</span><span class="sxs-lookup"><span data-stu-id="3b232-316">The following example calls <xref:System.Globalization.TaiwanCalendar.IsLeapDay%2A> for the last day of the second month (February) for five years in each of the eras.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar.IsLeapDay#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.IsLeapDay/CPP/taiwancalendar_isleapday.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar.IsLeapDay#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.IsLeapDay/CS/taiwancalendar_isleapday.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar.IsLeapDay#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.IsLeapDay/VB/taiwancalendar_isleapday.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b232-317">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-317">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="3b232-318">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-318">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="3b232-319">-or-  <paramref name="day" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-319">-or-  <paramref name="day" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="3b232-320">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-320">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.TaiwanCalendar.Eras" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public override bool IsLeapMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapMonth (year As Integer, month As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapMonth : int * int * int -&gt; bool" Usage="taiwanCalendar.IsLeapMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="3b232-321">An integer that represents the year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-321">An integer that represents the year.</span>
          </span>
        </param>
        <param name="month">
          <span data-ttu-id="3b232-322">An integer from 1 to 12 that represents the month.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-322">An integer from 1 to 12 that represents the month.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="3b232-323">An integer that represents the era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-323">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b232-324">Determines whether the specified month in the specified year in the specified era is a leap month.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-324">Determines whether the specified month in the specified year in the specified era is a leap month.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b232-325">This method always returns <see langword="false" />, unless overridden by a derived class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-325">This method always returns <see langword="false" />, unless overridden by a derived class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b232-326">表示中国台湾日历闰年公历日历中的相同闰年与相对应。</span><span class="sxs-lookup"><span data-stu-id="3b232-326">Leap years in the Taiwan calendar correspond to the same leap years in the Gregorian calendar.</span></span> <span data-ttu-id="3b232-327">闰年公历日历中定义为公历年份整除的由 4 个，但如果它是由 100 可除外。</span><span class="sxs-lookup"><span data-stu-id="3b232-327">A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="3b232-328">但是，可被被 400 的公历年是闰年。</span><span class="sxs-lookup"><span data-stu-id="3b232-328">However, Gregorian years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="3b232-329">平 365 年天并且初始屏幕闰年有 366 天。</span><span class="sxs-lookup"><span data-stu-id="3b232-329">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="3b232-330">闰月是仅在闰年中发生的整月。</span><span class="sxs-lookup"><span data-stu-id="3b232-330">A leap month is an entire month that occurs only in a leap year.</span></span> <span data-ttu-id="3b232-331">表示中国台湾日历不具有任何闰月。</span><span class="sxs-lookup"><span data-stu-id="3b232-331">The Taiwan calendar does not have any leap months.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b232-332">下面的示例调用<xref:System.Globalization.TaiwanCalendar.IsLeapMonth%2A>当前纪元中的五年中的所有每月。</span><span class="sxs-lookup"><span data-stu-id="3b232-332">The following example calls <xref:System.Globalization.TaiwanCalendar.IsLeapMonth%2A> for all the months in five years in the current era.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar.IsLeapMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.IsLeapMonth/CPP/taiwancalendar_isleapmonth.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar.IsLeapMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.IsLeapMonth/CS/taiwancalendar_isleapmonth.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar.IsLeapMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.IsLeapMonth/VB/taiwancalendar_isleapmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b232-333">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-333">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="3b232-334">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-334">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="3b232-335">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-335">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.TaiwanCalendar.Eras" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public override bool IsLeapYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.IsLeapYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapYear (year As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapYear : int * int -&gt; bool" Usage="taiwanCalendar.IsLeapYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="3b232-336">An integer that represents the year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-336">An integer that represents the year.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="3b232-337">An integer that represents the era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-337">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b232-338">Determines whether the specified year in the specified era is a leap year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-338">Determines whether the specified year in the specified era is a leap year.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b232-339">
            <see langword="true" /> if the specified year is a leap year; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-339">
              <see langword="true" /> if the specified year is a leap year; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b232-340">表示中国台湾日历闰年公历日历中的相同闰年与相对应。</span><span class="sxs-lookup"><span data-stu-id="3b232-340">Leap years in the Taiwan calendar correspond to the same leap years in the Gregorian calendar.</span></span> <span data-ttu-id="3b232-341">闰年公历日历中定义为公历年份整除的由 4 个，但如果它是由 100 可除外。</span><span class="sxs-lookup"><span data-stu-id="3b232-341">A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.</span></span> <span data-ttu-id="3b232-342">但是，可被被 400 的公历年是闰年。</span><span class="sxs-lookup"><span data-stu-id="3b232-342">However, Gregorian years that are divisible by 400 are leap years.</span></span> <span data-ttu-id="3b232-343">平 365 年天并且初始屏幕闰年有 366 天。</span><span class="sxs-lookup"><span data-stu-id="3b232-343">A common year has 365 days and a leap year has 366 days.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b232-344">下面的示例调用<xref:System.Globalization.TaiwanCalendar.IsLeapYear%2A>五年中每个纪元。</span><span class="sxs-lookup"><span data-stu-id="3b232-344">The following example calls <xref:System.Globalization.TaiwanCalendar.IsLeapYear%2A> for five years in each of the eras.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar.IsLeapYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.IsLeapYear/CPP/taiwancalendar_isleapyear.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar.IsLeapYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.IsLeapYear/CS/taiwancalendar_isleapyear.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar.IsLeapYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar.IsLeapYear/VB/taiwancalendar_isleapyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b232-345">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-345">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="3b232-346">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-346">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.TaiwanCalendar.Eras" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MaxSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MaxSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TaiwanCalendar.MaxSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MaxSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxSupportedDateTime : DateTime" Usage="System.Globalization.TaiwanCalendar.MaxSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3b232-347">Gets the latest date and time supported by the <see cref="T:System.Globalization.TaiwanCalendar" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-347">Gets the latest date and time supported by the <see cref="T:System.Globalization.TaiwanCalendar" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3b232-348">最新的日期和时间受<see cref="T:System.Globalization.TaiwanCalendar" />类，该类是等效于的那一刻年 12 月 31 日公元 9999 年</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-348">The latest date and time supported by the <see cref="T:System.Globalization.TaiwanCalendar" /> class, which is equivalent to the last moment of December 31, 9999 C.E.</span>
          </span>
          <span data-ttu-id="3b232-349">在公历日历中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-349">in the Gregorian calendar.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3b232-350">下面的代码示例获取的最小值和日历的最大值。</span><span class="sxs-lookup"><span data-stu-id="3b232-350">The following code example gets the minimum value and the maximum value of the calendar.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_MinMax/CPP/taiwancalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_MinMax/CS/taiwancalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_MinMax/VB/taiwancalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MinSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TaiwanCalendar.MinSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MinSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MinSupportedDateTime : DateTime" Usage="System.Globalization.TaiwanCalendar.MinSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3b232-351">Gets the earliest date and time supported by the <see cref="T:System.Globalization.TaiwanCalendar" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-351">Gets the earliest date and time supported by the <see cref="T:System.Globalization.TaiwanCalendar" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3b232-352">最早的日期和时间受<see cref="T:System.Globalization.TaiwanCalendar" />类，该类是等效于公元 1912 年 1 月 1 日的那一刻</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-352">The earliest date and time supported by the <see cref="T:System.Globalization.TaiwanCalendar" /> class, which is equivalent to the first moment of January 1, 1912 C.E.</span>
          </span>
          <span data-ttu-id="3b232-353">在公历日历中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-353">in the Gregorian calendar.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b232-354">Microsoft Visual Basic 表示时间上支持的最小日期的指定时间作为<xref:System.DateTime>，即公元 0001 年 1 月 1 日</span><span class="sxs-lookup"><span data-stu-id="3b232-354">Microsoft Visual Basic represents time of day as the specified time on the minimum date supported by <xref:System.DateTime>, which is January 1, 0001 C.E.</span></span> <span data-ttu-id="3b232-355">但是，<xref:System.Globalization.TaiwanCalendar>类不支持该最小日期。</span><span class="sxs-lookup"><span data-stu-id="3b232-355">However, the <xref:System.Globalization.TaiwanCalendar> class does not support that minimum date.</span></span> <span data-ttu-id="3b232-356">因此，如果你的应用程序调用一个方法以设置使用当前日历时间的格式，但未指定的格式说明符，格式设置使用 ISO 8601 可排序 ("s") 日期/时间模式格式说明符而不是默认常规 ("G") 日期 /时间模式格式说明符。</span><span class="sxs-lookup"><span data-stu-id="3b232-356">Consequently, if your application calls a method to format the time of day using the current calendar but does not specify a format specifier, formatting uses the ISO 8601 sortable ("s") date/time pattern format specifier instead of the default general ("G") date/time pattern format specifier.</span></span> <span data-ttu-id="3b232-357">有关详细信息，请参阅[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="3b232-357">For more information, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3b232-358">下面的代码示例获取的最小值和日历的最大值。</span><span class="sxs-lookup"><span data-stu-id="3b232-358">The following code example gets the minimum value and the maximum value of the calendar.</span></span>  
  
 [!code-cpp[System.Globalization.TaiwanCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_MinMax/CPP/taiwancalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.TaiwanCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_MinMax/CS/taiwancalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.TaiwanCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TaiwanCalendar_MinMax/VB/taiwancalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToDateTime (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="F#" Value="override this.ToDateTime : int * int * int * int * int * int * int * int -&gt; DateTime" Usage="taiwanCalendar.ToDateTime (year, month, day, hour, minute, second, millisecond, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="3b232-359">An integer that represents the year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-359">An integer that represents the year.</span>
          </span>
        </param>
        <param name="month">
          <span data-ttu-id="3b232-360">An integer from 1 to 12 that represents the month.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-360">An integer from 1 to 12 that represents the month.</span>
          </span>
        </param>
        <param name="day">
          <span data-ttu-id="3b232-361">An integer from 1 to 31 that represents the day.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-361">An integer from 1 to 31 that represents the day.</span>
          </span>
        </param>
        <param name="hour">
          <span data-ttu-id="3b232-362">An integer from 0 to 23 that represents the hour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-362">An integer from 0 to 23 that represents the hour.</span>
          </span>
        </param>
        <param name="minute">
          <span data-ttu-id="3b232-363">An integer from 0 to 59 that represents the minute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-363">An integer from 0 to 59 that represents the minute.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="3b232-364">An integer from 0 to 59 that represents the second.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-364">An integer from 0 to 59 that represents the second.</span>
          </span>
        </param>
        <param name="millisecond">
          <span data-ttu-id="3b232-365">An integer from 0 to 999 that represents the millisecond.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-365">An integer from 0 to 999 that represents the millisecond.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="3b232-366">An integer that represents the era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-366">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b232-367">Returns a <see cref="T:System.DateTime" /> that is set to the specified date and time in the specified era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-367">Returns a <see cref="T:System.DateTime" /> that is set to the specified date and time in the specified era.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b232-368">The <see cref="T:System.DateTime" /> that is set to the specified date and time in the current era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-368">The <see cref="T:System.DateTime" /> that is set to the specified date and time in the current era.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b232-369">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-369">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="3b232-370">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-370">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="3b232-371">-or-  <paramref name="day" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-371">-or-  <paramref name="day" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="3b232-372">-or-  <paramref name="hour" /> is less than zero or greater than 23.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-372">-or-  <paramref name="hour" /> is less than zero or greater than 23.</span>
          </span>
          <span data-ttu-id="3b232-373">-or-  <paramref name="minute" /> is less than zero or greater than 59.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-373">-or-  <paramref name="minute" /> is less than zero or greater than 59.</span>
          </span>
          <span data-ttu-id="3b232-374">-or-  <paramref name="second" /> is less than zero or greater than 59.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-374">-or-  <paramref name="second" /> is less than zero or greater than 59.</span>
          </span>
          <span data-ttu-id="3b232-375">-or-  <paramref name="millisecond" /> is less than zero or greater than 999.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-375">-or-  <paramref name="millisecond" /> is less than zero or greater than 999.</span>
          </span>
          <span data-ttu-id="3b232-376">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-376">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="P:System.Globalization.TaiwanCalendar.Eras" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.TaiwanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToFourDigitYear">
      <MemberSignature Language="C#" Value="public override int ToFourDigitYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ToFourDigitYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TaiwanCalendar.ToFourDigitYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToFourDigitYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ToFourDigitYear(int year);" />
      <MemberSignature Language="F#" Value="override this.ToFourDigitYear : int -&gt; int" Usage="taiwanCalendar.ToFourDigitYear year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="3b232-377">A two-digit or four-digit integer that represents the year to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-377">A two-digit or four-digit integer that represents the year to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3b232-378">Converts the specified year to a four-digit year by using the <see cref="P:System.Globalization.TaiwanCalendar.TwoDigitYearMax" /> property to determine the appropriate century.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-378">Converts the specified year to a four-digit year by using the <see cref="P:System.Globalization.TaiwanCalendar.TwoDigitYearMax" /> property to determine the appropriate century.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3b232-379">An integer that contains the four-digit representation of <paramref name="year" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-379">An integer that contains the four-digit representation of <paramref name="year" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b232-380">此方法实现 <xref:System.Globalization.Calendar.ToFourDigitYear%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3b232-380">This method implements <xref:System.Globalization.Calendar.ToFourDigitYear%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3b232-381">因为台湾日历中的每年通常少于四位数，此实现始终返回的值`year`参数。</span><span class="sxs-lookup"><span data-stu-id="3b232-381">Because the year in the Taiwan calendar is typically less than four digits long, this implementation always returns the value of the `year` parameter.</span></span>  
  
 <span data-ttu-id="3b232-382"><xref:System.Globalization.TaiwanCalendar.ToFourDigitYear%2A> 支持两位数年份或四位数年份。</span><span class="sxs-lookup"><span data-stu-id="3b232-382"><xref:System.Globalization.TaiwanCalendar.ToFourDigitYear%2A> supports either a two-digit year or a four-digit year.</span></span> <span data-ttu-id="3b232-383">将两位数年份值 (小于 100) 传递会导致方法的值转换为一个四位数字值根据<xref:System.Globalization.TaiwanCalendar.TwoDigitYearMax%2A>值，该值表示相应的纪元。</span><span class="sxs-lookup"><span data-stu-id="3b232-383">Passing a two-digit year value (less than 100) causes the method to convert the value to a four-digit value according to the <xref:System.Globalization.TaiwanCalendar.TwoDigitYearMax%2A> value representing the appropriate century.</span></span> <span data-ttu-id="3b232-384">如果应用程序提供在支持的日历范围到内的四位数年份值<xref:System.Globalization.TaiwanCalendar.ToFourDigitYear%2A>，该方法返回实际的输入的值。</span><span class="sxs-lookup"><span data-stu-id="3b232-384">If the application supplies a four-digit year value that is within the supported calendar range to <xref:System.Globalization.TaiwanCalendar.ToFourDigitYear%2A>, the method returns the actual input value.</span></span> <span data-ttu-id="3b232-385">如果应用程序提供一个四位数字值超出了支持的日历，或者它提供了负值，则该方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="3b232-385">If the application supplies a four-digit value that is outside the supported calendar range, or if it supplies a negative value, the method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b232-386">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-386">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.TaiwanCalendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="TwoDigitYearMax">
      <MemberSignature Language="C#" Value="public override int TwoDigitYearMax { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TwoDigitYearMax" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TaiwanCalendar.TwoDigitYearMax" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TwoDigitYearMax As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TwoDigitYearMax { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TwoDigitYearMax : int with get, set" Usage="System.Globalization.TaiwanCalendar.TwoDigitYearMax" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3b232-387">Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-387">Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3b232-388">可以用两位数年份表示的 100 年范围内的最后一年。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-388">The last year of a 100-year range that can be represented by a 2-digit year.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3b232-389">此属性实现 <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3b232-389">This property implements <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3b232-390">此实现因为台湾日历中的每年通常少于四位数，默认情况下返回 99，不影响的返回值<xref:System.Globalization.TaiwanCalendar.ToFourDigitYear%2A>。</span><span class="sxs-lookup"><span data-stu-id="3b232-390">Because the year in the Taiwan calendar is typically less than four digits long, this implementation returns 99 by default and does not affect the return value of <xref:System.Globalization.TaiwanCalendar.ToFourDigitYear%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3b232-391">The value specified in a set operation is less than 99.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-391">The value specified in a set operation is less than 99.</span>
          </span>
          <span data-ttu-id="3b232-392">-or-  The value specified in a set operation is greater than <see langword="MaxSupportedDateTime.Year" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-392">-or-  The value specified in a set operation is greater than <see langword="MaxSupportedDateTime.Year" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3b232-393">In a set operation, the current instance is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3b232-393">In a set operation, the current instance is read-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.Globalization.TaiwanCalendar.ToFourDigitYear(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>