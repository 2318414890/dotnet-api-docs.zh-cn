<Type Name="StringInfo" FullName="System.Globalization.StringInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dfcadf1280b7a99ae67ace6278f0fb80976a6481" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="05/07/2018" />
    <Meta Name="ms.locfileid" Value="33682140" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StringInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.StringInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class StringInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringInfo" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="61d5c-101">提供将字符串拆分为文本元素和循环访问这些文本元素的功能。</span>
      <span class="sxs-lookup">
        <span data-stu-id="61d5c-101">Provides functionality to split a string into text elements and to iterate through those text elements.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61d5c-102">.NET Framework 定义的文本元素的单个字符，即字形的形式显示的文本单位。</span><span class="sxs-lookup"><span data-stu-id="61d5c-102">The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.</span></span> <span data-ttu-id="61d5c-103">文本元素可以是基字符、 代理项对或组合字符序列。</span><span class="sxs-lookup"><span data-stu-id="61d5c-103">A text element can be a base character, a surrogate pair, or a combining character sequence.</span></span> <span data-ttu-id="61d5c-104">[Unicode 标准](http://go.microsoft.com/fwlink/?linkid=37123)两个代码单元，其中该对的第一个单位是一个高代理项，第二个是一个较低的序列组成的单个抽象字符的编码的字符表示形式中定义的代理项对代理项。</span><span class="sxs-lookup"><span data-stu-id="61d5c-104">The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate.</span></span> <span data-ttu-id="61d5c-105">Unicode 标准定义组合字符序列为基字符和一个或多个组合字符的组合。</span><span class="sxs-lookup"><span data-stu-id="61d5c-105">The Unicode Standard defines a combining character sequence as a combination of a base character and one or more combining characters.</span></span> <span data-ttu-id="61d5c-106">代理项对可以表示基字符或组合字符。</span><span class="sxs-lookup"><span data-stu-id="61d5c-106">A surrogate pair can represent a base character or a combining character.</span></span>  
  
 <span data-ttu-id="61d5c-107"><xref:System.Globalization.StringInfo> 类使您能够将字符串作为一系列文本元素而不是单个 <xref:System.Char> 对象进行处理。</span><span class="sxs-lookup"><span data-stu-id="61d5c-107">The <xref:System.Globalization.StringInfo> class enables you to work with a string as a series of textual elements rather than individual <xref:System.Char> objects.</span></span>  
  
 <span data-ttu-id="61d5c-108">若要实例化<xref:System.Globalization.StringInfo>对象，表示指定的字符串中，你可以执行以下任一操作：</span><span class="sxs-lookup"><span data-stu-id="61d5c-108">To instantiate a <xref:System.Globalization.StringInfo> object that represents a specified string, you can do either of the following:</span></span>  
  
-   <span data-ttu-id="61d5c-109">调用<xref:System.Globalization.StringInfo.%23ctor%28System.String%29>构造函数并将其传递字符串，<xref:System.Globalization.StringInfo>对象是表示作为自变量。</span><span class="sxs-lookup"><span data-stu-id="61d5c-109">Call the <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> constructor and pass it the string that the <xref:System.Globalization.StringInfo> object is to represent as an argument.</span></span>  
  
-   <span data-ttu-id="61d5c-110">调用默认<xref:System.Globalization.StringInfo.%23ctor>构造函数，并将字符串分配<xref:System.Globalization.StringInfo>对象是表示对<xref:System.Globalization.StringInfo.String%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="61d5c-110">Call the default <xref:System.Globalization.StringInfo.%23ctor> constructor, and assign the string that the <xref:System.Globalization.StringInfo> object is to represent to the <xref:System.Globalization.StringInfo.String%2A> property.</span></span>  
  
 <span data-ttu-id="61d5c-111">可通过两种方式处理字符串中的单个文本元素：</span><span class="sxs-lookup"><span data-stu-id="61d5c-111">You can work with the individual text elements in a string in two ways:</span></span>  
  
-   <span data-ttu-id="61d5c-112">通过枚举每个文本元素。</span><span class="sxs-lookup"><span data-stu-id="61d5c-112">By enumerating each text element.</span></span> <span data-ttu-id="61d5c-113">为此，您可以调用 <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> 方法，然后对返回的 <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> 对象重复调用 <xref:System.Globalization.TextElementEnumerator> 方法，直到此方法返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="61d5c-113">To do this, you call the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> method, and then repeatedly call the <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> method on the returned <xref:System.Globalization.TextElementEnumerator> object until the method returns `false`.</span></span>  
  
-   <span data-ttu-id="61d5c-114">通过调用 <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> 方法检索包含每个文本元素的起始索引的数组。</span><span class="sxs-lookup"><span data-stu-id="61d5c-114">By calling the <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> method to retrieve an array that contains the starting index of each text element.</span></span> <span data-ttu-id="61d5c-115">然后可通过将这些索引传递给 <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> 方法来检索单个文本元素。</span><span class="sxs-lookup"><span data-stu-id="61d5c-115">You can then retrieve individual text elements by passing these indexes to the <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> method.</span></span>  
  
 <span data-ttu-id="61d5c-116">下面的示例阐释了两种处理字符串中的文本元素的方法。</span><span class="sxs-lookup"><span data-stu-id="61d5c-116">The following example illustrates both ways of working with the text elements in a string.</span></span> <span data-ttu-id="61d5c-117">它创建两个字符串：</span><span class="sxs-lookup"><span data-stu-id="61d5c-117">It creates two strings:</span></span>  
  
-   <span data-ttu-id="61d5c-118">`strCombining`，它是一个阿拉伯语字符串，包含三个文本元素和多个 <xref:System.Char> 对象。</span><span class="sxs-lookup"><span data-stu-id="61d5c-118">`strCombining`, which is a string of Arabic characters that includes three text elements with multiple <xref:System.Char> objects.</span></span> <span data-ttu-id="61d5c-119">第一个文本元素是后跟 ARABIC HAMZA BELOW (U+-655) 和 ARABIC KASRA (U+0650) 的基字符 ARABIC LETTER ALEF (U+-627)。</span><span class="sxs-lookup"><span data-stu-id="61d5c-119">The first text element is the base character ARABIC LETTER ALEF (U+-627) followed by ARABIC HAMZA BELOW (U+-655) and ARABIC KASRA (U+0650).</span></span> <span data-ttu-id="61d5c-120">第二个文本元素是后跟 ARABIC FATHA (U+-64E) 的 ARABIC LETTER HEH (U+0647)。</span><span class="sxs-lookup"><span data-stu-id="61d5c-120">The second text element is ARABIC LETTER HEH (U+0647) followed by ARABIC FATHA (U+-64E).</span></span> <span data-ttu-id="61d5c-121">第三个文本元素是后跟 ARABIC DAMMATAN (U+064C) 的 ARABIC LETTTER BEH (U+0628)。</span><span class="sxs-lookup"><span data-stu-id="61d5c-121">The third text element is ARABIC LETTTER BEH (U+0628) followed by ARABIC DAMMATAN (U+064C).</span></span>  
  
-   <span data-ttu-id="61d5c-122">`strSurrogates`，它是一个包含三个代理项对的字符串：辅助多语言平面中的 GREEK ACROPHONIC FIVE TALENTS (U+10148)、增补表意字符平面中的 U+20026 以及私有使用区中的 U+F1001。</span><span class="sxs-lookup"><span data-stu-id="61d5c-122">`strSurrogates`, which is a string that includes three surrogate pairs: GREEK ACROPHONIC FIVE TALENTS (U+10148) from the Supplementary Multilingual Plane, U+20026 from the Supplementary Ideographic Plane, and U+F1001 from the private user area.</span></span> <span data-ttu-id="61d5c-123">每个字符的 UTF-16 编码是一个代理项对，其中依次包含一个高代理项和一个低代理项。</span><span class="sxs-lookup"><span data-stu-id="61d5c-123">The UTF-16 encoding of each character is a surrogate pair that consists of a high surrogate followed by a low surrogate.</span></span>  
  
 <span data-ttu-id="61d5c-124">每个字符串依次通过 <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> 方法和 <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> 方法分析一次。</span><span class="sxs-lookup"><span data-stu-id="61d5c-124">Each string is parsed once by the <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> method and then by the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> method.</span></span> <span data-ttu-id="61d5c-125">两个方法都可正确分析两个字符串中的文本元素并显示分析操作的结果。</span><span class="sxs-lookup"><span data-stu-id="61d5c-125">Both methods correctly parse the text elements in the two strings and display the results of the parsing operation.</span></span>  
  
 [!code-csharp[System.Globalization.StringInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.stringinfo.class/cs/indexing1.cs#1)]
 [!code-vb[System.Globalization.StringInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.stringinfo.class/vb/indexing1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="61d5c-126">此示例演示如何使用<xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A>和<xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A>方法<xref:System.Globalization.StringInfo>类包含代理项和组合字符的字符串进行处理。</span><span class="sxs-lookup"><span data-stu-id="61d5c-126">This example shows how to use the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> and <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> methods of the <xref:System.Globalization.StringInfo> class to manipulate a string that contains surrogate and combining characters.</span></span>  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="usage">
      <para>
        <span data-ttu-id="61d5c-127">在内部的方法<see cref="T:System.Globalization.StringInfo" />类调用的方法的<see cref="T:System.Globalization.CharUnicodeInfo" />类以确定字符类别。</span>
        <span class="sxs-lookup">
          <span data-stu-id="61d5c-127">Internally, the methods of the <see cref="T:System.Globalization.StringInfo" /> class call the methods of the <see cref="T:System.Globalization.CharUnicodeInfo" /> class to determine character categories.</span>
        </span>
        <span data-ttu-id="61d5c-128">从开始[!INCLUDE[net_v462](~/includes/net-v462-md.md)]，字符分类基于[Unicode Standard、 8.0.0 版](https://unicode.org/versions/Unicode8.0.0)。</span>
        <span class="sxs-lookup">
          <span data-stu-id="61d5c-128">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], character classification is based on [The Unicode Standard, Version 8.0.0](https://unicode.org/versions/Unicode8.0.0).</span>
        </span>
        <span data-ttu-id="61d5c-129">有关[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]通过[!INCLUDE[net_v461](~/includes/net-v461-md.md)]，它基于[Unicode Standard、 版本 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/)。</span>
        <span class="sxs-lookup">
          <span data-stu-id="61d5c-129">For the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] through the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], it is based on [The Unicode Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span>
        </span>
      </para>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61d5c-130">初始化 <see cref="T:System.Globalization.StringInfo" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-130">Initializes a new instance of the <see cref="T:System.Globalization.StringInfo" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61d5c-131">初始化 <see cref="T:System.Globalization.StringInfo" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-131">Initializes a new instance of the <see cref="T:System.Globalization.StringInfo" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61d5c-132">新值<xref:System.Globalization.StringInfo>对象初始化为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="61d5c-132">The value of the new <xref:System.Globalization.StringInfo> object is initialized to the empty string ("").</span></span> <span data-ttu-id="61d5c-133">可以通过使用向其分配另一个字符串<xref:System.Globalization.StringInfo.String%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="61d5c-133">You can assign another string to it by using the <xref:System.Globalization.StringInfo.String%2A> property.</span></span>  <span data-ttu-id="61d5c-134">你还可以实例化<xref:System.Globalization.StringInfo>通过调用表示单个步骤中指定的字符串对象<xref:System.Globalization.StringInfo.%23ctor%28System.String%29>构造函数。</span><span class="sxs-lookup"><span data-stu-id="61d5c-134">You can also instantiate a <xref:System.Globalization.StringInfo> object that represents a specified string in a single step by calling the <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringInfo (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringInfo(System::String ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="61d5c-135">用于初始化此 <see cref="T:System.Globalization.StringInfo" /> 对象的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-135">A string to initialize this <see cref="T:System.Globalization.StringInfo" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61d5c-136">将 <see cref="T:System.Globalization.StringInfo" /> 类的新实例初始化为指定的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-136">Initializes a new instance of the <see cref="T:System.Globalization.StringInfo" /> class to a specified string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61d5c-137">此构造函数将值自变量分配给对象的<xref:System.Globalization.StringInfo.String%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="61d5c-137">This constructor assigns the value argument to the object's <xref:System.Globalization.StringInfo.String%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61d5c-138">
            <paramref name="value" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-138">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="61d5c-139">一个对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-139">An object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61d5c-140">指示当前 <see cref="T:System.Globalization.StringInfo" /> 对象是否与指定的对象相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-140">Indicates whether the current <see cref="T:System.Globalization.StringInfo" /> object is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61d5c-141">如果 <paramref name="value" /> 参数是 <see cref="T:System.Globalization.StringInfo" /> 对象并且其 <see cref="P:System.Globalization.StringInfo.String" /> 属性等同于此 <see cref="T:System.Globalization.StringInfo" /> 对象的 <see cref="P:System.Globalization.StringInfo.String" /> 属性，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-141">
              <see langword="true" /> if the <paramref name="value" /> parameter is a <see cref="T:System.Globalization.StringInfo" /> object and its <see cref="P:System.Globalization.StringInfo.String" /> property equals the <see cref="P:System.Globalization.StringInfo.String" /> property of this <see cref="T:System.Globalization.StringInfo" /> object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.String.Equals" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="61d5c-142">计算当前 <see cref="T:System.Globalization.StringInfo" /> 对象的值的哈希代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-142">Calculates a hash code for the value of the current <see cref="T:System.Globalization.StringInfo" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61d5c-143">基于此 <see cref="T:System.Globalization.StringInfo" /> 对象的字符串值的 32 位带符号整数哈希代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-143">A 32-bit signed integer hash code based on the string value of this <see cref="T:System.Globalization.StringInfo" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61d5c-144">行为<xref:System.Globalization.StringInfo.GetHashCode%2A>依赖于其实现中，这可能从一个版本的公共语言运行时更改到另一个。</span><span class="sxs-lookup"><span data-stu-id="61d5c-144">The behavior of <xref:System.Globalization.StringInfo.GetHashCode%2A> is dependent on its implementation, which might change from one version of the common language runtime to another.</span></span> <span data-ttu-id="61d5c-145">可能发生此事件来提高的性能<xref:System.Globalization.StringInfo.GetHashCode%2A>。</span><span class="sxs-lookup"><span data-stu-id="61d5c-145">This might happen to improve the performance of <xref:System.Globalization.StringInfo.GetHashCode%2A>.</span></span> <span data-ttu-id="61d5c-146">若要使此行为的<xref:System.Globalization.StringInfo.GetHashCode%2A>常量，应用程序应重写的运行时实现<xref:System.Globalization.StringInfo.GetHashCode%2A>与已知永远不变的实现。</span><span class="sxs-lookup"><span data-stu-id="61d5c-146">To make the behavior of <xref:System.Globalization.StringInfo.GetHashCode%2A> constant, the application should override the runtime implementation of <xref:System.Globalization.StringInfo.GetHashCode%2A> with an implementation known to never change.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.GetHashCode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNextTextElement">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61d5c-147">获取指定字符串中的第一个文本元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-147">Gets the first text element in a specified string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNextTextElement">
      <MemberSignature Language="C#" Value="public static string GetNextTextElement (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetNextTextElement(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetNextTextElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNextTextElement (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetNextTextElement(System::String ^ str);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="61d5c-148">要从中获取文本元素的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-148">The string from which to get the text element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61d5c-149">获取指定字符串中的第一个文本元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-149">Gets the first text element in a specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61d5c-150">包含指定字符串中的第一个文本元素的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-150">A string containing the first text element in the specified string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61d5c-151">.NET Framework 定义的文本元素的单个字符，即字形的形式显示的文本单位。</span><span class="sxs-lookup"><span data-stu-id="61d5c-151">The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.</span></span> <span data-ttu-id="61d5c-152">文本元素可以是基字符、 代理项对或组合字符序列。</span><span class="sxs-lookup"><span data-stu-id="61d5c-152">A text element can be a base character, a surrogate pair, or a combining character sequence.</span></span> <span data-ttu-id="61d5c-153">[Unicode 标准](http://go.microsoft.com/fwlink/?linkid=37123)两个代码单元，其中该对的第一个单位是一个高代理项，第二个是一个较低的序列组成的单个抽象字符的编码的字符表示形式中定义的代理项对代理项。</span><span class="sxs-lookup"><span data-stu-id="61d5c-153">The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate.</span></span> <span data-ttu-id="61d5c-154">[Unicode 标准](http://go.microsoft.com/fwlink/?linkid=37123)定义组合字符序列为基字符和一个或多个组合字符的组合。</span><span class="sxs-lookup"><span data-stu-id="61d5c-154">The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a combining character sequence as a combination of a base character and one or more combining characters.</span></span> <span data-ttu-id="61d5c-155">代理项对可以表示基字符或组合字符。</span><span class="sxs-lookup"><span data-stu-id="61d5c-155">A surrogate pair can represent a base character or a combining character.</span></span>  
  
 <span data-ttu-id="61d5c-156">此方法仅返回第一个文本元素。</span><span class="sxs-lookup"><span data-stu-id="61d5c-156">This method only returns the first text element.</span></span> <span data-ttu-id="61d5c-157">若要循环访问字符串的文本元素，该应用程序应使用<xref:System.Globalization.TextElementEnumerator>对象生成的<xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="61d5c-157">To iterate through the text elements of the string, the application should use the <xref:System.Globalization.TextElementEnumerator> object generated by the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61d5c-158">
            <paramref name="str" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-158">
              <paramref name="str" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
        <altmember cref="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetNextTextElement">
      <MemberSignature Language="C#" Value="public static string GetNextTextElement (string str, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetNextTextElement(string str, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetNextTextElement(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNextTextElement (str As String, index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetNextTextElement(System::String ^ str, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="61d5c-159">要从中获取文本元素的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-159">The string from which to get the text element.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="61d5c-160">文本元素开始位置的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-160">The zero-based index at which the text element starts.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61d5c-161">获取指定字符串中指定索引处的文本元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-161">Gets the text element at the specified index of the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61d5c-162">包含指定字符串中指定索引处的文本元素的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-162">A string containing the text element at the specified index of the specified string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61d5c-163">.NET Framework 定义的文本元素的单个字符，即字形的形式显示的文本单位。</span><span class="sxs-lookup"><span data-stu-id="61d5c-163">The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.</span></span> <span data-ttu-id="61d5c-164">文本元素可以是基字符、 代理项对或组合字符序列。</span><span class="sxs-lookup"><span data-stu-id="61d5c-164">A text element can be a base character, a surrogate pair, or a combining character sequence.</span></span> <span data-ttu-id="61d5c-165">[Unicode 标准](http://go.microsoft.com/fwlink/?linkid=37123)两个代码单元，其中该对的第一个单位是一个高代理项，第二个是一个较低的序列组成的单个抽象字符的编码的字符表示形式中定义的代理项对代理项。</span><span class="sxs-lookup"><span data-stu-id="61d5c-165">The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate.</span></span> <span data-ttu-id="61d5c-166">Unicode 标准定义组合字符序列为基字符和一个或多个组合字符的组合。</span><span class="sxs-lookup"><span data-stu-id="61d5c-166">The Unicode Standard defines a combining character sequence as a combination of a base character and one or more combining characters.</span></span> <span data-ttu-id="61d5c-167">代理项对可以表示基字符或组合字符。</span><span class="sxs-lookup"><span data-stu-id="61d5c-167">A surrogate pair can represent a base character or a combining character.</span></span>  
  
 <span data-ttu-id="61d5c-168">此方法仅返回指定索引处开始的子字符串的第一个文本元素。</span><span class="sxs-lookup"><span data-stu-id="61d5c-168">This method only returns the first text element of the substring that starts at the specified index.</span></span> <span data-ttu-id="61d5c-169">若要循环访问字符串的文本元素，该应用程序应使用<xref:System.Globalization.TextElementEnumerator>由生成<xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="61d5c-169">To iterate through the text elements of the string, the application should use the <xref:System.Globalization.TextElementEnumerator> generated by the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61d5c-170">
            <paramref name="str" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-170">
              <paramref name="str" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61d5c-171">
            <paramref name="index" /> 超出了 <paramref name="str" /> 的有效索引范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-171">
              <paramref name="index" /> is outside the range of valid indexes for <paramref name="str" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
        <altmember cref="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTextElementEnumerator">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61d5c-172">返回一个循环访问字符串的文本元素的枚举器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-172">Returns an enumerator that iterates through the text elements of a string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTextElementEnumerator">
      <MemberSignature Language="C#" Value="public static System.Globalization.TextElementEnumerator GetTextElementEnumerator (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.TextElementEnumerator GetTextElementEnumerator(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTextElementEnumerator (str As String) As TextElementEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::TextElementEnumerator ^ GetTextElementEnumerator(System::String ^ str);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.TextElementEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="61d5c-173">要循环访问的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-173">The string to iterate through.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61d5c-174">返回一个循环访问整个字符串的文本元素的枚举数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-174">Returns an enumerator that iterates through the text elements of the entire string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61d5c-175">整个字符串的 <see cref="T:System.Globalization.TextElementEnumerator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-175">A <see cref="T:System.Globalization.TextElementEnumerator" /> for the entire string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61d5c-176">.NET Framework 定义的文本元素的单个字符，即字形的形式显示的文本单位。</span><span class="sxs-lookup"><span data-stu-id="61d5c-176">The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.</span></span> <span data-ttu-id="61d5c-177">文本元素可以是基字符、 代理项对或组合字符序列。</span><span class="sxs-lookup"><span data-stu-id="61d5c-177">A text element can be a base character, a surrogate pair, or a combining character sequence.</span></span> <span data-ttu-id="61d5c-178">[Unicode 标准](http://go.microsoft.com/fwlink/?linkid=37123)两个代码单元，其中该对的第一个单位是一个高代理项，第二个是一个较低的序列组成的单个抽象字符的编码的字符表示形式中定义的代理项对代理项。</span><span class="sxs-lookup"><span data-stu-id="61d5c-178">The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate.</span></span> <span data-ttu-id="61d5c-179">Unicode 标准定义组合字符序列为基字符和一个或多个组合字符的组合。</span><span class="sxs-lookup"><span data-stu-id="61d5c-179">The Unicode Standard defines a combining character sequence as a combination of a base character and one or more combining characters.</span></span> <span data-ttu-id="61d5c-180">代理项对可以表示基字符或组合字符。</span><span class="sxs-lookup"><span data-stu-id="61d5c-180">A surrogate pair can represent a base character or a combining character.</span></span>  
  
 <span data-ttu-id="61d5c-181">文本元素枚举器只能用于读取字符串; 中的数据它不能修改基础的字符串。</span><span class="sxs-lookup"><span data-stu-id="61d5c-181">The text element enumerator is used only to read data in the string; it cannot modify the underlying string.</span></span> <span data-ttu-id="61d5c-182">枚举数没有对字符串独占访问权。</span><span class="sxs-lookup"><span data-stu-id="61d5c-182">The enumerator does not have exclusive access to the string.</span></span>  
  
 <span data-ttu-id="61d5c-183">如果定位字符串中或在字符串中的最后一个文本元素之后的第一个文本元素的前面，则枚举数将处于无效状态。</span><span class="sxs-lookup"><span data-stu-id="61d5c-183">The enumerator is in an invalid state if it is positioned before the first text element in the string or after the last text element in the string.</span></span> <span data-ttu-id="61d5c-184">当枚举器处于无效状态时，调用<xref:System.Globalization.TextElementEnumerator.Current%2A>引发异常。</span><span class="sxs-lookup"><span data-stu-id="61d5c-184">When the enumerator is in an invalid state, calling <xref:System.Globalization.TextElementEnumerator.Current%2A> throws an exception.</span></span>  
  
 <span data-ttu-id="61d5c-185">最初，枚举数定位在字符串中的第一个文本元素之前。</span><span class="sxs-lookup"><span data-stu-id="61d5c-185">Initially, the enumerator is positioned before the first text element in the string.</span></span> <span data-ttu-id="61d5c-186"><xref:System.Globalization.TextElementEnumerator.Reset%2A> 也会将枚举器放回此位置。</span><span class="sxs-lookup"><span data-stu-id="61d5c-186"><xref:System.Globalization.TextElementEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="61d5c-187">因此，创建一个枚举器或<xref:System.Globalization.TextElementEnumerator.Reset%2A>调用时，<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>必须调用枚举数前移到字符串的第一个文本元素，然后读取的值才能<xref:System.Globalization.TextElementEnumerator.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="61d5c-187">Therefore, after an enumerator is created or after <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> must be called to advance the enumerator to the first text element of the string before reading the value of <xref:System.Globalization.TextElementEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="61d5c-188">在调用 <xref:System.Globalization.TextElementEnumerator.Current%2A> 或 <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> 之前，<xref:System.Globalization.TextElementEnumerator.Reset%2A> 返回同一对象。</span><span class="sxs-lookup"><span data-stu-id="61d5c-188"><xref:System.Globalization.TextElementEnumerator.Current%2A> returns the same object until either <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> or <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called.</span></span>  
  
 <span data-ttu-id="61d5c-189">传递的字符串的末尾之后，枚举数再次处于无效状态，调用<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>返回`false`。</span><span class="sxs-lookup"><span data-stu-id="61d5c-189">After the end of the string is passed, the enumerator is again in an invalid state and calling <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="61d5c-190">调用<xref:System.Globalization.TextElementEnumerator.Current%2A>到的最后一次调用时引发异常<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>返回`false`。</span><span class="sxs-lookup"><span data-stu-id="61d5c-190">Calling <xref:System.Globalization.TextElementEnumerator.Current%2A> throws an exception if the last call to <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> returned `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61d5c-191">下面的代码示例演示如何调用<xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="61d5c-191">The following code example demonstrates calling the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> method.</span></span> <span data-ttu-id="61d5c-192">此代码示例摘自更大的示例为提供<xref:System.Globalization.StringInfo>类。</span><span class="sxs-lookup"><span data-stu-id="61d5c-192">This code example is part of a larger example provided for the <xref:System.Globalization.StringInfo> class.</span></span>  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61d5c-193">
            <paramref name="str" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-193">
              <paramref name="str" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Globalization.TextElementEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetTextElementEnumerator">
      <MemberSignature Language="C#" Value="public static System.Globalization.TextElementEnumerator GetTextElementEnumerator (string str, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.TextElementEnumerator GetTextElementEnumerator(string str, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTextElementEnumerator (str As String, index As Integer) As TextElementEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::TextElementEnumerator ^ GetTextElementEnumerator(System::String ^ str, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.TextElementEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="61d5c-194">要循环访问的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-194">The string to iterate through.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="61d5c-195">开始迭代处的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-195">The zero-based index at which to start iterating.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61d5c-196">返回一个枚举数，它循环访问字符串的文本元素并从指定索引处开始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-196">Returns an enumerator that iterates through the text elements of the string, starting at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61d5c-197">在 <paramref name="index" /> 处开始的字符串的 <see cref="T:System.Globalization.TextElementEnumerator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-197">A <see cref="T:System.Globalization.TextElementEnumerator" /> for the string starting at <paramref name="index" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61d5c-198">.NET Framework 定义的文本元素的单个字符，即字形的形式显示的文本单位。</span><span class="sxs-lookup"><span data-stu-id="61d5c-198">The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.</span></span> <span data-ttu-id="61d5c-199">文本元素可以是基字符、 代理项对或组合字符序列。</span><span class="sxs-lookup"><span data-stu-id="61d5c-199">A text element can be a base character, a surrogate pair, or a combining character sequence.</span></span> <span data-ttu-id="61d5c-200">[Unicode 标准](http://go.microsoft.com/fwlink/?linkid=37123)两个代码单元，其中该对的第一个单位是一个高代理项，第二个是一个较低的序列组成的单个抽象字符的编码的字符表示形式中定义的代理项对代理项。</span><span class="sxs-lookup"><span data-stu-id="61d5c-200">The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate.</span></span> <span data-ttu-id="61d5c-201">Unicode 标准定义组合字符序列为基字符和一个或多个组合字符的组合。</span><span class="sxs-lookup"><span data-stu-id="61d5c-201">The Unicode Standard defines a combining character sequence as a combination of a base character and one or more combining characters.</span></span> <span data-ttu-id="61d5c-202">代理项对可以表示基字符或组合字符。</span><span class="sxs-lookup"><span data-stu-id="61d5c-202">A surrogate pair can represent a base character or a combining character.</span></span>  
  
 <span data-ttu-id="61d5c-203">文本元素枚举器只能用于读取字符串; 中的数据它不能修改基础的字符串。</span><span class="sxs-lookup"><span data-stu-id="61d5c-203">The text element enumerator is used only to read data in the string; it cannot modify the underlying string.</span></span> <span data-ttu-id="61d5c-204">枚举数没有对字符串独占访问权。</span><span class="sxs-lookup"><span data-stu-id="61d5c-204">The enumerator does not have exclusive access to the string.</span></span>  
  
 <span data-ttu-id="61d5c-205">如果定位字符串中或在字符串中的最后一个文本元素之后的第一个文本元素的前面，则枚举数将处于无效状态。</span><span class="sxs-lookup"><span data-stu-id="61d5c-205">The enumerator is in an invalid state if it is positioned before the first text element in the string or after the last text element in the string.</span></span> <span data-ttu-id="61d5c-206">当枚举器处于无效状态时，调用<xref:System.Globalization.TextElementEnumerator.Current%2A>引发异常。</span><span class="sxs-lookup"><span data-stu-id="61d5c-206">When the enumerator is in an invalid state, calling <xref:System.Globalization.TextElementEnumerator.Current%2A> throws an exception.</span></span>  
  
 <span data-ttu-id="61d5c-207">最初，枚举数定位在字符串中的第一个文本元素之前。</span><span class="sxs-lookup"><span data-stu-id="61d5c-207">Initially, the enumerator is positioned before the first text element in the string.</span></span> <span data-ttu-id="61d5c-208"><xref:System.Globalization.TextElementEnumerator.Reset%2A> 也会将枚举器放回此位置。</span><span class="sxs-lookup"><span data-stu-id="61d5c-208"><xref:System.Globalization.TextElementEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="61d5c-209">因此，创建一个枚举器或<xref:System.Globalization.TextElementEnumerator.Reset%2A>调用时，<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>必须调用枚举数前移到字符串的第一个文本元素，然后读取的值才能<xref:System.Globalization.TextElementEnumerator.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="61d5c-209">Therefore, after an enumerator is created or after <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> must be called to advance the enumerator to the first text element of the string before reading the value of <xref:System.Globalization.TextElementEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="61d5c-210">在调用 <xref:System.Globalization.TextElementEnumerator.Current%2A> 或 <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> 之前，<xref:System.Globalization.TextElementEnumerator.Reset%2A> 返回同一对象。</span><span class="sxs-lookup"><span data-stu-id="61d5c-210"><xref:System.Globalization.TextElementEnumerator.Current%2A> returns the same object until either <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> or <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called.</span></span>  
  
 <span data-ttu-id="61d5c-211">传递的字符串的末尾之后，枚举数再次处于无效状态，调用<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>返回`false`。</span><span class="sxs-lookup"><span data-stu-id="61d5c-211">After the end of the string is passed, the enumerator is again in an invalid state and calling <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="61d5c-212">调用<xref:System.Globalization.TextElementEnumerator.Current%2A>到的最后一次调用时引发异常<xref:System.Globalization.TextElementEnumerator.MoveNext%2A>返回`false`。</span><span class="sxs-lookup"><span data-stu-id="61d5c-212">Calling <xref:System.Globalization.TextElementEnumerator.Current%2A> throws an exception if the last call to <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> returned `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61d5c-213">
            <paramref name="str" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-213">
              <paramref name="str" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61d5c-214">
            <paramref name="index" /> 超出了 <paramref name="str" /> 的有效索引范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-214">
              <paramref name="index" /> is outside the range of valid indexes for <paramref name="str" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Globalization.TextElementEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="LengthInTextElements">
      <MemberSignature Language="C#" Value="public int LengthInTextElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LengthInTextElements" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.StringInfo.LengthInTextElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LengthInTextElements As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LengthInTextElements { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61d5c-215">获取当前 <see cref="T:System.Globalization.StringInfo" /> 对象中的文本元素数量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-215">Gets the number of text elements in the current <see cref="T:System.Globalization.StringInfo" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61d5c-216">此 <see cref="T:System.Globalization.StringInfo" /> 对象中基本字符、代理项对和组合字符序列的数量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-216">The number of base characters, surrogate pairs, and combining character sequences in this <see cref="T:System.Globalization.StringInfo" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseCombiningCharacters">
      <MemberSignature Language="C#" Value="public static int[] ParseCombiningCharacters (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32[] ParseCombiningCharacters(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseCombiningCharacters (str As String) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;int&gt; ^ ParseCombiningCharacters(System::String ^ str);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="61d5c-217">要搜索的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-217">The string to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61d5c-218">返回指定字符串中每个基字符、高代理项或控制字符的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-218">Returns the indexes of each base character, high surrogate, or control character within the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61d5c-219">一个整数数组，它包含指定字符串中每个基字符、高代理项或控制字符的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-219">An array of integers that contains the zero-based indexes of each base character, high surrogate, or control character within the specified string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61d5c-220">[Unicode 标准](http://go.microsoft.com/fwlink/?linkid=37123)两个代码单元，其中该对的第一个单位是一个高代理项，第二个是一个较低的序列组成的单个抽象字符的编码的字符表示形式中定义的代理项对代理项。</span><span class="sxs-lookup"><span data-stu-id="61d5c-220">The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate.</span></span> <span data-ttu-id="61d5c-221">高代理项是 Unicode 码位 U + D800 到 U + DBFF 的范围中和低代理项是 Unicode 码位 U + DC00 到 U + DFFF 范围中。</span><span class="sxs-lookup"><span data-stu-id="61d5c-221">A high surrogate is a Unicode code point in the range U+D800 through U+DBFF and a low surrogate is a Unicode code point in the range U+DC00 through U+DFFF.</span></span>  
  
 <span data-ttu-id="61d5c-222">控制字符为字符的 Unicode 值为 U + 007F 或 U + 0000 到 U + 001F 或 U + 0080 到 U + 009F 的范围内。</span><span class="sxs-lookup"><span data-stu-id="61d5c-222">A control character is a character for which the Unicode value is U+007F or in the range U+0000 through U+001F or U+0080 through U+009F.</span></span>  
  
 <span data-ttu-id="61d5c-223">.NET Framework 定义的文本元素的单个字符，即字形的形式显示的文本单位。</span><span class="sxs-lookup"><span data-stu-id="61d5c-223">The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.</span></span> <span data-ttu-id="61d5c-224">文本元素可以是基字符、 代理项对或组合字符序列。</span><span class="sxs-lookup"><span data-stu-id="61d5c-224">A text element can be a base character, a surrogate pair, or a combining character sequence.</span></span> <span data-ttu-id="61d5c-225">[Unicode 标准](http://go.microsoft.com/fwlink/?linkid=37123)定义组合字符序列为基字符和一个或多个组合字符的组合。</span><span class="sxs-lookup"><span data-stu-id="61d5c-225">The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a combining character sequence as a combination of a base character and one or more combining characters.</span></span> <span data-ttu-id="61d5c-226">代理项对可以表示基字符或组合字符。</span><span class="sxs-lookup"><span data-stu-id="61d5c-226">A surrogate pair can represent a base character or a combining character.</span></span>  
  
 <span data-ttu-id="61d5c-227">如果组合字符序列无效，该序列中的每个组合字符也会返回。</span><span class="sxs-lookup"><span data-stu-id="61d5c-227">If a combining character sequence is invalid, every combining character in that sequence is also returned.</span></span>  
  
 <span data-ttu-id="61d5c-228">生成的数组中每个索引是一个文本元素，基字符或高代理项的索引的开头。</span><span class="sxs-lookup"><span data-stu-id="61d5c-228">Each index in the resulting array is the beginning of a text element, that is, the index of the base character or the high surrogate.</span></span>  
  
 <span data-ttu-id="61d5c-229">每个元素的长度轻松地将计算为后续索引之间的差异。</span><span class="sxs-lookup"><span data-stu-id="61d5c-229">The length of each element is easily computed as the difference between successive indexes.</span></span> <span data-ttu-id="61d5c-230">数组的长度将始终小于或等于字符串的长度。</span><span class="sxs-lookup"><span data-stu-id="61d5c-230">The length of the array will always be less than or equal to the length of the string.</span></span> <span data-ttu-id="61d5c-231">例如，给定的字符串"\u4f00\u302a\ud800\udc00\u4f01"，此方法将返回 0、 2 和 4 的索引。</span><span class="sxs-lookup"><span data-stu-id="61d5c-231">For example, given the string "\u4f00\u302a\ud800\udc00\u4f01", this method returns the indexes 0, 2, and 4.</span></span>  
  
## <a name="equivalent-members"></a><span data-ttu-id="61d5c-232">等效成员</span><span class="sxs-lookup"><span data-stu-id="61d5c-232">Equivalent Members</span></span>  
 <span data-ttu-id="61d5c-233">在 2.0 版中的.NET Framework 中，启动<xref:System.Globalization.StringInfo.SubstringByTextElements%2A>方法和<xref:System.Globalization.StringInfo.LengthInTextElements%2A>属性提供易于使用的提供的功能实现<xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="61d5c-233">Starting in version 2.0 of the .NET Framework, the <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> method and <xref:System.Globalization.StringInfo.LengthInTextElements%2A> property provide an easy to use implementation of the functionality offered by the <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61d5c-234">下面的代码示例演示如何调用<xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="61d5c-234">The following code example demonstrates calling the <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> method.</span></span> <span data-ttu-id="61d5c-235">此代码示例摘自更大的示例为提供<xref:System.Globalization.StringInfo>类。</span><span class="sxs-lookup"><span data-stu-id="61d5c-235">This code example is part of a larger example provided for the <xref:System.Globalization.StringInfo> class.</span></span>  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61d5c-236">
            <paramref name="str" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-236">
              <paramref name="str" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Globalization.StringInfo.SubstringByTextElements" />
        <altmember cref="P:System.Globalization.StringInfo.LengthInTextElements" />
      </Docs>
    </Member>
    <Member MemberName="String">
      <MemberSignature Language="C#" Value="public string String { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string String" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.StringInfo.String" />
      <MemberSignature Language="VB.NET" Value="Public Property String As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ String { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="61d5c-237">获取或设置当前 <see cref="T:System.Globalization.StringInfo" /> 对象的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-237">Gets or sets the value of the current <see cref="T:System.Globalization.StringInfo" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="61d5c-238">作为当前 <see cref="T:System.Globalization.StringInfo" /> 对象的值的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-238">The string that is the value of the current <see cref="T:System.Globalization.StringInfo" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61d5c-239">当<xref:System.Globalization.StringInfo>实例化对象，其<xref:System.Globalization.StringInfo.String%2A>属性设置为下列值之一：</span><span class="sxs-lookup"><span data-stu-id="61d5c-239">When a <xref:System.Globalization.StringInfo> object is instantiated, its <xref:System.Globalization.StringInfo.String%2A> property is set to one of the following values:</span></span>  
  
-   <span data-ttu-id="61d5c-240"><xref:System.String.Empty?displayProperty=nameWithType> 如果默认值<xref:System.Globalization.StringInfo.%23ctor>调用。</span><span class="sxs-lookup"><span data-stu-id="61d5c-240"><xref:System.String.Empty?displayProperty=nameWithType> if the default  <xref:System.Globalization.StringInfo.%23ctor> is called.</span></span> <span data-ttu-id="61d5c-241">然后，你应使用<xref:System.Globalization.StringInfo.String%2A>属性来将字符串分配此<xref:System.Globalization.StringInfo>对象 rperesents。</span><span class="sxs-lookup"><span data-stu-id="61d5c-241">You should then use the <xref:System.Globalization.StringInfo.String%2A> property to assign the string that this <xref:System.Globalization.StringInfo> object rperesents.</span></span>  
  
-   <span data-ttu-id="61d5c-242">作为字符串提供`value`参数<xref:System.Globalization.StringInfo.%23ctor%28System.String%29>构造函数。</span><span class="sxs-lookup"><span data-stu-id="61d5c-242">The string supplied as the `value` argument to the <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="61d5c-243">设置操作中的值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-243">The value in a set operation is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SubstringByTextElements">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="61d5c-244">从当前 <see cref="T:System.Globalization.StringInfo" /> 对象中检索文本元素的子字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-244">Retrieves a substring of text elements from the current <see cref="T:System.Globalization.StringInfo" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SubstringByTextElements">
      <MemberSignature Language="C#" Value="public string SubstringByTextElements (int startingTextElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SubstringByTextElements(int32 startingTextElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubstringByTextElements (startingTextElement As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SubstringByTextElements(int startingTextElement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingTextElement" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startingTextElement">
          <span data-ttu-id="61d5c-245">此 <see cref="T:System.Globalization.StringInfo" /> 对象中文本元素的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-245">The zero-based index of a text element in this <see cref="T:System.Globalization.StringInfo" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61d5c-246">从当前的 <see cref="T:System.Globalization.StringInfo" /> 对象检索文本元素的子字符串（从指定的文本元素开始，一直到最后一个文本元素）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-246">Retrieves a substring of text elements from the current <see cref="T:System.Globalization.StringInfo" /> object starting from a specified text element and continuing through the last text element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61d5c-247">此 <see cref="T:System.Globalization.StringInfo" /> 对象中的文本元素的子字符串（从 <paramref name="startingTextElement" /> 参数指定的文本元素索引开始，一直到此对象中的最后一个文本元素）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-247">A substring of text elements in this <see cref="T:System.Globalization.StringInfo" /> object, starting from the text element index specified by the <paramref name="startingTextElement" /> parameter and continuing through the last text element in this object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61d5c-248">请考虑索引从 0 到 4 的五个文本元素组成的字符串。</span><span class="sxs-lookup"><span data-stu-id="61d5c-248">Consider a string that consists of five text elements, indexed from 0 through 4.</span></span> <span data-ttu-id="61d5c-249">如果`startingTextElement`参数为 1，<xref:System.Globalization.StringInfo.SubstringByTextElements%2A>方法返回包含的索引为 1、 2、 3 和 4 的文本元素的子字符串。</span><span class="sxs-lookup"><span data-stu-id="61d5c-249">If the `startingTextElement` parameter is 1, the  <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> method returns a substring that consists of the text elements for which the indexes are 1, 2, 3, and 4.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61d5c-250">
            <paramref name="startingTextElement" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-250">
              <paramref name="startingTextElement" /> is less than zero.</span>
          </span>
          <span data-ttu-id="61d5c-251">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-251">-or-</span>
          </span>
          <span data-ttu-id="61d5c-252">当前 <see cref="T:System.Globalization.StringInfo" /> 对象的值字符串是空字符串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-252">The string that is the value of the current <see cref="T:System.Globalization.StringInfo" /> object is the empty string ("").</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SubstringByTextElements">
      <MemberSignature Language="C#" Value="public string SubstringByTextElements (int startingTextElement, int lengthInTextElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SubstringByTextElements(int32 startingTextElement, int32 lengthInTextElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubstringByTextElements (startingTextElement As Integer, lengthInTextElements As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SubstringByTextElements(int startingTextElement, int lengthInTextElements);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingTextElement" Type="System.Int32" />
        <Parameter Name="lengthInTextElements" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startingTextElement">
          <span data-ttu-id="61d5c-253">此 <see cref="T:System.Globalization.StringInfo" /> 对象中文本元素的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-253">The zero-based index of a text element in this <see cref="T:System.Globalization.StringInfo" /> object.</span>
          </span>
        </param>
        <param name="lengthInTextElements">
          <span data-ttu-id="61d5c-254">要检索的文本元素的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-254">The number of text elements to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="61d5c-255">从当前的 <see cref="T:System.Globalization.StringInfo" /> 对象中检索文本元素的子字符串（从指定文本元素开始，一直到指定数目的文本元素）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-255">Retrieves a substring of text elements from the current <see cref="T:System.Globalization.StringInfo" /> object starting from a specified text element and continuing through the specified number of text elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="61d5c-256">此 <see cref="T:System.Globalization.StringInfo" /> 对象中的文本元素的子字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-256">A substring of text elements in this <see cref="T:System.Globalization.StringInfo" /> object.</span>
          </span>
          <span data-ttu-id="61d5c-257">子字符串包含由 <paramref name="lengthInTextElements" /> 参数指定的文本元素数量，并从 <paramref name="startingTextElement" /> 参数指定的文本元素索引开始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-257">The substring consists of the number of text elements specified by the <paramref name="lengthInTextElements" /> parameter and starts from the text element index specified by the <paramref name="startingTextElement" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61d5c-258">请考虑索引从 0 到 4 的五个文本元素组成的字符串。</span><span class="sxs-lookup"><span data-stu-id="61d5c-258">Consider a string that consists of five text elements, indexed from 0 through 4.</span></span> <span data-ttu-id="61d5c-259">如果`startingTextElement`参数为 1 和`lengthInTextElements`参数为 3，<xref:System.Globalization.StringInfo.SubstringByTextElements%2A>方法返回包含的索引为 1、 2 和 3 的文本元素的子字符串。</span><span class="sxs-lookup"><span data-stu-id="61d5c-259">If the `startingTextElement` parameter is 1 and the `lengthInTextElements` parameter is 3, the <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> method returns a substring that consists of the text elements for which the indexes are 1, 2, and 3.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="61d5c-260">
            <paramref name="startingTextElement" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-260">
              <paramref name="startingTextElement" /> is less than zero.</span>
          </span>
          <span data-ttu-id="61d5c-261">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-261">-or-</span>
          </span>
          <span data-ttu-id="61d5c-262">
            <paramref name="startingTextElement" /> 大于或等于当前 <see cref="T:System.Globalization.StringInfo" /> 对象的值字符串的长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-262">
              <paramref name="startingTextElement" /> is greater than or equal to the length of the string that is the value of the current <see cref="T:System.Globalization.StringInfo" /> object.</span>
          </span>
          <span data-ttu-id="61d5c-263">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-263">-or-</span>
          </span>
          <span data-ttu-id="61d5c-264">
            <paramref name="lengthInTextElements" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-264">
              <paramref name="lengthInTextElements" /> is less than zero.</span>
          </span>
          <span data-ttu-id="61d5c-265">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-265">-or-</span>
          </span>
          <span data-ttu-id="61d5c-266">当前 <see cref="T:System.Globalization.StringInfo" /> 对象的值字符串是空字符串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-266">The string that is the value of the current <see cref="T:System.Globalization.StringInfo" /> object is the empty string ("").</span>
          </span>
          <span data-ttu-id="61d5c-267">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-267">-or-</span>
          </span>
          <span data-ttu-id="61d5c-268">
            <paramref name="startingTextElement" /> + <paramref name="lengthInTextElements" /> 指定大于此 <see cref="T:System.Globalization.StringInfo" /> 对象中的文本元素数目的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="61d5c-268">
              <paramref name="startingTextElement" /> + <paramref name="lengthInTextElements" /> specify an index that is greater than the number of text elements in this <see cref="T:System.Globalization.StringInfo" /> object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>