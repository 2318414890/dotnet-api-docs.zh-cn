<Type Name="CharUnicodeInfo" FullName="System.Globalization.CharUnicodeInfo">
  <TypeSignature Language="C#" Value="public static class CharUnicodeInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CharUnicodeInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.CharUnicodeInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class CharUnicodeInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class CharUnicodeInfo abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="903f2-101">检索关于 Unicode 字符的信息。</span><span class="sxs-lookup"><span data-stu-id="903f2-101">Retrieves information about a Unicode character.</span></span> <span data-ttu-id="903f2-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="903f2-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903f2-103">[Unicode 标准](http://go.microsoft.com/fwlink/?linkid=37123)定义了多个 Unicode 字符类别。</span><span class="sxs-lookup"><span data-stu-id="903f2-103">The [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines a number of Unicode character categories.</span></span> <span data-ttu-id="903f2-104">例如，字符可能属于大写字母、 小写字母、 十进制数字，字母数字、 段落分隔符、 数学符号或货币符号。</span><span class="sxs-lookup"><span data-stu-id="903f2-104">For example, a character might be categorized as an uppercase letter, a lowercase letter, a decimal digit number, a letter number, a paragraph separator, a math symbol, or a currency symbol.</span></span> <span data-ttu-id="903f2-105">你的应用程序可以使用的字符类别来控制基于字符串的操作，如分析或提取与正则表达式的子字符串。</span><span class="sxs-lookup"><span data-stu-id="903f2-105">Your application can use the character category to govern string-based operations, such as parsing or extracting substring with regular expressions.</span></span> <span data-ttu-id="903f2-106"><xref:System.Globalization.UnicodeCategory>枚举定义可能的字符类别。</span><span class="sxs-lookup"><span data-stu-id="903f2-106">The <xref:System.Globalization.UnicodeCategory> enumeration defines the possible character categories.</span></span>  
  
 <span data-ttu-id="903f2-107">你使用<xref:System.Globalization.CharUnicodeInfo>类来获取<xref:System.Globalization.UnicodeCategory>特定字符的值。</span><span class="sxs-lookup"><span data-stu-id="903f2-107">You use the <xref:System.Globalization.CharUnicodeInfo> class to obtain the <xref:System.Globalization.UnicodeCategory> value for a specific character.</span></span> <span data-ttu-id="903f2-108"><xref:System.Globalization.CharUnicodeInfo>类定义返回以下 Unicode 字符值的方法：</span><span class="sxs-lookup"><span data-stu-id="903f2-108">The <xref:System.Globalization.CharUnicodeInfo> class defines methods that return the following Unicode character values:</span></span>  
  
-   <span data-ttu-id="903f2-109">字符或代理项对所属的特定类别。</span><span class="sxs-lookup"><span data-stu-id="903f2-109">The specific category to which a character or surrogate pair belongs.</span></span> <span data-ttu-id="903f2-110">返回的值为属于<xref:System.Globalization.UnicodeCategory>枚举。</span><span class="sxs-lookup"><span data-stu-id="903f2-110">The value returned is a member of the <xref:System.Globalization.UnicodeCategory> enumeration.</span></span>  
  
-   <span data-ttu-id="903f2-111">数值。</span><span class="sxs-lookup"><span data-stu-id="903f2-111">Numeric value.</span></span> <span data-ttu-id="903f2-112">仅适用于数字字符，包括秒的小数部分、 下标、 上标、 罗马数字、 货币分子、 循环的数和脚本特有的数字。</span><span class="sxs-lookup"><span data-stu-id="903f2-112">Applies only to numeric characters, including fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span>  
  
-   <span data-ttu-id="903f2-113">数字值。</span><span class="sxs-lookup"><span data-stu-id="903f2-113">Digit value.</span></span> <span data-ttu-id="903f2-114">适用于可以使用其他编号系统中表示整数数量的数字字符组合的数字字符。</span><span class="sxs-lookup"><span data-stu-id="903f2-114">Applies to numeric characters that can be combined with other numeric characters to represent a whole number in a numbering system.</span></span>  
  
-   <span data-ttu-id="903f2-115">十进制数字值。</span><span class="sxs-lookup"><span data-stu-id="903f2-115">Decimal digit value.</span></span> <span data-ttu-id="903f2-116">仅适用于表示十进制 (基数为 10) 系统中的十进制数字的字符。</span><span class="sxs-lookup"><span data-stu-id="903f2-116">Applies only to characters that represent decimal digits in the decimal (base 10) system.</span></span> <span data-ttu-id="903f2-117">十进制数字类别可以是从 0 到 9 的 10 个数字之一。</span><span class="sxs-lookup"><span data-stu-id="903f2-117">A decimal digit can be one of ten digits, from zero through nine.</span></span> <span data-ttu-id="903f2-118">这些字符是的成员<xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>类别。</span><span class="sxs-lookup"><span data-stu-id="903f2-118">These characters are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
 <span data-ttu-id="903f2-119">此外，<xref:System.Globalization.CharUnicodeInfo>类由其他.NET Framework 类型和依赖于字符分类的方法的很多内部使用。</span><span class="sxs-lookup"><span data-stu-id="903f2-119">In addition, the <xref:System.Globalization.CharUnicodeInfo> class is used internally by a number of other .NET Framework types and methods that rely on character classification.</span></span> <span data-ttu-id="903f2-120">这些方法包括：</span><span class="sxs-lookup"><span data-stu-id="903f2-120">These include:</span></span>  
  
-   <span data-ttu-id="903f2-121"><xref:System.Globalization.StringInfo>类，该类处理而不是字符串中的单个字符的文本元素。</span><span class="sxs-lookup"><span data-stu-id="903f2-121">The <xref:System.Globalization.StringInfo> class, which works with textual elements instead of single characters in a string.</span></span>  
  
-   <span data-ttu-id="903f2-122">重载<xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>方法，这些扩展名决定了字符或代理项对所属的类别。</span><span class="sxs-lookup"><span data-stu-id="903f2-122">The overloads of the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method, which determine the category to which a character or surrogate pair belongs.</span></span>  
  
-   <span data-ttu-id="903f2-123">[字符类](~/docs/standard/base-types/character-classes-in-regular-expressions.md)识别<xref:System.Text.RegularExpressions.Regex>，.NET Framework 的正则表达式引擎。</span><span class="sxs-lookup"><span data-stu-id="903f2-123">The [character classes](~/docs/standard/base-types/character-classes-in-regular-expressions.md) recognized by <xref:System.Text.RegularExpressions.Regex>, the .NET Framework's regular expression engine.</span></span>  
  
 <span data-ttu-id="903f2-124">在你的应用程序中使用此类时, 保留记住以下有关使用编程注意事项<xref:System.Char>类型。</span><span class="sxs-lookup"><span data-stu-id="903f2-124">When using this class in your applications, keep in mind the following programming considerations for using the <xref:System.Char> type.</span></span> <span data-ttu-id="903f2-125">类型可能很难使用，并且通常用于表示语言的内容更可取字符串。</span><span class="sxs-lookup"><span data-stu-id="903f2-125">The type can be difficult to use, and strings are generally preferable for representing linguistic content.</span></span>  
  
-   <span data-ttu-id="903f2-126">A<xref:System.Char>对象并不始终对应于单个字符。</span><span class="sxs-lookup"><span data-stu-id="903f2-126">A <xref:System.Char> object does not always correspond to a single character.</span></span> <span data-ttu-id="903f2-127">尽管<xref:System.Char>类型表示单个 16 位值时，某些字符 （如字形群集和代理项对） 包含两个或多个 utf-16 代码单元。</span><span class="sxs-lookup"><span data-stu-id="903f2-127">Although the <xref:System.Char> type represents a single 16-bit value, some characters (such as grapheme clusters and surrogate pairs) consist of two or more UTF-16 code units.</span></span> <span data-ttu-id="903f2-128">有关详细信息，请参阅"Char 对象和 Unicode 字符"<xref:System.String>类。</span><span class="sxs-lookup"><span data-stu-id="903f2-128">For more information, see "Char Objects and Unicode Characters" in the <xref:System.String> class.</span></span>  
  
-   <span data-ttu-id="903f2-129">为"character"的概念也是灵活的。</span><span class="sxs-lookup"><span data-stu-id="903f2-129">The notion of a "character" is also flexible.</span></span> <span data-ttu-id="903f2-130">一个字符通常想象成符号，但许多标志符号需要多个码位。</span><span class="sxs-lookup"><span data-stu-id="903f2-130">A character is often thought of as a glyph, but many glyphs require multiple code points.</span></span> <span data-ttu-id="903f2-131">例如，ä 可以表示通过两个代码点 （"a"加 U + 0308，这是组合分音符）、 或通过一个单独的码位 （"ä"或 U + 00A4）。</span><span class="sxs-lookup"><span data-stu-id="903f2-131">For example, ä can be represented either by two code points ("a" plus U+0308, which is the combining diaeresis), or by a single code point ("ä" or U+00A4).</span></span> <span data-ttu-id="903f2-132">某些语言具有很多字母、 字符和需要多个码位，这会导致混淆语言内容的表示形式中的标志符号。</span><span class="sxs-lookup"><span data-stu-id="903f2-132">Some languages have many letters, characters, and glyphs that require multiple code points, which can cause confusion in linguistic content representation.</span></span> <span data-ttu-id="903f2-133">例如，没有 ΰ （U + 03B0，希腊文小写字母 upsilon dialytika 和音调符号），但没有没有等效的大写字母。</span><span class="sxs-lookup"><span data-stu-id="903f2-133">For example, there is a ΰ (U+03B0, Greek small letter upsilon with dialytika and tonos), but there is no equivalent capital letter.</span></span> <span data-ttu-id="903f2-134">大写这样的值只需检索的原始值。</span><span class="sxs-lookup"><span data-stu-id="903f2-134">Uppercasing such a value simply retrieves the original value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="903f2-135">下面的代码示例演示为不同类型的字符的每个方法返回的值。</span><span class="sxs-lookup"><span data-stu-id="903f2-135">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="usage">
      <para><span data-ttu-id="903f2-136">可识别的字符和它们所属的特定类别由 Unicode 标准定义，并且可以从 Unicode 标准的一个版本更改为另一个。</span><span class="sxs-lookup"><span data-stu-id="903f2-136">Recognized characters and the specific categories to which they belong are defined by the Unicode standard and can change from one version of the Unicode Standard to another.</span></span> <span data-ttu-id="903f2-137">.NET Framework 的特定版本中的字符分类基于 Unicode 标准而不考虑在其运行.NET Framework 的基础操作系统的单个版本。</span><span class="sxs-lookup"><span data-stu-id="903f2-137">Categorization of characters in a particular version of the  .NET Framework  is based on a single version of the Unicode Standard regardless of the underlying operating system on which the .NET Framework is running.</span></span> <span data-ttu-id="903f2-138">下表列出了自以来的.NET framework 的版本[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]和用于对字符进行分类的 Unicode 标准版本。</span><span class="sxs-lookup"><span data-stu-id="903f2-138">The following table lists versions of the .NET Framework since the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] and the versions of the Unicode Standard  used to classify characters.</span></span>  
  
 <span data-ttu-id="903f2-139"><list type="table"><listheader><term> .NET framework 版本</span><span class="sxs-lookup"><span data-stu-id="903f2-139"><list type="table"><listheader><term> .NET Framework version</span></span>  
  
 <span data-ttu-id="903f2-140"></term><description> Unicode 标准版本</span><span class="sxs-lookup"><span data-stu-id="903f2-140"></term><description> Version of the Unicode Standard</span></span>  
  
 <span data-ttu-id="903f2-141"></description></listheader><item><term> [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</span><span class="sxs-lookup"><span data-stu-id="903f2-141"></description></listheader><item><term> [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</span></span>  
  
 <span data-ttu-id="903f2-142"></term><description> [Unicode 标准，版本为 5.0.0](http://www.unicode.org/versions/Unicode5.0.0/)</span><span class="sxs-lookup"><span data-stu-id="903f2-142"></term><description> [The Unicode Standard, Version 5.0.0](http://www.unicode.org/versions/Unicode5.0.0/)</span></span>  
  
 <span data-ttu-id="903f2-143"></description></item><item><term> [!INCLUDE[net_v45](~/includes/net-v45-md.md)]</span><span class="sxs-lookup"><span data-stu-id="903f2-143"></description></item><item><term> [!INCLUDE[net_v45](~/includes/net-v45-md.md)]</span></span>  
  
 <span data-ttu-id="903f2-144"></term><description> [Unicode 标准，版本为 5.0.0](http://www.unicode.org/versions/Unicode5.0.0/)</span><span class="sxs-lookup"><span data-stu-id="903f2-144"></term><description> [The Unicode Standard, Version 5.0.0](http://www.unicode.org/versions/Unicode5.0.0/)</span></span>  
  
 <span data-ttu-id="903f2-145"></description></item><item><term> [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span><span class="sxs-lookup"><span data-stu-id="903f2-145"></description></item><item><term> [!INCLUDE[net_v451](~/includes/net-v451-md.md)]</span></span>  
  
 <span data-ttu-id="903f2-146"></term><description> [Unicode 标准，版本为 5.0.0](http://www.unicode.org/versions/Unicode5.0.0/)</span><span class="sxs-lookup"><span data-stu-id="903f2-146"></term><description> [The Unicode Standard, Version 5.0.0](http://www.unicode.org/versions/Unicode5.0.0/)</span></span>  
  
 <span data-ttu-id="903f2-147"></description></item><item><term> [!INCLUDE[net_v452](~/includes/net-v452-md.md)]</span><span class="sxs-lookup"><span data-stu-id="903f2-147"></description></item><item><term> [!INCLUDE[net_v452](~/includes/net-v452-md.md)]</span></span>  
  
 <span data-ttu-id="903f2-148"></term><description> [Unicode 标准，版本为 5.0.0](http://www.unicode.org/versions/Unicode5.0.0/)</span><span class="sxs-lookup"><span data-stu-id="903f2-148"></term><description> [The Unicode Standard, Version 5.0.0](http://www.unicode.org/versions/Unicode5.0.0/)</span></span>  
  
 <span data-ttu-id="903f2-149"></description></item><item><term> [!INCLUDE[net_v46](~/includes/net-v46-md.md)]</span><span class="sxs-lookup"><span data-stu-id="903f2-149"></description></item><item><term> [!INCLUDE[net_v46](~/includes/net-v46-md.md)]</span></span>  
  
 <span data-ttu-id="903f2-150"></term><description> [Unicode 标准，版本 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/)</span><span class="sxs-lookup"><span data-stu-id="903f2-150"></term><description> [The Unicode Standard, Version 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/)</span></span>  
  
 <span data-ttu-id="903f2-151"></description></item><item><term> [!INCLUDE[net_v461](~/includes/net-v461-md.md)]</span><span class="sxs-lookup"><span data-stu-id="903f2-151"></description></item><item><term> [!INCLUDE[net_v461](~/includes/net-v461-md.md)]</span></span>  
  
 <span data-ttu-id="903f2-152"></term><description> [Unicode 标准，版本 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/)</span><span class="sxs-lookup"><span data-stu-id="903f2-152"></term><description> [The Unicode Standard, Version 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/)</span></span>  
  
 <span data-ttu-id="903f2-153"></description></item><item><term> [!INCLUDE[net_v462](~/includes/net-v462-md.md)]</span><span class="sxs-lookup"><span data-stu-id="903f2-153"></description></item><item><term> [!INCLUDE[net_v462](~/includes/net-v462-md.md)]</span></span>  
  
 <span data-ttu-id="903f2-154"></term><description> [Unicode 标准，8.0.0 版](http://www.unicode.org/versions/Unicode8.0.0/)</span><span class="sxs-lookup"><span data-stu-id="903f2-154"></term><description> [The Unicode Standard, Version 8.0.0](http://www.unicode.org/versions/Unicode8.0.0/)</span></span>  
  
 </description></item></list>  
  
 <span data-ttu-id="903f2-155">每个版本的 Unicode 标准包括由于以前的版本到 Unicode 字符数据库更改的信息。</span><span class="sxs-lookup"><span data-stu-id="903f2-155">Each version of the Unicode standard includes information on changes to the Unicode character database since the previous version.</span></span> <span data-ttu-id="903f2-156">所使用的 Unicode 字符数据库<see cref="T:System.Globalization.CharUnicodeInfo" />类，用于对字符进行分类。</span><span class="sxs-lookup"><span data-stu-id="903f2-156">The Unicode character database is used by the <see cref="T:System.Globalization.CharUnicodeInfo" /> class for categorizing characters.</span></span></para>
    </block>
    <altmember cref="T:System.Globalization.UnicodeCategory" />
    <altmember cref="N:System.Text" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetDecimalDigitValue">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="903f2-157">获取数值型 Unicode 字符的十进制数字值。</span><span class="sxs-lookup"><span data-stu-id="903f2-157">Gets the decimal digit value of a numeric Unicode character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDecimalDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDecimalDigitValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDecimalDigitValue(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDecimalDigitValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDecimalDigitValue (ch As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDecimalDigitValue(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="903f2-158">要获取其十进制数字值的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="903f2-158">The Unicode character for which to get the decimal digit value.</span></span></param>
        <summary><span data-ttu-id="903f2-159">获取指定数值型字符的十进制数字值。</span><span class="sxs-lookup"><span data-stu-id="903f2-159">Gets the decimal digit value of the specified numeric character.</span></span></summary>
        <returns><span data-ttu-id="903f2-160">指定数值型字符的十进制数字值。</span><span class="sxs-lookup"><span data-stu-id="903f2-160">The decimal digit value of the specified numeric character.</span></span>  
  
 <span data-ttu-id="903f2-161">或</span><span class="sxs-lookup"><span data-stu-id="903f2-161">-or-</span></span>  
  
 <span data-ttu-id="903f2-162">如果指定字符不是十进制数字，则为 -1。</span><span class="sxs-lookup"><span data-stu-id="903f2-162">-1, if the specified character is not a decimal digit.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903f2-163">此方法将转换为其等效的整数值表示十进制数字的字符。</span><span class="sxs-lookup"><span data-stu-id="903f2-163">This method converts characters that represent decimal digits to their equivalent integral values.</span></span> <span data-ttu-id="903f2-164">十进制数字都是中的字符<xref:System.Globalization.UnicodeCategory.DecimalDigitNumber>可以表示一个编号从 0 到 9 的系统，十进制 (基数为 10) 中的 10 个数字的类别。</span><span class="sxs-lookup"><span data-stu-id="903f2-164">Decimal digits are characters in the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> category that can represent one of ten digits in the decimal (base 10) numbering system, from zero through nine.</span></span> <span data-ttu-id="903f2-165">它通过 U + 1049年 （包括字符如 U + 0030 （数字零） 到 U + 0039 （数字九个），U + 0660 通过 U + 0669 （阿拉伯-印度文数字九个），U + 07c 0 （NKO 数字零） 通过 U + 07C 9 （NKO 数字九个） 和 U + 1040 （缅甸数字零） （阿拉伯-印度文数字零）缅甸文数字包含 9 个）。</span><span class="sxs-lookup"><span data-stu-id="903f2-165">It includes characters such as U+0030 (DIGIT ZERO) through U+0039 (DIGIT NINE), U+0660 (ARABIC-INDIC DIGIT ZERO) through U+0669 (ARABIC-INDIC DIGIT NINE), U+07C0 (NKO DIGIT ZERO) through U+07C9 (NKO DIGIT NINE), and U+1040 (MYANMAR DIGIT ZERO) through U+1049 (MYANMAR DIGIT NINE).</span></span>  
  
 <span data-ttu-id="903f2-166">有关 Unicode 字符的详细信息，请参阅[Unicode 标准](http://go.microsoft.com/fwlink/?linkid=37123)。</span><span class="sxs-lookup"><span data-stu-id="903f2-166">For more information about Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="903f2-167">下面的代码示例演示为不同类型的字符的每个方法返回的值。</span><span class="sxs-lookup"><span data-stu-id="903f2-167">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDecimalDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDecimalDigitValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDecimalDigitValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDecimalDigitValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDecimalDigitValue (s As String, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDecimalDigitValue(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="903f2-168">包含要获取其十进制数字值的 Unicode 字符的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="903f2-168">The <see cref="T:System.String" /> containing the Unicode character for which to get the decimal digit value.</span></span></param>
        <param name="index"><span data-ttu-id="903f2-169">要获取其十进制数字值的 Unicode 字符的索引。</span><span class="sxs-lookup"><span data-stu-id="903f2-169">The index of the Unicode character for which to get the decimal digit value.</span></span></param>
        <summary><span data-ttu-id="903f2-170">获取位于指定字符串的指定索引处的数值型字符的十进制数字值。</span><span class="sxs-lookup"><span data-stu-id="903f2-170">Gets the decimal digit value of the numeric character at the specified index of the specified string.</span></span></summary>
        <returns><span data-ttu-id="903f2-171">位于指定字符串的指定索引处的数值型字符的十进制数字值。</span><span class="sxs-lookup"><span data-stu-id="903f2-171">The decimal digit value of the numeric character at the specified index of the specified string.</span></span>  
  
 <span data-ttu-id="903f2-172">或</span><span class="sxs-lookup"><span data-stu-id="903f2-172">-or-</span></span>  
  
 <span data-ttu-id="903f2-173">如果位于指定字符串的指定索引位处的字符不是十进制数字，则为 -1。</span><span class="sxs-lookup"><span data-stu-id="903f2-173">-1, if the character at the specified index of the specified string is not a decimal digit.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903f2-174">此方法将转换为其等效的整数值表示十进制数字的字符。</span><span class="sxs-lookup"><span data-stu-id="903f2-174">This method converts characters that represent decimal digits to their equivalent integral values.</span></span> <span data-ttu-id="903f2-175">十进制数字都是中的字符<xref:System.Globalization.UnicodeCategory.DecimalDigitNumber>可以表示一个编号从 0 到 9 的系统，十进制 (基数为 10) 中的 10 个数字的类别。</span><span class="sxs-lookup"><span data-stu-id="903f2-175">Decimal digits are characters in the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> category that can represent one of ten digits in the decimal (base 10) numbering system, from zero through nine.</span></span> <span data-ttu-id="903f2-176">它通过 U + 1049年 （包括字符如 U + 0030 （数字零） 到 U + 0039 （数字九个），U + 0660 通过 U + 0669 （阿拉伯-印度文数字九个），U + 07c 0 （NKO 数字零） 通过 U + 07C 9 （NKO 数字九个） 和 U + 1040 （缅甸数字零） （阿拉伯-印度文数字零）缅甸文数字包含 9 个）。</span><span class="sxs-lookup"><span data-stu-id="903f2-176">It includes characters such as U+0030 (DIGIT ZERO) through U+0039 (DIGIT NINE), U+0660 (ARABIC-INDIC DIGIT ZERO) through U+0669 (ARABIC-INDIC DIGIT NINE), U+07C0 (NKO DIGIT ZERO) through U+07C9 (NKO DIGIT NINE), and U+1040 (MYANMAR DIGIT ZERO) through U+1049 (MYANMAR DIGIT NINE).</span></span>  
  
 <span data-ttu-id="903f2-177">有关 Unicode 字符的详细信息，请参阅[Unicode 标准](http://go.microsoft.com/fwlink/?linkid=37123)。</span><span class="sxs-lookup"><span data-stu-id="903f2-177">For more information about Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="903f2-178">下面的代码示例演示为不同类型的字符的每个方法返回的值。</span><span class="sxs-lookup"><span data-stu-id="903f2-178">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="903f2-179"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="903f2-179"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="903f2-180"><paramref name="index" /> 超出 <paramref name="s" /> 中的有效索引范围。</span><span class="sxs-lookup"><span data-stu-id="903f2-180"><paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDigitValue">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="903f2-181">获取数值型 Unicode 字符的数字值。</span><span class="sxs-lookup"><span data-stu-id="903f2-181">Gets the digit value of a numeric Unicode character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDigitValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDigitValue(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDigitValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDigitValue (ch As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDigitValue(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="903f2-182">要为其获取数字值的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="903f2-182">The Unicode character for which to get the digit value.</span></span></param>
        <summary><span data-ttu-id="903f2-183">获取指定数值型字符的数字值。</span><span class="sxs-lookup"><span data-stu-id="903f2-183">Gets the digit value of the specified numeric character.</span></span></summary>
        <returns><span data-ttu-id="903f2-184">指定数值型字符的数字值。</span><span class="sxs-lookup"><span data-stu-id="903f2-184">The digit value of the specified numeric character.</span></span>  
  
 <span data-ttu-id="903f2-185">或</span><span class="sxs-lookup"><span data-stu-id="903f2-185">-or-</span></span>  
  
 <span data-ttu-id="903f2-186">如果指定的字符不是数字，则为 -1。</span><span class="sxs-lookup"><span data-stu-id="903f2-186">-1, if the specified character is not a digit.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903f2-187">数字值是一个属性，仅适用于可用作位数的数字字符。</span><span class="sxs-lookup"><span data-stu-id="903f2-187">Digit value is a property that applies only to numeric characters that can be used as digits.</span></span> <span data-ttu-id="903f2-188">一个数字是可以用来表示整数数量编号系统中其他数字组合的数字字符。</span><span class="sxs-lookup"><span data-stu-id="903f2-188">A digit is a numeric character that can be combined with other digits to represent a whole number in a numbering system.</span></span>  
  
 <span data-ttu-id="903f2-189">有关 Unicode 字符的详细信息，请参阅[Unicode 标准](http://go.microsoft.com/fwlink/?linkid=37123)。</span><span class="sxs-lookup"><span data-stu-id="903f2-189">For more information on Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="903f2-190">下面的代码示例演示为不同类型的字符的每个方法返回的值。</span><span class="sxs-lookup"><span data-stu-id="903f2-190">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDigitValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDigitValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDigitValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDigitValue (s As String, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDigitValue(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="903f2-191">包含要获取其数字值的 Unicode 字符的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="903f2-191">The <see cref="T:System.String" /> containing the Unicode character for which to get the digit value.</span></span></param>
        <param name="index"><span data-ttu-id="903f2-192">要获取其数字值的 Unicode 字符的索引。</span><span class="sxs-lookup"><span data-stu-id="903f2-192">The index of the Unicode character for which to get the digit value.</span></span></param>
        <summary><span data-ttu-id="903f2-193">获取位于指定字符串的指定索引处的数值型字符的数字值。</span><span class="sxs-lookup"><span data-stu-id="903f2-193">Gets the digit value of the numeric character at the specified index of the specified string.</span></span></summary>
        <returns><span data-ttu-id="903f2-194">位于指定字符串的指定索引处的数值型字符的数字值。</span><span class="sxs-lookup"><span data-stu-id="903f2-194">The digit value of the numeric character at the specified index of the specified string.</span></span>  
  
 <span data-ttu-id="903f2-195">或</span><span class="sxs-lookup"><span data-stu-id="903f2-195">-or-</span></span>  
  
 <span data-ttu-id="903f2-196">如果位于指定字符串的指定索引处的字符不是数字，则为 -1。</span><span class="sxs-lookup"><span data-stu-id="903f2-196">-1, if the character at the specified index of the specified string is not a digit.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903f2-197">数字值是一个属性，仅适用于可用作位数的数字字符。</span><span class="sxs-lookup"><span data-stu-id="903f2-197">Digit value is a property that applies only to numeric characters that can be used as digits.</span></span> <span data-ttu-id="903f2-198">一个数字是可以用来表示整数数量编号系统中其他数字组合的数字字符。</span><span class="sxs-lookup"><span data-stu-id="903f2-198">A digit is a numeric character that can be combined with other digits to represent a whole number in a numbering system.</span></span>  
  
 <span data-ttu-id="903f2-199">有关 Unicode 字符的详细信息，请参阅[Unicode 标准](http://go.microsoft.com/fwlink/?linkid=37123)。</span><span class="sxs-lookup"><span data-stu-id="903f2-199">For more information on Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="903f2-200">下面的代码示例演示为不同类型的字符的每个方法返回的值。</span><span class="sxs-lookup"><span data-stu-id="903f2-200">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="903f2-201"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="903f2-201"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="903f2-202"><paramref name="index" /> 超出 <paramref name="s" /> 中的有效索引范围。</span><span class="sxs-lookup"><span data-stu-id="903f2-202"><paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNumericValue">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="903f2-203">获取与 Unicode 字符关联的数值。</span><span class="sxs-lookup"><span data-stu-id="903f2-203">Gets the numeric value associated with a Unicode character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetNumericValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (ch As Char) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="903f2-204">要获取其数值的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="903f2-204">The Unicode character for which to get the numeric value.</span></span></param>
        <summary><span data-ttu-id="903f2-205">获取与指定字符关联的数值。</span><span class="sxs-lookup"><span data-stu-id="903f2-205">Gets the numeric value associated with the specified character.</span></span></summary>
        <returns><span data-ttu-id="903f2-206">与指定字符关联的数值。</span><span class="sxs-lookup"><span data-stu-id="903f2-206">The numeric value associated with the specified character.</span></span>  
  
 <span data-ttu-id="903f2-207">或</span><span class="sxs-lookup"><span data-stu-id="903f2-207">-or-</span></span>  
  
 <span data-ttu-id="903f2-208">如果指定的字符不是数值型字符，则为 -1。</span><span class="sxs-lookup"><span data-stu-id="903f2-208">-1, if the specified character is not a numeric character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903f2-209">数值为仅适用于数字字符，包括秒的小数部分、 下标、 上标、 罗马数字、 货币分子、 循环的数和脚本特有的数字 Unicode 字符属性。</span><span class="sxs-lookup"><span data-stu-id="903f2-209">Numeric value is a Unicode character property that applies only to numeric characters, which include fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span> <span data-ttu-id="903f2-210">有关 Unicode 字符的详细信息，请参阅[Unicode 标准](http://go.microsoft.com/fwlink/?linkid=37123)。</span><span class="sxs-lookup"><span data-stu-id="903f2-210">For more information on Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
 <span data-ttu-id="903f2-211"><xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29>方法假设`ch`对应于单个语言字符，并且检查是否可以将该字符转换为十进制数字类别。</span><span class="sxs-lookup"><span data-stu-id="903f2-211">The <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29> method assumes that `ch` corresponds to a single linguistic character and checks whether that character can be converted to a decimal digit.</span></span> <span data-ttu-id="903f2-212">但是，由两个表示 Unicode 标准中的一些数字<xref:System.Char>形成一个代理项对的对象。</span><span class="sxs-lookup"><span data-stu-id="903f2-212">However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair.</span></span> <span data-ttu-id="903f2-213">例如，数字系统爱琴包含码位 U + 10107 至 U + 10133。</span><span class="sxs-lookup"><span data-stu-id="903f2-213">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="903f2-214">下面的示例使用<xref:System.Char.ConvertFromUtf32%2A>方法可实例化一个字符串，表示爱琴海数字一。</span><span class="sxs-lookup"><span data-stu-id="903f2-214">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="903f2-215">如示例所示，输出<xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29>方法返回-1，如果它传递一个高代理项或低代理项的此字符。</span><span class="sxs-lookup"><span data-stu-id="903f2-215">As the output from the example shows, the <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29> method returns -1 if it is passed either a high surrogate or a low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetNumericValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/cs/getnumericvalue1.cs#2)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetNumericValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/vb/getnumericvalue1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="903f2-216">下面的代码示例演示为不同类型的字符的每个方法返回的值。</span><span class="sxs-lookup"><span data-stu-id="903f2-216">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetNumericValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (s As String, index As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="903f2-217">包含要获取其数值的 Unicode 字符的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="903f2-217">The <see cref="T:System.String" /> containing the Unicode character for which to get the numeric value.</span></span></param>
        <param name="index"><span data-ttu-id="903f2-218">要获取其数值的 Unicode 字符的索引。</span><span class="sxs-lookup"><span data-stu-id="903f2-218">The index of the Unicode character for which to get the numeric value.</span></span></param>
        <summary><span data-ttu-id="903f2-219">获取与位于指定字符串的指定索引处的字符关联的数值。</span><span class="sxs-lookup"><span data-stu-id="903f2-219">Gets the numeric value associated with the character at the specified index of the specified string.</span></span></summary>
        <returns><span data-ttu-id="903f2-220">与位于指定字符串的指定索引处的字符关联的数值。</span><span class="sxs-lookup"><span data-stu-id="903f2-220">The numeric value associated with the character at the specified index of the specified string.</span></span>  
  
 <span data-ttu-id="903f2-221">或</span><span class="sxs-lookup"><span data-stu-id="903f2-221">-or-</span></span>  
  
 <span data-ttu-id="903f2-222">如果位于指定字符串的指定索引处的字符不是数值型字符，则为 -1。</span><span class="sxs-lookup"><span data-stu-id="903f2-222">-1, if the character at the specified index of the specified string is not a numeric character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903f2-223">数值为仅适用于数字字符，包括秒的小数部分、 下标、 上标、 罗马数字、 货币分子、 循环的数和脚本特有的数字 Unicode 字符属性。</span><span class="sxs-lookup"><span data-stu-id="903f2-223">Numeric value is a Unicode character property that applies only to numeric characters, which include fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span> <span data-ttu-id="903f2-224">有关 Unicode 字符的详细信息，请参阅[Unicode 标准](http://go.microsoft.com/fwlink/?linkid=37123)。</span><span class="sxs-lookup"><span data-stu-id="903f2-224">For more information on Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
 <span data-ttu-id="903f2-225">如果<xref:System.Char>对象位于位置`index`有效的代理项对的第一个字符<xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29>方法确定是否代理项对窗体一个数字，，如果是这样，则返回相应的数字值。</span><span class="sxs-lookup"><span data-stu-id="903f2-225">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit, and, if it does, returns its numeric value.</span></span> <span data-ttu-id="903f2-226">例如，数字系统爱琴包含码位 U + 10107 至 U + 10133。</span><span class="sxs-lookup"><span data-stu-id="903f2-226">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="903f2-227">下面的示例使用<xref:System.Char.ConvertFromUtf32%2A>方法可实例化一个字符串，表示每个爱琴海数目。</span><span class="sxs-lookup"><span data-stu-id="903f2-227">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents each Aegean number.</span></span> <span data-ttu-id="903f2-228">如示例所示，输出<xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29>方法返回正确的数字值，如果它传递爱琴海的数目的高代理项。</span><span class="sxs-lookup"><span data-stu-id="903f2-228">As the output from the example shows, the <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29> method returns the correct numeric value if it is passed the high surrogate of an Aegean number.</span></span> <span data-ttu-id="903f2-229">但是，如果它传递的低代理项，它将仅在隔离的低代理项，并返回-1。</span><span class="sxs-lookup"><span data-stu-id="903f2-229">However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns -1.</span></span>  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetNumericValue#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/cs/getnumericvalue1.cs#3)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetNumericValue#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/vb/getnumericvalue1.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="903f2-230">下面的代码示例演示为不同类型的字符的每个方法返回的值。</span><span class="sxs-lookup"><span data-stu-id="903f2-230">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="903f2-231"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="903f2-231"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="903f2-232"><paramref name="index" /> 超出 <paramref name="s" /> 中的有效索引范围。</span><span class="sxs-lookup"><span data-stu-id="903f2-232"><paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUnicodeCategory">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="903f2-233">获取 Unicode 字符的 Unicode 类别。</span><span class="sxs-lookup"><span data-stu-id="903f2-233">Gets the Unicode category of a Unicode character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (ch As Char) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="903f2-234">要获取其 Unicode 类别的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="903f2-234">The Unicode character for which to get the Unicode category.</span></span></param>
        <summary><span data-ttu-id="903f2-235">获取指定字符的 Unicode 类别。</span><span class="sxs-lookup"><span data-stu-id="903f2-235">Gets the Unicode category of the specified character.</span></span></summary>
        <returns><span data-ttu-id="903f2-236">指示指定字符类别的 <see cref="T:System.Globalization.UnicodeCategory" /> 值。</span><span class="sxs-lookup"><span data-stu-id="903f2-236">A <see cref="T:System.Globalization.UnicodeCategory" /> value indicating the category of the specified character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903f2-237">Unicode 字符分为类别。</span><span class="sxs-lookup"><span data-stu-id="903f2-237">The Unicode characters are divided into categories.</span></span> <span data-ttu-id="903f2-238">字符的类别是其属性之一。</span><span class="sxs-lookup"><span data-stu-id="903f2-238">A character's category is one of its properties.</span></span> <span data-ttu-id="903f2-239">例如，字符可能是一个大写字母、 小写字母、 十进制数字，字母数字、 连接器标点符号、 数学符号或货币符号。</span><span class="sxs-lookup"><span data-stu-id="903f2-239">For example, a character might be an uppercase letter, a lowercase letter, a decimal digit number, a letter number, a connector punctuation, a math symbol, or a currency symbol.</span></span> <span data-ttu-id="903f2-240"><xref:System.Globalization.UnicodeCategory>类返回的 Unicode 字符类别。</span><span class="sxs-lookup"><span data-stu-id="903f2-240">The <xref:System.Globalization.UnicodeCategory> class returns the category of a Unicode character.</span></span> <span data-ttu-id="903f2-241">有关 Unicode 字符的详细信息，请参阅[Unicode 标准](http://go.microsoft.com/fwlink/?linkid=37123)。</span><span class="sxs-lookup"><span data-stu-id="903f2-241">For more information on Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
 <span data-ttu-id="903f2-242"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A>方法假设`ch`对应于单个语言字符并返回其类别。</span><span class="sxs-lookup"><span data-stu-id="903f2-242">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A> method assumes that `ch` corresponds to a single linguistic character and returns its category.</span></span> <span data-ttu-id="903f2-243">这意味着，对于代理项对，它将返回<xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>而不是该代理项所属的类别。</span><span class="sxs-lookup"><span data-stu-id="903f2-243">This means that, for surrogate pairs, it returns <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> instead of the category to which the surrogate belongs.</span></span> <span data-ttu-id="903f2-244">例如，点滴字母表占用代码点从 U + 10380 到 U + 1039F。</span><span class="sxs-lookup"><span data-stu-id="903f2-244">For example, the Ugaritic alphabet occupies code points U+10380 to U+1039F.</span></span> <span data-ttu-id="903f2-245">下面的示例使用<xref:System.Char.ConvertFromUtf32%2A>方法可实例化一个字符串，表示 UGARITIC 字母 ALPA (从 U + 10380)，即点滴字母表的第一个字母。</span><span class="sxs-lookup"><span data-stu-id="903f2-245">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents UGARITIC LETTER ALPA (U+10380), which is the first letter of the Ugaritic alphabet.</span></span> <span data-ttu-id="903f2-246">如示例所示，输出<xref:System.Char.IsNumber%28System.Char%29>方法返回`false`如果它传递的高代理项或此字符的低代理项。</span><span class="sxs-lookup"><span data-stu-id="903f2-246">As the output from the example shows, the <xref:System.Char.IsNumber%28System.Char%29> method returns `false` if it is passed either the high surrogate or the low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/cs/getunicodecategory1.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/vb/getunicodecategory1.vb#1)]  
  
 <span data-ttu-id="903f2-247">请注意，<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType>不始终返回相同<xref:System.Globalization.UnicodeCategory>值作为<xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>方法时作为参数传递特定的字符。</span><span class="sxs-lookup"><span data-stu-id="903f2-247">Note that <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method when passed a particular character as a parameter.</span></span> <span data-ttu-id="903f2-248"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType>方法用于反映 Unicode 标准的当前版本。</span><span class="sxs-lookup"><span data-stu-id="903f2-248">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="903f2-249">与此相反，尽管<xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>方法通常反映 Unicode 标准的当前版本，它可能会返回在早期版本的标准，基于字符的类别或它可能会返回不同的类别，与当前到标准保留向后兼容性。</span><span class="sxs-lookup"><span data-stu-id="903f2-249">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it might return a character's category based on a previous version of the standard, or it might return a category that differs from the current standard to preserve backward compatibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="903f2-250">下面的代码示例演示为不同类型的字符的每个方法返回的值。</span><span class="sxs-lookup"><span data-stu-id="903f2-250">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (s As String, index As Integer) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(System::String ^ s, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="903f2-251">包含要获取其 Unicode 类别的 Unicode 字符的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="903f2-251">The <see cref="T:System.String" /> containing the Unicode character for which to get the Unicode category.</span></span></param>
        <param name="index"><span data-ttu-id="903f2-252">要获取其 Unicode 类别的 Unicode 字符的索引。</span><span class="sxs-lookup"><span data-stu-id="903f2-252">The index of the Unicode character for which to get the Unicode category.</span></span></param>
        <summary><span data-ttu-id="903f2-253">获取位于指定字符串的指定索引处的字符的 Unicode 类别。</span><span class="sxs-lookup"><span data-stu-id="903f2-253">Gets the Unicode category of the character at the specified index of the specified string.</span></span></summary>
        <returns><span data-ttu-id="903f2-254">指示位于指定字符串的指定索引处的字符类别的 <see cref="T:System.Globalization.UnicodeCategory" /> 值。</span><span class="sxs-lookup"><span data-stu-id="903f2-254">A <see cref="T:System.Globalization.UnicodeCategory" /> value indicating the category of the character at the specified index of the specified string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903f2-255">Unicode 字符分为类别。</span><span class="sxs-lookup"><span data-stu-id="903f2-255">The Unicode characters are divided into categories.</span></span> <span data-ttu-id="903f2-256">字符的类别是其属性之一。</span><span class="sxs-lookup"><span data-stu-id="903f2-256">A character's category is one of its properties.</span></span> <span data-ttu-id="903f2-257">例如，字符可能是一个大写字母、 小写字母、 十进制数字，字母数字、 连接器标点符号、 数学符号或货币符号。</span><span class="sxs-lookup"><span data-stu-id="903f2-257">For example, a character might be an uppercase letter, a lowercase letter, a decimal digit number, a letter number, a connector punctuation, a math symbol, or a currency symbol.</span></span> <span data-ttu-id="903f2-258"><xref:System.Globalization.UnicodeCategory>类返回的 Unicode 字符类别。</span><span class="sxs-lookup"><span data-stu-id="903f2-258">The <xref:System.Globalization.UnicodeCategory> class returns the category of a Unicode character.</span></span> <span data-ttu-id="903f2-259">有关 Unicode 字符的详细信息，请参阅[Unicode 标准](http://go.microsoft.com/fwlink/?linkid=37123)。</span><span class="sxs-lookup"><span data-stu-id="903f2-259">For more information on Unicode characters, see the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
 <span data-ttu-id="903f2-260">如果<xref:System.Char>对象位于位置`index`有效的代理项对的第一个字符<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29>方法返回而不是返回的代理项对的 Unicode 类别<xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="903f2-260">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29> method returns the Unicode category of the surrogate pair instead of returning <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>.</span></span> <span data-ttu-id="903f2-261">例如，点滴字母表占用代码点从 U + 10380 到 U + 1039F。</span><span class="sxs-lookup"><span data-stu-id="903f2-261">For example, the Ugaritic alphabet occupies code points U+10380 to U+1039F.</span></span> <span data-ttu-id="903f2-262">下面的示例使用<xref:System.Char.ConvertFromUtf32%2A>方法可实例化一个字符串，表示 UGARITIC 字母 ALPA (从 U + 10380)，即点滴字母表的第一个字母。</span><span class="sxs-lookup"><span data-stu-id="903f2-262">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents UGARITIC LETTER ALPA (U+10380), which is the first letter of the Ugaritic alphabet.</span></span> <span data-ttu-id="903f2-263">如示例所示，输出<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29>方法返回<xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType>如果它传递此字符，它指示它认为代理项对的高代理项。</span><span class="sxs-lookup"><span data-stu-id="903f2-263">As the output from the example shows, the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29> method returns <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> if it is passed the high surrogate of this character, which indicates that it considers the surrogate pair.</span></span> <span data-ttu-id="903f2-264">但是，如果它传递的低代理项，则它会考虑仅在隔离的低代理项并返回<xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="903f2-264">However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/cs/getunicodecategory1.cs#2)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/vb/getunicodecategory1.vb#2)]  
  
 <span data-ttu-id="903f2-265">请注意，<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType>方法不始终返回相同<xref:System.Globalization.UnicodeCategory>值作为<xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>方法时作为参数传递特定的字符。</span><span class="sxs-lookup"><span data-stu-id="903f2-265">Note that <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method when passed a particular character as a parameter.</span></span> <span data-ttu-id="903f2-266"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType>方法用于反映 Unicode 标准的当前版本。</span><span class="sxs-lookup"><span data-stu-id="903f2-266">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="903f2-267">与此相反，尽管<xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>方法通常反映 Unicode 标准的当前版本，它可能会返回在早期版本的标准，基于字符的类别或它可能会返回不同的类别，与当前到标准保留向后兼容性。</span><span class="sxs-lookup"><span data-stu-id="903f2-267">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it might return a character's category based on a previous version of the standard, or it might return a category that differs from the current standard to preserve backward compatibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="903f2-268">下面的代码示例演示为不同类型的字符的每个方法返回的值。</span><span class="sxs-lookup"><span data-stu-id="903f2-268">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="903f2-269"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="903f2-269"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="903f2-270"><paramref name="index" /> 超出 <paramref name="s" /> 中的有效索引范围。</span><span class="sxs-lookup"><span data-stu-id="903f2-270"><paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
  </Members>
</Type>