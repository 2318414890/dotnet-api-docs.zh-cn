<Type Name="JulianCalendar" FullName="System.Globalization.JulianCalendar">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3b87b4ddf81a3c0159c4828e530ec1d3b2f8a6aa" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36563114" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class JulianCalendar : System.Globalization.Calendar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit JulianCalendar extends System.Globalization.Calendar" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.JulianCalendar" />
  <TypeSignature Language="VB.NET" Value="Public Class JulianCalendar&#xA;Inherits Calendar" />
  <TypeSignature Language="C++ CLI" Value="public ref class JulianCalendar : System::Globalization::Calendar" />
  <TypeSignature Language="F#" Value="type JulianCalendar = class&#xA;    inherit Calendar" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Calendars</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Globalization.Calendar</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9aab1-101">Represents the Julian calendar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9aab1-101">Represents the Julian calendar.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9aab1-102">在 45年公元前凯撒大帝排序日历修订，这将导致调用罗马儒略历的日历中。</span><span class="sxs-lookup"><span data-stu-id="9aab1-102">In 45 B.C., Julius Caesar ordered a calendar reform, which resulted in the calendar called the Julian calendar.</span></span> <span data-ttu-id="9aab1-103">罗马儒略历是前置任务的公历。</span><span class="sxs-lookup"><span data-stu-id="9aab1-103">The Julian calendar is the predecessor of the Gregorian calendar.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9aab1-104">有关使用信息<xref:System.Globalization.HebrewCalendar>类和其他日历.NET Framework 中的类，请参阅[使用日历](~/docs/standard/datetime/working-with-calendars.md)。</span><span class="sxs-lookup"><span data-stu-id="9aab1-104">For information about using the <xref:System.Globalization.HebrewCalendar> class and the other calendar classes in the .NET Framework, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md).</span></span>  
  
 <span data-ttu-id="9aab1-105"><xref:System.Globalization.JulianCalendar>类只识别当前纪元。</span><span class="sxs-lookup"><span data-stu-id="9aab1-105">The <xref:System.Globalization.JulianCalendar> class recognizes only the current era.</span></span>  
  
 <span data-ttu-id="9aab1-106">与公历，不同罗马儒略历作为年份整除由 4 个无例外的定义为闰年。</span><span class="sxs-lookup"><span data-stu-id="9aab1-106">Unlike the Gregorian calendar, the Julian calendar defines a leap year as a year that is evenly divisible by four with no exceptions.</span></span> <span data-ttu-id="9aab1-107">因此，一天每隔 128 年日历是不准确。</span><span class="sxs-lookup"><span data-stu-id="9aab1-107">Therefore, the calendar is inaccurate by one day every 128 years.</span></span> <span data-ttu-id="9aab1-108">平 365 年天并且初始屏幕闰年有 366 天。</span><span class="sxs-lookup"><span data-stu-id="9aab1-108">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="9aab1-109">公历，如罗马儒略历具有 28 到 31 天的 12 个月： 年 1 月 （31 天）、 年 2 月 (28 或 29 天为单位)、 年 3 月 （31 天）、 年 4 月 （30 天）、 月 （31 天）、 年 6 月 （30 天）、 年 7 月 （31 天）、 年 8 月 （31 天）、 年 9 月 （30 天）、 年 10 月 （31 天）年 11 月 （30 天） 和年 12 月 （31 天）。</span><span class="sxs-lookup"><span data-stu-id="9aab1-109">Like the Gregorian calendar, the Julian calendar has 12 months with 28 to 31 days each: January (31 days), February (28 or 29 days), March (31 days), April (30 days), May (31 days), June (30 days), July (31 days), August (31 days), September (30 days), October (31 days), November (30 days), and December (31 days).</span></span> <span data-ttu-id="9aab1-110">2 月有 29 天在闰年和 28 在平年。</span><span class="sxs-lookup"><span data-stu-id="9aab1-110">February has 29 days during leap years and 28 during common years.</span></span>  
  
 <span data-ttu-id="9aab1-111">日期到公元 2001 年 1 月 1 日</span><span class="sxs-lookup"><span data-stu-id="9aab1-111">The date January 1, 2001 A.D.</span></span> <span data-ttu-id="9aab1-112">在公历日历相当于在公元 2000 年 12 月 19 日</span><span class="sxs-lookup"><span data-stu-id="9aab1-112">in the Gregorian calendar is equivalent to the 19th day of December in the year 2000 A.D.</span></span> <span data-ttu-id="9aab1-113">在儒略历。</span><span class="sxs-lookup"><span data-stu-id="9aab1-113">in the Julian calendar.</span></span>  
  
 <span data-ttu-id="9aab1-114">目前，<xref:System.Globalization.JulianCalendar>不使用任何支持的区域性<xref:System.Globalization.CultureInfo>类。</span><span class="sxs-lookup"><span data-stu-id="9aab1-114">Currently, the <xref:System.Globalization.JulianCalendar> is not used by any of the cultures supported by the <xref:System.Globalization.CultureInfo> class.</span></span> <span data-ttu-id="9aab1-115">因此，<xref:System.Globalization.JulianCalendar>类可以仅用于计算中罗马儒略历的日期。</span><span class="sxs-lookup"><span data-stu-id="9aab1-115">Therefore, the <xref:System.Globalization.JulianCalendar> class can be used only to calculate dates in the Julian calendar.</span></span>  
  
 <span data-ttu-id="9aab1-116">每个<xref:System.Globalization.CultureInfo>对象支持一组的日历。</span><span class="sxs-lookup"><span data-stu-id="9aab1-116">Each <xref:System.Globalization.CultureInfo> object supports a set of calendars.</span></span> <span data-ttu-id="9aab1-117"><xref:System.Globalization.CultureInfo.Calendar%2A>属性返回区域性的默认日历和<xref:System.Globalization.CultureInfo.OptionalCalendars%2A>属性返回一个包含所有支持的区域性的日历数组。</span><span class="sxs-lookup"><span data-stu-id="9aab1-117">The <xref:System.Globalization.CultureInfo.Calendar%2A> property returns the default calendar for the culture, and the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property returns an array containing all the calendars supported by the culture.</span></span> <span data-ttu-id="9aab1-118">若要更改使用的日历<xref:System.Globalization.CultureInfo>，应用程序应设置<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>属性<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>到新<xref:System.Globalization.Calendar>。</span><span class="sxs-lookup"><span data-stu-id="9aab1-118">To change the calendar used by a <xref:System.Globalization.CultureInfo>, the application should set the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> to a new <xref:System.Globalization.Calendar>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="T:System.Globalization.GregorianCalendar" />
    <altmember cref="P:System.Globalization.CultureInfo.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.OptionalCalendars" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JulianCalendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JulianCalendar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9aab1-119">Initializes a new instance of the <see cref="T:System.Globalization.JulianCalendar" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-119">Initializes a new instance of the <see cref="T:System.Globalization.JulianCalendar" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public override DateTime AddMonths (DateTime time, int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddMonths(valuetype System.DateTime time, int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.AddMonths(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddMonths (time As DateTime, months As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddMonths(DateTime time, int months);" />
      <MemberSignature Language="F#" Value="override this.AddMonths : DateTime * int -&gt; DateTime" Usage="julianCalendar.AddMonths (time, months)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="9aab1-120">The <see cref="T:System.DateTime" /> to which to add months.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-120">The <see cref="T:System.DateTime" /> to which to add months.</span>
          </span>
        </param>
        <param name="months">
          <span data-ttu-id="9aab1-121">The number of months to add.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-121">The number of months to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aab1-122">Returns a <see cref="T:System.DateTime" /> that is the specified number of months away from the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-122">Returns a <see cref="T:System.DateTime" /> that is the specified number of months away from the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aab1-123">The <see cref="T:System.DateTime" /> that results from adding the specified number of months to the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-123">The <see cref="T:System.DateTime" /> that results from adding the specified number of months to the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9aab1-124">日部分的生成<xref:System.DateTime>如果结果的日期不是有效的一天中生成月份影响。</span><span class="sxs-lookup"><span data-stu-id="9aab1-124">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="9aab1-125">它将更改为在生成每年的生成的每月最后一个有效的一天。</span><span class="sxs-lookup"><span data-stu-id="9aab1-125">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="9aab1-126">所生成的年份部分<xref:System.DateTime>如果外部的指定年，则结果月份受到<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="9aab1-126">The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="9aab1-127">此实现支持仅当前纪元。</span><span class="sxs-lookup"><span data-stu-id="9aab1-127">This implementation supports only the current era.</span></span> <span data-ttu-id="9aab1-128">因此，<xref:System.ArgumentException>如果所得年份未指定纪元，将引发<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="9aab1-128">Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="9aab1-129">所生成的一天时间部分<xref:System.DateTime>保持与指定相同<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="9aab1-129">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="9aab1-130">例如，如果指定的月份是年 10 月，其中包含 31 天，指定的日期是该月第 31 天和的值`months`参数为 6，则结果年份是一个多个指定的年份，生成的月份是年 4 月，并生成 day 为 30 天，这是年 4 月的最后一天。</span><span class="sxs-lookup"><span data-stu-id="9aab1-130">For example, if the specified month is October, which has 31 days, the specified day is the 31st day of that month, and the value of the `months` parameter is 6, the resulting year is one more than the specified year, the resulting month is April, and the resulting day is the 30th day, which is the last day in April.</span></span>  
  
 <span data-ttu-id="9aab1-131">如果值`months`参数是负数，生成<xref:System.DateTime>早于指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="9aab1-131">If the value of the `months` parameter is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="9aab1-132"><xref:System.DateTime.Kind%2A>属性返回<xref:System.DateTime>值始终等于<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="9aab1-132">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9aab1-133">您可以保留<xref:System.DateTime.Kind%2A>属性`time`通过调用的参数<xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType>方法，如以下示例所示。</span><span class="sxs-lookup"><span data-stu-id="9aab1-133">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]
 [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]  
  
   
  
## Examples  
 <span data-ttu-id="9aab1-134">下面的代码示例显示几个组成部分的值<xref:System.DateTime>方面罗马儒略历。</span><span class="sxs-lookup"><span data-stu-id="9aab1-134">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CPP/juliancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CS/juliancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/VB/juliancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9aab1-135">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-135">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9aab1-136">
            <paramref name="months" /> is less than -120000.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-136">
              <paramref name="months" /> is less than -120000.</span>
          </span>
          <span data-ttu-id="9aab1-137">-or-  <paramref name="months" /> is greater than 120000.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-137">-or-  <paramref name="months" /> is greater than 120000.</span>
          </span>
        </exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.JulianCalendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public override DateTime AddYears (DateTime time, int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddYears(valuetype System.DateTime time, int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.AddYears(System.DateTime,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddYears (time As DateTime, years As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime AddYears(DateTime time, int years);" />
      <MemberSignature Language="F#" Value="override this.AddYears : DateTime * int -&gt; DateTime" Usage="julianCalendar.AddYears (time, years)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="9aab1-138">The <see cref="T:System.DateTime" /> to which to add years.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-138">The <see cref="T:System.DateTime" /> to which to add years.</span>
          </span>
        </param>
        <param name="years">
          <span data-ttu-id="9aab1-139">The number of years to add.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-139">The number of years to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aab1-140">Returns a <see cref="T:System.DateTime" /> that is the specified number of years away from the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-140">Returns a <see cref="T:System.DateTime" /> that is the specified number of years away from the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aab1-141">The <see cref="T:System.DateTime" /> that results from adding the specified number of years to the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-141">The <see cref="T:System.DateTime" /> that results from adding the specified number of years to the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9aab1-142">日部分的生成<xref:System.DateTime>如果结果的日期不是有效的一天中生成月份影响。</span><span class="sxs-lookup"><span data-stu-id="9aab1-142">The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="9aab1-143">它将更改为在生成每年的生成的每月最后一个有效的一天。</span><span class="sxs-lookup"><span data-stu-id="9aab1-143">It is changed to the last valid day in the resulting month of the resulting year.</span></span> <span data-ttu-id="9aab1-144">所生成的月份部分<xref:System.DateTime>保持与指定相同<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="9aab1-144">The month part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="9aab1-145">此实现支持仅当前纪元。</span><span class="sxs-lookup"><span data-stu-id="9aab1-145">This implementation supports only the current era.</span></span> <span data-ttu-id="9aab1-146">因此，<xref:System.ArgumentException>如果所得年份未指定纪元，将引发<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="9aab1-146">Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>.</span></span> <span data-ttu-id="9aab1-147">所生成的一天时间部分<xref:System.DateTime>保持与指定相同<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="9aab1-147">The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="9aab1-148">例如，年 2 月有 28 天，但在闰年时它有 29 天。</span><span class="sxs-lookup"><span data-stu-id="9aab1-148">For example, February has 28 days, except during leap years when it has 29 days.</span></span> <span data-ttu-id="9aab1-149">如果指定的日期是闰年 2 月 29 日和的值`years`为 1，则得到的日期是第二中下一年的年 2 月 28 日。</span><span class="sxs-lookup"><span data-stu-id="9aab1-149">If the specified date is the 29th day of February in a leap year and the value of `years` is 1, the resulting date is the 28th day of February in the following year.</span></span>  
  
 <span data-ttu-id="9aab1-150">如果`years`为负，生成<xref:System.DateTime>早于指定<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="9aab1-150">If `years` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.</span></span>  
  
 <span data-ttu-id="9aab1-151"><xref:System.DateTime.Kind%2A>属性返回<xref:System.DateTime>值始终等于<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="9aab1-151">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9aab1-152">您可以保留<xref:System.DateTime.Kind%2A>属性`time`通过调用的参数<xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType>方法，如以下示例所示。</span><span class="sxs-lookup"><span data-stu-id="9aab1-152">You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=nameWithType> method, as the following example shows.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]
 [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]  
  
   
  
## Examples  
 <span data-ttu-id="9aab1-153">下面的代码示例显示几个组成部分的值<xref:System.DateTime>方面罗马儒略历。</span><span class="sxs-lookup"><span data-stu-id="9aab1-153">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CPP/juliancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CS/juliancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/VB/juliancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9aab1-154">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-154">The resulting <see cref="T:System.DateTime" /> is outside the supported range.</span>
          </span>
        </exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.JulianCalendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AlgorithmType">
      <MemberSignature Language="C#" Value="public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarAlgorithmType AlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JulianCalendar.AlgorithmType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AlgorithmType As CalendarAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CalendarAlgorithmType AlgorithmType { System::Globalization::CalendarAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmType : System.Globalization.CalendarAlgorithmType" Usage="System.Globalization.JulianCalendar.AlgorithmType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9aab1-155">Gets a value that indicates whether the current calendar is solar-based, lunar-based, or a combination of both.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-155">Gets a value that indicates whether the current calendar is solar-based, lunar-based, or a combination of both.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9aab1-156">始终返回 <see cref="F:System.Globalization.CalendarAlgorithmType.SolarCalendar" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-156">Always returns <see cref="F:System.Globalization.CalendarAlgorithmType.SolarCalendar" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9aab1-157">下面的示例使用反射来实例化每个<xref:System.Globalization.Calendar>类型在.NET Framework 中找到并显示的值其<xref:System.Globalization.Calendar.AlgorithmType%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="9aab1-157">The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.</span></span>  
  
 [!code-csharp[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/cs/algorithmtype1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/vb/algorithmtype1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eras">
      <MemberSignature Language="C#" Value="public override int[] Eras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] Eras" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JulianCalendar.Eras" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Eras As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;int&gt; ^ Eras { cli::array &lt;int&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Eras : int[]" Usage="System.Globalization.JulianCalendar.Eras" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9aab1-158">Gets the list of eras in the <see cref="T:System.Globalization.JulianCalendar" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-158">Gets the list of eras in the <see cref="T:System.Globalization.JulianCalendar" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9aab1-159">表示中的纪元的整数的数组<see cref="T:System.Globalization.JulianCalendar" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-159">An array of integers that represents the eras in the <see cref="T:System.Globalization.JulianCalendar" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9aab1-160"><xref:System.Globalization.JulianCalendar>类只识别当前纪元。</span><span class="sxs-lookup"><span data-stu-id="9aab1-160">The <xref:System.Globalization.JulianCalendar> class recognizes only the current era.</span></span> <span data-ttu-id="9aab1-161">此属性始终返回包含仅有一个元素的数组。</span><span class="sxs-lookup"><span data-stu-id="9aab1-161">This property always returns an array with only one element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.JulianCalendar.JulianEra" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfMonth">
      <MemberSignature Language="C#" Value="public override int GetDayOfMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetDayOfMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfMonth : DateTime -&gt; int" Usage="julianCalendar.GetDayOfMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="9aab1-162">The <see cref="T:System.DateTime" /> to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-162">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aab1-163">Returns the day of the month in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-163">Returns the day of the month in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aab1-164">An integer from 1 to 31 that represents the day of the month in <paramref name="time" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-164">An integer from 1 to 31 that represents the day of the month in <paramref name="time" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9aab1-165">下面的代码示例显示几个组成部分的值<xref:System.DateTime>方面罗马儒略历。</span><span class="sxs-lookup"><span data-stu-id="9aab1-165">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CPP/juliancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CS/juliancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/VB/juliancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Day" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfWeek">
      <MemberSignature Language="C#" Value="public override DayOfWeek GetDayOfWeek (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DayOfWeek GetDayOfWeek(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetDayOfWeek(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfWeek (time As DateTime) As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DayOfWeek GetDayOfWeek(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfWeek : DateTime -&gt; DayOfWeek" Usage="julianCalendar.GetDayOfWeek time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="9aab1-166">The <see cref="T:System.DateTime" /> to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-166">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aab1-167">Returns the day of the week in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-167">Returns the day of the week in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aab1-168">A <see cref="T:System.DayOfWeek" /> value that represents the day of the week in <paramref name="time" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-168">A <see cref="T:System.DayOfWeek" /> value that represents the day of the week in <paramref name="time" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9aab1-169"><xref:System.DayOfWeek>的值为星期一到星期日、 星期一、 星期二、 星期三、 星期四、 星期五、 之间。</span><span class="sxs-lookup"><span data-stu-id="9aab1-169">The <xref:System.DayOfWeek> values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, and Saturday.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9aab1-170">下面的代码示例显示几个组成部分的值<xref:System.DateTime>方面罗马儒略历。</span><span class="sxs-lookup"><span data-stu-id="9aab1-170">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CPP/juliancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CS/juliancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/VB/juliancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfWeek" />
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfYear">
      <MemberSignature Language="C#" Value="public override int GetDayOfYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetDayOfYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDayOfYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDayOfYear(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetDayOfYear : DateTime -&gt; int" Usage="julianCalendar.GetDayOfYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="9aab1-171">The <see cref="T:System.DateTime" /> to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-171">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aab1-172">Returns the day of the year in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-172">Returns the day of the year in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aab1-173">An integer from 1 to 366 that represents the day of the year in <paramref name="time" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-173">An integer from 1 to 366 that represents the day of the year in <paramref name="time" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9aab1-174">每年的日期被指从该年度的第一天的天数。</span><span class="sxs-lookup"><span data-stu-id="9aab1-174">The day of the year is defined as the number of days from the first day of the year.</span></span> <span data-ttu-id="9aab1-175">例如，<xref:System.Globalization.JulianCalendar.GetDayOfYear%2A>对的第一个月的第一天返回 1，和<xref:System.Globalization.JulianCalendar.GetDayOfYear%2A>最后一天的上个月返回总天数这一年。</span><span class="sxs-lookup"><span data-stu-id="9aab1-175">For example, <xref:System.Globalization.JulianCalendar.GetDayOfYear%2A> for the first day of the first month returns 1, and <xref:System.Globalization.JulianCalendar.GetDayOfYear%2A> for the last day of the last month returns the total number of days in that year.</span></span> <span data-ttu-id="9aab1-176">总是相同的值返回的<xref:System.Globalization.JulianCalendar.GetDaysInYear%2A>。</span><span class="sxs-lookup"><span data-stu-id="9aab1-176">The total is the same value as that returned by <xref:System.Globalization.JulianCalendar.GetDaysInYear%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9aab1-177">下面的代码示例显示几个组成部分的值<xref:System.DateTime>方面罗马儒略历。</span><span class="sxs-lookup"><span data-stu-id="9aab1-177">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CPP/juliancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CS/juliancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/VB/juliancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfYear" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public override int GetDaysInMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInMonth (year As Integer, month As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="override this.GetDaysInMonth : int * int * int -&gt; int" Usage="julianCalendar.GetDaysInMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="9aab1-178">An integer that represents the year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-178">An integer that represents the year.</span>
          </span>
        </param>
        <param name="month">
          <span data-ttu-id="9aab1-179">An integer from 1 to 12 that represents the month.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-179">An integer from 1 to 12 that represents the month.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="9aab1-180">An integer that represents the era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-180">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aab1-181">Returns the number of days in the specified month in the specified year in the specified era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-181">Returns the number of days in the specified month in the specified year in the specified era.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aab1-182">The number of days in the specified month in the specified year in the specified era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-182">The number of days in the specified month in the specified year in the specified era.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9aab1-183">此方法返回为 2 月 28 或 29 (`month` = 2)，具体取决于`year`是否为闰年。</span><span class="sxs-lookup"><span data-stu-id="9aab1-183">This method returns 28 or 29 for February (`month` = 2), depending on whether `year` is a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9aab1-184">下面的示例调用<xref:System.Globalization.JulianCalendar.GetDaysInMonth%2A>为每个五年中每个纪元中的第二个月。</span><span class="sxs-lookup"><span data-stu-id="9aab1-184">The following example calls <xref:System.Globalization.JulianCalendar.GetDaysInMonth%2A> for the second month in each of five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar.GetDaysInMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.GetDaysInMonth/CPP/juliancalendar_getdaysinmonth.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar.GetDaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.GetDaysInMonth/CS/juliancalendar_getdaysinmonth.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar.GetDaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.GetDaysInMonth/VB/juliancalendar_getdaysinmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9aab1-185">
            <paramref name="era" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-185">
              <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="9aab1-186">-or-  <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-186">-or-  <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="9aab1-187">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-187">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.JulianCalendar.JulianEra" />
        <altmember cref="P:System.Globalization.JulianCalendar.Eras" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public override int GetDaysInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDaysInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetDaysInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetDaysInYear : int * int -&gt; int" Usage="julianCalendar.GetDaysInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="9aab1-188">An integer that represents the year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-188">An integer that represents the year.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="9aab1-189">An integer that represents the era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-189">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aab1-190">Returns the number of days in the specified year in the specified era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-190">Returns the number of days in the specified year in the specified era.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aab1-191">The number of days in the specified year in the specified era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-191">The number of days in the specified year in the specified era.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9aab1-192">此方法返回 365 或 366，具体取决于是否`year`是否为闰年。</span><span class="sxs-lookup"><span data-stu-id="9aab1-192">This method returns 365 or 366, depending on whether `year` is a leap year.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9aab1-193">下面的示例调用<xref:System.Globalization.JulianCalendar.GetDaysInYear%2A>为每个纪元中的五年。</span><span class="sxs-lookup"><span data-stu-id="9aab1-193">The following example calls <xref:System.Globalization.JulianCalendar.GetDaysInYear%2A> for five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar.GetDaysInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.GetDaysInYear/CPP/juliancalendar_getdaysinyear.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar.GetDaysInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.GetDaysInYear/CS/juliancalendar_getdaysinyear.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar.GetDaysInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.GetDaysInYear/VB/juliancalendar_getdaysinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9aab1-194">
            <paramref name="era" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-194">
              <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="9aab1-195">-or-  <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-195">-or-  <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.JulianCalendar.JulianEra" />
        <altmember cref="P:System.Globalization.JulianCalendar.Eras" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public override int GetEra (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEra(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetEra(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEra (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetEra(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetEra : DateTime -&gt; int" Usage="julianCalendar.GetEra time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="9aab1-196">The <see cref="T:System.DateTime" /> to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-196">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aab1-197">Returns the era in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-197">Returns the era in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aab1-198">An integer that represents the era in <paramref name="time" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-198">An integer that represents the era in <paramref name="time" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9aab1-199"><xref:System.Globalization.JulianCalendar>类只识别当前纪元。</span><span class="sxs-lookup"><span data-stu-id="9aab1-199">The <xref:System.Globalization.JulianCalendar> class recognizes only the current era.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9aab1-200">下面的代码示例显示几个组成部分的值<xref:System.DateTime>方面罗马儒略历。</span><span class="sxs-lookup"><span data-stu-id="9aab1-200">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CPP/juliancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CS/juliancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/VB/juliancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.JulianCalendar.JulianEra" />
        <altmember cref="P:System.Globalization.JulianCalendar.Eras" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public override int GetLeapMonth (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLeapMonth(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetLeapMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLeapMonth (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetLeapMonth(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetLeapMonth : int * int -&gt; int" Usage="julianCalendar.GetLeapMonth (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="9aab1-201">An integer that represents the year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-201">An integer that represents the year.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="9aab1-202">An integer that represents the era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-202">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aab1-203">Calculates the leap month for a specified year and era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-203">Calculates the leap month for a specified year and era.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aab1-204">A positive integer that indicates the leap month in the specified year and era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-204">A positive integer that indicates the leap month in the specified year and era.</span>
          </span>
          <span data-ttu-id="9aab1-205">Alternatively, this method returns zero if the calendar does not support a leap month, or if <paramref name="year" /> and <paramref name="era" /> do not specify a leap year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-205">Alternatively, this method returns zero if the calendar does not support a leap month, or if <paramref name="year" /> and <paramref name="era" /> do not specify a leap year.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9aab1-206">在日历中支持闰月的概念，在某个特定的月份之后或在每一年中的任何月份之后发生的闰月。</span><span class="sxs-lookup"><span data-stu-id="9aab1-206">In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year.</span></span> <span data-ttu-id="9aab1-207">例如，<xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>方法返回一个数字，介于 1 和 13，该值指示指定的日期与关联的月份。</span><span class="sxs-lookup"><span data-stu-id="9aab1-207">For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns a number between 1 and 13 that indicates the month associated with a specified date.</span></span> <span data-ttu-id="9aab1-208">如果一年中，在第八个和第 9 个月之间存在闰月<xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>方法闰第八个月的 9 和 10 第 9 个月的第八个月份返回 8。</span><span class="sxs-lookup"><span data-stu-id="9aab1-208">If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMonth">
      <MemberSignature Language="C#" Value="public override int GetMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetMonth(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonth (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonth(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetMonth : DateTime -&gt; int" Usage="julianCalendar.GetMonth time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="9aab1-209">The <see cref="T:System.DateTime" /> to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-209">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aab1-210">Returns the month in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-210">Returns the month in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aab1-211">An integer from 1 to 12 that represents the month in <paramref name="time" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-211">An integer from 1 to 12 that represents the month in <paramref name="time" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9aab1-212">下面的代码示例显示几个组成部分的值<xref:System.DateTime>方面罗马儒略历。</span><span class="sxs-lookup"><span data-stu-id="9aab1-212">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CPP/juliancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CS/juliancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/VB/juliancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Month" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public override int GetMonthsInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonthsInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMonthsInYear (year As Integer, era As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMonthsInYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.GetMonthsInYear : int * int -&gt; int" Usage="julianCalendar.GetMonthsInYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="9aab1-213">An integer that represents the year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-213">An integer that represents the year.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="9aab1-214">An integer that represents the era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-214">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aab1-215">Returns the number of months in the specified year in the specified era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-215">Returns the number of months in the specified year in the specified era.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aab1-216">The number of months in the specified year in the specified era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-216">The number of months in the specified year in the specified era.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9aab1-217">下面的示例调用<xref:System.Globalization.JulianCalendar.GetMonthsInYear%2A>为每个纪元中的五年。</span><span class="sxs-lookup"><span data-stu-id="9aab1-217">The following example calls <xref:System.Globalization.JulianCalendar.GetMonthsInYear%2A> for five years in each era.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar.GetMonthsInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.GetMonthsInYear/CPP/juliancalendar_getmonthsinyear.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar.GetMonthsInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.GetMonthsInYear/CS/juliancalendar_getmonthsinyear.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar.GetMonthsInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.GetMonthsInYear/VB/juliancalendar_getmonthsinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9aab1-218">
            <paramref name="era" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-218">
              <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="9aab1-219">-or-  <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-219">-or-  <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.JulianCalendar.JulianEra" />
        <altmember cref="P:System.Globalization.JulianCalendar.Eras" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDaysInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetYear">
      <MemberSignature Language="C#" Value="public override int GetYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.GetYear(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetYear (time As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetYear(DateTime time);" />
      <MemberSignature Language="F#" Value="override this.GetYear : DateTime -&gt; int" Usage="julianCalendar.GetYear time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">
          <span data-ttu-id="9aab1-220">The <see cref="T:System.DateTime" /> to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-220">The <see cref="T:System.DateTime" /> to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aab1-221">Returns the year in the specified <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-221">Returns the year in the specified <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aab1-222">An integer that represents the year in <paramref name="time" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-222">An integer that represents the year in <paramref name="time" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9aab1-223">下面的代码示例显示几个组成部分的值<xref:System.DateTime>方面罗马儒略历。</span><span class="sxs-lookup"><span data-stu-id="9aab1-223">The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CPP/juliancalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/CS/juliancalendar_addget.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_AddGet/VB/juliancalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Year" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public override bool IsLeapDay (int year, int month, int day, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapDay(int32 year, int32 month, int32 day, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapDay (year As Integer, month As Integer, day As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapDay(int year, int month, int day, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapDay : int * int * int * int -&gt; bool" Usage="julianCalendar.IsLeapDay (year, month, day, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="9aab1-224">An integer that represents the year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-224">An integer that represents the year.</span>
          </span>
        </param>
        <param name="month">
          <span data-ttu-id="9aab1-225">An integer from 1 to 12 that represents the month.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-225">An integer from 1 to 12 that represents the month.</span>
          </span>
        </param>
        <param name="day">
          <span data-ttu-id="9aab1-226">An integer from 1 to 31 that represents the day.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-226">An integer from 1 to 31 that represents the day.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="9aab1-227">An integer that represents the era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-227">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aab1-228">Determines whether the specified date in the specified era is a leap day.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-228">Determines whether the specified date in the specified era is a leap day.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aab1-229">
            <see langword="true" /> if the specified day is a leap day; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-229">
              <see langword="true" /> if the specified day is a leap day; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9aab1-230">与公历，不同罗马儒略历作为年份整除由 4 个无例外的定义为闰年。</span><span class="sxs-lookup"><span data-stu-id="9aab1-230">Unlike the Gregorian calendar, the Julian calendar defines a leap year as a year that is evenly divisible by four with no exceptions.</span></span> <span data-ttu-id="9aab1-231">因此，一天每隔 128 年日历是不准确。</span><span class="sxs-lookup"><span data-stu-id="9aab1-231">Therefore, the calendar is inaccurate by one day every 128 years.</span></span> <span data-ttu-id="9aab1-232">例如，1999 年不是闰年，但 2000 年。</span><span class="sxs-lookup"><span data-stu-id="9aab1-232">For example, the year 1999 was not a leap year, but the year 2000 was.</span></span> <span data-ttu-id="9aab1-233">平 365 年天并且初始屏幕闰年有 366 天。</span><span class="sxs-lookup"><span data-stu-id="9aab1-233">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="9aab1-234">闰日是仅在闰年中发生了一天。</span><span class="sxs-lookup"><span data-stu-id="9aab1-234">A leap day is a day that occurs only in a leap year.</span></span> <span data-ttu-id="9aab1-235">在儒略历的年 2 月 29 日是唯一的闰日。</span><span class="sxs-lookup"><span data-stu-id="9aab1-235">In the Julian calendar, the 29th day of February is the only leap day.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9aab1-236">下面的示例调用<xref:System.Globalization.JulianCalendar.IsLeapDay%2A>五年中每个纪元的第二个月份 （年 2 月） 的最后一天。</span><span class="sxs-lookup"><span data-stu-id="9aab1-236">The following example calls <xref:System.Globalization.JulianCalendar.IsLeapDay%2A> for the last day of the second month (February) for five years in each of the eras.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar.IsLeapDay#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.IsLeapDay/CPP/juliancalendar_isleapday.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar.IsLeapDay#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.IsLeapDay/CS/juliancalendar_isleapday.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar.IsLeapDay#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.IsLeapDay/VB/juliancalendar_isleapday.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9aab1-237">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-237">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="9aab1-238">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-238">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="9aab1-239">-or-  <paramref name="day" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-239">-or-  <paramref name="day" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="9aab1-240">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-240">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.JulianCalendar.JulianEra" />
        <altmember cref="P:System.Globalization.JulianCalendar.Eras" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public override bool IsLeapMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapMonth (year As Integer, month As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapMonth(int year, int month, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapMonth : int * int * int -&gt; bool" Usage="julianCalendar.IsLeapMonth (year, month, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="9aab1-241">An integer that represents the year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-241">An integer that represents the year.</span>
          </span>
        </param>
        <param name="month">
          <span data-ttu-id="9aab1-242">An integer from 1 to 12 that represents the month.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-242">An integer from 1 to 12 that represents the month.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="9aab1-243">An integer that represents the era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-243">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aab1-244">Determines whether the specified month in the specified year in the specified era is a leap month.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-244">Determines whether the specified month in the specified year in the specified era is a leap month.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aab1-245">This method always returns <see langword="false" />, unless overridden by a derived class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-245">This method always returns <see langword="false" />, unless overridden by a derived class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9aab1-246">与公历，不同罗马儒略历作为年份整除由 4 个无例外的定义为闰年。</span><span class="sxs-lookup"><span data-stu-id="9aab1-246">Unlike the Gregorian calendar, the Julian calendar defines a leap year as a year that is evenly divisible by four with no exceptions.</span></span> <span data-ttu-id="9aab1-247">因此，一天每隔 128 年日历是不准确。</span><span class="sxs-lookup"><span data-stu-id="9aab1-247">Therefore, the calendar is inaccurate by one day every 128 years.</span></span> <span data-ttu-id="9aab1-248">例如，1999 年不是闰年，但 2000 年。</span><span class="sxs-lookup"><span data-stu-id="9aab1-248">For example, the year 1999 was not a leap year, but the year 2000 was.</span></span> <span data-ttu-id="9aab1-249">平 365 年天并且初始屏幕闰年有 366 天。</span><span class="sxs-lookup"><span data-stu-id="9aab1-249">A common year has 365 days and a leap year has 366 days.</span></span>  
  
 <span data-ttu-id="9aab1-250">闰月是仅在闰年中发生的整月。</span><span class="sxs-lookup"><span data-stu-id="9aab1-250">A leap month is an entire month that occurs only in a leap year.</span></span> <span data-ttu-id="9aab1-251">罗马儒略历没有闰月。</span><span class="sxs-lookup"><span data-stu-id="9aab1-251">The Julian calendar does not have any leap months.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9aab1-252">下面的示例调用<xref:System.Globalization.JulianCalendar.IsLeapMonth%2A>当前纪元中的五年中的所有每月。</span><span class="sxs-lookup"><span data-stu-id="9aab1-252">The following example calls <xref:System.Globalization.JulianCalendar.IsLeapMonth%2A> for all the months in five years in the current era.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar.IsLeapMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.IsLeapMonth/CPP/juliancalendar_isleapmonth.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar.IsLeapMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.IsLeapMonth/CS/juliancalendar_isleapmonth.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar.IsLeapMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.IsLeapMonth/VB/juliancalendar_isleapmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9aab1-253">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-253">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="9aab1-254">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-254">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="9aab1-255">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-255">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.JulianCalendar.JulianEra" />
        <altmember cref="P:System.Globalization.JulianCalendar.Eras" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public override bool IsLeapYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.IsLeapYear(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsLeapYear (year As Integer, era As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsLeapYear(int year, int era);" />
      <MemberSignature Language="F#" Value="override this.IsLeapYear : int * int -&gt; bool" Usage="julianCalendar.IsLeapYear (year, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="9aab1-256">An integer that represents the year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-256">An integer that represents the year.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="9aab1-257">An integer that represents the era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-257">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aab1-258">Determines whether the specified year in the specified era is a leap year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-258">Determines whether the specified year in the specified era is a leap year.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aab1-259">
            <see langword="true" /> if the specified year is a leap year; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-259">
              <see langword="true" /> if the specified year is a leap year; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9aab1-260">与公历，不同罗马儒略历作为年份整除由 4 个无例外的定义为闰年。</span><span class="sxs-lookup"><span data-stu-id="9aab1-260">Unlike the Gregorian calendar, the Julian calendar defines a leap year as a year that is evenly divisible by four with no exceptions.</span></span> <span data-ttu-id="9aab1-261">因此，一天每隔 128 年日历是不准确。</span><span class="sxs-lookup"><span data-stu-id="9aab1-261">Therefore, the calendar is inaccurate by one day every 128 years.</span></span> <span data-ttu-id="9aab1-262">例如，1999 年不是闰年，但 2000 年。</span><span class="sxs-lookup"><span data-stu-id="9aab1-262">For example, the year 1999 was not a leap year, but the year 2000 was.</span></span> <span data-ttu-id="9aab1-263">平 365 年天并且初始屏幕闰年有 366 天。</span><span class="sxs-lookup"><span data-stu-id="9aab1-263">A common year has 365 days and a leap year has 366 days.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9aab1-264">下面的示例调用<xref:System.Globalization.JulianCalendar.IsLeapYear%2A>五年中每个纪元。</span><span class="sxs-lookup"><span data-stu-id="9aab1-264">The following example calls <xref:System.Globalization.JulianCalendar.IsLeapYear%2A> for five years in each of the eras.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar.IsLeapYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.IsLeapYear/CPP/juliancalendar_isleapyear.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar.IsLeapYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.IsLeapYear/CS/juliancalendar_isleapyear.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar.IsLeapYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar.IsLeapYear/VB/juliancalendar_isleapyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9aab1-265">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-265">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="9aab1-266">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-266">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.JulianCalendar.JulianEra" />
        <altmember cref="P:System.Globalization.JulianCalendar.Eras" />
        <altmember cref="M:System.Globalization.JulianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="JulianEra">
      <MemberSignature Language="C#" Value="public static readonly int JulianEra;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 JulianEra" />
      <MemberSignature Language="DocId" Value="F:System.Globalization.JulianCalendar.JulianEra" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly JulianEra As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int JulianEra;" />
      <MemberSignature Language="F#" Value=" staticval mutable JulianEra : int" Usage="System.Globalization.JulianCalendar.JulianEra" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9aab1-267">Represents the current era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-267">Represents the current era.</span>
          </span>
          <span data-ttu-id="9aab1-268">This field is constant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-268">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9aab1-269"><xref:System.Globalization.JulianCalendar>类只识别当前纪元。</span><span class="sxs-lookup"><span data-stu-id="9aab1-269">The <xref:System.Globalization.JulianCalendar> class recognizes only the current era.</span></span> <span data-ttu-id="9aab1-270">此字段始终返回 1。</span><span class="sxs-lookup"><span data-stu-id="9aab1-270">This field always returns 1.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.JulianCalendar.Eras" />
      </Docs>
    </Member>
    <Member MemberName="MaxSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MaxSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JulianCalendar.MaxSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MaxSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxSupportedDateTime : DateTime" Usage="System.Globalization.JulianCalendar.MaxSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9aab1-271">Gets the latest date and time supported by the <see cref="T:System.Globalization.JulianCalendar" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-271">Gets the latest date and time supported by the <see cref="T:System.Globalization.JulianCalendar" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9aab1-272">最新的日期和时间受<see cref="T:System.Globalization.JulianCalendar" />类，该类是等效于的那一刻年 12 月 31 日公元 9999 年</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-272">The latest date and time supported by the <see cref="T:System.Globalization.JulianCalendar" /> class, which is equivalent to the last moment of December 31, 9999 C.E.</span>
          </span>
          <span data-ttu-id="9aab1-273">在公历日历中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-273">in the Gregorian calendar.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9aab1-274">下面的代码示例获取的最小值和日历的最大值。</span><span class="sxs-lookup"><span data-stu-id="9aab1-274">The following code example gets the minimum value and the maximum value of the calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_MinMax/CPP/juliancalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_MinMax/CS/juliancalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_MinMax/VB/juliancalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MinSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JulianCalendar.MinSupportedDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinSupportedDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime MinSupportedDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.MinSupportedDateTime : DateTime" Usage="System.Globalization.JulianCalendar.MinSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9aab1-275">Gets the earliest date and time supported by the <see cref="T:System.Globalization.JulianCalendar" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-275">Gets the earliest date and time supported by the <see cref="T:System.Globalization.JulianCalendar" /> class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9aab1-276">最早的日期和时间受<see cref="T:System.Globalization.JulianCalendar" />类，该类是等效于的那一刻 1 月 1 日公元 0001 年</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-276">The earliest date and time supported by the <see cref="T:System.Globalization.JulianCalendar" /> class, which is equivalent to the first moment of January 1, 0001 C.E.</span>
          </span>
          <span data-ttu-id="9aab1-277">在公历日历中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-277">in the Gregorian calendar.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9aab1-278">下面的代码示例获取的最小值和日历的最大值。</span><span class="sxs-lookup"><span data-stu-id="9aab1-278">The following code example gets the minimum value and the maximum value of the calendar.</span></span>  
  
 [!code-cpp[System.Globalization.JulianCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_MinMax/CPP/juliancalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.JulianCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_MinMax/CS/juliancalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.JulianCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.JulianCalendar_MinMax/VB/juliancalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToDateTime (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, era As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="F#" Value="override this.ToDateTime : int * int * int * int * int * int * int * int -&gt; DateTime" Usage="julianCalendar.ToDateTime (year, month, day, hour, minute, second, millisecond, era)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="9aab1-279">An integer that represents the year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-279">An integer that represents the year.</span>
          </span>
        </param>
        <param name="month">
          <span data-ttu-id="9aab1-280">An integer from 1 to 12 that represents the month.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-280">An integer from 1 to 12 that represents the month.</span>
          </span>
        </param>
        <param name="day">
          <span data-ttu-id="9aab1-281">An integer from 1 to 31 that represents the day.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-281">An integer from 1 to 31 that represents the day.</span>
          </span>
        </param>
        <param name="hour">
          <span data-ttu-id="9aab1-282">An integer from 0 to 23 that represents the hour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-282">An integer from 0 to 23 that represents the hour.</span>
          </span>
        </param>
        <param name="minute">
          <span data-ttu-id="9aab1-283">An integer from 0 to 59 that represents the minute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-283">An integer from 0 to 59 that represents the minute.</span>
          </span>
        </param>
        <param name="second">
          <span data-ttu-id="9aab1-284">An integer from 0 to 59 that represents the second.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-284">An integer from 0 to 59 that represents the second.</span>
          </span>
        </param>
        <param name="millisecond">
          <span data-ttu-id="9aab1-285">An integer from 0 to 999 that represents the millisecond.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-285">An integer from 0 to 999 that represents the millisecond.</span>
          </span>
        </param>
        <param name="era">
          <span data-ttu-id="9aab1-286">An integer that represents the era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-286">An integer that represents the era.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aab1-287">Returns a <see cref="T:System.DateTime" /> that is set to the specified date and time in the specified era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-287">Returns a <see cref="T:System.DateTime" /> that is set to the specified date and time in the specified era.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aab1-288">The <see cref="T:System.DateTime" /> that is set to the specified date and time in the current era.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-288">The <see cref="T:System.DateTime" /> that is set to the specified date and time in the current era.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9aab1-289">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-289">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="9aab1-290">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-290">-or-  <paramref name="month" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="9aab1-291">-or-  <paramref name="day" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-291">-or-  <paramref name="day" /> is outside the range supported by the calendar.</span>
          </span>
          <span data-ttu-id="9aab1-292">-or-  <paramref name="hour" /> is less than zero or greater than 23.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-292">-or-  <paramref name="hour" /> is less than zero or greater than 23.</span>
          </span>
          <span data-ttu-id="9aab1-293">-or-  <paramref name="minute" /> is less than zero or greater than 59.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-293">-or-  <paramref name="minute" /> is less than zero or greater than 59.</span>
          </span>
          <span data-ttu-id="9aab1-294">-or-  <paramref name="second" /> is less than zero or greater than 59.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-294">-or-  <paramref name="second" /> is less than zero or greater than 59.</span>
          </span>
          <span data-ttu-id="9aab1-295">-or-  <paramref name="millisecond" /> is less than zero or greater than 999.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-295">-or-  <paramref name="millisecond" /> is less than zero or greater than 999.</span>
          </span>
          <span data-ttu-id="9aab1-296">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-296">-or-  <paramref name="era" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.JulianCalendar.JulianEra" />
        <altmember cref="P:System.Globalization.JulianCalendar.Eras" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.JulianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToFourDigitYear">
      <MemberSignature Language="C#" Value="public override int ToFourDigitYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ToFourDigitYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.JulianCalendar.ToFourDigitYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToFourDigitYear (year As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ToFourDigitYear(int year);" />
      <MemberSignature Language="F#" Value="override this.ToFourDigitYear : int -&gt; int" Usage="julianCalendar.ToFourDigitYear year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">
          <span data-ttu-id="9aab1-297">A two-digit or four-digit integer that represents the year to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-297">A two-digit or four-digit integer that represents the year to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9aab1-298">Converts the specified year to a four-digit year by using the <see cref="P:System.Globalization.JulianCalendar.TwoDigitYearMax" /> property to determine the appropriate century.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-298">Converts the specified year to a four-digit year by using the <see cref="P:System.Globalization.JulianCalendar.TwoDigitYearMax" /> property to determine the appropriate century.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9aab1-299">An integer that contains the four-digit representation of <paramref name="year" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-299">An integer that contains the four-digit representation of <paramref name="year" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9aab1-300"><xref:System.Globalization.JulianCalendar.TwoDigitYearMax%2A> 是可以用两位数年份表示的 100 年范围内的最后一年。</span><span class="sxs-lookup"><span data-stu-id="9aab1-300"><xref:System.Globalization.JulianCalendar.TwoDigitYearMax%2A> is the last year in the 100-year range that can be represented by a two-digit year.</span></span> <span data-ttu-id="9aab1-301">通过查找指定的唯一匹配项来确定世纪`year`该 100 年范围内。</span><span class="sxs-lookup"><span data-stu-id="9aab1-301">The century is determined by finding the sole occurrence of the specified `year` within that 100-year range.</span></span> <span data-ttu-id="9aab1-302">例如，如果<xref:System.Globalization.JulianCalendar.TwoDigitYearMax%2A>设置为 2029，则 100 年范围是从 1930年为 2029年。</span><span class="sxs-lookup"><span data-stu-id="9aab1-302">For example, if <xref:System.Globalization.JulianCalendar.TwoDigitYearMax%2A> is set to 2029, the 100-year range is from 1930 to 2029.</span></span> <span data-ttu-id="9aab1-303">因此，为 30 的 2 位值被解释为 1930，而 29 一个 2 位数字值被解释为 2029年。</span><span class="sxs-lookup"><span data-stu-id="9aab1-303">Therefore, a 2-digit value of 30 is interpreted as 1930, while a 2-digit value of 29 is interpreted as 2029.</span></span>  
  
 <span data-ttu-id="9aab1-304"><xref:System.Globalization.JulianCalendar.ToFourDigitYear%2A> 支持两位数年份或四位数年份。</span><span class="sxs-lookup"><span data-stu-id="9aab1-304"><xref:System.Globalization.JulianCalendar.ToFourDigitYear%2A> supports either a two-digit year or a four-digit year.</span></span> <span data-ttu-id="9aab1-305">将两位数年份值 (小于 100) 传递会导致方法的值转换为一个四位数字值根据<xref:System.Globalization.JulianCalendar.TwoDigitYearMax%2A>值，该值表示相应的纪元。</span><span class="sxs-lookup"><span data-stu-id="9aab1-305">Passing a two-digit year value (less than 100) causes the method to convert the value to a four-digit value according to the <xref:System.Globalization.JulianCalendar.TwoDigitYearMax%2A> value representing the appropriate century.</span></span> <span data-ttu-id="9aab1-306">如果应用程序提供在支持的日历范围到内的四位数年份值<xref:System.Globalization.JulianCalendar.ToFourDigitYear%2A>，该方法返回实际的输入的值。</span><span class="sxs-lookup"><span data-stu-id="9aab1-306">If the application supplies a four-digit year value that is within the supported calendar range to <xref:System.Globalization.JulianCalendar.ToFourDigitYear%2A>, the method returns the actual input value.</span></span> <span data-ttu-id="9aab1-307">如果应用程序提供一个四位数字值超出了支持的日历，或者它提供了负值，则该方法将引发异常。</span><span class="sxs-lookup"><span data-stu-id="9aab1-307">If the application supplies a four-digit value that is outside the supported calendar range, or if it supplies a negative value, the method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9aab1-308">
            <paramref name="year" /> is outside the range supported by the calendar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-308">
              <paramref name="year" /> is outside the range supported by the calendar.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.JulianCalendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="TwoDigitYearMax">
      <MemberSignature Language="C#" Value="public override int TwoDigitYearMax { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TwoDigitYearMax" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.JulianCalendar.TwoDigitYearMax" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TwoDigitYearMax As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TwoDigitYearMax { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TwoDigitYearMax : int with get, set" Usage="System.Globalization.JulianCalendar.TwoDigitYearMax" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9aab1-309">Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-309">Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9aab1-310">可以用两位数年份表示的 100 年范围内的最后一年。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-310">The last year of a 100-year range that can be represented by a 2-digit year.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9aab1-311">此属性允许两位数年份，要正确转换为 4 位数年份。</span><span class="sxs-lookup"><span data-stu-id="9aab1-311">This property allows a 2-digit year to be properly translated to a 4-digit year.</span></span> <span data-ttu-id="9aab1-312">例如，如果此属性设置为 2029年，100 年范围是从 1930年为 2029年。</span><span class="sxs-lookup"><span data-stu-id="9aab1-312">For example, if this property is set to 2029, the 100-year range is from 1930 to 2029.</span></span> <span data-ttu-id="9aab1-313">因此，为 30 的 2 位值被解释为 1930，而 29 一个 2 位数字值被解释为 2029年。</span><span class="sxs-lookup"><span data-stu-id="9aab1-313">Therefore, a 2-digit value of 30 is interpreted as 1930, while a 2-digit value of 29 is interpreted as 2029.</span></span>  
  
 <span data-ttu-id="9aab1-314"><xref:System.Globalization.JulianCalendar>类不会检测系统设置中的更改。</span><span class="sxs-lookup"><span data-stu-id="9aab1-314">The <xref:System.Globalization.JulianCalendar> class does not detect changes in the system settings.</span></span>  
  
 <span data-ttu-id="9aab1-315">应用程序可以将此值设置为 99，以指示按字面解释 2 位数字的年份。</span><span class="sxs-lookup"><span data-stu-id="9aab1-315">The application can set this value to 99 to indicate that 2-digit years are to be taken literally.</span></span> <span data-ttu-id="9aab1-316">例如，如果此属性设置为 99，100 年范围为 0 （不是有效值对于大多数日历而言） 和 99 之间。</span><span class="sxs-lookup"><span data-stu-id="9aab1-316">For example, if this property is set to 99, the 100-year range is from 0 (not a valid value for most calendars) to 99.</span></span> <span data-ttu-id="9aab1-317">因此，为 30 的 2 位值被解释为 30。</span><span class="sxs-lookup"><span data-stu-id="9aab1-317">Therefore, a 2-digit value of 30 is interpreted as 30.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9aab1-318">The value specified in a set operation is less than 99.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-318">The value specified in a set operation is less than 99.</span>
          </span>
          <span data-ttu-id="9aab1-319">-or-  The value specified in a set operation is greater than <see langword="MaxSupportedDateTime.Year" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-319">-or-  The value specified in a set operation is greater than <see langword="MaxSupportedDateTime.Year" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9aab1-320">In a set operation, the current instance is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9aab1-320">In a set operation, the current instance is read-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.Globalization.JulianCalendar.ToFourDigitYear(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>