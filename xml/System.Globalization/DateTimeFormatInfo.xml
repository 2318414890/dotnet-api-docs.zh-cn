<Type Name="DateTimeFormatInfo" FullName="System.Globalization.DateTimeFormatInfo">
  <TypeSignature Language="C#" Value="public sealed class DateTimeFormatInfo : ICloneable, IFormatProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DateTimeFormatInfo extends System.Object implements class System.ICloneable, class System.IFormatProvider" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.DateTimeFormatInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DateTimeFormatInfo&#xA;Implements ICloneable, IFormatProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DateTimeFormatInfo sealed : ICloneable, IFormatProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormatProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="36c63-101">提供有关日期和时间值格式的区域性特定信息。</span><span class="sxs-lookup"><span data-stu-id="36c63-101">Provides culture-specific information about the format of date and time values.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-102">属性<xref:System.Globalization.DateTimeFormatInfo>类包含区域性特定格式设置或分析如下所示的日期和时间值的信息：</span><span class="sxs-lookup"><span data-stu-id="36c63-102">The properties of the <xref:System.Globalization.DateTimeFormatInfo> class contain culture-specific information for formatting or parsing date and time values such as the following:</span></span>  
  
-   <span data-ttu-id="36c63-103">用于格式化日期值的模式。</span><span class="sxs-lookup"><span data-stu-id="36c63-103">The patterns used to format date values.</span></span>  
  
-   <span data-ttu-id="36c63-104">用于设置时间值的格式模式。</span><span class="sxs-lookup"><span data-stu-id="36c63-104">The patterns used to format time values.</span></span>  
  
-   <span data-ttu-id="36c63-105">每周天数的名称。</span><span class="sxs-lookup"><span data-stu-id="36c63-105">The names of the days of the week.</span></span>  
  
-   <span data-ttu-id="36c63-106">每年的月份名称。</span><span class="sxs-lookup"><span data-stu-id="36c63-106">The names of the months of the year.</span></span>  
  
-   <span data-ttu-id="36c63-107">上午</span><span class="sxs-lookup"><span data-stu-id="36c63-107">The A.M.</span></span> <span data-ttu-id="36c63-108">和下午</span><span class="sxs-lookup"><span data-stu-id="36c63-108">and P.M.</span></span> <span data-ttu-id="36c63-109">在时间值中使用的指示符。</span><span class="sxs-lookup"><span data-stu-id="36c63-109">designators used in time values.</span></span>  
  
-   <span data-ttu-id="36c63-110">在其中表示日期的日历。</span><span class="sxs-lookup"><span data-stu-id="36c63-110">The calendar in which dates are expressed.</span></span>  
  
 <span data-ttu-id="36c63-111">本节内容：</span><span class="sxs-lookup"><span data-stu-id="36c63-111">In this section:</span></span>  
  
-   [<span data-ttu-id="36c63-112">实例化 DateTimeFormatInfo 对象</span><span class="sxs-lookup"><span data-stu-id="36c63-112">Instantiating a DateTimeFormatInfo object</span></span>](#instantiating)  
  
    -   [<span data-ttu-id="36c63-113">用于固定区域性</span><span class="sxs-lookup"><span data-stu-id="36c63-113">For the Invariant Culture</span></span>](#instantiating_Invariant)  
  
    -   [<span data-ttu-id="36c63-114">针对特定区域性</span><span class="sxs-lookup"><span data-stu-id="36c63-114">For a Specific Culture</span></span>](#instantiating_Specific)  
  
    -   [<span data-ttu-id="36c63-115">针对非特定区域性</span><span class="sxs-lookup"><span data-stu-id="36c63-115">For a neutral culture</span></span>](#instantiating_neutral)  
  
    -   [<span data-ttu-id="36c63-116">为当前区域性</span><span class="sxs-lookup"><span data-stu-id="36c63-116">For the current culture</span></span>](#instantiating_Current)  
  
-   [<span data-ttu-id="36c63-117">DateTimeFormatInfo 和动态数据</span><span class="sxs-lookup"><span data-stu-id="36c63-117">DateTimeFormatInfo and dynamic data</span></span>](#dynamic)  
  
-   [<span data-ttu-id="36c63-118">格式设置的日期和时间</span><span class="sxs-lookup"><span data-stu-id="36c63-118">Formatting dates and times</span></span>](#Formatting_dates_times)  
  
-   [<span data-ttu-id="36c63-119">格式字符串和 DateTimeFormatInfo 属性</span><span class="sxs-lookup"><span data-stu-id="36c63-119">Format strings and DateTimeFormatInfo properties</span></span>](#properties)  
  
-   [<span data-ttu-id="36c63-120">修改 DateTimeFormatInfo 属性</span><span class="sxs-lookup"><span data-stu-id="36c63-120">Modifying DateTimeFormatInfo properties</span></span>](#Modifying)  
  
<a name="instantiating"></a>   
## <a name="instantiating-a-datetimeformatinfo-object"></a><span data-ttu-id="36c63-121">实例化 DateTimeFormatInfo 对象</span><span class="sxs-lookup"><span data-stu-id="36c63-121">Instantiating a DateTimeFormatInfo object</span></span>  
 <span data-ttu-id="36c63-122">A<xref:System.Globalization.DateTimeFormatInfo>对象可以表示固定区域性、 特定区域性，非特定区域性或当前区域性的格式设置约定。</span><span class="sxs-lookup"><span data-stu-id="36c63-122">A <xref:System.Globalization.DateTimeFormatInfo> object can represent the formatting conventions of the invariant culture, a specific culture, a neutral culture, or the current culture.</span></span> <span data-ttu-id="36c63-123">本部分讨论如何实例化每种类型的<xref:System.Globalization.DateTimeFormatInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-123">This section discusses how to instantiate each type of <xref:System.Globalization.DateTimeFormatInfo> object.</span></span>  
  
<a name="instantiating_Invariant"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-the-invariant-culture"></a><span data-ttu-id="36c63-124">实例化用于固定区域性 DateTimeFormatInfo 对象</span><span class="sxs-lookup"><span data-stu-id="36c63-124">Instantiating a DateTimeFormatInfo object for the invariant culture</span></span>  
 <span data-ttu-id="36c63-125">固定区域性表示区域性的不区分区域性的。</span><span class="sxs-lookup"><span data-stu-id="36c63-125">The invariant culture represents a culture that is culture-insensitive.</span></span> <span data-ttu-id="36c63-126">它基于英语语言，但不是能在任何特定英语国家/地区。</span><span class="sxs-lookup"><span data-stu-id="36c63-126">It is based on the English language, but not on any specific English-speaking country/region.</span></span> <span data-ttu-id="36c63-127">虽然特定区域性的数据可以是动态的并且可以更改以反映新区域性约定或用户首选项，则不会更改的固定区域性的数据。</span><span class="sxs-lookup"><span data-stu-id="36c63-127">Although the data of specific cultures can be dynamic and can change to reflect new cultural conventions or user preferences, the data of the invariant culture does not change.</span></span> <span data-ttu-id="36c63-128">可以实例化<xref:System.Globalization.DateTimeFormatInfo>通过以下方式表示固定区域性的格式设置约定的对象：</span><span class="sxs-lookup"><span data-stu-id="36c63-128">You can instantiate a <xref:System.Globalization.DateTimeFormatInfo> object that represents the formatting conventions of the invariant culture in the following ways:</span></span>  
  
-   <span data-ttu-id="36c63-129">通过检索的值的<xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-129">By retrieving the value of the <xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A> property.</span></span> <span data-ttu-id="36c63-130">返回<xref:System.Globalization.DateTimeFormatInfo>对象是只读的。</span><span class="sxs-lookup"><span data-stu-id="36c63-130">The returned <xref:System.Globalization.DateTimeFormatInfo> object is read-only.</span></span>  
  
-   <span data-ttu-id="36c63-131">通过调用的无参数<xref:System.Globalization.DateTimeFormatInfo.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="36c63-131">By calling the parameterless <xref:System.Globalization.DateTimeFormatInfo.%23ctor%2A> constructor.</span></span> <span data-ttu-id="36c63-132">返回<xref:System.Globalization.DateTimeFormatInfo>对象为读/写。</span><span class="sxs-lookup"><span data-stu-id="36c63-132">The returned <xref:System.Globalization.DateTimeFormatInfo> object is read/write.</span></span>  
  
-   <span data-ttu-id="36c63-133">通过检索的值的<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>属性从<xref:System.Globalization.CultureInfo>返回的对象<xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-133">By retrieving the value of the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property from the <xref:System.Globalization.CultureInfo> object that is returned by the <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="36c63-134">返回<xref:System.Globalization.DateTimeFormatInfo>对象是只读的。</span><span class="sxs-lookup"><span data-stu-id="36c63-134">The returned <xref:System.Globalization.DateTimeFormatInfo> object is read-only.</span></span>  
  
 <span data-ttu-id="36c63-135">下面的示例使用上述每种方法来实例化<xref:System.Globalization.DateTimeFormatInfo>表示固定区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-135">The following example uses each of these methods to instantiate a <xref:System.Globalization.DateTimeFormatInfo> object that represents the invariant culture.</span></span> <span data-ttu-id="36c63-136">然后，它指示对象是只读的。</span><span class="sxs-lookup"><span data-stu-id="36c63-136">It then indicates whether the object is read-only.</span></span>  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create1.vb#1)]  
  
<a name="instantiating_Specific"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-a-specific-culture"></a><span data-ttu-id="36c63-137">实例化特定区域性 DateTimeFormatInfo 对象</span><span class="sxs-lookup"><span data-stu-id="36c63-137">Instantiating a DateTimeFormatInfo object for a specific culture</span></span>  
 <span data-ttu-id="36c63-138">特定区域性表示特定的国家/地区中所说的语言。</span><span class="sxs-lookup"><span data-stu-id="36c63-138">A specific culture represents a language that is spoken in a particular country/region.</span></span> <span data-ttu-id="36c63-139">例如，EN-US 代表美国英语语言的特定区域性，并且 en CA 表示说在加拿大的英语语言的特定区域性。</span><span class="sxs-lookup"><span data-stu-id="36c63-139">For example, en-US is a specific culture that represents the English language spoken in the United States, and en-CA is a specific culture that represents the English language spoken in Canada.</span></span> <span data-ttu-id="36c63-140">可以实例化<xref:System.Globalization.DateTimeFormatInfo>通过以下方式表示特定区域性的格式设置约定的对象：</span><span class="sxs-lookup"><span data-stu-id="36c63-140">You can instantiate a <xref:System.Globalization.DateTimeFormatInfo> object that represents the formatting conventions of a specific culture in the following ways:</span></span>  
  
-   <span data-ttu-id="36c63-141">通过调用<xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29?displayProperty=nameWithType>方法和检索的值的返回<xref:System.Globalization.CultureInfo>对象的<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-141">By calling the <xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29?displayProperty=nameWithType> method and retrieving the value of the returned <xref:System.Globalization.CultureInfo> object's <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="36c63-142">返回<xref:System.Globalization.DateTimeFormatInfo>对象是只读的。</span><span class="sxs-lookup"><span data-stu-id="36c63-142">The returned <xref:System.Globalization.DateTimeFormatInfo> object is read-only.</span></span>  
  
-   <span data-ttu-id="36c63-143">通过将传递静态<xref:System.Globalization.DateTimeFormatInfo.GetInstance%2A>方法<xref:System.Globalization.CultureInfo>表示的区域性的对象其<xref:System.Globalization.DateTimeFormatInfo>你想要检索的对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-143">By passing the static <xref:System.Globalization.DateTimeFormatInfo.GetInstance%2A> method a <xref:System.Globalization.CultureInfo> object that represents the culture whose <xref:System.Globalization.DateTimeFormatInfo> object you want to retrieve.</span></span> <span data-ttu-id="36c63-144">返回<xref:System.Globalization.DateTimeFormatInfo>对象为读/写。</span><span class="sxs-lookup"><span data-stu-id="36c63-144">The returned <xref:System.Globalization.DateTimeFormatInfo> object is read/write.</span></span>  
  
-   <span data-ttu-id="36c63-145">通过调用静态<xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType>方法和检索的值的返回<xref:System.Globalization.CultureInfo>对象的<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-145">By calling the static <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> method and retrieving the value of the returned <xref:System.Globalization.CultureInfo> object's <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="36c63-146">返回<xref:System.Globalization.DateTimeFormatInfo>对象为读/写。</span><span class="sxs-lookup"><span data-stu-id="36c63-146">The returned <xref:System.Globalization.DateTimeFormatInfo> object is read/write.</span></span>  
  
-   <span data-ttu-id="36c63-147">通过调用<xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType>类构造函数和检索的值的返回<xref:System.Globalization.CultureInfo>对象的<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-147">By calling the <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType> class constructor and retrieving the value of the returned <xref:System.Globalization.CultureInfo> object's <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="36c63-148">返回<xref:System.Globalization.DateTimeFormatInfo>对象为读/写。</span><span class="sxs-lookup"><span data-stu-id="36c63-148">The returned <xref:System.Globalization.DateTimeFormatInfo> object is read/write.</span></span>  
  
 <span data-ttu-id="36c63-149">下面的示例说明了每个实例化这些方式<xref:System.Globalization.DateTimeFormatInfo>对象，并指示生成的对象是只读的。</span><span class="sxs-lookup"><span data-stu-id="36c63-149">The following example illustrates each of these ways to instantiate a <xref:System.Globalization.DateTimeFormatInfo> object and indicates whether the resulting object is read-only.</span></span>  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create1.cs#3)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create1.vb#3)]  
  
<a name="instantiating_neutral"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-a-neutral-culture"></a><span data-ttu-id="36c63-150">实例化非特定区域性 DateTimeFormatInfo 对象</span><span class="sxs-lookup"><span data-stu-id="36c63-150">Instantiating a DateTimeFormatInfo object for a neutral culture</span></span>  
 <span data-ttu-id="36c63-151">表示非特定区域性的区域性或语言无关的国家/地区;它通常是父任务的一个或多个特定区域性。</span><span class="sxs-lookup"><span data-stu-id="36c63-151">A neutral culture represents a culture or language that is independent of a country/region; it is typically the parent of one or more specific cultures.</span></span> <span data-ttu-id="36c63-152">例如，Fr 是非特定区域性的法语语言和 FR-FR 区域性的父级。</span><span class="sxs-lookup"><span data-stu-id="36c63-152">For example, Fr is a neutral culture for the French language and the parent of the fr-FR culture.</span></span> <span data-ttu-id="36c63-153">可以实例化<xref:System.Globalization.DateTimeFormatInfo>对象，以便你创建的相同方式表示非特定区域性的格式设置约定<xref:System.Globalization.DateTimeFormatInfo>对象，表示特定区域性的格式设置约定。</span><span class="sxs-lookup"><span data-stu-id="36c63-153">You can instantiate a <xref:System.Globalization.DateTimeFormatInfo> object that represents the formatting conventions of a neutral culture in the same ways that you create a <xref:System.Globalization.DateTimeFormatInfo> object that represents the formatting conventions of a specific culture.</span></span> <span data-ttu-id="36c63-154">此外，你可以检索非特定区域性<xref:System.Globalization.DateTimeFormatInfo>通过从特定区域性的检索非特定区域性的对象<xref:System.Globalization.CultureInfo.Parent%2A?displayProperty=nameWithType>属性和检索<xref:System.Globalization.DateTimeFormatInfo>对象由其<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-154">In addition, you can retrieve a neutral culture's <xref:System.Globalization.DateTimeFormatInfo> object by retrieving a neutral culture from a specific culture's <xref:System.Globalization.CultureInfo.Parent%2A?displayProperty=nameWithType> property and retrieving the <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="36c63-155">除非的父区域性表示固定区域性，返回的<xref:System.Globalization.DateTimeFormatInfo>对象为读/写。</span><span class="sxs-lookup"><span data-stu-id="36c63-155">Unless the parent culture represents the invariant culture, the returned <xref:System.Globalization.DateTimeFormatInfo> object is read/write.</span></span> <span data-ttu-id="36c63-156">下面的示例阐释了这些方法的实例化<xref:System.Globalization.DateTimeFormatInfo>表示非特定区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-156">The following example illustrates these ways of instantiating a <xref:System.Globalization.DateTimeFormatInfo> object that represents a neutral culture.</span></span>  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create1.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create1.vb#2)]  
  
> [!NOTE]
>  <span data-ttu-id="36c63-157">在.NET Framework 版本 1.0 通过[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]，尝试检索<xref:System.Globalization.DateTimeFormatInfo>反映的非特定区域性的格式设置约定的对象引发<xref:System.NotSupportedException>异常。</span><span class="sxs-lookup"><span data-stu-id="36c63-157">In the .NET Framework versions 1.0 through [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)], trying to retrieve a <xref:System.Globalization.DateTimeFormatInfo> object that  reflects the formatting conventions of a neutral culture throws a <xref:System.NotSupportedException> exception.</span></span>  
  
 <span data-ttu-id="36c63-158">但是，非特定区域性缺少区域性特定格式设置信息，因为它是独立于特定的国家/地区。</span><span class="sxs-lookup"><span data-stu-id="36c63-158">However, a neutral culture lacks culture-specific formatting information, because it is independent of a specific country/region.</span></span> <span data-ttu-id="36c63-159">而不是填充<xref:System.Globalization.DateTimeFormatInfo>对象泛型值，.NET Framework 返回<xref:System.Globalization.DateTimeFormatInfo>反映特定的格式设置约定区域性的对象是非特定区域性的子级。</span><span class="sxs-lookup"><span data-stu-id="36c63-159">Instead of populating the <xref:System.Globalization.DateTimeFormatInfo> object with generic values, the .NET Framework returns a <xref:System.Globalization.DateTimeFormatInfo> object that reflects the formatting conventions of a specific culture that is a child of the neutral culture.</span></span> <span data-ttu-id="36c63-160">例如，<xref:System.Globalization.DateTimeFormatInfo>对象的非特定 en 区域性反映 EN-US 区域性的格式设置约定和<xref:System.Globalization.DateTimeFormatInfo>对象 fr 区域性反映 FR-FR 区域性的格式设置约定。</span><span class="sxs-lookup"><span data-stu-id="36c63-160">For example, the <xref:System.Globalization.DateTimeFormatInfo> object for the neutral en culture reflects the formatting conventions of the en-US culture, and the <xref:System.Globalization.DateTimeFormatInfo> object for the fr culture reflects the formatting conventions of the fr-FR culture.</span></span>  
  
 <span data-ttu-id="36c63-161">可以使用类似如下的代码来确定哪些特定区域性的格式设置约定表示非特定区域性。</span><span class="sxs-lookup"><span data-stu-id="36c63-161">You can use code like the following to determine which specific culture's formatting conventions a neutral culture represents.</span></span> <span data-ttu-id="36c63-162">该示例使用反射来比较<xref:System.Globalization.DateTimeFormatInfo>的非特定区域性的特定子区域性属性的属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-162">The example uses reflection to compare the <xref:System.Globalization.DateTimeFormatInfo> properties of a neutral culture with the properties of a specific child culture.</span></span> <span data-ttu-id="36c63-163">它会将两个日历为如果它们具有相同的日历类型等效，并且为公历日历，如果其<xref:System.Globalization.GregorianCalendar.CalendarType%2A?displayProperty=nameWithType>属性具有相同的值。</span><span class="sxs-lookup"><span data-stu-id="36c63-163">It considers two calendars to be equivalent if they are the same calendar type and, for Gregorian calendars, if their <xref:System.Globalization.GregorianCalendar.CalendarType%2A?displayProperty=nameWithType> properties have identical values.</span></span>  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/instantiate6c.cs#6)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/instantiate6c.vb#6)]  
  
<a name="instantiating_Current"></a>   
### <a name="instantiating-a-datetimeformatinfo-object-for-the-current-culture"></a><span data-ttu-id="36c63-164">实例化一个用于当前区域性的 DateTimeFormatInfo 对象</span><span class="sxs-lookup"><span data-stu-id="36c63-164">Instantiating a DateTimeFormatInfo object for the current culture</span></span>  
 <span data-ttu-id="36c63-165">可以实例化<xref:System.Globalization.DateTimeFormatInfo>通过以下方式表示当前区域性的格式设置约定的对象：</span><span class="sxs-lookup"><span data-stu-id="36c63-165">You can instantiate a <xref:System.Globalization.DateTimeFormatInfo> object that represents the formatting conventions of the current culture in the following ways:</span></span>  
  
-   <span data-ttu-id="36c63-166">通过检索的值的<xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-166">By retrieving the value of the <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> property.</span></span> <span data-ttu-id="36c63-167">返回<xref:System.Globalization.DateTimeFormatInfo>对象是只读的。</span><span class="sxs-lookup"><span data-stu-id="36c63-167">The returned <xref:System.Globalization.DateTimeFormatInfo> object is read-only.</span></span>  
  
-   <span data-ttu-id="36c63-168">通过检索的值的<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>属性从<xref:System.Globalization.CultureInfo>返回的对象<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-168">By retrieving the value of the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property from the <xref:System.Globalization.CultureInfo> object that is returned by the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="36c63-169">返回<xref:System.Globalization.DateTimeFormatInfo>对象是只读的。</span><span class="sxs-lookup"><span data-stu-id="36c63-169">The returned <xref:System.Globalization.DateTimeFormatInfo> object is read-only.</span></span>  
  
-   <span data-ttu-id="36c63-170">通过调用<xref:System.Globalization.NumberFormatInfo.GetInstance%2A>方法替换<xref:System.Globalization.CultureInfo>表示当前区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-170">By calling the <xref:System.Globalization.NumberFormatInfo.GetInstance%2A> method with a <xref:System.Globalization.CultureInfo> object that represents the current culture.</span></span> <span data-ttu-id="36c63-171">返回<xref:System.Globalization.DateTimeFormatInfo>对象是只读的。</span><span class="sxs-lookup"><span data-stu-id="36c63-171">The returned <xref:System.Globalization.DateTimeFormatInfo> object is read-only.</span></span>  
  
 <span data-ttu-id="36c63-172">下面的示例使用上述每种方法来实例化<xref:System.Globalization.DateTimeFormatInfo>对象，表示当前区域性的格式设置约定。</span><span class="sxs-lookup"><span data-stu-id="36c63-172">The following example uses each of these methods to instantiate a <xref:System.Globalization.DateTimeFormatInfo> object that represents the formatting conventions of the current culture.</span></span> <span data-ttu-id="36c63-173">然后，它指示对象是只读的。</span><span class="sxs-lookup"><span data-stu-id="36c63-173">It then indicates whether the object is read-only.</span></span>  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/create2.cs#4)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/create2.vb#4)]  
  
 <span data-ttu-id="36c63-174">你可以创建的可写<xref:System.Globalization.DateTimeFormatInfo>对象，表示通过以下方式之一中的当前线程区域性的约定：</span><span class="sxs-lookup"><span data-stu-id="36c63-174">You can create a writable <xref:System.Globalization.DateTimeFormatInfo> object that represents the conventions of the current thread culture in one of these ways:</span></span>  
  
-   <span data-ttu-id="36c63-175">通过检索<xref:System.Globalization.DateTimeFormatInfo>对象中的任何三个以前的方式和调用<xref:System.Globalization.DateTimeFormatInfo.Clone%2A>方法返回的<xref:System.Globalization.DateTimeFormatInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-175">By retrieving a <xref:System.Globalization.DateTimeFormatInfo> object in any of the three previous ways and calling the <xref:System.Globalization.DateTimeFormatInfo.Clone%2A> method on the returned <xref:System.Globalization.DateTimeFormatInfo> object.</span></span> <span data-ttu-id="36c63-176">这将创建的原始副本<xref:System.Globalization.DateTimeFormatInfo>对象，但其<xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A>属性是`false`。</span><span class="sxs-lookup"><span data-stu-id="36c63-176">This creates a copy of the original <xref:System.Globalization.DateTimeFormatInfo> object, except that its <xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A> property is `false`.</span></span>  
  
-   <span data-ttu-id="36c63-177">通过调用<xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType>方法来创建<xref:System.Globalization.CultureInfo>对象表示的当前区域性，，然后使用其<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>属性，以检索<xref:System.Globalization.DateTimeFormatInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-177">By calling the <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> method to create a <xref:System.Globalization.CultureInfo> object that represents the current culture, and then using its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property to retrieve the <xref:System.Globalization.DateTimeFormatInfo> object.</span></span>  
  
 <span data-ttu-id="36c63-178">下面的示例阐释了这两种方法的实例化读/写<xref:System.Globalization.DateTimeFormatInfo>对象，并显示的值其<xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-178">The following example illustrates each way of instantiating a read/write <xref:System.Globalization.DateTimeFormatInfo> object and displays the value of its <xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A> property.</span></span>  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/instantiate2.cs#7)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/instantiate2.vb#7)]  
  
 <span data-ttu-id="36c63-179">在 Windows 中，用户可以覆盖其中某些<xref:System.Globalization.DateTimeFormatInfo>格式设置和分析通过操作中使用的属性值**地区和语言**控制面板中应用程序。</span><span class="sxs-lookup"><span data-stu-id="36c63-179">In Windows, the user can override some of the <xref:System.Globalization.DateTimeFormatInfo> property values used in formatting and parsing operations through the **Region and Language** application in Control Panel.</span></span> <span data-ttu-id="36c63-180">例如，其区域性为英语 （美国） 的用户可能选择而不是默认 12 小时制 （在格式 h:mm: ss tt) 显示长时间使用 24 小时制 （采用格式为 hh: mm:） 的时间值。</span><span class="sxs-lookup"><span data-stu-id="36c63-180">For example, a user whose culture is English (United States) might choose to display long time values using a 24-hour clock (in the format HH:mm:ss) instead of the default 12-hour clock (in the format h:mm:ss tt).</span></span> <span data-ttu-id="36c63-181"><xref:System.Globalization.DateTimeFormatInfo>中所述的方式检索对象之前都反映这些用户重写。</span><span class="sxs-lookup"><span data-stu-id="36c63-181">The <xref:System.Globalization.DateTimeFormatInfo> objects retrieved in the ways discussed previously all reflect these user overrides.</span></span> <span data-ttu-id="36c63-182">如果这是不可取，则可以创建<xref:System.Globalization.NumberFormatInfo>不会反映用户的对象重写 （和也是读/写而不是只读的） 通过调用<xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType>构造函数和提供的值`false`为`useUserOverride`自变量。</span><span class="sxs-lookup"><span data-stu-id="36c63-182">If this is undesirable, you can create a <xref:System.Globalization.NumberFormatInfo> object that does not reflect user overrides (and is also read/write instead of read-only) by calling the <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> constructor and supplying a value of `false` for the `useUserOverride` argument.</span></span> <span data-ttu-id="36c63-183">下面的示例阐释了这一点系统的当前区域性为英语 （美国） 和其长时间模式的安全提供程序已从 h:mm: ss tt 默认值更改为 hh: mm:。</span><span class="sxs-lookup"><span data-stu-id="36c63-183">The following example illustrates this for a system whose current culture is English (United States) and whose long time pattern has been changed from the default of h:mm:ss tt to HH:mm:ss.</span></span>  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/instantiate3.cs#8)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/instantiate3.vb#8)]  
  
<a name="dynamic"></a>   
## <a name="datetimeformatinfo-and-dynamic-data"></a><span data-ttu-id="36c63-184">DateTimeFormatInfo 和动态数据</span><span class="sxs-lookup"><span data-stu-id="36c63-184">DateTimeFormatInfo and dynamic data</span></span>  
 <span data-ttu-id="36c63-185">用于通过提供的日期和时间值的格式的区域性特定数据<xref:System.Globalization.DateTimeFormatInfo>类是动态的就像通过提供的区域性数据一样<xref:System.Globalization.CultureInfo>类。</span><span class="sxs-lookup"><span data-stu-id="36c63-185">The culture-specific data for formatting date and time values provided by the <xref:System.Globalization.DateTimeFormatInfo> class is dynamic, just like cultural data provided by the <xref:System.Globalization.CultureInfo> class.</span></span> <span data-ttu-id="36c63-186">不应作出有关稳定性的值的任何假设<xref:System.Globalization.DateTimeFormatInfo>关联的对象与特定<xref:System.Globalization.CultureInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-186">You should not make any assumptions about the stability of values for <xref:System.Globalization.DateTimeFormatInfo> objects that are associated with particular <xref:System.Globalization.CultureInfo> objects.</span></span> <span data-ttu-id="36c63-187">仅提供固定区域性和其关联的数据<xref:System.Globalization.DateTimeFormatInfo>对象保持不变。</span><span class="sxs-lookup"><span data-stu-id="36c63-187">Only the data provided by the invariant culture and its associated <xref:System.Globalization.DateTimeFormatInfo> object is stable.</span></span> <span data-ttu-id="36c63-188">应用程序会话之间或甚至运行你的应用程序时，可以更改其他数据。</span><span class="sxs-lookup"><span data-stu-id="36c63-188">Other data can change between application sessions or even while your application is running.</span></span> <span data-ttu-id="36c63-189">有以下四个主要来源的更改：</span><span class="sxs-lookup"><span data-stu-id="36c63-189">There are four major sources of change:</span></span>  
  
-   <span data-ttu-id="36c63-190">系统更新。</span><span class="sxs-lookup"><span data-stu-id="36c63-190">System updates.</span></span> <span data-ttu-id="36c63-191">随着时间的推移更改如首选的日历或常用的日期和时间格式的区域性首选项。</span><span class="sxs-lookup"><span data-stu-id="36c63-191">Cultural preferences such as the preferred calendar or customary date and time formats change over time.</span></span> <span data-ttu-id="36c63-192">在此情况下，Windows 更新包括对更改<xref:System.Globalization.DateTimeFormatInfo>针对特定区域性的属性值。</span><span class="sxs-lookup"><span data-stu-id="36c63-192">When this happens, Windows Update includes changes to the <xref:System.Globalization.DateTimeFormatInfo> property value for a particular culture.</span></span>  
  
-   <span data-ttu-id="36c63-193">替换的区域性。</span><span class="sxs-lookup"><span data-stu-id="36c63-193">Replacement cultures.</span></span> <span data-ttu-id="36c63-194"><xref:System.Globalization.CultureAndRegionInfoBuilder>类可以用于替换现有的区域性的数据。</span><span class="sxs-lookup"><span data-stu-id="36c63-194">The <xref:System.Globalization.CultureAndRegionInfoBuilder> class can be used to replace the data of an existing culture.</span></span>  
  
-   <span data-ttu-id="36c63-195">级联更改属性值。</span><span class="sxs-lookup"><span data-stu-id="36c63-195">Cascading changes to property values.</span></span> <span data-ttu-id="36c63-196">多个区域性相关属性可以更改在运行时，这反过来会导致<xref:System.Globalization.DateTimeFormatInfo>数据更改。</span><span class="sxs-lookup"><span data-stu-id="36c63-196">A number of culture-related properties can change at run time, which, in turn, causes <xref:System.Globalization.DateTimeFormatInfo> data to change.</span></span> <span data-ttu-id="36c63-197">例如，以编程方式或通过用户执行任何操作，则可以更改当前区域性。</span><span class="sxs-lookup"><span data-stu-id="36c63-197">For example, the current culture can be changed either programmatically or through user action.</span></span> <span data-ttu-id="36c63-198">在此情况下，<xref:System.Globalization.DateTimeFormatInfo>返回对象<xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A>属性更改为与当前区域性关联的对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-198">When this happens, the <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> property changes to an object associated with the current culture.</span></span> <span data-ttu-id="36c63-199">同样地，区域性的日历可以更改，这可能会导致在更改为大量<xref:System.Globalization.DateTimeFormatInfo>属性值。</span><span class="sxs-lookup"><span data-stu-id="36c63-199">Similarly, a culture's calendar can change, which can result in changes to numerous <xref:System.Globalization.DateTimeFormatInfo> property values.</span></span>  
  
-   <span data-ttu-id="36c63-200">用户首选项。</span><span class="sxs-lookup"><span data-stu-id="36c63-200">User preferences.</span></span> <span data-ttu-id="36c63-201">应用程序的用户可以选择重写某些与通过控制面板中的区域和语言选项的当前系统区域性关联的值。</span><span class="sxs-lookup"><span data-stu-id="36c63-201">Users of your application might choose to override some of the values associated with the current system culture through the regional and language options in Control Panel.</span></span> <span data-ttu-id="36c63-202">例如，用户可以选择以不同格式显示日期。</span><span class="sxs-lookup"><span data-stu-id="36c63-202">For example, users might choose to display the date in a different format.</span></span> <span data-ttu-id="36c63-203">如果<xref:System.Globalization.CultureInfo.UseUserOverride%2A?displayProperty=nameWithType>属性设置为`true`的属性<xref:System.Globalization.DateTimeFormatInfo>从用户设置还检索对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-203">If the <xref:System.Globalization.CultureInfo.UseUserOverride%2A?displayProperty=nameWithType> property is set to `true`, the properties of the <xref:System.Globalization.DateTimeFormatInfo> object is also retrieved from the user settings.</span></span> <span data-ttu-id="36c63-204">如果用户设置均与关联的区域性不兼容<xref:System.Globalization.CultureInfo>对象 (例如，如果所选的日历不是由的日历之一<xref:System.Globalization.CultureInfo.OptionalCalendars%2A>属性)，方法和属性的值的结果是不确定的。</span><span class="sxs-lookup"><span data-stu-id="36c63-204">If the user settings are incompatible with the culture associated with the <xref:System.Globalization.CultureInfo> object (for example, if the selected calendar is not one of the calendars indicated by the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property), the results of the methods and the values of the properties are undefined.</span></span>  
  
 <span data-ttu-id="36c63-205">若要不一致的数据，所有用户可重写属性的可能性降至<xref:System.Globalization.DateTimeFormatInfo>对象时创建该对象进行初始化。</span><span class="sxs-lookup"><span data-stu-id="36c63-205">To minimize the possibility of inconsistent data, all user-overridable properties of a <xref:System.Globalization.DateTimeFormatInfo> object are initialized when the object is created.</span></span> <span data-ttu-id="36c63-206">则仍可能的不一致，因为对象创建和用户重写过程都不是原子和相关的值可以在对象创建期间发生更改。</span><span class="sxs-lookup"><span data-stu-id="36c63-206">There is still a possibility of inconsistency, because neither object creation nor the user override process is atomic and the relevant values can change during object creation.</span></span> <span data-ttu-id="36c63-207">但是，这种情况下应极少出现。</span><span class="sxs-lookup"><span data-stu-id="36c63-207">However, this situation should be extremely rare.</span></span>  
  
 <span data-ttu-id="36c63-208">你可以控制是否将用户重写反映在<xref:System.Globalization.DateTimeFormatInfo>表示与系统区域性相同的区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-208">You can control whether user overrides are reflected in <xref:System.Globalization.DateTimeFormatInfo> objects that represent the same culture as the system culture.</span></span> <span data-ttu-id="36c63-209">下表列出了在哪些方面<xref:System.Globalization.DateTimeFormatInfo>对象可以检索和指示生成的对象是否反映用户重写。</span><span class="sxs-lookup"><span data-stu-id="36c63-209">The following table lists the ways in which a <xref:System.Globalization.DateTimeFormatInfo> object can be retrieved and indicates whether the resulting object reflects user overrides.</span></span>  
  
|<span data-ttu-id="36c63-210">CultureInfo 和 DateTimeFormatInfo 对象数据源</span><span class="sxs-lookup"><span data-stu-id="36c63-210">Source of CultureInfo and DateTimeFormatInfo object</span></span>|<span data-ttu-id="36c63-211">反映用户重写</span><span class="sxs-lookup"><span data-stu-id="36c63-211">Reflects user overrides</span></span>|  
|---------------------------------------------------------|-----------------------------|  
|<span data-ttu-id="36c63-212">`CultureInfo.CurrentCulture.DateTimeFormat` 属性</span><span class="sxs-lookup"><span data-stu-id="36c63-212">`CultureInfo.CurrentCulture.DateTimeFormat` property</span></span>|<span data-ttu-id="36c63-213">是</span><span class="sxs-lookup"><span data-stu-id="36c63-213">Yes</span></span>|  
|<span data-ttu-id="36c63-214"><xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A?displayProperty=nameWithType> 属性</span><span class="sxs-lookup"><span data-stu-id="36c63-214"><xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A?displayProperty=nameWithType> property</span></span>|<span data-ttu-id="36c63-215">是</span><span class="sxs-lookup"><span data-stu-id="36c63-215">Yes</span></span>|  
|<span data-ttu-id="36c63-216"><xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> 方法</span><span class="sxs-lookup"><span data-stu-id="36c63-216"><xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> method</span></span>|<span data-ttu-id="36c63-217">是</span><span class="sxs-lookup"><span data-stu-id="36c63-217">Yes</span></span>|  
|<span data-ttu-id="36c63-218"><xref:System.Globalization.CultureInfo.GetCultureInfo%2A?displayProperty=nameWithType> 方法</span><span class="sxs-lookup"><span data-stu-id="36c63-218"><xref:System.Globalization.CultureInfo.GetCultureInfo%2A?displayProperty=nameWithType> method</span></span>|<span data-ttu-id="36c63-219">否</span><span class="sxs-lookup"><span data-stu-id="36c63-219">No</span></span>|  
|<span data-ttu-id="36c63-220"><xref:System.Globalization.CultureInfo.%23ctor%28System.String%29?displayProperty=nameWithType> 构造函数</span><span class="sxs-lookup"><span data-stu-id="36c63-220"><xref:System.Globalization.CultureInfo.%23ctor%28System.String%29?displayProperty=nameWithType> constructor</span></span>|<span data-ttu-id="36c63-221">是</span><span class="sxs-lookup"><span data-stu-id="36c63-221">Yes</span></span>|  
|<span data-ttu-id="36c63-222"><xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> 构造函数</span><span class="sxs-lookup"><span data-stu-id="36c63-222"><xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> constructor</span></span>|<span data-ttu-id="36c63-223">取决于值`useUserOverride`参数</span><span class="sxs-lookup"><span data-stu-id="36c63-223">Depends on value of `useUserOverride` parameter</span></span>|  
  
 <span data-ttu-id="36c63-224">如果没有人信服的理由，否则，在使用时，请参阅用户替代<xref:System.Globalization.DateTimeFormatInfo>进行格式化和分析用户输入或显示数据的客户端应用程序中的对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-224">Unless there is a compelling reason to do otherwise, you should respect user overrides when you use the <xref:System.Globalization.DateTimeFormatInfo> object in client applications to format and parse user input or to display data.</span></span> <span data-ttu-id="36c63-225">对于服务器应用程序或无人参与的应用程序，您不应。</span><span class="sxs-lookup"><span data-stu-id="36c63-225">For server applications or unattended applications, you should not.</span></span> <span data-ttu-id="36c63-226">但是，如果你使用<xref:System.Globalization.DateTimeFormatInfo>对象显式或隐式若要保存以字符串形式的日期和时间数据，你应使用<xref:System.Globalization.DateTimeFormatInfo>反映固定区域性，或你的格式设置约定的对象应指定自定义日期和时间格式的使用而不考虑区域性的字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-226">However, if you are using the <xref:System.Globalization.DateTimeFormatInfo> object either explicitly or implicitly to persist date and time data in string form, you should either use a <xref:System.Globalization.DateTimeFormatInfo> object that reflects the formatting conventions of the invariant culture, or you should specify a custom date and time format string that you use regardless of culture.</span></span>  
  
<a name="Formatting_dates_times"></a>   
## <a name="formatting-dates-and-times"></a><span data-ttu-id="36c63-227">格式设置的日期和时间</span><span class="sxs-lookup"><span data-stu-id="36c63-227">Formatting dates and times</span></span>  
 <span data-ttu-id="36c63-228">A<xref:System.Globalization.DateTimeFormatInfo>对象在所有日期和时间格式设置操作中使用隐式或显式。</span><span class="sxs-lookup"><span data-stu-id="36c63-228">A <xref:System.Globalization.DateTimeFormatInfo> object is used implicitly or explicitly in all date and time formatting operations.</span></span> <span data-ttu-id="36c63-229">这些方法包括对以下方法的调用：</span><span class="sxs-lookup"><span data-stu-id="36c63-229">These include calls to the following methods:</span></span>  
  
-   <span data-ttu-id="36c63-230">所有日期和时间格式设置方法，如<xref:System.DateTime.ToString?displayProperty=nameWithType>和<xref:System.DateTimeOffset.ToString%28System.String%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="36c63-230">All date and time formatting methods, such as <xref:System.DateTime.ToString?displayProperty=nameWithType> and <xref:System.DateTimeOffset.ToString%28System.String%29?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="36c63-231">主要的复合格式设置方法，即<xref:System.String.Format%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="36c63-231">The major composite formatting method, which is <xref:System.String.Format%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="36c63-232">其他复合格式设置方法，如<xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>和<xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="36c63-232">Other composite formatting methods, such as <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> and <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="36c63-233">所有日期和时间格式设置操作使都利用<xref:System.IFormatProvider>实现。</span><span class="sxs-lookup"><span data-stu-id="36c63-233">All date and time formatting operations make use of an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="36c63-234"><xref:System.IFormatProvider>接口包含单个方法<xref:System.IFormatProvider.GetFormat%28System.Type%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="36c63-234">The <xref:System.IFormatProvider> interface includes a single method, <xref:System.IFormatProvider.GetFormat%28System.Type%29?displayProperty=nameWithType>.</span></span> <span data-ttu-id="36c63-235">此回调方法传递<xref:System.Type>表示提供的格式设置信息所需的类型的对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-235">This callback method is passed a <xref:System.Type> object that represents the type needed to provide formatting information.</span></span> <span data-ttu-id="36c63-236">该方法返回该类型的实例或`null`如果它不能提供类型的实例。</span><span class="sxs-lookup"><span data-stu-id="36c63-236">The method returns either an instance of that type or `null` if it cannot provide an instance of the type.</span></span> <span data-ttu-id="36c63-237">.NET Framework 包括两个<xref:System.IFormatProvider>格式化日期和时间的实现：</span><span class="sxs-lookup"><span data-stu-id="36c63-237">The .NET Framework includes two <xref:System.IFormatProvider> implementations for formatting dates and times:</span></span>  
  
-   <span data-ttu-id="36c63-238"><xref:System.Globalization.CultureInfo>类，该类表示特定区域性 （或特定国家/地区中的特定语言）。</span><span class="sxs-lookup"><span data-stu-id="36c63-238">The <xref:System.Globalization.CultureInfo> class,  which represents a specific culture (or a specific language in a specific country/region).</span></span> <span data-ttu-id="36c63-239">日期和时间格式设置操作，<xref:System.Globalization.CultureInfo.GetFormat%2A?displayProperty=nameWithType>方法返回<xref:System.Globalization.DateTimeFormatInfo>与关联的对象及其<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-239">In a date and time formatting operation, the <xref:System.Globalization.CultureInfo.GetFormat%2A?displayProperty=nameWithType> method returns the <xref:System.Globalization.DateTimeFormatInfo> object associated with its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="36c63-240"><xref:System.Globalization.DateTimeFormatInfo>类，该类提供的及其关联的区域性信息的格式设置约定。</span><span class="sxs-lookup"><span data-stu-id="36c63-240">The <xref:System.Globalization.DateTimeFormatInfo> class, which provides information about the formatting conventions of its associated culture.</span></span> <span data-ttu-id="36c63-241"><xref:System.Globalization.DateTimeFormatInfo.GetFormat%2A?displayProperty=nameWithType>方法返回其自身的一个实例。</span><span class="sxs-lookup"><span data-stu-id="36c63-241">The <xref:System.Globalization.DateTimeFormatInfo.GetFormat%2A?displayProperty=nameWithType> method returns an instance of itself.</span></span>  
  
 <span data-ttu-id="36c63-242">如果<xref:System.IFormatProvider>实现不提供给格式设置方法显式<xref:System.Globalization.CultureInfo>返回对象<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>使用表示当前线程区域性的属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-242">If an <xref:System.IFormatProvider> implementation is not provided to a formatting method explicitly, the <xref:System.Globalization.CultureInfo> object returned by the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property that represents the current thread culture is used.</span></span>  
  
 <span data-ttu-id="36c63-243">下面的示例阐释了之间的关系<xref:System.IFormatProvider>接口和<xref:System.Globalization.DateTimeFormatInfo>在格式设置操作的类。</span><span class="sxs-lookup"><span data-stu-id="36c63-243">The following example illustrates the relationship between the <xref:System.IFormatProvider> interface and the <xref:System.Globalization.DateTimeFormatInfo> class in formatting operations.</span></span> <span data-ttu-id="36c63-244">它定义一个自定义<xref:System.IFormatProvider>实现其<xref:System.IFormatProvider.GetFormat%2A>方法显示的格式设置操作请求的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="36c63-244">It defines a custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method displays the type of the object requested by the formatting operation.</span></span> <span data-ttu-id="36c63-245">如果其请求<xref:System.Globalization.DateTimeFormatInfo>对象，该方法提供了<xref:System.Globalization.DateTimeFormatInfo>当前线程区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-245">If it is requesting a <xref:System.Globalization.DateTimeFormatInfo> object, the method provides the <xref:System.Globalization.DateTimeFormatInfo> object for the current thread culture.</span></span> <span data-ttu-id="36c63-246">如示例所示，输出<xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>方法请求<xref:System.Globalization.DateTimeFormatInfo>对象以提供格式设置信息，而<xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>方法请求<xref:System.Globalization.NumberFormatInfo>和<xref:System.Globalization.DateTimeFormatInfo>对象以及<xref:System.ICustomFormatter>实现。</span><span class="sxs-lookup"><span data-stu-id="36c63-246">As the output from the example shows, the <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method requests a <xref:System.Globalization.DateTimeFormatInfo> object to provide formatting information, whereas the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method requests <xref:System.Globalization.NumberFormatInfo> and <xref:System.Globalization.DateTimeFormatInfo> objects as well as an <xref:System.ICustomFormatter> implementation.</span></span>  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/formatprovider1.cs#9)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/formatprovider1.vb#9)]  
  
<a name="properties"></a>   
## <a name="format-strings-and-datetimeformatinfo-properties"></a><span data-ttu-id="36c63-247">格式字符串和 DateTimeFormatInfo 属性</span><span class="sxs-lookup"><span data-stu-id="36c63-247">Format strings and DateTimeFormatInfo properties</span></span>  
 <span data-ttu-id="36c63-248"><xref:System.Globalization.DateTimeFormatInfo>对象在格式设置的日期和时间值的操作包括三种类型的使用的属性：</span><span class="sxs-lookup"><span data-stu-id="36c63-248">The <xref:System.Globalization.DateTimeFormatInfo> object includes three kinds of properties that are used in formatting operations with date and time values:</span></span>  
  
-   <span data-ttu-id="36c63-249">日历相关的属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-249">Calendar-related properties.</span></span> <span data-ttu-id="36c63-250">属性，如<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>， <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>， <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A>，和<xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A>，都与所使用的区域性，由定义日历关联<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-250">Properties such as <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A>, and <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A>, are associated with the calendar used by the culture, which is defined by the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property.</span></span> <span data-ttu-id="36c63-251">这些属性用于长日期和时间格式。</span><span class="sxs-lookup"><span data-stu-id="36c63-251">These properties are used for long date and time formats.</span></span>  
  
-   <span data-ttu-id="36c63-252">生成的标准定义结果字符串的属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-252">Properties that produce a standards-defined result string.</span></span> <span data-ttu-id="36c63-253"><xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A>， <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A>，和<xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A>属性包含生成的结果字符串由国际标准定义的自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-253">The <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A>, and <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> properties contain custom format strings that produce result strings defined by international standards.</span></span> <span data-ttu-id="36c63-254">这些属性是只读的并且不能修改。</span><span class="sxs-lookup"><span data-stu-id="36c63-254">These properties are  read-only and cannot be modified.</span></span>  
  
-   <span data-ttu-id="36c63-255">定义区分区域性的结果字符串的属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-255">Properties that define culture-sensitive result strings.</span></span> <span data-ttu-id="36c63-256">某些属性，如<xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>和<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>，包含[自定义格式字符串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)指定结果字符串的格式。</span><span class="sxs-lookup"><span data-stu-id="36c63-256">Some properties, such as <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> and <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, contain  [custom format strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) that specify the format of the result string.</span></span> <span data-ttu-id="36c63-257">其他，如<xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A>， <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A>， <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>，和<xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A>，定义区分区域性的符号或可以在结果字符串中包含的子字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-257">Others, such as <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A>, <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A>, <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>, and <xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A>, define culture-sensitive symbols or substrings that can be included in a result string.</span></span>  
  
 <span data-ttu-id="36c63-258">[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)，例如"d"、"D"、"f"和"F"，是对应于特定的别名<xref:System.Globalization.DateTimeFormatInfo>格式化模式属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-258">The [standard date and time format strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md), such as "d", "D", "f", and "F", are aliases that correspond to particular <xref:System.Globalization.DateTimeFormatInfo> format pattern properties.</span></span> <span data-ttu-id="36c63-259">大部分[自定义日期和时间格式字符串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)与字符串或子字符串的格式设置操作将插入到结果流。</span><span class="sxs-lookup"><span data-stu-id="36c63-259">Most of the  [custom date and time format strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) are related to strings or substrings that a formatting operation inserts into the result stream.</span></span> <span data-ttu-id="36c63-260">下表列出了标准和自定义日期和时间格式说明符和其关联<xref:System.Globalization.DateTimeFormatInfo>属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-260">The following table lists the standard and custom date and time format specifiers and their associated <xref:System.Globalization.DateTimeFormatInfo> properties.</span></span> <span data-ttu-id="36c63-261">有关详细信息，有关如何使用这些格式说明符，请参阅[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)和[自定义日期和时间格式字符串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="36c63-261">For details about how to use these format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span> <span data-ttu-id="36c63-262">请注意，每个标准格式字符串对应于<xref:System.Globalization.DateTimeFormatInfo>其值为自定义日期和时间格式字符串的属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-262">Note that each standard format string corresponds to a <xref:System.Globalization.DateTimeFormatInfo> property whose value is a custom date and time format string.</span></span> <span data-ttu-id="36c63-263">此自定义格式字符串中的单个说明符反过来对应于其他<xref:System.Globalization.DateTimeFormatInfo>属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-263">The individual specifiers in this custom format string in turn correspond to other <xref:System.Globalization.DateTimeFormatInfo> properties.</span></span> <span data-ttu-id="36c63-264">表仅列出<xref:System.Globalization.DateTimeFormatInfo>属性对其标准格式字符串是别名，且不会不可能访问的自定义格式字符串分配给这些具有别名的属性列表属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-264">The table lists only the <xref:System.Globalization.DateTimeFormatInfo> properties for which the standard format strings are aliases, and does not list properties that may be accessed by custom format strings assigned to those aliased properties.</span></span> <span data-ttu-id="36c63-265">此外，表列出了对应的自定义格式说明符<xref:System.Globalization.DateTimeFormatInfo>属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-265">In addition, the table lists only custom format specifiers that correspond to <xref:System.Globalization.DateTimeFormatInfo> properties.</span></span>  
  
|<span data-ttu-id="36c63-266">格式说明符</span><span class="sxs-lookup"><span data-stu-id="36c63-266">Format specifier</span></span>|<span data-ttu-id="36c63-267">关联的属性</span><span class="sxs-lookup"><span data-stu-id="36c63-267">Associated properties</span></span>|  
|----------------------|---------------------------|  
|<span data-ttu-id="36c63-268">"d"（短日期; 标准格式字符串）</span><span class="sxs-lookup"><span data-stu-id="36c63-268">"d" (short date; standard format string)</span></span>|<span data-ttu-id="36c63-269"><xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>定义结果字符串的总体格式。</span><span class="sxs-lookup"><span data-stu-id="36c63-269"><xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, to define the overall format of the result string.</span></span>|  
|<span data-ttu-id="36c63-270">"D"（长日期; 标准格式字符串）</span><span class="sxs-lookup"><span data-stu-id="36c63-270">"D" (long date; standard format string)</span></span>|<span data-ttu-id="36c63-271"><xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>定义结果字符串的总体格式。</span><span class="sxs-lookup"><span data-stu-id="36c63-271"><xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, to define the overall format of the result string.</span></span>|  
|<span data-ttu-id="36c63-272">"f"(完整日期 / 时间; 标准短格式字符串)</span><span class="sxs-lookup"><span data-stu-id="36c63-272">"f" (full date / short time; standard format string)</span></span>|<span data-ttu-id="36c63-273"><xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>定义结果字符串的日期部分的格式。</span><span class="sxs-lookup"><span data-stu-id="36c63-273"><xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, to define the format of the date component of the result string.</span></span><br /><br /> <span data-ttu-id="36c63-274"><xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>定义结果字符串的时间部分的格式。</span><span class="sxs-lookup"><span data-stu-id="36c63-274"><xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>, to define the format of the time component of the result string.</span></span>|  
|<span data-ttu-id="36c63-275">"F"(完整日期 / 长时间; 标准格式字符串)</span><span class="sxs-lookup"><span data-stu-id="36c63-275">"F" (full date / long time; standard format string)</span></span>|<span data-ttu-id="36c63-276"><xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>定义结果字符串的日期部分的格式。</span><span class="sxs-lookup"><span data-stu-id="36c63-276"><xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, to define the format of the date component of the result string.</span></span><br /><br /> <span data-ttu-id="36c63-277"><xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>定义结果字符串的时间部分的格式。</span><span class="sxs-lookup"><span data-stu-id="36c63-277"><xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>, to define the format of the time component of the result string.</span></span>|  
|<span data-ttu-id="36c63-278">"g"(常规日期 / 短时间; 标准格式字符串)</span><span class="sxs-lookup"><span data-stu-id="36c63-278">"g" (general date / short time; standard format string)</span></span>|<span data-ttu-id="36c63-279"><xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>定义结果字符串的日期部分的格式。</span><span class="sxs-lookup"><span data-stu-id="36c63-279"><xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, to define the format of the date component of the result string.</span></span><br /><br /> <span data-ttu-id="36c63-280"><xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>定义结果字符串的时间部分的格式。</span><span class="sxs-lookup"><span data-stu-id="36c63-280"><xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>, to define the format of the time component of the result string.</span></span>|  
|<span data-ttu-id="36c63-281">"G"(常规日期 / 是长时间，; 是已标准格式字符串)</span><span class="sxs-lookup"><span data-stu-id="36c63-281">"G" (general date / long time; standard format string)</span></span>|<span data-ttu-id="36c63-282"><xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>定义结果字符串的日期部分的格式。</span><span class="sxs-lookup"><span data-stu-id="36c63-282"><xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, to define the format of the date component of the result string.</span></span><br /><br /> <span data-ttu-id="36c63-283"><xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>定义结果字符串的时间部分的格式。</span><span class="sxs-lookup"><span data-stu-id="36c63-283"><xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>, to define the format of the time component of the result string.</span></span>|  
|<span data-ttu-id="36c63-284">"M"、"m"（月/日; 标准格式字符串）</span><span class="sxs-lookup"><span data-stu-id="36c63-284">"M", "m" (month/day; standard format string)</span></span>|<span data-ttu-id="36c63-285"><xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A>定义结果字符串的总体格式。</span><span class="sxs-lookup"><span data-stu-id="36c63-285"><xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A>, to define the overall format of the result string.</span></span>|  
|<span data-ttu-id="36c63-286">"O"、"o"(往返日期/时间; 标准格式字符串)</span><span class="sxs-lookup"><span data-stu-id="36c63-286">"O", "o" (round-trip date/time; standard format string)</span></span>|<span data-ttu-id="36c63-287">无。</span><span class="sxs-lookup"><span data-stu-id="36c63-287">None.</span></span>|  
|<span data-ttu-id="36c63-288">"R", "r" (RFC1123; standard format string)</span><span class="sxs-lookup"><span data-stu-id="36c63-288">"R", "r" (RFC1123; standard format string)</span></span>|<span data-ttu-id="36c63-289"><xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A>定义为遵循 RFC 1123 标准的符合的结果字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-289"><xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A>, to define a result string that conforms to the RFC 1123 standard.</span></span> <span data-ttu-id="36c63-290">该属性是只读的。</span><span class="sxs-lookup"><span data-stu-id="36c63-290">The property is read-only.</span></span>|  
|<span data-ttu-id="36c63-291">"s"（可排序日期/时间; 标准格式字符串）</span><span class="sxs-lookup"><span data-stu-id="36c63-291">"s" (sortable date/time; standard format string)</span></span>|<span data-ttu-id="36c63-292"><xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A>以 ISO 8601 标准定义符合的结果字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-292"><xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A>, to define a result string that conforms to the ISO 8601 standard.</span></span> <span data-ttu-id="36c63-293">该属性是只读的。</span><span class="sxs-lookup"><span data-stu-id="36c63-293">The property is read-only.</span></span>|  
|<span data-ttu-id="36c63-294">"t"（短时间; 标准格式字符串）</span><span class="sxs-lookup"><span data-stu-id="36c63-294">"t" (short time; standard format string)</span></span>|<span data-ttu-id="36c63-295"><xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>定义结果字符串的总体格式。</span><span class="sxs-lookup"><span data-stu-id="36c63-295"><xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>, to define the overall format of the result string.</span></span>|  
|<span data-ttu-id="36c63-296">"T"（长时间; 标准格式字符串）</span><span class="sxs-lookup"><span data-stu-id="36c63-296">"T" (long time; standard format string)</span></span>|<span data-ttu-id="36c63-297"><xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>定义结果字符串的总体格式。</span><span class="sxs-lookup"><span data-stu-id="36c63-297"><xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>, to define the overall format of the result string.</span></span>|  
|<span data-ttu-id="36c63-298">"u"（通用可排序日期/时间; 标准格式字符串）</span><span class="sxs-lookup"><span data-stu-id="36c63-298">"u" (universal sortable date/time; standard format string)</span></span>|<span data-ttu-id="36c63-299"><xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A>以协调世界时为 ISO 8601 标准定义符合的结果字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-299"><xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A>, to define a result string that conforms to the ISO 8601 standard for coordinated universal time.</span></span> <span data-ttu-id="36c63-300">该属性是只读的。</span><span class="sxs-lookup"><span data-stu-id="36c63-300">The property is read-only.</span></span>|  
|<span data-ttu-id="36c63-301">"U"（通用完整日期/时间; 标准格式字符串）</span><span class="sxs-lookup"><span data-stu-id="36c63-301">"U" (universal full date/time; standard format string)</span></span>|<span data-ttu-id="36c63-302"><xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>定义结果字符串的总体格式。</span><span class="sxs-lookup"><span data-stu-id="36c63-302"><xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>, to define the overall format of the result string.</span></span>|  
|<span data-ttu-id="36c63-303">"Y"，"y"（年月; 标准格式字符串）</span><span class="sxs-lookup"><span data-stu-id="36c63-303">"Y", "y" (year month; standard format string)</span></span>|<span data-ttu-id="36c63-304"><xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A>定义结果字符串的总体格式。</span><span class="sxs-lookup"><span data-stu-id="36c63-304"><xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A>, to define the overall format of the result string.</span></span>|  
|<span data-ttu-id="36c63-305">"ddd"（自定义格式说明符）</span><span class="sxs-lookup"><span data-stu-id="36c63-305">"ddd" (custom format specifier)</span></span>|<span data-ttu-id="36c63-306"><xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>若要在结果字符串中包含的日期是星期几的缩写的名称。</span><span class="sxs-lookup"><span data-stu-id="36c63-306"><xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>, to include the abbreviated name of the day of the week in the result string.</span></span>|  
|<span data-ttu-id="36c63-307">"g"、"gg"（自定义格式说明符）</span><span class="sxs-lookup"><span data-stu-id="36c63-307">"g", "gg" (custom format specifier)</span></span>|<span data-ttu-id="36c63-308">调用<xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A>结果字符串中插入纪元名称的方法。</span><span class="sxs-lookup"><span data-stu-id="36c63-308">Calls the <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A> method to insert the era name in the result string.</span></span>|  
|<span data-ttu-id="36c63-309">"MMM"（自定义格式说明符）</span><span class="sxs-lookup"><span data-stu-id="36c63-309">"MMM" (custom format specifier)</span></span>|<span data-ttu-id="36c63-310"><xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>要包含在结果字符串中的月份的缩写的名称。</span><span class="sxs-lookup"><span data-stu-id="36c63-310"><xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>, to include the abbreviated month name in the result string.</span></span>|  
|<span data-ttu-id="36c63-311">"MMMM"（自定义格式说明符）</span><span class="sxs-lookup"><span data-stu-id="36c63-311">"MMMM" (custom format specifier)</span></span>|<span data-ttu-id="36c63-312"><xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> 或<xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A>，以在结果字符串中包含完整的月份名称。</span><span class="sxs-lookup"><span data-stu-id="36c63-312"><xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> or <xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A>, to include the full month name in the result string.</span></span>|  
|<span data-ttu-id="36c63-313">"t"（自定义格式说明符）</span><span class="sxs-lookup"><span data-stu-id="36c63-313">"t" (custom format specifier)</span></span>|<span data-ttu-id="36c63-314"><xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> 或<xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>，以在结果字符串中包括的 AM/PM 指示符的第一个字符。</span><span class="sxs-lookup"><span data-stu-id="36c63-314"><xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> or <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>, to include the first character of the AM/PM designator in the result string.</span></span>|  
|<span data-ttu-id="36c63-315">"tt"（自定义格式说明符）</span><span class="sxs-lookup"><span data-stu-id="36c63-315">"tt" (custom format specifier)</span></span>|<span data-ttu-id="36c63-316"><xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> 或<xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>、 要包含在结果字符串中的完整 AM/PM 指示符。</span><span class="sxs-lookup"><span data-stu-id="36c63-316"><xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> or <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>, to include the full AM/PM designator in the result string.</span></span>|  
|<span data-ttu-id="36c63-317">":"（自定义格式说明符）</span><span class="sxs-lookup"><span data-stu-id="36c63-317">":" (custom format specifier)</span></span>|<span data-ttu-id="36c63-318"><xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A>若要在结果字符串中包括的时间分隔符。</span><span class="sxs-lookup"><span data-stu-id="36c63-318"><xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A>, to include the time separator in the result string.</span></span>|  
|<span data-ttu-id="36c63-319">"/"（自定义格式说明符）</span><span class="sxs-lookup"><span data-stu-id="36c63-319">"/" (custom format specifier)</span></span>|<span data-ttu-id="36c63-320"><xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A>若要在结果字符串中包含的日期分隔符。</span><span class="sxs-lookup"><span data-stu-id="36c63-320"><xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A>, to include the date separator in the result string.</span></span>|  
  
<a name="Modifying"></a>   
## <a name="modifying-datetimeformatinfo-properties"></a><span data-ttu-id="36c63-321">修改 DateTimeFormatInfo 属性</span><span class="sxs-lookup"><span data-stu-id="36c63-321">Modifying DateTimeFormatInfo properties</span></span>  
 <span data-ttu-id="36c63-322">你可以更改通过修改的可写的关联的属性的日期和时间格式字符串产生的结果字符串<xref:System.Globalization.DateTimeFormatInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-322">You can change the result string produced by date and time format strings by modifying the associated properties of a writable <xref:System.Globalization.DateTimeFormatInfo> object.</span></span> <span data-ttu-id="36c63-323">若要确定如果<xref:System.Globalization.DateTimeFormatInfo>对象是可写，则使用<xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-323">To determine if a <xref:System.Globalization.DateTimeFormatInfo> object is writable, use the <xref:System.Globalization.DateTimeFormatInfo.IsReadOnly%2A> property.</span></span> <span data-ttu-id="36c63-324">若要自定义<xref:System.Globalization.DateTimeFormatInfo>对象以这种方式：</span><span class="sxs-lookup"><span data-stu-id="36c63-324">To customize a <xref:System.Globalization.DateTimeFormatInfo> object in this way:</span></span>  
  
1.  <span data-ttu-id="36c63-325">创建的读/写副本<xref:System.Globalization.DateTimeFormatInfo>对象你想要修改其格式设置约定。</span><span class="sxs-lookup"><span data-stu-id="36c63-325">Create a read/write copy of a <xref:System.Globalization.DateTimeFormatInfo> object whose formatting conventions you want to modify.</span></span> <span data-ttu-id="36c63-326">(请参阅[DateTimeFormatInfo 对象进行实例化](#instantiating)部分。)</span><span class="sxs-lookup"><span data-stu-id="36c63-326">(See the [Instantiating a DateTimeFormatInfo object](#instantiating) section.)</span></span>  
  
2.  <span data-ttu-id="36c63-327">修改或多个用于生成所需的结果字符串的属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-327">Modify the property or properties that are used to produce the desired result string.</span></span> <span data-ttu-id="36c63-328">(有关如何格式设置方法使用<xref:System.Globalization.DateTimeFormatInfo>属性以定义结果字符串，请参阅上一节[格式化字符串和 DateTimeFormatInfo 属性](#properties)。)</span><span class="sxs-lookup"><span data-stu-id="36c63-328">(For information about how formatting methods use <xref:System.Globalization.DateTimeFormatInfo> properties to define result strings, see the previous section, [Format strings and DateTimeFormatInfo properties](#properties).)</span></span>  
  
3.  <span data-ttu-id="36c63-329">使用自定义<xref:System.Globalization.DateTimeFormatInfo>对象你创建为<xref:System.IFormatProvider>为格式化方法的调用中的自变量。</span><span class="sxs-lookup"><span data-stu-id="36c63-329">Use the custom <xref:System.Globalization.DateTimeFormatInfo> object you created as the <xref:System.IFormatProvider> argument in calls to formatting methods.</span></span>  
  
 <span data-ttu-id="36c63-330">有两种方法可更改的结果字符串的格式：</span><span class="sxs-lookup"><span data-stu-id="36c63-330">There are two other ways to change the format of a result string:</span></span>  
  
-   <span data-ttu-id="36c63-331">你可以使用<xref:System.Globalization.CultureAndRegionInfoBuilder>类来定义自定义区域性 （的区域性，它具有一个唯一的名称且补充现有区域性） 或替换区域性 （一个使用而不是特定区域性）。</span><span class="sxs-lookup"><span data-stu-id="36c63-331">You can use the <xref:System.Globalization.CultureAndRegionInfoBuilder> class to define either a custom culture (a culture that has a unique name and that supplements existing cultures) or a replacement culture (one that is used instead of a specific culture).</span></span> <span data-ttu-id="36c63-332">可以保存并以编程方式访问此区域性，就像任何<xref:System.Globalization.CultureInfo>.NET Framework 支持的对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-332">You can save and access this culture programmatically as you would any <xref:System.Globalization.CultureInfo> object supported by the .NET Framework.</span></span>  
  
-   <span data-ttu-id="36c63-333">如果结果字符串不区分区域性的并且不遵循预定义的格式，你可以使用自定义日期和时间格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-333">If the result string is not culture-sensitive and doesn't follow a predefined format, you can use a custom date and time format string.</span></span> <span data-ttu-id="36c63-334">例如，如果您要序列化格式 YYYYMMDDHHmmss 的日期和时间数据，你可以生成的结果字符串由传递的自定义格式字符串<xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType>方法，并且你可以将结果字符串转换回<xref:System.DateTime>值通过调用<xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="36c63-334">For example, if you are serializing date and time data in the format YYYYMMDDHHmmss, you can generate the result string by passing the custom format string to the <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> method, and you can  convert the result string back to a <xref:System.DateTime> value by calling the <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> method.</span></span>  
  
### <a name="changing-the-short-date-pattern"></a><span data-ttu-id="36c63-335">更改短日期模式</span><span class="sxs-lookup"><span data-stu-id="36c63-335">Changing the short date pattern</span></span>  
 <span data-ttu-id="36c63-336">以下示例更改"d"（短日期） 标准格式字符串由生成的结果字符串的格式。</span><span class="sxs-lookup"><span data-stu-id="36c63-336">The following example changes the format of a result string produced by the "d" (short date) standard format string.</span></span> <span data-ttu-id="36c63-337">更改关联<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>EN-US 或英语 （美国） 区域性，从"d/yyyy"到其默认属性"yyyy-"MM"-"dd"，并使用"d"标准格式字符串来显示日期之前和之后均<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>属性是更改。</span><span class="sxs-lookup"><span data-stu-id="36c63-337">It changes the associated <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> property for the en-US or English (United States) culture from its default of "M/d/yyyy" to "yyyy'-"MM"-"dd" and uses the "d" standard format string to display the date both before and after the <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> property is changed.</span></span>  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example1.cs#10)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example1.vb#10)]  
  
### <a name="changing-the-date-separator-character"></a><span data-ttu-id="36c63-338">更改日期分隔符字符</span><span class="sxs-lookup"><span data-stu-id="36c63-338">Changing the date separator character</span></span>  
 <span data-ttu-id="36c63-339">下面的示例更改中的日期分隔符字符<xref:System.Globalization.DateTimeFormatInfo>表示 FR-FR 区域性的格式设置约定的对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-339">The following example changes the date separator character in a <xref:System.Globalization.DateTimeFormatInfo> object that represents the formatting conventions of the fr-FR culture.</span></span> <span data-ttu-id="36c63-340">该示例使用"g"标准格式字符串来显示日期之前和之后均<xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A>属性更改。</span><span class="sxs-lookup"><span data-stu-id="36c63-340">The example uses the "g" standard format string to display the date both before and after the <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A> property is changed.</span></span>  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example3.cs#12)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example3.vb#12)]  
  
### <a name="changing-day-name-abbreviations-and-the-long-date-pattern"></a><span data-ttu-id="36c63-341">更改天名称缩写和的长日期模式</span><span class="sxs-lookup"><span data-stu-id="36c63-341">Changing day name abbreviations and the long date pattern</span></span>  
 <span data-ttu-id="36c63-342">在某些情况下，长日期模式中，通常会显示完整的日期和月份名称以及月份和年份中某天的数量，可能会太长。</span><span class="sxs-lookup"><span data-stu-id="36c63-342">In some cases, the long date pattern, which typically displays the full day and month name along with the number of the day of the month and the year, may be too long.</span></span> <span data-ttu-id="36c63-343">下面的示例将缩短要返回天数后跟一个字符或两个字符的星期几名称的缩写、 月份名称缩写和年的 EN-US 区域性的长日期模式。</span><span class="sxs-lookup"><span data-stu-id="36c63-343">The following example shortens the long date pattern for the en-US culture to return a one-character or two-character day name abbreviation followed by the day number, the month name abbreviation, and the year.</span></span> <span data-ttu-id="36c63-344">这是通过将分配到较短的一天名称缩写<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>数组，并通过修改自定义格式字符串分配给<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-344">It does this by assigning shorter day name abbreviations to the <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A> array, and by modifying the custom format string assigned to the <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> property.</span></span> <span data-ttu-id="36c63-345">这会影响结果字符串由"D"和"f"标准格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-345">This affects the result strings returned by the "D" and "f" standard format strings.</span></span>  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example2.cs#13)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example2.vb#13)]  
  
 <span data-ttu-id="36c63-346">通常，更改为<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>属性还会影响<xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>属性，又定义了"F"标准格式字符串返回的结果字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-346">Ordinarily, the change to the <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> property also affects the <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> property, which in turn defines the result string returned by the "F" standard format string.</span></span> <span data-ttu-id="36c63-347">若要保留原始完整的日期和时间模式，该示例将重新分配原始的自定义格式字符串分配给<xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>属性后的<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>修改属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-347">To preserve the original full date and time pattern, the example reassigns the original custom format string assigned to the <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> property after the <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> property is modified.</span></span>  
  
### <a name="changing-from-a-12-hour-clock-to-a-24-hour-clock"></a><span data-ttu-id="36c63-348">从以 12 小时时钟制更改为 24 小时制</span><span class="sxs-lookup"><span data-stu-id="36c63-348">Changing from a 12-hour clock to a 24-hour clock</span></span>  
 <span data-ttu-id="36c63-349">对于.NET Framework 中的许多区域性的时间表示通过以 12 小时时钟制和 AM/PM 指示符。</span><span class="sxs-lookup"><span data-stu-id="36c63-349">For many cultures in the .NET Framework, the time is expressed by using a 12-hour clock and an AM/PM designator.</span></span> <span data-ttu-id="36c63-350">下面的示例定义`ReplaceWith24HourClock`替换任何以 12 小时时钟制使用以使用 24 小时制的格式的时间格式的方法。</span><span class="sxs-lookup"><span data-stu-id="36c63-350">The following example defines a `ReplaceWith24HourClock` method that replaces any time format that uses a 12-hour clock with a format that uses a 24-hour clock.</span></span>  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example5.cs#14)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example5.vb#14)]  
  
 <span data-ttu-id="36c63-351">该示例使用正则表达式来修改格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-351">The example uses a regular expression to modify the format string.</span></span> <span data-ttu-id="36c63-352">正则表达式模式`@"^(?<openAMPM>\s*t+\s*)? (?(openAMPM) h+(?<nonHours>[^ht]+)$ | \s*h+(?<nonHours>[^ht]+)\s*t+)`，如下所示定义：</span><span class="sxs-lookup"><span data-stu-id="36c63-352">The regular expression pattern `@"^(?<openAMPM>\s*t+\s*)? (?(openAMPM) h+(?<nonHours>[^ht]+)$ | \s*h+(?<nonHours>[^ht]+)\s*t+)` is defined as follows:</span></span>  
  
|<span data-ttu-id="36c63-353">模式</span><span class="sxs-lookup"><span data-stu-id="36c63-353">Pattern</span></span>|<span data-ttu-id="36c63-354">描述</span><span class="sxs-lookup"><span data-stu-id="36c63-354">Description</span></span>|  
|-------------|-----------------|  
|`^`|<span data-ttu-id="36c63-355">从字符串开头开始匹配。</span><span class="sxs-lookup"><span data-stu-id="36c63-355">Begin the match at the beginning of the string.</span></span>|  
|`(?<openAMPM>\s*t+\s*)?`|<span data-ttu-id="36c63-356">匹配零个或一个匹配项的零个或多个空格字符后, 跟字母"t"一个或更多次后, 跟零个或多个空白字符。</span><span class="sxs-lookup"><span data-stu-id="36c63-356">Match zero or one occurrence of zero or more white-space characters, followed by the letter "t" one or more times, followed by zero or more white-space characters.</span></span> <span data-ttu-id="36c63-357">名为此捕获组`openAMPM`。</span><span class="sxs-lookup"><span data-stu-id="36c63-357">This capturing group is named `openAMPM`.</span></span>|  
|`(?(openAMPM) h+(?<nonHours>[^ht]+)$`|<span data-ttu-id="36c63-358">如果`openAMPM`组都没有匹配项，匹配的字母"h"一个或多个时间跟在非"h"非"t"的一个或多个字符。</span><span class="sxs-lookup"><span data-stu-id="36c63-358">If the `openAMPM` group has a match, match the letter "h" one or more times, followed by one or more characters that are neither "h" nor "t".</span></span> <span data-ttu-id="36c63-359">在字符串的结尾结束匹配。</span><span class="sxs-lookup"><span data-stu-id="36c63-359">The match ends at the end of the string.</span></span> <span data-ttu-id="36c63-360">后"h"包含在名为的捕获组捕获的所有字符`nonHours`。</span><span class="sxs-lookup"><span data-stu-id="36c63-360">All characters captured after "h" are included in a capturing group named `nonHours`.</span></span>|  
|`&#124; \s*h+(?<nonHours>[^ht]+)\s*t+)`|<span data-ttu-id="36c63-361">如果`openAMPM`组没有匹配项，匹配"h"一个或多个时间，跟一个或多个字符的非"h"非"t"后, 跟零个或多个空白字符的字母。</span><span class="sxs-lookup"><span data-stu-id="36c63-361">If the `openAMPM` group does not have a match, match the letter "h" one or more times, followed by one or more characters that are neither "h" nor "t", followed by zero or more white-space characters.</span></span> <span data-ttu-id="36c63-362">最后，匹配字母"t"的一个或多个匹配的项。</span><span class="sxs-lookup"><span data-stu-id="36c63-362">Finally, match one or more occurrences of the letter "t".</span></span> <span data-ttu-id="36c63-363">在"h"之后和之前的空白区域和"t"包括在名为的捕获组捕获的所有字符`nonHours`。</span><span class="sxs-lookup"><span data-stu-id="36c63-363">All characters captured after "h" and before the white-spaces and "t" are included in a capturing group named `nonHours`.</span></span>|  
  
 <span data-ttu-id="36c63-364">`nonHours`捕获组包含分钟和可能的自定义日期和时间格式字符串的第二个组件以及与任何时间分隔符符号。</span><span class="sxs-lookup"><span data-stu-id="36c63-364">The `nonHours` capturing group contains the minute and possibly the second component of a custom date and time format string, along with any time separator symbols.</span></span> <span data-ttu-id="36c63-365">替换模式`HH${nonHours}`前面添加对这些元素的子字符串"HH"。</span><span class="sxs-lookup"><span data-stu-id="36c63-365">The replacement pattern `HH${nonHours}` prepends the substring "HH" to these elements.</span></span>  
  
### <a name="displaying-and-changing-the-era-in-a-date"></a><span data-ttu-id="36c63-366">显示和更改日期中的纪元</span><span class="sxs-lookup"><span data-stu-id="36c63-366">Displaying and changing the era in a date</span></span>  
 <span data-ttu-id="36c63-367">下面的示例将添加到"g"自定义格式说明符<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>表示 EN-US 区域性的格式设置约定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-367">The following example adds the "g" custom format specifier to the  <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> property of an object that represents the formatting conventions of the en-US culture.</span></span> <span data-ttu-id="36c63-368">此添加影响以下三个标准格式字符串：</span><span class="sxs-lookup"><span data-stu-id="36c63-368">This addition affects the following three standard format strings:</span></span>  
  
-   <span data-ttu-id="36c63-369">"D"（长日期） 标准格式字符串，其直接映射到<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-369">The "D" (long date) standard format string, which maps directly to the <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> property.</span></span>  
  
-   <span data-ttu-id="36c63-370">"F"(完整日期 / 短时间) 标准格式字符串，产生的结果字符串串联的子字符串由<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>和<xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-370">The "f" (full date / short time) standard format string, which produces a result string that concatenates the substrings produced by the <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> and <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> properties.</span></span>  
  
-   <span data-ttu-id="36c63-371">"F"(完整日期 / 长时间) 标准格式字符串，直接映射到<xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-371">The "F" (full date / long time) standard format string, which maps directly to the <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> property.</span></span> <span data-ttu-id="36c63-372">因为我们未显式设置此属性值，动态生成通过串联<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>和<xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-372">Because we have not explicitly set this property value, it is generated dynamically by concatenating the <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> and <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> properties.</span></span>  
  
 <span data-ttu-id="36c63-373">该示例还演示如何更改其日历具有单个纪元区域性的纪元名称。</span><span class="sxs-lookup"><span data-stu-id="36c63-373">The example also shows how to change the era name for a culture whose calendar has a single era.</span></span> <span data-ttu-id="36c63-374">在这种情况下，EN-US 区域性使用公历，由表示<xref:System.Globalization.GregorianCalendar>对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-374">In this case, the en-US culture uses the Gregorian calendar, which is represented by a <xref:System.Globalization.GregorianCalendar> object.</span></span> <span data-ttu-id="36c63-375"><xref:System.Globalization.GregorianCalendar>类支持单个纪元，其名称公元</span><span class="sxs-lookup"><span data-stu-id="36c63-375">The <xref:System.Globalization.GregorianCalendar> class supports a single era, which it names A.D.</span></span> <span data-ttu-id="36c63-376">（公元）。</span><span class="sxs-lookup"><span data-stu-id="36c63-376">(Anno Domini).</span></span> <span data-ttu-id="36c63-377">该示例的纪元名称更改为公元</span><span class="sxs-lookup"><span data-stu-id="36c63-377">The example changes the era name to C.E.</span></span> <span data-ttu-id="36c63-378">（基督纪元） 通过将分配给格式字符串中的"g"自定义格式说明符<xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>与文字字符串的属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-378">(Common Era) by replacing the "g" custom format specifier in the format string assigned to the <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> property with a literal string.</span></span> <span data-ttu-id="36c63-379">文字字符串的使用是必需的因为通常返回纪元名称<xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A>从.NET Framework 或 Windows 操作系统提供的区域性表中的私有数据的方法。</span><span class="sxs-lookup"><span data-stu-id="36c63-379">The use of a literal string is necessary, because the era name is typically returned by the <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A> method from private data in the culture tables supplied by either the .NET Framework or the Windows operating system.</span></span>  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/example4.cs#11)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/example4.vb#11)]  
  
## <a name="parsing-date-and-time-strings"></a><span data-ttu-id="36c63-380">分析日期和时间字符串</span><span class="sxs-lookup"><span data-stu-id="36c63-380">Parsing date and time strings</span></span>  
 <span data-ttu-id="36c63-381">分析包括将转换的字符串表示形式的日期和时间<xref:System.DateTime>或<xref:System.DateTimeOffset>值。</span><span class="sxs-lookup"><span data-stu-id="36c63-381">Parsing involves converting the string representation of a date and time to a <xref:System.DateTime> or <xref:System.DateTimeOffset> value.</span></span> <span data-ttu-id="36c63-382">这两种类型包括`Parse`， `TryParse`， `ParseExact`，和`TryParseExact`方法，以支持分析操作。</span><span class="sxs-lookup"><span data-stu-id="36c63-382">Both of these types include the `Parse`, `TryParse`, `ParseExact`, and `TryParseExact` methods to support parsing operations.</span></span> <span data-ttu-id="36c63-383">`Parse`和`TryParse`的方法将转换可以具有多种格式，一个字符串，而`ParseExact`和`TryParseExact`要求字符串具有定义的格式。</span><span class="sxs-lookup"><span data-stu-id="36c63-383">The `Parse` and `TryParse` methods convert a string that can have a variety of formats, whereas `ParseExact` and `TryParseExact` require that the string have a defined format or formats.</span></span> <span data-ttu-id="36c63-384">如果在分析操作失败，`Parse`和`ParseExact`引发异常，而`TryParse`和`TryParseExact`返回`false`。</span><span class="sxs-lookup"><span data-stu-id="36c63-384">If the parsing operation fails, `Parse` and `ParseExact` throw an exception, whereas `TryParse` and `TryParseExact` return `false`.</span></span>  
  
 <span data-ttu-id="36c63-385">分析方法隐式或显式使用<xref:System.Globalization.DateTimeStyles>枚举值来确定的样式元素 （例如前导、 尾随，或内部空白） 可出现在字符串无法被分析，以及如何解释已分析的字符串或任何缺少元素。</span><span class="sxs-lookup"><span data-stu-id="36c63-385">The parsing methods implicitly or explicitly use a <xref:System.Globalization.DateTimeStyles> enumeration value to determine which style elements (such as leading, trailing, or inner white space) can be present in the string to be parsed, and how to interpret the parsed string or any missing elements.</span></span> <span data-ttu-id="36c63-386">如果未提供<xref:System.Globalization.DateTimeStyles>值在调用时`Parse`或`TryParse`方法，默认值是<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType>，这是包含的复合样式<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite?displayProperty=nameWithType>， <xref:System.Globalization.DateTimeStyles.AllowTrailingWhite?displayProperty=nameWithType>，和<xref:System.Globalization.DateTimeStyles.AllowInnerWhite?displayProperty=nameWithType>标志。</span><span class="sxs-lookup"><span data-stu-id="36c63-386">If you don't provide a <xref:System.Globalization.DateTimeStyles> value when you call the `Parse` or `TryParse` method, the default is <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType>, which is a composite style that includes the <xref:System.Globalization.DateTimeStyles.AllowLeadingWhite?displayProperty=nameWithType>, <xref:System.Globalization.DateTimeStyles.AllowTrailingWhite?displayProperty=nameWithType>, and <xref:System.Globalization.DateTimeStyles.AllowInnerWhite?displayProperty=nameWithType> flags.</span></span> <span data-ttu-id="36c63-387">有关`ParseExact`和`TryParseExact`方法，默认值是<xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>; 输入的字符串必须精确对应特定自定义日期和时间格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-387">For the `ParseExact` and `TryParseExact` methods, the default is <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>; the input string must correspond precisely to a particular custom date and time format string.</span></span>  
  
 <span data-ttu-id="36c63-388">分析方法，还将隐式或显式使用<xref:System.Globalization.DateTimeFormatInfo>定义特定的符号和模式的对象会导致要分析的字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-388">The parsing methods also implicitly or explicitly use a <xref:System.Globalization.DateTimeFormatInfo> object that defines the specific symbols and patterns that can occur in the string to be parsed.</span></span> <span data-ttu-id="36c63-389">如果未提供<xref:System.Globalization.DateTimeFormatInfo>对象，<xref:System.Globalization.DateTimeFormatInfo>默认情况下使用当前线程区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-389">If you don't provide a <xref:System.Globalization.DateTimeFormatInfo> object, the <xref:System.Globalization.DateTimeFormatInfo> object for the current thread culture is used by default.</span></span> <span data-ttu-id="36c63-390">有关分析日期和时间字符串的详细信息，请参阅各个的分析方法，如<xref:System.DateTime.Parse%2A?displayProperty=nameWithType>， <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType>， <xref:System.DateTimeOffset.ParseExact%2A?displayProperty=nameWithType>，和<xref:System.DateTimeOffset.TryParseExact%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="36c63-390">For more information about parsing date and time strings, see the individual parsing methods, such as <xref:System.DateTime.Parse%2A?displayProperty=nameWithType>, <xref:System.DateTime.TryParse%2A?displayProperty=nameWithType>, <xref:System.DateTimeOffset.ParseExact%2A?displayProperty=nameWithType>, and <xref:System.DateTimeOffset.TryParseExact%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="36c63-391">下面的示例阐释了分析的日期和时间字符串的区分区域性的性质。</span><span class="sxs-lookup"><span data-stu-id="36c63-391">The following example illustrates the culture-sensitive nature of parsing date and time strings.</span></span> <span data-ttu-id="36c63-392">它将尝试通过使用 EN-US、 EN-GB、 FR-FR 和 fi FI 区域性的约定来分析两个日期字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-392">It tries to parse two date strings by using the conventions of the en-US, en-GB, fr-FR, and fi-FI cultures.</span></span> <span data-ttu-id="36c63-393">将被解释为 8/18/2014 中为 EN-US 的日期区域性引发<xref:System.FormatException>在其他第三个异常区域性因为 18 解释为月份号。</span><span class="sxs-lookup"><span data-stu-id="36c63-393">The date that is interpreted as 8/18/2014 in the en-US culture throws a <xref:System.FormatException> exception in the other three cultures because 18 is interpreted as the month number.</span></span> <span data-ttu-id="36c63-394">2015 年 1 月 2 日被解析为 EN-US 区域性中的第一个月的第二个天而应用作剩余区域性的第二个月的第一天。</span><span class="sxs-lookup"><span data-stu-id="36c63-394">1/2/2015 is parsed as the second day of the first month in the en-US culture, but as the first day of the second month in the remaining cultures.</span></span>  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/parsing1.cs#15)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/parsing1.vb#15)]  
  
 <span data-ttu-id="36c63-395">有两个原因通常分析日期和时间的字符串：</span><span class="sxs-lookup"><span data-stu-id="36c63-395">Date and time strings are typically parsed for two reasons:</span></span>  
  
-   <span data-ttu-id="36c63-396">若要将用户输入转换为日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="36c63-396">To convert user input into a date and time value.</span></span>  
  
-   <span data-ttu-id="36c63-397">往返日期和时间值;也就是说，反序列化以前序列化为字符串的日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="36c63-397">To round-trip a date and time value; that is, to deserialize a date and time value that was previously serialized as a string.</span></span>  
  
 <span data-ttu-id="36c63-398">以下各节讨论更详细介绍这两个操作。</span><span class="sxs-lookup"><span data-stu-id="36c63-398">The following sections discuss these two operations in greater detail.</span></span>  
  
### <a name="parsing-user-strings"></a><span data-ttu-id="36c63-399">分析用户字符串</span><span class="sxs-lookup"><span data-stu-id="36c63-399">Parsing user strings</span></span>  
 <span data-ttu-id="36c63-400">当分析用户输入的日期和时间字符串时，应始终实例<xref:System.Globalization.DateTimeFormatInfo>反映用户的区域性设置，包括用户可能已做的任何自定义的对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-400">When you parse date and time strings input by the user, you should always instantiate a <xref:System.Globalization.DateTimeFormatInfo> object that reflects the user's cultural settings, including any customizations the user may have made.</span></span> <span data-ttu-id="36c63-401">否则，日期和时间对象可能具有不正确的值。</span><span class="sxs-lookup"><span data-stu-id="36c63-401">Otherwise, the  date and time object may have incorrect values.</span></span> <span data-ttu-id="36c63-402">有关如何实例化信息<xref:System.Globalization.DateTimeFormatInfo>对象以反映用户区域性自定义项，请参阅[DateTimeFormatInfo 和动态数据](#dynamic)部分。</span><span class="sxs-lookup"><span data-stu-id="36c63-402">For information about how to instantiate a <xref:System.Globalization.DateTimeFormatInfo> object that reflects user cultural customizations, see the [DateTimeFormatInfo and dynamic data](#dynamic) section.</span></span>  
  
 <span data-ttu-id="36c63-403">下面的示例演示的分析操作中反映用户区域性设置和不之间的差异。</span><span class="sxs-lookup"><span data-stu-id="36c63-403">The following example illustrates the difference between a parsing operation that reflects user cultural settings and one that does not.</span></span> <span data-ttu-id="36c63-404">在这种情况下，默认系统区域性为 EN-US，但用户使用控制面板中，**地区和语言**从其默认的"年-月-日"的短日期模式更改为"yy/MM/dd"。</span><span class="sxs-lookup"><span data-stu-id="36c63-404">In this case, the default system culture is en-US, but the user has used Control Panel, **Region and Language** to change the short date pattern from its default of "M/d/yyyy" to "yy/MM/dd".</span></span> <span data-ttu-id="36c63-405">当用户输入一个字符串，反映用户设置，并对字符串进行分析通过<xref:System.Globalization.DateTimeFormatInfo>还反映用户设置 （重写） 的对象在分析操作返回正确的结果。</span><span class="sxs-lookup"><span data-stu-id="36c63-405">When the user enters a string that reflects user settings, and the string is parsed by a <xref:System.Globalization.DateTimeFormatInfo> object that also reflects user settings (overrides), the parsing operation returns a correct result.</span></span> <span data-ttu-id="36c63-406">但是，对字符串分析通过<xref:System.Globalization.DateTimeFormatInfo>反映标准的 EN-US 区域性设置，则分析方法将引发的对象<xref:System.FormatException>异常因为它将解释 14 的月数不在一年的最后两位数。</span><span class="sxs-lookup"><span data-stu-id="36c63-406">However, when the string is parsed by a <xref:System.Globalization.DateTimeFormatInfo> object that reflects standard en-US cultural settings, the parsing method throws a <xref:System.FormatException> exception because it interprets 14 as the number of the month, not the last two digits of the year.</span></span>  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/parse2.cs#16)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/parse2.vb#16)]  
  
### <a name="serializing-and-deserializing-date-and-time-data"></a><span data-ttu-id="36c63-407">序列化和反序列化的日期和时间数据</span><span class="sxs-lookup"><span data-stu-id="36c63-407">Serializing and deserializing date and time data</span></span>  
 <span data-ttu-id="36c63-408">序列化日期和时间数据应保存/还原;也就是说，所有序列化和反序列化的值应完全相同。</span><span class="sxs-lookup"><span data-stu-id="36c63-408">Serialized date and time data are expected to round-trip; that is, all serialized and deserialized values should be identical.</span></span> <span data-ttu-id="36c63-409">如果日期和时间值表示单个时刻，反序列化的值应表示相同时间点而不考虑区域性或在其还原系统的时区。</span><span class="sxs-lookup"><span data-stu-id="36c63-409">If a date and time value represents a single moment in time, the deserialized value should represent the same moment in time regardless of the culture or time zone of the system on which it was restored.</span></span> <span data-ttu-id="36c63-410">往返行程日期和时间数据成功，你必须使用固定区域性，返回的约定<xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A>属性，以生成和分析数据。</span><span class="sxs-lookup"><span data-stu-id="36c63-410">To round-trip date and time data successfully, you must use the conventions of the invariant culture, which is returned by the <xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A> property, to generate and parse the data.</span></span> <span data-ttu-id="36c63-411">在格式设置和分析操作应永远不会反映的默认区域性的约定。</span><span class="sxs-lookup"><span data-stu-id="36c63-411">The formatting and parsing operations should never reflect the conventions of the default culture.</span></span> <span data-ttu-id="36c63-412">如果你使用默认区域性设置，数据的可移植性是严格限制;它可以是线程的仅在线程的区域性特定的设置是线程的相同的依据其进行序列化上成功反序列化。</span><span class="sxs-lookup"><span data-stu-id="36c63-412">If you use default cultural settings, the portability of the data is strictly limited; it can be successfully deserialized only on a thread whose cultural-specific settings are identical to those of the thread on which it was serialized.</span></span> <span data-ttu-id="36c63-413">在某些情况下，这意味着，数据无法甚至成功序列化和反序列化相同系统上。</span><span class="sxs-lookup"><span data-stu-id="36c63-413">In some cases, this means that the data cannot even be successfully serialized and deserialized on the same system.</span></span>  
  
 <span data-ttu-id="36c63-414">如果日期和时间值的时间组件非常重要，它应此外转换为 UTC，并且使用"o"或"r"序列化[标准格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="36c63-414">If the time component of a date and time value is significant, it should also be converted to UTC and serialized by using the "o" or "r" [standard format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md).</span></span> <span data-ttu-id="36c63-415">然后可以通过调用分析方法并将其传递相应的格式字符串沿具有固定区域性为还原时间数据`provider`自变量。</span><span class="sxs-lookup"><span data-stu-id="36c63-415">The time data can then be restored by calling a parsing method and passing it the appropriate format string along with the invariant culture as the `provider` argument.</span></span>  
  
 <span data-ttu-id="36c63-416">下面的示例阐释了往返日期和时间值的过程。</span><span class="sxs-lookup"><span data-stu-id="36c63-416">The following example illustrates the process of round-tripping a date and time value.</span></span> <span data-ttu-id="36c63-417">其序列化的日期和时间观察到美国的系统上太平洋时间和当前区域性为 EN-US。</span><span class="sxs-lookup"><span data-stu-id="36c63-417">It serializes a date and time on a system that observes U.S. Pacific time and whose current culture is en-US.</span></span>  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/serialize1.cs#17)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/serialize1.vb#17)]  
  
 <span data-ttu-id="36c63-418">反序列化布鲁塞尔、 哥本哈根、 马德里和巴黎时区中的系统上的数据和当前区域性为 fr 法属</span><span class="sxs-lookup"><span data-stu-id="36c63-418">It deserializes the data on a system in the Brussels, Copenhagen, Madrid and Paris time zone and whose current culture is fr-FR.</span></span> <span data-ttu-id="36c63-419">还原的日期是 9 个小时晚于原始日期，反映从 UTC 晚八个小时到早于 UTC 一小时时区调整。</span><span class="sxs-lookup"><span data-stu-id="36c63-419">The restored date is nine hours later than the original date, which reflects the time zone adjustment from eight hours behind UTC to one hour ahead of UTC.</span></span> <span data-ttu-id="36c63-420">原始日期和还原的日期表示相同的时刻。</span><span class="sxs-lookup"><span data-stu-id="36c63-420">Both the original date and the restored date represent the same moment in time.</span></span>  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/serialize2.cs#18)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/serialize2.vb#18)]  
  
   
  
## Examples  
 <span data-ttu-id="36c63-421">下面的示例使用反射获取的属性<xref:System.Globalization.DateTimeFormatInfo>英语 （美国） 区域性的对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-421">The following example uses reflection to get the properties of the <xref:System.Globalization.DateTimeFormatInfo> object for the English (United States) culture.</span></span> <span data-ttu-id="36c63-422">它显示这些属性包含自定义格式字符串的值，并使用这些字符串来显示日期的格式。</span><span class="sxs-lookup"><span data-stu-id="36c63-422">It displays the value of those properties that contain custom format strings and uses those strings to display formatted dates.</span></span>  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/cs/format1.cs#5)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.class/vb/format1.vb#5)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.DateTime" />
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="T:System.Globalization.CultureInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTimeFormatInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeFormatInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="36c63-423">初始化不依赖于区域性的（固定的）<see cref="T:System.Globalization.DateTimeFormatInfo" /> 类的新可写实例。</span><span class="sxs-lookup"><span data-stu-id="36c63-423">Initializes a new writable instance of the <see cref="T:System.Globalization.DateTimeFormatInfo" /> class that is culture-independent (invariant).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-424">此构造函数创建<xref:System.Globalization.DateTimeFormatInfo>表示固定区域性的日期和时间信息的对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-424">This constructor creates a <xref:System.Globalization.DateTimeFormatInfo> object that represents the date and time information of the invariant culture.</span></span> <span data-ttu-id="36c63-425">若要创建<xref:System.Globalization.DateTimeFormatInfo>特定区域性的对象，请创建<xref:System.Globalization.CultureInfo>该区域性对象，并检索<xref:System.Globalization.DateTimeFormatInfo>对象由其<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-425">To create a <xref:System.Globalization.DateTimeFormatInfo> object for a specific culture, create a <xref:System.Globalization.CultureInfo> object for that culture and retrieve the <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="36c63-426">属性<xref:System.Globalization.DateTimeFormatInfo>可以修改此构造函数创建的对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-426">The properties of the <xref:System.Globalization.DateTimeFormatInfo> object created by this constructor can be modified.</span></span> <span data-ttu-id="36c63-427">但是，不能修改<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>属性，因为固定区域性支持的本地化的版本的公历。</span><span class="sxs-lookup"><span data-stu-id="36c63-427">However, you cannot modify the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property, because the invariant culture supports only a localized version of the Gregorian calendar.</span></span> <span data-ttu-id="36c63-428">若要创建<xref:System.Globalization.DateTimeFormatInfo>对象，它使用特定的日历，必须实例化<xref:System.Globalization.CultureInfo>对象，该对象支持的日历和分配到日历<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>属性<xref:System.Globalization.DateTimeFormatInfo>返回对象<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>属性.</span><span class="sxs-lookup"><span data-stu-id="36c63-428">To create a <xref:System.Globalization.DateTimeFormatInfo> object that uses a specific calendar, you must instantiate a <xref:System.Globalization.CultureInfo> object that supports that calendar and assign the calendar to the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of the <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
      </Docs>
    </Member>
    <Member MemberName="AbbreviatedDayNames">
      <MemberSignature Language="C#" Value="public string[] AbbreviatedDayNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AbbreviatedDayNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
      <MemberSignature Language="VB.NET" Value="Public Property AbbreviatedDayNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AbbreviatedDayNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36c63-429">获取或设置 <see cref="T:System.String" /> 类型的一维数组，它包含周中各天的区域性特定的缩写名称。</span><span class="sxs-lookup"><span data-stu-id="36c63-429">Gets or sets a one-dimensional array of type <see cref="T:System.String" /> containing the culture-specific abbreviated names of the days of the week.</span></span></summary>
        <value><span data-ttu-id="36c63-430">一个类型 <see cref="T:System.String" /> 的一维数组，它包含周中各天的特定于区域性的缩写名称。</span><span class="sxs-lookup"><span data-stu-id="36c63-430">A one-dimensional array of type <see cref="T:System.String" /> containing the culture-specific abbreviated names of the days of the week.</span></span> <span data-ttu-id="36c63-431"><see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> 的数组包含"Sun"、"Mon"、"Tue"、"Wed"、"Thu"、"Fri"和"Sat"。</span><span class="sxs-lookup"><span data-stu-id="36c63-431">The array for <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> contains "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", and "Sat".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-432">如果设置此属性，该数组必须是一维，并且必须完全七个元素。</span><span class="sxs-lookup"><span data-stu-id="36c63-432">If setting this property, the array must be one-dimensional and must have exactly seven elements.</span></span> <span data-ttu-id="36c63-433">第一个元素 （位于索引零的元素） 表示由定义日历中每周的第一天<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-433">The first element (the element at index zero) represents the first day of the week in the calendar defined by the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property.</span></span>  
  
 <span data-ttu-id="36c63-434">如果自定义格式字符串中包含"ddd"格式说明符，<xref:System.DateTime.ToString%2A?displayProperty=nameWithType>或<xref:System.DateTimeOffset.ToString%2A>方法包含的适当成员<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>代替"ddd"在结果字符串中的数组。</span><span class="sxs-lookup"><span data-stu-id="36c63-434">If a custom format string includes the "ddd" format specifier, the <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> or <xref:System.DateTimeOffset.ToString%2A> method includes the appropriate member of the <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A> array in place of the "ddd" in the result string.</span></span>  
  
 <span data-ttu-id="36c63-435">如果此属性受影响的值<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>属性更改。</span><span class="sxs-lookup"><span data-stu-id="36c63-435">This property is affected if the value of the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property changes.</span></span> <span data-ttu-id="36c63-436">如果所选<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>不支持缩写的星期几名称，则数组包含完整的星期几名称。</span><span class="sxs-lookup"><span data-stu-id="36c63-436">If the selected <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> does not support abbreviated day names, the array contains the full day names.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36c63-437">下面的示例创建读/写<xref:System.Globalization.CultureInfo>对象，表示英语 （美国） 区域性，并将分配缩写的星期几名称到其<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-437">The following example creates a read/write <xref:System.Globalization.CultureInfo> object that represents the English (United States) culture and assigns abbreviated day names to its <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A> property.</span></span> <span data-ttu-id="36c63-438">然后，它使用中的"ddd"格式说明符来显示的字符串表示形式从 2014 年 5 月 28 日开始的一周的日期。</span><span class="sxs-lookup"><span data-stu-id="36c63-438">It then uses the "ddd" format specifier in a  to display the string representation of dates for one week beginning May 28, 2014.</span></span>  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviateddaynames/cs/abbreviateddaynames1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviateddaynames/vb/abbreviateddaynames1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="36c63-439">该属性设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="36c63-439">The property is being set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="36c63-440">该属性正被设置为多维数组或者长度不是正好为 7 的数组。</span><span class="sxs-lookup"><span data-stu-id="36c63-440">The property is being set to an array that is multidimensional or that has a length that is not exactly 7.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="36c63-441">设置了该属性，但 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象为只读。</span><span class="sxs-lookup"><span data-stu-id="36c63-441">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</span></span></exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.DayNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedDayName(System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="AbbreviatedMonthGenitiveNames">
      <MemberSignature Language="C#" Value="public string[] AbbreviatedMonthGenitiveNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AbbreviatedMonthGenitiveNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
      <MemberSignature Language="VB.NET" Value="Public Property AbbreviatedMonthGenitiveNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AbbreviatedMonthGenitiveNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36c63-442">获取或设置与当前 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象关联的月份缩写名称的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="36c63-442">Gets or sets a string array of abbreviated month names associated with the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object.</span></span></summary>
        <value><span data-ttu-id="36c63-443">月份缩写名称的数组。</span><span class="sxs-lookup"><span data-stu-id="36c63-443">An array of abbreviated month names.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-444">在某些语言中，日期部分的月份名称将出现在所有格中。</span><span class="sxs-lookup"><span data-stu-id="36c63-444">In some languages, a month name that is part of a date appears in the genitive case.</span></span> <span data-ttu-id="36c63-445">例如，RU-RU 或俄语 （俄罗斯） 区域性中的日期由天数和所有格月份名称，如 1 Января （1 年 1 月） 组成。</span><span class="sxs-lookup"><span data-stu-id="36c63-445">For example, a date in the ru-RU or Russian (Russia) culture consists of the day number and the genitive month name, such as 1 Января (1 January).</span></span> <span data-ttu-id="36c63-446">对于这些区域性，如果自定义格式字符串中包含"MMM"格式说明符，<xref:System.DateTime.ToString%2A?displayProperty=nameWithType>或<xref:System.DateTimeOffset.ToString%2A>方法包含的适当成员<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A>代替在结果字符串中的"MMM"的数组。</span><span class="sxs-lookup"><span data-stu-id="36c63-446">For these cultures, if a custom format string includes the "MMM" format specifier, the <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> or <xref:System.DateTimeOffset.ToString%2A> method includes the appropriate member of the <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> array in place of the "MMM" in the result string.</span></span>  
  
 <span data-ttu-id="36c63-447">在集运算中，该数组必须是一维 13 个元素，因为<xref:System.Globalization.Calendar>对象提供有 13 个月的日历。</span><span class="sxs-lookup"><span data-stu-id="36c63-447">In a set operation, the array must be one-dimensional with exactly 13 elements, because <xref:System.Globalization.Calendar> objects accommodate calendars that have 13 months.</span></span> <span data-ttu-id="36c63-448">对于具有 12 个月的日历，第 13 个元素应为<xref:System.String.Empty?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="36c63-448">For calendars that have 12 months, the thirteenth element should be <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="36c63-449">第一个元素 （位于索引零的元素） 表示由该年的第一个月<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-449">The first element (the element at index zero) represents the first month of the year defined by the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property.</span></span>  
  
 <span data-ttu-id="36c63-450">如果你设置<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A>属性，还必须设置<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-450">If you set the <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> property, you must also set the <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36c63-451">下面的示例创建读/写<xref:System.Globalization.CultureInfo>对象，表示英语 （美国） 区域性，并将分配缩写所有格月份名称传递给其<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>和<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-451">The following example creates a read/write <xref:System.Globalization.CultureInfo> object that represents the English (United States) culture and assigns abbreviated genitive month names to its <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> and <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> properties.</span></span> <span data-ttu-id="36c63-452">然后，它显示的字符串表示形式包括区域性的支持日历中每个月的缩写的月份名称的日期。</span><span class="sxs-lookup"><span data-stu-id="36c63-452">It then displays the string representation of dates that include the abbreviated month name of each month in the culture's supported calendar.</span></span>  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/cs/abbreviatedmonthnames1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/vb/abbreviatedmonthnames1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="36c63-453">在设置操作中，该数组是多维数组或者长度不是正好为 13 的数组。</span><span class="sxs-lookup"><span data-stu-id="36c63-453">In a set operation, the array is multidimensional or has a length that is not exactly 13.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="36c63-454">在设置操作中，数组或数组的其中一个元素为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="36c63-454">In a set operation, the array or one of the elements of the array is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="36c63-455">在设置操作中，当前的 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象是只读的。</span><span class="sxs-lookup"><span data-stu-id="36c63-455">In a set operation, the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</span></span></exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      </Docs>
    </Member>
    <Member MemberName="AbbreviatedMonthNames">
      <MemberSignature Language="C#" Value="public string[] AbbreviatedMonthNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AbbreviatedMonthNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      <MemberSignature Language="VB.NET" Value="Public Property AbbreviatedMonthNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AbbreviatedMonthNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36c63-456">获取或设置一维字符串数组，它包含各月的特定于区域性的缩写名称。</span><span class="sxs-lookup"><span data-stu-id="36c63-456">Gets or sets a one-dimensional string array that contains the culture-specific abbreviated names of the months.</span></span></summary>
        <value><span data-ttu-id="36c63-457">一个具有 13 个元素的一维字符串数组，它包含各月的特定于区域性的缩写名称。</span><span class="sxs-lookup"><span data-stu-id="36c63-457">A one-dimensional string array with 13 elements that contains the culture-specific abbreviated names of the months.</span></span> <span data-ttu-id="36c63-458">对于 12 个月的日历，数组的第 13 个元素是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-458">For 12-month calendars, the 13th element of the array is an empty string.</span></span> <span data-ttu-id="36c63-459"><see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> 数组包含"Jan"、"Feb"、"Mar"、"Apr"、"May"、"Jun"、"Jul"、"Aug"、"Sep"、"Oct"、"Nov"、"Dec"和""。</span><span class="sxs-lookup"><span data-stu-id="36c63-459">The array for <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> contains "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", and "".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-460">如果设置此属性，必须完全 13 个元素的一维数组。</span><span class="sxs-lookup"><span data-stu-id="36c63-460">If you set this property, the array must be one-dimensional with exactly 13 elements.</span></span> <span data-ttu-id="36c63-461"><xref:System.Globalization.Calendar> 对象提供具有 13 个月的日历。</span><span class="sxs-lookup"><span data-stu-id="36c63-461"><xref:System.Globalization.Calendar> objects accommodate calendars with 13 months.</span></span> <span data-ttu-id="36c63-462">第一个元素 （位于索引零的元素） 表示由该年的第一个月<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-462">The first element (the element at index zero) represents the first month of the year defined by the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property.</span></span>  
  
 <span data-ttu-id="36c63-463">如果你设置<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>属性，还必须设置<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-463">If you set the <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> property, you must also set the <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> property.</span></span> <span data-ttu-id="36c63-464"><xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>和<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A>属性用于设置使用以下格式字符串的日期格式：</span><span class="sxs-lookup"><span data-stu-id="36c63-464">The <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> and <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> properties are used to format dates using the following format strings:</span></span>  
  
-   <span data-ttu-id="36c63-465">标准日期和时间格式字符串，别名自定义格式字符串，其中包含"MMM"格式说明符。</span><span class="sxs-lookup"><span data-stu-id="36c63-465">A standard date and time format string that aliases a custom format string that includes the "MMM" format specifier.</span></span>  
  
-   <span data-ttu-id="36c63-466">自定义日期和时间格式字符串，其中包含"MMM"格式说明符。</span><span class="sxs-lookup"><span data-stu-id="36c63-466">A custom date and time format string that includes the "MMM" format specifier.</span></span>  
  
 <span data-ttu-id="36c63-467">如果此属性受影响的值<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>属性更改。</span><span class="sxs-lookup"><span data-stu-id="36c63-467">This property is affected if the value of the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property changes.</span></span> <span data-ttu-id="36c63-468">如果所选<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>不支持缩写的月份名称、 该数组包含的完整月份名称。</span><span class="sxs-lookup"><span data-stu-id="36c63-468">If the selected <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> does not support abbreviated month names, the array contains the full month names.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36c63-469">下面的示例创建读/写<xref:System.Globalization.CultureInfo>对象，表示英语 （美国） 区域性，并将分配缩写所有格月份名称传递给其<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>和<xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-469">The following example creates a read/write <xref:System.Globalization.CultureInfo> object that represents the English (United States) culture and assigns abbreviated genitive month names to its <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A> and <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames%2A> properties.</span></span> <span data-ttu-id="36c63-470">然后，它显示的字符串表示形式包括区域性的支持日历中每个月的缩写的名称的日期。</span><span class="sxs-lookup"><span data-stu-id="36c63-470">It then displays the string representation of dates that include the abbreviated name of each month in the culture's supported calendar.</span></span>  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/cs/abbreviatedmonthnames1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.abbreviatedmonthgenitivenames/vb/abbreviatedmonthnames1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="36c63-471">该属性设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="36c63-471">The property is being set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="36c63-472">该属性正被设置为多维数组或者长度不是正好为 13 的数组。</span><span class="sxs-lookup"><span data-stu-id="36c63-472">The property is being set to an array that is multidimensional or that has a length that is not exactly 13.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="36c63-473">设置了该属性，但 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象为只读。</span><span class="sxs-lookup"><span data-stu-id="36c63-473">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</span></span></exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedMonthName(System.Int32)" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
      </Docs>
    </Member>
    <Member MemberName="AMDesignator">
      <MemberSignature Language="C#" Value="public string AMDesignator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AMDesignator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.AMDesignator" />
      <MemberSignature Language="VB.NET" Value="Public Property AMDesignator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AMDesignator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36c63-474">获取或设置表示处于“上午”（中午前）的各小时的字符串指示符。</span><span class="sxs-lookup"><span data-stu-id="36c63-474">Gets or sets the string designator for hours that are "ante meridiem" (before noon).</span></span></summary>
        <value><span data-ttu-id="36c63-475">表示属于上午的各小时的字符串指示符。</span><span class="sxs-lookup"><span data-stu-id="36c63-475">The string designator for hours that are ante meridiem.</span></span> <span data-ttu-id="36c63-476"><see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> 的默认值为"AM"。</span><span class="sxs-lookup"><span data-stu-id="36c63-476">The default for <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> is "AM".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-477"><xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A>属性适用于所有时间从 0:00:00 （午夜） 到 11:59:59.999。</span><span class="sxs-lookup"><span data-stu-id="36c63-477">The <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> property is used for all times from 0:00:00 (midnight) to 11:59:59.999.</span></span>  
  
 <span data-ttu-id="36c63-478">如果自定义格式字符串中包含"tt"格式说明符，时间是在中午前，<xref:System.DateTime.ToString%2A?displayProperty=nameWithType>或<xref:System.DateTimeOffset.ToString%2A>方法包含的值<xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A>来代替"tt"在结果字符串中的属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-478">If a custom format string includes the "tt" format specifier and the time is before noon, the <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> or <xref:System.DateTimeOffset.ToString%2A> method includes the value of the <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> property in place of "tt" in the result string.</span></span> <span data-ttu-id="36c63-479">如果自定义格式字符串中包含"t"自定义格式说明符，仅首字符的<xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A>属性值将包括在内。</span><span class="sxs-lookup"><span data-stu-id="36c63-479">If the custom format string includes the "t" custom format specifier, only the first character of the <xref:System.Globalization.DateTimeFormatInfo.AMDesignator%2A> property value is included.</span></span> <span data-ttu-id="36c63-480">它是需要维护 A.M.之间差异的语言，应使用"tt"</span><span class="sxs-lookup"><span data-stu-id="36c63-480">You should use "tt" for languages for which it is necessary to maintain the distinction between A.M.</span></span> <span data-ttu-id="36c63-481">和下午</span><span class="sxs-lookup"><span data-stu-id="36c63-481">and P.M.</span></span> <span data-ttu-id="36c63-482">一个示例是日语，在其中上午</span><span class="sxs-lookup"><span data-stu-id="36c63-482">An example is Japanese, in which the A.M.</span></span> <span data-ttu-id="36c63-483">和下午</span><span class="sxs-lookup"><span data-stu-id="36c63-483">and P.M.</span></span> <span data-ttu-id="36c63-484">指示符的差异而不是第一个字符的第二个字符。</span><span class="sxs-lookup"><span data-stu-id="36c63-484">designators differ in the second character instead of the first character.</span></span>  
  
 <span data-ttu-id="36c63-485">对于不使用上午区域性</span><span class="sxs-lookup"><span data-stu-id="36c63-485">For cultures that do not use an A.M.</span></span> <span data-ttu-id="36c63-486">指示符，此属性返回一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-486">designator, this property returns an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="36c63-487">该属性设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="36c63-487">The property is being set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="36c63-488">设置了该属性，但 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象为只读。</span><span class="sxs-lookup"><span data-stu-id="36c63-488">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</span></span></exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.PMDesignator" />
      </Docs>
    </Member>
    <Member MemberName="Calendar">
      <MemberSignature Language="C#" Value="public System.Globalization.Calendar Calendar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.Calendar Calendar" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.Calendar" />
      <MemberSignature Language="VB.NET" Value="Public Property Calendar As Calendar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::Calendar ^ Calendar { System::Globalization::Calendar ^ get(); void set(System::Globalization::Calendar ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36c63-489">获取或设置用于当前区域性的日历。</span><span class="sxs-lookup"><span data-stu-id="36c63-489">Gets or sets the calendar to use for the current culture.</span></span></summary>
        <value><span data-ttu-id="36c63-490">用于当前区域性的日历。</span><span class="sxs-lookup"><span data-stu-id="36c63-490">The calendar to use for the current culture.</span></span> <span data-ttu-id="36c63-491"><see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> 的默认值是一个 <see cref="T:System.Globalization.GregorianCalendar" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-491">The default for <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> is a <see cref="T:System.Globalization.GregorianCalendar" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-492"><xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>属性接受对与关联的区域性有效的日历<xref:System.Globalization.DateTimeFormatInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-492">The <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property accepts only calendars that are valid for the culture that is associated with the <xref:System.Globalization.DateTimeFormatInfo> object.</span></span> <span data-ttu-id="36c63-493"><xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType>属性指定可由特定区域性的日历和<xref:System.Globalization.CultureInfo.Calendar%2A?displayProperty=nameWithType>属性指定区域性的默认日历。</span><span class="sxs-lookup"><span data-stu-id="36c63-493">The <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType> property specifies the calendars that can be used by a particular culture, and the <xref:System.Globalization.CultureInfo.Calendar%2A?displayProperty=nameWithType> property specifies the default calendar for the culture.</span></span>  
  
 <span data-ttu-id="36c63-494">更改此属性的值会影响以下属性： <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A>， <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>， <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A>， <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>， <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A>， <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>， <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>， <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>， <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>， <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A>和<xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A>。</span><span class="sxs-lookup"><span data-stu-id="36c63-494">Changing the value of this property affects the following properties as well: <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames%2A>, <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A>, <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>, <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>, <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A>, and <xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A>.</span></span>  
  
 <span data-ttu-id="36c63-495">例如，如果当前线程的区域性为日语，此属性接受<xref:System.Globalization.JapaneseCalendar>， <xref:System.Globalization.GregorianCalendarTypes.Localized> <xref:System.Globalization.GregorianCalendar>，或<xref:System.Globalization.GregorianCalendarTypes.USEnglish> <xref:System.Globalization.GregorianCalendar>。</span><span class="sxs-lookup"><span data-stu-id="36c63-495">For example, if the culture of the current thread is Japanese, this property accepts <xref:System.Globalization.JapaneseCalendar>, <xref:System.Globalization.GregorianCalendarTypes.Localized><xref:System.Globalization.GregorianCalendar>, or <xref:System.Globalization.GregorianCalendarTypes.USEnglish><xref:System.Globalization.GregorianCalendar>.</span></span> <span data-ttu-id="36c63-496">当<xref:System.Globalization.JapaneseCalendar>使用默认的长日期说明符是"gg y '\x5e74 AM' \x6708 具有 \x65e5"。</span><span class="sxs-lookup"><span data-stu-id="36c63-496">When the <xref:System.Globalization.JapaneseCalendar> is used, the default long date specifier is "gg y'\x5e74'M'\x6708'd'\x65e5'".</span></span> <span data-ttu-id="36c63-497">当<xref:System.Globalization.GregorianCalendarTypes.Localized> <xref:System.Globalization.GregorianCalendar>，使用默认的长日期说明符是"yyyy '\x5e74 AM' \x6708 具有 \x65e5"。</span><span class="sxs-lookup"><span data-stu-id="36c63-497">When the <xref:System.Globalization.GregorianCalendarTypes.Localized><xref:System.Globalization.GregorianCalendar>, is used, the default long date specifier is "yyyy'\x5e74'M'\x6708'd'\x65e5'".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36c63-498">下面的示例定义`ChangeCalendar`区域性的当前日历更改为指定日历，除非它已是当前日历或不受区域性的方法。</span><span class="sxs-lookup"><span data-stu-id="36c63-498">The following example defines a `ChangeCalendar` method that changes a culture's current calendar to a specified calendar unless it is already the current calendar or if it is not supported by the culture.</span></span> <span data-ttu-id="36c63-499">调用的方法的代码实例化<xref:System.Globalization.CultureInfo>对象，表示阿拉伯语 （埃及） 区域性并首先尝试更改其日历为日本日历。</span><span class="sxs-lookup"><span data-stu-id="36c63-499">The code that calls the method instantiates a <xref:System.Globalization.CultureInfo> object that represents the Arabic (Egypt) culture and first attempts to change its calendar to the Japanese calendar.</span></span> <span data-ttu-id="36c63-500">由于不支持日语日历，则该方法会使不更改区域性的日历。</span><span class="sxs-lookup"><span data-stu-id="36c63-500">Because the Japanese calendar is not supported, the method makes not change the culture's calendar.</span></span> <span data-ttu-id="36c63-501">但是，因为 um al Qura 日历为属于<xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType>集合，该方法未在当前日历从而的成功 AR-EG 区域性。</span><span class="sxs-lookup"><span data-stu-id="36c63-501">However, because the Umm al-Qura calendar is a member of the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType> collection, the method does succeed in making it the current calendar for the ar-EG culture.</span></span>  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.Calendar/cs/CalendarTest1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.Calendar/vb/CalendarTest1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="36c63-502">该属性设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="36c63-502">The property is being set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="36c63-503">该属性正被设置为对当前区域性无效的 <see cref="T:System.Globalization.Calendar" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-503">The property is being set to a <see cref="T:System.Globalization.Calendar" /> object that is not valid for the current culture.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="36c63-504">设置了该属性，但 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象为只读。</span><span class="sxs-lookup"><span data-stu-id="36c63-504">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</span></span></exception>
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName="CalendarWeekRule">
      <MemberSignature Language="C#" Value="public System.Globalization.CalendarWeekRule CalendarWeekRule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarWeekRule CalendarWeekRule" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.CalendarWeekRule" />
      <MemberSignature Language="VB.NET" Value="Public Property CalendarWeekRule As CalendarWeekRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CalendarWeekRule CalendarWeekRule { System::Globalization::CalendarWeekRule get(); void set(System::Globalization::CalendarWeekRule value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarWeekRule</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36c63-505">获取或设置一个值，该值指定使用哪个规则确定该年的第一个日历周。</span><span class="sxs-lookup"><span data-stu-id="36c63-505">Gets or sets a value that specifies which rule is used to determine the first calendar week of the year.</span></span></summary>
        <value><span data-ttu-id="36c63-506">确定该年的第一个日历周的值。</span><span class="sxs-lookup"><span data-stu-id="36c63-506">A value that determines the first calendar week of the year.</span></span> <span data-ttu-id="36c63-507"><see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> 的默认值是 <see cref="F:System.Globalization.CalendarWeekRule.FirstDay" />。</span><span class="sxs-lookup"><span data-stu-id="36c63-507">The default for <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> is <see cref="F:System.Globalization.CalendarWeekRule.FirstDay" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-508">如果此属性受影响的值<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>属性更改。</span><span class="sxs-lookup"><span data-stu-id="36c63-508">This property is affected if the value of the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property changes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="36c63-509">该属性正被设置的值不是有效的 <see cref="T:System.Globalization.CalendarWeekRule" /> 值。</span><span class="sxs-lookup"><span data-stu-id="36c63-509">The property is being set to a value that is not a valid <see cref="T:System.Globalization.CalendarWeekRule" /> value.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="36c63-510">在设置操作中，当前的 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象是只读的。</span><span class="sxs-lookup"><span data-stu-id="36c63-510">In a set operation, the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</span></span></exception>
        <altmember cref="T:System.Globalization.CalendarWeekRule" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="36c63-511">创建 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="36c63-511">Creates a shallow copy of the <see cref="T:System.Globalization.DateTimeFormatInfo" />.</span></span></summary>
        <returns><span data-ttu-id="36c63-512">从原始 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 复制的新 <see cref="T:System.Globalization.DateTimeFormatInfo" />。</span><span class="sxs-lookup"><span data-stu-id="36c63-512">A new <see cref="T:System.Globalization.DateTimeFormatInfo" /> object copied from the original <see cref="T:System.Globalization.DateTimeFormatInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-513">克隆可写即使原始<xref:System.Globalization.DateTimeFormatInfo>对象是只读的。</span><span class="sxs-lookup"><span data-stu-id="36c63-513">The clone is writable even if the original <xref:System.Globalization.DateTimeFormatInfo> object is read-only.</span></span> <span data-ttu-id="36c63-514">因此，可以使用用户定义的模式修改克隆的属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-514">Therefore, the properties of the clone can be modified with user-defined patterns.</span></span>  
  
 <span data-ttu-id="36c63-515">一个对象的浅表副本是只是对象的副本。</span><span class="sxs-lookup"><span data-stu-id="36c63-515">A shallow copy of an object is a copy of the object only.</span></span> <span data-ttu-id="36c63-516">如果对象包含对其他对象的引用，则浅表复制不创建所引用对象的副本。</span><span class="sxs-lookup"><span data-stu-id="36c63-516">If the object contains references to other objects, the shallow copy does not create copies of the referred objects.</span></span> <span data-ttu-id="36c63-517">它而是指原始对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-517">It refers to the original objects instead.</span></span> <span data-ttu-id="36c63-518">相比之下，对象的深层副本创建的对象的副本以及直接或间接引用该对象的所有内容的副本。</span><span class="sxs-lookup"><span data-stu-id="36c63-518">In contrast, a deep copy of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo CurrentInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.DateTimeFormatInfo CurrentInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.CurrentInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentInfo As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::DateTimeFormatInfo ^ CurrentInfo { System::Globalization::DateTimeFormatInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36c63-519">获取基于当前区域性对值进行格式设置的只读的 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-519">Gets a read-only <see cref="T:System.Globalization.DateTimeFormatInfo" /> object that formats values based on the current culture.</span></span></summary>
        <value><span data-ttu-id="36c63-520">一个基于当前线程的 <see cref="T:System.Globalization.CultureInfo" /> 对象的只读的 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-520">A read-only <see cref="T:System.Globalization.DateTimeFormatInfo" /> object based on the <see cref="T:System.Globalization.CultureInfo" /> object for the current thread.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-521"><xref:System.Globalization.DateTimeFormatInfo>返回对象<xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A>属性反映用户重写。</span><span class="sxs-lookup"><span data-stu-id="36c63-521">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> property reflects user overrides.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36c63-522">下面的示例使用<xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A>属性，以检索<xref:System.Globalization.DateTimeFormatInfo>对象，表示当前区域性，在这种情况下即 EN-US 区域性的格式设置约定。</span><span class="sxs-lookup"><span data-stu-id="36c63-522">The following example uses the <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A> property to retrieve a <xref:System.Globalization.DateTimeFormatInfo> object that represents the formatting conventions of the current culture, which in this case is the en-US culture.</span></span> <span data-ttu-id="36c63-523">它将显示格式字符串和六个的格式设置属性的结果字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-523">It then displays the format string and the result string for six formatting properties.</span></span>  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.CurrentInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.CurrentInfo/cs/CurrentInfo1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.CurrentInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.DateTimeFormatInfo.CurrentInfo/vb/CurrentInfo1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="DateSeparator">
      <MemberSignature Language="C#" Value="public string DateSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DateSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.DateSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property DateSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DateSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36c63-524">获取或设置分隔日期中各组成部分（即年、月、日）的字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-524">Gets or sets the string that separates the components of a date, that is, the year, month, and day.</span></span></summary>
        <value><span data-ttu-id="36c63-525">分隔日期中各组成部分（即年、月、日）的字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-525">The string that separates the components of a date, that is, the year, month, and day.</span></span> <span data-ttu-id="36c63-526"><see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> 的默认值为“/”。</span><span class="sxs-lookup"><span data-stu-id="36c63-526">The default for <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> is "/".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-527">如果自定义格式字符串中包含"/"格式说明符，<xref:System.DateTime.ToString%2A?displayProperty=nameWithType>方法显示的值<xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A>代替"/"在结果字符串中。</span><span class="sxs-lookup"><span data-stu-id="36c63-527">If a custom format string includes the "/" format specifier, the <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> method displays the value of <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A> in place of the "/" in the result string.</span></span>  
  
 <span data-ttu-id="36c63-528"><xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A>属性定义来代替日期分隔符的字符串 （"/"自定义日期和时间格式说明符） 中的结果字符串中的格式设置操作。</span><span class="sxs-lookup"><span data-stu-id="36c63-528">The <xref:System.Globalization.DateTimeFormatInfo.DateSeparator%2A> property defines the string that replaces the date separator ("/" custom date and time format specifier) in a result string in a formatting operation.</span></span> <span data-ttu-id="36c63-529">它还定义分析操作中的日期分隔符字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-529">It also defines the date separator string in a parsing operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36c63-530">下面的示例实例化<xref:System.Globalization.CultureInfo>对象对于 EN-US 区域性中，更改到其日期分隔符"-"，并通过使用"d"、"G"和"g"标准格式字符串来显示日期。</span><span class="sxs-lookup"><span data-stu-id="36c63-530">The following example instantiates a <xref:System.Globalization.CultureInfo> object for the en-US culture, changes its date separator to "-", and displays a date by using the "d", "G", and "g" standard format strings.</span></span>  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.DateSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.dateseparator/cs/dateseparatorex.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.DateSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.dateseparator/vb/dateseparatorex.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="36c63-531">该属性设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="36c63-531">The property is being set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="36c63-532">设置了该属性，但 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象为只读。</span><span class="sxs-lookup"><span data-stu-id="36c63-532">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</span></span></exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" />
      </Docs>
    </Member>
    <Member MemberName="DayNames">
      <MemberSignature Language="C#" Value="public string[] DayNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DayNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.DayNames" />
      <MemberSignature Language="VB.NET" Value="Public Property DayNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ DayNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36c63-533">获取或设置一维字符串数组，它包含该周中各天的特定于区域性的完整名称。</span><span class="sxs-lookup"><span data-stu-id="36c63-533">Gets or sets a one-dimensional string array that contains the culture-specific full names of the days of the week.</span></span></summary>
        <value><span data-ttu-id="36c63-534">一个一维字符串数组，它包含周中各天的特定于区域性的完整名称。</span><span class="sxs-lookup"><span data-stu-id="36c63-534">A one-dimensional string array that contains the culture-specific full names of the days of the week.</span></span> <span data-ttu-id="36c63-535"><see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> 数组包含"Sunday"、"Monday"、"Tuesday"、"Wednesday"、"Thursday"、"Friday"和"Saturday"。</span><span class="sxs-lookup"><span data-stu-id="36c63-535">The array for <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> contains "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", and "Saturday".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-536">如果设置此属性，该数组必须是一维，并且必须完全七个元素。</span><span class="sxs-lookup"><span data-stu-id="36c63-536">If setting this property, the array must be one-dimensional and must have exactly seven elements.</span></span> <span data-ttu-id="36c63-537">第一个元素 （位于索引零的元素） 表示由定义日历中每周的第一天<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-537">The first element (the element at index zero) represents the first day of the week in the calendar defined by the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property.</span></span>  
  
 <span data-ttu-id="36c63-538">如果自定义格式字符串中包含"dddd"格式说明符，<xref:System.DateTime.ToString%2A?displayProperty=nameWithType>方法包含相应的值<xref:System.Globalization.DateTimeFormatInfo.DayNames%2A>代替"dddd"在结果字符串中的成员。</span><span class="sxs-lookup"><span data-stu-id="36c63-538">If a custom format string includes the "dddd" format specifier, the <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> method includes the value of the appropriate <xref:System.Globalization.DateTimeFormatInfo.DayNames%2A> member in place of "dddd" in the result string.</span></span>  
  
 <span data-ttu-id="36c63-539">如果此属性受影响的值<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>属性更改。</span><span class="sxs-lookup"><span data-stu-id="36c63-539">This property is affected if the value of the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property changes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="36c63-540">该属性设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="36c63-540">The property is being set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="36c63-541">该属性正被设置为多维数组或者长度不是正好为 7 的数组。</span><span class="sxs-lookup"><span data-stu-id="36c63-541">The property is being set to an array that is multidimensional or that has a length that is not exactly 7.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="36c63-542">设置了该属性，但 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象为只读。</span><span class="sxs-lookup"><span data-stu-id="36c63-542">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</span></span></exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetDayName(System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="FirstDayOfWeek">
      <MemberSignature Language="C#" Value="public DayOfWeek FirstDayOfWeek { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DayOfWeek FirstDayOfWeek" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public Property FirstDayOfWeek As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DayOfWeek FirstDayOfWeek { DayOfWeek get(); void set(DayOfWeek value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36c63-543">获取或设置一周的第一天。</span><span class="sxs-lookup"><span data-stu-id="36c63-543">Gets or sets the first day of the week.</span></span></summary>
        <value><span data-ttu-id="36c63-544">表示一周的第一天的枚举值。</span><span class="sxs-lookup"><span data-stu-id="36c63-544">An enumeration value that represents the first day of the week.</span></span> <span data-ttu-id="36c63-545"><see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> 的默认值是 <see cref="F:System.DayOfWeek.Sunday" />。</span><span class="sxs-lookup"><span data-stu-id="36c63-545">The default for <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> is <see cref="F:System.DayOfWeek.Sunday" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-546">如果此属性受影响的值<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>属性更改。</span><span class="sxs-lookup"><span data-stu-id="36c63-546">This property is affected if the value of the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property changes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="36c63-547">该属性正被设置的值不是有效的 <see cref="T:System.DayOfWeek" /> 值。</span><span class="sxs-lookup"><span data-stu-id="36c63-547">The property is being set to a value that is not a valid <see cref="T:System.DayOfWeek" /> value.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="36c63-548">设置了该属性，但 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象为只读。</span><span class="sxs-lookup"><span data-stu-id="36c63-548">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</span></span></exception>
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="FullDateTimePattern">
      <MemberSignature Language="C#" Value="public string FullDateTimePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullDateTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.FullDateTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property FullDateTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullDateTimePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36c63-549">为长日期和长时间值获取或设置自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-549">Gets or sets the custom format string for a long date and long time value.</span></span></summary>
        <value><span data-ttu-id="36c63-550">长日期和时间值的自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-550">The custom format string for a long date and long time value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-551">"F"标准格式字符串是的别名<xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-551">The "F" standard format string is an alias for the <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> property.</span></span> <span data-ttu-id="36c63-552">换而言之，分配给此属性的自定义格式字符串定义的"F"标准格式字符串的结果字符串的格式。</span><span class="sxs-lookup"><span data-stu-id="36c63-552">In other words, the custom format string assigned to this property defines the format of the result string for the "F" standard format string.</span></span> <span data-ttu-id="36c63-553">有关详细信息，请参阅[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="36c63-553">For more information, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).</span></span>  
  
 <span data-ttu-id="36c63-554">值<xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>通过串联动态生成属性<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>和<xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>属性，并用空格分隔。</span><span class="sxs-lookup"><span data-stu-id="36c63-554">The value of the <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> property is generated dynamically by concatenating the <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> and <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> properties separated by a space.</span></span> <span data-ttu-id="36c63-555">在以下情况下进行此动态分配：</span><span class="sxs-lookup"><span data-stu-id="36c63-555">This dynamic assignment occurs under the following conditions:</span></span>  
  
-   <span data-ttu-id="36c63-556">如果之前检索此属性值已显式设置。</span><span class="sxs-lookup"><span data-stu-id="36c63-556">If the property value is retrieved before it has been explicitly set.</span></span>  
  
-   <span data-ttu-id="36c63-557">时的值<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>属性更改。</span><span class="sxs-lookup"><span data-stu-id="36c63-557">When the value of the <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> property changes.</span></span>  
  
-   <span data-ttu-id="36c63-558">时的值<xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>属性更改。</span><span class="sxs-lookup"><span data-stu-id="36c63-558">When the value of the <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> property changes.</span></span>  
  
 <span data-ttu-id="36c63-559">如果此属性受影响的值<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>属性更改。</span><span class="sxs-lookup"><span data-stu-id="36c63-559">This property is affected if the value of the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36c63-560">下面的示例显示的值<xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A>某些区域性。</span><span class="sxs-lookup"><span data-stu-id="36c63-560">The following example displays the value of <xref:System.Globalization.DateTimeFormatInfo.FullDateTimePattern%2A> for a few cultures.</span></span>  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.FullDateTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.FullDateTimePattern/CPP/dtfi_fulldatetimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.FullDateTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.FullDateTimePattern/CS/dtfi_fulldatetimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.FullDateTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.FullDateTimePattern/VB/dtfi_fulldatetimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="36c63-561">该属性设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="36c63-561">The property is being set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="36c63-562">设置了该属性，但 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象为只读。</span><span class="sxs-lookup"><span data-stu-id="36c63-562">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetAbbreviatedDayName">
      <MemberSignature Language="C#" Value="public string GetAbbreviatedDayName (DayOfWeek dayofweek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAbbreviatedDayName(valuetype System.DayOfWeek dayofweek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedDayName(System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAbbreviatedDayName(DayOfWeek dayofweek);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dayofweek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="dayofweek"><span data-ttu-id="36c63-563">一个 <see cref="T:System.DayOfWeek" /> 值。</span><span class="sxs-lookup"><span data-stu-id="36c63-563">A <see cref="T:System.DayOfWeek" /> value.</span></span></param>
        <summary><span data-ttu-id="36c63-564">基于与当前 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象关联的区域性，返回周中指定日期的区域性特定的缩写名称。</span><span class="sxs-lookup"><span data-stu-id="36c63-564">Returns the culture-specific abbreviated name of the specified day of the week based on the culture associated with the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="36c63-565">由 <paramref name="dayofweek" /> 表示的周中日期的区域性特定的缩写名称。</span><span class="sxs-lookup"><span data-stu-id="36c63-565">The culture-specific abbreviated name of the day of the week represented by <paramref name="dayofweek" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-566">对于默认的固定<xref:System.Globalization.DateTimeFormatInfo>对象，此方法将返回字符串中的<xref:System.Globalization.GregorianCalendar>:</span><span class="sxs-lookup"><span data-stu-id="36c63-566">For the default invariant <xref:System.Globalization.DateTimeFormatInfo> object, this method returns a string from the <xref:System.Globalization.GregorianCalendar>:</span></span>  
  
|`dayofweek`|<span data-ttu-id="36c63-567">返回值</span><span class="sxs-lookup"><span data-stu-id="36c63-567">Return Value</span></span>|  
|-----------------|------------------|  
|<span data-ttu-id="36c63-568">星期日</span><span class="sxs-lookup"><span data-stu-id="36c63-568">Sunday</span></span>|<span data-ttu-id="36c63-569">"Sun"</span><span class="sxs-lookup"><span data-stu-id="36c63-569">"Sun"</span></span>|  
|<span data-ttu-id="36c63-570">星期一</span><span class="sxs-lookup"><span data-stu-id="36c63-570">Monday</span></span>|<span data-ttu-id="36c63-571">"Mon"</span><span class="sxs-lookup"><span data-stu-id="36c63-571">"Mon"</span></span>|  
|<span data-ttu-id="36c63-572">星期二</span><span class="sxs-lookup"><span data-stu-id="36c63-572">Tuesday</span></span>|<span data-ttu-id="36c63-573">"星期二"</span><span class="sxs-lookup"><span data-stu-id="36c63-573">"Tue"</span></span>|  
|<span data-ttu-id="36c63-574">星期三</span><span class="sxs-lookup"><span data-stu-id="36c63-574">Wednesday</span></span>|<span data-ttu-id="36c63-575">"星期三"</span><span class="sxs-lookup"><span data-stu-id="36c63-575">"Wed"</span></span>|  
|<span data-ttu-id="36c63-576">星期四</span><span class="sxs-lookup"><span data-stu-id="36c63-576">Thursday</span></span>|<span data-ttu-id="36c63-577">"星期四"</span><span class="sxs-lookup"><span data-stu-id="36c63-577">"Thu"</span></span>|  
|<span data-ttu-id="36c63-578">星期五</span><span class="sxs-lookup"><span data-stu-id="36c63-578">Friday</span></span>|<span data-ttu-id="36c63-579">"星期五"</span><span class="sxs-lookup"><span data-stu-id="36c63-579">"Fri"</span></span>|  
|<span data-ttu-id="36c63-580">星期六</span><span class="sxs-lookup"><span data-stu-id="36c63-580">Saturday</span></span>|<span data-ttu-id="36c63-581">"周六至"</span><span class="sxs-lookup"><span data-stu-id="36c63-581">"Sat"</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="36c63-582"><paramref name="dayofweek" /> 不是有效的 <see cref="T:System.DayOfWeek" /> 值。</span><span class="sxs-lookup"><span data-stu-id="36c63-582"><paramref name="dayofweek" /> is not a valid <see cref="T:System.DayOfWeek" /> value.</span></span></exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames" />
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="GetAbbreviatedEraName">
      <MemberSignature Language="C#" Value="public string GetAbbreviatedEraName (int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAbbreviatedEraName(int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAbbreviatedEraName (era As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAbbreviatedEraName(int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="era"><span data-ttu-id="36c63-583">表示纪元的整数。</span><span class="sxs-lookup"><span data-stu-id="36c63-583">The integer representing the era.</span></span></param>
        <summary><span data-ttu-id="36c63-584">返回包含指定纪元的缩写名称的字符串（如果缩写名称存在）。</span><span class="sxs-lookup"><span data-stu-id="36c63-584">Returns the string containing the abbreviated name of the specified era, if an abbreviation exists.</span></span></summary>
        <returns><span data-ttu-id="36c63-585">包含指定纪元的缩写名称的字符串（如果缩写名称存在）。</span><span class="sxs-lookup"><span data-stu-id="36c63-585">A string containing the abbreviated name of the specified era, if an abbreviation exists.</span></span>  
  
 <span data-ttu-id="36c63-586">或</span><span class="sxs-lookup"><span data-stu-id="36c63-586">-or-</span></span>  
  
 <span data-ttu-id="36c63-587">包含纪元的完整名称的字符串（如果缩写名称不存在）。</span><span class="sxs-lookup"><span data-stu-id="36c63-587">A string containing the full name of the era, if an abbreviation does not exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-588">纪元名称是日历用来引用一段时间推测从固定的点或事件的名称。</span><span class="sxs-lookup"><span data-stu-id="36c63-588">The era name is the name a calendar uses to refer to a period of time reckoned from a fixed point or event.</span></span> <span data-ttu-id="36c63-589">例如，"公元"</span><span class="sxs-lookup"><span data-stu-id="36c63-589">For example, "A.D."</span></span> <span data-ttu-id="36c63-590">或者"开始"</span><span class="sxs-lookup"><span data-stu-id="36c63-590">or "C.E."</span></span> <span data-ttu-id="36c63-591">为当前纪元公历日历中。</span><span class="sxs-lookup"><span data-stu-id="36c63-591">is the current era in the Gregorian calendar.</span></span>  
  
 <span data-ttu-id="36c63-592">有效值`era`中列出<xref:System.Globalization.Calendar.Eras%2A>属性的适当的类派生自<xref:System.Globalization.Calendar>。</span><span class="sxs-lookup"><span data-stu-id="36c63-592">The valid values for `era` are listed in the <xref:System.Globalization.Calendar.Eras%2A> property of the appropriate class derived from <xref:System.Globalization.Calendar>.</span></span> <span data-ttu-id="36c63-593">例如：<xref:System.Globalization.JapaneseCalendar.Eras%2A?displayProperty=nameWithType>显示的此实现支持的纪元列表。</span><span class="sxs-lookup"><span data-stu-id="36c63-593">For example: <xref:System.Globalization.JapaneseCalendar.Eras%2A?displayProperty=nameWithType> displays a list of eras that are supported by this implementation.</span></span>  
  
 <span data-ttu-id="36c63-594">在<xref:System.Globalization.JapaneseCalendar>类，缩写的纪元名称是完整的纪元名称的第一个字符。</span><span class="sxs-lookup"><span data-stu-id="36c63-594">In the <xref:System.Globalization.JapaneseCalendar> class, the abbreviated era name is the first character of the full era name.</span></span> <span data-ttu-id="36c63-595">该字符是单字符不区分大小写拉丁字母缩写或单字符日文汉字缩写。</span><span class="sxs-lookup"><span data-stu-id="36c63-595">This character is either the single-character case-insensitive Latin alphabet abbreviation or the single-character Kanji abbreviation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="36c63-596"><paramref name="era" /> 不表示在 <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> 属性中指定的日历中的有效纪元。</span><span class="sxs-lookup"><span data-stu-id="36c63-596"><paramref name="era" /> does not represent a valid era in the calendar specified in the <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> property.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="36c63-597">如果<see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" />是<see cref="T:System.Globalization.TaiwanCalendar" />但<see cref="P:System.Threading.Thread.CurrentCulture" />不是"ZH-TW"，然后<see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />， <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />，和<see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" />返回空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="36c63-597">If <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> is the <see cref="T:System.Globalization.TaiwanCalendar" /> but the <see cref="P:System.Threading.Thread.CurrentCulture" /> is not "zh-TW", then <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, and <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> return an empty string ("").</span></span></para>
        </block>
        <altmember cref="T:System.Globalization.JapaneseCalendar" />
        <altmember cref="T:System.Globalization.TaiwanCalendar" />
      </Docs>
    </Member>
    <Member MemberName="GetAbbreviatedMonthName">
      <MemberSignature Language="C#" Value="public string GetAbbreviatedMonthName (int month);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAbbreviatedMonthName(int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedMonthName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAbbreviatedMonthName (month As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAbbreviatedMonthName(int month);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="month"><span data-ttu-id="36c63-598">1 到 13 之间的一个整数，用于表示要检索的月份的名称。</span><span class="sxs-lookup"><span data-stu-id="36c63-598">An integer from 1 through 13 representing the name of the month to retrieve.</span></span></param>
        <summary><span data-ttu-id="36c63-599">基于与当前 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象关联的区域性，返回指定月份的区域性特定的缩写名称。</span><span class="sxs-lookup"><span data-stu-id="36c63-599">Returns the culture-specific abbreviated name of the specified month based on the culture associated with the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="36c63-600">由 <paramref name="month" /> 表示的月份的区域性特定的缩写名称。</span><span class="sxs-lookup"><span data-stu-id="36c63-600">The culture-specific abbreviated name of the month represented by <paramref name="month" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-601">对于默认的固定<xref:System.Globalization.DateTimeFormatInfo>对象，此方法将返回字符串中的<xref:System.Globalization.GregorianCalendar>对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-601">For the default invariant <xref:System.Globalization.DateTimeFormatInfo> object, this method returns a string from the <xref:System.Globalization.GregorianCalendar> object.</span></span>  
  
|`month`|<span data-ttu-id="36c63-602">返回值</span><span class="sxs-lookup"><span data-stu-id="36c63-602">Return Value</span></span>|  
|-------------|------------------|  
|<span data-ttu-id="36c63-603">1</span><span class="sxs-lookup"><span data-stu-id="36c63-603">1</span></span>|<span data-ttu-id="36c63-604">"年 1 月"</span><span class="sxs-lookup"><span data-stu-id="36c63-604">"Jan"</span></span>|  
|<span data-ttu-id="36c63-605">2</span><span class="sxs-lookup"><span data-stu-id="36c63-605">2</span></span>|<span data-ttu-id="36c63-606">"年 2 月"</span><span class="sxs-lookup"><span data-stu-id="36c63-606">"Feb"</span></span>|  
|<span data-ttu-id="36c63-607">3</span><span class="sxs-lookup"><span data-stu-id="36c63-607">3</span></span>|<span data-ttu-id="36c63-608">"日"</span><span class="sxs-lookup"><span data-stu-id="36c63-608">"Mar"</span></span>|  
|<span data-ttu-id="36c63-609">4</span><span class="sxs-lookup"><span data-stu-id="36c63-609">4</span></span>|<span data-ttu-id="36c63-610">"日"</span><span class="sxs-lookup"><span data-stu-id="36c63-610">"Apr"</span></span>|  
|<span data-ttu-id="36c63-611">5</span><span class="sxs-lookup"><span data-stu-id="36c63-611">5</span></span>|<span data-ttu-id="36c63-612">"可能"</span><span class="sxs-lookup"><span data-stu-id="36c63-612">"May"</span></span>|  
|<span data-ttu-id="36c63-613">6</span><span class="sxs-lookup"><span data-stu-id="36c63-613">6</span></span>|<span data-ttu-id="36c63-614">"日"</span><span class="sxs-lookup"><span data-stu-id="36c63-614">"Jun"</span></span>|  
|<span data-ttu-id="36c63-615">7</span><span class="sxs-lookup"><span data-stu-id="36c63-615">7</span></span>|<span data-ttu-id="36c63-616">"七月"</span><span class="sxs-lookup"><span data-stu-id="36c63-616">"Jul"</span></span>|  
|<span data-ttu-id="36c63-617">8</span><span class="sxs-lookup"><span data-stu-id="36c63-617">8</span></span>|<span data-ttu-id="36c63-618">"日"</span><span class="sxs-lookup"><span data-stu-id="36c63-618">"Aug"</span></span>|  
|<span data-ttu-id="36c63-619">9</span><span class="sxs-lookup"><span data-stu-id="36c63-619">9</span></span>|<span data-ttu-id="36c63-620">"日"</span><span class="sxs-lookup"><span data-stu-id="36c63-620">"Sep"</span></span>|  
|<span data-ttu-id="36c63-621">10</span><span class="sxs-lookup"><span data-stu-id="36c63-621">10</span></span>|<span data-ttu-id="36c63-622">"年 10 月"</span><span class="sxs-lookup"><span data-stu-id="36c63-622">"Oct"</span></span>|  
|<span data-ttu-id="36c63-623">11</span><span class="sxs-lookup"><span data-stu-id="36c63-623">11</span></span>|<span data-ttu-id="36c63-624">"Nov"</span><span class="sxs-lookup"><span data-stu-id="36c63-624">"Nov"</span></span>|  
|<span data-ttu-id="36c63-625">12</span><span class="sxs-lookup"><span data-stu-id="36c63-625">12</span></span>|<span data-ttu-id="36c63-626">"年 12 月"</span><span class="sxs-lookup"><span data-stu-id="36c63-626">"Dec"</span></span>|  
|<span data-ttu-id="36c63-627">13</span><span class="sxs-lookup"><span data-stu-id="36c63-627">13</span></span>|<span data-ttu-id="36c63-628">""</span><span class="sxs-lookup"><span data-stu-id="36c63-628">""</span></span>|  
  
 <span data-ttu-id="36c63-629"><xref:System.Globalization.Calendar> 对象可以适应具有 13 个月的日历。</span><span class="sxs-lookup"><span data-stu-id="36c63-629"><xref:System.Globalization.Calendar> objects can accommodate calendars with 13 months.</span></span> <span data-ttu-id="36c63-630">对于 12 个月日历，则始终作为名称的第 13 个月返回空字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-630">For 12-month calendars, the empty string is always returned as the name of the 13th month.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="36c63-631"><paramref name="month" /> 小于 1 或大于 13。</span><span class="sxs-lookup"><span data-stu-id="36c63-631"><paramref name="month" /> is less than 1 or greater than 13.</span></span></exception>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllDateTimePatterns">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="36c63-632">返回可用于对日期和时间值进行格式设置的标准模式。</span><span class="sxs-lookup"><span data-stu-id="36c63-632">Returns the standard patterns in which date and time values can be formatted.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllDateTimePatterns">
      <MemberSignature Language="C#" Value="public string[] GetAllDateTimePatterns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetAllDateTimePatterns() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllDateTimePatterns () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetAllDateTimePatterns();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="36c63-633">返回可用于对日期和时间值进行格式设置的所有标准模式。</span><span class="sxs-lookup"><span data-stu-id="36c63-633">Returns all the standard patterns in which date and time values can be formatted.</span></span></summary>
        <returns><span data-ttu-id="36c63-634">一个数组，包含可以用于对日期和时间值进行格式设置的标准模式。</span><span class="sxs-lookup"><span data-stu-id="36c63-634">An array that contains the standard patterns in which date and time values can be formatted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-635">此方法返回一个数组，包含对应于标准格式字符串的所有自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-635">This method returns an array that contains all custom format strings that correspond to standard format strings.</span></span> <span data-ttu-id="36c63-636">请参阅[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)有关标准格式字符串的列表。</span><span class="sxs-lookup"><span data-stu-id="36c63-636">See [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) for a list of the standard format strings.</span></span>  
  
 <span data-ttu-id="36c63-637">你可以使用自定义格式字符串中返回的数组<xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A>在格式设置操作的方法。</span><span class="sxs-lookup"><span data-stu-id="36c63-637">You can use the custom format strings in the array returned by the <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> method in formatting operations.</span></span> <span data-ttu-id="36c63-638">但是，如果这样做的字符串表示形式的日期和时间值返回在于格式设置操作无法始终分析成功通过`Parse`和`TryParse`方法。</span><span class="sxs-lookup"><span data-stu-id="36c63-638">However, if you do, the string representation of a date and time value returned in that formatting operation cannot always be parsed successfully by the `Parse` and `TryParse` methods.</span></span> <span data-ttu-id="36c63-639">因此，不能假定返回的自定义格式字符串<xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A>方法可以用于往返行程日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="36c63-639">Therefore, you cannot assume that the custom format strings returned by the <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> method can be used to round-trip date and time values.</span></span> <span data-ttu-id="36c63-640">以下示例阐释了此问题。</span><span class="sxs-lookup"><span data-stu-id="36c63-640">The following example illustrates this problem.</span></span> <span data-ttu-id="36c63-641">它检索<xref:System.Globalization.DateTimeFormatInfo>包含意大利 （意大利语） 区域性的格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-641">It retrieves a <xref:System.Globalization.DateTimeFormatInfo> object that contains formatting information for the Italy (Italian) culture.</span></span> <span data-ttu-id="36c63-642">它通过每个自定义格式字符串中返回的数组<xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns>方法<xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType>方法创建的字符串表示形式的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="36c63-642">It passes each custom format string in the array returned by the <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns> method to the <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> method to create the string representation of a date and time.</span></span> <span data-ttu-id="36c63-643">此示例然后尝试通过调用分析此值<xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="36c63-643">This example then attempts to parse this value by calling the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="36c63-644">如示例输出所示，某些自定义格式字符串不会生成日期和时间值，它成功往返。</span><span class="sxs-lookup"><span data-stu-id="36c63-644">As the output from the example shows, some of the custom format strings do not produce a date and time value that successfully round-trips.</span></span>  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/cs/getalldatetimepatternsex1.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/vb/getalldatetimepatternsex1.vb#1)]  
  
 <span data-ttu-id="36c63-645">若要分析的字符串表示形式的日期和时间，可以表示了大量预定义的自定义格式，请调用以下方法之一：</span><span class="sxs-lookup"><span data-stu-id="36c63-645">To parse the string representation of a date and time that can be expressed in a number of predefined custom formats, call one of the following methods:</span></span>  
  
-   <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType>  
  
 <span data-ttu-id="36c63-646">返回的数组中的自定义格式字符串<xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A>方法依赖于区域性的当前日历为其<xref:System.Globalization.DateTimeFormatInfo>对象提供格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="36c63-646">The custom format strings in the array returned by the <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> method depends on the current calendar of the culture for which the <xref:System.Globalization.DateTimeFormatInfo> object supplies formatting information.</span></span> <span data-ttu-id="36c63-647">如果更改日历，此方法返回的数组也会更改。</span><span class="sxs-lookup"><span data-stu-id="36c63-647">If the calendar changes, the array returned by this method also changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36c63-648">下面的示例显示日期和时间格式字符串，用于固定区域性，以及生成时，该格式字符串用于设置特定日期的格式的结果字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-648">The following example displays the date and time format strings for the invariant culture, as well as the result string that is produced when that format string is used to format a particular date.</span></span>  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/cs/getalldatetimepatternsinv.cs#3)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/vb/getalldatetimepatternsinv.vb#3)]  
  
 <span data-ttu-id="36c63-649">该示例实例化<xref:System.Globalization.DateTimeFormatInfo>通过调用表示固定区域性的对象<xref:System.Globalization.DateTimeFormatInfo.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="36c63-649">The example instantiates a <xref:System.Globalization.DateTimeFormatInfo> object that represents the invariant culture by calling the <xref:System.Globalization.DateTimeFormatInfo.%23ctor%2A> constructor.</span></span> <span data-ttu-id="36c63-650">它无法检索<xref:System.Globalization.DateTimeFormatInfo>表示固定区域性<xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-650">It could also retrieve a <xref:System.Globalization.DateTimeFormatInfo> that represents the invariant culture from the <xref:System.Globalization.DateTimeFormatInfo.InvariantInfo%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="GetAllDateTimePatterns">
      <MemberSignature Language="C#" Value="public string[] GetAllDateTimePatterns (char format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetAllDateTimePatterns(char format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllDateTimePatterns (format As Char) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetAllDateTimePatterns(char format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="36c63-651">标准格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-651">A standard format string.</span></span></param>
        <summary><span data-ttu-id="36c63-652">返回可在其中使用指定标准格式字符串对日期和时间值进行格式设置的所有模式。</span><span class="sxs-lookup"><span data-stu-id="36c63-652">Returns all the patterns in which date and time values can be formatted using the specified standard format string.</span></span></summary>
        <returns><span data-ttu-id="36c63-653">一个数组，它包含可在其中使用指定格式字符串对日期和时间值进行格式设置的标准模式。</span><span class="sxs-lookup"><span data-stu-id="36c63-653">An array containing the standard patterns in which date and time values can be formatted using the specified format string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-654">此方法返回包含对应于特定的标准格式字符串的自定义格式字符串的数组。</span><span class="sxs-lookup"><span data-stu-id="36c63-654">This method returns an array containing the custom format strings that correspond to a particular standard format string.</span></span> <span data-ttu-id="36c63-655">请参阅[标准日期和时间格式字符串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)有关标准格式字符串的列表。</span><span class="sxs-lookup"><span data-stu-id="36c63-655">See [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) for a list of the standard format strings.</span></span>  
  
 <span data-ttu-id="36c63-656">你可以使用自定义格式字符串中返回的数组<xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A>在格式设置操作的方法。</span><span class="sxs-lookup"><span data-stu-id="36c63-656">You can use the custom format strings in the array returned by the <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> method in formatting operations.</span></span> <span data-ttu-id="36c63-657">但是，如果这样做的字符串表示形式的日期和时间值返回在于格式设置操作无法始终分析成功通过`Parse`和`TryParse`方法。</span><span class="sxs-lookup"><span data-stu-id="36c63-657">However, if you do, the string representation of a date and time value returned in that formatting operation cannot always be parsed successfully by the `Parse` and `TryParse` methods.</span></span> <span data-ttu-id="36c63-658">因此，不能假定返回的自定义格式字符串<xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A>方法可以用于往返行程日期和时间值。</span><span class="sxs-lookup"><span data-stu-id="36c63-658">Therefore, you cannot assume that the custom format strings returned by the <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> method can be used to round-trip date and time values.</span></span> <span data-ttu-id="36c63-659">以下示例阐释了此问题。</span><span class="sxs-lookup"><span data-stu-id="36c63-659">The following example illustrates this problem.</span></span> <span data-ttu-id="36c63-660">它检索<xref:System.Globalization.DateTimeFormatInfo>包含俄罗斯 （俄语） 区域性的格式设置信息的对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-660">It retrieves a <xref:System.Globalization.DateTimeFormatInfo> object that contains formatting information for the Russia (Russian) culture.</span></span> <span data-ttu-id="36c63-661">它调用<xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%28System.Char%29>每个标准格式字符串，然后每个自定义格式字符串到返回的数组中的传递方法<xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType>方法创建的字符串表示形式的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="36c63-661">It calls the <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%28System.Char%29> method for each standard format string, and then passes each custom format string in the returned array to the <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> method to create the string representation of a date and time.</span></span> <span data-ttu-id="36c63-662">此示例然后尝试通过调用分析此值<xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="36c63-662">This example then attempts to parse this value by calling the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="36c63-663">如示例输出所示，某些自定义格式字符串不会生成日期和时间值，它成功往返。</span><span class="sxs-lookup"><span data-stu-id="36c63-663">As the output from the example shows, some of the custom format strings do not produce a date and time value that successfully round-trips.</span></span>  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/cs/getalldatetimepatternsex2.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.getalldatetimepatterns/vb/getalldatetimepatternsex2.vb#2)]  
  
 <span data-ttu-id="36c63-664">若要分析的字符串表示形式的日期和时间，可以表示了大量预定义的自定义格式，请调用以下方法之一：</span><span class="sxs-lookup"><span data-stu-id="36c63-664">To parse the string representation of a date and time that can be expressed in a number of predefined custom formats, call one of the following methods:</span></span>  
  
-   <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>  
  
-   <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType>  
  
 <span data-ttu-id="36c63-665">返回的数组中的自定义格式字符串<xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A>方法依赖于区域性的当前日历为其<xref:System.Globalization.DateTimeFormatInfo>对象提供格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="36c63-665">The custom format strings in the array returned by the <xref:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns%2A> method depends on the current calendar of the culture for which the <xref:System.Globalization.DateTimeFormatInfo> object supplies formatting information.</span></span> <span data-ttu-id="36c63-666">如果更改日历，此方法返回的数组也会更改。</span><span class="sxs-lookup"><span data-stu-id="36c63-666">If the calendar changes, the array returned by this method also changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36c63-667">下面的示例显示当前日历的日期和时间模式。</span><span class="sxs-lookup"><span data-stu-id="36c63-667">The following example displays the date and time patterns for the current calendar.</span></span>  
  
 [!code-cpp[Classic DateTimeFormatInfo.GetAllDateTimePatterns Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DateTimeFormatInfo.GetAllDateTimePatterns Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DateTimeFormatInfo.GetAllDateTimePatterns Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DateTimeFormatInfo.GetAllDateTimePatterns Example/CS/source.cs#1)]
 [!code-vb[Classic DateTimeFormatInfo.GetAllDateTimePatterns Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DateTimeFormatInfo.GetAllDateTimePatterns Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="36c63-668"><paramref name="format" /> 不是有效的标准格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-668"><paramref name="format" /> is not a valid standard format string.</span></span></exception>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayName">
      <MemberSignature Language="C#" Value="public string GetDayName (DayOfWeek dayofweek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetDayName(valuetype System.DayOfWeek dayofweek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetDayName(System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetDayName(DayOfWeek dayofweek);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dayofweek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="dayofweek"><span data-ttu-id="36c63-669">一个 <see cref="T:System.DayOfWeek" /> 值。</span><span class="sxs-lookup"><span data-stu-id="36c63-669">A <see cref="T:System.DayOfWeek" /> value.</span></span></param>
        <summary><span data-ttu-id="36c63-670">基于与当前 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象关联的区域性，返回周中指定日期的区域性特定的全名。</span><span class="sxs-lookup"><span data-stu-id="36c63-670">Returns the culture-specific full name of the specified day of the week based on the culture associated with the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="36c63-671">由 <paramref name="dayofweek" /> 表示的周中日期的区域性特定的全名。</span><span class="sxs-lookup"><span data-stu-id="36c63-671">The culture-specific full name of the day of the week represented by <paramref name="dayofweek" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-672">对于默认的固定<xref:System.Globalization.DateTimeFormatInfo>对象，此方法将返回字符串中的<xref:System.Globalization.GregorianCalendar>对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-672">For the default invariant <xref:System.Globalization.DateTimeFormatInfo> object, this method returns a string from the <xref:System.Globalization.GregorianCalendar> object.</span></span>  
  
|`dayofweek`|<span data-ttu-id="36c63-673">返回值</span><span class="sxs-lookup"><span data-stu-id="36c63-673">Return Value</span></span>|  
|-----------------|------------------|  
|<span data-ttu-id="36c63-674">星期日</span><span class="sxs-lookup"><span data-stu-id="36c63-674">Sunday</span></span>|<span data-ttu-id="36c63-675">"Sunday"</span><span class="sxs-lookup"><span data-stu-id="36c63-675">"Sunday"</span></span>|  
|<span data-ttu-id="36c63-676">星期一</span><span class="sxs-lookup"><span data-stu-id="36c63-676">Monday</span></span>|<span data-ttu-id="36c63-677">"Monday"</span><span class="sxs-lookup"><span data-stu-id="36c63-677">"Monday"</span></span>|  
|<span data-ttu-id="36c63-678">星期二</span><span class="sxs-lookup"><span data-stu-id="36c63-678">Tuesday</span></span>|<span data-ttu-id="36c63-679">"星期二"</span><span class="sxs-lookup"><span data-stu-id="36c63-679">"Tuesday"</span></span>|  
|<span data-ttu-id="36c63-680">星期三</span><span class="sxs-lookup"><span data-stu-id="36c63-680">Wednesday</span></span>|<span data-ttu-id="36c63-681">"Wednesday"</span><span class="sxs-lookup"><span data-stu-id="36c63-681">"Wednesday"</span></span>|  
|<span data-ttu-id="36c63-682">星期四</span><span class="sxs-lookup"><span data-stu-id="36c63-682">Thursday</span></span>|<span data-ttu-id="36c63-683">"Thursday"</span><span class="sxs-lookup"><span data-stu-id="36c63-683">"Thursday"</span></span>|  
|<span data-ttu-id="36c63-684">星期五</span><span class="sxs-lookup"><span data-stu-id="36c63-684">Friday</span></span>|<span data-ttu-id="36c63-685">"星期五"</span><span class="sxs-lookup"><span data-stu-id="36c63-685">"Friday"</span></span>|  
|<span data-ttu-id="36c63-686">星期六</span><span class="sxs-lookup"><span data-stu-id="36c63-686">Saturday</span></span>|<span data-ttu-id="36c63-687">"星期六"</span><span class="sxs-lookup"><span data-stu-id="36c63-687">"Saturday"</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="36c63-688"><paramref name="dayofweek" /> 不是有效的 <see cref="T:System.DayOfWeek" /> 值。</span><span class="sxs-lookup"><span data-stu-id="36c63-688"><paramref name="dayofweek" /> is not a valid <see cref="T:System.DayOfWeek" /> value.</span></span></exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.DayNames" />
        <altmember cref="T:System.DayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public int GetEra (string eraName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetEra(string eraName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetEra(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEra (eraName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetEra(System::String ^ eraName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eraName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eraName"><span data-ttu-id="36c63-689">包含纪元名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-689">The string containing the name of the era.</span></span></param>
        <summary><span data-ttu-id="36c63-690">返回表示指定纪元的整数。</span><span class="sxs-lookup"><span data-stu-id="36c63-690">Returns the integer representing the specified era.</span></span></summary>
        <returns><span data-ttu-id="36c63-691">如果 <paramref name="eraName" /> 有效，则为表示纪元的整数；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="36c63-691">The integer representing the era, if <paramref name="eraName" /> is valid; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-692">纪元名称是日历用来引用一段时间推测从固定的点或事件的名称。</span><span class="sxs-lookup"><span data-stu-id="36c63-692">The era name is the name a calendar uses to refer to a period of time reckoned from a fixed point or event.</span></span> <span data-ttu-id="36c63-693">例如，"公元"</span><span class="sxs-lookup"><span data-stu-id="36c63-693">For example, "A.D."</span></span> <span data-ttu-id="36c63-694">或者"开始"</span><span class="sxs-lookup"><span data-stu-id="36c63-694">or "C.E."</span></span> <span data-ttu-id="36c63-695">为当前纪元公历日历中。</span><span class="sxs-lookup"><span data-stu-id="36c63-695">is the current era in the Gregorian calendar.</span></span>  
  
 <span data-ttu-id="36c63-696">与比较`eraName`不区分大小写，例如，"公元"</span><span class="sxs-lookup"><span data-stu-id="36c63-696">The comparison with `eraName` is case-insensitive, for example, "A.D."</span></span> <span data-ttu-id="36c63-697">等效于"公元"。</span><span class="sxs-lookup"><span data-stu-id="36c63-697">is equivalent to "a.d.".</span></span>  
  
 <span data-ttu-id="36c63-698"><xref:System.Globalization.DateTimeFormatInfo.GetEra%2A> 仅当忽略缩写的纪元名称中的标点<xref:System.Globalization.GregorianCalendar>中选择<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType>并且区域性使用"公元"</span><span class="sxs-lookup"><span data-stu-id="36c63-698"><xref:System.Globalization.DateTimeFormatInfo.GetEra%2A> ignores punctuation in abbreviated era names, only if the <xref:System.Globalization.GregorianCalendar> is selected in <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> and the culture uses "A.D."</span></span> <span data-ttu-id="36c63-699">作为纪元名称，即"公元"</span><span class="sxs-lookup"><span data-stu-id="36c63-699">as the era name, that is, "A.D."</span></span> <span data-ttu-id="36c63-700">等效于"AD"。</span><span class="sxs-lookup"><span data-stu-id="36c63-700">is equivalent to "AD".</span></span>  
  
 <span data-ttu-id="36c63-701"><xref:System.Globalization.DateTimeFormatInfo.GetEra%2A> 比较`eraName`与返回的完整纪元名称<xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A>返回的缩写的纪元名称的与<xref:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName%2A>。</span><span class="sxs-lookup"><span data-stu-id="36c63-701"><xref:System.Globalization.DateTimeFormatInfo.GetEra%2A> compares `eraName` with the full era name returned by <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A> and with the abbreviated era name returned by <xref:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36c63-702">下面的示例演示<xref:System.Globalization.DateTimeFormatInfo>忽略纪元名称中的标点，只有当日历为公历并且区域性使用的纪元名称"公元"。</span><span class="sxs-lookup"><span data-stu-id="36c63-702">The following example shows that <xref:System.Globalization.DateTimeFormatInfo> ignores the punctuation in the era name, only if the calendar is Gregorian and the culture uses the era name "A.D.".</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/CPP/gregorian_getera.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/CS/gregorian_getera.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendar.GetEra#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendar.GetEra/VB/gregorian_getera.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="36c63-703"><paramref name="eraName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="36c63-703"><paramref name="eraName" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName="GetEraName">
      <MemberSignature Language="C#" Value="public string GetEraName (int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetEraName(int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEraName (era As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetEraName(int era);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="era"><span data-ttu-id="36c63-704">表示纪元的整数。</span><span class="sxs-lookup"><span data-stu-id="36c63-704">The integer representing the era.</span></span></param>
        <summary><span data-ttu-id="36c63-705">返回包含指定纪元名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-705">Returns the string containing the name of the specified era.</span></span></summary>
        <returns><span data-ttu-id="36c63-706">包含纪元名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-706">A string containing the name of the era.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-707">纪元名称是日历用来引用一段时间推测从固定的点或事件的名称。</span><span class="sxs-lookup"><span data-stu-id="36c63-707">The era name is the name a calendar uses to refer to a period of time reckoned from a fixed point or event.</span></span> <span data-ttu-id="36c63-708">例如，"公元"</span><span class="sxs-lookup"><span data-stu-id="36c63-708">For example, "A.D."</span></span> <span data-ttu-id="36c63-709">或者"开始"</span><span class="sxs-lookup"><span data-stu-id="36c63-709">or "C.E."</span></span> <span data-ttu-id="36c63-710">为当前纪元公历日历中。</span><span class="sxs-lookup"><span data-stu-id="36c63-710">is the current era in the Gregorian calendar.</span></span>  
  
 <span data-ttu-id="36c63-711">有效值`era`中列出<xref:System.Globalization.Calendar.Eras%2A>属性的适当的类派生自<xref:System.Globalization.Calendar>。</span><span class="sxs-lookup"><span data-stu-id="36c63-711">The valid values for `era` are listed in the <xref:System.Globalization.Calendar.Eras%2A> property of the appropriate class derived from <xref:System.Globalization.Calendar>.</span></span> <span data-ttu-id="36c63-712">例如：<xref:System.Globalization.JapaneseCalendar.Eras%2A?displayProperty=nameWithType>显示的此实现支持的纪元列表。</span><span class="sxs-lookup"><span data-stu-id="36c63-712">For example: <xref:System.Globalization.JapaneseCalendar.Eras%2A?displayProperty=nameWithType> displays a list of eras that are supported by this implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="36c63-713"><paramref name="era" /> 不表示在 <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> 属性中指定的日历中的有效纪元。</span><span class="sxs-lookup"><span data-stu-id="36c63-713"><paramref name="era" /> does not represent a valid era in the calendar specified in the <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> property.</span></span></exception>
        <block subset="none" type="usage">
          <para><span data-ttu-id="36c63-714">如果由表示日历<see cref="T:System.Globalization.TaiwanCalendar" />但<see cref="P:System.Threading.Thread.CurrentCulture" />不是"ZH-TW"，然后<see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />， <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />，和<see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" />返回空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="36c63-714">If the calendar is represented by <see cref="T:System.Globalization.TaiwanCalendar" /> but the <see cref="P:System.Threading.Thread.CurrentCulture" /> is not "zh-TW", then <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, and <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> return an empty string ("").</span></span></para>
        </block>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetEra(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public object GetFormat (Type formatType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormat(class System.Type formatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetFormat(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormat (formatType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetFormat(Type ^ formatType);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormatProvider.GetFormat(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="formatType"><span data-ttu-id="36c63-715">所需格式化服务的类型。</span><span class="sxs-lookup"><span data-stu-id="36c63-715">The type of the required formatting service.</span></span></param>
        <summary><span data-ttu-id="36c63-716">返回指定类型的对象，它提供日期和时间格式化服务。</span><span class="sxs-lookup"><span data-stu-id="36c63-716">Returns an object of the specified type that provides a date and time  formatting service.</span></span></summary>
        <returns><span data-ttu-id="36c63-717">如果 <paramref name="formatType" /> 与当前 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 的类型相同，则为当前对象；否则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="36c63-717">The current  object, if <paramref name="formatType" /> is the same as the type of the current <see cref="T:System.Globalization.DateTimeFormatInfo" />; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-718">`Format(String, IFormatProvider)`支持的基本数据类型的方法调用此方法时当前<xref:System.Globalization.DateTimeFormatInfo>对象作为传递<xref:System.IFormatProvider>参数。</span><span class="sxs-lookup"><span data-stu-id="36c63-718">The `Format(String, IFormatProvider)` method supported by the base data types invoke this method when the current <xref:System.Globalization.DateTimeFormatInfo> object is passed as the <xref:System.IFormatProvider> parameter.</span></span> <span data-ttu-id="36c63-719">此方法实现 <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="36c63-719">This method implements <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
        <altmember cref="M:System.Globalization.NumberFormatInfo.GetFormat(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo GetInstance (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.DateTimeFormatInfo GetInstance(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetInstance(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (provider As IFormatProvider) As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::DateTimeFormatInfo ^ GetInstance(IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="36c63-720">获取 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象的 <see cref="T:System.IFormatProvider" />。</span><span class="sxs-lookup"><span data-stu-id="36c63-720">The <see cref="T:System.IFormatProvider" /> that gets the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object.</span></span>  
  
 <span data-ttu-id="36c63-721">或</span><span class="sxs-lookup"><span data-stu-id="36c63-721">-or-</span></span>  
  
 <span data-ttu-id="36c63-722">要获取 <see cref="P:System.Globalization.DateTimeFormatInfo.CurrentInfo" /> 的 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="36c63-722"><see langword="null" /> to get <see cref="P:System.Globalization.DateTimeFormatInfo.CurrentInfo" />.</span></span></param>
        <summary><span data-ttu-id="36c63-723">返回与指定 <see cref="T:System.IFormatProvider" /> 关联的 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-723">Returns the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object associated with the specified <see cref="T:System.IFormatProvider" />.</span></span></summary>
        <returns><span data-ttu-id="36c63-724">与 <see cref="T:System.IFormatProvider" /> 关联的 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-724">A <see cref="T:System.Globalization.DateTimeFormatInfo" /> object associated with <see cref="T:System.IFormatProvider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-725">此方法使用<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>方法`formatProvider`使用<xref:System.Globalization.DateTimeFormatInfo>对象作为`Type`参数。</span><span class="sxs-lookup"><span data-stu-id="36c63-725">This method uses the <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method of `formatProvider` using an <xref:System.Globalization.DateTimeFormatInfo> object as the `Type` parameter.</span></span> <span data-ttu-id="36c63-726">如果`formatProvider`是`null`或如果<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>返回`null`，此方法返回<xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A>。</span><span class="sxs-lookup"><span data-stu-id="36c63-726">If `formatProvider` is `null` or if <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> returns `null`, this method returns <xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A>.</span></span>  
  
 <span data-ttu-id="36c63-727">你的应用程序可以获取<xref:System.Globalization.DateTimeFormatInfo>使用以下方法之一对特定区域性的对象：</span><span class="sxs-lookup"><span data-stu-id="36c63-727">Your application can get a <xref:System.Globalization.DateTimeFormatInfo> object for a specific culture using one of the following methods:</span></span>  
  
-   <span data-ttu-id="36c63-728"><xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-728">The <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="36c63-729"><xref:System.Globalization.DateTimeFormatInfo.GetInstance%2A>方法，其中`provider`是<xref:System.Globalization.CultureInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-729">The <xref:System.Globalization.DateTimeFormatInfo.GetInstance%2A> method, where `provider` is a <xref:System.Globalization.CultureInfo> object.</span></span>  
  
 <span data-ttu-id="36c63-730">A<xref:System.Globalization.DateTimeFormatInfo>只能用于固定区域性或特定区域性 （而不能为非特定区域性） 创建对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-730">A <xref:System.Globalization.DateTimeFormatInfo> object can be created only for the invariant culture or for specific cultures, not for neutral cultures.</span></span>  
  
 <span data-ttu-id="36c63-731">有关固定区域性、 特定区域性和非特定区域性的详细信息，请参阅<xref:System.Globalization.CultureInfo>类的说明。</span><span class="sxs-lookup"><span data-stu-id="36c63-731">For more information about the invariant culture, specific cultures, and neutral cultures, see the <xref:System.Globalization.CultureInfo> class description.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthName">
      <MemberSignature Language="C#" Value="public string GetMonthName (int month);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetMonthName(int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetMonthName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMonthName (month As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetMonthName(int month);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="month"><span data-ttu-id="36c63-732">1 到 13 之间的一个整数，用于表示要检索的月份的名称。</span><span class="sxs-lookup"><span data-stu-id="36c63-732">An integer from 1 through 13 representing the name of the month to retrieve.</span></span></param>
        <summary><span data-ttu-id="36c63-733">基于与当前 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象关联的区域性，返回指定月份的区域性特定的全名。</span><span class="sxs-lookup"><span data-stu-id="36c63-733">Returns the culture-specific full name of the specified month based on the culture associated with the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="36c63-734">由 <paramref name="month" /> 表示的月份的区域性特定的全名。</span><span class="sxs-lookup"><span data-stu-id="36c63-734">The culture-specific full name of the month represented by <paramref name="month" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-735">对于默认的固定<xref:System.Globalization.DateTimeFormatInfo>对象，此方法将返回字符串中的<xref:System.Globalization.GregorianCalendar>对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-735">For the default invariant <xref:System.Globalization.DateTimeFormatInfo> object, this method returns a string from the <xref:System.Globalization.GregorianCalendar> object.</span></span>  
  
|`month`|<span data-ttu-id="36c63-736">返回值</span><span class="sxs-lookup"><span data-stu-id="36c63-736">Return Value</span></span>|  
|-------------|------------------|  
|<span data-ttu-id="36c63-737">1</span><span class="sxs-lookup"><span data-stu-id="36c63-737">1</span></span>|<span data-ttu-id="36c63-738">"年 1 月"</span><span class="sxs-lookup"><span data-stu-id="36c63-738">"January"</span></span>|  
|<span data-ttu-id="36c63-739">2</span><span class="sxs-lookup"><span data-stu-id="36c63-739">2</span></span>|<span data-ttu-id="36c63-740">"年 2 月"</span><span class="sxs-lookup"><span data-stu-id="36c63-740">"February"</span></span>|  
|<span data-ttu-id="36c63-741">3</span><span class="sxs-lookup"><span data-stu-id="36c63-741">3</span></span>|<span data-ttu-id="36c63-742">"年 3 月"</span><span class="sxs-lookup"><span data-stu-id="36c63-742">"March"</span></span>|  
|<span data-ttu-id="36c63-743">4</span><span class="sxs-lookup"><span data-stu-id="36c63-743">4</span></span>|<span data-ttu-id="36c63-744">"年 4 月"</span><span class="sxs-lookup"><span data-stu-id="36c63-744">"April"</span></span>|  
|<span data-ttu-id="36c63-745">5</span><span class="sxs-lookup"><span data-stu-id="36c63-745">5</span></span>|<span data-ttu-id="36c63-746">"可能"</span><span class="sxs-lookup"><span data-stu-id="36c63-746">"May"</span></span>|  
|<span data-ttu-id="36c63-747">6</span><span class="sxs-lookup"><span data-stu-id="36c63-747">6</span></span>|<span data-ttu-id="36c63-748">"年 6 月"</span><span class="sxs-lookup"><span data-stu-id="36c63-748">"June"</span></span>|  
|<span data-ttu-id="36c63-749">7</span><span class="sxs-lookup"><span data-stu-id="36c63-749">7</span></span>|<span data-ttu-id="36c63-750">"年 7 月"</span><span class="sxs-lookup"><span data-stu-id="36c63-750">"July"</span></span>|  
|<span data-ttu-id="36c63-751">8</span><span class="sxs-lookup"><span data-stu-id="36c63-751">8</span></span>|<span data-ttu-id="36c63-752">"年 8 月"</span><span class="sxs-lookup"><span data-stu-id="36c63-752">"August"</span></span>|  
|<span data-ttu-id="36c63-753">9</span><span class="sxs-lookup"><span data-stu-id="36c63-753">9</span></span>|<span data-ttu-id="36c63-754">"年 9 月"</span><span class="sxs-lookup"><span data-stu-id="36c63-754">"September"</span></span>|  
|<span data-ttu-id="36c63-755">10</span><span class="sxs-lookup"><span data-stu-id="36c63-755">10</span></span>|<span data-ttu-id="36c63-756">"年 10 月"</span><span class="sxs-lookup"><span data-stu-id="36c63-756">"October"</span></span>|  
|<span data-ttu-id="36c63-757">11</span><span class="sxs-lookup"><span data-stu-id="36c63-757">11</span></span>|<span data-ttu-id="36c63-758">"年 11 月"</span><span class="sxs-lookup"><span data-stu-id="36c63-758">"November"</span></span>|  
|<span data-ttu-id="36c63-759">12</span><span class="sxs-lookup"><span data-stu-id="36c63-759">12</span></span>|<span data-ttu-id="36c63-760">"年 12 月"</span><span class="sxs-lookup"><span data-stu-id="36c63-760">"December"</span></span>|  
|<span data-ttu-id="36c63-761">13</span><span class="sxs-lookup"><span data-stu-id="36c63-761">13</span></span>|<span data-ttu-id="36c63-762">""</span><span class="sxs-lookup"><span data-stu-id="36c63-762">""</span></span>|  
  
 <span data-ttu-id="36c63-763"><xref:System.Globalization.Calendar> 对象可以适应具有 13 个月的日历。</span><span class="sxs-lookup"><span data-stu-id="36c63-763"><xref:System.Globalization.Calendar> objects can accommodate calendars with 13 months.</span></span> <span data-ttu-id="36c63-764">对于 12 个月日历，则始终作为名称的第 13 个月返回空字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-764">For 12-month calendars, the empty string is always returned as the name of the 13th month.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="36c63-765"><paramref name="month" /> 小于 1 或大于 13。</span><span class="sxs-lookup"><span data-stu-id="36c63-765"><paramref name="month" /> is less than 1 or greater than 13.</span></span></exception>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.GregorianCalendar" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
      </Docs>
    </Member>
    <Member MemberName="GetShortestDayName">
      <MemberSignature Language="C#" Value="public string GetShortestDayName (DayOfWeek dayOfWeek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetShortestDayName(valuetype System.DayOfWeek dayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.GetShortestDayName(System.DayOfWeek)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetShortestDayName(DayOfWeek dayOfWeek);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dayOfWeek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="dayOfWeek"><span data-ttu-id="36c63-766"><see cref="T:System.DayOfWeek" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="36c63-766">One of the <see cref="T:System.DayOfWeek" /> values.</span></span></param>
        <summary><span data-ttu-id="36c63-767">获取与当前 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象关联的周中指定日期的最短日期缩写名称。</span><span class="sxs-lookup"><span data-stu-id="36c63-767">Obtains the shortest abbreviated day name for a specified day of the week associated with the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="36c63-768">对应于 <paramref name="dayOfWeek" /> 参数的周的缩写名称。</span><span class="sxs-lookup"><span data-stu-id="36c63-768">The abbreviated name of the week that corresponds to the <paramref name="dayOfWeek" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36c63-769">下面的示例演示几个方法和指定日期和时间格式模式、 本机日历名称和完整和缩写的月份和日期名称的属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-769">The following example demonstrates several methods and properties that specify date and time format patterns, native calendar name, and full and abbreviated month and day names.</span></span>  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="36c63-770"><paramref name="dayOfWeek" /> 不是 <see cref="T:System.DayOfWeek" /> 枚举中的值。</span><span class="sxs-lookup"><span data-stu-id="36c63-770"><paramref name="dayOfWeek" /> is not a value in the <see cref="T:System.DayOfWeek" /> enumeration.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InvariantInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo InvariantInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.DateTimeFormatInfo InvariantInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantInfo As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::DateTimeFormatInfo ^ InvariantInfo { System::Globalization::DateTimeFormatInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36c63-771">获取不依赖于区域性的（固定）默认只读的 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-771">Gets the default read-only <see cref="T:System.Globalization.DateTimeFormatInfo" /> object that is culture-independent (invariant).</span></span></summary>
        <value><span data-ttu-id="36c63-772">不依赖于区域性的（固定的）默认只读对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-772">A read-only object that is culture-independent (invariant).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-773">此属性不会更改，无论当前区域性。</span><span class="sxs-lookup"><span data-stu-id="36c63-773">This property does not change, regardless of the current culture.</span></span> <span data-ttu-id="36c63-774">因此，固定区域性的<xref:System.Globalization.DateTimeFormatInfo>对象可以用于生成在分析和格式设置操作是多区域性的数据的一致，依赖于区域性的结果。</span><span class="sxs-lookup"><span data-stu-id="36c63-774">Because of this, the invariant culture's <xref:System.Globalization.DateTimeFormatInfo> object can be used to produce consistent, culture-independent results in parsing and formatting operations on data that is multi-cultural.</span></span> <span data-ttu-id="36c63-775">例如，如果从多个区域性的日期和时间数据将保留在字符串形式，它可进行格式设置通过使用<xref:System.Globalization.DateTimeFormatInfo>固定区域性的对象，并已保存。</span><span class="sxs-lookup"><span data-stu-id="36c63-775">For example, if date and time data from multiple cultures is to be persisted in string form, it can be formatted by using the <xref:System.Globalization.DateTimeFormatInfo> object of the invariant culture and saved.</span></span> <span data-ttu-id="36c63-776">然后可以通过使用固定区域性的分析它<xref:System.Globalization.DateTimeFormatInfo>对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-776">It can then be parsed by using the invariant culture's <xref:System.Globalization.DateTimeFormatInfo> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36c63-777">获取一个值，该值指示 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象是否为只读。</span><span class="sxs-lookup"><span data-stu-id="36c63-777">Gets a value indicating whether the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</span></span></summary>
        <value>
          <span data-ttu-id="36c63-778">如果 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="36c63-778"><see langword="true" /> if the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.ReadOnly(System.Globalization.DateTimeFormatInfo)" />
      </Docs>
    </Member>
    <Member MemberName="LongDatePattern">
      <MemberSignature Language="C#" Value="public string LongDatePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LongDatePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.LongDatePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property LongDatePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LongDatePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36c63-779">获取或设置长日期值的自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-779">Gets or sets the custom format string for a long date value.</span></span></summary>
        <value><span data-ttu-id="36c63-780">长日期值的自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-780">The custom format string for a long date value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-781"><xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>属性定义通过调用返回的日期字符串的区域性特定格式<xref:System.DateTime.ToString%2A?displayProperty=nameWithType>和<xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType>方法和由复合格式字符串，则提供"D"标准格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-781">The <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> property defines the culture-specific format of date strings that are returned by calls to the <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> and <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> methods and by composite format strings that are supplied the "D" standard format string.</span></span> <span data-ttu-id="36c63-782">下面的示例阐释了以下之间的关系:"D"标准格式字符串中，自定义格式字符串由<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>属性和特定于区域性的日期的表示形式。</span><span class="sxs-lookup"><span data-stu-id="36c63-782">The following example illustrates the relationships among the following: the "D" standard format string, the custom format string returned by the <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> property, and  the culture-specific representation of a date.</span></span>  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongDatePattern#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CS/longdatepattern1.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongDatePattern#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/VB/longdatepattern1.vb#2)]  
  
 <span data-ttu-id="36c63-783">请参阅[自定义日期和时间格式字符串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)可结合使用来构造自定义格式字符串，例如，"dddd，dd MMMM yyyy"的单个自定义格式说明符。</span><span class="sxs-lookup"><span data-stu-id="36c63-783">See [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) for individual custom format specifiers that can be combined to construct custom format strings such as "dddd, dd MMMM yyyy".</span></span>  
  
 <span data-ttu-id="36c63-784">应在为确切字符串而不是使用日期分隔符占位符的长日期模式来设置日期分隔符。</span><span class="sxs-lookup"><span data-stu-id="36c63-784">You should set the date separator in the long date pattern to an exact string instead of using the date separator placeholder.</span></span> <span data-ttu-id="36c63-785">例如，若要获取 MM DD yyyy 的模式，设置为"MM DD yyyy"的长日期模式。</span><span class="sxs-lookup"><span data-stu-id="36c63-785">For example, to obtain the pattern MM-DD-yyyy, set the long date pattern to "MM-DD-yyyy".</span></span>  
  
 <span data-ttu-id="36c63-786">如果日历由区域性发生变化，可能会更改此属性的值。</span><span class="sxs-lookup"><span data-stu-id="36c63-786">The value of this property may change if the calendar used by a culture changes.</span></span> <span data-ttu-id="36c63-787">例如，下面的示例演示如何<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>属性<xref:System.Globalization.CultureInfo>对象以表示阿拉伯语 （叙利亚） 区域性更改时<xref:System.Globalization.Calendar>对象使用的区域性发生变化。</span><span class="sxs-lookup"><span data-stu-id="36c63-787">For instance, the following example shows how the <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> property of a <xref:System.Globalization.CultureInfo> object that represents the Arabic (Syria) culture changes when the <xref:System.Globalization.Calendar> object used by the culture changes.</span></span>  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongDatePattern#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CS/longdatepattern2.cs#3)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongDatePattern#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/VB/longdatepattern2.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="36c63-788">下面的示例显示的值<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>某些区域性的属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-788">The following example displays the value of the <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> property for a few cultures.</span></span>  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.LongDatePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CPP/dtfi_longdatepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongDatePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/CS/dtfi_longdatepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongDatePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongDatePattern/VB/dtfi_longdatepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="36c63-789">该属性设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="36c63-789">The property is being set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="36c63-790">设置了该属性，但 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象为只读。</span><span class="sxs-lookup"><span data-stu-id="36c63-790">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LongTimePattern">
      <MemberSignature Language="C#" Value="public string LongTimePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LongTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.LongTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property LongTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LongTimePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36c63-791">为长时间值获取或设置自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-791">Gets or sets the custom format string for a long time value.</span></span></summary>
        <value><span data-ttu-id="36c63-792">长时间值的格式模式。</span><span class="sxs-lookup"><span data-stu-id="36c63-792">The format pattern for a long time value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-793"><xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>属性定义通过调用返回的日期字符串的区域性特定格式<xref:System.DateTime.ToString%2A?displayProperty=nameWithType>和<xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType>方法和由复合格式字符串，则提供"T"标准格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-793">The <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> property defines the culture-specific format of date strings that are returned by calls to the <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> and <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> methods and by composite format strings that are supplied the "T" standard format string.</span></span>  
  
 <span data-ttu-id="36c63-794">我们建议你在为确切字符串而不是使用时间分隔符占位符的长时间模式中设置的时间分隔符。</span><span class="sxs-lookup"><span data-stu-id="36c63-794">We recommend that you set the time separator in the long time pattern to an exact string instead of using the time separator placeholder.</span></span> <span data-ttu-id="36c63-795">例如，若要获取模式 h mm ss，设置为"h-mm-ss"的长日期模式。</span><span class="sxs-lookup"><span data-stu-id="36c63-795">For example, to obtain the pattern h-mm-ss, set the long date pattern to "h-mm-ss".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36c63-796">下面的示例显示的值<xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>某些区域性。</span><span class="sxs-lookup"><span data-stu-id="36c63-796">The following example displays the value of <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> for a few cultures.</span></span>  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.LongTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongTimePattern/CPP/dtfi_longtimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.LongTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongTimePattern/CS/dtfi_longtimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.LongTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.LongTimePattern/VB/dtfi_longtimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="36c63-797">该属性设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="36c63-797">The property is being set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="36c63-798">设置了该属性，但 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象为只读。</span><span class="sxs-lookup"><span data-stu-id="36c63-798">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MonthDayPattern">
      <MemberSignature Language="C#" Value="public string MonthDayPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MonthDayPattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.MonthDayPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthDayPattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MonthDayPattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36c63-799">获取或设置月份和日期值的自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-799">Gets or sets the custom format string for a month and day value.</span></span></summary>
        <value><span data-ttu-id="36c63-800">月份和日期值的自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-800">The custom format string for a month and day value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-801"><xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A>属性定义通过调用返回的日期字符串的区域性特定格式<xref:System.DateTime.ToString%2A?displayProperty=nameWithType>和<xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType>方法和由复合格式字符串，则提供的"m"和"M"标准格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-801">The <xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A> property defines the culture-specific format of date strings that are returned by calls to the <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> and <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> methods and by composite format strings that are supplied the "m" and "M" standard format strings.</span></span>  
  
 <span data-ttu-id="36c63-802">如果此属性受影响的值<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>属性更改。</span><span class="sxs-lookup"><span data-stu-id="36c63-802">This property is affected if the value of the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property changes.</span></span>  
  
 <span data-ttu-id="36c63-803">我们建议你在为确切字符串而不是使用日期分隔符占位符的月份和日期模式中设置的日期分隔符。</span><span class="sxs-lookup"><span data-stu-id="36c63-803">We recommend that you set the date separator in the month and day pattern to an exact string instead of using the date separator placeholder.</span></span> <span data-ttu-id="36c63-804">例如，若要获取的模式 MM DD，设置为"月-日"的月份和日期模式。</span><span class="sxs-lookup"><span data-stu-id="36c63-804">For example, to obtain the pattern MM-DD, set the month and day pattern to "MM-DD".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36c63-805">下面的示例显示的值<xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A>某些区域性。</span><span class="sxs-lookup"><span data-stu-id="36c63-805">The following example displays the value of <xref:System.Globalization.DateTimeFormatInfo.MonthDayPattern%2A> for a few cultures.</span></span>  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.MonthDayPattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.MonthDayPattern/CPP/dtfi_monthdaypattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.MonthDayPattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.MonthDayPattern/CS/dtfi_monthdaypattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.MonthDayPattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.MonthDayPattern/VB/dtfi_monthdaypattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="36c63-806">该属性设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="36c63-806">The property is being set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="36c63-807">设置了该属性，但 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象为只读。</span><span class="sxs-lookup"><span data-stu-id="36c63-807">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MonthGenitiveNames">
      <MemberSignature Language="C#" Value="public string[] MonthGenitiveNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] MonthGenitiveNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthGenitiveNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ MonthGenitiveNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36c63-808">获取或设置与当前 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象关联的月份名称的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="36c63-808">Gets or sets a string array of month names associated with the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object.</span></span></summary>
        <value><span data-ttu-id="36c63-809">月份名称的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="36c63-809">A string array of month names.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-810">在某些语言中，日期部分的月份名称将出现在所有格中。</span><span class="sxs-lookup"><span data-stu-id="36c63-810">In some languages, a month name that is part of a date appears in the genitive case.</span></span> <span data-ttu-id="36c63-811">例如，俄语 （俄罗斯） 或"RU-RU"中的日期，区域性的日编号和包含所有格月份名称，如 1 Января。</span><span class="sxs-lookup"><span data-stu-id="36c63-811">For example, a date in the Russian (Russia) or "ru-RU", culture consists of the day number and the genitive month name, such as 1 Января.</span></span>  
  
 <span data-ttu-id="36c63-812">当设置此属性时，该数组必须是一维，并且必须具有完全 13 个元素。</span><span class="sxs-lookup"><span data-stu-id="36c63-812">When this property is set, the array must be one-dimensional and must have exactly 13 elements.</span></span> <span data-ttu-id="36c63-813"><xref:System.Globalization.Calendar> 对象提供具有 13 个月的日历。</span><span class="sxs-lookup"><span data-stu-id="36c63-813"><xref:System.Globalization.Calendar> objects accommodate calendars with 13 months.</span></span> <span data-ttu-id="36c63-814">第一个元素 （位于索引零的元素） 表示由该年的第一个月<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>属性。如果你设置<xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A>属性，还必须设置<xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-814">The first element (the element at index zero) represents the first month of the year defined by the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property.If you set the <xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A> property, you must also set the <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36c63-815">下面的示例演示几个方法和指定日期和时间格式模式、 本机日历名称和完整和缩写的月份和日期名称的属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-815">The following example demonstrates several methods and properties that specify date and time format patterns, native calendar name, and full and abbreviated month and day names.</span></span>  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="36c63-816">在设置操作中，该数组是多维数组或者长度不是正好为 13 的数组。</span><span class="sxs-lookup"><span data-stu-id="36c63-816">In a set operation, the array is multidimensional or has a length that is not exactly 13.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="36c63-817">在设置操作中，数组或数组的其中一个元素为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="36c63-817">In a set operation, the array or one of its elements is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="36c63-818">在设置操作中，当前的 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象是只读的。</span><span class="sxs-lookup"><span data-stu-id="36c63-818">In a set operation, the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</span></span></exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
      </Docs>
    </Member>
    <Member MemberName="MonthNames">
      <MemberSignature Language="C#" Value="public string[] MonthNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] MonthNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.MonthNames" />
      <MemberSignature Language="VB.NET" Value="Public Property MonthNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ MonthNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36c63-819">获取或设置 <see cref="T:System.String" /> 类型的一维数组，它包含月份的区域性特定的全名。</span><span class="sxs-lookup"><span data-stu-id="36c63-819">Gets or sets a one-dimensional array of type <see cref="T:System.String" /> containing the culture-specific full names of the months.</span></span></summary>
        <value><span data-ttu-id="36c63-820">一个类型 <see cref="T:System.String" /> 的一维数组，该数组包含月份的特定于区域性的完整名称。</span><span class="sxs-lookup"><span data-stu-id="36c63-820">A one-dimensional array of type <see cref="T:System.String" /> containing the culture-specific full names of the months.</span></span> <span data-ttu-id="36c63-821">在 12 个月的日历中，数组的第 13 个元素是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-821">In a 12-month calendar, the 13th element of the array is an empty string.</span></span> <span data-ttu-id="36c63-822"><see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> 数组包含"January"、"February"、"March"、"April"、"May"、"June"、"July"、"August"、"September"、"October"、"November"、"December"和""。</span><span class="sxs-lookup"><span data-stu-id="36c63-822">The array for <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> contains "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December", and "".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-823">当设置此属性时，该数组必须是一维，并且必须具有完全 13 个元素。</span><span class="sxs-lookup"><span data-stu-id="36c63-823">When this property is set, the array must be one-dimensional and must have exactly 13 elements.</span></span> <span data-ttu-id="36c63-824"><xref:System.Globalization.Calendar> 对象提供具有 13 个月的日历。</span><span class="sxs-lookup"><span data-stu-id="36c63-824"><xref:System.Globalization.Calendar> objects accommodate calendars with 13 months.</span></span> <span data-ttu-id="36c63-825">第一个元素 （位于索引零的元素） 表示由该年的第一个月<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-825">The first element (the element at index zero) represents the first month of the year defined by the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property.</span></span>  
  
 <span data-ttu-id="36c63-826">如果你设置<xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A>属性，还必须设置<xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-826">If you set the <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> property, you must also set the <xref:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames%2A> property.</span></span>  
  
 <span data-ttu-id="36c63-827">如果自定义模式中包括的格式模式"MMMM"<xref:System.DateTime.ToString%2A?displayProperty=nameWithType>显示的值<xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A>代替"MMMM"中的格式模式。</span><span class="sxs-lookup"><span data-stu-id="36c63-827">If the custom pattern includes the format pattern "MMMM", <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> displays the value of <xref:System.Globalization.DateTimeFormatInfo.MonthNames%2A> in place of the "MMMM" in the format pattern.</span></span>  
  
 <span data-ttu-id="36c63-828">如果此属性受影响的值<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>属性更改。</span><span class="sxs-lookup"><span data-stu-id="36c63-828">This property is affected if the value of the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property changes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="36c63-829">该属性设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="36c63-829">The property is being set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="36c63-830">该属性正被设置为多维数组或者长度不是正好为 13 的数组。</span><span class="sxs-lookup"><span data-stu-id="36c63-830">The property is being set to an array that is multidimensional or that has a length that is not exactly 13.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="36c63-831">设置了该属性，但 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象为只读。</span><span class="sxs-lookup"><span data-stu-id="36c63-831">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</span></span></exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames" />
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetMonthName(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="NativeCalendarName">
      <MemberSignature Language="C#" Value="public string NativeCalendarName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NativeCalendarName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NativeCalendarName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NativeCalendarName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36c63-832">获取与当前 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象关联的本机日历名称。</span><span class="sxs-lookup"><span data-stu-id="36c63-832">Gets the native name of the calendar associated with the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object.</span></span></summary>
        <value><span data-ttu-id="36c63-833">在与当前 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象关联的区域性中，如果所用日历的本地名称可用，则为该名称；如果该本地日历名称不可用，则为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="36c63-833">The native name of the calendar used in the culture associated with the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object if that name is available, or the empty string ("") if the native calendar name is not available.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36c63-834">下面的示例演示几个方法和指定日期和时间格式模式、 本机日历名称和完整和缩写的月份和日期名称的属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-834">The following example demonstrates several methods and properties that specify date and time format patterns, native calendar name, and full and abbreviated month and day names.</span></span>  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="36c63-835">如果<see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" />是<see cref="T:System.Globalization.TaiwanCalendar" />但<see cref="P:System.Threading.Thread.CurrentCulture" />不是"ZH-TW"，然后<see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />， <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />，和<see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" />返回空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="36c63-835">If <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> is the <see cref="T:System.Globalization.TaiwanCalendar" /> but the <see cref="P:System.Threading.Thread.CurrentCulture" /> is not "zh-TW", then <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, and <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> return an empty string ("").</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PMDesignator">
      <MemberSignature Language="C#" Value="public string PMDesignator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PMDesignator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.PMDesignator" />
      <MemberSignature Language="VB.NET" Value="Public Property PMDesignator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PMDesignator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36c63-836">获取或设置表示处于“下午”（中午后）的各小时的字符串指示符。</span><span class="sxs-lookup"><span data-stu-id="36c63-836">Gets or sets the string designator for hours that are "post meridiem" (after noon).</span></span></summary>
        <value><span data-ttu-id="36c63-837">表示处于“下午”（中午后）的各小时的字符串指示符。</span><span class="sxs-lookup"><span data-stu-id="36c63-837">The string designator for hours that are "post meridiem" (after noon).</span></span> <span data-ttu-id="36c63-838"><see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> 的默认值为"PM"。</span><span class="sxs-lookup"><span data-stu-id="36c63-838">The default for <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> is "PM".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-839"><xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>属性用于所有时间自 12:00:00 （中午） 到 23:59:59.999。</span><span class="sxs-lookup"><span data-stu-id="36c63-839">The <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A> property is used for all times from 12:00:00 (noon) to 23:59:59.999.</span></span>  
  
 <span data-ttu-id="36c63-840">如果自定义模式包括格式模式"tt"并且时间中午后，<xref:System.DateTime.ToString%2A?displayProperty=nameWithType>显示的值<xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>来代替"tt"中的格式模式。</span><span class="sxs-lookup"><span data-stu-id="36c63-840">If the custom pattern includes the format pattern "tt" and the time is after noon, <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> displays the value of <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A> in place of the "tt" in the format pattern.</span></span> <span data-ttu-id="36c63-841">如果自定义模式中包括的格式模式"t"的第一个字符仅<xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A>显示。</span><span class="sxs-lookup"><span data-stu-id="36c63-841">If the custom pattern includes the format pattern "t", only the first character of <xref:System.Globalization.DateTimeFormatInfo.PMDesignator%2A> is displayed.</span></span> <span data-ttu-id="36c63-842">你的应用程序应为其就需要维护 AM 与 PM 之间的差异的语言中使用"tt"。</span><span class="sxs-lookup"><span data-stu-id="36c63-842">Your application should use "tt" for languages for which it is necessary to maintain the distinction between AM and PM.</span></span> <span data-ttu-id="36c63-843">以日语为例，其 AM 和 PM 指示符的差异点为第二个字符，而非第一个字符。</span><span class="sxs-lookup"><span data-stu-id="36c63-843">An example is Japanese, for which the AM and PM designators differ in the second character instead of the first character.</span></span>  
  
 <span data-ttu-id="36c63-844">对于不使用 PM 指示符的区域性，此属性返回一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-844">For cultures that do not use a PM designator, this property returns an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="36c63-845">该属性设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="36c63-845">The property is being set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="36c63-846">设置了该属性，但 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象为只读。</span><span class="sxs-lookup"><span data-stu-id="36c63-846">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</span></span></exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.AMDesignator" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Globalization.DateTimeFormatInfo ReadOnly (System.Globalization.DateTimeFormatInfo dtfi);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.DateTimeFormatInfo ReadOnly(class System.Globalization.DateTimeFormatInfo dtfi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.ReadOnly(System.Globalization.DateTimeFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (dtfi As DateTimeFormatInfo) As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::DateTimeFormatInfo ^ ReadOnly(System::Globalization::DateTimeFormatInfo ^ dtfi);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dtfi" Type="System.Globalization.DateTimeFormatInfo" />
      </Parameters>
      <Docs>
        <param name="dtfi"><span data-ttu-id="36c63-847">要包装的 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-847">The <see cref="T:System.Globalization.DateTimeFormatInfo" /> object to wrap.</span></span></param>
        <summary><span data-ttu-id="36c63-848">返回只读的 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 包装。</span><span class="sxs-lookup"><span data-stu-id="36c63-848">Returns a read-only <see cref="T:System.Globalization.DateTimeFormatInfo" /> wrapper.</span></span></summary>
        <returns><span data-ttu-id="36c63-849">一个只读的 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 包装器。</span><span class="sxs-lookup"><span data-stu-id="36c63-849">A read-only <see cref="T:System.Globalization.DateTimeFormatInfo" /> wrapper.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-850">此包装用于防止对进行任何修改`dtfi`。</span><span class="sxs-lookup"><span data-stu-id="36c63-850">This wrapper prevents any modifications to `dtfi`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="36c63-851"><paramref name="dtfi" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="36c63-851"><paramref name="dtfi" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="RFC1123Pattern">
      <MemberSignature Language="C#" Value="public string RFC1123Pattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RFC1123Pattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.RFC1123Pattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RFC1123Pattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RFC1123Pattern { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36c63-852">获取自定义的格式字符串，该字符串用于基于 Internet 工程任务组 (IETF) 征求意见文档 (RFC) 1123 规范的时间值。</span><span class="sxs-lookup"><span data-stu-id="36c63-852">Gets the custom format string for a time value that is based on the Internet Engineering Task Force (IETF) Request for Comments (RFC) 1123 specification.</span></span></summary>
        <value><span data-ttu-id="36c63-853">基于 IETF RFC 1123 规范的时间值的自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-853">The custom format string for a time value that is based on the IETF RFC 1123 specification.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-854"><xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A>属性定义通过调用返回的日期字符串的区域性特定格式<xref:System.DateTime.ToString%2A?displayProperty=nameWithType>和<xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType>方法和由复合格式字符串，则提供的"r"和"R"标准格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-854">The <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A> property defines the culture-specific format of date strings that are returned by calls to the <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> and <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> methods and by composite format strings that are supplied the "r" and "R" standard format strings.</span></span>  
  
 <span data-ttu-id="36c63-855">RFC1123 模式反映已定义的标准，并且属性是只读的。</span><span class="sxs-lookup"><span data-stu-id="36c63-855">The RFC1123 pattern reflects a defined standard, and the property is read-only.</span></span> <span data-ttu-id="36c63-856">因此，它始终，无论是相同的区域性。</span><span class="sxs-lookup"><span data-stu-id="36c63-856">Therefore, it is always the same, regardless of the culture.</span></span> <span data-ttu-id="36c63-857">定义格式字符串为“ddd, dd MMM yyyy HH':'mm':'ss 'GMT'”。</span><span class="sxs-lookup"><span data-stu-id="36c63-857">The custom format string is "ddd, dd MMM yyyy HH':'mm':'ss 'GMT'".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36c63-858">下面的示例显示几个区域性 RFC1123Pattern 的值。</span><span class="sxs-lookup"><span data-stu-id="36c63-858">The following example displays the value of RFC1123Pattern for a few cultures.</span></span>  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.RFC1123Pattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.RFC1123Pattern/CPP/dtfi_rfc1123pattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.RFC1123Pattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.RFC1123Pattern/CS/dtfi_rfc1123pattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.RFC1123Pattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.RFC1123Pattern/VB/dtfi_rfc1123pattern.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAllDateTimePatterns">
      <MemberSignature Language="C#" Value="public void SetAllDateTimePatterns (string[] patterns, char format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAllDateTimePatterns(string[] patterns, char format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAllDateTimePatterns (patterns As String(), format As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAllDateTimePatterns(cli::array &lt;System::String ^&gt; ^ patterns, char format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patterns" Type="System.String[]" />
        <Parameter Name="format" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="patterns"><span data-ttu-id="36c63-859">自定义格式字符串的数组。</span><span class="sxs-lookup"><span data-stu-id="36c63-859">An array of custom format strings.</span></span></param>
        <param name="format"><span data-ttu-id="36c63-860">在 patterns 参数中指定的与自定义格式字符串关联的标准格式字符串<c></c>。</span><span class="sxs-lookup"><span data-stu-id="36c63-860">The standard format string associated with the custom format strings specified in the <c>patterns</c> parameter.</span></span></param>
        <summary><span data-ttu-id="36c63-861">设置对应于指定的标准格式字符串的自定义日期和时间格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-861">Sets the custom date and time format strings that correspond to a specified standard format string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-862"><xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A>方法为特定的标准日期和时间格式字符串定义对应的自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-862">The <xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A> method defines the custom format strings that correspond to a particular standard date and time format string.</span></span> <span data-ttu-id="36c63-863">如果调用的日期和时间格式设置方法包括标准日期和时间格式字符串指定`format`，该方法使用的第一个元素`patterns`数组，定义结果字符串的格式。</span><span class="sxs-lookup"><span data-stu-id="36c63-863">If a call to a date and time formatting method includes the standard date and time format string specified by `format`, the method uses the first element in the `patterns` array to define the format of the resulting string.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="36c63-864">`Parse`和`TryParse`方法不会完全迭代中的所有字符串`patterns`时分析的字符串表示形式的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="36c63-864">The `Parse` and `TryParse` methods do not fully iterate all strings in `patterns` when parsing the string representation of a date and time.</span></span> <span data-ttu-id="36c63-865">如果你需要分析操作中具有特定格式的日期和时间字符串，则应传递到的有效格式的数组<xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>， <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>， <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>，或<xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="36c63-865">If you require a date and time string to have particular formats in a parsing operation, you should pass the array of valid formats to the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>, <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>, <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>, or <xref:System.DateTimeOffset.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTimeOffset%40%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="36c63-866">你可以定义自定义格式字符串对应于"d"、"D"、"t"、"T"和"y"或"Y"标准日期和时间格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-866">You can define custom format strings that correspond to the "d", "D", "t", "T", and "y" or "Y" standard date and time format strings.</span></span> <span data-ttu-id="36c63-867">如果值`format`是任何其他标准格式字符串，<xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A>方法抛出异常<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="36c63-867">If the value of `format` is any other standard format string, the <xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A> method throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="36c63-868">如果你的自定义日期和时间格式字符串中包含的日期分隔符，则应显式指定的日期分隔符，而不是依靠替换特定的日期分隔符为"/"自定义格式说明符分析或格式设置方法。</span><span class="sxs-lookup"><span data-stu-id="36c63-868">If your custom date and time format strings include date separators, you should explicitly specify a date separator instead of relying on the parsing or formatting method that replaces the "/" custom format specifier with a particular date separator.</span></span> <span data-ttu-id="36c63-869">例如，若要获取 MM DD yyyy 的模式，使用模式"MM DD yyyy"。</span><span class="sxs-lookup"><span data-stu-id="36c63-869">For example, to obtain the pattern MM-DD-yyyy, use the pattern "MM-DD-yyyy".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36c63-870">下面的示例实例化<xref:System.Globalization.CultureInfo>对象表示为"EN-US"（英语-美国） 区域性，并使用它来分析使用"Y"标准格式字符串的日期和时间字符串的数组。</span><span class="sxs-lookup"><span data-stu-id="36c63-870">The following example instantiates a <xref:System.Globalization.CultureInfo> object that represents the "en-US" (English - United States) culture and uses it to parse an array of date and time strings using the "Y" standard format string.</span></span> <span data-ttu-id="36c63-871">然后，它使用<xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A>方法以将新的自定义格式字符串与"Y"标准格式字符串，然后尝试分析日期和时间字符串的数组相关联。</span><span class="sxs-lookup"><span data-stu-id="36c63-871">It then uses the <xref:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns%2A> method to associate a new custom format string with the "Y" standard format string, and then attempts to parse the array of date and time strings.</span></span> <span data-ttu-id="36c63-872">示例输出所演示，分析和格式设置操作中使用新的自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-872">Output from the example demonstrates that the new custom format string is used in both the parsing and formatting operations.</span></span>  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.setalldatetimepatterns/cs/setalldatetimepatterns.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.setalldatetimepatterns/vb/setalldatetimepatterns.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="36c63-873"><paramref name="patterns" /> 是 <see langword="null" /> 或长度为零的数组。</span><span class="sxs-lookup"><span data-stu-id="36c63-873"><paramref name="patterns" /> is <see langword="null" /> or a zero-length array.</span></span>  
  
 <span data-ttu-id="36c63-874">或</span><span class="sxs-lookup"><span data-stu-id="36c63-874">-or-</span></span>  
  
 <span data-ttu-id="36c63-875"><paramref name="format" /> 不是有效的标准格式字符串，或者是不能设置其模式的标准格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-875"><paramref name="format" /> is not a valid standard format string or is a standard format string whose patterns cannot be set.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="36c63-876"><paramref name="patterns" /> 有一个值为 <see langword="null" /> 的数组元素。</span><span class="sxs-lookup"><span data-stu-id="36c63-876"><paramref name="patterns" /> has an array element whose value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="36c63-877">此 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象是只读的。</span><span class="sxs-lookup"><span data-stu-id="36c63-877">This <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</span></span></exception>
        <altmember cref="Overload:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns" />
      </Docs>
    </Member>
    <Member MemberName="ShortDatePattern">
      <MemberSignature Language="C#" Value="public string ShortDatePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShortDatePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.ShortDatePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortDatePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ShortDatePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36c63-878">获取或设置短日期值的自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-878">Gets or sets the custom format string for a short date value.</span></span></summary>
        <value><span data-ttu-id="36c63-879">短日期值的自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-879">The custom format string for a short date value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-880"><xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>属性定义通过调用返回的日期字符串的区域性特定格式<xref:System.DateTime.ToString%2A?displayProperty=nameWithType>和<xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType>方法和由复合格式字符串，则提供"d"标准格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-880">The <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> property defines the culture-specific format of date strings that are returned by calls to the <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> and <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> methods and by composite format strings that are supplied the "d" standard format string.</span></span>  
  
 <span data-ttu-id="36c63-881">如果此属性受影响的值<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>属性更改。</span><span class="sxs-lookup"><span data-stu-id="36c63-881">This property is affected if the value of the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36c63-882">下面的示例显示的值<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>使用属性和日期值格式<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>某些区域性的属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-882">The following example displays the value of the <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> property and the value of a date formatted using the <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> property for a few cultures.</span></span>  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.ShortDatePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/CS/dtfi_shortdatepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.ShortDatePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/VB/dtfi_shortdatepattern.vb#1)]  
  
 <span data-ttu-id="36c63-883">下面的示例修改<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>属性<xref:System.Globalization.DateTimeFormatInfo>表示英语 （美国） 区域性的格式设置约定的对象。</span><span class="sxs-lookup"><span data-stu-id="36c63-883">The following example modifies the <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> property of a <xref:System.Globalization.DateTimeFormatInfo> object that represents the formatting conventions of the English (United States) culture.</span></span> <span data-ttu-id="36c63-884">它还显示一个 date 值，两次，首先以反映原始<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>属性，然后以反映新的属性值。</span><span class="sxs-lookup"><span data-stu-id="36c63-884">It also displays a date value twice, first to reflect the original <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> property and then to reflect the new property value.</span></span>  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.ShortDatePattern#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/CS/shortdatepattern1.cs#2)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.ShortDatePattern#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortDatePattern/VB/shortdatepattern1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="36c63-885">该属性设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="36c63-885">The property is being set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="36c63-886">设置了该属性，但 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象为只读。</span><span class="sxs-lookup"><span data-stu-id="36c63-886">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ShortestDayNames">
      <MemberSignature Language="C#" Value="public string[] ShortestDayNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ShortestDayNames" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.ShortestDayNames" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortestDayNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ ShortestDayNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36c63-887">获取或设置与当前 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象关联的唯一最短日期缩写名称的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="36c63-887">Gets or sets a string array of the shortest unique abbreviated day names associated with the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object.</span></span></summary>
        <value><span data-ttu-id="36c63-888">日期名称的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="36c63-888">A string array of day names.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36c63-889">下面的示例演示几个方法和指定日期和时间格式模式、 本机日历名称和完整和缩写的月份和日期名称的属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-889">The following example demonstrates several methods and properties that specify date and time format patterns, native calendar name, and full and abbreviated month and day names.</span></span>  
  
 [!code-csharp[sys.glob.DTFI1#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.DTFI1/cs/dtfi1.cs#1)]
 [!code-vb[sys.glob.DTFI1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.DTFI1/vb/dtfi1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="36c63-890">在设置操作中，该数组中不会正好有七个元素。</span><span class="sxs-lookup"><span data-stu-id="36c63-890">In a set operation, the array does not have exactly seven elements.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="36c63-891">在设置操作中，值数组或值数组的其中一个元素为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="36c63-891">In a set operation, the value array or one of the elements of the value array is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="36c63-892">在设置操作中，当前的 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象是只读的。</span><span class="sxs-lookup"><span data-stu-id="36c63-892">In a set operation, the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ShortTimePattern">
      <MemberSignature Language="C#" Value="public string ShortTimePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShortTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.ShortTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ShortTimePattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36c63-893">获取或设置短时间值的自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-893">Gets or sets the custom format string for a short time value.</span></span></summary>
        <value><span data-ttu-id="36c63-894">短时间值的自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-894">The custom format string for a short time value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-895"><xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>属性定义通过调用返回的日期字符串的区域性特定格式<xref:System.DateTime.ToString%2A?displayProperty=nameWithType>和<xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType>方法和由复合格式字符串，则提供"t"标准格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-895">The <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> property defines the culture-specific format of date strings that are returned by calls to the <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> and <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> methods and by composite format strings that are supplied the "t" standard format string.</span></span>  
  
 <span data-ttu-id="36c63-896">我们建议你在为确切字符串而不是使用时间分隔符占位符的短时间模式中设置的时间分隔符。</span><span class="sxs-lookup"><span data-stu-id="36c63-896">We recommend that you set the time separator in the short time pattern to an exact string instead of using the time separator placeholder.</span></span> <span data-ttu-id="36c63-897">例如，若要获取模式 h mm ss，设置短时间模式与"h-mm-ss"。</span><span class="sxs-lookup"><span data-stu-id="36c63-897">For example, to obtain the pattern h-mm-ss, set the short time pattern to "h-mm-ss".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36c63-898">下面的示例显示的值<xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>某些区域性。</span><span class="sxs-lookup"><span data-stu-id="36c63-898">The following example displays the value of <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> for a few cultures.</span></span>  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.ShortTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortTimePattern/CPP/dtfi_shorttimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.ShortTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortTimePattern/CS/dtfi_shorttimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.ShortTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.ShortTimePattern/VB/dtfi_shorttimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="36c63-899">该属性设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="36c63-899">The property is being set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="36c63-900">设置了该属性，但 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象为只读。</span><span class="sxs-lookup"><span data-stu-id="36c63-900">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SortableDateTimePattern">
      <MemberSignature Language="C#" Value="public string SortableDateTimePattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortableDateTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortableDateTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortableDateTimePattern { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36c63-901">获取可排序数据和时间值的自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-901">Gets the custom format string for a sortable date and time value.</span></span></summary>
        <value><span data-ttu-id="36c63-902">可排序的日期和时间值的自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-902">The custom format string for a sortable date and time value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-903"><xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A>属性定义通过调用返回的日期字符串的区域性特定格式<xref:System.DateTime.ToString%2A?displayProperty=nameWithType>和<xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType>方法和由复合格式字符串，则提供"s"标准格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-903">The <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A> property defines the culture-specific format of date strings that are returned by calls to the <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> and <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> methods and by composite format strings that are supplied the "s" standard format string.</span></span>  
  
 <span data-ttu-id="36c63-904">返回的格式字符串<xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A>属性反映已定义的标准 (ISO 8601)，并且属性是只读的。</span><span class="sxs-lookup"><span data-stu-id="36c63-904">The format string returned by the <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A> property reflects a defined standard (ISO 8601), and the property is read-only.</span></span> <span data-ttu-id="36c63-905">因此，它始终，无论是相同的区域性。</span><span class="sxs-lookup"><span data-stu-id="36c63-905">Therefore, it is always the same, regardless of the culture.</span></span> <span data-ttu-id="36c63-906">自定义格式字符串为“yyyy'-'MM'-'dd'T'HH':'mm':'ss”。</span><span class="sxs-lookup"><span data-stu-id="36c63-906">The custom format string is "yyyy'-'MM'-'dd'T'HH':'mm':'ss".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36c63-907">下面的示例显示的值<xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A>某些区域性。</span><span class="sxs-lookup"><span data-stu-id="36c63-907">The following example displays the value of <xref:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern%2A> for a few cultures.</span></span>  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.SortableDateTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.SortableDateTimePattern/CPP/dtfi_sortabledatetimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.SortableDateTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.SortableDateTimePattern/CS/dtfi_sortabledatetimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.SortableDateTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.SortableDateTimePattern/VB/dtfi_sortabledatetimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern" />
      </Docs>
    </Member>
    <Member MemberName="TimeSeparator">
      <MemberSignature Language="C#" Value="public string TimeSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TimeSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TimeSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36c63-908">获取或设置分隔时间中各组成部分（即小时、分钟和秒钟）的字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-908">Gets or sets the string that separates the components of time, that is, the hour, minutes, and seconds.</span></span></summary>
        <value><span data-ttu-id="36c63-909">分隔时间中各组成部分的字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-909">The string that separates the components of time.</span></span> <span data-ttu-id="36c63-910"><see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> 的默认值为“:”。</span><span class="sxs-lookup"><span data-stu-id="36c63-910">The default for <see cref="P:System.Globalization.DateTimeFormatInfo.InvariantInfo" /> is ":".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-911">如果自定义模式中包括的格式模式":"，<xref:System.DateTime.ToString%2A?displayProperty=nameWithType>显示的值<xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A>代替了":"中的格式模式。</span><span class="sxs-lookup"><span data-stu-id="36c63-911">If the custom pattern includes the format pattern ":", <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> displays the value of <xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A> in place of the ":" in the format pattern.</span></span>  
  
 <span data-ttu-id="36c63-912">时间分隔符派生自<xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="36c63-912">The time separator is derived from the <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A> property.</span></span> <span data-ttu-id="36c63-913">我们建议你简而言之设置的时间分隔符或长时间模式而不是使用时间分隔符占位符确切的字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-913">We recommend that you set the time separator in short or long time patterns to an exact string instead of using the time separator placeholder.</span></span> <span data-ttu-id="36c63-914">例如，若要获取模式 h mm ss，设置将模式与"h-mm-ss"。</span><span class="sxs-lookup"><span data-stu-id="36c63-914">For example, to obtain the pattern h-mm-ss, set the pattern to "h-mm-ss".</span></span> <span data-ttu-id="36c63-915">这种做法还可以设置模式，如"h'h 'mm' ss '"(3 h 36 m 分 12 秒)，包括多个类型的分隔符。</span><span class="sxs-lookup"><span data-stu-id="36c63-915">This practice also enables you to set patterns such as "h'h 'mm'm 'ss's'" (3h 36m 12s) that include multiple types of separators.</span></span> <span data-ttu-id="36c63-916"><xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A>属性定义替换时间分隔符的字符串 (":"自定义日期和时间格式说明符) 中的结果字符串中的格式设置操作。</span><span class="sxs-lookup"><span data-stu-id="36c63-916">The <xref:System.Globalization.DateTimeFormatInfo.TimeSeparator%2A> property defines the string that replaces the time separator (":" custom date and time format specifier) in a result string in a formatting operation.</span></span> <span data-ttu-id="36c63-917">它还定义分析操作中的时间分隔符字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-917">It also defines the time separator string in a parsing operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36c63-918">下面的示例实例化<xref:System.Globalization.CultureInfo>对象对于 EN-US 区域性中，更改到其日期分隔符"。"，并通过使用"t"、"T"、"F"、"f"、"G"和"g"标准格式字符串来显示日期。</span><span class="sxs-lookup"><span data-stu-id="36c63-918">The following example instantiates a <xref:System.Globalization.CultureInfo> object for the en-US culture, changes its date separator to ".", and displays a date by using the "t", "T", "F", "f", "G", and "g" standard format strings.</span></span>  
  
 [!code-csharp[System.Globalization.DateTimeFormatInfo.TimeSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.timeseparator/cs/timeseparatorex.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.TimeSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.datetimeformatinfo.timeseparator/vb/timeseparatorex.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="36c63-919">该属性设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="36c63-919">The property is being set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="36c63-920">设置了该属性，但 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象为只读。</span><span class="sxs-lookup"><span data-stu-id="36c63-920">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</span></span></exception>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.DateSeparator" />
      </Docs>
    </Member>
    <Member MemberName="UniversalSortableDateTimePattern">
      <MemberSignature Language="C#" Value="public string UniversalSortableDateTimePattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniversalSortableDateTimePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UniversalSortableDateTimePattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UniversalSortableDateTimePattern { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36c63-921">获取通用的可排序数据和时间字符串的自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-921">Gets the custom format string for a universal, sortable date and time string.</span></span></summary>
        <value><span data-ttu-id="36c63-922">通用的可排序的日期和时间字符串的自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-922">The custom format string for a universal, sortable date and time string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-923"><xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A>属性定义通过调用返回的日期字符串的格式<xref:System.DateTime.ToString%2A?displayProperty=nameWithType>和<xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType>方法和由复合格式字符串，则提供"u"标准格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-923">The <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> property defines the format of date strings that are returned by calls to the <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> and <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> methods and by composite format strings that are supplied the "u" standard format string.</span></span> <span data-ttu-id="36c63-924">它可以用于显示日期和时间与结束时的通用时间指示符"Z"可排序顺序。</span><span class="sxs-lookup"><span data-stu-id="36c63-924">It can be used to display dates and times in a sortable order with the universal time designator "Z" at the end.</span></span> <span data-ttu-id="36c63-925">格式为可排序，因为它使用前导零的年、 月、 日、 小时、 分钟和秒。</span><span class="sxs-lookup"><span data-stu-id="36c63-925">The format is sortable because it uses leading zeros for year, month, day, hour, minute, and second.</span></span> <span data-ttu-id="36c63-926">自定义格式字符串 ("yyyy '-' MM'-' dd HH': 'mm': 'ss'Z'") 区域性或格式提供程序无论是相同的。</span><span class="sxs-lookup"><span data-stu-id="36c63-926">The custom format string ("yyyy'-'MM'-'dd HH':'mm':'ss'Z'") is the same regardless of culture or format provider.</span></span>  
  
 <span data-ttu-id="36c63-927">返回的格式字符串<xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A>属性反映已定义的标准，并且属性是只读的。</span><span class="sxs-lookup"><span data-stu-id="36c63-927">The format string returned by the <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> property reflects a defined standard, and the property is read-only.</span></span> <span data-ttu-id="36c63-928">因此，它始终，无论是相同的区域性。</span><span class="sxs-lookup"><span data-stu-id="36c63-928">Therefore, it is always the same, regardless of the culture.</span></span> <span data-ttu-id="36c63-929">自定义格式字符串为“yyyy'-'MM'-'dd HH':'mm':'ss'Z'”。</span><span class="sxs-lookup"><span data-stu-id="36c63-929">The custom format string is "yyyy'-'MM'-'dd HH':'mm':'ss'Z'".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36c63-930">下面的示例显示的值<xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A>某些区域性。</span><span class="sxs-lookup"><span data-stu-id="36c63-930">The following example displays the value of <xref:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern%2A> for a few cultures.</span></span>  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern/CPP/dtfi_universalsortabledatetimepattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern/CS/dtfi_universalsortabledatetimepattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern/VB/dtfi_universalsortabledatetimepattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern" />
      </Docs>
    </Member>
    <Member MemberName="YearMonthPattern">
      <MemberSignature Language="C#" Value="public string YearMonthPattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string YearMonthPattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.DateTimeFormatInfo.YearMonthPattern" />
      <MemberSignature Language="VB.NET" Value="Public Property YearMonthPattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ YearMonthPattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="36c63-931">获取或设置年份和月份值的自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-931">Gets or sets the custom format string for a year and month value.</span></span></summary>
        <value><span data-ttu-id="36c63-932">年份和月份值的自定义格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-932">The custom format string for a year and month value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36c63-933"><xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A>属性定义通过调用返回的日期字符串的区域性特定格式<xref:System.DateTime.ToString%2A?displayProperty=nameWithType>和<xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType>方法和由复合格式字符串，则提供的"y"和"Y"标准格式字符串。</span><span class="sxs-lookup"><span data-stu-id="36c63-933">The <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A> property defines the culture-specific format of date strings that are returned by calls to the <xref:System.DateTime.ToString%2A?displayProperty=nameWithType> and <xref:System.DateTimeOffset.ToString%2A?displayProperty=nameWithType> methods and by composite format strings that are supplied the "y" and "Y" standard format strings.</span></span>  
  
 <span data-ttu-id="36c63-934">如果此属性受影响的值<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>属性更改。</span><span class="sxs-lookup"><span data-stu-id="36c63-934">This property is affected if the value of the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property changes.</span></span>  
  
 <span data-ttu-id="36c63-935">我们建议你在为确切字符串而不是使用日期分隔符占位符年月模式中设置的日期分隔符。</span><span class="sxs-lookup"><span data-stu-id="36c63-935">We recommend that you set the date separator in the year month pattern to an exact string instead of using the date separator placeholder.</span></span> <span data-ttu-id="36c63-936">例如，若要获取 MM yyyy 的模式，设置为"MM yyyy"年月模式。</span><span class="sxs-lookup"><span data-stu-id="36c63-936">For example, to get the pattern MM-yyyy, set the year month pattern to "MM-yyyy".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36c63-937">下面的示例显示的值<xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A>某些区域性。</span><span class="sxs-lookup"><span data-stu-id="36c63-937">The following example displays the value of <xref:System.Globalization.DateTimeFormatInfo.YearMonthPattern%2A> for a few cultures.</span></span>  
  
 [!code-cpp[System.Globalization.DateTimeFormatInfo.YearMonthPattern#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.YearMonthPattern/CPP/dtfi_yearmonthpattern.cpp#1)]
 [!code-csharp[System.Globalization.DateTimeFormatInfo.YearMonthPattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.YearMonthPattern/CS/dtfi_yearmonthpattern.cs#1)]
 [!code-vb[System.Globalization.DateTimeFormatInfo.YearMonthPattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.DateTimeFormatInfo.YearMonthPattern/VB/dtfi_yearmonthpattern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="36c63-938">该属性设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="36c63-938">The property is being set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="36c63-939">设置了该属性，但 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 对象为只读。</span><span class="sxs-lookup"><span data-stu-id="36c63-939">The property is being set and the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object is read-only.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>