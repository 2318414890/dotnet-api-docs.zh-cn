<Type Name="AspCodeRegex" FullName="System.Web.RegularExpressions.AspCodeRegex">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9abaca16c1e50b8d47fcf0192462ad6d4d20183d" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37605128" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AspCodeRegex : System.Text.RegularExpressions.Regex" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi AspCodeRegex extends System.Text.RegularExpressions.Regex" />
  <TypeSignature Language="DocId" Value="T:System.Web.RegularExpressions.AspCodeRegex" />
  <TypeSignature Language="VB.NET" Value="Public Class AspCodeRegex&#xA;Inherits Regex" />
  <TypeSignature Language="C++ CLI" Value="public ref class AspCodeRegex : System::Text::RegularExpressions::Regex" />
  <TypeSignature Language="F#" Value="type AspCodeRegex = class&#xA;    inherit Regex" />
  <AssemblyInfo>
    <AssemblyName>System.Web.RegularExpressions</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.RegularExpressions.Regex</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供正则表达式以分析 ASP.NET 代码块。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.RegularExpressions.AspCodeRegex>类提供了已编译的正则表达式以分析 ASP.NET 代码块 (`<%` ... `%>`）格式模式中出现的位置生成。  
  
> [!NOTE]
>  <xref:System.Web.RegularExpressions>类用于在内部由.NET Framework 分析 ASP.NET 页。  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <altmember cref="T:System.Text.RegularExpressions.Regex" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.RegularExpressions.AspCodeRegex" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AspCodeRegex ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.RegularExpressions.AspCodeRegex.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AspCodeRegex();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.RegularExpressions</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.RegularExpressions.AspCodeRegex" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数实例化已编译的正则表达式的预定义的正则表达式模式是`\G<%(?!@)(?<code>.*?)%>`。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AspCodeRegex (TimeSpan A_1);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(valuetype System.TimeSpan A_1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.RegularExpressions.AspCodeRegex.#ctor(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (A_1 As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AspCodeRegex(TimeSpan A_1);" />
      <MemberSignature Language="F#" Value="new System.Web.RegularExpressions.AspCodeRegex : TimeSpan -&gt; System.Web.RegularExpressions.AspCodeRegex" Usage="new System.Web.RegularExpressions.AspCodeRegex A_1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="A_1" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="A_1">如果匹配操作不应超时，则为超时间隔或 <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</param>
        <summary>用指定的超时值初始化 <see cref="T:System.Web.RegularExpressions.AspCodeRegex" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `A_1`参数表示正则表达式引擎尝试查找匹配项，在操作超时之前和在此期间的最大时间间隔<xref:System.Text.RegularExpressions.RegexMatchTimeoutException>引发异常。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>