<Type Name="VisualBrush" FullName="System.Windows.Media.VisualBrush">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fb6b6f556ecaad7c7e56b2204108667f2e58bb8e" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51933150" /></Metadata><TypeSignature Language="C#" Value="public sealed class VisualBrush : System.Windows.Media.TileBrush" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed VisualBrush extends System.Windows.Media.TileBrush" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.VisualBrush" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class VisualBrush&#xA;Inherits TileBrush" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualBrush sealed : System::Windows::Media::TileBrush" />
  <TypeSignature Language="F#" Value="type VisualBrush = class&#xA;    inherit TileBrush" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.TileBrush</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>使用 <see cref="P:System.Windows.Media.VisualBrush.Visual" /> 绘制区域。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有两种方法来指定<xref:System.Windows.Media.VisualBrush.Visual%2A>内容的<xref:System.Windows.Media.VisualBrush>。  
  
-   创建一个新<xref:System.Windows.Media.Visual>并使用它来设置<xref:System.Windows.Media.VisualBrush.Visual%2A>属性的<xref:System.Windows.Media.VisualBrush>。  
  
-   使用现有<xref:System.Windows.Media.Visual>，这将创建目标的重复图像<xref:System.Windows.Media.Visual>。 然后，可以使用<xref:System.Windows.Media.VisualBrush>创建有趣的效果，例如反射和放大效果。  
  
 定义一个新<xref:System.Windows.Media.VisualBrush.Visual%2A>有关<xref:System.Windows.Media.VisualBrush>并且<xref:System.Windows.Media.Visual>是<xref:System.Windows.UIElement>布局系统 （如面板或控件） 上运行<xref:System.Windows.UIElement>及其子元素时<xref:System.Windows.Media.VisualBrush.AutoLayoutContent%2A>属性设置为`true`。 但是，根<xref:System.Windows.UIElement>实质上独立于系统; 其余样式、 情节提要和外部布局不能渗透此边界。 因此，应显式指定根的大小<xref:System.Windows.UIElement>，因为其唯一父级是<xref:System.Windows.Media.VisualBrush>，因此它不能自动调整自身大小到当前所绘制的区域。 有关 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 中的布局的更多信息，请参阅[布局](~/docs/framework/wpf/advanced/layout.md)。  
  
 可视化树的内容的最新更新<xref:System.Windows.Media.VisualBrush>如果将不会传播<xref:System.Windows.Media.Effects.BitmapEffect>画笔的父链中。 在上方效果的对象上强制场景的更新即可解决此限制。 您可以调用<xref:System.Windows.UIElement.InvalidateVisual%2A>或包含一个动画，以强制场景的更新。  
  
 **Freezable 功能：** 从继承，因此<xref:System.Windows.Freezable>类，<xref:System.Windows.Media.VisualBrush>类提供多种特殊功能：<xref:System.Windows.Media.VisualBrush>可以声明为对象和在多个对象之间共享。 有关所提供的不同功能的详细信息<xref:System.Windows.Freezable>对象，请参阅[Freezable 对象概述](~/docs/framework/wpf/advanced/freezable-objects-overview.md)。  
  
> [!NOTE]
>  一个<xref:System.Windows.Media.VisualBrush>不能成为只读 （冻结） 时其<xref:System.Windows.Media.VisualBrush.Visual%2A>属性设置为任何值 `null.`  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160049">VisualBrush 示例</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Media.VisualBrush" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualBrush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualBrush.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualBrush();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Media.VisualBrush" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160049">VisualBrush 示例</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualBrush (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualBrush.#ctor(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualBrush(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.VisualBrush : System.Windows.Media.Visual -&gt; System.Windows.Media.VisualBrush" Usage="new System.Windows.Media.VisualBrush visual" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">新 <see cref="T:System.Windows.Media.VisualBrush" /> 的内容。</param>
        <summary>初始化包含指定 <see cref="P:System.Windows.Media.VisualBrush.Visual" /> 的 <see cref="T:System.Windows.Media.VisualBrush" /> 类的一个新实例。</summary>
        <remarks>To be added.</remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160049">VisualBrush 示例</related>
      </Docs>
    </Member>
    <Member MemberName="AutoLayoutContent">
      <MemberSignature Language="C#" Value="public bool AutoLayoutContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoLayoutContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualBrush.AutoLayoutContent" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoLayoutContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoLayoutContent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoLayoutContent : bool with get, set" Usage="System.Windows.Media.VisualBrush.AutoLayoutContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指定此 <see cref="T:System.Windows.Media.VisualBrush" /> 是否将在其 <see cref="P:System.Windows.Media.VisualBrush.Visual" /> 上运行布局。</summary>
        <value>如果此画笔应在其 <see cref="P:System.Windows.Media.VisualBrush.Visual" /> 上运行布局，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性设置为`true`才起作用时，才此画笔<xref:System.Windows.Media.VisualBrush.Visual%2A>为非父<xref:System.Windows.UIElement>。  
  
<a name="dependencyPropertyInfo_AutoLayoutContent"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Media.VisualBrush.AutoLayoutContentProperty>|  
|元数据属性设置为 `true`|无|  
  
   
  
## Examples  
 下面的示例显示的效果<xref:System.Windows.Media.VisualBrush.AutoLayoutContent%2A>非父属性<xref:System.Windows.UIElement>。  
  
 [!code-csharp[visualbrush_markup_snip#AutoLayoutContentNonParentedUIElementExample](~/samples/snippets/csharp/VS_Snippets_Wpf/visualbrush_markup_snip/CSharp/AutoLayoutContentExample.cs#autolayoutcontentnonparenteduielementexample)]
 [!code-vb[visualbrush_markup_snip#AutoLayoutContentNonParentedUIElementExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/visualbrush_markup_snip/visualbasic/autolayoutcontentexample.vb#autolayoutcontentnonparenteduielementexample)]
 [!code-xaml[visualbrush_markup_snip#AutoLayoutContentNonParentedUIElementExample](~/samples/snippets/xaml/VS_Snippets_Wpf/visualbrush_markup_snip/XAML/AutoLayoutContentExample.xaml#autolayoutcontentnonparenteduielementexample)]  
  
 下图显示示例的输出：  
  
 ![AutoLayoutContent 非&#45;父级 UIElement](~/add/media/graphicsmm-visualbrush-autolayoutcontentproperty-nonparented.png "无父级 UIElement 的 AutoLayoutContent")  
  
 下面的示例演示的效果<xref:System.Windows.Media.VisualBrush.AutoLayoutContent%2A>父级的属性<xref:System.Windows.UIElement>。  
  
 [!code-csharp[visualbrush_markup_snip#AutoLayoutContentParentedUIElementExample](~/samples/snippets/csharp/VS_Snippets_Wpf/visualbrush_markup_snip/CSharp/AutoLayoutContentExample.cs#autolayoutcontentparenteduielementexample)]
 [!code-vb[visualbrush_markup_snip#AutoLayoutContentParentedUIElementExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/visualbrush_markup_snip/visualbasic/autolayoutcontentexample.vb#autolayoutcontentparenteduielementexample)]
 [!code-xaml[visualbrush_markup_snip#AutoLayoutContentParentedUIElementExample](~/samples/snippets/xaml/VS_Snippets_Wpf/visualbrush_markup_snip/XAML/AutoLayoutContentExample.xaml#autolayoutcontentparenteduielementexample)]  
  
 下图显示示例的输出：  
  
 ![父级 UIElement 的 AutoLayoutContent](~/add/media/graphicsmm-visualbrush-autolayoutcontentproperty-parented.png "父级 UIElement 的 AutoLayoutContent")  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoLayoutContentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AutoLayoutContentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AutoLayoutContentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.VisualBrush.AutoLayoutContentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutoLayoutContentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AutoLayoutContentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AutoLayoutContentProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.VisualBrush.AutoLayoutContentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Media.VisualBrush.AutoLayoutContent" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.VisualBrush Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.VisualBrush Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualBrush.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As VisualBrush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::VisualBrush ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.VisualBrush" Usage="visualBrush.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.VisualBrush</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建此 <see cref="T:System.Windows.Media.VisualBrush" /> 的可修改克隆，从而深度复制此对象的值。</summary>
        <returns>当前对象的可修改复本。 即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 <see langword="true." />，所克隆对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也为 <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法用于生成的可修改副本冻结<xref:System.Windows.Freezable>对象 (或任何<xref:System.Windows.Freezable>对象)。 为方便起见，此方法隐藏继承的版本使用的强类型实现。  
  
 有关详情，请参阅<xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>。  
  
 在复制依赖项属性时，此方法会复制资源引用和数据绑定（但可能不再解析），但不复制动画或其当前值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.VisualBrush CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.VisualBrush CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualBrush.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As VisualBrush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::VisualBrush ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.Media.VisualBrush" Usage="visualBrush.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.VisualBrush</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建此 <see cref="T:System.Windows.Media.VisualBrush" /> 对象的可修改复本，从而深度复制此对象的当前值。 不复制资源引用、数据绑定和动画，而是复制其当前值。</summary>
        <returns>当前对象的可修改复本。 即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 <see langword="true" />，所克隆的对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也将为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法用于生成的可修改副本冻结<xref:System.Windows.Freezable>对象 (或任何<xref:System.Windows.Freezable>对象)。 为方便起见，此方法隐藏继承的版本使用的强类型实现。  
  
 有关详情，请参阅<xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualBrush.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="visualBrush.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContentBounds">
      <MemberSignature Language="C#" Value="protected override void GetContentBounds (out System.Windows.Rect contentBounds);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetContentBounds([out] valuetype System.Windows.Rect&amp; contentBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualBrush.GetContentBounds(System.Windows.Rect@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetContentBounds (ByRef contentBounds As Rect)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetContentBounds([Runtime::InteropServices::Out] System::Windows::Rect % contentBounds);" />
      <MemberSignature Language="F#" Value="override this.GetContentBounds :  -&gt; unit" Usage="visualBrush.GetContentBounds contentBounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentBounds" Type="System.Windows.Rect" RefType="out" />
      </Parameters>
      <Docs>
        <param name="contentBounds">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualBrush.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPropertyChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPropertyChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnPropertyChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="visualBrush.OnPropertyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visual">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Visual Visual { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Visual Visual" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualBrush.Visual" />
      <MemberSignature Language="VB.NET" Value="Public Property Visual As Visual" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Visual ^ Visual { System::Windows::Media::Visual ^ get(); void set(System::Windows::Media::Visual ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Visual : System.Windows.Media.Visual with get, set" Usage="System.Windows.Media.VisualBrush.Visual" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置画笔的内容。</summary>
        <value>画笔的内容。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有两种方法来指定<xref:System.Windows.Media.VisualBrush.Visual%2A>内容的<xref:System.Windows.Media.VisualBrush>。  
  
-   创建一个新<xref:System.Windows.Media.Visual>并使用它来设置<xref:System.Windows.Media.VisualBrush.Visual%2A>属性的<xref:System.Windows.Media.VisualBrush>。  
  
-   使用现有<xref:System.Windows.Media.Visual>，这将创建目标的重复图像<xref:System.Windows.Media.Visual>。 然后，可以使用<xref:System.Windows.Media.VisualBrush>创建有趣的效果，例如反射和放大效果。  
  
 <xref:System.Windows.Media.Visual> 是在整个 WPF 类层次结构，很高，因此非常大量的对象可能充当视觉对象用于<xref:System.Windows.Media.VisualBrush>; 不能如下所示的完整列表。 请参阅<xref:System.Windows.Media.Visual>; 请参阅"继承层次结构"部分，将显示立即派生的类。 然后可以单击立即派生类，并遍历层次结构，以便了解的完整范围的可能性。 在顶层，两个最常见类别的对象可能会用于<xref:System.Windows.Media.VisualBrush>都<xref:System.Windows.UIElement>或<xref:System.Windows.Media.ContainerVisual>。 <xref:System.Windows.UIElement> 包含基本上可以否则参与 WPF 应用程序的 UI 的任何 UI 元素。 <xref:System.Windows.Media.ContainerVisual> 包含<xref:System.Windows.Media.DrawingGroup>包含一个或多个<xref:System.Windows.Media.Drawing>-派生的对象。  
  
 定义一个新<xref:System.Windows.Media.VisualBrush.Visual%2A>有关<xref:System.Windows.Media.VisualBrush>并且<xref:System.Windows.Media.Visual>是<xref:System.Windows.UIElement>布局系统 （如面板或控件） 上运行<xref:System.Windows.UIElement>及其子元素时<xref:System.Windows.Media.VisualBrush.AutoLayoutContent%2A>属性设置为`true`。 但是，根<xref:System.Windows.UIElement>实质上独立于系统; 其余样式、 情节提要和由父应用画笔的指定外部布局不能渗透此边界。 因此，应显式指定根的大小<xref:System.Windows.UIElement>，因为其唯一父级是<xref:System.Windows.Media.VisualBrush>，因此它不能自动调整自身大小到当前所绘制的区域。 有关 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 中的布局的更多信息，请参阅[布局](~/docs/framework/wpf/advanced/layout.md)。  
  
 可视化树的内容的最新更新<xref:System.Windows.Media.VisualBrush>如果将不会传播<xref:System.Windows.Media.Effects.BitmapEffect>画笔的父链中。 在上方效果的对象上强制场景的更新即可解决此限制。 您可以调用<xref:System.Windows.UIElement.InvalidateVisual%2A>或包含一个动画，以强制场景的更新。  
  
> [!NOTE]
>  一个<xref:System.Windows.Media.VisualBrush>不能成为只读 （冻结） 时其<xref:System.Windows.Media.VisualBrush.Visual%2A>属性设置为任何值 `null.`  
  
<a name="xamlPropertyElementUsage_Visual"></a>   
## <a name="xaml-property-element-usage"></a>XAML 属性元素用法  
  
```  
<object>  
  <object.Visual>  
    singleVisualRoot  
  </object.Visual>  
</object>  
```  
  
<a name="xamlAttributeUsage_Visual"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性用法  
 <*object* `Visual`="{*bindingExpression*}"/>  
  
 \- 或 -  
  
 <*object* `Visual`="{*resourceExpression*}"/>  
  
<a name="xamlValues_Visual"></a>   
## <a name="xaml-values"></a>XAML 值  
 `singleVisualRoot`  
 定义新画笔的可视元素的单个对象元素。 这必须是派生的对象<xref:System.Windows.Media.Visual>。 请参阅“备注”。  
  
 `bindingExpression`  
 计算结果为现有的一个<xref:System.Windows.Media.Visual>实例。  
  
 `resourceExpression`  
 一个`StaticResource`或`DynamicResource`的计算结果为现有<xref:System.Windows.Media.Visual>实例。 请参阅[XAML 资源](~/docs/framework/wpf/advanced/xaml-resources.md)  
  
<a name="dependencyPropertyInfo_Visual"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Media.VisualBrush.VisualProperty>|  
|元数据属性设置为 `true`|无|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VisualProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VisualProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.VisualBrush.VisualProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VisualProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VisualProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VisualProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.VisualBrush.VisualProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Media.VisualBrush.Visual" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>