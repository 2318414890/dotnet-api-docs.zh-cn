<Type Name="PathSegmentCollection" FullName="System.Windows.Media.PathSegmentCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6856e166e0d3c54ac463f6ca06703e0668ee6115" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52193196" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PathSegmentCollection : System.Windows.Media.Animation.Animatable, System.Collections.Generic.ICollection&lt;System.Windows.Media.PathSegment&gt;, System.Collections.Generic.IEnumerable&lt;System.Windows.Media.PathSegment&gt;, System.Collections.Generic.IList&lt;System.Windows.Media.PathSegment&gt;, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PathSegmentCollection extends System.Windows.Media.Animation.Animatable implements class System.Collections.Generic.ICollection`1&lt;class System.Windows.Media.PathSegment&gt;, class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Media.PathSegment&gt;, class System.Collections.Generic.IList`1&lt;class System.Windows.Media.PathSegment&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.PathSegmentCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PathSegmentCollection&#xA;Inherits Animatable&#xA;Implements ICollection(Of PathSegment), IEnumerable(Of PathSegment), IList, IList(Of PathSegment)" />
  <TypeSignature Language="C++ CLI" Value="public ref class PathSegmentCollection sealed : System::Windows::Media::Animation::Animatable, System::Collections::Generic::ICollection&lt;System::Windows::Media::PathSegment ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Windows::Media::PathSegment ^&gt;, System::Collections::Generic::IList&lt;System::Windows::Media::PathSegment ^&gt;, System::Collections::IList" />
  <TypeSignature Language="F#" Value="type PathSegmentCollection = class&#xA;    inherit Animatable&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IList&lt;PathSegment&gt;&#xA;    interface ICollection&lt;PathSegment&gt;&#xA;    interface seq&lt;PathSegment&gt;" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.Animatable</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Windows.Media.PathSegment&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Windows.Media.PathSegment&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;System.Windows.Media.PathSegment&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0635e-101">表示可按索引单独访问的 <see cref="T:System.Windows.Media.PathSegment" /> 对象的集合。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0635e-101">Represents a collection of <see cref="T:System.Windows.Media.PathSegment" /> objects that can be individually accessed by index.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0635e-102">但如前所述，此类的成员的行为如中所述完全<xref:System.Collections.Generic.IList%601>， <xref:System.Collections.Generic.ICollection%601>，和<xref:System.Collections.Generic.IEnumerable%601>文档。</span><span class="sxs-lookup"><span data-stu-id="0635e-102">Except as noted, members of this class behave exactly as described by the <xref:System.Collections.Generic.IList%601>, <xref:System.Collections.Generic.ICollection%601>, and <xref:System.Collections.Generic.IEnumerable%601> documentation.</span></span>  
  
 <span data-ttu-id="0635e-103">**Freezable 功能：** 从继承，因此<xref:System.Windows.Freezable>类，<xref:System.Windows.Media.PathSegmentCollection>类提供多种特殊功能：<xref:System.Windows.Media.PathSegmentCollection>可以声明对象，为在多个对象，变为只读以提高之间共享性能、 克隆以及变为线程安全。</span><span class="sxs-lookup"><span data-stu-id="0635e-103">**Freezable Features:** Because it inherits from the <xref:System.Windows.Freezable> class, the <xref:System.Windows.Media.PathSegmentCollection> class provides several special features: <xref:System.Windows.Media.PathSegmentCollection> objects can be declared as , shared among multiple objects, made read-only to improve performance, cloned, and made thread-safe.</span></span> <span data-ttu-id="0635e-104">有关所提供的不同功能的详细信息<xref:System.Windows.Freezable>对象，请参阅[Freezable 对象概述](~/docs/framework/wpf/advanced/freezable-objects-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="0635e-104">For more information about the different features provided by <xref:System.Windows.Freezable> objects, see the [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>  
  
<a name="xamlImplicitCollectionUsage_PathSegmentCollection"></a>   
## <a name="xaml-implicit-collection-usage"></a><span data-ttu-id="0635e-105">XAML 隐式集合用法</span><span class="sxs-lookup"><span data-stu-id="0635e-105">XAML Implicit Collection Usage</span></span>  
  
```  
<object>  
  <object.property>  
    oneOrMorePathSegmentObjectElements  
  </object.property>  
</object>  
```  
  
<a name="xamlValues_PathSegmentCollection"></a>   
## <a name="xaml-values"></a><span data-ttu-id="0635e-106">XAML 值</span><span class="sxs-lookup"><span data-stu-id="0635e-106">XAML Values</span></span>  
 <span data-ttu-id="0635e-107">*oneOrMorePathSegmentObjectElements*</span><span class="sxs-lookup"><span data-stu-id="0635e-107">*oneOrMorePathSegmentObjectElements*</span></span>  
 <span data-ttu-id="0635e-108">一个或多个<xref:System.Windows.Media.PathSegment>声明使用对象元素语法的对象。</span><span class="sxs-lookup"><span data-stu-id="0635e-108">One or more <xref:System.Windows.Media.PathSegment> objects, declared using object element syntax.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.PathSegment" />
    <altmember cref="T:System.Collections.Generic.IList`1" />
    <altmember cref="T:System.Collections.Generic.ICollection`1" />
    <altmember cref="T:System.Collections.Generic.IEnumerable`1" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0635e-109">初始化 <see cref="T:System.Windows.Media.PathSegmentCollection" /> 的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-109">Initializes a new instance of a <see cref="T:System.Windows.Media.PathSegmentCollection" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PathSegmentCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.PathSegmentCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PathSegmentCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0635e-110">初始化 <see cref="T:System.Windows.Media.PathSegmentCollection" /> 的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-110">Initializes a new instance of a <see cref="T:System.Windows.Media.PathSegmentCollection" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PathSegmentCollection (System.Collections.Generic.IEnumerable&lt;System.Windows.Media.PathSegment&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Media.PathSegment&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.PathSegmentCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.PathSegment})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of PathSegment))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PathSegmentCollection(System::Collections::Generic::IEnumerable&lt;System::Windows::Media::PathSegment ^&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.PathSegmentCollection : seq&lt;System.Windows.Media.PathSegment&gt; -&gt; System.Windows.Media.PathSegmentCollection" Usage="new System.Windows.Media.PathSegmentCollection collection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Media.PathSegment&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="0635e-111">构成 <see cref="T:System.Windows.Media.PathSegment" /> 的 <see cref="T:System.Windows.Media.PathSegmentCollection" /> 对象的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-111">The collection of <see cref="T:System.Windows.Media.PathSegment" /> objects that make up the <see cref="T:System.Windows.Media.PathSegmentCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0635e-112">使用指定的 <see cref="T:System.Windows.Media.PathSegmentCollection" /> 对象集合初始化 <see cref="T:System.Windows.Media.PathSegment" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-112">Initializes a new instance of the <see cref="T:System.Windows.Media.PathSegmentCollection" /> class with the specified collection of <see cref="T:System.Windows.Media.PathSegment" /> objects.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0635e-113">
            <paramref name="collection" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-113">
              <paramref name="collection" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PathSegmentCollection (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.PathSegmentCollection.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PathSegmentCollection(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.PathSegmentCollection : int -&gt; System.Windows.Media.PathSegmentCollection" Usage="new System.Windows.Media.PathSegmentCollection capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="0635e-114">集合最初能够存储的 <see cref="T:System.Windows.Media.PathSegment" /> 对象数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-114">The number of <see cref="T:System.Windows.Media.PathSegment" /> objects that the collection is initially capable of storing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0635e-115">使用指定的容量或该集合最初可存储的 <see cref="T:System.Windows.Media.PathSegmentCollection" /> 对象数来初始化 <see cref="T:System.Windows.Media.PathSegment" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-115">Initializes a new instance of the <see cref="T:System.Windows.Media.PathSegmentCollection" /> class with the specified capacity, or the number of <see cref="T:System.Windows.Media.PathSegment" /> objects the collection is initially capable of storing.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.Media.PathSegment value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Windows.Media.PathSegment value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.PathSegmentCollection.Add(System.Windows.Media.PathSegment)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (value As PathSegment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Windows::Media::PathSegment ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Windows.Media.PathSegment -&gt; unit&#xA;override this.Add : System.Windows.Media.PathSegment -&gt; unit" Usage="pathSegmentCollection.Add value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Media.PathSegment" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0635e-116">要添加到集合的段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-116">The segment to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0635e-117">向集合的末尾添加一个 <see cref="T:System.Windows.Media.PathSegment" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-117">Adds a <see cref="T:System.Windows.Media.PathSegment" /> to the end of the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0635e-118">因为<xref:System.Windows.Media.PathSegment>对象派生自<xref:System.Windows.Freezable>，它们复制中使用时。</span><span class="sxs-lookup"><span data-stu-id="0635e-118">Because <xref:System.Windows.Media.PathSegment> objects derive from <xref:System.Windows.Freezable>, they are copied when they are used.</span></span> <span data-ttu-id="0635e-119">因此，您可能不能以后检索或删除<xref:System.Windows.Media.PathSegment>添加到集合并使用原始<xref:System.Windows.Media.PathSegment>对象;<xref:System.Windows.Media.PathSegment>集合中是一份原始<xref:System.Windows.Media.PathSegment>，并被视为不同<xref:System.Windows.Media.PathSegment>比您添加的一个。</span><span class="sxs-lookup"><span data-stu-id="0635e-119">Therefore, you might not be able to later retrieve or remove the <xref:System.Windows.Media.PathSegment> you added to the collection using the original <xref:System.Windows.Media.PathSegment> object; the <xref:System.Windows.Media.PathSegment> in the collection is a copy of the original <xref:System.Windows.Media.PathSegment> and is considered a different <xref:System.Windows.Media.PathSegment> than the one you added.</span></span>  
  
 <span data-ttu-id="0635e-120">与典型的实现不同<xref:System.Collections.Generic.ICollection%601.Add%2A?displayProperty=nameWithType>，此实现将引发<xref:System.ArgumentException>如果你尝试添加**null** (**Nothing**) 引用。</span><span class="sxs-lookup"><span data-stu-id="0635e-120">Unlike typical implementations of <xref:System.Collections.Generic.ICollection%601.Add%2A?displayProperty=nameWithType>, this implementation throws an <xref:System.ArgumentException> if you attempt to add a **null** (**Nothing**) reference.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0635e-121">
            <paramref name="value" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-121">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0635e-122">
            <see cref="T:System.Windows.Media.PathSegmentCollection" /> 为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-122">The <see cref="T:System.Windows.Media.PathSegmentCollection" /> is read-only.</span>
          </span>
          <span data-ttu-id="0635e-123">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-123">\- or -</span>
          </span>
          <span data-ttu-id="0635e-124">
            <see cref="T:System.Windows.Media.PathSegmentCollection" /> 具有固定的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-124">The <see cref="T:System.Windows.Media.PathSegmentCollection" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Media.PathSegment" />
        <altmember cref="T:System.Windows.Freezable" />
        <altmember cref="M:System.Collections.Generic.ICollection`1.Add(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.PathSegmentCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="pathSegmentCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0635e-125">清除集合中的所有段，并将 <see cref="P:System.Windows.Media.PathSegmentCollection.Count" /> 重置为零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-125">Clears the collection of all segments and resets <see cref="P:System.Windows.Media.PathSegmentCollection.Count" /> to zero.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0635e-126">此方法不会更改的容量<xref:System.Windows.Media.PathSegmentCollection>。</span><span class="sxs-lookup"><span data-stu-id="0635e-126">This method does not change the capacity of the <xref:System.Windows.Media.PathSegmentCollection>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0635e-127">
            <see cref="T:System.Windows.Media.PathSegmentCollection" /> 为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-127">The <see cref="T:System.Windows.Media.PathSegmentCollection" /> is read-only.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.ICollection`1.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.PathSegmentCollection Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.PathSegmentCollection Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.PathSegmentCollection.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As PathSegmentCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::PathSegmentCollection ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.PathSegmentCollection" Usage="pathSegmentCollection.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.PathSegmentCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0635e-128">创建此 <see cref="T:System.Windows.Media.PathSegmentCollection" /> 的可修改克隆，从而深度复制此对象的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-128">Creates a modifiable clone of this <see cref="T:System.Windows.Media.PathSegmentCollection" />, making deep copies of this object's values.</span>
          </span>
          <span data-ttu-id="0635e-129">在复制依赖项属性时，此方法会复制资源引用和数据绑定（但可能不再解析），但不复制动画或其当前值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-129">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0635e-130">当前对象的可修改复本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-130">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="0635e-131">即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 <see langword="true." />，所克隆的对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也将为 <see langword="false" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-131">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0635e-132">此方法用于生成的可修改副本冻结<xref:System.Windows.Freezable>对象 (或任何<xref:System.Windows.Freezable>对象)。</span><span class="sxs-lookup"><span data-stu-id="0635e-132">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="0635e-133">为方便起见，此方法隐藏继承的版本使用的强类型实现。</span><span class="sxs-lookup"><span data-stu-id="0635e-133">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="0635e-134">有关详情，请参阅<xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0635e-134">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override void CloneCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.PathSegmentCollection.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="abstract member CloneCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCore : System.Windows.Freezable -&gt; unit" Usage="pathSegmentCollection.CloneCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.PathSegmentCollection CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.PathSegmentCollection CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.PathSegmentCollection.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As PathSegmentCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::PathSegmentCollection ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="member this.CloneCurrentValue : unit -&gt; System.Windows.Media.PathSegmentCollection" Usage="pathSegmentCollection.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.PathSegmentCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0635e-135">创建此 <see cref="T:System.Windows.Media.PathSegmentCollection" /> 对象的可修改复本，从而深度复制此对象的当前值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-135">Creates a modifiable clone of this <see cref="T:System.Windows.Media.PathSegmentCollection" /> object, making deep copies of this object's current values.</span>
          </span>
          <span data-ttu-id="0635e-136">不复制资源引用、数据绑定和动画，而是复制其当前值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-136">Resource references, data bindings, and animations are not copied, but their current values are.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0635e-137">当前对象的可修改复本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-137">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="0635e-138">即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 <see langword="true" />，所克隆的对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也将为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-138">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0635e-139">此方法用于生成的可修改副本冻结<xref:System.Windows.Freezable>对象 (或任何<xref:System.Windows.Freezable>对象)。</span><span class="sxs-lookup"><span data-stu-id="0635e-139">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="0635e-140">为方便起见，此方法隐藏继承的版本使用的强类型实现。</span><span class="sxs-lookup"><span data-stu-id="0635e-140">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="0635e-141">有关详情，请参阅<xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0635e-141">For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override void CloneCurrentValueCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCurrentValueCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.PathSegmentCollection.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCurrentValueCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCurrentValueCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="abstract member CloneCurrentValueCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCurrentValueCore : System.Windows.Freezable -&gt; unit" Usage="pathSegmentCollection.CloneCurrentValueCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Media.PathSegment value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Windows.Media.PathSegment value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.PathSegmentCollection.Contains(System.Windows.Media.PathSegment)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As PathSegment) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Windows::Media::PathSegment ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Contains : System.Windows.Media.PathSegment -&gt; bool&#xA;override this.Contains : System.Windows.Media.PathSegment -&gt; bool" Usage="pathSegmentCollection.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Media.PathSegment" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0635e-142">要搜索的 <see cref="T:System.Windows.Media.PathSegment" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-142">The <see cref="T:System.Windows.Media.PathSegment" /> to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0635e-143">返回一个 <see cref="T:System.Boolean" />，它指示集合中是否包含指定的 <see cref="T:System.Windows.Media.PathSegment" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-143">Returns a <see cref="T:System.Boolean" /> that indicates whether the specified <see cref="T:System.Windows.Media.PathSegment" /> is contained within the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0635e-144">如果指定的 <see cref="T:System.Windows.Media.PathSegment" /> 包含在集合中，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-144">
              <see langword="true" /> if the specified <see cref="T:System.Windows.Media.PathSegment" /> is contained within the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Collections.Generic.ICollection`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Windows.Media.PathSegment[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Windows.Media.PathSegment[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.PathSegmentCollection.CopyTo(System.Windows.Media.PathSegment[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As PathSegment(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Windows::Media::PathSegment ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Windows.Media.PathSegment[] * int -&gt; unit&#xA;override this.CopyTo : System.Windows.Media.PathSegment[] * int -&gt; unit" Usage="pathSegmentCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Windows.Media.PathSegment[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="0635e-145">集合项将复制到其中的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-145">The array into which the collection's items are to be copied.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0635e-146">
            <paramref name="array" /> 的索引，将从此处开始复制 <see cref="T:System.Windows.Media.PathSegmentCollection" /> 的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-146">The index of <paramref name="array" /> at which to start copying the contents of the <see cref="T:System.Windows.Media.PathSegmentCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0635e-147">从目标数组的指定索引处开始将整个 <see cref="T:System.Windows.Media.PathSegmentCollection" /> 复制到一维 <see cref="T:System.Windows.Media.PathSegment" /> 数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-147">Copies the entire <see cref="T:System.Windows.Media.PathSegmentCollection" /> to a one-dimensional <see cref="T:System.Windows.Media.PathSegment" /> array, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0635e-148">
            <paramref name="array" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-148">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0635e-149">
            <paramref name="index" /> 小于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-149">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0635e-150">
            <paramref name="array" /> 是多维的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-150">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="0635e-151">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-151">-or-</span>
          </span>
          <span data-ttu-id="0635e-152">源 <see cref="T:System.Windows.Media.PathSegmentCollection" /> 中的项数大于从 <paramref name="index" /> 到目标 <paramref name="array" /> 结尾的可用空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-152">The number of items in the source <see cref="T:System.Windows.Media.PathSegmentCollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.PathSegmentCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Media.PathSegmentCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0635e-153">获取 <see cref="T:System.Windows.Media.PathSegmentCollection" /> 中包含的路径段数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-153">Gets the number of path segments contained in the <see cref="T:System.Windows.Media.PathSegmentCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0635e-154">
            <see cref="T:System.Windows.Media.PathSegmentCollection" /> 中包含的路径段数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-154">The number of path segments contained in the <see cref="T:System.Windows.Media.PathSegmentCollection" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.PathSegmentCollection.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="pathSegmentCollection.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected override bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.PathSegmentCollection.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool FreezeCore(bool isChecking);" />
      <MemberSignature Language="F#" Value="override this.FreezeCore : bool -&gt; bool" Usage="pathSegmentCollection.FreezeCore isChecking" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.PathSegmentCollection.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="abstract member GetAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="pathSegmentCollection.GetAsFrozenCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.PathSegmentCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="pathSegmentCollection.GetCurrentValueAsFrozenCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Windows.Media.PathSegmentCollection.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.PathSegmentCollection/Enumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.PathSegmentCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As PathSegmentCollection.Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::PathSegmentCollection::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Windows.Media.PathSegmentCollection.Enumerator" Usage="pathSegmentCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.PathSegmentCollection+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0635e-155">返回一个可循环访问集合的枚举数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-155">Returns an enumerator that can iterate through the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0635e-156">可以循环访问集合的 <see cref="T:System.Windows.Media.PathSegmentCollection.Enumerator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-156">An <see cref="T:System.Windows.Media.PathSegmentCollection.Enumerator" /> that can iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0635e-157">枚举器只允许读取集合中的数据。</span><span class="sxs-lookup"><span data-stu-id="0635e-157">Enumerators only allow reading the data in the collection.</span></span> <span data-ttu-id="0635e-158">枚举器不能用于修改基础集合。</span><span class="sxs-lookup"><span data-stu-id="0635e-158">Enumerators cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="0635e-159">最初，枚举器位于集合中的第一项之前。</span><span class="sxs-lookup"><span data-stu-id="0635e-159">Initially, the enumerator is positioned before the first item in the collection.</span></span> <span data-ttu-id="0635e-160">此外会枚举数放回此位置。</span><span class="sxs-lookup"><span data-stu-id="0635e-160">also brings the enumerator back to this position.</span></span> <span data-ttu-id="0635e-161">在此位置，调用<xref:System.Windows.Media.PathSegmentCollection.Enumerator.Current%2A>将引发异常。</span><span class="sxs-lookup"><span data-stu-id="0635e-161">At this position, calling <xref:System.Windows.Media.PathSegmentCollection.Enumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="0635e-162">因此，您必须调用<xref:System.Windows.Media.PathSegmentCollection.Enumerator.MoveNext%2A>将枚举数前移到集合，然后再读取的值的第一项<xref:System.Windows.Media.PathSegmentCollection.Enumerator.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="0635e-162">Therefore, you must call <xref:System.Windows.Media.PathSegmentCollection.Enumerator.MoveNext%2A> to advance the enumerator to the first item of the collection before reading the value of <xref:System.Windows.Media.PathSegmentCollection.Enumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="0635e-163">在调用 <xref:System.Windows.Media.PathSegmentCollection.Enumerator.Current%2A> 或 <xref:System.Windows.Media.PathSegmentCollection.Enumerator.MoveNext%2A> 之前，<xref:System.Windows.Media.PathSegmentCollection.Enumerator.Reset%2A> 返回同一对象。</span><span class="sxs-lookup"><span data-stu-id="0635e-163"><xref:System.Windows.Media.PathSegmentCollection.Enumerator.Current%2A> returns the same object until either <xref:System.Windows.Media.PathSegmentCollection.Enumerator.MoveNext%2A> or <xref:System.Windows.Media.PathSegmentCollection.Enumerator.Reset%2A> is called.</span></span> <span data-ttu-id="0635e-164"><xref:System.Windows.Media.PathSegmentCollection.Enumerator.MoveNext%2A> 设置<xref:System.Windows.Media.PathSegmentCollection.Enumerator.Current%2A>到下一项。</span><span class="sxs-lookup"><span data-stu-id="0635e-164"><xref:System.Windows.Media.PathSegmentCollection.Enumerator.MoveNext%2A> sets <xref:System.Windows.Media.PathSegmentCollection.Enumerator.Current%2A> to the next item.</span></span>  
  
 <span data-ttu-id="0635e-165">枚举数传递集合的末尾之后，将定位在集合中的最后一项后，调用<xref:System.Windows.Media.PathSegmentCollection.Enumerator.MoveNext%2A>返回`false`。</span><span class="sxs-lookup"><span data-stu-id="0635e-165">After the end of the collection is passed, the enumerator is positioned after the last item in the collection, and calling <xref:System.Windows.Media.PathSegmentCollection.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="0635e-166">如果最后一次调用到<xref:System.Windows.Media.PathSegmentCollection.Enumerator.MoveNext%2A>返回`false`，则调用<xref:System.Windows.Media.PathSegmentCollection.Enumerator.Current%2A>将引发异常。</span><span class="sxs-lookup"><span data-stu-id="0635e-166">If the last call to <xref:System.Windows.Media.PathSegmentCollection.Enumerator.MoveNext%2A> returned `false`, calling <xref:System.Windows.Media.PathSegmentCollection.Enumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="0635e-167">若要设置<xref:System.Windows.Media.PathSegmentCollection.Enumerator.Current%2A>到再次集合的第一项，可以调用<xref:System.Windows.Media.PathSegmentCollection.Enumerator.Reset%2A>跟<xref:System.Windows.Media.PathSegmentCollection.Enumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="0635e-167">To set <xref:System.Windows.Media.PathSegmentCollection.Enumerator.Current%2A> to the first item of the collection again, you can call <xref:System.Windows.Media.PathSegmentCollection.Enumerator.Reset%2A> followed by <xref:System.Windows.Media.PathSegmentCollection.Enumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="0635e-168">只要集合保持不变，枚举数就保持有效。</span><span class="sxs-lookup"><span data-stu-id="0635e-168">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="0635e-169">如果对集合进行了更改，例如添加、 修改或删除项，则枚举器将失效且不可恢复，并且下一个调用<xref:System.Windows.Media.PathSegmentCollection.Enumerator.MoveNext%2A>或<xref:System.Windows.Media.PathSegmentCollection.Enumerator.Reset%2A>引发<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="0635e-169">If changes are made to the collection, such as adding, modifying or deleting items, the enumerator is irrecoverably invalidated and the next call to <xref:System.Windows.Media.PathSegmentCollection.Enumerator.MoveNext%2A> or <xref:System.Windows.Media.PathSegmentCollection.Enumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="0635e-170">如果集合修改之间<xref:System.Windows.Media.PathSegmentCollection.Enumerator.MoveNext%2A>并<xref:System.Windows.Media.PathSegmentCollection.Enumerator.Current%2A>，<xref:System.Windows.Media.PathSegmentCollection.Enumerator.Current%2A>会返回的项的设置为，即使该枚举数已经无效。</span><span class="sxs-lookup"><span data-stu-id="0635e-170">If the collection is modified between <xref:System.Windows.Media.PathSegmentCollection.Enumerator.MoveNext%2A> and <xref:System.Windows.Media.PathSegmentCollection.Enumerator.Current%2A>, <xref:System.Windows.Media.PathSegmentCollection.Enumerator.Current%2A> will return the item that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="0635e-171">枚举数没有对集合的独占访问权；因此，从头到尾对一个集合进行枚举在本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="0635e-171">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="0635e-172">即使集合已同步，其他线程仍可以修改集合，这会导致枚举器引发异常。</span><span class="sxs-lookup"><span data-stu-id="0635e-172">Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="0635e-173">若要确保枚举过程中的线程安全性，可以在整个枚举期间锁定集合，或者捕获由其他线程进行的更改所导致的异常。</span><span class="sxs-lookup"><span data-stu-id="0635e-173">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Media.PathSegment value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(class System.Windows.Media.PathSegment value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.PathSegmentCollection.IndexOf(System.Windows.Media.PathSegment)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As PathSegment) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Windows::Media::PathSegment ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : System.Windows.Media.PathSegment -&gt; int&#xA;override this.IndexOf : System.Windows.Media.PathSegment -&gt; int" Usage="pathSegmentCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Media.PathSegment" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0635e-174">要搜索的项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-174">The item to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0635e-175">返回指定的 <see cref="T:System.Windows.Media.PathSegment" /> 的第一个匹配项的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-175">Returns the index of the first occurrence of the specified <see cref="T:System.Windows.Media.PathSegment" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0635e-176">指定的 <see cref="T:System.Windows.Media.PathSegment" /> 的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-176">The index of the specified <see cref="T:System.Windows.Media.PathSegment" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Collections.Generic.IList`1.IndexOf(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Media.PathSegment value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, class System.Windows.Media.PathSegment value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.PathSegmentCollection.Insert(System.Int32,System.Windows.Media.PathSegment)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As PathSegment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Windows::Media::PathSegment ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * System.Windows.Media.PathSegment -&gt; unit&#xA;override this.Insert : int * System.Windows.Media.PathSegment -&gt; unit" Usage="pathSegmentCollection.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Windows.Media.PathSegment" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0635e-177">要在其中插入 <paramref name="value" />（指定的 <see cref="T:System.Windows.Media.PathSegment" />）的索引位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-177">The index at which to insert <paramref name="value" />, the specified <see cref="T:System.Windows.Media.PathSegment" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0635e-178">要插入的项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-178">The item to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0635e-179">将 <see cref="T:System.Windows.Media.PathSegment" /> 插入到此 <see cref="T:System.Windows.Media.PathSegmentCollection" /> 的指定索引位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-179">Inserts a <see cref="T:System.Windows.Media.PathSegment" /> into this <see cref="T:System.Windows.Media.PathSegmentCollection" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0635e-180">与典型的实现不同<xref:System.Collections.Generic.IList%601.Insert%2A?displayProperty=nameWithType>，此实现将引发<xref:System.ArgumentException>如果你尝试插入**null** (**Nothing**) 引用。</span><span class="sxs-lookup"><span data-stu-id="0635e-180">Unlike typical implementations of <xref:System.Collections.Generic.IList%601.Insert%2A?displayProperty=nameWithType>, this implementation throws an <xref:System.ArgumentException> if you attempt to insert a **null** (**Nothing**) reference.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0635e-181">
            <paramref name="value" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-181">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0635e-182">
            <paramref name="index" /> 不是 <see cref="T:System.Windows.Media.PathSegmentCollection" /> 中的有效索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-182">
              <paramref name="index" /> is not a valid index in the <see cref="T:System.Windows.Media.PathSegmentCollection" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0635e-183">
            <see cref="T:System.Windows.Media.PathSegmentCollection" /> 为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-183">The <see cref="T:System.Windows.Media.PathSegmentCollection" /> is read-only.</span>
          </span>
          <span data-ttu-id="0635e-184">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-184">\- or -</span>
          </span>
          <span data-ttu-id="0635e-185">
            <see cref="T:System.Windows.Media.PathSegmentCollection" /> 具有固定的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-185">The <see cref="T:System.Windows.Media.PathSegmentCollection" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Media.PathSegment this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.PathSegment Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.PathSegmentCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As PathSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::PathSegment ^ default[int] { System::Windows::Media::PathSegment ^ get(int index); void set(int index, System::Windows::Media::PathSegment ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Media.PathSegment with get, set" Usage="System.Windows.Media.PathSegmentCollection.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.PathSegment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0635e-186">要获取或设置的 <see cref="T:System.Windows.Media.PathSegment" /> 对象的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-186">The zero-based index of the <see cref="T:System.Windows.Media.PathSegment" /> object to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0635e-187">获取或设置从零开始的指定索引处的 <see cref="T:System.Windows.Media.PathSegment" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-187">Gets or sets the <see cref="T:System.Windows.Media.PathSegment" /> at the specified zero-based index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0635e-188">指定索引处的项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-188">The item at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0635e-189">与典型的实现不同<xref:System.Collections.Generic.IList%601.Item%2A?displayProperty=nameWithType>，此实现将引发<xref:System.ArgumentException>如果你尝试插入**null** (**Nothing**) 引用。</span><span class="sxs-lookup"><span data-stu-id="0635e-189">Unlike typical implementations of <xref:System.Collections.Generic.IList%601.Item%2A?displayProperty=nameWithType>, this implementation throws an <xref:System.ArgumentException> if you attempt to insert a **null** (**Nothing**) reference.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0635e-190">
            <paramref name="value" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-190">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0635e-191">
            <paramref name="index" /> 不是 <see cref="T:System.Windows.Media.PathSegmentCollection" /> 中的有效索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-191">
              <paramref name="index" /> is not a valid index in the <see cref="T:System.Windows.Media.PathSegmentCollection" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0635e-192">
            <see cref="T:System.Windows.Media.PathSegmentCollection" /> 为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-192">The <see cref="T:System.Windows.Media.PathSegmentCollection" /> is read-only.</span>
          </span>
          <span data-ttu-id="0635e-193">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-193">\- or -</span>
          </span>
          <span data-ttu-id="0635e-194">
            <see cref="T:System.Windows.Media.PathSegmentCollection" /> 具有固定的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-194">The <see cref="T:System.Windows.Media.PathSegmentCollection" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.Generic.IList`1.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Windows.Media.PathSegment value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.Windows.Media.PathSegment value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.PathSegmentCollection.Remove(System.Windows.Media.PathSegment)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (value As PathSegment) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Windows::Media::PathSegment ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Windows.Media.PathSegment -&gt; bool&#xA;override this.Remove : System.Windows.Media.PathSegment -&gt; bool" Usage="pathSegmentCollection.Remove value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Media.PathSegment" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0635e-195">要从此集合中移除的项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-195">The item to remove from this collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0635e-196">从此 <see cref="T:System.Windows.Media.PathSegment" /> 中移除指定的 <see cref="T:System.Windows.Media.PathSegmentCollection" /> 的第一个匹配项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-196">Removes the first occurrence of the specified <see cref="T:System.Windows.Media.PathSegment" /> from this <see cref="T:System.Windows.Media.PathSegmentCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0635e-197">如果要从集合中移除指定的 <see cref="T:System.Windows.Media.PathSegment" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-197">
              <see langword="true" /> if the specified <see cref="T:System.Windows.Media.PathSegment" /> is removed from the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0635e-198">
            <see cref="T:System.Windows.Media.PathSegmentCollection" /> 为只读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-198">The <see cref="T:System.Windows.Media.PathSegmentCollection" /> is read-only.</span>
          </span>
          <span data-ttu-id="0635e-199">\- 或 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-199">\- or -</span>
          </span>
          <span data-ttu-id="0635e-200">
            <see cref="T:System.Windows.Media.PathSegmentCollection" /> 具有固定的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-200">The <see cref="T:System.Windows.Media.PathSegmentCollection" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.ICollection`1.Remove(`0)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.PathSegmentCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="pathSegmentCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0635e-201">要移除的项的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-201">The index of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0635e-202">从此 <see cref="T:System.Windows.Media.PathSegment" /> 中移除指定索引处的 <see cref="T:System.Windows.Media.PathSegmentCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-202">Removes the <see cref="T:System.Windows.Media.PathSegment" /> at the specified index from this <see cref="T:System.Windows.Media.PathSegmentCollection" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Windows.Media.PathSegment&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;System.Windows.Media.PathSegment&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;System.Windows.Media.PathSegment&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.PathSegmentCollection.System#Collections#Generic#ICollection&lt;System#Windows#Media#PathSegment&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of PathSegment).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::Generic::ICollection&lt;System::Windows::Media::PathSegment&gt;::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.ICollection&lt;System.Windows.Media.PathSegment&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0635e-203">有关此成员的说明，请参阅 <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-203">For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0635e-204">如果 <see langword="true" /> 是只读的，则为 <see cref="T:System.Windows.Media.PathSegmentCollection" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-204">
              <see langword="true" /> if the <see cref="T:System.Windows.Media.PathSegmentCollection" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0635e-205">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0635e-205">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0635e-206">它只能在 <xref:System.Windows.Media.PathSegmentCollection> 实例强制转换为 <xref:System.Collections.Generic.ICollection%601> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0635e-206">It can be used only when the <xref:System.Windows.Media.PathSegmentCollection> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Windows.Media.PathSegment&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Windows.Media.PathSegment&gt; IEnumerable&lt;PathSegment&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Windows.Media.PathSegment&gt; System.Collections.Generic.IEnumerable&lt;System.Windows.Media.PathSegment&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.PathSegmentCollection.System#Collections#Generic#IEnumerable&lt;System#Windows#Media#PathSegment&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of PathSegment) Implements IEnumerable(Of PathSegment).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Windows::Media::PathSegment ^&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Windows.Media.PathSegment&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Windows::Media::PathSegment ^&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Windows.Media.PathSegment&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0635e-207">有关此成员的说明，请参阅 <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-207">For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0635e-208">一个可用于循环访问集合的 <see cref="T:System.Collections.Generic.IEnumerator`1" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-208">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0635e-209">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0635e-209">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0635e-210">它只能在 <xref:System.Windows.Media.PathSegmentCollection> 实例强制转换为 <xref:System.Collections.Generic.IEnumerable%601> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0635e-210">It can be used only when the <xref:System.Windows.Media.PathSegmentCollection> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.PathSegmentCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="0635e-211">一个从零开始的 <see cref="T:System.Array" />，它接收 <see cref="T:System.Windows.Media.PathSegmentCollection" /> 的复制项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-211">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.Media.PathSegmentCollection" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0635e-212">指定的 <see cref="T:System.Array" /> 中接收复制内容的第一个位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-212">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0635e-213">有关此成员的说明，请参阅 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-213">For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0635e-214">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0635e-214">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0635e-215">它只能在 <xref:System.Windows.Media.PathSegmentCollection> 实例强制转换为 <xref:System.Collections.ICollection> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0635e-215">It can be used only when the <xref:System.Windows.Media.PathSegmentCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.PathSegmentCollection.CopyTo(System.Windows.Media.PathSegment[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.PathSegmentCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0635e-216">有关此成员的说明，请参阅 <see cref="P:System.Collections.ICollection.IsSynchronized" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-216">For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0635e-217">如果对 <see langword="true" /> 的访问是同步的（线程安全），则为 <see cref="T:System.Windows.Media.PathSegmentCollection" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-217">
              <see langword="true" /> if access to the <see cref="T:System.Windows.Media.PathSegmentCollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0635e-218">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0635e-218">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0635e-219">它只能在 <xref:System.Windows.Media.PathSegmentCollection> 实例强制转换为 <xref:System.Collections.ICollection> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0635e-219">It can be used only when the <xref:System.Windows.Media.PathSegmentCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.PathSegmentCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0635e-220">有关此成员的说明，请参阅 <see cref="P:System.Collections.ICollection.SyncRoot" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-220">For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0635e-221">可用于同步对 <see cref="T:System.Windows.Media.PathSegmentCollection" /> 的访问的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-221">An object that can be used to synchronize access to the <see cref="T:System.Windows.Media.PathSegmentCollection" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0635e-222">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0635e-222">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0635e-223">它只能在 <xref:System.Windows.Media.PathSegmentCollection> 实例强制转换为 <xref:System.Collections.ICollection> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0635e-223">It can be used only when the <xref:System.Windows.Media.PathSegmentCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.PathSegmentCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0635e-224">有关此成员的说明，请参阅 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-224">For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0635e-225">一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-225">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0635e-226">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0635e-226">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0635e-227">它只能在 <xref:System.Windows.Media.PathSegmentCollection> 实例强制转换为 <xref:System.Collections.IEnumerable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0635e-227">It can be used only when the <xref:System.Windows.Media.PathSegmentCollection> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.PathSegmentCollection.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.PathSegmentCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0635e-228">要添加到 <see cref="T:System.Object" /> 的 <see cref="T:System.Windows.Media.PathSegmentCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-228">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Media.PathSegmentCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0635e-229">有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Add(System.Object)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-229">For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0635e-230">新元素的插入位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-230">The position into which the new element was inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0635e-231">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0635e-231">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0635e-232">它只能在 <xref:System.Windows.Media.PathSegmentCollection> 实例强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0635e-232">It can be used only when the <xref:System.Windows.Media.PathSegmentCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.PathSegmentCollection.Add(System.Windows.Media.PathSegment)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.PathSegmentCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0635e-233">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Windows.Media.PathSegmentCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-233">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.PathSegmentCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0635e-234">有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Contains(System.Object)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-234">For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0635e-235">如果在 <see cref="T:System.Windows.Media.PathSegmentCollection" /> 中找到了 <see cref="T:System.Object" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-235">
              <see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Media.PathSegmentCollection" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0635e-236">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0635e-236">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0635e-237">它只能在 <xref:System.Windows.Media.PathSegmentCollection> 实例强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0635e-237">It can be used only when the <xref:System.Windows.Media.PathSegmentCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.PathSegmentCollection.Contains(System.Windows.Media.PathSegment)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.PathSegmentCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0635e-238">要在 <see cref="T:System.Object" /> 中定位的 <see cref="T:System.Windows.Media.PathSegmentCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-238">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.PathSegmentCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0635e-239">有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.IndexOf(System.Object)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-239">For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0635e-240">如果在列表中找到，则为 <paramref name="value" /> 的索引；否则为 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-240">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0635e-241">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0635e-241">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0635e-242">它只能在 <xref:System.Windows.Media.PathSegmentCollection> 实例强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0635e-242">It can be used only when the <xref:System.Windows.Media.PathSegmentCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.PathSegmentCollection.IndexOf(System.Windows.Media.PathSegment)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.PathSegmentCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0635e-243">从零开始的索引，在该处插入 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-243">The zero-based index at which to insert the <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0635e-244">要插入到 <see cref="T:System.Windows.Media.PathSegmentCollection" /> 的 <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-244">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Media.PathSegmentCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0635e-245">有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-245">For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0635e-246">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0635e-246">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0635e-247">它只能在 <xref:System.Windows.Media.PathSegmentCollection> 实例强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0635e-247">It can be used only when the <xref:System.Windows.Media.PathSegmentCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.PathSegmentCollection.Insert(System.Int32,System.Windows.Media.PathSegment)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.PathSegmentCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0635e-248">有关此成员的说明，请参阅 <see cref="P:System.Collections.IList.IsFixedSize" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-248">For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0635e-249">如果 <see langword="true" /> 具有固定大小，则为 <see cref="T:System.Windows.Media.PathSegmentCollection" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-249">
              <see langword="true" /> if the <see cref="T:System.Windows.Media.PathSegmentCollection" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0635e-250">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0635e-250">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0635e-251">它只能在 <xref:System.Windows.Media.PathSegmentCollection> 实例强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0635e-251">It can be used only when the <xref:System.Windows.Media.PathSegmentCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.PathSegmentCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0635e-252">有关此成员的说明，请参阅 <see cref="P:System.Collections.IList.IsReadOnly" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-252">For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0635e-253">如果 <see langword="true" /> 是只读的，则为 <see cref="T:System.Windows.Media.PathSegmentCollection" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-253">
              <see langword="true" /> if the <see cref="T:System.Windows.Media.PathSegmentCollection" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0635e-254">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0635e-254">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0635e-255">它只能在 <xref:System.Windows.Media.PathSegmentCollection> 实例强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0635e-255">It can be used only when the <xref:System.Windows.Media.PathSegmentCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.PathSegmentCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0635e-256">要获取或设置的元素的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-256">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0635e-257">有关此成员的说明，请参阅 <see cref="P:System.Collections.IList.Item(System.Int32)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-257">For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0635e-258">指定索引处的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-258">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0635e-259">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0635e-259">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0635e-260">它只能在 <xref:System.Windows.Media.PathSegmentCollection> 实例强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0635e-260">It can be used only when the <xref:System.Windows.Media.PathSegmentCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.PathSegmentCollection.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.PathSegmentCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0635e-261">要从 <see cref="T:System.Object" /> 移除的 <see cref="T:System.Windows.Media.PathSegmentCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-261">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Media.PathSegmentCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0635e-262">有关此成员的说明，请参阅 <see cref="M:System.Collections.IList.Remove(System.Object)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0635e-262">For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0635e-263">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="0635e-263">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0635e-264">它只能在 <xref:System.Windows.Media.PathSegmentCollection> 实例强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="0635e-264">It can be used only when the <xref:System.Windows.Media.PathSegmentCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.PathSegmentCollection.Remove(System.Windows.Media.PathSegment)" />
      </Docs>
    </Member>
  </Members>
</Type>