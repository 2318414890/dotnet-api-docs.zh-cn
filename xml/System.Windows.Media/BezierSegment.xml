<Type Name="BezierSegment" FullName="System.Windows.Media.BezierSegment">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="289d601f34a78fd5db5018f9e40be9f18ff1f579" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class BezierSegment : System.Windows.Media.PathSegment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed BezierSegment extends System.Windows.Media.PathSegment" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.BezierSegment" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BezierSegment&#xA;Inherits PathSegment" />
  <TypeSignature Language="C++ CLI" Value="public ref class BezierSegment sealed : System::Windows::Media::PathSegment" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.PathSegment</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="9dd8b-101">表示在两个点之间绘制的一条三次方贝塞尔曲线。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9dd8b-101">Represents a cubic Bezier curve drawn between two points.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd8b-102">使用<xref:System.Windows.Media.PathFigure>要存储对象<xref:System.Windows.Media.BezierSegment>对象和其他段。</span><span class="sxs-lookup"><span data-stu-id="9dd8b-102">Use a <xref:System.Windows.Media.PathFigure> object to store <xref:System.Windows.Media.BezierSegment> objects and other segments.</span></span>  
  
 <span data-ttu-id="9dd8b-103">由四个点定义三次方贝塞尔曲线： 起始点，一个终结点 (<xref:System.Windows.Media.BezierSegment.Point3%2A>)，以及两个控制点 (<xref:System.Windows.Media.BezierSegment.Point1%2A>和<xref:System.Windows.Media.BezierSegment.Point2%2A>)。<xref:System.Windows.Media.BezierSegment>类并不包含曲线的起始点的属性; 它只定义终结点。</span><span class="sxs-lookup"><span data-stu-id="9dd8b-103">A cubic Bezier curve is defined by four points: a start point, an end point (<xref:System.Windows.Media.BezierSegment.Point3%2A>), and two control points (<xref:System.Windows.Media.BezierSegment.Point1%2A> and <xref:System.Windows.Media.BezierSegment.Point2%2A>).The <xref:System.Windows.Media.BezierSegment> class does not contain a property for the starting point of the curve; it only defines the end point.</span></span> <span data-ttu-id="9dd8b-104">曲线起始点是的当前点<xref:System.Windows.Media.PathFigure>到<xref:System.Windows.Media.BezierSegment>添加。</span><span class="sxs-lookup"><span data-stu-id="9dd8b-104">The beginning point of the curve is the current point of the <xref:System.Windows.Media.PathFigure> to which the <xref:System.Windows.Media.BezierSegment> is added.</span></span>  
  
 <span data-ttu-id="9dd8b-105">三次方贝塞尔曲线的两个控制点的行为类似于磁铁，吸引本部分的不然就是一条直线朝着自身的方向并生成一条曲线。</span><span class="sxs-lookup"><span data-stu-id="9dd8b-105">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="9dd8b-106">第一个控制点， <xref:System.Windows.Media.BezierSegment.Point1%2A>，影响开头曲线部分; 第二个控制点， <xref:System.Windows.Media.BezierSegment.Point2%2A>，影响曲线的结束部分。</span><span class="sxs-lookup"><span data-stu-id="9dd8b-106">The first control point, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affects the beginning portion of the curve; the second control point, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affects the ending portion of the curve.</span></span> <span data-ttu-id="9dd8b-107">请注意，曲线不一定通过两个控制点;每个控点将移动行向本身，但无法通过本身其部分。</span><span class="sxs-lookup"><span data-stu-id="9dd8b-107">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
## <a name="freezable-features"></a><span data-ttu-id="9dd8b-108">Freezable 功能</span><span class="sxs-lookup"><span data-stu-id="9dd8b-108">Freezable Features</span></span>  
 <span data-ttu-id="9dd8b-109">A<xref:System.Windows.Media.BezierSegment>是一种<xref:System.Windows.Freezable>对象。</span><span class="sxs-lookup"><span data-stu-id="9dd8b-109">A <xref:System.Windows.Media.BezierSegment> is a type of <xref:System.Windows.Freezable> object.</span></span> <span data-ttu-id="9dd8b-110">璝惠<xref:System.Windows.Freezable>功能，如冻结和克隆，请参阅[可冻结对象概述](~/docs/framework/wpf/advanced/freezable-objects-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="9dd8b-110">For information about <xref:System.Windows.Freezable> features, such as freezing and cloning, see the [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.PathFigure" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9dd8b-111">初始化 <see cref="T:System.Windows.Media.BezierSegment" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd8b-111">Initializes a new instance of the <see cref="T:System.Windows.Media.BezierSegment" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BezierSegment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BezierSegment();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9dd8b-112">初始化 <see cref="T:System.Windows.Media.BezierSegment" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd8b-112">Initializes a new instance of the <see cref="T:System.Windows.Media.BezierSegment" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd8b-113">由四个点定义三次方贝塞尔曲线： 起始点，一个终结点 (`point3`)，以及两个控制点 (`point1`和`point2`)。</span><span class="sxs-lookup"><span data-stu-id="9dd8b-113">A cubic Bezier curve is defined by four points: a start point, an end point (`point3`), and two control points (`point1` and `point2`).</span></span> <span data-ttu-id="9dd8b-114">此方法不会启用你指定的曲线; 的开始点曲线开始的当前点<xref:System.Windows.Media.PathFigure>对象<xref:System.Windows.Media.BezierSegment>添加。</span><span class="sxs-lookup"><span data-stu-id="9dd8b-114">This method does not enable you to specify the beginning point of the curve; the curve begins at the current point of the <xref:System.Windows.Media.PathFigure> object to which the <xref:System.Windows.Media.BezierSegment> is added.</span></span>  
  
 <span data-ttu-id="9dd8b-115">三次方贝塞尔曲线的两个控制点的行为类似于磁铁，吸引本部分的不然就是一条直线朝着自身的方向并生成一条曲线。</span><span class="sxs-lookup"><span data-stu-id="9dd8b-115">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="9dd8b-116">第一个控制点， `point1`，影响开头曲线部分; 第二个控制点， `point2`，影响曲线的结束部分。</span><span class="sxs-lookup"><span data-stu-id="9dd8b-116">The first control point, `point1`, affects the beginning portion of the curve; the second control point, `point2`, affects the ending portion of the curve.</span></span> <span data-ttu-id="9dd8b-117">请注意，曲线不一定通过两个控制点;每个控点将移动行向本身，但无法通过本身其部分。</span><span class="sxs-lookup"><span data-stu-id="9dd8b-117">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BezierSegment (System.Windows.Point point1, System.Windows.Point point2, System.Windows.Point point3, bool isStroked);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2, valuetype System.Windows.Point point3, bool isStroked) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.#ctor(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (point1 As Point, point2 As Point, point3 As Point, isStroked As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BezierSegment(System::Windows::Point point1, System::Windows::Point point2, System::Windows::Point point3, bool isStroked);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
        <Parameter Name="point3" Type="System.Windows.Point" />
        <Parameter Name="isStroked" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point1">
          <span data-ttu-id="9dd8b-118">确定曲线开始部分的第一个控制点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd8b-118">The first control point, which determines the beginning portion of the curve.</span>
          </span>
        </param>
        <param name="point2">
          <span data-ttu-id="9dd8b-119">确定曲线结束部分的第二个控制点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd8b-119">The second control point, which determines the ending portion of the curve.</span>
          </span>
        </param>
        <param name="point3">
          <span data-ttu-id="9dd8b-120">绘制曲线将通过的点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd8b-120">The point to which the curve is drawn.</span>
          </span>
        </param>
        <param name="isStroked">
          <span data-ttu-id="9dd8b-121">若要在 <see cref="T:System.Windows.Media.Pen" /> 用于呈现线段时使曲线描边，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd8b-121">
              <see langword="true" /> to stroke the curve when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9dd8b-122">用指定的控制点、终点和描边选项初始化 <see cref="T:System.Windows.Media.BezierSegment" /> 类的一个新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd8b-122">Initializes a new instance of the <see cref="T:System.Windows.Media.BezierSegment" /> class with the specified control points, end point, and stroke option.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd8b-123">由四个点定义三次方贝塞尔曲线： 起始点，一个终结点 (`point3`)，以及两个控制点 (`point1`和`point2`)。</span><span class="sxs-lookup"><span data-stu-id="9dd8b-123">A cubic Bezier curve is defined by four points: a start point, an end point (`point3`), and two control points (`point1` and `point2`).</span></span> <span data-ttu-id="9dd8b-124">此方法不会启用你指定的曲线; 的开始点曲线开始的当前点<xref:System.Windows.Media.PathFigure>对象<xref:System.Windows.Media.BezierSegment>添加。</span><span class="sxs-lookup"><span data-stu-id="9dd8b-124">This method does not enable you to specify the beginning point of the curve; the curve begins at the current point of the <xref:System.Windows.Media.PathFigure> object to which the <xref:System.Windows.Media.BezierSegment> is added.</span></span>  
  
 <span data-ttu-id="9dd8b-125">三次方贝塞尔曲线的两个控制点的行为类似于磁铁，吸引本部分的不然就是一条直线朝着自身的方向并生成一条曲线。</span><span class="sxs-lookup"><span data-stu-id="9dd8b-125">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="9dd8b-126">第一个控制点， `point1`，影响开头曲线部分; 第二个控制点， `point2`，影响曲线的结束部分。</span><span class="sxs-lookup"><span data-stu-id="9dd8b-126">The first control point, `point1`, affects the beginning portion of the curve; the second control point, `point2`, affects the ending portion of the curve.</span></span> <span data-ttu-id="9dd8b-127">请注意，曲线不一定通过两个控制点;每个控点将移动行向本身，但无法通过本身其部分。</span><span class="sxs-lookup"><span data-stu-id="9dd8b-127">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.BezierSegment Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.BezierSegment Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As BezierSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::BezierSegment ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.BezierSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9dd8b-128">创建此 <see cref="T:System.Windows.Media.BezierSegment" /> 的可修改克隆，从而深度复制此对象的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd8b-128">Creates a modifiable clone of this <see cref="T:System.Windows.Media.BezierSegment" />, making deep copies of this object's values.</span>
          </span>
          <span data-ttu-id="9dd8b-129">在复制依赖项属性时，此方法会复制资源引用和数据绑定（但可能不再解析），但不复制动画或其当前值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd8b-129">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9dd8b-130">当前对象的可修改复本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd8b-130">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="9dd8b-131">即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 <see langword="true." />，所克隆的对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也将为 <see langword="false" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd8b-131">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd8b-132">此方法用于生成的可修改副本冻结<xref:System.Windows.Freezable>对象 (或任何<xref:System.Windows.Freezable>对象)。</span><span class="sxs-lookup"><span data-stu-id="9dd8b-132">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="9dd8b-133">为方便起见，此方法将隐藏继承的强类型实现的版本。</span><span class="sxs-lookup"><span data-stu-id="9dd8b-133">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="9dd8b-134">有关详情，请参阅<xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="9dd8b-134">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.BezierSegment CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.BezierSegment CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As BezierSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::BezierSegment ^ CloneCurrentValue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.BezierSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9dd8b-135">创建此 <see cref="T:System.Windows.Media.BezierSegment" /> 对象的可修改复本，从而深度复制此对象的当前值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd8b-135">Creates a modifiable clone of this <see cref="T:System.Windows.Media.BezierSegment" /> object, making deep copies of this object's current values.</span>
          </span>
          <span data-ttu-id="9dd8b-136">不复制资源引用、数据绑定和动画，而是复制其当前值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd8b-136">Resource references, data bindings, and animations are not copied, but their current values are.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9dd8b-137">当前对象的可修改复本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd8b-137">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="9dd8b-138">即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 <see langword="true" />，所克隆的对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也将为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd8b-138">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd8b-139">此方法用于生成的可修改副本冻结<xref:System.Windows.Freezable>对象 (或任何<xref:System.Windows.Freezable>对象)。</span><span class="sxs-lookup"><span data-stu-id="9dd8b-139">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="9dd8b-140">为方便起见，此方法将隐藏继承的强类型实现的版本。</span><span class="sxs-lookup"><span data-stu-id="9dd8b-140">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="9dd8b-141">有关详情，请参阅<xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="9dd8b-141">For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Point1">
      <MemberSignature Language="C#" Value="public System.Windows.Point Point1 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Point1" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.BezierSegment.Point1" />
      <MemberSignature Language="VB.NET" Value="Public Property Point1 As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Point1 { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9dd8b-142">获取或设置曲线的第一个控制点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd8b-142">Gets or sets the first control point of the curve.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9dd8b-143">曲线的第一个控制点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd8b-143">The first control point of the curve.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd8b-144">三次方贝塞尔曲线的两个控制点的行为类似于磁铁，吸引本部分的不然就是一条直线朝着自身的方向并生成一条曲线。</span><span class="sxs-lookup"><span data-stu-id="9dd8b-144">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="9dd8b-145">第一个控制点， <xref:System.Windows.Media.BezierSegment.Point1%2A>，影响开头曲线部分; 第二个控制点， <xref:System.Windows.Media.BezierSegment.Point2%2A>，影响曲线的结束部分。</span><span class="sxs-lookup"><span data-stu-id="9dd8b-145">The first control point, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affects the beginning portion of the curve; the second control point, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affects the ending portion of the curve.</span></span> <span data-ttu-id="9dd8b-146">请注意，曲线不一定通过两个控制点;每个控点将移动行向本身，但无法通过本身其部分。</span><span class="sxs-lookup"><span data-stu-id="9dd8b-146">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
<a name="dependencyPropertyInfo_Point1"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="9dd8b-147">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="9dd8b-147">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9dd8b-148">标识符字段</span><span class="sxs-lookup"><span data-stu-id="9dd8b-148">Identifier field</span></span>|<xref:System.Windows.Media.BezierSegment.Point1Property>|  
|<span data-ttu-id="9dd8b-149">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="9dd8b-149">Metadata properties set to `true`</span></span>|<span data-ttu-id="9dd8b-150">无</span><span class="sxs-lookup"><span data-stu-id="9dd8b-150">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Point1Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty Point1Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty Point1Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.BezierSegment.Point1Property" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Point1Property As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ Point1Property;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9dd8b-151">标识 <see cref="P:System.Windows.Media.BezierSegment.Point1" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd8b-151">Identifies the <see cref="P:System.Windows.Media.BezierSegment.Point1" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Point2">
      <MemberSignature Language="C#" Value="public System.Windows.Point Point2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Point2" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.BezierSegment.Point2" />
      <MemberSignature Language="VB.NET" Value="Public Property Point2 As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Point2 { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9dd8b-152">获取或设置曲线的第二个控制点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd8b-152">Gets or sets the second control point of the curve.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9dd8b-153">曲线的第二个控制点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd8b-153">The second control point of the curve.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd8b-154">三次方贝塞尔曲线的两个控制点的行为类似于磁铁，吸引本部分的不然就是一条直线朝着自身的方向并生成一条曲线。</span><span class="sxs-lookup"><span data-stu-id="9dd8b-154">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="9dd8b-155">第一个控制点， <xref:System.Windows.Media.BezierSegment.Point1%2A>，影响开头曲线部分; 第二个控制点， <xref:System.Windows.Media.BezierSegment.Point2%2A>，影响曲线的结束部分。</span><span class="sxs-lookup"><span data-stu-id="9dd8b-155">The first control point, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affects the beginning portion of the curve; the second control point, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affects the ending portion of the curve.</span></span> <span data-ttu-id="9dd8b-156">请注意，曲线不一定通过两个控制点;每个控点将移动行向本身，但无法通过本身其部分。</span><span class="sxs-lookup"><span data-stu-id="9dd8b-156">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
<a name="dependencyPropertyInfo_Point2"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="9dd8b-157">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="9dd8b-157">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9dd8b-158">标识符字段</span><span class="sxs-lookup"><span data-stu-id="9dd8b-158">Identifier field</span></span>|<xref:System.Windows.Media.BezierSegment.Point2Property>|  
|<span data-ttu-id="9dd8b-159">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="9dd8b-159">Metadata properties set to `true`</span></span>|<span data-ttu-id="9dd8b-160">无</span><span class="sxs-lookup"><span data-stu-id="9dd8b-160">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Point2Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty Point2Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty Point2Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.BezierSegment.Point2Property" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Point2Property As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ Point2Property;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9dd8b-161">标识 <see cref="P:System.Windows.Media.BezierSegment.Point2" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd8b-161">Identifies the <see cref="P:System.Windows.Media.BezierSegment.Point2" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Point3">
      <MemberSignature Language="C#" Value="public System.Windows.Point Point3 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Point3" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.BezierSegment.Point3" />
      <MemberSignature Language="VB.NET" Value="Public Property Point3 As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Point3 { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9dd8b-162">获取或设置曲线的终点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd8b-162">Gets or sets the end point of the curve.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9dd8b-163">曲线的终点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd8b-163">The end point of the curve.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dd8b-164"><xref:System.Windows.Media.BezierSegment>类并不包含曲线的起始点的属性; 它只定义终结点。</span><span class="sxs-lookup"><span data-stu-id="9dd8b-164">The <xref:System.Windows.Media.BezierSegment> class does not contain a property for the starting point of the curve; it only defines the end point.</span></span> <span data-ttu-id="9dd8b-165">曲线起始点是的当前点<xref:System.Windows.Media.PathFigure>到<xref:System.Windows.Media.BezierSegment>添加。</span><span class="sxs-lookup"><span data-stu-id="9dd8b-165">The beginning point of the curve is the current point of the <xref:System.Windows.Media.PathFigure> to which the <xref:System.Windows.Media.BezierSegment> is added.</span></span>  
  
<a name="dependencyPropertyInfo_Point3"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="9dd8b-166">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="9dd8b-166">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="9dd8b-167">标识符字段</span><span class="sxs-lookup"><span data-stu-id="9dd8b-167">Identifier field</span></span>|<xref:System.Windows.Media.BezierSegment.Point3Property>|  
|<span data-ttu-id="9dd8b-168">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="9dd8b-168">Metadata properties set to `true`</span></span>|<span data-ttu-id="9dd8b-169">无</span><span class="sxs-lookup"><span data-stu-id="9dd8b-169">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Point3Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty Point3Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty Point3Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.BezierSegment.Point3Property" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Point3Property As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ Point3Property;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9dd8b-170">标识 <see cref="P:System.Windows.Media.BezierSegment.Point3" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9dd8b-170">Identifies the <see cref="P:System.Windows.Media.BezierSegment.Point3" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>