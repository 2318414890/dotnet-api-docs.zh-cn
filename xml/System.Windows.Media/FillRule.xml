<Type Name="FillRule" FullName="System.Windows.Media.FillRule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9d58fd98f297c6728cdd40356ba63e0a690e8451" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30664891" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum FillRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed FillRule extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.FillRule" />
  <TypeSignature Language="VB.NET" Value="Public Enum FillRule" />
  <TypeSignature Language="C++ CLI" Value="public enum class FillRule" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>指定如何组合 <see cref="T:System.Windows.Media.PathFigure" /> 中包含的 <see cref="T:System.Windows.Media.Geometry" /> 对象的相交区域，以便形成 <see cref="T:System.Windows.Media.Geometry" /> 的区域。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="EvenOdd">
      <MemberSignature Language="C#" Value="EvenOdd" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Media.FillRule EvenOdd = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.FillRule.EvenOdd" />
      <MemberSignature Language="VB.NET" Value="EvenOdd" />
      <MemberSignature Language="C++ CLI" Value="EvenOdd" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.FillRule</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>通过从一点向任意方向绘制一条射向无穷远的射线，然后计算给定形状中与该射线相交的路径段的数目，从而确定该点是否位于填充区域的规则。 如果此数目为奇数，那么该点则在内部；如果为偶数，则该点在外部。</summary>
      </Docs>
    </Member>
    <Member MemberName="Nonzero">
      <MemberSignature Language="C#" Value="Nonzero" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Media.FillRule Nonzero = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.FillRule.Nonzero" />
      <MemberSignature Language="VB.NET" Value="Nonzero" />
      <MemberSignature Language="C++ CLI" Value="Nonzero" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.FillRule</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>通过从一点向任意方向绘制一条射向无穷远的射线，并检查一段形状与射线相交的位置，从而确定该点是否位于路径的填充区域的规则。 从零计数开始，从左到右每次添加与射线相交的一个段，然后从右到左每次减去与射线相交的一个路径段。 在对交叉点进行计数后，如果结果为零，那么该点则位于路径外。 否则，该点则在路径内。</summary>
      </Docs>
    </Member>
  </Members>
</Type>