<Type Name="MediaPlayer" FullName="System.Windows.Media.MediaPlayer">
  <TypeSignature Language="C#" Value="public class MediaPlayer : System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MediaPlayer extends System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.MediaPlayer" />
  <TypeSignature Language="VB.NET" Value="Public Class MediaPlayer&#xA;Inherits Animatable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MediaPlayer : System::Windows::Media::Animation::Animatable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.Animatable</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="07cc7-101">为绘图提供媒体播放功能。</span><span class="sxs-lookup"><span data-stu-id="07cc7-101">Provides media playback for drawings.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07cc7-102">虽然你可以将声明中此类的实例[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]，则无法加载和播放其媒体而不使用代码。</span><span class="sxs-lookup"><span data-stu-id="07cc7-102">Although you can declare an instance of this class in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], you cannot load and play its media without using code.</span></span> <span data-ttu-id="07cc7-103">若要在中播放媒体[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]只，请使用<xref:System.Windows.Controls.MediaElement>。</span><span class="sxs-lookup"><span data-stu-id="07cc7-103">To play media in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] only, use a <xref:System.Windows.Controls.MediaElement>.</span></span> <span data-ttu-id="07cc7-104">此外，如果声明中的某个实例[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]，唯一的实际用途是将填充的属性元素语法<xref:System.Windows.Media.VideoDrawing.Player%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="07cc7-104">Also, if you declare an instance in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], the only practical use is to fill property element syntax for the <xref:System.Windows.Media.VideoDrawing.Player%2A> property.</span></span>  
  
 <span data-ttu-id="07cc7-105">使用应用程序分发媒体时，不可将媒体文件用作项目资源。</span><span class="sxs-lookup"><span data-stu-id="07cc7-105">When distributing media with your application, you cannot use a media file as a project resource.</span></span> <span data-ttu-id="07cc7-106">在项目文件中，必须改为将媒体类型设置为 `Content` 并将 `CopyToOutputDirectory` 设置为 `PreserveNewest` 或 `Always`。</span><span class="sxs-lookup"><span data-stu-id="07cc7-106">In your project file, you must instead set the media type to `Content` and set `CopyToOutputDirectory` to `PreserveNewest` or `Always`.</span></span>  
  
 <span data-ttu-id="07cc7-107"><xref:System.Windows.Media.MediaPlayer> 可在两种不同模式，具体取决于玩家的决定因素： 独立模式还是时钟模式。</span><span class="sxs-lookup"><span data-stu-id="07cc7-107"><xref:System.Windows.Media.MediaPlayer> can be used in two different modes, depending on what is driving the player: independent mode or clock mode.</span></span> <span data-ttu-id="07cc7-108">在独立模式下，<xref:System.Windows.Media.MediaPlayer>类似于图像和媒体通过打开<xref:System.Windows.Media.MediaPlayer.Open%2A>方法驱动器播放。</span><span class="sxs-lookup"><span data-stu-id="07cc7-108">In independent mode, the <xref:System.Windows.Media.MediaPlayer> is analogous to an image and the media opened through the <xref:System.Windows.Media.MediaPlayer.Open%2A> method drives playback.</span></span> <span data-ttu-id="07cc7-109">在时钟模式下，<xref:System.Windows.Media.MediaPlayer>可视为动画的目标，因此它将具有对应的<xref:System.Windows.Media.Animation.Timeline>和<xref:System.Windows.Media.Animation.Clock>计时条目树的控件播放。</span><span class="sxs-lookup"><span data-stu-id="07cc7-109">In Clock mode, the <xref:System.Windows.Media.MediaPlayer> can be thought of as a target for an animation, and thus it will have corresponding <xref:System.Windows.Media.Animation.Timeline> and <xref:System.Windows.Media.Animation.Clock> entries in the Timing tree which controls playback.</span></span> <span data-ttu-id="07cc7-110">有关媒体模式的详细信息，请参阅[多媒体概述](~/docs/framework/wpf/graphics-multimedia/multimedia-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="07cc7-110">For more information on media modes, see the [Multimedia Overview](~/docs/framework/wpf/graphics-multimedia/multimedia-overview.md).</span></span>  
  
 <span data-ttu-id="07cc7-111"><xref:System.Windows.Media.MediaPlayer> 不同于<xref:System.Windows.Controls.MediaElement>，因为它不是可以直接添加的控件[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]的应用程序。</span><span class="sxs-lookup"><span data-stu-id="07cc7-111"><xref:System.Windows.Media.MediaPlayer> is different from a <xref:System.Windows.Controls.MediaElement> in that it is not a control that can be added directly to the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] of an application.</span></span> <span data-ttu-id="07cc7-112">若要显示使用加载的媒体<xref:System.Windows.Media.MediaPlayer>、<xref:System.Windows.Media.VideoDrawing>或<xref:System.Windows.Media.DrawingContext>必须使用。</span><span class="sxs-lookup"><span data-stu-id="07cc7-112">To display media loaded using <xref:System.Windows.Media.MediaPlayer>, a <xref:System.Windows.Media.VideoDrawing> or <xref:System.Windows.Media.DrawingContext> must be used.</span></span>  
  
   
  
## Examples  
 [<span data-ttu-id="07cc7-113">如何： 使用 VideoDrawing 播放媒体</span><span class="sxs-lookup"><span data-stu-id="07cc7-113">How to: Play Media using a VideoDrawing</span></span>](~/docs/framework/wpf/graphics-multimedia/how-to-play-media-using-a-videodrawing.md)  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Drawing" />
    <altmember cref="T:System.Windows.Media.VideoDrawing" />
    <altmember cref="T:System.Windows.Media.DrawingContext" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaPlayer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MediaPlayer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07cc7-114">初始化 <see cref="T:System.Windows.Media.MediaPlayer" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="07cc7-114">Initializes a new instance of the <see cref="T:System.Windows.Media.MediaPlayer" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Balance">
      <MemberSignature Language="C#" Value="public double Balance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Balance" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.Balance" />
      <MemberSignature Language="VB.NET" Value="Public Property Balance As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Balance { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07cc7-115">获取或设置左右扬声器音量之间的平衡。</span><span class="sxs-lookup"><span data-stu-id="07cc7-115">Gets or sets the balance between the left and right speaker volumes.</span></span></summary>
        <value><span data-ttu-id="07cc7-116">介于 -1 到 1 范围内的左右扬声器之间的音量比。</span><span class="sxs-lookup"><span data-stu-id="07cc7-116">The ratio of volume across the left and right speakers in a range between -1 and 1.</span></span> <span data-ttu-id="07cc7-117">默认值为 0。</span><span class="sxs-lookup"><span data-stu-id="07cc7-117">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07cc7-118">值-1 表示 100%的左侧发言人和 1 表示 100%的右侧发言人。</span><span class="sxs-lookup"><span data-stu-id="07cc7-118">A value of -1 represents 100% of the left side speakers and 1 represents 100% of the right side speakers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferingEnded">
      <MemberSignature Language="C#" Value="public event EventHandler BufferingEnded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BufferingEnded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.MediaPlayer.BufferingEnded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BufferingEnded As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BufferingEnded;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07cc7-119">当完成缓冲时发生。</span><span class="sxs-lookup"><span data-stu-id="07cc7-119">Occurs when buffering has finished.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferingProgress">
      <MemberSignature Language="C#" Value="public double BufferingProgress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 BufferingProgress" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.BufferingProgress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BufferingProgress As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double BufferingProgress { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07cc7-120">获取为流内容完成的缓冲百分比。</span><span class="sxs-lookup"><span data-stu-id="07cc7-120">Gets the percentage of buffering completed for streaming content.</span></span></summary>
        <value><span data-ttu-id="07cc7-121">用 0 与 1 之间的值表示的为流内容完成的缓冲百分比。</span><span class="sxs-lookup"><span data-stu-id="07cc7-121">The percentage of buffering completed for streaming content represented in a value between 0 and 1.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferingStarted">
      <MemberSignature Language="C#" Value="public event EventHandler BufferingStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BufferingStarted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.MediaPlayer.BufferingStarted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BufferingStarted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BufferingStarted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07cc7-122">当开始缓冲时发生。</span><span class="sxs-lookup"><span data-stu-id="07cc7-122">Occurs when buffering has started.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanPause">
      <MemberSignature Language="C#" Value="public bool CanPause { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPause" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.CanPause" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanPause As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanPause { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07cc7-123">获取一个值，该值指示是否可暂停媒体。</span><span class="sxs-lookup"><span data-stu-id="07cc7-123">Gets a value indicating whether the media can be paused.</span></span></summary>
        <value><span data-ttu-id="07cc7-124">如果可以暂停媒体，则为 true；否则为 false。</span><span class="sxs-lookup"><span data-stu-id="07cc7-124">true if the media can be paused; otherwise, false.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clock">
      <MemberSignature Language="C#" Value="public System.Windows.Media.MediaClock Clock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.MediaClock Clock" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.Clock" />
      <MemberSignature Language="VB.NET" Value="Public Property Clock As MediaClock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::MediaClock ^ Clock { System::Windows::Media::MediaClock ^ get(); void set(System::Windows::Media::MediaClock ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.MediaClock</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07cc7-125">获取或设置与要播放的 <see cref="T:System.Windows.Media.MediaClock" /> 关联的 <see cref="T:System.Windows.Media.MediaTimeline" />。</span><span class="sxs-lookup"><span data-stu-id="07cc7-125">Gets or sets the <see cref="T:System.Windows.Media.MediaClock" /> associated with the <see cref="T:System.Windows.Media.MediaTimeline" /> to be played.</span></span></summary>
        <value><span data-ttu-id="07cc7-126">与要播放的 <see cref="T:System.Windows.Media.MediaTimeline" /> 关联的时钟。</span><span class="sxs-lookup"><span data-stu-id="07cc7-126">The clock associated with the <see cref="T:System.Windows.Media.MediaTimeline" /> to be played.</span></span> <span data-ttu-id="07cc7-127">默认值为 null。</span><span class="sxs-lookup"><span data-stu-id="07cc7-127">The default is null.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07cc7-128">设置此属性告知<xref:System.Windows.Media.MediaPlayer>要时钟驱动，并且将利用计时引擎，同时使播放器处于时钟模式。</span><span class="sxs-lookup"><span data-stu-id="07cc7-128">Setting this property tells the <xref:System.Windows.Media.MediaPlayer> to be clock driven and will utilize the timing engine, placing the player in Clock mode.</span></span> <span data-ttu-id="07cc7-129">停止任何正在播放的媒体和<xref:System.Uri>与新关联打开时钟。</span><span class="sxs-lookup"><span data-stu-id="07cc7-129">Any media that is playing is stopped and the <xref:System.Uri> associated with the new clock is opened.</span></span>  
  
 <span data-ttu-id="07cc7-130">当玩家在时钟模式中，查找使用<xref:System.Windows.Media.MediaPlayer.Position%2A>或调用<xref:System.Windows.Media.MediaPlayer.Play%2A>， <xref:System.Windows.Media.MediaPlayer.Pause%2A>，或<xref:System.Windows.Media.MediaPlayer.Stop%2A>方法都会引发<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="07cc7-130">When the player is in clock mode, seeking using <xref:System.Windows.Media.MediaPlayer.Position%2A> or calling the <xref:System.Windows.Media.MediaPlayer.Play%2A>, <xref:System.Windows.Media.MediaPlayer.Pause%2A>, or <xref:System.Windows.Media.MediaPlayer.Stop%2A> methods will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="07cc7-131">这些操作才可用玩家<xref:System.Windows.Media.MediaPlayer.Clock%2A>为 null。</span><span class="sxs-lookup"><span data-stu-id="07cc7-131">These operations are only available when the player <xref:System.Windows.Media.MediaPlayer.Clock%2A> is null.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override void CloneCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="07cc7-132">要克隆的 <see cref="T:System.Windows.Media.MediaPlayer" />。</span><span class="sxs-lookup"><span data-stu-id="07cc7-132">The <see cref="T:System.Windows.Media.MediaPlayer" /> to clone.</span></span></param>
        <summary><span data-ttu-id="07cc7-133">使此实例成为指定 <see cref="T:System.Windows.Media.MediaPlayer" /> 的深层副本。</span><span class="sxs-lookup"><span data-stu-id="07cc7-133">Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.MediaPlayer" />.</span></span> <span data-ttu-id="07cc7-134">在复制依赖项属性时，此方法会复制资源引用和数据绑定（但可能不再解析），但不复制动画或其当前值。</span><span class="sxs-lookup"><span data-stu-id="07cc7-134">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07cc7-135">调用此方法<xref:System.Windows.Freezable.Clone%2A>方法应不直接从代码中，除非调用时调用时重写此方法的基实现。</span><span class="sxs-lookup"><span data-stu-id="07cc7-135">This method is called by the <xref:System.Windows.Freezable.Clone%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="07cc7-136">若要创建当前对象的可修改副本，请调用<xref:System.Windows.Freezable.Clone%2A>而不是直接调用此方法。</span><span class="sxs-lookup"><span data-stu-id="07cc7-136">To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.Clone%2A> instead of calling this method directly.</span></span>  
  
 <span data-ttu-id="07cc7-137">有关详情，请参阅<xref:System.Windows.Freezable.CloneCore%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="07cc7-137">For more information, see <xref:System.Windows.Freezable.CloneCore%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCurrentValueCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCurrentValueCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCurrentValueCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="07cc7-138">要克隆的 <see cref="T:System.Windows.Media.MediaPlayer" />。</span><span class="sxs-lookup"><span data-stu-id="07cc7-138">The <see cref="T:System.Windows.Media.MediaPlayer" /> to clone.</span></span></param>
        <summary><span data-ttu-id="07cc7-139">使用当前的属性值使该实例成为指定 <see cref="T:System.Windows.Media.MediaPlayer" /> 的可修改深层副本。</span><span class="sxs-lookup"><span data-stu-id="07cc7-139">Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.MediaPlayer" /> using current property values.</span></span> <span data-ttu-id="07cc7-140">不复制资源引用、数据绑定和动画，而是复制其当前值。</span><span class="sxs-lookup"><span data-stu-id="07cc7-140">Resource references, data bindings, and animations are not copied, but their current values are.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07cc7-141">调用此方法<xref:System.Windows.Freezable.CloneCurrentValue%2A>方法应不直接从代码中，除非调用时调用时重写此方法的基实现。</span><span class="sxs-lookup"><span data-stu-id="07cc7-141">This method is called by the <xref:System.Windows.Freezable.CloneCurrentValue%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="07cc7-142">若要创建当前对象的可修改副本，请调用<xref:System.Windows.Freezable.CloneCurrentValue%2A>而不是直接调用此方法。</span><span class="sxs-lookup"><span data-stu-id="07cc7-142">To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.CloneCurrentValue%2A> instead of calling this method directly.</span></span>  
  
 <span data-ttu-id="07cc7-143">有关详情，请参阅<xref:System.Windows.Freezable.CloneCurrentValueCore%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="07cc7-143">For more information, see <xref:System.Windows.Freezable.CloneCurrentValueCore%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07cc7-144">关闭基础媒体。</span><span class="sxs-lookup"><span data-stu-id="07cc7-144">Closes the underlying media.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07cc7-145"><xref:System.Windows.Media.MediaPlayer>可以通过调用再次打开<xref:System.Windows.Media.MediaPlayer.Open%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="07cc7-145">The <xref:System.Windows.Media.MediaPlayer> can be opened again by calling the <xref:System.Windows.Media.MediaPlayer.Open%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07cc7-146">创建一个新的 <see cref="T:System.Windows.Media.MediaPlayer" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="07cc7-146">Creates a new <see cref="T:System.Windows.Media.MediaPlayer" /> instance.</span></span></summary>
        <returns><span data-ttu-id="07cc7-147">新 <see cref="T:System.Windows.Media.MediaPlayer" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="07cc7-147">A new <see cref="T:System.Windows.Media.MediaPlayer" /> instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadProgress">
      <MemberSignature Language="C#" Value="public double DownloadProgress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 DownloadProgress" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.DownloadProgress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DownloadProgress As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double DownloadProgress { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07cc7-148">获取位于远程服务器上的内容的下载进度百分比。</span><span class="sxs-lookup"><span data-stu-id="07cc7-148">Gets the percentage of download progress for content located at a remote server.</span></span></summary>
        <value><span data-ttu-id="07cc7-149">位于远程服务器上的内容的下载进度百分比，由介于 0 与 1 之间的值来表示。</span><span class="sxs-lookup"><span data-stu-id="07cc7-149">The percentage of download progress for content located at a remote server represented by a value between 0 and 1.</span></span> <span data-ttu-id="07cc7-150">默认值为 0。</span><span class="sxs-lookup"><span data-stu-id="07cc7-150">The default is 0.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="07cc7-151">要克隆和冻结的 <see cref="T:System.Windows.Media.MediaPlayer" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="07cc7-151">The <see cref="T:System.Windows.Media.MediaPlayer" /> object to clone and freeze.</span></span></param>
        <summary><span data-ttu-id="07cc7-152">使该实例成为指定的 <see cref="T:System.Windows.Media.MediaPlayer" /> 对象的复本。</span><span class="sxs-lookup"><span data-stu-id="07cc7-152">Makes this instance a clone of the specified <see cref="T:System.Windows.Media.MediaPlayer" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07cc7-153">在复制依赖项属性时，此方法会复制资源引用和数据绑定（但可能不再解析），但不复制动画或其当前值。</span><span class="sxs-lookup"><span data-stu-id="07cc7-153">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span></span> <span data-ttu-id="07cc7-154">请注意，如果这些属性包含资源引用或数据绑定<xref:System.Windows.Freezable.GetAsFrozen%2A>将失败时尝试冻结该对象，并将引发<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="07cc7-154">Note that if these properties contain resource references or data bindings, <xref:System.Windows.Freezable.GetAsFrozen%2A> will fail when trying to freeze the object and will throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="07cc7-155">调用此方法<xref:System.Windows.Freezable.GetAsFrozen%2A>方法应不直接从代码中，除非调用时调用时重写此方法的基实现。</span><span class="sxs-lookup"><span data-stu-id="07cc7-155">This method is called by the <xref:System.Windows.Freezable.GetAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="07cc7-156">若要创建当前对象的冻结的副本，请调用<xref:System.Windows.Freezable.GetAsFrozen%2A>而不是直接调用此方法。</span><span class="sxs-lookup"><span data-stu-id="07cc7-156">To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly.</span></span>  
  
 <span data-ttu-id="07cc7-157">有关详情，请参阅<xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="07cc7-157">For more information, see <xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAudio">
      <MemberSignature Language="C#" Value="public bool HasAudio { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAudio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.HasAudio" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAudio As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAudio { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07cc7-158">获取一个值，该值指示媒体是否具有音频输出。</span><span class="sxs-lookup"><span data-stu-id="07cc7-158">Gets a value that indicating whether the media has audio output.</span></span></summary>
        <value><span data-ttu-id="07cc7-159">如果媒体具有音频输出，则为 true；否则为 false。</span><span class="sxs-lookup"><span data-stu-id="07cc7-159">true if the media has audio output; otherwise, false.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasVideo">
      <MemberSignature Language="C#" Value="public bool HasVideo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasVideo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.HasVideo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasVideo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasVideo { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07cc7-160">获取一个值，该值指示媒体是否具有视频输出。</span><span class="sxs-lookup"><span data-stu-id="07cc7-160">Gets a value that indicates whether the media has video output.</span></span></summary>
        <value><span data-ttu-id="07cc7-161">如果媒体具有视频输出，则为 true；否则为 false。</span><span class="sxs-lookup"><span data-stu-id="07cc7-161">true if the media has video output; otherwise, false.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBuffering">
      <MemberSignature Language="C#" Value="public bool IsBuffering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBuffering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.IsBuffering" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBuffering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBuffering { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07cc7-162">获取一个值，该值指示媒体是否正在缓冲。</span><span class="sxs-lookup"><span data-stu-id="07cc7-162">Gets a value that indicates whether the media is buffering.</span></span></summary>
        <value><span data-ttu-id="07cc7-163">如果媒体正在缓冲，则为 true；否则为 false。</span><span class="sxs-lookup"><span data-stu-id="07cc7-163">true if the media is buffering; otherwise, false.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMuted">
      <MemberSignature Language="C#" Value="public bool IsMuted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMuted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.IsMuted" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMuted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMuted { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07cc7-164">获取一个值，该值指示媒体是否被静音。</span><span class="sxs-lookup"><span data-stu-id="07cc7-164">Gets a value that indicates whether the media is muted.</span></span></summary>
        <value><span data-ttu-id="07cc7-165">如果媒体被静音，则为 true；否则为 false。</span><span class="sxs-lookup"><span data-stu-id="07cc7-165">true if the media is muted; otherwise, false.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaEnded">
      <MemberSignature Language="C#" Value="public event EventHandler MediaEnded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MediaEnded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.MediaPlayer.MediaEnded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MediaEnded As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MediaEnded;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07cc7-166">在媒体完成播放时发生。</span><span class="sxs-lookup"><span data-stu-id="07cc7-166">Occurs when the media has finished playback.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaFailed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Media.ExceptionEventArgs&gt; MediaFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Media.ExceptionEventArgs&gt; MediaFailed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.MediaPlayer.MediaFailed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MediaFailed As EventHandler(Of ExceptionEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Media::ExceptionEventArgs ^&gt; ^ MediaFailed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Media.ExceptionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07cc7-167">当遇到错误时发生</span><span class="sxs-lookup"><span data-stu-id="07cc7-167">Occurs when an error is encountered</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MediaFailed"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="07cc7-168">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="07cc7-168">XAML Attribute Usage</span></span>  
  
```  
<object MediaFailed="EventHandler"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaOpened">
      <MemberSignature Language="C#" Value="public event EventHandler MediaOpened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MediaOpened" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.MediaPlayer.MediaOpened" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MediaOpened As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MediaOpened;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07cc7-169">在打开媒体时发生。</span><span class="sxs-lookup"><span data-stu-id="07cc7-169">Occurs when the media is opened.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NaturalDuration">
      <MemberSignature Language="C#" Value="public System.Windows.Duration NaturalDuration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Duration NaturalDuration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.NaturalDuration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NaturalDuration As Duration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Duration NaturalDuration { System::Windows::Duration get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07cc7-170">获取媒体的自然持续时间。</span><span class="sxs-lookup"><span data-stu-id="07cc7-170">Gets the natural duration of the media.</span></span></summary>
        <value><span data-ttu-id="07cc7-171">媒体的自然持续时间。</span><span class="sxs-lookup"><span data-stu-id="07cc7-171">The natural duration of the media.</span></span> <span data-ttu-id="07cc7-172">默认值为 <see cref="P:System.Windows.Duration.Automatic" />。</span><span class="sxs-lookup"><span data-stu-id="07cc7-172">The default is <see cref="P:System.Windows.Duration.Automatic" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07cc7-173"><xref:System.Windows.Media.MediaPlayer.NaturalDuration%2A> 不能确定直到后<xref:System.Windows.Media.MediaPlayer.MediaOpened>发生。</span><span class="sxs-lookup"><span data-stu-id="07cc7-173"><xref:System.Windows.Media.MediaPlayer.NaturalDuration%2A> cannot be determined until after <xref:System.Windows.Media.MediaPlayer.MediaOpened> has occurred.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NaturalVideoHeight">
      <MemberSignature Language="C#" Value="public int NaturalVideoHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NaturalVideoHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.NaturalVideoHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NaturalVideoHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NaturalVideoHeight { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07cc7-174">获取视频的像素高度。</span><span class="sxs-lookup"><span data-stu-id="07cc7-174">Gets the pixel height of the video.</span></span></summary>
        <value><span data-ttu-id="07cc7-175">视频的像素高度。</span><span class="sxs-lookup"><span data-stu-id="07cc7-175">The pixel height of the video.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07cc7-176">如果媒体类型是音频，则返回 null。</span><span class="sxs-lookup"><span data-stu-id="07cc7-176">Null is returned if the media type is audio.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NaturalVideoWidth">
      <MemberSignature Language="C#" Value="public int NaturalVideoWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NaturalVideoWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.NaturalVideoWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NaturalVideoWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NaturalVideoWidth { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07cc7-177">获取视频的像素宽度。</span><span class="sxs-lookup"><span data-stu-id="07cc7-177">Gets the pixel width of the video.</span></span></summary>
        <value><span data-ttu-id="07cc7-178">视频的像素宽度。</span><span class="sxs-lookup"><span data-stu-id="07cc7-178">The pixel width of the video.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07cc7-179">如果媒体类型是音频，则返回 null。</span><span class="sxs-lookup"><span data-stu-id="07cc7-179">Null is returned if the media type is audio.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open (Uri source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Open(class System.Uri source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.Open(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open (source As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open(Uri ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="07cc7-180">媒体源 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="07cc7-180">The media source <see cref="T:System.Uri" />.</span></span></param>
        <summary><span data-ttu-id="07cc7-181">打开给定的 <see cref="T:System.Uri" /> 以进行媒体播放。</span><span class="sxs-lookup"><span data-stu-id="07cc7-181">Opens the given <see cref="T:System.Uri" /> for media playback.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07cc7-182">暂停媒体播放。</span><span class="sxs-lookup"><span data-stu-id="07cc7-182">Pauses media playback.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07cc7-183">调用<xref:System.Windows.Media.MediaPlayer.Pause%2A>时播放器都有一个相关<xref:System.Windows.Media.MediaPlayer.Clock%2A>将引发<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="07cc7-183">Calling <xref:System.Windows.Media.MediaPlayer.Pause%2A> when a player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A> will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="07cc7-184"><xref:System.Windows.Media.MediaPlayer.Pause%2A> 不能调用计时引擎驱动媒体播放时。</span><span class="sxs-lookup"><span data-stu-id="07cc7-184"><xref:System.Windows.Media.MediaPlayer.Pause%2A> cannot be called while the timing engine drives media playback.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Play">
      <MemberSignature Language="C#" Value="public void Play ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Play() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.Play" />
      <MemberSignature Language="VB.NET" Value="Public Sub Play ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Play();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07cc7-185">从当前 <see cref="P:System.Windows.Media.MediaPlayer.Position" /> 播放媒体。</span><span class="sxs-lookup"><span data-stu-id="07cc7-185">Plays media from the current <see cref="P:System.Windows.Media.MediaPlayer.Position" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07cc7-186">调用<xref:System.Windows.Media.MediaPlayer.Play%2A>时播放器都有一个相关<xref:System.Windows.Media.MediaPlayer.Clock%2A>将引发<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="07cc7-186">Calling <xref:System.Windows.Media.MediaPlayer.Play%2A> when a player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A> will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="07cc7-187"><xref:System.Windows.Media.MediaPlayer.Play%2A> 不能调用计时引擎驱动媒体播放时。</span><span class="sxs-lookup"><span data-stu-id="07cc7-187"><xref:System.Windows.Media.MediaPlayer.Play%2A> cannot be called while the timing engine drives media playback.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public TimeSpan Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.Position" />
      <MemberSignature Language="VB.NET" Value="Public Property Position As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Position { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07cc7-188">获取或设置媒体的当前位置。</span><span class="sxs-lookup"><span data-stu-id="07cc7-188">Gets or sets the current position of the media.</span></span></summary>
        <value><span data-ttu-id="07cc7-189">媒体的当前位置。</span><span class="sxs-lookup"><span data-stu-id="07cc7-189">The current position of the media.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07cc7-190">如果玩家都有一个相关<xref:System.Windows.Media.MediaPlayer.Clock%2A>，则设置<xref:System.Windows.Media.MediaPlayer.Position%2A>将引发<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="07cc7-190">If the player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A>, setting <xref:System.Windows.Media.MediaPlayer.Position%2A> will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="07cc7-191"><xref:System.Windows.Media.MediaPlayer.Position%2A> 不能设置计时引擎驱动媒体播放时。</span><span class="sxs-lookup"><span data-stu-id="07cc7-191"><xref:System.Windows.Media.MediaPlayer.Position%2A> cannot be set while the timing engine drives media playback.</span></span>  
  
<a name="xamlTextUsage_Position"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="07cc7-192">XAML 文本用法</span><span class="sxs-lookup"><span data-stu-id="07cc7-192">XAML Text Usage</span></span>  
 <span data-ttu-id="07cc7-193">中通常使用不[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="07cc7-193">Not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadPreamble">
      <MemberSignature Language="C#" Value="protected void ReadPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ReadPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.ReadPreamble" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ReadPreamble ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ReadPreamble();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07cc7-194">确保正在从有效线程中访问 MediaPlayer。</span><span class="sxs-lookup"><span data-stu-id="07cc7-194">Ensures that the MediaPlayer is being accessed from a valid thread.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScriptCommand">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Media.MediaScriptCommandEventArgs&gt; ScriptCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Media.MediaScriptCommandEventArgs&gt; ScriptCommand" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.MediaPlayer.ScriptCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ScriptCommand As EventHandler(Of MediaScriptCommandEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Media::MediaScriptCommandEventArgs ^&gt; ^ ScriptCommand;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Media.MediaScriptCommandEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07cc7-195">当在媒体中遇到脚本命令时发生。</span><span class="sxs-lookup"><span data-stu-id="07cc7-195">Occurs when a script command has been encountered within the media.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ScriptCommand"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="07cc7-196">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="07cc7-196">XAML Attribute Usage</span></span>  
  
```  
<object ScriptCommand="EventHandler"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrubbingEnabled">
      <MemberSignature Language="C#" Value="public bool ScrubbingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScrubbingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.ScrubbingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrubbingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScrubbingEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07cc7-197">获取或设置一个值，该值指示是否启用了拖动播放。</span><span class="sxs-lookup"><span data-stu-id="07cc7-197">Gets or sets a value that indicates whether scrubbing is enabled.</span></span></summary>
        <value>
          <span data-ttu-id="07cc7-198">如果启用了擦除，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="07cc7-198"><see langword="true" /> if scrubbing is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public Uri Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.Source" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Source As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Source { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07cc7-199">获取媒体 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="07cc7-199">Gets the media <see cref="T:System.Uri" />.</span></span></summary>
        <value><span data-ttu-id="07cc7-200">当前媒体 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="07cc7-200">The current media <see cref="T:System.Uri" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07cc7-201"><xref:System.Windows.Media.MediaPlayer.Source%2A> 为只读。</span><span class="sxs-lookup"><span data-stu-id="07cc7-201"><xref:System.Windows.Media.MediaPlayer.Source%2A> is read-only.</span></span> <span data-ttu-id="07cc7-202">此属性获取<xref:System.Uri>打开的通过<xref:System.Windows.Media.MediaPlayer.Open%2A>方法或<xref:System.Uri>与关联<xref:System.Windows.Media.MediaPlayer.Clock%2A>。</span><span class="sxs-lookup"><span data-stu-id="07cc7-202">This property gets the <xref:System.Uri> that is opened through the <xref:System.Windows.Media.MediaPlayer.Open%2A> method or the <xref:System.Uri> associated with the <xref:System.Windows.Media.MediaPlayer.Clock%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeedRatio">
      <MemberSignature Language="C#" Value="public double SpeedRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SpeedRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.SpeedRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property SpeedRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SpeedRatio { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07cc7-203">获取或设置媒体的播放速率。</span><span class="sxs-lookup"><span data-stu-id="07cc7-203">Gets or sets the ratio of speed that media is played at.</span></span></summary>
        <value><span data-ttu-id="07cc7-204">由 0 与最大双精度数值之间的值所表示的媒体播放速率。</span><span class="sxs-lookup"><span data-stu-id="07cc7-204">The ratio of speed that media is played back represented by a value between 0 and the largest double value.</span></span> <span data-ttu-id="07cc7-205">默认值为 1.0。</span><span class="sxs-lookup"><span data-stu-id="07cc7-205">The default is 1.0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07cc7-206">值小于一个产生比正常播放，而大于一个产生比正常播放快值慢。</span><span class="sxs-lookup"><span data-stu-id="07cc7-206">Values less than one yield slower than normal playback while values greater than one yields faster than normal playback.</span></span>  
  
 <span data-ttu-id="07cc7-207">如果玩家都有一个相关<xref:System.Windows.Media.MediaPlayer.Clock%2A>，则设置<xref:System.Windows.Media.MediaPlayer.SpeedRatio%2A>不允许。</span><span class="sxs-lookup"><span data-stu-id="07cc7-207">If the player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A>, setting <xref:System.Windows.Media.MediaPlayer.SpeedRatio%2A> is not allowed.</span></span> <span data-ttu-id="07cc7-208"><xref:System.Windows.Media.MediaPlayer.SpeedRatio%2A> 不能设置计时引擎驱动媒体播放时。</span><span class="sxs-lookup"><span data-stu-id="07cc7-208"><xref:System.Windows.Media.MediaPlayer.SpeedRatio%2A> cannot be set while the timing engine drives media playback.</span></span>  
  
 <span data-ttu-id="07cc7-209">音频播放不保证时<xref:System.Windows.Controls.MediaElement.SpeedRatio%2A>不`1`。</span><span class="sxs-lookup"><span data-stu-id="07cc7-209">Audio playback is not guaranteed when <xref:System.Windows.Controls.MediaElement.SpeedRatio%2A> is not `1`.</span></span>  
  
<a name="xamlTextUsage_SpeedRatio"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="07cc7-210">XAML 文本用法</span><span class="sxs-lookup"><span data-stu-id="07cc7-210">XAML Text Usage</span></span>  
 <span data-ttu-id="07cc7-211">中通常使用不[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="07cc7-211">Not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07cc7-212">停止媒体播放。</span><span class="sxs-lookup"><span data-stu-id="07cc7-212">Stops media playback.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07cc7-213">调用<xref:System.Windows.Media.MediaPlayer.Stop%2A>时播放器都有一个相关<xref:System.Windows.Media.MediaPlayer.Clock%2A>将引发<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="07cc7-213">Calling <xref:System.Windows.Media.MediaPlayer.Stop%2A> when a player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A> will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="07cc7-214"><xref:System.Windows.Media.MediaPlayer.Stop%2A> 不能调用计时引擎驱动媒体播放时。</span><span class="sxs-lookup"><span data-stu-id="07cc7-214"><xref:System.Windows.Media.MediaPlayer.Stop%2A> cannot be called while the timing engine drives media playback.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Volume">
      <MemberSignature Language="C#" Value="public double Volume { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Volume" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.Volume" />
      <MemberSignature Language="VB.NET" Value="Public Property Volume As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Volume { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07cc7-215">获取或设置媒体的音量。</span><span class="sxs-lookup"><span data-stu-id="07cc7-215">Gets or sets the media's volume.</span></span></summary>
        <value><span data-ttu-id="07cc7-216">在 0 与 1 之间的线性标尺上所表示的媒体音量。</span><span class="sxs-lookup"><span data-stu-id="07cc7-216">The media's volume represented on a linear scale between 0 and 1.</span></span> <span data-ttu-id="07cc7-217">默认值为 0.5。</span><span class="sxs-lookup"><span data-stu-id="07cc7-217">The default is 0.5.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_Volume"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="07cc7-218">XAML 文本用法</span><span class="sxs-lookup"><span data-stu-id="07cc7-218">XAML Text Usage</span></span>  
 <span data-ttu-id="07cc7-219">中通常使用不[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="07cc7-219">Not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WritePreamble">
      <MemberSignature Language="C#" Value="protected void WritePreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WritePreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.WritePreamble" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WritePreamble ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WritePreamble();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07cc7-220">验证 MediaPlayer 是否未被冻结，并且是否正在从有效的线程上下文中访问它。</span><span class="sxs-lookup"><span data-stu-id="07cc7-220">Verifies that the MediaPlayer is not frozen and that it is being accessed from a valid threading context.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>