<Type Name="Matrix" FullName="System.Windows.Media.Matrix">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d0e498df6ae2365c71e70c75703aa0590c214778" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52354241" /></Metadata><TypeSignature Language="C#" Value="public struct Matrix : IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Matrix extends System.ValueType implements class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Matrix" />
  <TypeSignature Language="VB.NET" Value="Public Structure Matrix&#xA;Implements IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Matrix : IFormattable" />
  <TypeSignature Language="F#" Value="type Matrix = struct&#xA;    interface IFormattable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.MatrixConverter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Media.Converters.MatrixValueSerializer))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="81181-101">表示用于在二维空间中进行转换的 3x3 仿射转换矩阵。</span><span class="sxs-lookup"><span data-stu-id="81181-101">Represents a 3x3 affine transformation matrix used for transformations in 2-D space.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81181-102">3x3 矩阵用于进行中的转换[!INCLUDE[TLA2#tla_2d](~/includes/tla2sharptla-2d-md.md)]x-y 平面。</span><span class="sxs-lookup"><span data-stu-id="81181-102">A 3x3 matrix is used for transformations in a [!INCLUDE[TLA2#tla_2d](~/includes/tla2sharptla-2d-md.md)] x-y plane.</span></span> <span data-ttu-id="81181-103">仿射转换矩阵相乘以形成任意数量的线性转换，如旋转和倾斜 （切变），然后再进行平移。</span><span class="sxs-lookup"><span data-stu-id="81181-103">Affine transformation matrices can be multiplied to form any number of linear transformations, such as rotation and skew (shear), followed by translation.</span></span> <span data-ttu-id="81181-104">仿射转换矩阵具有等于 （0，0，1），因此只需指定前两个列中的成员的最后一列。</span><span class="sxs-lookup"><span data-stu-id="81181-104">An affine transformation matrix has its final column equal to (0, 0, 1), so only the members in the first two columns need to be specified.</span></span>  <span data-ttu-id="81181-105">请注意矢量表示为行矢量，而非列矢量。</span><span class="sxs-lookup"><span data-stu-id="81181-105">Note that vectors are expressed as row-vectors, not column vectors.</span></span>  
  
 <span data-ttu-id="81181-106">一个[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<xref:System.Windows.Media.Matrix>使用行优先顺序存储，具有以下结构：</span><span class="sxs-lookup"><span data-stu-id="81181-106">A [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Media.Matrix> is stored using row-major order and has the following structure:</span></span>  
  
||||  
|-|-|-|  
|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|<span data-ttu-id="81181-107">0</span><span class="sxs-lookup"><span data-stu-id="81181-107">0</span></span>|  
|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|<span data-ttu-id="81181-108">0</span><span class="sxs-lookup"><span data-stu-id="81181-108">0</span></span>|  
|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|<span data-ttu-id="81181-109">1</span><span class="sxs-lookup"><span data-stu-id="81181-109">1</span></span>|  
  
 <span data-ttu-id="81181-110">最后一行中的成员<xref:System.Windows.Media.Matrix.OffsetX%2A>和<xref:System.Windows.Media.Matrix.OffsetY%2A>，表示平移值。</span><span class="sxs-lookup"><span data-stu-id="81181-110">The members in the last row, <xref:System.Windows.Media.Matrix.OffsetX%2A> and <xref:System.Windows.Media.Matrix.OffsetY%2A>, represent translation values.</span></span>  
  
 <span data-ttu-id="81181-111">在方法和属性中，转换矩阵通常被指定为仅六个成员与一个向量，如下所示：</span><span class="sxs-lookup"><span data-stu-id="81181-111">In methods and properties, the transformation matrix is usually specified as a vector with only six members, as follows:</span></span>  
  
 <span data-ttu-id="81181-112">(<xref:System.Windows.Media.Matrix.M11%2A>, <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.M22%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, <xref:System.Windows.Media.Matrix.OffsetY%2A>)</span><span class="sxs-lookup"><span data-stu-id="81181-112">(<xref:System.Windows.Media.Matrix.M11%2A>, <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.M22%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, <xref:System.Windows.Media.Matrix.OffsetY%2A>)</span></span>  
  
 <span data-ttu-id="81181-113">尽管可以使用<xref:System.Windows.Media.Matrix>结构直接将单独的点，或使用<xref:System.Windows.Media.MatrixTransform>对象，转换[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]还提供了一组类，您可以将对象转换而无需直接使用矩阵：<xref:System.Windows.Media.RotateTransform>， <xref:System.Windows.Media.ScaleTransform>， <xref:System.Windows.Media.SkewTransform>，和<xref:System.Windows.Media.TranslateTransform>。</span><span class="sxs-lookup"><span data-stu-id="81181-113">Although you can use a <xref:System.Windows.Media.Matrix> structure directly to translate individual points, or with a <xref:System.Windows.Media.MatrixTransform> to transform objects, [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] also provides a set of classes that enable you to transform objects without working directly with matrices: <xref:System.Windows.Media.RotateTransform>, <xref:System.Windows.Media.ScaleTransform>, <xref:System.Windows.Media.SkewTransform>, and <xref:System.Windows.Media.TranslateTransform>.</span></span>  
  
<a name="xamlAttributeUsage_Matrix"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="81181-114">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="81181-114">XAML Attribute Usage</span></span>  
  
```  
<object property="m11, m12, m21, m22, offsetX, offsetY"/>  
- or -  
<object property="Identity"/>  
```  
  
<a name="xamlValues_Matrix"></a>   
## <a name="xaml-values"></a><span data-ttu-id="81181-115">XAML 值</span><span class="sxs-lookup"><span data-stu-id="81181-115">XAML Values</span></span>  
 <span data-ttu-id="81181-116">*m11*</span><span class="sxs-lookup"><span data-stu-id="81181-116">*m11*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="81181-117">中的第一行和第一列，此值<xref:System.Windows.Media.Matrix>。</span><span class="sxs-lookup"><span data-stu-id="81181-117">The value in the first row and first column of this <xref:System.Windows.Media.Matrix>.</span></span> <span data-ttu-id="81181-118">有关更多信息，请参见 <xref:System.Windows.Media.Matrix.M11%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="81181-118">For more information, see the <xref:System.Windows.Media.Matrix.M11%2A> property.</span></span>  
  
 <span data-ttu-id="81181-119">*m12*</span><span class="sxs-lookup"><span data-stu-id="81181-119">*m12*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="81181-120">中的第一行和第二列的值。</span><span class="sxs-lookup"><span data-stu-id="81181-120">The value in the first row and second column.</span></span> <span data-ttu-id="81181-121">有关更多信息，请参见 <xref:System.Windows.Media.Matrix.M12%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="81181-121">For more information, see the <xref:System.Windows.Media.Matrix.M12%2A> property.</span></span>  
  
 <span data-ttu-id="81181-122">*m21*</span><span class="sxs-lookup"><span data-stu-id="81181-122">*m21*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="81181-123">第二行、 第一列中的值。</span><span class="sxs-lookup"><span data-stu-id="81181-123">The value in the second row and first column.</span></span> <span data-ttu-id="81181-124">有关更多信息，请参见 <xref:System.Windows.Media.Matrix.M21%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="81181-124">For more information, see the <xref:System.Windows.Media.Matrix.M21%2A> property.</span></span>  
  
 <span data-ttu-id="81181-125">*m22*</span><span class="sxs-lookup"><span data-stu-id="81181-125">*m22*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="81181-126">第二行和第二列中的值。</span><span class="sxs-lookup"><span data-stu-id="81181-126">The value in the second row and second column.</span></span> <span data-ttu-id="81181-127">有关更多信息，请参见 <xref:System.Windows.Media.Matrix.M22%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="81181-127">For more information, see the <xref:System.Windows.Media.Matrix.M22%2A> property.</span></span>  
  
 <span data-ttu-id="81181-128">*offsetX*</span><span class="sxs-lookup"><span data-stu-id="81181-128">*offsetX*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="81181-129">第三行、 第一列中的值。</span><span class="sxs-lookup"><span data-stu-id="81181-129">The value in the third row and first column.</span></span> <span data-ttu-id="81181-130">有关更多信息，请参见 <xref:System.Windows.Media.Matrix.OffsetX%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="81181-130">For more information, see the <xref:System.Windows.Media.Matrix.OffsetX%2A> property.</span></span>  
  
 <span data-ttu-id="81181-131">*offsetY*</span><span class="sxs-lookup"><span data-stu-id="81181-131">*offsetY*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="81181-132">第三行和第二列中的值。</span><span class="sxs-lookup"><span data-stu-id="81181-132">The value in the third row and second column.</span></span> <span data-ttu-id="81181-133">有关更多信息，请参见 <xref:System.Windows.Media.Matrix.OffsetY%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="81181-133">For more information, see the <xref:System.Windows.Media.Matrix.OffsetY%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159044"><span data-ttu-id="81181-134">矩阵示例</span><span class="sxs-lookup"><span data-stu-id="81181-134">Matrix Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix (double m11, double m12, double m21, double m22, double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 m11, float64 m12, float64 m21, float64 m22, float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (m11 As Double, m12 As Double, m21 As Double, m22 As Double, offsetX As Double, offsetY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix(double m11, double m12, double m21, double m22, double offsetX, double offsetY);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Matrix : double * double * double * double * double * double -&gt; System.Windows.Media.Matrix" Usage="new System.Windows.Media.Matrix (m11, m12, m21, m22, offsetX, offsetY)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="m11" Type="System.Double" />
        <Parameter Name="m12" Type="System.Double" />
        <Parameter Name="m21" Type="System.Double" />
        <Parameter Name="m22" Type="System.Double" />
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="m11"><span data-ttu-id="81181-135">新的 <see cref="T:System.Windows.Media.Matrix" /> 结构的 <see cref="P:System.Windows.Media.Matrix.M11" /> 系数。</span><span class="sxs-lookup"><span data-stu-id="81181-135">The new <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.M11" /> coefficient.</span></span></param>
        <param name="m12"><span data-ttu-id="81181-136">新的 <see cref="T:System.Windows.Media.Matrix" /> 结构的 <see cref="P:System.Windows.Media.Matrix.M12" /> 系数。</span><span class="sxs-lookup"><span data-stu-id="81181-136">The new <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.M12" /> coefficient.</span></span></param>
        <param name="m21"><span data-ttu-id="81181-137">新的 <see cref="T:System.Windows.Media.Matrix" /> 结构的 <see cref="P:System.Windows.Media.Matrix.M21" /> 系数。</span><span class="sxs-lookup"><span data-stu-id="81181-137">The new <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.M21" /> coefficient.</span></span></param>
        <param name="m22"><span data-ttu-id="81181-138">新的 <see cref="T:System.Windows.Media.Matrix" /> 结构的 <see cref="P:System.Windows.Media.Matrix.M22" /> 系数。</span><span class="sxs-lookup"><span data-stu-id="81181-138">The new <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.M22" /> coefficient.</span></span></param>
        <param name="offsetX"><span data-ttu-id="81181-139">新的 <see cref="T:System.Windows.Media.Matrix" /> 结构的 <see cref="P:System.Windows.Media.Matrix.OffsetX" /> 系数。</span><span class="sxs-lookup"><span data-stu-id="81181-139">The new <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.OffsetX" /> coefficient.</span></span></param>
        <param name="offsetY"><span data-ttu-id="81181-140">新的 <see cref="T:System.Windows.Media.Matrix" /> 结构的 <see cref="P:System.Windows.Media.Matrix.OffsetY" /> 系数。</span><span class="sxs-lookup"><span data-stu-id="81181-140">The new <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.OffsetY" /> coefficient.</span></span></param>
        <summary><span data-ttu-id="81181-141">初始化 <see cref="T:System.Windows.Media.Matrix" /> 结构的新实例。</span><span class="sxs-lookup"><span data-stu-id="81181-141">Initializes a new instance of the <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Windows.Media.Matrix -&gt; unit" Usage="matrix.Append matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="81181-142">要追加到此 <see cref="T:System.Windows.Media.Matrix" /> 结构的 <see cref="T:System.Windows.Media.Matrix" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="81181-142">The <see cref="T:System.Windows.Media.Matrix" /> structure to append to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></param>
        <summary><span data-ttu-id="81181-143">将指定的 <see cref="T:System.Windows.Media.Matrix" /> 结构追加到此 <see cref="T:System.Windows.Media.Matrix" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="81181-143">Appends the specified <see cref="T:System.Windows.Media.Matrix" /> structure to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81181-144">此操作等同于乘以此<xref:System.Windows.Media.Matrix>参数的结构`matrix`。</span><span class="sxs-lookup"><span data-stu-id="81181-144">This operation is the same as multiplying this <xref:System.Windows.Media.Matrix> structure by the parameter `matrix`.</span></span>  <span data-ttu-id="81181-145">矩阵相乘不是可交换性，不过，因此此操作不是与相乘参数相同`matrix`由此<xref:System.Windows.Media.Matrix>结构; 也就是说，(这 \* `matrix`) 不是与相同 (`matrix` \* 这)。</span><span class="sxs-lookup"><span data-stu-id="81181-145">Matrix multiplication is not commutative, though, so this operation is not the same as multiplying the parameter `matrix` by this <xref:System.Windows.Media.Matrix> structure; that is, (this \* `matrix`) is not the same as (`matrix` \* this).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81181-146">下面的示例演示如何将追加<xref:System.Windows.Media.Matrix>到另一个结构<xref:System.Windows.Media.Matrix>结构。</span><span class="sxs-lookup"><span data-stu-id="81181-146">The following example shows how to append a <xref:System.Windows.Media.Matrix> structure to another <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixRotateAboutPointExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixrotateaboutpointexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Determinant">
      <MemberSignature Language="C#" Value="public double Determinant { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Determinant" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.Determinant" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Determinant As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Determinant { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Determinant : double" Usage="System.Windows.Media.Matrix.Determinant" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81181-147">获取此 <see cref="T:System.Windows.Media.Matrix" /> 结构的行列式。</span><span class="sxs-lookup"><span data-stu-id="81181-147">Gets the determinant of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <value><span data-ttu-id="81181-148">此 <see cref="T:System.Windows.Media.Matrix" /> 的行列式。</span><span class="sxs-lookup"><span data-stu-id="81181-148">The determinant of this <see cref="T:System.Windows.Media.Matrix" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="81181-149">此示例演示如何获取的行列式<xref:System.Windows.Media.Matrix>。</span><span class="sxs-lookup"><span data-stu-id="81181-149">This example shows how to get the determinant of a <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixDeterminantExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixdeterminantexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="81181-150">确定两个指定的 <see cref="T:System.Windows.Media.Matrix" /> 结构是否具有相同的值。</span><span class="sxs-lookup"><span data-stu-id="81181-150">Determines whether the two specified <see cref="T:System.Windows.Media.Matrix" /> structures have the same values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="81181-151">一个<xref:System.Windows.Media.Matrix>将其值存储为双精度型值。</span><span class="sxs-lookup"><span data-stu-id="81181-151">A <xref:System.Windows.Media.Matrix> stores its values as doubles.</span></span> <span data-ttu-id="81181-152">因为的值<xref:System.Double>它，比较两个执行算术运算时可能会丢失精度<xref:System.Double>逻辑上相等的结构可能会失败。</span><span class="sxs-lookup"><span data-stu-id="81181-152">Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81181-153">下面的示例演示如何检查两个<xref:System.Windows.Media.Matrix>结构是否相等。</span><span class="sxs-lookup"><span data-stu-id="81181-153">The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixEqualityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixequalityexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="matrix.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="81181-154">要比较的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="81181-154">The <see cref="T:System.Object" /> to compare.</span></span></param>
        <summary><span data-ttu-id="81181-155">确定指定的 <see cref="T:System.Object" /> 是否是一个与此 <see cref="T:System.Windows.Media.Matrix" /> 相同的 <see cref="T:System.Windows.Media.Matrix" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="81181-155">Determines whether the specified <see cref="T:System.Object" /> is a <see cref="T:System.Windows.Media.Matrix" /> structure that is identical to this <see cref="T:System.Windows.Media.Matrix" />.</span></span></summary>
        <returns><span data-ttu-id="81181-156">如果 <paramref name="o" /> 是一个与此 <see cref="T:System.Windows.Media.Matrix" /> 结构相同的 <see cref="T:System.Windows.Media.Matrix" /> 结构，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="81181-156"><see langword="true" /> if <paramref name="o" /> is a <see cref="T:System.Windows.Media.Matrix" /> structure that is identical to this <see cref="T:System.Windows.Media.Matrix" /> structure; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="81181-157">一个<xref:System.Windows.Media.Matrix>将其值存储为双精度型值。</span><span class="sxs-lookup"><span data-stu-id="81181-157">A <xref:System.Windows.Media.Matrix> stores its values as doubles.</span></span> <span data-ttu-id="81181-158">因为的值<xref:System.Double>它，比较两个执行算术运算时可能会丢失精度<xref:System.Double>逻辑上相等的结构可能会失败。</span><span class="sxs-lookup"><span data-stu-id="81181-158">Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81181-159">下面的示例演示如何检查两个<xref:System.Windows.Media.Matrix>结构是否相等。</span><span class="sxs-lookup"><span data-stu-id="81181-159">The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixEqualityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixequalityexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Media.Matrix value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.Media.Matrix value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As Matrix) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Windows::Media::Matrix value);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Media.Matrix -&gt; bool" Usage="matrix.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="81181-160">要与此实例比较的 <see cref="T:System.Windows.Media.Matrix" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="81181-160">The instance of <see cref="T:System.Windows.Media.Matrix" /> to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="81181-161">确定指定的 <see cref="T:System.Windows.Media.Matrix" /> 结构是否与此实例相同。</span><span class="sxs-lookup"><span data-stu-id="81181-161">Determines whether the specified <see cref="T:System.Windows.Media.Matrix" /> structure is identical to this instance.</span></span></summary>
        <returns><span data-ttu-id="81181-162">如果两个实例相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="81181-162"><see langword="true" /> if instances are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="81181-163">一个<xref:System.Windows.Media.Matrix>将其值存储为双精度型值。</span><span class="sxs-lookup"><span data-stu-id="81181-163">A <xref:System.Windows.Media.Matrix> stores its values as doubles.</span></span> <span data-ttu-id="81181-164">因为的值<xref:System.Double>它，比较两个执行算术运算时可能会丢失精度<xref:System.Double>逻辑上相等的结构可能会失败。</span><span class="sxs-lookup"><span data-stu-id="81181-164">Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81181-165">下面的示例演示如何检查两个<xref:System.Windows.Media.Matrix>结构是否相等。</span><span class="sxs-lookup"><span data-stu-id="81181-165">The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixEqualityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixequalityexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (System.Windows.Media.Matrix matrix1, System.Windows.Media.Matrix matrix2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Windows.Media.Matrix matrix1, valuetype System.Windows.Media.Matrix matrix2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (matrix1 As Matrix, matrix2 As Matrix) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Windows::Media::Matrix matrix1, System::Windows::Media::Matrix matrix2);" />
      <MemberSignature Language="F#" Value="static member Equals : System.Windows.Media.Matrix * System.Windows.Media.Matrix -&gt; bool" Usage="System.Windows.Media.Matrix.Equals (matrix1, matrix2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix1" Type="System.Windows.Media.Matrix" />
        <Parameter Name="matrix2" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix1"><span data-ttu-id="81181-166">要比较的第一个 <see cref="T:System.Windows.Media.Matrix" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="81181-166">The first <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</span></span></param>
        <param name="matrix2"><span data-ttu-id="81181-167">要比较的第二个 <see cref="T:System.Windows.Media.Matrix" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="81181-167">The second <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</span></span></param>
        <summary><span data-ttu-id="81181-168">确定两个指定的 <see cref="T:System.Windows.Media.Matrix" /> 结构是否相同。</span><span class="sxs-lookup"><span data-stu-id="81181-168">Determines whether the two specified <see cref="T:System.Windows.Media.Matrix" /> structures are identical.</span></span></summary>
        <returns><span data-ttu-id="81181-169">如果 <paramref name="matrix1" /> 和 <paramref name="matrix2" /> 相同，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="81181-169"><see langword="true" /> if <paramref name="matrix1" /> and <paramref name="matrix2" /> are identical; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="81181-170">一个<xref:System.Windows.Media.Matrix>将其值存储为双精度型值。</span><span class="sxs-lookup"><span data-stu-id="81181-170">A <xref:System.Windows.Media.Matrix> stores its values as doubles.</span></span> <span data-ttu-id="81181-171">因为的值<xref:System.Double>它，比较两个执行算术运算时可能会丢失精度<xref:System.Double>逻辑上相等的结构可能会失败。</span><span class="sxs-lookup"><span data-stu-id="81181-171">Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="matrix.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="81181-172">返回此 <see cref="T:System.Windows.Media.Matrix" /> 结构的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="81181-172">Returns the hash code for this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <returns><span data-ttu-id="81181-173">此实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="81181-173">The hash code for this instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasInverse">
      <MemberSignature Language="C#" Value="public bool HasInverse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasInverse" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.HasInverse" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasInverse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasInverse { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasInverse : bool" Usage="System.Windows.Media.Matrix.HasInverse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81181-174">获取一个值，该值指示此 <see cref="T:System.Windows.Media.Matrix" /> 结构是否可以反转。</span><span class="sxs-lookup"><span data-stu-id="81181-174">Gets a value that indicates whether this <see cref="T:System.Windows.Media.Matrix" /> structure is invertible.</span></span></summary>
        <value><span data-ttu-id="81181-175">如果 <see cref="T:System.Windows.Media.Matrix" /> 存在逆矩阵，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="81181-175"><see langword="true" /> if the <see cref="T:System.Windows.Media.Matrix" /> has an inverse; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="81181-176">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="81181-176">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="81181-177">以下示例检查是否<xref:System.Windows.Media.Matrix>可逆。</span><span class="sxs-lookup"><span data-stu-id="81181-177">The following example checks whether a <xref:System.Windows.Media.Matrix> is invertible.</span></span> <span data-ttu-id="81181-178">如果它是可逆转，<xref:System.Windows.Media.Matrix>反转。</span><span class="sxs-lookup"><span data-stu-id="81181-178">If it is invertible, the <xref:System.Windows.Media.Matrix> is inverted.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixInverseExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixinverseexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Matrix Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Media.Matrix Identity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.Identity" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Identity As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Media::Matrix Identity { System::Windows::Media::Matrix get(); };" />
      <MemberSignature Language="F#" Value="member this.Identity : System.Windows.Media.Matrix" Usage="System.Windows.Media.Matrix.Identity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81181-179">获取一个恒等 <see cref="T:System.Windows.Media.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="81181-179">Gets an identity <see cref="T:System.Windows.Media.Matrix" />.</span></span></summary>
        <value><span data-ttu-id="81181-180">一个恒等矩阵。</span><span class="sxs-lookup"><span data-stu-id="81181-180">An identity matrix.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81181-181">某标识矩阵在系数 [1，1]，[2，2] [3，3] 的值为 1 和 0 在其余系数的值。</span><span class="sxs-lookup"><span data-stu-id="81181-181">An identity matrix has a value of 1 in coefficients [1,1],[2,2],[3,3] and a value of 0 in the rest of the coefficients.</span></span> <span data-ttu-id="81181-182">这与设置相关联<xref:System.Windows.Media.Matrix.M11%2A>并<xref:System.Windows.Media.Matrix.M22%2A>为 1 并<xref:System.Windows.Media.Matrix.M12%2A>， <xref:System.Windows.Media.Matrix.M21%2A>， <xref:System.Windows.Media.Matrix.OffsetX%2A>，并<xref:System.Windows.Media.Matrix.OffsetY%2A>为 0。</span><span class="sxs-lookup"><span data-stu-id="81181-182">This correlates to setting <xref:System.Windows.Media.Matrix.M11%2A> and <xref:System.Windows.Media.Matrix.M22%2A> to 1 and <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, and <xref:System.Windows.Media.Matrix.OffsetY%2A> to 0.</span></span> <span data-ttu-id="81181-183">在仿射矩阵，这是实现的[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]用于<xref:System.Windows.Media.Matrix>，结构，系数 [3，1]，[3，2] 和 [3.3] 暗指始终分别具有 0,0,1 的值。</span><span class="sxs-lookup"><span data-stu-id="81181-183">In an affine matrix, which is the implementation that [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] uses for the <xref:System.Windows.Media.Matrix>, structure, coefficients [3,1],[3,2],[3.3] are implied to always have the values 0,0,1 respectively.</span></span>  
  
||||  
|-|-|-|  
|<span data-ttu-id="81181-184">1</span><span class="sxs-lookup"><span data-stu-id="81181-184">1</span></span>|<span data-ttu-id="81181-185">0</span><span class="sxs-lookup"><span data-stu-id="81181-185">0</span></span>|<span data-ttu-id="81181-186">0</span><span class="sxs-lookup"><span data-stu-id="81181-186">0</span></span>|  
|<span data-ttu-id="81181-187">0</span><span class="sxs-lookup"><span data-stu-id="81181-187">0</span></span>|<span data-ttu-id="81181-188">1</span><span class="sxs-lookup"><span data-stu-id="81181-188">1</span></span>|<span data-ttu-id="81181-189">0</span><span class="sxs-lookup"><span data-stu-id="81181-189">0</span></span>|  
|<span data-ttu-id="81181-190">0</span><span class="sxs-lookup"><span data-stu-id="81181-190">0</span></span>|<span data-ttu-id="81181-191">0</span><span class="sxs-lookup"><span data-stu-id="81181-191">0</span></span>|<span data-ttu-id="81181-192">1</span><span class="sxs-lookup"><span data-stu-id="81181-192">1</span></span>|  
  
 <span data-ttu-id="81181-193">恒等矩阵，对于<xref:System.Windows.Media.Matrix.ToString%2A>方法将返回字符串"标识"而不是这些系数的<xref:System.Windows.Media.Matrix>。</span><span class="sxs-lookup"><span data-stu-id="81181-193">For an identity matrix, the <xref:System.Windows.Media.Matrix.ToString%2A> method returns the string "Identity" instead of the coefficients of the <xref:System.Windows.Media.Matrix>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81181-194">下面的示例演示如何检索<xref:System.Windows.Media.Matrix.Identity%2A>矩阵。</span><span class="sxs-lookup"><span data-stu-id="81181-194">The following example shows how to retrieve the <xref:System.Windows.Media.Matrix.Identity%2A> matrix.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixIdentityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixidentityexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.SetIdentity" />
        <altmember cref="P:System.Windows.Media.Matrix.IsIdentity" />
      </Docs>
    </Member>
    <Member MemberName="Invert">
      <MemberSignature Language="C#" Value="public void Invert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Invert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invert();" />
      <MemberSignature Language="F#" Value="member this.Invert : unit -&gt; unit" Usage="matrix.Invert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="81181-195">反转此 <see cref="T:System.Windows.Media.Matrix" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="81181-195">Inverts this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="81181-196">以下示例检查了如果<xref:System.Windows.Media.Matrix>结构是否可以反转。</span><span class="sxs-lookup"><span data-stu-id="81181-196">The following example checks if a <xref:System.Windows.Media.Matrix> structure is invertible.</span></span> <span data-ttu-id="81181-197">如果它是可逆转，<xref:System.Windows.Media.Matrix>反转结构。</span><span class="sxs-lookup"><span data-stu-id="81181-197">If it is invertible, the <xref:System.Windows.Media.Matrix> structure is inverted.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixInverseExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixinverseexample_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="81181-198">不能反转 <see cref="T:System.Windows.Media.Matrix" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="81181-198">The <see cref="T:System.Windows.Media.Matrix" /> structure is not invertible.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsIdentity">
      <MemberSignature Language="C#" Value="public bool IsIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.IsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsIdentity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsIdentity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsIdentity : bool" Usage="System.Windows.Media.Matrix.IsIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81181-199">获取一个值，该值指示此 <see cref="T:System.Windows.Media.Matrix" /> 结构是否为恒等矩阵。</span><span class="sxs-lookup"><span data-stu-id="81181-199">Gets a value that indicates whether this <see cref="T:System.Windows.Media.Matrix" /> structure is an identity matrix.</span></span></summary>
        <value><span data-ttu-id="81181-200">如果 <see cref="T:System.Windows.Media.Matrix" /> 结构是恒等矩阵，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="81181-200"><see langword="true" /> if the <see cref="T:System.Windows.Media.Matrix" /> structure is an identity matrix; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="81181-201">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="81181-201">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81181-202">某标识矩阵在系数 [1，1]，[2，2] [3，3] 的值为 1 和 0 在其余系数的值。</span><span class="sxs-lookup"><span data-stu-id="81181-202">An identity matrix has a value of 1 in coefficients [1,1],[2,2],[3,3] and a value of 0 in the rest of the coefficients.</span></span> <span data-ttu-id="81181-203">这与设置相关联<xref:System.Windows.Media.Matrix.M11%2A>并<xref:System.Windows.Media.Matrix.M22%2A>为 1 并<xref:System.Windows.Media.Matrix.M12%2A>， <xref:System.Windows.Media.Matrix.M21%2A>， <xref:System.Windows.Media.Matrix.OffsetX%2A>，并<xref:System.Windows.Media.Matrix.OffsetY%2A>为 0。</span><span class="sxs-lookup"><span data-stu-id="81181-203">This correlates to setting <xref:System.Windows.Media.Matrix.M11%2A> and <xref:System.Windows.Media.Matrix.M22%2A> to 1 and <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, and <xref:System.Windows.Media.Matrix.OffsetY%2A> to 0.</span></span> <span data-ttu-id="81181-204">在仿射矩阵，这是实现的[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]用于<xref:System.Windows.Media.Matrix>结构，系数 [3，1]，[3，2] 和 [3.3] 暗指始终分别具有 0,0,1 的值。</span><span class="sxs-lookup"><span data-stu-id="81181-204">In an affine matrix, which is the implementation that [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] uses for the <xref:System.Windows.Media.Matrix> structure, coefficients [3,1],[3,2],[3.3] are implied to always have the values 0,0,1 respectively.</span></span>  
  
||||  
|-|-|-|  
|<span data-ttu-id="81181-205">1</span><span class="sxs-lookup"><span data-stu-id="81181-205">1</span></span>|<span data-ttu-id="81181-206">0</span><span class="sxs-lookup"><span data-stu-id="81181-206">0</span></span>|<span data-ttu-id="81181-207">0</span><span class="sxs-lookup"><span data-stu-id="81181-207">0</span></span>|  
|<span data-ttu-id="81181-208">0</span><span class="sxs-lookup"><span data-stu-id="81181-208">0</span></span>|<span data-ttu-id="81181-209">1</span><span class="sxs-lookup"><span data-stu-id="81181-209">1</span></span>|<span data-ttu-id="81181-210">0</span><span class="sxs-lookup"><span data-stu-id="81181-210">0</span></span>|  
|<span data-ttu-id="81181-211">0</span><span class="sxs-lookup"><span data-stu-id="81181-211">0</span></span>|<span data-ttu-id="81181-212">0</span><span class="sxs-lookup"><span data-stu-id="81181-212">0</span></span>|<span data-ttu-id="81181-213">1</span><span class="sxs-lookup"><span data-stu-id="81181-213">1</span></span>|  
  
 <span data-ttu-id="81181-214">恒等矩阵，对于<xref:System.Windows.Media.Matrix.ToString%2A>方法将返回字符串"标识"，而不是这些系数的<xref:System.Windows.Media.Matrix>。</span><span class="sxs-lookup"><span data-stu-id="81181-214">For an identity matrix, the <xref:System.Windows.Media.Matrix.ToString%2A> method returns the string "Identity", instead of the coefficients of the <xref:System.Windows.Media.Matrix>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Matrix.Identity" />
        <altmember cref="M:System.Windows.Media.Matrix.SetIdentity" />
      </Docs>
    </Member>
    <Member MemberName="M11">
      <MemberSignature Language="C#" Value="public double M11 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 M11" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.M11" />
      <MemberSignature Language="VB.NET" Value="Public Property M11 As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double M11 { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.M11 : double with get, set" Usage="System.Windows.Media.Matrix.M11" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81181-215">获取或设置此 <see cref="T:System.Windows.Media.Matrix" /> 结构中第一行与第一列相交处的值。</span><span class="sxs-lookup"><span data-stu-id="81181-215">Gets or sets the value of the first row and first column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <value><span data-ttu-id="81181-216">此 <see cref="T:System.Windows.Media.Matrix" /> 中第一行与第一列相交处的值。</span><span class="sxs-lookup"><span data-stu-id="81181-216">The value of the first row and first column of this <see cref="T:System.Windows.Media.Matrix" />.</span></span> <span data-ttu-id="81181-217">默认值为 1。</span><span class="sxs-lookup"><span data-stu-id="81181-217">The default value is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="81181-218">下面的示例演示如何将两个相乘<xref:System.Windows.Media.Matrix>结构，以及如何将值分配给<xref:System.Windows.Media.Matrix>时声明，并声明结构后。</span><span class="sxs-lookup"><span data-stu-id="81181-218">The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures and how to assign values to a <xref:System.Windows.Media.Matrix> when it is declared, and after the structure is declared.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixmultiplicationexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="M12">
      <MemberSignature Language="C#" Value="public double M12 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 M12" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.M12" />
      <MemberSignature Language="VB.NET" Value="Public Property M12 As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double M12 { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.M12 : double with get, set" Usage="System.Windows.Media.Matrix.M12" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81181-219">获取或设置此 <see cref="T:System.Windows.Media.Matrix" /> 结构中第一行与第二列相交处的值。</span><span class="sxs-lookup"><span data-stu-id="81181-219">Gets or sets the value of the first row and second column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <value><span data-ttu-id="81181-220">此 <see cref="T:System.Windows.Media.Matrix" /> 中第一行与第二列相交处的值。</span><span class="sxs-lookup"><span data-stu-id="81181-220">The value of the first row and second column of this <see cref="T:System.Windows.Media.Matrix" />.</span></span> <span data-ttu-id="81181-221">默认值为 0。</span><span class="sxs-lookup"><span data-stu-id="81181-221">The default value is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81181-222">下表显示的布局<xref:System.Windows.Media.Matrix>。</span><span class="sxs-lookup"><span data-stu-id="81181-222">The following table shows the layout of a <xref:System.Windows.Media.Matrix>.</span></span>  
  
||||  
|-|-|-|  
|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|<span data-ttu-id="81181-223">0</span><span class="sxs-lookup"><span data-stu-id="81181-223">0</span></span>|  
|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|<span data-ttu-id="81181-224">0</span><span class="sxs-lookup"><span data-stu-id="81181-224">0</span></span>|  
|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|<span data-ttu-id="81181-225">1</span><span class="sxs-lookup"><span data-stu-id="81181-225">1</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="81181-226">下面的示例演示如何将两个相乘<xref:System.Windows.Media.Matrix>结构，以及如何将值分配给<xref:System.Windows.Media.Matrix>时声明，并声明结构后。</span><span class="sxs-lookup"><span data-stu-id="81181-226">The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures and how to assign values to a <xref:System.Windows.Media.Matrix> when it is declared, and after the structure is declared.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixmultiplicationexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="M21">
      <MemberSignature Language="C#" Value="public double M21 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 M21" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.M21" />
      <MemberSignature Language="VB.NET" Value="Public Property M21 As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double M21 { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.M21 : double with get, set" Usage="System.Windows.Media.Matrix.M21" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81181-227">获取或设置此 <see cref="T:System.Windows.Media.Matrix" /> 结构中第二行与第一列相交处的值。</span><span class="sxs-lookup"><span data-stu-id="81181-227">Gets or sets the value of the second row and first column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <value><span data-ttu-id="81181-228">此 <see cref="T:System.Windows.Media.Matrix" /> 中第二行与第一列相交处的值。</span><span class="sxs-lookup"><span data-stu-id="81181-228">The value of the second row and first column of this <see cref="T:System.Windows.Media.Matrix" />.</span></span> <span data-ttu-id="81181-229">默认值为 0。</span><span class="sxs-lookup"><span data-stu-id="81181-229">The default value is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81181-230">下表显示的布局<xref:System.Windows.Media.Matrix>。</span><span class="sxs-lookup"><span data-stu-id="81181-230">The following table shows the layout of a <xref:System.Windows.Media.Matrix>.</span></span>  
  
||||  
|-|-|-|  
|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|<span data-ttu-id="81181-231">0</span><span class="sxs-lookup"><span data-stu-id="81181-231">0</span></span>|  
|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|<span data-ttu-id="81181-232">0</span><span class="sxs-lookup"><span data-stu-id="81181-232">0</span></span>|  
|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|<span data-ttu-id="81181-233">1</span><span class="sxs-lookup"><span data-stu-id="81181-233">1</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="81181-234">下面的示例演示如何将两个相乘<xref:System.Windows.Media.Matrix>结构，以及如何将值分配给<xref:System.Windows.Media.Matrix>时声明，并声明结构后。</span><span class="sxs-lookup"><span data-stu-id="81181-234">The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures and how to assign values to a <xref:System.Windows.Media.Matrix> when it is declared, and after the structure is declared.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixmultiplicationexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="M22">
      <MemberSignature Language="C#" Value="public double M22 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 M22" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.M22" />
      <MemberSignature Language="VB.NET" Value="Public Property M22 As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double M22 { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.M22 : double with get, set" Usage="System.Windows.Media.Matrix.M22" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81181-235">获取或设置此 <see cref="T:System.Windows.Media.Matrix" /> 结构中第二行与第二列相交处的值。</span><span class="sxs-lookup"><span data-stu-id="81181-235">Gets or sets the value of the second row and second column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <value><span data-ttu-id="81181-236">此 <see cref="T:System.Windows.Media.Matrix" /> 结构中第二行与第二列相交处的值。</span><span class="sxs-lookup"><span data-stu-id="81181-236">The value of the second row and second column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span> <span data-ttu-id="81181-237">默认值为 1。</span><span class="sxs-lookup"><span data-stu-id="81181-237">The default value is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81181-238">下表显示的布局<xref:System.Windows.Media.Matrix>结构。</span><span class="sxs-lookup"><span data-stu-id="81181-238">The following table shows the layout of a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
||||  
|-|-|-|  
|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|<span data-ttu-id="81181-239">0</span><span class="sxs-lookup"><span data-stu-id="81181-239">0</span></span>|  
|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|<span data-ttu-id="81181-240">0</span><span class="sxs-lookup"><span data-stu-id="81181-240">0</span></span>|  
|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|<span data-ttu-id="81181-241">1</span><span class="sxs-lookup"><span data-stu-id="81181-241">1</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="81181-242">下面的示例演示如何将两个相乘<xref:System.Windows.Media.Matrix>结构，以及如何将值分配给<xref:System.Windows.Media.Matrix>时声明，并声明结构后。</span><span class="sxs-lookup"><span data-stu-id="81181-242">The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures and how to assign values to a <xref:System.Windows.Media.Matrix> when it is declared, and after the structure is declared.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixmultiplicationexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Matrix Multiply (System.Windows.Media.Matrix trans1, System.Windows.Media.Matrix trans2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Matrix Multiply(valuetype System.Windows.Media.Matrix trans1, valuetype System.Windows.Media.Matrix trans2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (trans1 As Matrix, trans2 As Matrix) As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Matrix Multiply(System::Windows::Media::Matrix trans1, System::Windows::Media::Matrix trans2);" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Windows.Media.Matrix * System.Windows.Media.Matrix -&gt; System.Windows.Media.Matrix" Usage="System.Windows.Media.Matrix.Multiply (trans1, trans2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trans1" Type="System.Windows.Media.Matrix" />
        <Parameter Name="trans2" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="trans1"><span data-ttu-id="81181-243">要相乘的第一个 <see cref="T:System.Windows.Media.Matrix" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="81181-243">The first <see cref="T:System.Windows.Media.Matrix" /> structure to multiply.</span></span></param>
        <param name="trans2"><span data-ttu-id="81181-244">要相乘的第二个 <see cref="T:System.Windows.Media.Matrix" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="81181-244">The second <see cref="T:System.Windows.Media.Matrix" /> structure to multiply.</span></span></param>
        <summary><span data-ttu-id="81181-245">让 <see cref="T:System.Windows.Media.Matrix" /> 结构乘以另一个 <see cref="T:System.Windows.Media.Matrix" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="81181-245">Multiplies a <see cref="T:System.Windows.Media.Matrix" /> structure by another <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <returns><span data-ttu-id="81181-246"><paramref name="trans1" /> 与 <paramref name="trans2" /> 相乘的结果。</span><span class="sxs-lookup"><span data-stu-id="81181-246">The result of multiplying <paramref name="trans1" /> by <paramref name="trans2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81181-247">矩阵相乘不是可交换性。</span><span class="sxs-lookup"><span data-stu-id="81181-247">Matrix multiplication is not commutative.</span></span> <span data-ttu-id="81181-248">相乘`trans1`由`trans2`不是相同相乘`trans2`通过`trans1`。</span><span class="sxs-lookup"><span data-stu-id="81181-248">Multiplying `trans1` by `trans2` is not the same as multiplying `trans2` by `trans1`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81181-249">下面的示例演示如何将两个相乘<xref:System.Windows.Media.Matrix>结构。</span><span class="sxs-lookup"><span data-stu-id="81181-249">The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixmultiplicationexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="OffsetX">
      <MemberSignature Language="C#" Value="public double OffsetX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 OffsetX" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.OffsetX" />
      <MemberSignature Language="VB.NET" Value="Public Property OffsetX As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double OffsetX { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.OffsetX : double with get, set" Usage="System.Windows.Media.Matrix.OffsetX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81181-250">获取或设置此 <see cref="T:System.Windows.Media.Matrix" /> 结构中第三行与第一列相交处的值。</span><span class="sxs-lookup"><span data-stu-id="81181-250">Gets or sets the value of the third row and first column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <value><span data-ttu-id="81181-251">此 <see cref="T:System.Windows.Media.Matrix" /> 结构中第三行与第一列相交处的值。</span><span class="sxs-lookup"><span data-stu-id="81181-251">The value of the third row and first column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span> <span data-ttu-id="81181-252">默认值为 0。</span><span class="sxs-lookup"><span data-stu-id="81181-252">The default value is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81181-253"><xref:System.Windows.Media.Matrix.OffsetX%2A>属性之所以如此命名，因为它指定沿 x 轴的坐标空间的平移量。</span><span class="sxs-lookup"><span data-stu-id="81181-253">The <xref:System.Windows.Media.Matrix.OffsetX%2A> property is so named because it specifies the amount to translate the coordinate space along the x-axis.</span></span>  
  
 <span data-ttu-id="81181-254">下表显示的布局<xref:System.Windows.Media.Matrix>。</span><span class="sxs-lookup"><span data-stu-id="81181-254">The following table shows the layout of a <xref:System.Windows.Media.Matrix>.</span></span>  
  
||||  
|-|-|-|  
|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|<span data-ttu-id="81181-255">0</span><span class="sxs-lookup"><span data-stu-id="81181-255">0</span></span>|  
|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|<span data-ttu-id="81181-256">0</span><span class="sxs-lookup"><span data-stu-id="81181-256">0</span></span>|  
|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|<span data-ttu-id="81181-257">1</span><span class="sxs-lookup"><span data-stu-id="81181-257">1</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetY">
      <MemberSignature Language="C#" Value="public double OffsetY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 OffsetY" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.OffsetY" />
      <MemberSignature Language="VB.NET" Value="Public Property OffsetY As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double OffsetY { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.OffsetY : double with get, set" Usage="System.Windows.Media.Matrix.OffsetY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81181-258">获取或设置此 <see cref="T:System.Windows.Media.Matrix" /> 结构中第三行与第二列相交处的值。</span><span class="sxs-lookup"><span data-stu-id="81181-258">Gets or sets the value of the third row and second column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <value><span data-ttu-id="81181-259">此 <see cref="T:System.Windows.Media.Matrix" /> 结构中第三行与第二列相交处的值。</span><span class="sxs-lookup"><span data-stu-id="81181-259">The value of the third row and second column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span> <span data-ttu-id="81181-260">默认值为 0。</span><span class="sxs-lookup"><span data-stu-id="81181-260">The default value is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81181-261"><xref:System.Windows.Media.Matrix.OffsetY%2A>属性之所以如此命名，因为它指定沿 y 轴的坐标空间的平移量。</span><span class="sxs-lookup"><span data-stu-id="81181-261">The <xref:System.Windows.Media.Matrix.OffsetY%2A> property is so named because it specifies the amount to translate the coordinate space along the y-axis.</span></span>  
  
 <span data-ttu-id="81181-262">下表显示的布局<xref:System.Windows.Media.Matrix>。</span><span class="sxs-lookup"><span data-stu-id="81181-262">The following table shows the layout of a <xref:System.Windows.Media.Matrix>.</span></span>  
  
||||  
|-|-|-|  
|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|<span data-ttu-id="81181-263">0</span><span class="sxs-lookup"><span data-stu-id="81181-263">0</span></span>|  
|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|<span data-ttu-id="81181-264">0</span><span class="sxs-lookup"><span data-stu-id="81181-264">0</span></span>|  
|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|<span data-ttu-id="81181-265">1</span><span class="sxs-lookup"><span data-stu-id="81181-265">1</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Media.Matrix matrix1, System.Windows.Media.Matrix matrix2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Media.Matrix matrix1, valuetype System.Windows.Media.Matrix matrix2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (matrix1 As Matrix, matrix2 As Matrix) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Media::Matrix matrix1, System::Windows::Media::Matrix matrix2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Media.Matrix * System.Windows.Media.Matrix -&gt; bool" Usage="matrix1 = matrix2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix1" Type="System.Windows.Media.Matrix" />
        <Parameter Name="matrix2" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix1"><span data-ttu-id="81181-266">要比较的第一个 <see cref="T:System.Windows.Media.Matrix" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="81181-266">The first <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</span></span></param>
        <param name="matrix2"><span data-ttu-id="81181-267">要比较的第二个 <see cref="T:System.Windows.Media.Matrix" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="81181-267">The second <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</span></span></param>
        <summary><span data-ttu-id="81181-268">确定两个指定的 <see cref="T:System.Windows.Media.Matrix" /> 结构是否相同。</span><span class="sxs-lookup"><span data-stu-id="81181-268">Determines whether the two specified <see cref="T:System.Windows.Media.Matrix" /> structures are identical.</span></span></summary>
        <returns><span data-ttu-id="81181-269">如果 <paramref name="matrix1" /> 和 <paramref name="matrix2" /> 相同，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="81181-269"><see langword="true" /> if <paramref name="matrix1" /> and <paramref name="matrix2" /> are identical; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="81181-270">一个<xref:System.Windows.Media.Matrix>将其值存储为双精度型值。</span><span class="sxs-lookup"><span data-stu-id="81181-270">A <xref:System.Windows.Media.Matrix> stores its values as doubles.</span></span> <span data-ttu-id="81181-271">因为的值<xref:System.Double>它，比较两个执行算术运算时可能会丢失精度<xref:System.Double>逻辑上相等的结构可能会失败。</span><span class="sxs-lookup"><span data-stu-id="81181-271">Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81181-272">下面的示例演示如何检查两个<xref:System.Windows.Media.Matrix>结构是否相等。</span><span class="sxs-lookup"><span data-stu-id="81181-272">The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixEqualityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixequalityexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Media.Matrix.Equals" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Media.Matrix matrix1, System.Windows.Media.Matrix matrix2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Media.Matrix matrix1, valuetype System.Windows.Media.Matrix matrix2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.op_Inequality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (matrix1 As Matrix, matrix2 As Matrix) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Media::Matrix matrix1, System::Windows::Media::Matrix matrix2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Media.Matrix * System.Windows.Media.Matrix -&gt; bool" Usage="System.Windows.Media.Matrix.op_Inequality (matrix1, matrix2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix1" Type="System.Windows.Media.Matrix" />
        <Parameter Name="matrix2" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix1"><span data-ttu-id="81181-273">要比较的第一个 <see cref="T:System.Windows.Media.Matrix" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="81181-273">The first <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</span></span></param>
        <param name="matrix2"><span data-ttu-id="81181-274">要比较的第二个 <see cref="T:System.Windows.Media.Matrix" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="81181-274">The second <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</span></span></param>
        <summary><span data-ttu-id="81181-275">确定两个指定的 <see cref="T:System.Windows.Media.Matrix" /> 结构是否不同。</span><span class="sxs-lookup"><span data-stu-id="81181-275">Determines whether the two specified <see cref="T:System.Windows.Media.Matrix" /> structures are not identical.</span></span></summary>
        <returns><span data-ttu-id="81181-276">如果 <paramref name="matrix1" /> 和 <paramref name="matrix2" /> 不同，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="81181-276"><see langword="true" /> if <paramref name="matrix1" /> and <paramref name="matrix2" /> are not identical; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="81181-277">一个<xref:System.Windows.Media.Matrix>将其值存储为双精度型值。</span><span class="sxs-lookup"><span data-stu-id="81181-277">A <xref:System.Windows.Media.Matrix> stores its values as doubles.</span></span> <span data-ttu-id="81181-278">因为的值<xref:System.Double>它，比较两个执行算术运算时可能会丢失精度<xref:System.Double>逻辑上相等的结构可能会失败。</span><span class="sxs-lookup"><span data-stu-id="81181-278">Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81181-279">下面的示例演示如何检查两个<xref:System.Windows.Media.Matrix>结构是否相等。</span><span class="sxs-lookup"><span data-stu-id="81181-279">The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixEqualityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixequalityexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Matrix operator * (System.Windows.Media.Matrix trans1, System.Windows.Media.Matrix trans2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Media.Matrix op_Multiply(valuetype System.Windows.Media.Matrix trans1, valuetype System.Windows.Media.Matrix trans2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (trans1 As Matrix, trans2 As Matrix) As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Matrix operator *(System::Windows::Media::Matrix trans1, System::Windows::Media::Matrix trans2);" />
      <MemberSignature Language="F#" Value="static member ( * ) : System.Windows.Media.Matrix * System.Windows.Media.Matrix -&gt; System.Windows.Media.Matrix" Usage="trans1 * trans2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trans1" Type="System.Windows.Media.Matrix" />
        <Parameter Name="trans2" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="trans1"><span data-ttu-id="81181-280">要相乘的第一个 <see cref="T:System.Windows.Media.Matrix" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="81181-280">The first <see cref="T:System.Windows.Media.Matrix" /> structure to multiply.</span></span></param>
        <param name="trans2"><span data-ttu-id="81181-281">要相乘的第二个 <see cref="T:System.Windows.Media.Matrix" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="81181-281">The second <see cref="T:System.Windows.Media.Matrix" /> structure to multiply.</span></span></param>
        <summary><span data-ttu-id="81181-282">让 <see cref="T:System.Windows.Media.Matrix" /> 结构乘以另一个 <see cref="T:System.Windows.Media.Matrix" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="81181-282">Multiplies a <see cref="T:System.Windows.Media.Matrix" /> structure by another <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <returns><span data-ttu-id="81181-283"><paramref name="trans1" /> 与 <paramref name="trans2" /> 相乘的结果。</span><span class="sxs-lookup"><span data-stu-id="81181-283">The result of multiplying <paramref name="trans1" /> by <paramref name="trans2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81181-284">矩阵相乘不是可交换性。</span><span class="sxs-lookup"><span data-stu-id="81181-284">Matrix multiplication is not commutative.</span></span> <span data-ttu-id="81181-285">相乘`trans1`由`trans2`不是相同相乘`trans2`通过`trans1`。</span><span class="sxs-lookup"><span data-stu-id="81181-285">Multiplying `trans1` by `trans2` is not the same as multiplying `trans2` by `trans1`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81181-286">下面的示例演示如何将两个相乘<xref:System.Windows.Media.Matrix>结构。</span><span class="sxs-lookup"><span data-stu-id="81181-286">The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixmultiplicationexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Matrix Parse (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Matrix Parse(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (source As String) As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Matrix Parse(System::String ^ source);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; System.Windows.Media.Matrix" Usage="System.Windows.Media.Matrix.Parse source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="81181-287">矩阵的 <see cref="T:System.String" /> 表示形式。</span><span class="sxs-lookup"><span data-stu-id="81181-287">The <see cref="T:System.String" /> representation of the matrix.</span></span></param>
        <summary><span data-ttu-id="81181-288">将矩阵的 <see cref="T:System.String" /> 表示形式转换为等效的 <see cref="T:System.Windows.Media.Matrix" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="81181-288">Converts a <see cref="T:System.String" /> representation of a matrix into the equivalent <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <returns><span data-ttu-id="81181-289">等效的 <see cref="T:System.Windows.Media.Matrix" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="81181-289">The equivalent <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="81181-290">下面的示例演示如何将转换到矩阵的字符串表示形式<xref:System.Windows.Media.Matrix>结构。</span><span class="sxs-lookup"><span data-stu-id="81181-290">The following example shows how to convert a string representation of a matrix into a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixParseExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixparseexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepend">
      <MemberSignature Language="C#" Value="public void Prepend (System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Prepend(valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Prepend(System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="member this.Prepend : System.Windows.Media.Matrix -&gt; unit" Usage="matrix.Prepend matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="81181-291">要添加到此 <see cref="T:System.Windows.Media.Matrix" /> 结构之前的 <see cref="T:System.Windows.Media.Matrix" /> 结构。</span><span class="sxs-lookup"><span data-stu-id="81181-291">The <see cref="T:System.Windows.Media.Matrix" /> structure to prepend to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></param>
        <summary><span data-ttu-id="81181-292">将指定的 <see cref="T:System.Windows.Media.Matrix" /> 结构添加到此 <see cref="T:System.Windows.Media.Matrix" /> 结构之前。</span><span class="sxs-lookup"><span data-stu-id="81181-292">Prepends the specified <see cref="T:System.Windows.Media.Matrix" /> structure onto this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81181-293">此操作是与相乘参数相同`matrix`由此<xref:System.Windows.Media.Matrix>结构。</span><span class="sxs-lookup"><span data-stu-id="81181-293">This operation is the same as multiplying the parameter `matrix` by this <xref:System.Windows.Media.Matrix> structure.</span></span> <span data-ttu-id="81181-294">矩阵相乘不是可交换性，但是，因此此操作不是与让这<xref:System.Windows.Media.Matrix>参数的结构`matrix`; 即`matrix`\* 这是不与此相同 \* `matrix`。</span><span class="sxs-lookup"><span data-stu-id="81181-294">Matrix multiplication is not commutative, however, so this operation is not the same as multiplying this <xref:System.Windows.Media.Matrix> structure by the parameter `matrix`; that is, `matrix` \* this is not the same as this \* `matrix`.</span></span>  
  
 <span data-ttu-id="81181-295">在复合转换中，各个转换的顺序非常重要。</span><span class="sxs-lookup"><span data-stu-id="81181-295">In a composite transformation, the order of individual transformations is important.</span></span> <span data-ttu-id="81181-296">例如，如果首先旋转，然后扩展，然后转换，您获得不同的结果不是如果首先将旋转，则缩放。</span><span class="sxs-lookup"><span data-stu-id="81181-296">For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</span></span> <span data-ttu-id="81181-297">顺序很重要的原因之一是，这样针对的坐标系的原点的像旋转和缩放的变换。</span><span class="sxs-lookup"><span data-stu-id="81181-297">One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</span></span> <span data-ttu-id="81181-298">缩放以原点为中心的对象生成不同的结果已离开源的对象与缩放。</span><span class="sxs-lookup"><span data-stu-id="81181-298">Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</span></span> <span data-ttu-id="81181-299">同样，旋转以原点为中心的对象生成不同的结果比旋转对象已移动背离原点。</span><span class="sxs-lookup"><span data-stu-id="81181-299">Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81181-300">下面的示例演示如何在前面添加<xref:System.Windows.Media.Matrix>到另一种<xref:System.Windows.Media.Matrix>。</span><span class="sxs-lookup"><span data-stu-id="81181-300">The following example shows how to prepend a <xref:System.Windows.Media.Matrix> onto another <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixPrependExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixprependexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public void Rotate (double angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rotate(float64 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Rotate(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rotate (angle As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rotate(double angle);" />
      <MemberSignature Language="F#" Value="member this.Rotate : double -&gt; unit" Usage="matrix.Rotate angle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="81181-301">旋转角度。</span><span class="sxs-lookup"><span data-stu-id="81181-301">The angle of rotation.</span></span></param>
        <summary><span data-ttu-id="81181-302">以此 <see cref="T:System.Windows.Media.Matrix" /> 结构的原点为中心旋转指定的角度。</span><span class="sxs-lookup"><span data-stu-id="81181-302">Applies a rotation of the specified angle about the origin of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="81181-303">下面的示例演示如何旋转<xref:System.Windows.Media.Matrix>。</span><span class="sxs-lookup"><span data-stu-id="81181-303">The following example shows how to rotate a <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixRotateExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixrotateexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.RotatePrepend(System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="RotateAt">
      <MemberSignature Language="C#" Value="public void RotateAt (double angle, double centerX, double centerY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateAt(float64 angle, float64 centerX, float64 centerY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateAt (angle As Double, centerX As Double, centerY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateAt(double angle, double centerX, double centerY);" />
      <MemberSignature Language="F#" Value="member this.RotateAt : double * double * double -&gt; unit" Usage="matrix.RotateAt (angle, centerX, centerY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Double" />
        <Parameter Name="centerX" Type="System.Double" />
        <Parameter Name="centerY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="81181-304">此矩阵要旋转的角度（单位为度）。</span><span class="sxs-lookup"><span data-stu-id="81181-304">The angle, in degrees, by which to rotate this matrix.</span></span></param>
        <param name="centerX"><span data-ttu-id="81181-305">此矩阵要围绕其旋转的点的 x 坐标。</span><span class="sxs-lookup"><span data-stu-id="81181-305">The x-coordinate of the point about which to rotate this matrix.</span></span></param>
        <param name="centerY"><span data-ttu-id="81181-306">此矩阵要围绕其旋转的点的 y 坐标。</span><span class="sxs-lookup"><span data-stu-id="81181-306">The y-coordinate of the point about which to rotate this matrix.</span></span></param>
        <summary><span data-ttu-id="81181-307">绕指定的点旋转此矩阵。</span><span class="sxs-lookup"><span data-stu-id="81181-307">Rotates this matrix about the specified point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="81181-308">下面的示例演示如何旋转<xref:System.Windows.Media.Matrix>围绕指定点。</span><span class="sxs-lookup"><span data-stu-id="81181-308">The following example shows how to rotate a <xref:System.Windows.Media.Matrix> about a specified point.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixRotateAboutPointExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixrotateaboutpointexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateAtPrepend">
      <MemberSignature Language="C#" Value="public void RotateAtPrepend (double angle, double centerX, double centerY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateAtPrepend(float64 angle, float64 centerX, float64 centerY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateAtPrepend (angle As Double, centerX As Double, centerY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateAtPrepend(double angle, double centerX, double centerY);" />
      <MemberSignature Language="F#" Value="member this.RotateAtPrepend : double * double * double -&gt; unit" Usage="matrix.RotateAtPrepend (angle, centerX, centerY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Double" />
        <Parameter Name="centerX" Type="System.Double" />
        <Parameter Name="centerY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="81181-309">旋转角度（单位为度）。</span><span class="sxs-lookup"><span data-stu-id="81181-309">The rotation angle, in degrees.</span></span></param>
        <param name="centerX"><span data-ttu-id="81181-310">旋转中心的 x 坐标。</span><span class="sxs-lookup"><span data-stu-id="81181-310">The x-coordinate of the rotation center.</span></span></param>
        <param name="centerY"><span data-ttu-id="81181-311">旋转中心的 y 坐标。</span><span class="sxs-lookup"><span data-stu-id="81181-311">The y-coordinate of the rotation center.</span></span></param>
        <summary><span data-ttu-id="81181-312">在此 <see cref="T:System.Windows.Media.Matrix" /> 结构前面添加围绕指定点的指定角度的旋转。</span><span class="sxs-lookup"><span data-stu-id="81181-312">Prepends a rotation of the specified angle at the specified point to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81181-313">在复合转换中，各个转换的顺序非常重要。</span><span class="sxs-lookup"><span data-stu-id="81181-313">In a composite transformation, the order of individual transformations is important.</span></span> <span data-ttu-id="81181-314">例如，如果首先旋转，然后扩展，然后转换，您获得不同的结果不是如果首先将旋转，则缩放。</span><span class="sxs-lookup"><span data-stu-id="81181-314">For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</span></span> <span data-ttu-id="81181-315">顺序很重要的原因之一是，这样针对的坐标系的原点的像旋转和缩放的变换。</span><span class="sxs-lookup"><span data-stu-id="81181-315">One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</span></span> <span data-ttu-id="81181-316">缩放以原点为中心的对象生成不同的结果已离开源的对象与缩放。</span><span class="sxs-lookup"><span data-stu-id="81181-316">Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</span></span> <span data-ttu-id="81181-317">同样，旋转以原点为中心的对象生成不同的结果比旋转对象已移动背离原点。</span><span class="sxs-lookup"><span data-stu-id="81181-317">Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81181-318">下面的示例演示如何在前面添加旋转到<xref:System.Windows.Media.Matrix>。</span><span class="sxs-lookup"><span data-stu-id="81181-318">The following example shows how to prepend a rotation to a <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixPrependRotateExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixprependrotateexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotatePrepend">
      <MemberSignature Language="C#" Value="public void RotatePrepend (double angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotatePrepend(float64 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.RotatePrepend(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotatePrepend (angle As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotatePrepend(double angle);" />
      <MemberSignature Language="F#" Value="member this.RotatePrepend : double -&gt; unit" Usage="matrix.RotatePrepend angle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="81181-319">要在前面添加的旋转的角度。</span><span class="sxs-lookup"><span data-stu-id="81181-319">The angle of rotation to prepend.</span></span></param>
        <summary><span data-ttu-id="81181-320">在此 <see cref="T:System.Windows.Media.Matrix" /> 结构前面添加指定角度的旋转。</span><span class="sxs-lookup"><span data-stu-id="81181-320">Prepends a rotation of the specified angle to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81181-321">在复合转换中，各个转换的顺序非常重要。</span><span class="sxs-lookup"><span data-stu-id="81181-321">In a composite transformation, the order of individual transformations is important.</span></span> <span data-ttu-id="81181-322">例如，如果首先旋转，然后扩展，然后转换，您获得不同的结果不是如果首先将旋转，则缩放。</span><span class="sxs-lookup"><span data-stu-id="81181-322">For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</span></span> <span data-ttu-id="81181-323">顺序很重要的原因之一是，这样针对的坐标系的原点的像旋转和缩放的变换。</span><span class="sxs-lookup"><span data-stu-id="81181-323">One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</span></span> <span data-ttu-id="81181-324">缩放以原点为中心的对象生成不同的结果已离开源的对象与缩放。</span><span class="sxs-lookup"><span data-stu-id="81181-324">Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</span></span> <span data-ttu-id="81181-325">同样，旋转以原点为中心的对象生成不同的结果比旋转对象已移动背离原点。</span><span class="sxs-lookup"><span data-stu-id="81181-325">Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81181-326">下面的示例演示如何在前面添加旋转到<xref:System.Windows.Media.Matrix>。</span><span class="sxs-lookup"><span data-stu-id="81181-326">The following example shows how to prepend a rotation to a <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixPrependRotateExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixprependrotateexamples_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.Rotate(System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (double scaleX, double scaleY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float64 scaleX, float64 scaleY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Scale(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (scaleX As Double, scaleY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(double scaleX, double scaleY);" />
      <MemberSignature Language="F#" Value="member this.Scale : double * double -&gt; unit" Usage="matrix.Scale (scaleX, scaleY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Double" />
        <Parameter Name="scaleY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scaleX"><span data-ttu-id="81181-327">此 <see cref="T:System.Windows.Media.Matrix" /> 要沿 x 轴缩放的值。</span><span class="sxs-lookup"><span data-stu-id="81181-327">The value by which to scale this <see cref="T:System.Windows.Media.Matrix" /> along the x-axis.</span></span></param>
        <param name="scaleY"><span data-ttu-id="81181-328">此 <see cref="T:System.Windows.Media.Matrix" /> 要沿 y 轴缩放的值。</span><span class="sxs-lookup"><span data-stu-id="81181-328">The value by which to scale this <see cref="T:System.Windows.Media.Matrix" /> along the y-axis.</span></span></param>
        <summary><span data-ttu-id="81181-329">在此 <see cref="T:System.Windows.Media.Matrix" /> 结构后面追加指定的缩放向量。</span><span class="sxs-lookup"><span data-stu-id="81181-329">Appends the specified scale vector to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="81181-330">下面的示例演示如何缩放<xref:System.Windows.Media.Matrix>结构。</span><span class="sxs-lookup"><span data-stu-id="81181-330">The following example shows how to scale a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixScaleExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixscaleexamples_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.ScalePrepend(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="ScaleAt">
      <MemberSignature Language="C#" Value="public void ScaleAt (double scaleX, double scaleY, double centerX, double centerY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleAt(float64 scaleX, float64 scaleY, float64 centerX, float64 centerY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleAt (scaleX As Double, scaleY As Double, centerX As Double, centerY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleAt(double scaleX, double scaleY, double centerX, double centerY);" />
      <MemberSignature Language="F#" Value="member this.ScaleAt : double * double * double * double -&gt; unit" Usage="matrix.ScaleAt (scaleX, scaleY, centerX, centerY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Double" />
        <Parameter Name="scaleY" Type="System.Double" />
        <Parameter Name="centerX" Type="System.Double" />
        <Parameter Name="centerY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scaleX"><span data-ttu-id="81181-331">此 <see cref="T:System.Windows.Media.Matrix" /> 沿 x 轴的缩放量。</span><span class="sxs-lookup"><span data-stu-id="81181-331">The amount by which to scale this <see cref="T:System.Windows.Media.Matrix" /> along the x-axis.</span></span></param>
        <param name="scaleY"><span data-ttu-id="81181-332">此 <see cref="T:System.Windows.Media.Matrix" /> 沿 y 轴的缩放量。</span><span class="sxs-lookup"><span data-stu-id="81181-332">The amount by which to scale this <see cref="T:System.Windows.Media.Matrix" /> along the y-axis.</span></span></param>
        <param name="centerX"><span data-ttu-id="81181-333">缩放操作中心点的 x 坐标。</span><span class="sxs-lookup"><span data-stu-id="81181-333">The x-coordinate of the scale operation's center point.</span></span></param>
        <param name="centerY"><span data-ttu-id="81181-334">缩放操作中心点的 y 坐标。</span><span class="sxs-lookup"><span data-stu-id="81181-334">The y-coordinate of the scale operation's center point.</span></span></param>
        <summary><span data-ttu-id="81181-335">围绕指定的点按指定的量缩放此 <see cref="T:System.Windows.Media.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="81181-335">Scales this <see cref="T:System.Windows.Media.Matrix" /> by the specified amount about the specified point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="81181-336">下面的示例演示如何缩放<xref:System.Windows.Media.Matrix>结构。</span><span class="sxs-lookup"><span data-stu-id="81181-336">The following example shows how to scale a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixScaleExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixscaleexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleAtPrepend">
      <MemberSignature Language="C#" Value="public void ScaleAtPrepend (double scaleX, double scaleY, double centerX, double centerY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleAtPrepend(float64 scaleX, float64 scaleY, float64 centerX, float64 centerY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleAtPrepend (scaleX As Double, scaleY As Double, centerX As Double, centerY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleAtPrepend(double scaleX, double scaleY, double centerX, double centerY);" />
      <MemberSignature Language="F#" Value="member this.ScaleAtPrepend : double * double * double * double -&gt; unit" Usage="matrix.ScaleAtPrepend (scaleX, scaleY, centerX, centerY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Double" />
        <Parameter Name="scaleY" Type="System.Double" />
        <Parameter Name="centerX" Type="System.Double" />
        <Parameter Name="centerY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scaleX"><span data-ttu-id="81181-337">x 轴的缩放比例。</span><span class="sxs-lookup"><span data-stu-id="81181-337">The x-axis scale factor.</span></span></param>
        <param name="scaleY"><span data-ttu-id="81181-338">y 轴的缩放比例。</span><span class="sxs-lookup"><span data-stu-id="81181-338">The y-axis scale factor.</span></span></param>
        <param name="centerX"><span data-ttu-id="81181-339">执行缩放操作所围绕的点的 x 坐标。</span><span class="sxs-lookup"><span data-stu-id="81181-339">The x-coordinate of the point about which the scale operation is performed.</span></span></param>
        <param name="centerY"><span data-ttu-id="81181-340">执行缩放操作所围绕的点的 y 坐标。</span><span class="sxs-lookup"><span data-stu-id="81181-340">The y-coordinate of the point about which the scale operation is performed.</span></span></param>
        <summary><span data-ttu-id="81181-341">在此 <see cref="T:System.Windows.Media.Matrix" /> 前面添加围绕指定点的指定缩放。</span><span class="sxs-lookup"><span data-stu-id="81181-341">Prepends the specified scale about the specified point of this <see cref="T:System.Windows.Media.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81181-342">在复合转换中，各个转换的顺序非常重要。</span><span class="sxs-lookup"><span data-stu-id="81181-342">In a composite transformation, the order of individual transformations is important.</span></span> <span data-ttu-id="81181-343">例如，如果首先旋转，然后扩展，然后转换，您获得不同的结果不是如果首先将旋转，则缩放。</span><span class="sxs-lookup"><span data-stu-id="81181-343">For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</span></span> <span data-ttu-id="81181-344">顺序很重要的原因之一是，这样针对的坐标系的原点的像旋转和缩放的变换。</span><span class="sxs-lookup"><span data-stu-id="81181-344">One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</span></span> <span data-ttu-id="81181-345">缩放以原点为中心的对象生成不同的结果已离开源的对象与缩放。</span><span class="sxs-lookup"><span data-stu-id="81181-345">Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</span></span> <span data-ttu-id="81181-346">同样，旋转以原点为中心的对象生成不同的结果比旋转对象已移动背离原点。</span><span class="sxs-lookup"><span data-stu-id="81181-346">Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81181-347">下面的示例演示如何在前面添加到<xref:System.Windows.Media.Matrix>。</span><span class="sxs-lookup"><span data-stu-id="81181-347">The following example shows how to prepend a scale to a <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixPrependScaleExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixprependscaleexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScalePrepend">
      <MemberSignature Language="C#" Value="public void ScalePrepend (double scaleX, double scaleY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScalePrepend(float64 scaleX, float64 scaleY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.ScalePrepend(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScalePrepend (scaleX As Double, scaleY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScalePrepend(double scaleX, double scaleY);" />
      <MemberSignature Language="F#" Value="member this.ScalePrepend : double * double -&gt; unit" Usage="matrix.ScalePrepend (scaleX, scaleY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Double" />
        <Parameter Name="scaleY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scaleX"><span data-ttu-id="81181-348">此 <see cref="T:System.Windows.Media.Matrix" /> 结构要沿 x 轴缩放的值。</span><span class="sxs-lookup"><span data-stu-id="81181-348">The value by which to scale this <see cref="T:System.Windows.Media.Matrix" /> structure along the x-axis.</span></span></param>
        <param name="scaleY"><span data-ttu-id="81181-349">此 <see cref="T:System.Windows.Media.Matrix" /> 结构要沿 y 轴缩放的值。</span><span class="sxs-lookup"><span data-stu-id="81181-349">The value by which to scale this <see cref="T:System.Windows.Media.Matrix" /> structure along the y-axis.</span></span></param>
        <summary><span data-ttu-id="81181-350">在此 <see cref="T:System.Windows.Media.Matrix" /> 结构前面添加指定的缩放向量。</span><span class="sxs-lookup"><span data-stu-id="81181-350">Prepends the specified scale vector to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81181-351">在复合转换中，各个转换的顺序非常重要。</span><span class="sxs-lookup"><span data-stu-id="81181-351">In a composite transformation, the order of individual transformations is important.</span></span> <span data-ttu-id="81181-352">例如，如果首先旋转，然后扩展，然后转换，您获得不同的结果不是如果首先将旋转，则缩放。</span><span class="sxs-lookup"><span data-stu-id="81181-352">For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</span></span> <span data-ttu-id="81181-353">顺序很重要的原因之一是，这样针对的坐标系的原点的像旋转和缩放的变换。</span><span class="sxs-lookup"><span data-stu-id="81181-353">One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</span></span> <span data-ttu-id="81181-354">缩放以原点为中心的对象生成不同的结果已离开源的对象与缩放。</span><span class="sxs-lookup"><span data-stu-id="81181-354">Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</span></span> <span data-ttu-id="81181-355">同样，旋转以原点为中心的对象生成不同的结果比旋转对象已移动背离原点。</span><span class="sxs-lookup"><span data-stu-id="81181-355">Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81181-356">下面的示例演示如何在前面添加到<xref:System.Windows.Media.Matrix>结构。</span><span class="sxs-lookup"><span data-stu-id="81181-356">The following example shows how to prepend a scale to a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixPrependScaleExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixprependscaleexamples_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.Scale(System.Double,System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="SetIdentity">
      <MemberSignature Language="C#" Value="public void SetIdentity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetIdentity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.SetIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetIdentity ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetIdentity();" />
      <MemberSignature Language="F#" Value="member this.SetIdentity : unit -&gt; unit" Usage="matrix.SetIdentity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="81181-357">将此 <see cref="T:System.Windows.Media.Matrix" /> 结构更改为恒等矩阵。</span><span class="sxs-lookup"><span data-stu-id="81181-357">Changes this <see cref="T:System.Windows.Media.Matrix" /> structure into an identity matrix.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81181-358">某标识矩阵在系数 [1，1]，[2，2] [3，3] 的值为 1 和 0 在其余系数的值。</span><span class="sxs-lookup"><span data-stu-id="81181-358">An identity matrix has a value of 1 in coefficients [1,1],[2,2],[3,3] and a value of 0 in the rest of the coefficients.</span></span> <span data-ttu-id="81181-359">这与设置相关联<xref:System.Windows.Media.Matrix.M11%2A>并<xref:System.Windows.Media.Matrix.M22%2A>为 1 并<xref:System.Windows.Media.Matrix.M12%2A>， <xref:System.Windows.Media.Matrix.M21%2A>， <xref:System.Windows.Media.Matrix.OffsetX%2A>，并<xref:System.Windows.Media.Matrix.OffsetY%2A>为 0。</span><span class="sxs-lookup"><span data-stu-id="81181-359">This correlates to setting <xref:System.Windows.Media.Matrix.M11%2A> and <xref:System.Windows.Media.Matrix.M22%2A> to 1 and <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, and <xref:System.Windows.Media.Matrix.OffsetY%2A> to 0.</span></span> <span data-ttu-id="81181-360">在仿射矩阵，这是实现的[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]用于<xref:System.Windows.Media.Matrix>结构，系数 [3，1]，[3，2] 和 [3.3] 暗指始终分别具有 0,0,1 的值。</span><span class="sxs-lookup"><span data-stu-id="81181-360">In an affine matrix, which is the implementation that [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] uses for the <xref:System.Windows.Media.Matrix> structure, coefficients [3,1],[3,2],[3.3] are implied to always have the values 0,0,1 respectively.</span></span>  
  
||||  
|-|-|-|  
|<span data-ttu-id="81181-361">1</span><span class="sxs-lookup"><span data-stu-id="81181-361">1</span></span>|<span data-ttu-id="81181-362">0</span><span class="sxs-lookup"><span data-stu-id="81181-362">0</span></span>|<span data-ttu-id="81181-363">0</span><span class="sxs-lookup"><span data-stu-id="81181-363">0</span></span>|  
|<span data-ttu-id="81181-364">0</span><span class="sxs-lookup"><span data-stu-id="81181-364">0</span></span>|<span data-ttu-id="81181-365">1</span><span class="sxs-lookup"><span data-stu-id="81181-365">1</span></span>|<span data-ttu-id="81181-366">0</span><span class="sxs-lookup"><span data-stu-id="81181-366">0</span></span>|  
|<span data-ttu-id="81181-367">0</span><span class="sxs-lookup"><span data-stu-id="81181-367">0</span></span>|<span data-ttu-id="81181-368">0</span><span class="sxs-lookup"><span data-stu-id="81181-368">0</span></span>|<span data-ttu-id="81181-369">1</span><span class="sxs-lookup"><span data-stu-id="81181-369">1</span></span>|  
  
 <span data-ttu-id="81181-370">恒等矩阵，对于<xref:System.Windows.Media.Matrix.ToString%2A>方法将返回字符串"标识"，而不是这些系数的<xref:System.Windows.Media.Matrix>。</span><span class="sxs-lookup"><span data-stu-id="81181-370">For an identity matrix, the <xref:System.Windows.Media.Matrix.ToString%2A> method returns the string "Identity", instead of the coefficients of the <xref:System.Windows.Media.Matrix>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81181-371">下面的示例演示如何将<xref:System.Windows.Media.Matrix>为恒等矩阵的结构。</span><span class="sxs-lookup"><span data-stu-id="81181-371">The following example shows how to turn a <xref:System.Windows.Media.Matrix> structure into an identity matrix.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixIdentityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixidentityexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Matrix.Identity" />
        <altmember cref="P:System.Windows.Media.Matrix.IsIdentity" />
      </Docs>
    </Member>
    <Member MemberName="Skew">
      <MemberSignature Language="C#" Value="public void Skew (double skewX, double skewY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Skew(float64 skewX, float64 skewY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Skew(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Skew (skewX As Double, skewY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Skew(double skewX, double skewY);" />
      <MemberSignature Language="F#" Value="member this.Skew : double * double -&gt; unit" Usage="matrix.Skew (skewX, skewY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skewX" Type="System.Double" />
        <Parameter Name="skewY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="skewX"><span data-ttu-id="81181-372">用于扭曲此 <see cref="T:System.Windows.Media.Matrix" /> 的 x 维角度。</span><span class="sxs-lookup"><span data-stu-id="81181-372">The angle in the x dimension by which to skew this <see cref="T:System.Windows.Media.Matrix" />.</span></span></param>
        <param name="skewY"><span data-ttu-id="81181-373">用于扭曲此 <see cref="T:System.Windows.Media.Matrix" /> 的 y 维角度。</span><span class="sxs-lookup"><span data-stu-id="81181-373">The angle in the y dimension by which to skew this <see cref="T:System.Windows.Media.Matrix" />.</span></span></param>
        <summary><span data-ttu-id="81181-374">在此 <see cref="T:System.Windows.Media.Matrix" /> 结构后面追加 x 和 y 维中指定角度的扭曲。</span><span class="sxs-lookup"><span data-stu-id="81181-374">Appends a skew of the specified degrees in the x and y dimensions to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="81181-375">此示例演示如何以倾斜<xref:System.Windows.Media.Matrix>结构。</span><span class="sxs-lookup"><span data-stu-id="81181-375">This example shows how to skew a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixSkewExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixskewexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.SkewPrepend(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="SkewPrepend">
      <MemberSignature Language="C#" Value="public void SkewPrepend (double skewX, double skewY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkewPrepend(float64 skewX, float64 skewY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.SkewPrepend(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkewPrepend (skewX As Double, skewY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkewPrepend(double skewX, double skewY);" />
      <MemberSignature Language="F#" Value="member this.SkewPrepend : double * double -&gt; unit" Usage="matrix.SkewPrepend (skewX, skewY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skewX" Type="System.Double" />
        <Parameter Name="skewY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="skewX"><span data-ttu-id="81181-376">用于扭曲此 <see cref="T:System.Windows.Media.Matrix" /> 的 x 维角度。</span><span class="sxs-lookup"><span data-stu-id="81181-376">The angle in the x dimension by which to skew this <see cref="T:System.Windows.Media.Matrix" />.</span></span></param>
        <param name="skewY"><span data-ttu-id="81181-377">用于扭曲此 <see cref="T:System.Windows.Media.Matrix" /> 的 y 维角度。</span><span class="sxs-lookup"><span data-stu-id="81181-377">The angle in the y dimension by which to skew this <see cref="T:System.Windows.Media.Matrix" />.</span></span></param>
        <summary><span data-ttu-id="81181-378">在此 <see cref="T:System.Windows.Media.Matrix" /> 结构前面添加 x 和 y 维中指定角度的扭曲。</span><span class="sxs-lookup"><span data-stu-id="81181-378">Prepends a skew of the specified degrees in the x and y dimensions to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81181-379">在复合转换中，各个转换的顺序非常重要。</span><span class="sxs-lookup"><span data-stu-id="81181-379">In a composite transformation, the order of individual transformations is important.</span></span> <span data-ttu-id="81181-380">例如，如果首先旋转，然后扩展，然后转换，您获得不同的结果不是如果首先将旋转，则缩放。</span><span class="sxs-lookup"><span data-stu-id="81181-380">For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</span></span> <span data-ttu-id="81181-381">顺序很重要的原因之一是，这样针对的坐标系的原点的像旋转和缩放的变换。</span><span class="sxs-lookup"><span data-stu-id="81181-381">One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</span></span> <span data-ttu-id="81181-382">缩放以原点为中心的对象生成不同的结果已离开源的对象与缩放。</span><span class="sxs-lookup"><span data-stu-id="81181-382">Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</span></span> <span data-ttu-id="81181-383">同样，旋转以原点为中心的对象生成不同的结果比旋转对象已移动背离原点。</span><span class="sxs-lookup"><span data-stu-id="81181-383">Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81181-384">此示例演示如何在前面附加到扭曲<xref:System.Windows.Media.Matrix>结构。</span><span class="sxs-lookup"><span data-stu-id="81181-384">This example shows how to prepend a skew to a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixSkewPrependExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixskewprependexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.Skew(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (format As String, provider As IFormatProvider) As String Implements IFormattable.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IFormattable.ToString(System::String ^ format, IFormatProvider ^ provider) = IFormattable::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="81181-385">要使用的格式。</span><span class="sxs-lookup"><span data-stu-id="81181-385">The format to use.</span></span>  
  
<span data-ttu-id="81181-386">或</span><span class="sxs-lookup"><span data-stu-id="81181-386">-or-</span></span> 
<span data-ttu-id="81181-387">null 引用（在 Visual Basic 中为 <see langword="Nothing" />），用于使用为 <see cref="T:System.IFormattable" /> 实现的类型定义的默认格式。</span><span class="sxs-lookup"><span data-stu-id="81181-387">A null reference (<see langword="Nothing" /> in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</span></span></param>
        <param name="provider"><span data-ttu-id="81181-388">要用于对值设置格式的提供程序。</span><span class="sxs-lookup"><span data-stu-id="81181-388">The provider to use to format the value.</span></span>  
  
<span data-ttu-id="81181-389">或</span><span class="sxs-lookup"><span data-stu-id="81181-389">-or-</span></span> 
<span data-ttu-id="81181-390">null 引用（在 Visual Basic 中为 <see langword="Nothing" />），用于从操作系统的当前区域设置获取数字格式信息。</span><span class="sxs-lookup"><span data-stu-id="81181-390">A null reference (<see langword="Nothing" /> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</span></span></param>
        <summary><span data-ttu-id="81181-391">使用指定格式对当前实例的值设置格式。</span><span class="sxs-lookup"><span data-stu-id="81181-391">Formats the value of the current instance using the specified format.</span></span></summary>
        <returns><span data-ttu-id="81181-392">采用指定格式的当前实例的值。</span><span class="sxs-lookup"><span data-stu-id="81181-392">The value of the current instance in the specified format.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="81181-393">创建此 <see cref="T:System.String" /> 结构的 <see cref="T:System.Windows.Media.Matrix" /> 表示形式。</span><span class="sxs-lookup"><span data-stu-id="81181-393">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81181-394">如果此<xref:System.Windows.Media.Matrix>结构是恒等矩阵，该字符串则会返回"Identity"。</span><span class="sxs-lookup"><span data-stu-id="81181-394">If this <xref:System.Windows.Media.Matrix> structure is an identity matrix, the string "Identity" is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="matrix.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="81181-395">创建此 <see cref="T:System.String" /> 结构的 <see cref="T:System.Windows.Media.Matrix" /> 表示形式。</span><span class="sxs-lookup"><span data-stu-id="81181-395">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <returns><span data-ttu-id="81181-396">一个 <see cref="T:System.String" />，其中包含此 <see cref="P:System.Windows.Media.Matrix.M11" /> 的 <see cref="P:System.Windows.Media.Matrix.M12" />、<see cref="P:System.Windows.Media.Matrix.M21" />、<see cref="P:System.Windows.Media.Matrix.M22" />、<see cref="P:System.Windows.Media.Matrix.OffsetX" />、<see cref="P:System.Windows.Media.Matrix.OffsetY" /> 和 <see cref="T:System.Windows.Media.Matrix" /> 值。</span><span class="sxs-lookup"><span data-stu-id="81181-396">A <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" />, <see cref="P:System.Windows.Media.Matrix.OffsetX" />, and <see cref="P:System.Windows.Media.Matrix.OffsetY" /> values of this <see cref="T:System.Windows.Media.Matrix" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81181-397">如果此<xref:System.Windows.Media.Matrix>是<xref:System.Windows.Media.Matrix.Identity%2A>矩阵，返回"标识"的字符串。</span><span class="sxs-lookup"><span data-stu-id="81181-397">If this <xref:System.Windows.Media.Matrix> is an <xref:System.Windows.Media.Matrix.Identity%2A> matrix, the string "Identity" is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="matrix.ToString provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="81181-398">特定于区域的格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="81181-398">The culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="81181-399">使用区域性特定的格式设置信息创建此 <see cref="T:System.String" /> 结构的 <see cref="T:System.Windows.Media.Matrix" /> 表示形式。</span><span class="sxs-lookup"><span data-stu-id="81181-399">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.Matrix" /> structure with culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="81181-400">一个 <see cref="T:System.String" />，其中包含此 <see cref="P:System.Windows.Media.Matrix.M11" /> 的 <see cref="P:System.Windows.Media.Matrix.M12" />、<see cref="P:System.Windows.Media.Matrix.M21" />、<see cref="P:System.Windows.Media.Matrix.M22" />、<see cref="P:System.Windows.Media.Matrix.OffsetX" />、<see cref="P:System.Windows.Media.Matrix.OffsetY" /> 和 <see cref="T:System.Windows.Media.Matrix" /> 值。</span><span class="sxs-lookup"><span data-stu-id="81181-400">A <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" />, <see cref="P:System.Windows.Media.Matrix.OffsetX" />, and <see cref="P:System.Windows.Media.Matrix.OffsetY" /> values of this <see cref="T:System.Windows.Media.Matrix" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81181-401">如果此<xref:System.Windows.Media.Matrix>结构是恒等矩阵，该字符串则会返回"Identity"。</span><span class="sxs-lookup"><span data-stu-id="81181-401">If this <xref:System.Windows.Media.Matrix> structure is an identity matrix, the string "Identity" is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="81181-402">用此 <see cref="T:System.Windows.Media.Matrix" /> 变换指定的点、点数组、向量或向量数组。</span><span class="sxs-lookup"><span data-stu-id="81181-402">Transforms the specified point, array of points, vector, or array of vectors by this <see cref="T:System.Windows.Media.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="81181-403">下面的示例演示如何使用<xref:System.Windows.Media.Matrix>变换点和向量。</span><span class="sxs-lookup"><span data-stu-id="81181-403">The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixTransformExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtransformexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Windows.Point Transform (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point Transform(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Transform(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point Transform(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Windows.Point -&gt; System.Windows.Point" Usage="matrix.Transform point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="81181-404">要转换的点。</span><span class="sxs-lookup"><span data-stu-id="81181-404">The point to transform.</span></span></param>
        <summary><span data-ttu-id="81181-405">用 <see cref="T:System.Windows.Media.Matrix" /> 变换指定的点并返回结果。</span><span class="sxs-lookup"><span data-stu-id="81181-405">Transforms the specified point by the <see cref="T:System.Windows.Media.Matrix" /> and returns the result.</span></span></summary>
        <returns><span data-ttu-id="81181-406">用此 <see cref="T:System.Windows.Media.Matrix" /> 变换 <paramref name="point" /> 的结果。</span><span class="sxs-lookup"><span data-stu-id="81181-406">The result of transforming <paramref name="point" /> by this <see cref="T:System.Windows.Media.Matrix" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="81181-407">下面的示例演示如何使用<xref:System.Windows.Media.Matrix>变换点和向量。</span><span class="sxs-lookup"><span data-stu-id="81181-407">The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixTransformExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtransformexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Windows.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(valuetype System.Windows.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Transform(System.Windows.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(cli::array &lt;System::Windows::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Windows.Point[] -&gt; unit" Usage="matrix.Transform points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Windows.Point[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="81181-408">要变换的点。</span><span class="sxs-lookup"><span data-stu-id="81181-408">The points to transform.</span></span> <span data-ttu-id="81181-409">数组中的原始点将被它们的变换值替换。</span><span class="sxs-lookup"><span data-stu-id="81181-409">The original points in the array are replaced by their transformed values.</span></span></param>
        <summary><span data-ttu-id="81181-410">用此 <see cref="T:System.Windows.Media.Matrix" /> 变换指定的点。</span><span class="sxs-lookup"><span data-stu-id="81181-410">Transforms the specified points by this <see cref="T:System.Windows.Media.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="81181-411">下面的示例演示如何使用<xref:System.Windows.Media.Matrix>变换点和向量。</span><span class="sxs-lookup"><span data-stu-id="81181-411">The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixTransformExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtransformexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Windows.Vector Transform (System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Vector Transform(valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Vector Transform(System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Windows.Vector -&gt; System.Windows.Vector" Usage="matrix.Transform vector" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="vector"><span data-ttu-id="81181-412">要转换的向量。</span><span class="sxs-lookup"><span data-stu-id="81181-412">The vector to transform.</span></span></param>
        <summary><span data-ttu-id="81181-413">用此 <see cref="T:System.Windows.Media.Matrix" /> 变换指定的向量。</span><span class="sxs-lookup"><span data-stu-id="81181-413">Transforms the specified vector by this <see cref="T:System.Windows.Media.Matrix" />.</span></span></summary>
        <returns><span data-ttu-id="81181-414">用此 <see cref="T:System.Windows.Media.Matrix" /> 变换 <paramref name="vector" /> 的结果。</span><span class="sxs-lookup"><span data-stu-id="81181-414">The result of transforming <paramref name="vector" /> by this <see cref="T:System.Windows.Media.Matrix" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="81181-415">下面的示例演示如何使用<xref:System.Windows.Media.Matrix>变换点和向量。</span><span class="sxs-lookup"><span data-stu-id="81181-415">The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixTransformExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtransformexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Windows.Vector[] vectors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(valuetype System.Windows.Vector[] vectors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (vectors As Vector())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(cli::array &lt;System::Windows::Vector&gt; ^ vectors);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Windows.Vector[] -&gt; unit" Usage="matrix.Transform vectors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vectors" Type="System.Windows.Vector[]" />
      </Parameters>
      <Docs>
        <param name="vectors"><span data-ttu-id="81181-416">要变换的向量。</span><span class="sxs-lookup"><span data-stu-id="81181-416">The vectors to transform.</span></span> <span data-ttu-id="81181-417">数组中的原始向量将被它们的变换值替换。</span><span class="sxs-lookup"><span data-stu-id="81181-417">The original vectors in the array are replaced by their transformed values.</span></span></param>
        <summary><span data-ttu-id="81181-418">用此 <see cref="T:System.Windows.Media.Matrix" /> 变换指定的向量。</span><span class="sxs-lookup"><span data-stu-id="81181-418">Transforms the specified vectors by this <see cref="T:System.Windows.Media.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="81181-419">下面的示例演示如何使用<xref:System.Windows.Media.Matrix>变换点和向量。</span><span class="sxs-lookup"><span data-stu-id="81181-419">The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixTransformExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtransformexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public void Translate (double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Translate(float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Translate(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Translate (offsetX As Double, offsetY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Translate(double offsetX, double offsetY);" />
      <MemberSignature Language="F#" Value="member this.Translate : double * double -&gt; unit" Usage="matrix.Translate (offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offsetX"><span data-ttu-id="81181-420">此 <see cref="T:System.Windows.Media.Matrix" /> 沿 x 轴的偏移量。</span><span class="sxs-lookup"><span data-stu-id="81181-420">The amount to offset this <see cref="T:System.Windows.Media.Matrix" /> along the x-axis.</span></span></param>
        <param name="offsetY"><span data-ttu-id="81181-421">此 <see cref="T:System.Windows.Media.Matrix" /> 沿 y 轴的偏移量。</span><span class="sxs-lookup"><span data-stu-id="81181-421">The amount to offset this <see cref="T:System.Windows.Media.Matrix" /> along the y-axis.</span></span></param>
        <summary><span data-ttu-id="81181-422">在此 <see cref="T:System.Windows.Media.Matrix" /> 结构后面追加指定偏移量的平移。</span><span class="sxs-lookup"><span data-stu-id="81181-422">Appends a translation of the specified offsets to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="81181-423">下面的示例演示如何将追加到转换<xref:System.Windows.Media.Matrix>结构。</span><span class="sxs-lookup"><span data-stu-id="81181-423">The following example shows how append a translation onto a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixTranslateExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtranslateexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.TranslatePrepend(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="TranslatePrepend">
      <MemberSignature Language="C#" Value="public void TranslatePrepend (double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslatePrepend(float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.TranslatePrepend(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslatePrepend (offsetX As Double, offsetY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslatePrepend(double offsetX, double offsetY);" />
      <MemberSignature Language="F#" Value="member this.TranslatePrepend : double * double -&gt; unit" Usage="matrix.TranslatePrepend (offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offsetX"><span data-ttu-id="81181-424">此 <see cref="T:System.Windows.Media.Matrix" /> 沿 x 轴的偏移量。</span><span class="sxs-lookup"><span data-stu-id="81181-424">The amount to offset this <see cref="T:System.Windows.Media.Matrix" /> along the x-axis.</span></span></param>
        <param name="offsetY"><span data-ttu-id="81181-425">此 <see cref="T:System.Windows.Media.Matrix" /> 沿 y 轴的偏移量。</span><span class="sxs-lookup"><span data-stu-id="81181-425">The amount to offset this <see cref="T:System.Windows.Media.Matrix" /> along the y-axis.</span></span></param>
        <summary><span data-ttu-id="81181-426">在此 <see cref="T:System.Windows.Media.Matrix" /> 结构前面添加指定偏移量的平移。</span><span class="sxs-lookup"><span data-stu-id="81181-426">Prepends a translation of the specified offsets to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81181-427">在复合转换中，各个转换的顺序非常重要。</span><span class="sxs-lookup"><span data-stu-id="81181-427">In a composite transformation, the order of individual transformations is important.</span></span> <span data-ttu-id="81181-428">例如，如果首先旋转，然后扩展，然后转换，您获得不同的结果不是如果首先将旋转，则缩放。</span><span class="sxs-lookup"><span data-stu-id="81181-428">For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</span></span> <span data-ttu-id="81181-429">顺序很重要的原因之一是，这样针对的坐标系的原点的像旋转和缩放的变换。</span><span class="sxs-lookup"><span data-stu-id="81181-429">One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</span></span> <span data-ttu-id="81181-430">缩放以原点为中心的对象生成不同的结果已离开源的对象与缩放。</span><span class="sxs-lookup"><span data-stu-id="81181-430">Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</span></span> <span data-ttu-id="81181-431">同样，旋转以原点为中心的对象生成不同的结果比旋转对象已移动背离原点。</span><span class="sxs-lookup"><span data-stu-id="81181-431">Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81181-432">下面的示例演示如何前面预置到转换<xref:System.Windows.Media.Matrix>结构。</span><span class="sxs-lookup"><span data-stu-id="81181-432">The following example shows how prepend a translation onto a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixTranslatePrependExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtranslateprependexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.Translate(System.Double,System.Double)" />
      </Docs>
    </Member>
  </Members>
</Type>