<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HitTestFilterCallback.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50e53ad2f1fd1bdc6d1c1436c38e5eabcee4c8677.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0e53ad2f1fd1bdc6d1c1436c38e5eabcee4c8677</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.HitTestFilterCallback">
          <source>The visual to hit test.</source>
          <target state="translated">要执行命中测试的视觉对象。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.HitTestFilterCallback">
          <source>Represents the callback method that specifies parts of the visual tree to omit from hit test processing</source>
          <target state="translated">表示一个回调方法，该方法指定可视化树中不进行命中测试处理的部分</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.HitTestFilterCallback">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Media.HitTestFilterBehavior" /&gt;</ph> that represents the action resulting from the hit test.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Windows.Media.HitTestFilterBehavior" /&gt;</ph>，它表示从命中测试中产生的操作。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.HitTestFilterCallback">
          <source>The hit test filter callback method is invoked for all the visual objects that map to the hit test criteria, starting from the visual you specify and descending through its branch of the visual tree.</source>
          <target state="translated">命中的测试筛选器回叫方法调用映射到的命中的测试条件，从你指定的视觉效果和降序通过其可视化树的分支的所有可视化对象中。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.HitTestFilterCallback">
          <source>However, you may want to ignore certain branches of the visual tree that you are not interested in processing in your hit test results callback function.</source>
          <target state="translated">但是，你可能要忽略不希望在命中测试结果回调叫函数中处理的可视化树的某些分支。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.HitTestFilterCallback">
          <source>The return value of the hit test filter callback function determines what type of action the enumeration of the visual objects should take.</source>
          <target state="translated">命中测试筛选器回叫函数的返回值确定视觉对象的枚举应采用的操作类型。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.HitTestFilterCallback">
          <source>For example, if you return the value, <ph id="ph1">&lt;xref:System.Windows.Media.HitTestFilterBehavior.ContinueSkipSelfAndChildren&gt;</ph>, you can remove the current visual object and its descendants from the hit test results enumeration.</source>
          <target state="translated">例如，如果返回值， <ph id="ph1">&lt;xref:System.Windows.Media.HitTestFilterBehavior.ContinueSkipSelfAndChildren&gt;</ph>，你可以从命中的测试结果枚举中删除当前的 visual 对象及其子代。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.HitTestFilterCallback">
          <source>This means that the hit test results callback method will not see these objects in its enumeration.</source>
          <target state="translated">这意味着，命中的测试结果回调方法将不会看到在其枚举中的这些对象。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.HitTestFilterCallback">
          <source>Pruning the visual tree of objects decreases the amount of processing during the hit test results enumeration pass.</source>
          <target state="translated">修剪对象的可视化树会减少命中测试结果枚举传递期间的处理量。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.HitTestFilterCallback">
          <source><bpt id="p1">![</bpt>Pruning a visual tree using a hit test filter<ept id="p1">]</ept><bpt id="p2">(~/add/media/filteredvisualtree-01.png "</bpt>Pruning a visual tree using a hit test filter<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>修剪可视化树使用命中的测试筛选器<ept id="p1">]</ept><bpt id="p2">(~/add/media/filteredvisualtree-01.png "</bpt>修剪可视化树使用命中的测试筛选器<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.HitTestFilterCallback">
          <source>Pruning a visual tree</source>
          <target state="translated">修剪可视化树</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.HitTestFilterCallback">
          <source>The following example shows how to invoke <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.HitTest%2A&gt;</ph> by using a <ph id="ph2">&lt;xref:System.Windows.Media.HitTestFilterCallback&gt;</ph> value.</source>
          <target state="translated">下面的示例演示如何调用<ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.HitTest%2A&gt;</ph>使用<ph id="ph2">&lt;xref:System.Windows.Media.HitTestFilterCallback&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.HitTestFilterCallback">
          <source>The corresponding hit test callback method is also defined.</source>
          <target state="translated">此外定义相应的命中的测试回调方法。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.HitTestFilterCallback">
          <source>The following example shows how to return a <ph id="ph1">&lt;xref:System.Windows.Media.HitTestFilterBehavior&gt;</ph> value from a hit test filter callback method.</source>
          <target state="translated">下面的示例演示如何返回<ph id="ph1">&lt;xref:System.Windows.Media.HitTestFilterBehavior&gt;</ph>从命中的测试筛选回调方法的值。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>