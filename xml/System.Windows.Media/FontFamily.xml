<Type Name="FontFamily" FullName="System.Windows.Media.FontFamily">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5f5e6588efe1c405781bbe8ddd0cc7e0c4af9d12" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48638132" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FontFamily" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FontFamily extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.FontFamily" />
  <TypeSignature Language="VB.NET" Value="Public Class FontFamily" />
  <TypeSignature Language="C++ CLI" Value="public ref class FontFamily" />
  <TypeSignature Language="F#" Value="type FontFamily = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.FontFamilyConverter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Font)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Media.FontFamilyValueSerializer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="74d94-101">表示一系列相关字体。</span>
      <span class="sxs-lookup">
        <span data-stu-id="74d94-101">Represents a family of related fonts.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74d94-102">字体系列是一组的字体，共享相同的家族名称，例如"Times New Roman"，但不同的功能。</span><span class="sxs-lookup"><span data-stu-id="74d94-102">A font family is a set of typefaces that share the same family name, such as "Times New Roman", but that differ in features.</span></span> <span data-ttu-id="74d94-103">这些功能差异包括<xref:System.Windows.Media.Typeface.Style%2A>，例如斜体和<xref:System.Windows.Media.Typeface.Weight%2A>，如粗体。</span><span class="sxs-lookup"><span data-stu-id="74d94-103">These feature differences include <xref:System.Windows.Media.Typeface.Style%2A>, such as italic, and <xref:System.Windows.Media.Typeface.Weight%2A>, such as bold.</span></span>  
  
 <span data-ttu-id="74d94-104">![字体](~/add/media/fonts.PNG "字体")</span><span class="sxs-lookup"><span data-stu-id="74d94-104">![Fonts](~/add/media/fonts.PNG "Fonts")</span></span>  
<span data-ttu-id="74d94-105">成员的"Times New Roman"字体系列字样的示例</span><span class="sxs-lookup"><span data-stu-id="74d94-105">Example of typefaces that are members of the "Times New Roman" font family</span></span>  
  
 <span data-ttu-id="74d94-106">大多数[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]元素，如<xref:System.Windows.Controls.Button>并<xref:System.Windows.Controls.TextBlock>，提供<xref:System.Windows.Controls.Control.FontFamily%2A>属性，可用于指定控件的文本内容的字体。</span><span class="sxs-lookup"><span data-stu-id="74d94-106">Most [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elements, such as <xref:System.Windows.Controls.Button> and <xref:System.Windows.Controls.TextBlock>, provide a <xref:System.Windows.Controls.Control.FontFamily%2A> property that can be used to specify a font for the text content of a control.</span></span> <span data-ttu-id="74d94-107">通过设置该属性来定义字体<xref:System.Windows.Media.FontFamily>值。</span><span class="sxs-lookup"><span data-stu-id="74d94-107">You define the font by setting that property with a <xref:System.Windows.Media.FontFamily> value.</span></span> <span data-ttu-id="74d94-108">以下示例演示如何在引用的字体，[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]和代码中。</span><span class="sxs-lookup"><span data-stu-id="74d94-108">The following examples show how to reference a font, in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] and in code.</span></span>  
  
 [!code-csharp[FontSnippets#FontFallbackSnippet3](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml.cs#fontfallbacksnippet3)]
 [!code-vb[FontSnippets#FontFallbackSnippet3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontfamilysnippets.xaml.vb#fontfallbacksnippet3)]
 [!code-xaml[FontSnippets#FontFallbackSnippet3](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml#fontfallbacksnippet3)]  
  
 <span data-ttu-id="74d94-109">在前面的示例中，引用，则"漫画 San MS"的字体，将按引用其*友好名称*。</span><span class="sxs-lookup"><span data-stu-id="74d94-109">In the preceding example, the font that is referenced, "Comic Sans MS", is referred to by its *friendly name*.</span></span> <span data-ttu-id="74d94-110">此外，在此示例字体被假定为系统字体集合中。</span><span class="sxs-lookup"><span data-stu-id="74d94-110">Also, in this example the font is assumed to be in the system font collection.</span></span>  
  
## <a name="specifying-fonts-in-alternate-directories"></a><span data-ttu-id="74d94-111">指定备用目录中的字体</span><span class="sxs-lookup"><span data-stu-id="74d94-111">Specifying Fonts in Alternate Directories</span></span>  
 <span data-ttu-id="74d94-112">一个[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]应用程序可以指定一个目录，包含系统字体集，用于解析字体引用的目录之外。</span><span class="sxs-lookup"><span data-stu-id="74d94-112">A [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] application can specify a directory, other than the directory that contains the systems font collection, for resolving font references.</span></span> <span data-ttu-id="74d94-113">该字体的友好名称可以指定绝对[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]值解析字体引用，因为在下面的示例所示[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]和代码示例。</span><span class="sxs-lookup"><span data-stu-id="74d94-113">The friendly name of the font can specify an absolute [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] value to resolve the font reference, as shown in the following [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] and code examples.</span></span>  
  
 [!code-csharp[FontSnippets#FontPackageSnippet6](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet6)]
 [!code-vb[FontSnippets#FontPackageSnippet6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet6)]
 [!code-xaml[FontSnippets#FontPackageSnippet6](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml#fontpackagesnippet6)]  
  
 <span data-ttu-id="74d94-114">该字体的友好名称还可以指定一个相对[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]值，该值需要基[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]来解析字体引用。</span><span class="sxs-lookup"><span data-stu-id="74d94-114">The friendly name of the font can also specify a relative [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] value, which requires a base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] to resolve the font reference.</span></span> <span data-ttu-id="74d94-115"><xref:System.Windows.Media.FontFamily.BaseUri%2A>的属性<xref:System.Windows.Media.FontFamily>对象对应于基[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]值。</span><span class="sxs-lookup"><span data-stu-id="74d94-115">The <xref:System.Windows.Media.FontFamily.BaseUri%2A> property of the <xref:System.Windows.Media.FontFamily> object corresponds to the base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] value.</span></span> <span data-ttu-id="74d94-116">下面的代码示例演示如何创建基的组成的字体引用[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]值和相对[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]值。</span><span class="sxs-lookup"><span data-stu-id="74d94-116">The following code example shows how to create a font reference that is composed of a base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] value and a relative [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] value.</span></span>  
  
 [!code-csharp[FontSnippets#FontPackageSnippet7](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet7)]
 [!code-vb[FontSnippets#FontPackageSnippet7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet7)]  
  
 <span data-ttu-id="74d94-117">可以使用基[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]值引用的字体，打包为应用程序的一部分时。</span><span class="sxs-lookup"><span data-stu-id="74d94-117">You can use a base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] value when you reference a font that is packaged as part of the application.</span></span> <span data-ttu-id="74d94-118">例如，基[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]值可以是"pack://application" [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]，它允许你引用打包为应用程序资源的字体。</span><span class="sxs-lookup"><span data-stu-id="74d94-118">For example, the base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] value can be a "pack://application" [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)], which lets you reference fonts that are packaged as application resources.</span></span> <span data-ttu-id="74d94-119">下面的代码示例显示了组成基字体引用[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]值和相对[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]值。</span><span class="sxs-lookup"><span data-stu-id="74d94-119">The following code example shows a font reference that is composed of a base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] value and a relative [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] value.</span></span>  
  
 [!code-csharp[FontSnippets#FontPackageSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet2)]
 [!code-vb[FontSnippets#FontPackageSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet2)]  
  
 <span data-ttu-id="74d94-120">当<xref:System.Windows.Media.FontFamily>指定为在标记中，基属性[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]值始终为隐式 — 它的值是[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]的[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]页。</span><span class="sxs-lookup"><span data-stu-id="74d94-120">When a <xref:System.Windows.Media.FontFamily> is specified as an attribute in markup, the base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] value is always implied—its value is the [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] page.</span></span> <span data-ttu-id="74d94-121">暗示的基[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]值用于相对[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]中要获取的字体位置的友好名称字符串值。</span><span class="sxs-lookup"><span data-stu-id="74d94-121">The implied base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] value is used with the relative [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] value in the friendly name string to obtain the location of the font.</span></span> <span data-ttu-id="74d94-122">在下面的示例[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]示例中，请注意，相对[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]值使用"。 /"表示法，这意味着"在当前文件夹"的基本[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]值。</span><span class="sxs-lookup"><span data-stu-id="74d94-122">In the following [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] example, notice that the relative [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] value uses the "./" notation, which means "in the current folder" of the base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] value.</span></span>  
  
 [!code-xaml[FontSnippets#FontPackageSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml#fontpackagesnippet1)]  
  
 <span data-ttu-id="74d94-123">一个[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]应用程序可打包为内容项、 资源项或库资源项的字体。</span><span class="sxs-lookup"><span data-stu-id="74d94-123">A [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] application can package fonts as either a content item, a resource item, or a library resource item.</span></span> <span data-ttu-id="74d94-124">有关详细信息，请参阅[将字体与应用程序一起打包](~/docs/framework/wpf/advanced/packaging-fonts-with-applications.md)。</span><span class="sxs-lookup"><span data-stu-id="74d94-124">For more information, see [Packaging Fonts with Applications](~/docs/framework/wpf/advanced/packaging-fonts-with-applications.md).</span></span>  
  
## <a name="font-fallback"></a><span data-ttu-id="74d94-125">字体回退</span><span class="sxs-lookup"><span data-stu-id="74d94-125">Font Fallback</span></span>  
 <span data-ttu-id="74d94-126">字体回退是指不选中的客户端应用程序的字体的字体自动替换。</span><span class="sxs-lookup"><span data-stu-id="74d94-126">Font fallback refers to the automatic substitution of a font other than the font that is selected by the client application.</span></span> <span data-ttu-id="74d94-127">有两个主要原因为何调用字体回退：</span><span class="sxs-lookup"><span data-stu-id="74d94-127">There are two primary reasons why font fallback is invoked:</span></span>  
  
-   <span data-ttu-id="74d94-128">在系统上不存在指定的客户端应用程序的字体。</span><span class="sxs-lookup"><span data-stu-id="74d94-128">The font that is specified by the client application does not exist on the system.</span></span>  
  
-   <span data-ttu-id="74d94-129">客户端应用程序指定的字体不包含所需呈现文本的标志符号。</span><span class="sxs-lookup"><span data-stu-id="74d94-129">The font that is specified by the client application does not contain the glyphs that are required to render text.</span></span>  
  
 <span data-ttu-id="74d94-130">在[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]，字体回退机制使用的默认回退字体系列"Global User Interface"，作为替代字体。</span><span class="sxs-lookup"><span data-stu-id="74d94-130">In[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], the font fallback mechanism uses the default fallback font family, "Global User Interface", as the substitute font.</span></span> <span data-ttu-id="74d94-131">此字体被指一种复合字体，其文件的名称是"GlobalUserInterface.CompositeFont"。</span><span class="sxs-lookup"><span data-stu-id="74d94-131">This font is defined as a composite font, whose file name is "GlobalUserInterface.CompositeFont".</span></span> <span data-ttu-id="74d94-132">有关复合字体的详细信息，请参阅本主题中的复合字体部分。</span><span class="sxs-lookup"><span data-stu-id="74d94-132">For more information about composite fonts, see the Composite Fonts section in this topic.</span></span>  
  
 <span data-ttu-id="74d94-133">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]字体回退机制取代了以前[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]字体替换技术。</span><span class="sxs-lookup"><span data-stu-id="74d94-133">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] font fallback mechanism replaces previous [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] font substitution technologies.</span></span>  
  
## <a name="defining-a-font-fallback-sequence-in-code"></a><span data-ttu-id="74d94-134">在代码中定义的字体回退序列</span><span class="sxs-lookup"><span data-stu-id="74d94-134">Defining a Font Fallback Sequence in Code</span></span>  
 <span data-ttu-id="74d94-135">可以在您的代码，它允许您定义备用字体中定义的字体回退序列。</span><span class="sxs-lookup"><span data-stu-id="74d94-135">You can define a font fallback sequence in your code, which lets you define an alternate font.</span></span> <span data-ttu-id="74d94-136">当您创建<xref:System.Windows.Media.FontFamily>对象，提供多个字体系列名称，以逗号分隔，为<xref:System.String>参数，例如"宋体，Verdana"。</span><span class="sxs-lookup"><span data-stu-id="74d94-136">When you create a <xref:System.Windows.Media.FontFamily> object, provide multiple font family names, separated by commas, for the <xref:System.String> parameter, such as "Comic Sans MS, Verdana".</span></span> <span data-ttu-id="74d94-137">在这种情况下，如果从"漫画 San MS"字样的标志符号不可用，使用从"Verdana"字样的标志符号。</span><span class="sxs-lookup"><span data-stu-id="74d94-137">In this case, if the glyphs from the "Comic Sans MS" typeface are not available, glyphs from the "Verdana" typeface are used.</span></span> <span data-ttu-id="74d94-138">如果"漫画 San MS"和"Verdana"都不具有所需的字形，回退字体系列字样的使用，即"Global User Interface"默认情况下。</span><span class="sxs-lookup"><span data-stu-id="74d94-138">If neither "Comic Sans MS" nor "Verdana" have the required glyphs, the fallback font family of the typeface is used, which is "Global User Interface" by default.</span></span>  
  
 <span data-ttu-id="74d94-139">以下示例演示如何在中定义的字体回退序列，[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]和代码中。</span><span class="sxs-lookup"><span data-stu-id="74d94-139">The following examples show how to define a font fallback sequence, in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] and in code.</span></span>  
  
 [!code-csharp[FontSnippets#FontFallbackSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml.cs#fontfallbacksnippet1)]
 [!code-vb[FontSnippets#FontFallbackSnippet1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontfamilysnippets.xaml.vb#fontfallbacksnippet1)]
 [!code-xaml[FontSnippets#FontFallbackSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml#fontfallbacksnippet1)]  
  
 <span data-ttu-id="74d94-140">字体回退序列中的任何一个都可以指定字体位置。</span><span class="sxs-lookup"><span data-stu-id="74d94-140">Any one of the fonts in the fallback sequence can specify font locations.</span></span> <span data-ttu-id="74d94-141">在以下示例中，作为应用程序资源，引用的"Pericles Light"和"Verdana"被引用为系统字体集合成员。</span><span class="sxs-lookup"><span data-stu-id="74d94-141">In the following examples, "Pericles Light" is referenced as an application resource, and "Verdana" is referenced as a system font collection member.</span></span>  
  
 [!code-csharp[FontSnippets#FontFallbackSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml.cs#fontfallbacksnippet2)]
 [!code-vb[FontSnippets#FontFallbackSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontfamilysnippets.xaml.vb#fontfallbacksnippet2)]
 [!code-xaml[FontSnippets#FontFallbackSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml#fontfallbacksnippet2)]  
  
## <a name="composite-fonts"></a><span data-ttu-id="74d94-142">复合字体</span><span class="sxs-lookup"><span data-stu-id="74d94-142">Composite Fonts</span></span>  
 <span data-ttu-id="74d94-143">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]平台提供了一个复合字体功能以允许构造完整范围的多语言字体，并避免显示缺失字形。</span><span class="sxs-lookup"><span data-stu-id="74d94-143">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] platform provides a composite font feature to allow the construction of full range multilingual fonts, and to avoid displaying missing glyphs.</span></span> <span data-ttu-id="74d94-144">复合字体替换[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]字体链接、 字体回退、 字体绑定、 字体关联和最终用户定义的字符 (EUDC) 机制。</span><span class="sxs-lookup"><span data-stu-id="74d94-144">Composite fonts replace the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] font linking, font fallback, font binding, font association, and end-user-defined characters (EUDC) mechanisms.</span></span>  
  
 <span data-ttu-id="74d94-145">复合字体系列可供通过应用程序<xref:System.Windows.Media.FontFamily>和<xref:System.Windows.Media.Typeface>构造函数就像任何其他字体系列。</span><span class="sxs-lookup"><span data-stu-id="74d94-145">A composite font family is available to applications through the <xref:System.Windows.Media.FontFamily> and <xref:System.Windows.Media.Typeface> constructors just like any other font family.</span></span> <span data-ttu-id="74d94-146">每个复合字体系列的名称为，作为用其他字体，可以提供其名称以多种语言的本地化变体。</span><span class="sxs-lookup"><span data-stu-id="74d94-146">Each composite font family is named, and, as with other fonts, can provide localized variants of its name in multiple languages.</span></span>  
  
 <span data-ttu-id="74d94-147">以下标记示例演示如何为磁盘文件定义的复合字体系列。</span><span class="sxs-lookup"><span data-stu-id="74d94-147">The following markup example shows how a composite font family can be defined as a disk file.</span></span> <span data-ttu-id="74d94-148">此文件可以存储在默认[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]字体目录与任何其他安装字体，或者可以通过包括在任何位置引用其[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]时按名称引用该系列。</span><span class="sxs-lookup"><span data-stu-id="74d94-148">This file can be stored in the default [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] font directory as with any other installed font, or can be referenced in any location by including its [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] when referencing the family by name.</span></span>  
  
 <span data-ttu-id="74d94-149">下面的示例演示中的字体系列标记"。CompositeFont"文件。</span><span class="sxs-lookup"><span data-stu-id="74d94-149">The following example shows the font family markup in a ".CompositeFont" file.</span></span>  
  
 [!code-xaml[CompositeFontMarkup#CF](~/samples/snippets/csharp/VS_Snippets_Wpf/CompositeFontMarkup/CS/comp.xaml#cf)]  
  
 <span data-ttu-id="74d94-150">默认 Windows 字体目录 WPF 安装过程中将显示以下四个复合字体。</span><span class="sxs-lookup"><span data-stu-id="74d94-150">The following four composite fonts appear in the default Windows font directory as part of the WPF installation.</span></span>  
  
|<span data-ttu-id="74d94-151">字体</span><span class="sxs-lookup"><span data-stu-id="74d94-151">Font</span></span>|<span data-ttu-id="74d94-152">说明</span><span class="sxs-lookup"><span data-stu-id="74d94-152">Notes</span></span>|  
|----------|-----------|  
|<span data-ttu-id="74d94-153">GlobalMonospace.CompositeFont</span><span class="sxs-lookup"><span data-stu-id="74d94-153">GlobalMonospace.CompositeFont</span></span>|<span data-ttu-id="74d94-154">拉丁语字符使用 monospace 字体，例如，"Courier New"的呈现文本。</span><span class="sxs-lookup"><span data-stu-id="74d94-154">Renders text by using a monospace font, for example, "Courier New" for Latin characters.</span></span>|  
|<span data-ttu-id="74d94-155">GlobalSanSerif.CompositeFont</span><span class="sxs-lookup"><span data-stu-id="74d94-155">GlobalSanSerif.CompositeFont</span></span>|<span data-ttu-id="74d94-156">通过使用 sans serif 字体，例如，"Arial"拉丁字符对于呈现文本。</span><span class="sxs-lookup"><span data-stu-id="74d94-156">Renders text by using a sans serif font, for example, "Arial" for Latin characters.</span></span>|  
|<span data-ttu-id="74d94-157">GlobalSerif.CompositeFont</span><span class="sxs-lookup"><span data-stu-id="74d94-157">GlobalSerif.CompositeFont</span></span>|<span data-ttu-id="74d94-158">通过使用非 serif 字体，例如，"Times New Roman"将呈现文本为拉丁字符。</span><span class="sxs-lookup"><span data-stu-id="74d94-158">Renders text by using a serif font, for example, "Times New Roman" for Latin characters.</span></span>|  
|<span data-ttu-id="74d94-159">GlobalUserInterface.CompositeFont</span><span class="sxs-lookup"><span data-stu-id="74d94-159">GlobalUserInterface.CompositeFont</span></span>|<span data-ttu-id="74d94-160">通过使用默认字体，例如，"Times New Roman"将呈现文本为拉丁字符。</span><span class="sxs-lookup"><span data-stu-id="74d94-160">Renders text by using a default font, for example, "Times New Roman" for Latin characters.</span></span>|  
  
<a name="xamlAttributeUsage_FontFamily"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="74d94-161">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="74d94-161">XAML Attribute Usage</span></span>  
  
```  
<object FontFamily="fontFamilyName"/>  
- or -  
<object FontFamily="fontFamilyNamesList"/>  
- or -  
<object FontFamily="fontFamilyFolderReference"/>  
- or -  
<object FontFamily="fontFamilyUriReference"/>  
```  
  
<a name="xamlValues_FontFamily"></a>   
## <a name="xaml-values"></a><span data-ttu-id="74d94-162">XAML 值</span><span class="sxs-lookup"><span data-stu-id="74d94-162">XAML Values</span></span>  
 <span data-ttu-id="74d94-163">*fontFamilyName*</span><span class="sxs-lookup"><span data-stu-id="74d94-163">*fontFamilyName*</span></span>  
 <span data-ttu-id="74d94-164">指定字体系列名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="74d94-164">A string specifying a font family name.</span></span>  <span data-ttu-id="74d94-165">例如，`"Arial"` 或 `"Century Gothic"`。</span><span class="sxs-lookup"><span data-stu-id="74d94-165">For example, `"Arial"` or `"Century Gothic"`.</span></span>  
  
 <span data-ttu-id="74d94-166">*fontFamilyNamesList*</span><span class="sxs-lookup"><span data-stu-id="74d94-166">*fontFamilyNamesList*</span></span>  
 <span data-ttu-id="74d94-167">一个字符串，指定多个字体系列名称，彼此间用逗号 （忽略逗号后面的任何空白）。</span><span class="sxs-lookup"><span data-stu-id="74d94-167">A string specifying multiple font family names, each separated by a comma (any white space following a comma is ignored).</span></span>  <span data-ttu-id="74d94-168">指定的第一个字体系列充当主字体系列;后续的字体系列作为备用系列在主字体系列的不可用或不适用情况下使用。</span><span class="sxs-lookup"><span data-stu-id="74d94-168">The first font family specified serves as the primary font family; subsequent font families serve as fallback families to be used in cases where the primary font family is unavailable or not applicable.</span></span>  <span data-ttu-id="74d94-169">例如，`"Arial, Century Gothic"`作为主字体系列，与作为备用字体系列世纪 Gothic 指定 arial 字体。</span><span class="sxs-lookup"><span data-stu-id="74d94-169">For example, `"Arial, Century Gothic"` specifies Arial as the primary font family, with Century Gothic as the fallback font family.</span></span>  
  
 <span data-ttu-id="74d94-170">*fontFamilyFolderReference*</span><span class="sxs-lookup"><span data-stu-id="74d94-170">*fontFamilyFolderReference*</span></span>  
 <span data-ttu-id="74d94-171">一个字符串，指定包含该字体，以及字体系列名称的文件夹。</span><span class="sxs-lookup"><span data-stu-id="74d94-171">A string specifying a folder containing the font, along with a font family name.</span></span>  <span data-ttu-id="74d94-172">由 # 字符分隔的文件夹和字体系列名称。</span><span class="sxs-lookup"><span data-stu-id="74d94-172">The folder and font family name are delimited by a # character.</span></span>  <span data-ttu-id="74d94-173">文件夹引用可能是绝对的或相对。</span><span class="sxs-lookup"><span data-stu-id="74d94-173">The folder reference may be absolute, or relative.</span></span>  <span data-ttu-id="74d94-174">例如 `"Custom Fonts\#My Custom Font"`。</span><span class="sxs-lookup"><span data-stu-id="74d94-174">For example, `"Custom Fonts\#My Custom Font"`.</span></span>  
  
 <span data-ttu-id="74d94-175">*fontFamilyUriReference*</span><span class="sxs-lookup"><span data-stu-id="74d94-175">*fontFamilyUriReference*</span></span>  
 <span data-ttu-id="74d94-176">一个字符串，指定[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]字体，以及字体系列名称。</span><span class="sxs-lookup"><span data-stu-id="74d94-176">A string specifying a [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] for the font, along with a font family name.</span></span>  <span data-ttu-id="74d94-177">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]和由 # 字符分隔的字体系列名称。</span><span class="sxs-lookup"><span data-stu-id="74d94-177">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] and font family name are delimited by a # character.</span></span>  <span data-ttu-id="74d94-178">例如 `"http://MyFontServer/Fonts/#My Custom Font"`。</span><span class="sxs-lookup"><span data-stu-id="74d94-178">For example, `"http://MyFontServer/Fonts/#My Custom Font"`.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Fonts" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="74d94-179">初始化 <see cref="T:System.Windows.Media.FontFamily" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74d94-179">Initializes a new instance of the <see cref="T:System.Windows.Media.FontFamily" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontFamily ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontFamily();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="74d94-180">初始化匿名 <see cref="T:System.Windows.Media.FontFamily" /> 类的一个新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74d94-180">Initializes a new instance of an anonymous <see cref="T:System.Windows.Media.FontFamily" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74d94-181">如果想要以编程方式创建复合字体，请使用此默认构造函数。</span><span class="sxs-lookup"><span data-stu-id="74d94-181">Use this default constructor when you want to create a composite font programmatically.</span></span> <span data-ttu-id="74d94-182">这意味着，无需指定字体系列名称的构造函数，但您必须填充中的集合<xref:System.Windows.Media.FontFamily.FamilyMaps%2A>和<xref:System.Windows.Media.FontFamily.FamilyNames%2A>之前使用构造的实例的集合。</span><span class="sxs-lookup"><span data-stu-id="74d94-182">This means that you do not have to specify a font family name for the constructor, but you must populate the collections in the <xref:System.Windows.Media.FontFamily.FamilyMaps%2A> and <xref:System.Windows.Media.FontFamily.FamilyNames%2A> collections prior to using the constructed instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontFamily (string familyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string familyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (familyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontFamily(System::String ^ familyName);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.FontFamily : string -&gt; System.Windows.Media.FontFamily" Usage="new System.Windows.Media.FontFamily familyName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="familyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="familyName">
          <span data-ttu-id="74d94-183">构成新 <see cref="T:System.Windows.Media.FontFamily" /> 的一个或多个系列名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74d94-183">The family name or names that comprise the new <see cref="T:System.Windows.Media.FontFamily" />.</span>
          </span>
          <span data-ttu-id="74d94-184">多个系列名称之间应使用逗号分隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74d94-184">Multiple family names should be separated by commas.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74d94-185">从指定的字体系列名称初始化 <see cref="T:System.Windows.Media.FontFamily" /> 类的一个新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74d94-185">Initializes a new instance of the <see cref="T:System.Windows.Media.FontFamily" /> class from the specified font family name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74d94-186">中指定每个系列名称`familyName`前面的参数可以是对目录的位置引用或[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="74d94-186">Each family name that is specified in the `familyName` parameter can be preceded by a location reference to either a directory or a [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)].</span></span> <span data-ttu-id="74d94-187">位置引用分开以井系列名称 (`#`) 字符。</span><span class="sxs-lookup"><span data-stu-id="74d94-187">The location reference is separated from the family name by a pound (`#`) character.</span></span> <span data-ttu-id="74d94-188">中指定的多个系列名称`familyName`参数必须用逗号分隔。</span><span class="sxs-lookup"><span data-stu-id="74d94-188">Multiple family names that are specified in the `familyName` parameter must be separated by commas.</span></span>  
  
 <span data-ttu-id="74d94-189">每个系列可以是直接表示一组共享相同的系列名称的字体文件的实际字体，也可以是复合字体文件中定义的系列名称的引用。</span><span class="sxs-lookup"><span data-stu-id="74d94-189">Each family can be a real font that directly represents a set of font files that share the same family name, or can be a reference to a family name that is defined in a composite font file.</span></span>  
  
 <span data-ttu-id="74d94-190">当标识多个系列时，第二个和后续的字体系列作为备用系列，处理不受第一个字体系列的码位。</span><span class="sxs-lookup"><span data-stu-id="74d94-190">When multiple families are identified, the second and subsequent font families serve as fallback families, handling code points that are not supported by the first font family.</span></span> <span data-ttu-id="74d94-191">对于第一个字体系列不支持每个代码点，又检查每个后续系列。</span><span class="sxs-lookup"><span data-stu-id="74d94-191">For every code point that is not supported by the first font family, each subsequent family is checked in turn.</span></span>  
  
   
  
## Examples  
 [!code-csharp[FontSnippets#103](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#103)]
 [!code-vb[FontSnippets#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#103)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="74d94-192">
            <paramref name="familyName" /> 不能为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74d94-192">
              <paramref name="familyName" /> cannot be <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontFamily (Uri baseUri, string familyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUri, string familyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.#ctor(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUri As Uri, familyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontFamily(Uri ^ baseUri, System::String ^ familyName);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.FontFamily : Uri * string -&gt; System.Windows.Media.FontFamily" Usage="new System.Windows.Media.FontFamily (baseUri, familyName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="familyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUri">
          <span data-ttu-id="74d94-193">指定用来解析 <c>familyName</c> 的基 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74d94-193">Specifies the base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] that is used to resolve <c>familyName</c>.</span>
          </span>
        </param>
        <param name="familyName">
          <span data-ttu-id="74d94-194">构成新 <see cref="T:System.Windows.Media.FontFamily" /> 的一个或多个系列名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74d94-194">The family name or names that comprise the new <see cref="T:System.Windows.Media.FontFamily" />.</span>
          </span>
          <span data-ttu-id="74d94-195">多个系列名称之间应使用逗号分隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74d94-195">Multiple family names should be separated by commas.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74d94-196">从指定的字体系列名称和可选的基[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] 值初始化 <see cref="T:System.Windows.Media.FontFamily" /> 类的一个新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74d94-196">Initializes a new instance of the <see cref="T:System.Windows.Media.FontFamily" /> class from the specified font family name and an optional base [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74d94-197">`familyName`值可以指定一个相对[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]值，该值需要基[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]来解析字体引用。</span><span class="sxs-lookup"><span data-stu-id="74d94-197">The `familyName` value can specify a relative [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] value, which requires a base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] to resolve the font reference.</span></span> <span data-ttu-id="74d94-198">`baseUri`值可以是`null`。</span><span class="sxs-lookup"><span data-stu-id="74d94-198">The `baseUri` value can be `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74d94-199">下面的代码演示由基的字体引用[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]值和相对[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]值。</span><span class="sxs-lookup"><span data-stu-id="74d94-199">The following code shows a font reference that is composed of a base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] value and a relative [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] value.</span></span>  
  
 [!code-csharp[FontSnippets#FontPackageSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet2)]
 [!code-vb[FontSnippets#FontPackageSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Baseline">
      <MemberSignature Language="C#" Value="public double Baseline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Baseline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.Baseline" />
      <MemberSignature Language="VB.NET" Value="Public Property Baseline As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Baseline { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Baseline : double with get, set" Usage="System.Windows.Media.FontFamily.Baseline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="74d94-200">获取或设置基线与字符单元格顶部之间的距离。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74d94-200">Gets or sets the distance between the baseline and the character cell top.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="74d94-201">一个<see cref="T:System.Double" />，指示基线与字符单元格顶部之间的距离以字体 em 大小的一个分数表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74d94-201">A <see cref="T:System.Double" /> that indicates the distance between the baseline and the character cell top, expressed as a fraction of the font em size.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseUri : Uri" Usage="System.Windows.Media.FontFamily.BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="74d94-202">获取用于解析字体系列名称的基[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74d94-202">Gets the base [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] that is used to resolve a font family name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="74d94-203">一个 <see cref="T:System.Uri" /> 类型的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74d94-203">A value of type <see cref="T:System.Uri" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74d94-204">返回值是`null`如果字体系列名称不依赖于基础[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]用于解析字体引用。</span><span class="sxs-lookup"><span data-stu-id="74d94-204">The return value is `null` if the font family name does not rely on a base [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] for resolving the font reference.</span></span> <span data-ttu-id="74d94-205">若要检索用于构造字体系列名称<xref:System.Windows.Media.FontFamily>对象，请使用<xref:System.Windows.Media.FontFamily.Source%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="74d94-205">To retrieve the font family name that is used to construct the <xref:System.Windows.Media.FontFamily> object, use the <xref:System.Windows.Media.FontFamily.Source%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74d94-206">下面的示例显示了检索的结果<xref:System.Windows.Media.FontFamily.BaseUri%2A>属性从<xref:System.Windows.Media.FontFamily>对象。</span><span class="sxs-lookup"><span data-stu-id="74d94-206">The following example shows the results of retrieving the <xref:System.Windows.Media.FontFamily.BaseUri%2A> property from a <xref:System.Windows.Media.FontFamily> object.</span></span>  
  
 [!code-csharp[FontSnippets#FontPackageSnippet9](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet9)]
 [!code-vb[FontSnippets#FontPackageSnippet9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="fontFamily.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="74d94-207">要比较的 <see cref="T:System.Windows.Media.FontFamily" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74d94-207">The <see cref="T:System.Windows.Media.FontFamily" /> object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="74d94-208">获取一个值，该值指示当前的字体系列对象是否与指定的字体系列对象相同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74d94-208">Gets a value that indicates whether the current font family object and the specified font family object are the same.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74d94-209">如果 <paramref name="o" /> 与当前的 <see cref="T:System.Windows.Media.FontFamily" /> 对象相同，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74d94-209">
              <see langword="true" /> if <paramref name="o" /> is equal to the current <see cref="T:System.Windows.Media.FontFamily" /> object; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="74d94-210">如果 <paramref name="o" /> 不是 <see cref="T:System.Windows.Media.FontFamily" /> 对象，则返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74d94-210">If <paramref name="o" /> is not a <see cref="T:System.Windows.Media.FontFamily" /> object, <see langword="false" /> is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FamilyMaps">
      <MemberSignature Language="C#" Value="public System.Windows.Media.FontFamilyMapCollection FamilyMaps { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.FontFamilyMapCollection FamilyMaps" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.FamilyMaps" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FamilyMaps As FontFamilyMapCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::FontFamilyMapCollection ^ FamilyMaps { System::Windows::Media::FontFamilyMapCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FamilyMaps : System.Windows.Media.FontFamilyMapCollection" Usage="System.Windows.Media.FontFamily.FamilyMaps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.FontFamilyMapCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="74d94-211">获取 <see cref="T:System.Windows.Media.FontFamilyMap" /> 对象的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74d94-211">Gets the collection of <see cref="T:System.Windows.Media.FontFamilyMap" /> objects.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="74d94-212">一个包含 <see cref="T:System.Windows.Media.FontFamilyMapCollection" /> 对象的 <see cref="T:System.Windows.Media.FontFamilyMap" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74d94-212">A <see cref="T:System.Windows.Media.FontFamilyMapCollection" /> that contains <see cref="T:System.Windows.Media.FontFamilyMap" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74d94-213">有关<xref:System.Windows.Media.FontFamily>使用字体系列名称，创建的对象<xref:System.Windows.Media.FontFamily.FamilyMaps%2A>属性返回一个空的只读集合。</span><span class="sxs-lookup"><span data-stu-id="74d94-213">For <xref:System.Windows.Media.FontFamily> objects that are created by using a font family name, the <xref:System.Windows.Media.FontFamily.FamilyMaps%2A> property returns an empty, read-only collection.</span></span>  
  
 <span data-ttu-id="74d94-214"><xref:System.Windows.Media.FontFamilyMap>对象定义哪种字体用于显示一组指定的 Unicode 字符的指定的区域性。</span><span class="sxs-lookup"><span data-stu-id="74d94-214">The <xref:System.Windows.Media.FontFamilyMap> object defines which font to use for displaying a specified set of Unicode characters of a specified culture.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FamilyNames">
      <MemberSignature Language="C#" Value="public System.Windows.Media.LanguageSpecificStringDictionary FamilyNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.LanguageSpecificStringDictionary FamilyNames" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.FamilyNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FamilyNames As LanguageSpecificStringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::LanguageSpecificStringDictionary ^ FamilyNames { System::Windows::Media::LanguageSpecificStringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FamilyNames : System.Windows.Media.LanguageSpecificStringDictionary" Usage="System.Windows.Media.FontFamily.FamilyNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.LanguageSpecificStringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="74d94-215">获取表示 <see cref="T:System.Globalization.CultureInfo" /> 对象的字体系列名称的字符串和 <see cref="T:System.Windows.Media.FontFamily" /> 值的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74d94-215">Gets a collection of strings and <see cref="T:System.Globalization.CultureInfo" /> values that represent the font family names of the <see cref="T:System.Windows.Media.FontFamily" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="74d94-216">一个<see cref="T:System.Windows.Media.LanguageSpecificStringDictionary" />表示字体系列名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74d94-216">A <see cref="T:System.Windows.Media.LanguageSpecificStringDictionary" /> that represents the font family names.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[FontSnippets#106](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#106)]
 [!code-vb[FontSnippets#106](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#106)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FamilyTypefaces">
      <MemberSignature Language="C#" Value="public System.Windows.Media.FamilyTypefaceCollection FamilyTypefaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.FamilyTypefaceCollection FamilyTypefaces" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.FamilyTypefaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FamilyTypefaces As FamilyTypefaceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::FamilyTypefaceCollection ^ FamilyTypefaces { System::Windows::Media::FamilyTypefaceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FamilyTypefaces : System.Windows.Media.FamilyTypefaceCollection" Usage="System.Windows.Media.FontFamily.FamilyTypefaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.FamilyTypefaceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="74d94-217">获取 <see cref="T:System.Windows.Media.FontFamily" /> 对象的字体集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74d94-217">Gets a collection of typefaces for the <see cref="T:System.Windows.Media.FontFamily" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="74d94-218">一个<see cref="T:System.Windows.Media.FamilyTypefaceCollection" />表示的字体集合<see cref="T:System.Windows.Media.FontFamily" />对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74d94-218">A <see cref="T:System.Windows.Media.FamilyTypefaceCollection" /> that represents a collection of typefaces for the <see cref="T:System.Windows.Media.FontFamily" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_FamilyTypefaces"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="74d94-219">XAML 属性元素用法</span><span class="sxs-lookup"><span data-stu-id="74d94-219">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.FamilyTypefaces>  
    <OneOrMoreFontFamilyTypefaces/>  
  </object.FamilyTypefaces>  
</object>  
```  
  
<a name="xamlValues_FamilyTypefaces"></a>   
## <a name="xaml-values"></a><span data-ttu-id="74d94-220">XAML 值</span><span class="sxs-lookup"><span data-stu-id="74d94-220">XAML Values</span></span>  
 <span data-ttu-id="74d94-221">*OneOrMoreFontFamilyTypefaces*</span><span class="sxs-lookup"><span data-stu-id="74d94-221">*OneOrMoreFontFamilyTypefaces*</span></span>  
 <span data-ttu-id="74d94-222">一个或多个字体<xref:System.Windows.Media.FontFamily>对象。</span><span class="sxs-lookup"><span data-stu-id="74d94-222">One or more of typefaces for the <xref:System.Windows.Media.FontFamily> object.</span></span>  
  
   
  
## Examples  
 [!code-csharp[FontSnippets#107](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#107)]
 [!code-vb[FontSnippets#107](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#107)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="fontFamily.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="74d94-223">作为 <see cref="T:System.Windows.Media.FontFamily" /> 的哈希函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74d94-223">Serves as a hash function for <see cref="T:System.Windows.Media.FontFamily" />.</span>
          </span>
          <span data-ttu-id="74d94-224">它适用于哈希算法和数据结构（如哈希表）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74d94-224">It is suitable for use in hashing algorithms and data structures such as a hash table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74d94-225">一个 <see cref="T:System.Int32" /> 值，表示当前对象的哈希代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74d94-225">An <see cref="T:System.Int32" /> value that represents the hash code for the current object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypefaces">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Windows.Media.Typeface&gt; GetTypefaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.Windows.Media.Typeface&gt; GetTypefaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.GetTypefaces" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypefaces () As ICollection(Of Typeface)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::Windows::Media::Typeface ^&gt; ^ GetTypefaces();" />
      <MemberSignature Language="F#" Value="member this.GetTypefaces : unit -&gt; System.Collections.Generic.ICollection&lt;System.Windows.Media.Typeface&gt;" Usage="fontFamily.GetTypefaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Windows.Media.Typeface&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="74d94-226">返回 <see cref="T:System.Windows.Media.Typeface" /> 对象的集合，这些对象表示默认的系统字体位置中的字体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74d94-226">Returns a collection of <see cref="T:System.Windows.Media.Typeface" /> objects that represent the type faces in the default system font location.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74d94-227">
            <see cref="T:System.Collections.Generic.ICollection`1" /> 对象的 <see cref="T:System.Windows.Media.Typeface" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74d94-227">An <see cref="T:System.Collections.Generic.ICollection`1" /> of <see cref="T:System.Windows.Media.Typeface" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[FontSnippets#104](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#104)]
 [!code-vb[FontSnippets#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#104)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineSpacing">
      <MemberSignature Language="C#" Value="public double LineSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LineSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.LineSpacing" />
      <MemberSignature Language="VB.NET" Value="Public Property LineSpacing As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double LineSpacing { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.LineSpacing : double with get, set" Usage="System.Windows.Media.FontFamily.LineSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="74d94-228">获取或设置 <see cref="T:System.Windows.Media.FontFamily" /> 对象的行距值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74d94-228">Gets or sets the line spacing value for the <see cref="T:System.Windows.Media.FontFamily" /> object.</span>
          </span>
          <span data-ttu-id="74d94-229">行距是使用此字体的文本的建议基线间距离（相对于全身大小）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74d94-229">The line spacing is the recommended baseline-to-baseline distance for the text in this font relative to the em size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="74d94-230">一个<see cref="T:System.Double" />，表示行的行距<see cref="T:System.Windows.Media.FontFamily" />对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74d94-230">A <see cref="T:System.Double" /> that represents the line spacing for the <see cref="T:System.Windows.Media.FontFamily" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.Source" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Source : string" Usage="System.Windows.Media.FontFamily.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="74d94-231">获取用于构造 <see cref="T:System.Windows.Media.FontFamily" /> 对象的字体系列名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74d94-231">Gets the font family name that is used to construct the <see cref="T:System.Windows.Media.FontFamily" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="74d94-232">字体系列名称的<see cref="T:System.Windows.Media.FontFamily" />对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74d94-232">The font family name of the <see cref="T:System.Windows.Media.FontFamily" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74d94-233">若要返回基[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]的值<xref:System.Windows.Media.FontFamily>对象，请使用<xref:System.Windows.Media.FontFamily.BaseUri%2A>。</span><span class="sxs-lookup"><span data-stu-id="74d94-233">To return the base [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] value of a <xref:System.Windows.Media.FontFamily> object, use the <xref:System.Windows.Media.FontFamily.BaseUri%2A>.</span></span>  
  
 <span data-ttu-id="74d94-234">如果<xref:System.Windows.Media.FontFamily>而无需指定字体系列名称创建对象时，返回值为<xref:System.String.Empty>。</span><span class="sxs-lookup"><span data-stu-id="74d94-234">If the <xref:System.Windows.Media.FontFamily> object was created without specifying a font family name, the return value is <xref:System.String.Empty>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74d94-235">下面的示例显示了检索的结果<xref:System.Windows.Media.FontFamily.BaseUri%2A>并<xref:System.Windows.Media.FontFamily.Source%2A>属性值从<xref:System.Windows.Media.FontFamily>对象。</span><span class="sxs-lookup"><span data-stu-id="74d94-235">The following example shows the results of retrieving the <xref:System.Windows.Media.FontFamily.BaseUri%2A> and <xref:System.Windows.Media.FontFamily.Source%2A> property values from a <xref:System.Windows.Media.FontFamily> object.</span></span>  
  
 [!code-csharp[FontSnippets#FontPackageSnippet10](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet10)]
 [!code-vb[FontSnippets#FontPackageSnippet10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="fontFamily.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="74d94-236">返回 <see cref="P:System.Windows.Media.FontFamily.Source" /> 属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74d94-236">Returns the value of the <see cref="P:System.Windows.Media.FontFamily.Source" /> property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="74d94-237">
            <see cref="T:System.Windows.Media.FontFamily" /> 对象的源位置，包括目录或[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] 位置引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="74d94-237">The source location of the <see cref="T:System.Windows.Media.FontFamily" /> object, including the directory or [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] location reference.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74d94-238">如果<xref:System.Windows.Media.FontFamily>而无需指定字体系列名称创建对象时，返回值为<xref:System.String.Empty>。</span><span class="sxs-lookup"><span data-stu-id="74d94-238">If the <xref:System.Windows.Media.FontFamily> object was created without specifying a font family name, the return value is <xref:System.String.Empty>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>