<Type Name="DrawingVisual" FullName="System.Windows.Media.DrawingVisual">
  <TypeSignature Language="C#" Value="public class DrawingVisual : System.Windows.Media.ContainerVisual" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DrawingVisual extends System.Windows.Media.ContainerVisual" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.DrawingVisual" />
  <TypeSignature Language="VB.NET" Value="Public Class DrawingVisual&#xA;Inherits ContainerVisual" />
  <TypeSignature Language="C++ CLI" Value="public ref class DrawingVisual : System::Windows::Media::ContainerVisual" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.ContainerVisual</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="db5d5-101"><see cref="T:System.Windows.Media.DrawingVisual" /> 是可用于在屏幕上呈现矢量图形的视觉对象。</span><span class="sxs-lookup"><span data-stu-id="db5d5-101"><see cref="T:System.Windows.Media.DrawingVisual" /> is a visual object that can be used to render vector graphics on the screen.</span></span> <span data-ttu-id="db5d5-102">内容由系统保留。</span><span class="sxs-lookup"><span data-stu-id="db5d5-102">The content is persisted by the system.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db5d5-103"><xref:System.Windows.Media.DrawingVisual> 是用于呈现形状、 图像或文本的轻量绘制类。</span><span class="sxs-lookup"><span data-stu-id="db5d5-103"><xref:System.Windows.Media.DrawingVisual> is a lightweight drawing class that is used to render shapes, images, or text.</span></span> <span data-ttu-id="db5d5-104">此类是被视为轻量，因为它不提供布局、 输入、 焦点或事件处理中，这将提高其性能。</span><span class="sxs-lookup"><span data-stu-id="db5d5-104">This class is considered lightweight because it does not provide layout, input, focus, or event handling, which improves its performance.</span></span> <span data-ttu-id="db5d5-105">因此，绘图非常适用于背景和剪贴画。</span><span class="sxs-lookup"><span data-stu-id="db5d5-105">For this reason, drawings are ideal for backgrounds and clip art.</span></span>  
  
 <span data-ttu-id="db5d5-106">若要使用<xref:System.Windows.Media.DrawingVisual>你需要创建主机容器对象的对象。</span><span class="sxs-lookup"><span data-stu-id="db5d5-106">In order to use <xref:System.Windows.Media.DrawingVisual> objects, you need to create a host container for the objects.</span></span> <span data-ttu-id="db5d5-107">主机容器对象必须源自<xref:System.Windows.FrameworkElement>类，该类提供的布局和事件处理支持<xref:System.Windows.Media.DrawingVisual>类不支持。</span><span class="sxs-lookup"><span data-stu-id="db5d5-107">The host container object must be derived from the <xref:System.Windows.FrameworkElement> class, which provides the layout and event handling support that the <xref:System.Windows.Media.DrawingVisual> class does not support.</span></span> <span data-ttu-id="db5d5-108">主机容器对象不显示任何可视属性，因为其主要用途是以包含子对象。</span><span class="sxs-lookup"><span data-stu-id="db5d5-108">The host container object does not display any visual properties, since its main purpose is to contain child objects.</span></span> <span data-ttu-id="db5d5-109">有关详细信息，请参阅[使用 DrawingVisual 对象](~/docs/framework/wpf/graphics-multimedia/using-drawingvisual-objects.md)。</span><span class="sxs-lookup"><span data-stu-id="db5d5-109">For more information, see [Using DrawingVisual Objects](~/docs/framework/wpf/graphics-multimedia/using-drawingvisual-objects.md).</span></span>  
  
 <span data-ttu-id="db5d5-110">有关完整的示例演示如何创建<xref:System.Windows.Media.DrawingVisual>对象与主机容器，请参阅[命中测试使用 DrawingVisuals 示例](http://go.microsoft.com/fwlink/?LinkID=159994)。</span><span class="sxs-lookup"><span data-stu-id="db5d5-110">For a complete example showing how to create <xref:System.Windows.Media.DrawingVisual> objects with a host container, see the [Hit Test Using DrawingVisuals Sample](http://go.microsoft.com/fwlink/?LinkID=159994) .</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawingVisual ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingVisual.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawingVisual();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="db5d5-111">初始化 <see cref="T:System.Windows.Media.DrawingVisual" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="db5d5-111">Initializes a new instance of the <see cref="T:System.Windows.Media.DrawingVisual" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db5d5-112">当你创建<xref:System.Windows.Media.DrawingVisual>对象，它不包含任何绘制内容。</span><span class="sxs-lookup"><span data-stu-id="db5d5-112">When you create a <xref:System.Windows.Media.DrawingVisual> object, it has no drawing content.</span></span> <span data-ttu-id="db5d5-113">可以通过检索对象的绘图上下文，并在其中绘制添加文本、 图形或映像内容。</span><span class="sxs-lookup"><span data-stu-id="db5d5-113">You can add text, graphic, or image content by retrieving the drawing context of the object and drawing into it.</span></span> <span data-ttu-id="db5d5-114">绘制上下文返回通过调用<xref:System.Windows.Media.DrawingVisual.RenderOpen%2A>方法<xref:System.Windows.Media.DrawingVisual>对象。</span><span class="sxs-lookup"><span data-stu-id="db5d5-114">A drawing context is returned by calling the <xref:System.Windows.Media.DrawingVisual.RenderOpen%2A> method of a <xref:System.Windows.Media.DrawingVisual> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db5d5-115">在下面的示例中，<xref:System.Windows.Media.DrawingVisual>创建对象时，控件，矩形绘制到它的绘图上下文。</span><span class="sxs-lookup"><span data-stu-id="db5d5-115">In the following example, a <xref:System.Windows.Media.DrawingVisual> object is created, and a rectangle is drawn into its drawing context.</span></span> <span data-ttu-id="db5d5-116">请注意，必须调用<xref:System.Windows.Media.DrawingContext.Close%2A>方法<xref:System.Windows.Media.DrawingContext>将绘制内容保留。</span><span class="sxs-lookup"><span data-stu-id="db5d5-116">Notice that you must call the <xref:System.Windows.Media.DrawingContext.Close%2A> method of the <xref:System.Windows.Media.DrawingContext> to persist drawing content.</span></span>  
  
 [!code-csharp[DrawingVisualSample#101](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#101)]
 [!code-vb[DrawingVisualSample#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Drawing">
      <MemberSignature Language="C#" Value="public System.Windows.Media.DrawingGroup Drawing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.DrawingGroup Drawing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.DrawingVisual.Drawing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Drawing As DrawingGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::DrawingGroup ^ Drawing { System::Windows::Media::DrawingGroup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DrawingGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db5d5-117">获取 <see cref="T:System.Windows.Media.DrawingVisual" /> 对象的绘图内容。</span><span class="sxs-lookup"><span data-stu-id="db5d5-117">Gets the drawing content of the <see cref="T:System.Windows.Media.DrawingVisual" /> object.</span></span></summary>
        <value><span data-ttu-id="db5d5-118">获取一个 <see cref="T:System.Windows.Media.DrawingGroup" /> 类型的值，该值表示 <see cref="T:System.Windows.Media.Drawing" /> 中 <see cref="T:System.Windows.Media.DrawingVisual" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="db5d5-118">Gets a value of type <see cref="T:System.Windows.Media.DrawingGroup" /> that represents the collection of <see cref="T:System.Windows.Media.Drawing" /> objects in the <see cref="T:System.Windows.Media.DrawingVisual" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db5d5-119">视觉对象将其呈现的数据存储为向量图形指令列表。</span><span class="sxs-lookup"><span data-stu-id="db5d5-119">A visual object stores its rendering data as a vector graphics instruction list.</span></span> <span data-ttu-id="db5d5-120">指令列表中的每一项表示一组低级别图形中的数据序列化格式。</span><span class="sxs-lookup"><span data-stu-id="db5d5-120">Each item in the instruction list represents a low-level set of graphics data in a serialized format.</span></span> <span data-ttu-id="db5d5-121">有关如何将视觉对象的详细信息将图形数据存储，请参阅[WPF 图形呈现概述](~/docs/framework/wpf/graphics-multimedia/wpf-graphics-rendering-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="db5d5-121">For more information on how visual objects store graphics data, see [WPF Graphics Rendering Overview](~/docs/framework/wpf/graphics-multimedia/wpf-graphics-rendering-overview.md).</span></span>  
  
 <span data-ttu-id="db5d5-122">对返回的任何更改<xref:System.Windows.Media.DrawingGroup>值不会通过保存<xref:System.Windows.Media.DrawingVisual>。</span><span class="sxs-lookup"><span data-stu-id="db5d5-122">Any change to the returned <xref:System.Windows.Media.DrawingGroup> value is not persisted by the <xref:System.Windows.Media.DrawingVisual>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db5d5-123">在下面的示例中，<xref:System.Windows.Media.DrawingGroup>每个值<xref:System.Windows.Media.DrawingVisual>visual 枚举宿主中。</span><span class="sxs-lookup"><span data-stu-id="db5d5-123">In the following example, the <xref:System.Windows.Media.DrawingGroup> value of each <xref:System.Windows.Media.DrawingVisual> in a host visual is enumerated.</span></span>  
  
 [!code-csharp[VisualSnippets#DrawingVisualSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/DrawingVisual.xaml.cs#drawingvisualsnippet1)]
 [!code-vb[VisualSnippets#DrawingVisualSnippet1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/drawingvisual.xaml.vb#drawingvisualsnippet1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTestCore">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="db5d5-124"><see cref="Overload:System.Windows.Media.DrawingVisual.HitTestCore" /> 确定是否已命中可视对象的边界。</span><span class="sxs-lookup"><span data-stu-id="db5d5-124"><see cref="Overload:System.Windows.Media.DrawingVisual.HitTestCore" /> determines whether the bounds of the visual object has been hit.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.GeometryHitTestResult HitTestCore (System.Windows.Media.GeometryHitTestParameters hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.GeometryHitTestResult HitTestCore(class System.Windows.Media.GeometryHitTestParameters hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingVisual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HitTestCore (hitTestParameters As GeometryHitTestParameters) As GeometryHitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::GeometryHitTestResult ^ HitTestCore(System::Windows::Media::GeometryHitTestParameters ^ hitTestParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.GeometryHitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.GeometryHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParameters"><span data-ttu-id="db5d5-125">一个 <see cref="T:System.Windows.Media.GeometryHitTestParameters" /> 类型的值，指定命中测试所依据的 <see cref="T:System.Windows.Media.Geometry" />。</span><span class="sxs-lookup"><span data-stu-id="db5d5-125">A value of type <see cref="T:System.Windows.Media.GeometryHitTestParameters" /> that specifies the <see cref="T:System.Windows.Media.Geometry" /> to hit test against.</span></span></param>
        <summary><span data-ttu-id="db5d5-126">确定可视对象的边界中是否存在几何图形值。</span><span class="sxs-lookup"><span data-stu-id="db5d5-126">Determines whether a geometry value is within the bounds of the visual object.</span></span></summary>
        <returns><span data-ttu-id="db5d5-127">一个 <see cref="T:System.Windows.Media.GeometryHitTestResult" /> 类型的值。</span><span class="sxs-lookup"><span data-stu-id="db5d5-127">A value of type <see cref="T:System.Windows.Media.GeometryHitTestResult" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.HitTestResult HitTestCore (System.Windows.Media.PointHitTestParameters hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.HitTestResult HitTestCore(class System.Windows.Media.PointHitTestParameters hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingVisual.HitTestCore(System.Windows.Media.PointHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HitTestCore (hitTestParameters As PointHitTestParameters) As HitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::HitTestResult ^ HitTestCore(System::Windows::Media::PointHitTestParameters ^ hitTestParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.PointHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParameters"><span data-ttu-id="db5d5-128">一个 <see cref="T:System.Windows.Media.PointHitTestParameters" /> 类型的值，指定命中测试所依据的 <see cref="T:System.Windows.Point" />。</span><span class="sxs-lookup"><span data-stu-id="db5d5-128">A value of type <see cref="T:System.Windows.Media.PointHitTestParameters" /> that specifies the <see cref="T:System.Windows.Point" /> to hit test against.</span></span></param>
        <summary><span data-ttu-id="db5d5-129">确定在 <see cref="T:System.Windows.Media.DrawingVisual" /> 对象的边界中是否存在点坐标值。</span><span class="sxs-lookup"><span data-stu-id="db5d5-129">Determines whether a point coordinate value is within the bounds of the <see cref="T:System.Windows.Media.DrawingVisual" /> object.</span></span></summary>
        <returns><span data-ttu-id="db5d5-130">一个 <see cref="T:System.Windows.Media.HitTestResult" /> 类型的值，表示从命中测试中返回的 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="db5d5-130">A value of type <see cref="T:System.Windows.Media.HitTestResult" />, representing the <see cref="T:System.Windows.Media.Visual" /> returned from a hit test.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db5d5-131"><xref:System.Windows.Media.HitTestResult.VisualHit%2A>属性的返回值表示命中的视觉对象。</span><span class="sxs-lookup"><span data-stu-id="db5d5-131">The <xref:System.Windows.Media.HitTestResult.VisualHit%2A> property of the return value represents the visual object that was hit.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderOpen">
      <MemberSignature Language="C#" Value="public System.Windows.Media.DrawingContext RenderOpen ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.DrawingContext RenderOpen() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingVisual.RenderOpen" />
      <MemberSignature Language="VB.NET" Value="Public Function RenderOpen () As DrawingContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::DrawingContext ^ RenderOpen();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DrawingContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="db5d5-132">打开用于呈现的 <see cref="T:System.Windows.Media.DrawingVisual" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="db5d5-132">Opens the <see cref="T:System.Windows.Media.DrawingVisual" /> object for rendering.</span></span> <span data-ttu-id="db5d5-133">返回的 <see cref="T:System.Windows.Media.DrawingContext" /> 值可用于呈现为 <see cref="T:System.Windows.Media.DrawingVisual" />。</span><span class="sxs-lookup"><span data-stu-id="db5d5-133">The returned <see cref="T:System.Windows.Media.DrawingContext" /> value can be used to render into the <see cref="T:System.Windows.Media.DrawingVisual" />.</span></span></summary>
        <returns><span data-ttu-id="db5d5-134">一个 <see cref="T:System.Windows.Media.DrawingContext" /> 类型的值。</span><span class="sxs-lookup"><span data-stu-id="db5d5-134">A value of type <see cref="T:System.Windows.Media.DrawingContext" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db5d5-135">当调用<xref:System.Windows.Media.DrawingContext.Close%2A>方法<xref:System.Windows.Media.DrawingContext>、 绘图为定义的任何先前的绘制内容的内容将替换当前<xref:System.Windows.Media.DrawingVisual>。</span><span class="sxs-lookup"><span data-stu-id="db5d5-135">When you call the <xref:System.Windows.Media.DrawingContext.Close%2A> method of the <xref:System.Windows.Media.DrawingContext>, the current drawing content replaces any previous drawing content defined for the <xref:System.Windows.Media.DrawingVisual>.</span></span> <span data-ttu-id="db5d5-136">这意味着将没有办法将新的绘制内容追加到现有的绘制内容。</span><span class="sxs-lookup"><span data-stu-id="db5d5-136">This means that there is no way to append new drawing content to existing drawing content.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db5d5-137">在下面的示例中，<xref:System.Windows.Media.DrawingVisual>创建对象，并将其<xref:System.Windows.Media.DrawingContext>返回。</span><span class="sxs-lookup"><span data-stu-id="db5d5-137">In the following example, a <xref:System.Windows.Media.DrawingVisual> object is created, and its <xref:System.Windows.Media.DrawingContext> returned.</span></span>  
  
 [!code-csharp[DrawingVisualSample#101](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#101)]
 [!code-vb[DrawingVisualSample#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#101)]  
  
 <span data-ttu-id="db5d5-138">你绘图上下文中绘制的顺序非常重要 — 每个后续绘图绘制在其他之上。</span><span class="sxs-lookup"><span data-stu-id="db5d5-138">The order in which you draw into the drawing context is important—each succeeding drawing is drawn on top of the others.</span></span> <span data-ttu-id="db5d5-139">在下面的示例中，在该矩形是绘制第一个，则文本。</span><span class="sxs-lookup"><span data-stu-id="db5d5-139">In the following example, the rectangle is drawn first, then the text.</span></span>  
  
 [!code-csharp[VisualSnippets#RenderOrderSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Snippets.cs#renderordersnippet1)]
 [!code-vb[VisualSnippets#RenderOrderSnippet1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/snippets.vb#renderordersnippet1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>