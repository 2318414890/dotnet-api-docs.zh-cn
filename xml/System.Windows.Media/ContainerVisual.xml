<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ContainerVisual.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50fa03054dbf34d0d8371cda37b5ffc4bcb715941.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0fa03054dbf34d0d8371cda37b5ffc4bcb715941</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.ContainerVisual">
          <source>Manages a collection of <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> objects.</source>
          <target state="translated">管理 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 对象集合。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.ContainerVisual">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph> class is used as a container for a collection of <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph>类用作的集合的容器<ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.ContainerVisual">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph> class derives from the <ph id="ph2">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph> class, such that the <ph id="ph3">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph> class can also contain a collection of visual objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph>类派生自<ph id="ph2">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph>类，以便<ph id="ph3">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph>类也可以包含的视觉对象的集合。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.ContainerVisual">
          <source>The following example shows how to create a <ph id="ph1">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph> object that is used as the parent for two <ph id="ph2">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph> objects.</source>
          <target state="translated">下面的示例演示如何创建<ph id="ph1">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph>用作两个父对象<ph id="ph2">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.ContainerVisual">
          <source>Objects that are added to the <ph id="ph1">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph> object must be added in reverse z-order (bottom to top) to ensure they are rendering in the correct drawing order.</source>
          <target state="translated">添加到对象<ph id="ph1">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph>对象必须添加相反的 z 顺序 （从底部到顶部），以确保它们呈现在正确的绘制顺序。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.ContainerVisual">
          <source>In order for the visual tree to be enumerated correctly, the example provides overridden implementations of the <ph id="ph1">&lt;xref:System.Windows.Media.ContainerVisual.GetVisualChild%2A&gt;</ph> method and <ph id="ph2">&lt;xref:System.Windows.Media.ContainerVisual.VisualChildrenCount%2A&gt;</ph> property.</source>
          <target state="translated">为了使可视化树中正确枚举，该示例提供的重写的实现<ph id="ph1">&lt;xref:System.Windows.Media.ContainerVisual.GetVisualChild%2A&gt;</ph>方法和<ph id="ph2">&lt;xref:System.Windows.Media.ContainerVisual.VisualChildrenCount%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.ContainerVisual.#ctor">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph> class.</source>
          <target state="translated">创建 <ph id="ph1">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.ContainerVisual.#ctor">
          <source>The following example shows how to create a new instance of a <ph id="ph1">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph> object, and then add child visual objects to it.</source>
          <target state="translated">下面的示例演示如何创建的新实例<ph id="ph1">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph>对象，并将子视觉对象添加到它。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.ContainerVisual.BitmapEffect">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Windows.Media.Effects.BitmapEffect" /&gt;</ph> value for the <ph id="ph2">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph>.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Effects.BitmapEffect" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.BitmapEffect">
          <source>The bitmap effect for this visual object.</source>
          <target state="translated">此可视对象的位图效果。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.ContainerVisual.BitmapEffectInput">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Windows.Media.Effects.BitmapEffectInput" /&gt;</ph> value for the <ph id="ph2">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph>.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Effects.BitmapEffectInput" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.BitmapEffectInput">
          <source>The bitmap effect input value for this visual object.</source>
          <target state="translated">此可视对象的位图效果输入值。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.ContainerVisual.CacheMode">
          <source>Gets or sets a cached representation of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph>.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph> 的缓存表示形式。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.CacheMode">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Media.CacheMode" /&gt;</ph> that holds a cached representation of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.CacheMode" /&gt;</ph>，用于容纳 <ph id="ph2">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph> 的缓存表示形式。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.CacheMode">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Media.ContainerVisual.CacheMode%2A&gt;</ph> property when you need to increase performance for content that is time-consuming to render.</source>
          <target state="translated">设置<ph id="ph1">&lt;xref:System.Windows.Media.ContainerVisual.CacheMode%2A&gt;</ph>属性时需要增加很长时间才能呈现的内容的性能。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.CacheMode">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache&gt;</ph>.</source>
          <target state="translated">有关详情，请参阅<ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.ContainerVisual.Children">
          <source>Gets the child collection of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph>.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph> 的子集合。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.Children">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> that contains the children of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph>，包含 <ph id="ph2">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph> 的子对象。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.Children">
          <source>The following example shows how to retrieve the <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> from a <ph id="ph2">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph> object.</source>
          <target state="translated">下面的示例演示如何检索<ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>从<ph id="ph2">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.ContainerVisual.Clip">
          <source>Gets or sets the clipping region of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph>.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph> 的剪辑区域。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.Clip">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> that defines the clipping region.</source>
          <target state="translated">用于定义剪辑区域的 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.ContainerVisual.ContentBounds">
          <source>Gets the bounding box for the contents of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph>.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph> 内容的边界框。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.ContentBounds">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> that specifies the bounding box.</source>
          <target state="translated">一个指定边界框的 <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.ContentBounds">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.ContainerVisual.DescendantBounds%2A&gt;</ph> property to return the union of all the content bounding boxes for all of the descendants of a <ph id="ph2">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph> object, but not the object itself.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Windows.Media.ContainerVisual.DescendantBounds%2A&gt;</ph>属性可返回的所有内容边界框的所有的后代中的联合<ph id="ph2">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph>对象，而不是对象本身。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.ContentBounds">
          <source>The following example shows how to retrieve the bounding rectangle of a <ph id="ph1">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph> object.</source>
          <target state="translated">下面的示例演示如何检索的绑定矩形<ph id="ph1">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.ContainerVisual.DescendantBounds">
          <source>Gets the union of all the content bounding boxes for all of the descendants of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph>, but not including the contents of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph>.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph> 所有子代的所有内容边界框的联合，但不包括 <ph id="ph2">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph> 的内容。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.DescendantBounds">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> that specifies the combination bounding box.</source>
          <target state="translated">一个指定组合边界框的 <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.DescendantBounds">
          <source>Get the <ph id="ph1">&lt;xref:System.Windows.Media.ContainerVisual.ContentBounds%2A&gt;</ph> property to return the cached bounding box rectangle for the <ph id="ph2">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph> itself.</source>
          <target state="translated">获取<ph id="ph1">&lt;xref:System.Windows.Media.ContainerVisual.ContentBounds%2A&gt;</ph>属性以返回有关缓存的边界框矩形<ph id="ph2">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph>本身。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.DescendantBounds">
          <source>The following example shows how to retrieve the bounding rectangle of a <ph id="ph1">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph> object's descendants.</source>
          <target state="translated">下面的示例演示如何检索的绑定矩形<ph id="ph1">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph>对象的后代。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.ContainerVisual.Effect">
          <source>Gets or sets the bitmap effect to apply to the <ph id="ph1">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph>.</source>
          <target state="translated">获取或设置要应用于 <ph id="ph1">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph> 的位图效果。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.Effect">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Media.Effects.Effect" /&gt;</ph> that represents the bitmap effect.</source>
          <target state="translated">一个表示位图效果的 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Effects.Effect" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.ContainerVisual.GetVisualChild(System.Int32)">
          <source>A 32-bit signed integer that represents the index value of the child <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated">一个 32 位带符号整数，表示子 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 的索引值。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.ContainerVisual.GetVisualChild(System.Int32)">
          <source>The value of <bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> must be between 0 and <ph id="ph1">&lt;see cref="P:System.Windows.Media.ContainerVisual.VisualChildrenCount" /&gt;</ph> - 1.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>index<ept id="p1">&lt;/c&gt;</ept> 的值必须介于 0 和 <ph id="ph1">&lt;see cref="P:System.Windows.Media.ContainerVisual.VisualChildrenCount" /&gt;</ph> - 1 之间。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.ContainerVisual.GetVisualChild(System.Int32)">
          <source>Returns a specified child <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> for the parent <ph id="ph2">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph>.</source>
          <target state="translated">返回父 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 的指定子 <ph id="ph2">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.ContainerVisual.GetVisualChild(System.Int32)">
          <source>The child <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated">子 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.ContainerVisual.GetVisualChild(System.Int32)">
          <source>By default, a <ph id="ph1">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph> does not have any children.</source>
          <target state="translated">默认情况下，<ph id="ph1">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph>没有任何子级。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.ContainerVisual.GetVisualChild(System.Int32)">
          <source>The following example shows how to create a <ph id="ph1">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph> object that is used as the parent for two <ph id="ph2">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph> objects.</source>
          <target state="translated">下面的示例演示如何创建<ph id="ph1">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph>用作两个父对象<ph id="ph2">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.ContainerVisual.GetVisualChild(System.Int32)">
          <source>Objects that are added to the <ph id="ph1">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph> object must be added in reverse z-order (bottom to top) to ensure they are rendering in the correct drawing order.</source>
          <target state="translated">添加到对象<ph id="ph1">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph>对象必须添加相反的 z 顺序 （从底部到顶部），以确保它们呈现在正确的绘制顺序。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.ContainerVisual.GetVisualChild(System.Int32)">
          <source>In order for the visual tree to be enumerated correctly, the example provides overridden implementations of the <ph id="ph1">&lt;xref:System.Windows.Media.ContainerVisual.GetVisualChild%2A&gt;</ph> method and <ph id="ph2">&lt;xref:System.Windows.Media.ContainerVisual.VisualChildrenCount%2A&gt;</ph> property.</source>
          <target state="translated">为了使可视化树中正确枚举，该示例提供的重写的实现<ph id="ph1">&lt;xref:System.Windows.Media.ContainerVisual.GetVisualChild%2A&gt;</ph>方法和<ph id="ph2">&lt;xref:System.Windows.Media.ContainerVisual.VisualChildrenCount%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.ContainerVisual.GetVisualChild(System.Int32)">
          <source>The visual tree cannot be modified during this call.</source>
          <target state="translated">此调用期间，无法修改的可视化树。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.ContainerVisual">
          <source>Return top-most visual object of a hit test.</source>
          <target state="translated">返回命中测试的最顶端可视对象。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.ContainerVisual.HitTest(System.Windows.Point)">
          <source>The point value to hit test.</source>
          <target state="translated">命中测试的点值。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.ContainerVisual.HitTest(System.Windows.Point)">
          <source>Returns the top-most visual object of a hit test by specifying a <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph>.</source>
          <target state="translated">通过指定 <ph id="ph1">&lt;see cref="T:System.Windows.Point" /&gt;</ph> 返回命中测试最顶端的可视对象。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.ContainerVisual.HitTest(System.Windows.Point)">
          <source>The hit test result of the visual returned as a <ph id="ph1">&lt;see cref="T:System.Windows.Media.HitTestResult" /&gt;</ph> type.</source>
          <target state="translated">以 <ph id="ph1">&lt;see cref="T:System.Windows.Media.HitTestResult" /&gt;</ph> 类型返回的视觉效果的命中测试结果。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.ContainerVisual.HitTest(System.Windows.Point)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.HitTestResult.VisualHit%2A&gt;</ph> property of the return value represents the <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph> object that was hit.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.HitTestResult.VisualHit%2A&gt;</ph>属性的返回值表示<ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph>命中对象。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.ContainerVisual.HitTest(System.Windows.Point)">
          <source>The following example shows how to retrieve the <ph id="ph1">&lt;xref:System.Windows.Media.HitTestResult&gt;</ph> return value from the <ph id="ph2">&lt;xref:System.Windows.Media.ContainerVisual.HitTest%2A&gt;</ph> method.</source>
          <target state="translated">下面的示例演示如何检索<ph id="ph1">&lt;xref:System.Windows.Media.HitTestResult&gt;</ph>返回值从<ph id="ph2">&lt;xref:System.Windows.Media.ContainerVisual.HitTest%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.ContainerVisual.HitTest(System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)">
          <source>The delegate that allows you to ignore parts of the visual tree that you are not interested in processing in your hit test results.</source>
          <target state="translated">允许在处理命中测试结果时忽略无关的可视化树部分的委托。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.ContainerVisual.HitTest(System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)">
          <source>The delegate that is used to control the return of hit test information.</source>
          <target state="translated">用于控制返回命中测试信息的委托。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.ContainerVisual.HitTest(System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)">
          <source>Defines the set of parameters for a hit test.</source>
          <target state="translated">定义命中测试的参数集。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.ContainerVisual.HitTest(System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)">
          <source>Initiates a hit test on the <ph id="ph1">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph> by using the <ph id="ph2">&lt;see cref="T:System.Windows.Media.HitTestFilterCallback" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Windows.Media.HitTestResultCallback" /&gt;</ph> objects.</source>
          <target state="translated">使用 <ph id="ph2">&lt;see cref="T:System.Windows.Media.HitTestFilterCallback" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="T:System.Windows.Media.HitTestResultCallback" /&gt;</ph> 对象启动 <ph id="ph1">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph> 上的命中测试。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.ContainerVisual.HitTest(System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)">
          <source>The <ph id="ph1">`filterCallback`</ph> parameter can be null, in which case, it is ignored.</source>
          <target state="translated"><ph id="ph1">`filterCallback`</ph>参数可以为 null，在这种情况下，它将被忽略。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.ContainerVisual.HitTest(System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)">
          <source>If <ph id="ph1">`filterCallback`</ph> is not <ph id="ph2">`null`</ph>, it is invoked before <ph id="ph3">`resultCallback`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`filterCallback`</ph>不<ph id="ph2">`null`</ph>之前, 调用<ph id="ph3">`resultCallback`</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.ContainerVisual.Offset">
          <source>Gets or sets the offset value of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph> from its reference point.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph> 相对于其参考点的偏移值。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.Offset">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> that represents the offset value of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph>，表示 <ph id="ph2">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph> 的偏移值。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.ContainerVisual.Opacity">
          <source>Gets or sets the opacity of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph>, based on 0=transparent, 1=opaque.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph> 的不透明度（基于 0=透明，1=不透明）。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.Opacity">
          <source>A value from 0 through 1 that specifies a range from fully transparent to fully opaque.</source>
          <target state="translated">一个介于 0 到 1 之间的值，它指定从完全透明到完全不透明之间的一个范围。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.Opacity">
          <source>A value of 0 indicates that the <ph id="ph1">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph> is completely transparent, while a value of 1 indicates that the <ph id="ph2">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph> is completely opaque.</source>
          <target state="translated">如果值为 0，则指示 <ph id="ph1">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph> 完全透明；如果值为 1，则指示 <ph id="ph2">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph> 完全不透明。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.Opacity">
          <source>A value 0.5 indicates 50 percent opaque, a value of 0.725 indicates 72.5 percent opaque, and so on.</source>
          <target state="translated">值 0.5 指示不透明度为 50%，值 0.725 指示不透明度为 72.5%，依此类推。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.Opacity">
          <source>Values less than 0 are treated as 0, while values greater than 1 are treated as 1.</source>
          <target state="translated">小于 0 的值将被视为 0，而大于 1 的值将被视为 1。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.ContainerVisual.OpacityMask">
          <source>Gets or sets a brush that specifies a possible opacity mask for the <ph id="ph1">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph>.</source>
          <target state="translated">获取或设置指定 <ph id="ph1">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph> 可能的不透明蒙板的画笔。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.OpacityMask">
          <source>A value of type <ph id="ph1">&lt;see cref="T:System.Windows.Media.Brush" /&gt;</ph> that represents the opacity mask value of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph>.</source>
          <target state="translated">一个类型为 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Brush" /&gt;</ph> 的值，表示 <ph id="ph2">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph> 的不透明蒙板值。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.OpacityMask">
          <source>Opacity masks can be used to create effects such as vignettes, based on the alpha channel values of the brush.</source>
          <target state="translated">不透明蒙板可用于创建等虚光照等画笔 alpha 通道值为基础的效果。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.ContainerVisual.Parent">
          <source>Gets the parent <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph>.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 的父 <ph id="ph2">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.Parent">
          <source>The parent of the visual.</source>
          <target state="translated">可见对象的父对象。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.Parent">
          <source>Note that this is returned as <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph>, rather than a raw object.</source>
          <target state="translated">请注意，这作为返回<ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph>，而不是原始对象。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.Parent">
          <source>This property might return <ph id="ph1">`null`</ph> in a disconnected tree, or if you have traversed to the tree root at the window level.</source>
          <target state="translated">此属性可能会返回<ph id="ph1">`null`</ph>在断开连接的树中，或者已到树根，在窗口级别遍历。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.ContainerVisual.Transform">
          <source>Gets or sets the transform that is applied to the <ph id="ph1">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph>.</source>
          <target state="translated">获取或设置应用于 <ph id="ph1">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph> 的转换。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.Transform">
          <source>The transform value.</source>
          <target state="translated">转换值。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.Transform">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.Transform&gt;</ph> is a base class that unifies many different forms of transforms.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.Transform&gt;</ph> 是一个统一的转换的多种不同形式的基本类。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.Transform">
          <source>For details, see <ph id="ph1">&lt;xref:System.Windows.Media.Transform&gt;</ph>.</source>
          <target state="translated">有关详细信息，请参阅<ph id="ph1">&lt;xref:System.Windows.Media.Transform&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.ContainerVisual.VisualChildrenCount">
          <source>Gets the number of children for the <ph id="ph1">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph>.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph> 的子对象个数。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.VisualChildrenCount">
          <source>The number of children in the <ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.VisualCollection" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph> 中的子对象个数。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.VisualChildrenCount">
          <source>By default, a <ph id="ph1">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph> does not have any children.</source>
          <target state="translated">默认情况下，<ph id="ph1">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph>没有任何子级。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.VisualChildrenCount">
          <source>The following example shows how to create a <ph id="ph1">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph> object that is used as the parent for two <ph id="ph2">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph> objects.</source>
          <target state="translated">下面的示例演示如何创建<ph id="ph1">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph>用作两个父对象<ph id="ph2">&lt;xref:System.Windows.Media.DrawingVisual&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.VisualChildrenCount">
          <source>Objects that are added to the <ph id="ph1">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph> object must be added in reverse z-order (bottom to top) to ensure they are rendering in the correct drawing order.</source>
          <target state="translated">添加到对象<ph id="ph1">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph>对象必须添加相反的 z 顺序 （从底部到顶部），以确保它们呈现在正确的绘制顺序。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.VisualChildrenCount">
          <source>In order for the visual tree to be enumerated correctly, the example provides overridden implementations of the <ph id="ph1">&lt;xref:System.Windows.Media.ContainerVisual.GetVisualChild%2A&gt;</ph> method and <ph id="ph2">&lt;xref:System.Windows.Media.ContainerVisual.VisualChildrenCount%2A&gt;</ph> property.</source>
          <target state="translated">为了使可视化树中正确枚举，该示例提供的重写的实现<ph id="ph1">&lt;xref:System.Windows.Media.ContainerVisual.GetVisualChild%2A&gt;</ph>方法和<ph id="ph2">&lt;xref:System.Windows.Media.ContainerVisual.VisualChildrenCount%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.VisualChildrenCount">
          <source>Classes that derive from <ph id="ph1">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph> must implement the <ph id="ph2">&lt;see cref="P:System.Windows.Media.ContainerVisual.VisualChildrenCount" /&gt;</ph> property to enumerate the visual children.</source>
          <target state="translated">派生自的类<ph id="ph1">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph>必须实现<ph id="ph2">&lt;see cref="P:System.Windows.Media.ContainerVisual.VisualChildrenCount" /&gt;</ph>要枚举可视子属性。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.VisualChildrenCount">
          <source>The derived property must return the number of children for the <ph id="ph1">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph>.</source>
          <target state="translated">派生的属性必须返回的有关的子级的个数<ph id="ph1">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.VisualChildrenCount">
          <source>The visual tree cannot be modified during this call.</source>
          <target state="translated">此调用期间，无法修改的可视化树。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.ContainerVisual.XSnappingGuidelines">
          <source>Gets or sets the X (horizontal) guideline for the <ph id="ph1">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph>.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph> 的 X（水平）准线。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.XSnappingGuidelines">
          <source>The horizontal guideline.</source>
          <target state="translated">水平准线。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.XSnappingGuidelines">
          <source>Pixel snapping is the process in which content layout is fixed so that object edges are rendered on device-specific pixels.</source>
          <target state="translated">像素对齐是内容的布局固定，以便对象边缘呈现特定于设备的像素的过程。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.XSnappingGuidelines">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> graphics system uses device-independent units to enable resolution and device independence.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> 图形系统使用与设备无关的单元来使分辨率和设备独立。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.XSnappingGuidelines">
          <source>Each device independent pixel automatically scales with the system's <ph id="ph1">[!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)]</ph> setting.</source>
          <target state="translated">每个与设备无关的像素都会随着系统的 <ph id="ph1">[!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)]</ph> 设置自动进行缩放。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.XSnappingGuidelines">
          <source>This provides <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> applications proper scaling for different <ph id="ph2">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph> settings and makes the application automatically <ph id="ph3">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph>-aware.</source>
          <target state="translated">这为 <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> 应用程序提供了不同 <ph id="ph2">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph> 设置的适当缩放，并使应用程序自动感知 <ph id="ph3">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.XSnappingGuidelines">
          <source>However, this <ph id="ph1">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph> independence can create irregular edge rendering due to anti-aliasing.</source>
          <target state="translated">但是，这<ph id="ph1">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph>独立性可能会由于抗锯齿的不规则的边缘呈现出。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.XSnappingGuidelines">
          <source>These artifacts, commonly seen as blurry, or "soft" edges, can occur when the location of an edge falls in the middle of a device pixel rather than between device pixels.</source>
          <target state="translated">当边缘的位置位于中间设备像素，而不是设备像素之间，会发生这些项目，通常被视为分明，还是"软"边缘。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.XSnappingGuidelines">
          <source>To address this issue, <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> provides a way for object edges in a visual tree to "snap" to device pixels through pixel snapping, eliminating the soft edges produced by anti-aliasing.</source>
          <target state="translated">若要解决此问题，<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>提供一种方法与设备像素为单位通过像素对齐，"对齐"可视化树中的对象边缘消除产生抗锯齿的软边缘。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.ContainerVisual.YSnappingGuidelines">
          <source>Gets or sets the Y (vertical) guideline for the <ph id="ph1">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph>.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see cref="T:System.Windows.Media.ContainerVisual" /&gt;</ph> 的 Y（垂直）准线。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.YSnappingGuidelines">
          <source>The vertical guideline.</source>
          <target state="translated">垂直准线。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.YSnappingGuidelines">
          <source>Pixel snapping is the process in which content layout is fixed so that object edges are rendered on device-specific pixels.</source>
          <target state="translated">像素对齐是内容的布局固定，以便对象边缘呈现特定于设备的像素的过程。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.YSnappingGuidelines">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> graphics system uses device-independent units to enable resolution and device independence.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> 图形系统使用与设备无关的单元来使分辨率和设备独立。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.YSnappingGuidelines">
          <source>Each device independent pixel automatically scales with the system's <ph id="ph1">[!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)]</ph> setting.</source>
          <target state="translated">每个与设备无关的像素都会随着系统的 <ph id="ph1">[!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)]</ph> 设置自动进行缩放。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.YSnappingGuidelines">
          <source>This provides <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> applications proper scaling for different <ph id="ph2">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph> settings and makes the application automatically <ph id="ph3">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph>-aware.</source>
          <target state="translated">这为 <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> 应用程序提供了不同 <ph id="ph2">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph> 设置的适当缩放，并使应用程序自动感知 <ph id="ph3">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.YSnappingGuidelines">
          <source>However, this <ph id="ph1">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph> independence can create irregular edge rendering due to anti-aliasing.</source>
          <target state="translated">但是，这<ph id="ph1">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph>独立性可能会由于抗锯齿的不规则的边缘呈现出。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.YSnappingGuidelines">
          <source>These artifacts, commonly seen as blurry, or "soft" edges, can occur when the location of an edge falls in the middle of a device pixel rather than between device pixels.</source>
          <target state="translated">当边缘的位置位于中间设备像素，而不是设备像素之间，会发生这些项目，通常被视为分明，还是"软"边缘。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.ContainerVisual.YSnappingGuidelines">
          <source>To address this issue, <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> provides a way for object edges in a visual tree to "snap" to device pixels through pixel snapping, eliminating the soft edges produced by anti-aliasing.</source>
          <target state="translated">若要解决此问题，<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>提供一种方法与设备像素为单位通过像素对齐，"对齐"可视化树中的对象边缘消除产生抗锯齿的软边缘。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>