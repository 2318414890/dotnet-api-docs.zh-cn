<Type Name="BitmapCache" FullName="System.Windows.Media.BitmapCache">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7cbd6bbc6568b74b595001e9a292246accb0078e" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52607256" /></Metadata><TypeSignature Language="C#" Value="public sealed class BitmapCache : System.Windows.Media.CacheMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed BitmapCache extends System.Windows.Media.CacheMode" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.BitmapCache" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BitmapCache&#xA;Inherits CacheMode" />
  <TypeSignature Language="C++ CLI" Value="public ref class BitmapCache sealed : System::Windows::Media::CacheMode" />
  <TypeSignature Language="F#" Value="type BitmapCache = class&#xA;    inherit CacheMode" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.CacheMode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>创建并缓存 <see cref="T:System.Windows.UIElement" /> 的位图表示形式。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Media.BitmapCache>类来改善呈现性能的一种复杂<xref:System.Windows.UIElement>。 创建<xref:System.Windows.Media.BitmapCache>并将其分配给<xref:System.Windows.UIElement.CacheMode%2A>属性的<xref:System.Windows.UIElement>作为位图视频内存中缓存的元素，并及其子树。 这是有用的需要设置动画效果、 转换或缩放时<xref:System.Windows.UIElement>尽可能快地。 缓存内容时，此方法会使性能和视觉质量之间做出取舍。  
  
 使用<xref:System.Windows.Media.BitmapCacheBrush>类，以有效地重复使用缓存的元素。  
  
 设置<xref:System.Windows.Media.BitmapCache.RenderAtScale%2A>属性来缩放位图缓存。 如果将放大某个元素，并且你想要于缓存只需生成元素的本机分辨率更清楚地呈现的元素，这非常有用。  
  
 设置<xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A>属性时缓存显示需要像素对齐方式来呈现正确，例如 ClearType 文本的内容。 此属性将忽略<xref:System.Windows.Media.BitmapCacheBrush>和<xref:System.Windows.Media.Media3D.Viewport2DVisual3D>类。  
  
 缓存控件不会影响鼠标悬停行为，因此鼠标上的点击测试运行，就好像位图实时控制。  
  
 重新生成缓存时才会发生时的结构<xref:System.Windows.UIElement>或其子树的更改，或当<xref:System.Windows.Media.CacheMode>设置更改。 设置<xref:System.Windows.Media.BitmapCache.RenderAtScale%2A>或<xref:System.Windows.Media.BitmapCache.EnableClearType%2A>属性会导致缓存重新生成。 更改到父可视化树的已缓存的<xref:System.Windows.UIElement>，例如转换、 缩放、 不透明度和影响，不会影响缓存。  
  
 硬件加速不可用时缓存的函数。 在这种情况下，在软件中，呈现位图和最大位图维度是指达到 2048x2048。  
  
> [!NOTE]
>  <xref:System.Windows.Media.RenderOptions> 和<xref:System.Windows.Media.TextOptions>通过缓存的元素将不会传播。 您可能需要再次设置这些选项，在缓存之下的子元素中。  
  
   
  
## Examples  
 下面的 XAML 演示如何缓存<xref:System.Windows.Controls.Canvas>元素。 有关完整的代码示例，请参阅[如何： 通过缓存元素来改善呈现性能](~/docs/framework/wpf/graphics-multimedia/how-to-improve-rendering-performance-by-caching-an-element.md)。  
  
 [!code-xaml[System.Windows.Media.BitmapCache#_BitmapCacheCreation](~/samples/snippets/csharp/VS_Snippets_Wpf/system.windows.media.bitmapcache/cs/window1.xaml#_bitmapcachecreation)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.UIElement.CacheMode" />
    <altmember cref="T:System.Windows.Media.BitmapCacheBrush" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Media.BitmapCache" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitmapCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BitmapCache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitmapCache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Media.BitmapCache" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitmapCache (double renderAtScale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 renderAtScale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BitmapCache.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (renderAtScale As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitmapCache(double renderAtScale);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.BitmapCache : double -&gt; System.Windows.Media.BitmapCache" Usage="new System.Windows.Media.BitmapCache renderAtScale" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="renderAtScale" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="renderAtScale">一个用于确定位图的缩放比例双精度型值。</param>
        <summary>用指定的缩放比例初始化 <see cref="T:System.Windows.Media.BitmapCache" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 以下 XAML 演示了如何创建和分配<xref:System.Windows.Media.BitmapCache>到<xref:System.Windows.Controls.Canvas>元素。 有关完整的代码示例，请参阅[如何： 通过缓存元素来改善呈现性能](~/docs/framework/wpf/graphics-multimedia/how-to-improve-rendering-performance-by-caching-an-element.md)。  
  
 [!code-xaml[System.Windows.Media.BitmapCache#_BitmapCacheCreation](~/samples/snippets/csharp/VS_Snippets_Wpf/system.windows.media.bitmapcache/cs/window1.xaml#_bitmapcachecreation)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.CacheMode" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.BitmapCache Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.BitmapCache Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BitmapCache.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As BitmapCache" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::BitmapCache ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.BitmapCache" Usage="bitmapCache.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.BitmapCache</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建 <see cref="T:System.Windows.Media.BitmapCache" /> 的可修改克隆，以制作该对象值的深层副本。 在复制此对象的依赖属性时，此方法会复制表达式（可能不再解析），但不复制动画或其当前值。</summary>
        <returns>当前对象的可修改复本。 即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 <see langword="true." />，所克隆对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也为 <see langword="false" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.BitmapCache CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.BitmapCache CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BitmapCache.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As BitmapCache" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::BitmapCache ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.Media.BitmapCache" Usage="bitmapCache.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.BitmapCache</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使用 <see cref="T:System.Windows.Media.BitmapCache" /> 的当前值创建其可修改复本（深层副本）。</summary>
        <returns>当前对象的可修改复本。 即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 <see langword="true." />，所克隆对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也为 <see langword="false" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BitmapCache.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="bitmapCache.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableClearType">
      <MemberSignature Language="C#" Value="public bool EnableClearType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableClearType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.BitmapCache.EnableClearType" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableClearType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableClearType { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableClearType : bool with get, set" Usage="System.Windows.Media.BitmapCache.EnableClearType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否在激活 ClearType 的情况下呈现位图。</summary>
        <value>如果 ClearType 处于活动状态，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置<xref:System.Windows.Media.BitmapCache.EnableClearType%2A>属性，以允许 ClearType 文本呈现在缓存中。  
  
 当<xref:System.Windows.Media.BitmapCache.EnableClearType%2A>属性是`true`，你的应用程序必须呈现其所有 ClearType 文本不透明背景上。  
  
 当<xref:System.Windows.Media.BitmapCache.EnableClearType%2A>属性是`false`，使用灰度抗锯齿功能呈现在缓存中的文本。  
  
 ClearType 文本需要正确的像素对齐方式呈现的字符，因此应设置<xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A>属性设置为`true`。 如果你未设置此属性，内容可能不正确混。  
  
 使用<xref:System.Windows.Media.BitmapCache.EnableClearType%2A>属性时知道缓存呈现像素边界上，则可以安全地缓存 ClearType 文本。 在文本滚动的情况下通常出现这种情况。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.RenderOptions.ClearTypeHint" />
      </Docs>
    </Member>
    <Member MemberName="EnableClearTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty EnableClearTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty EnableClearTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.BitmapCache.EnableClearTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EnableClearTypeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ EnableClearTypeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable EnableClearTypeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.BitmapCache.EnableClearTypeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Media.BitmapCache.EnableClearType" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderAtScale">
      <MemberSignature Language="C#" Value="public double RenderAtScale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 RenderAtScale" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.BitmapCache.RenderAtScale" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderAtScale As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double RenderAtScale { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.RenderAtScale : double with get, set" Usage="System.Windows.Media.BitmapCache.RenderAtScale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示应用于位图的缩放比例。</summary>
        <value>应用于位图的缩放比例。 默认值为 1。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Media.BitmapCache.RenderAtScale%2A>属性来呈现<xref:System.Windows.Media.BitmapCache>在正常位图大小的倍数。 正常大小是由本地元素的大小决定的。  
  
 值大于 1 的相对于元素自身分辨率的位图将分辨率增加和值小于 1 降低分辨率。 例如，如果<xref:System.Windows.Media.BitmapCache.RenderAtScale%2A>属性设置为 2.0，并应用缩放转换的 2 倍放大了内容，内容将具有相同的视觉质量使用相同的内容作为<xref:System.Windows.Media.BitmapCache.RenderAtScale%2A>设置为 1.0 和变换比例为 1。  
  
 当<xref:System.Windows.Media.BitmapCache.RenderAtScale%2A>设置为 0，呈现任何位图。 负值被限制到 0。  
  
 如果更改此值，缓存将重新生成在相应的新解决方案。  
  
 下图显示相同的内容的不同值的显示方式<xref:System.Windows.Media.BitmapCache.RenderAtScale%2A>属性。  
  
 **RenderAtScale = 1**  
  
 ![RenderAtScale &#61; 1](~/add/media/ndp-scale-1.png "RenderAtScale = 1")  
  
 **RenderAtScale = 0.5**  
  
 ![RenderAtScale &#61; 0.5](~/add/media/ndp-scale05.png "RenderAtScale = 0.5")  
  
 **RenderAtScale = 0.2**  
  
 ![RenderAtScale &#61; 0.2](~/add/media/ndp-scale02.png "RenderAtScale = 0.2")  
  
 下图显示了应用于缓存的元素的上级的缩放转换。 缩放比例设置为 1 时，<xref:System.Windows.Media.BitmapCache.RenderAtScale%2A>设置为 1 时，图像质量不几乎时也是如此<xref:System.Windows.Media.BitmapCache.RenderAtScale%2A>设置为 2。 但当大于 1，设置缩放是<xref:System.Windows.Media.BitmapCache.RenderAtScale%2A>为 2 将具有更高的图像质量。  
  
 **RenderAtScale = 1.0**  
  
 ![RenderAtScale &#61; 1.0](~/add/media/ndp-scale-10.png "RenderAtScale = 1.0")  
  
 **RenderAtScale = 2.0**  
  
 ![RenderAtScale &#61; 2.0](~/add/media/ndp-scale-20.png "RenderAtScale = 2.0")  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderAtScaleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RenderAtScaleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RenderAtScaleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.BitmapCache.RenderAtScaleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RenderAtScaleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RenderAtScaleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RenderAtScaleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.BitmapCache.RenderAtScaleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Media.BitmapCache.RenderAtScale" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SnapsToDevicePixels">
      <MemberSignature Language="C#" Value="public bool SnapsToDevicePixels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SnapsToDevicePixels" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.BitmapCache.SnapsToDevicePixels" />
      <MemberSignature Language="VB.NET" Value="Public Property SnapsToDevicePixels As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SnapsToDevicePixels { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SnapsToDevicePixels : bool with get, set" Usage="System.Windows.Media.BitmapCache.SnapsToDevicePixels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示在呈现位图时是否启用像素对齐功能。</summary>
        <value>如果像素对齐处于活动状态，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置<xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A>属性时缓存显示需要像素对齐方式正确呈现的内容。 这是 ClearType 文本的大小写。 如果您设置<xref:System.Windows.Media.BitmapCache.EnableClearType%2A>属性设置为`true`，请考虑设置<xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A>到`true`以确保正确呈现。  
  
 当<xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A>属性设置为`false`、 可以移动并通过一个像素的一小部分缩放缓存的元素和双线性筛选应用。  
  
 当<xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A>属性设置为`true`，位图缓存与目标的像素边界对齐。 如果移动或缩放缓存的元素的一个像素的一部分，该位图将对齐到像素网格。 在这种情况下，向上舍入位图左上角并将其对齐到像素网格中，但在右下角位于的小数部分的像素边界上。  
  
 <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A>属性将忽略<xref:System.Windows.Media.BitmapCacheBrush>和与一起使用时<xref:System.Windows.Media.Media3D.Viewport2DVisual3D>。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.BitmapCacheBrush" />
      </Docs>
    </Member>
    <Member MemberName="SnapsToDevicePixelsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SnapsToDevicePixelsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SnapsToDevicePixelsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.BitmapCache.SnapsToDevicePixelsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SnapsToDevicePixelsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SnapsToDevicePixelsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SnapsToDevicePixelsProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.BitmapCache.SnapsToDevicePixelsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Media.BitmapCache.SnapsToDevicePixels" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>