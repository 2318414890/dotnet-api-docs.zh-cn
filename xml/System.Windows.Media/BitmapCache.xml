<Type Name="BitmapCache" FullName="System.Windows.Media.BitmapCache">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="16841ab74f71b43ddc1207112b6c8fa572ab3a85" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36489803" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class BitmapCache : System.Windows.Media.CacheMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed BitmapCache extends System.Windows.Media.CacheMode" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.BitmapCache" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BitmapCache&#xA;Inherits CacheMode" />
  <TypeSignature Language="C++ CLI" Value="public ref class BitmapCache sealed : System::Windows::Media::CacheMode" />
  <TypeSignature Language="F#" Value="type BitmapCache = class&#xA;    inherit CacheMode" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.CacheMode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>创建并缓存 <see cref="T:System.Windows.UIElement" /> 的位图表示形式。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Media.BitmapCache>类改进的一种复杂的呈现性能<xref:System.Windows.UIElement>。 创建<xref:System.Windows.Media.BitmapCache>和将其分配给<xref:System.Windows.UIElement.CacheMode%2A>属性<xref:System.Windows.UIElement>作为视频内存中的位图缓存和的元素及其子树。 这是有用的当你需要进行动画处理、 转换或缩放<xref:System.Windows.UIElement>以尽可能快。 当缓存内容，这种方法将启用性能和视觉质量之间的权衡。  
  
 使用<xref:System.Windows.Media.BitmapCacheBrush>类，以有效地重复使用缓存的元素。  
  
 设置<xref:System.Windows.Media.BitmapCache.RenderAtScale%2A>要缩放位图缓存的属性。 如果元素将被缩放，并且你想要比缓存只需生成元素的本机分辨率更清楚地呈现的元素，这非常有用。  
  
 设置<xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A>当缓存显示需要像素的对齐方式来呈现正确，例如 ClearType 文本的内容时，属性。 通过将忽略此属性<xref:System.Windows.Media.BitmapCacheBrush>和<xref:System.Windows.Media.Media3D.Viewport2DVisual3D>类。  
  
 高速缓存控件不会影响鼠标上的行为，因此鼠标上的点击测试运作就好像它位图是实时的控件。  
  
 缓存重新生成时才会发生时的结构<xref:System.Windows.UIElement>或其子树的更改，或当<xref:System.Windows.Media.CacheMode>设置更改。 设置<xref:System.Windows.Media.BitmapCache.RenderAtScale%2A>或<xref:System.Windows.Media.BitmapCache.EnableClearType%2A>属性导致缓存重新生成。 更改到父可视化树的已缓存<xref:System.Windows.UIElement>，例如转换、 规模、 不透明度和影响，不会影响缓存。  
  
 硬件加速不可用时缓存的函数。 在这种情况下，在软件中呈现位图和最大位图维度为 2048 x 2048。  
  
> [!NOTE]
>  <xref:System.Windows.Media.RenderOptions> 和<xref:System.Windows.Media.TextOptions>通过缓存的元素将不会传播。 你可能需要在缓存之下的子元素中再次设置这些选项。  
  
   
  
## Examples  
 下面的 XAML 演示如何缓存<xref:System.Windows.Controls.Canvas>元素。 有关完整的代码示例，请参阅[How to： 提高通过缓存元素的呈现性能](~/docs/framework/wpf/graphics-multimedia/how-to-improve-rendering-performance-by-caching-an-element.md)。  
  
 [!code-xaml[System.Windows.Media.BitmapCache#_BitmapCacheCreation](~/samples/snippets/csharp/VS_Snippets_Wpf/system.windows.media.bitmapcache/cs/window1.xaml#_bitmapcachecreation)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.UIElement.CacheMode" />
    <altmember cref="T:System.Windows.Media.BitmapCacheBrush" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Media.BitmapCache" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitmapCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BitmapCache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitmapCache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Media.BitmapCache" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitmapCache (double renderAtScale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 renderAtScale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BitmapCache.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (renderAtScale As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitmapCache(double renderAtScale);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.BitmapCache : double -&gt; System.Windows.Media.BitmapCache" Usage="new System.Windows.Media.BitmapCache renderAtScale" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="renderAtScale" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="renderAtScale">一个用于确定位图的缩放比例双精度型值。</param>
        <summary>用指定的缩放比例初始化 <see cref="T:System.Windows.Media.BitmapCache" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的 XAML 演示如何创建和分配<xref:System.Windows.Media.BitmapCache>到<xref:System.Windows.Controls.Canvas>元素。 有关完整的代码示例，请参阅[How to： 提高通过缓存元素的呈现性能](~/docs/framework/wpf/graphics-multimedia/how-to-improve-rendering-performance-by-caching-an-element.md)。  
  
 [!code-xaml[System.Windows.Media.BitmapCache#_BitmapCacheCreation](~/samples/snippets/csharp/VS_Snippets_Wpf/system.windows.media.bitmapcache/cs/window1.xaml#_bitmapcachecreation)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.CacheMode" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.BitmapCache Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.BitmapCache Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BitmapCache.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As BitmapCache" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::BitmapCache ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.BitmapCache" Usage="bitmapCache.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.BitmapCache</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建 <see cref="T:System.Windows.Media.BitmapCache" /> 的一个可修改复本，从而制作该对象的值的深层副本。 在复制此对象的依赖属性时，此方法会复制表达式（可能不再解析），但不复制动画或其当前值。</summary>
        <returns>当前对象的可修改复本。 即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 <see langword="true." />，所克隆对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也为 <see langword="false" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.BitmapCache CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.BitmapCache CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BitmapCache.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As BitmapCache" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::BitmapCache ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.Media.BitmapCache" Usage="bitmapCache.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.BitmapCache</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使用 <see cref="T:System.Windows.Media.BitmapCache" /> 的当前值创建其可修改复本（深层副本）。</summary>
        <returns>当前对象的可修改复本。 即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 <see langword="true." />，所克隆对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也为 <see langword="false" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BitmapCache.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="bitmapCache.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableClearType">
      <MemberSignature Language="C#" Value="public bool EnableClearType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableClearType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.BitmapCache.EnableClearType" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableClearType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableClearType { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableClearType : bool with get, set" Usage="System.Windows.Media.BitmapCache.EnableClearType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否在激活 ClearType 的情况下呈现位图。</summary>
        <value>如果 ClearType 处于活动状态，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置<xref:System.Windows.Media.BitmapCache.EnableClearType%2A>属性，以允许要在缓存中呈现的 ClearType 文本。  
  
 当<xref:System.Windows.Media.BitmapCache.EnableClearType%2A>属性是`true`，你的应用程序必须呈现其所有 ClearType 文本不透明背景上。  
  
 当<xref:System.Windows.Media.BitmapCache.EnableClearType%2A>属性是`false`，缓存中的文本呈现与灰度抗锯齿功能。  
  
 ClearType 文本需要正确的像素对齐方式呈现的字符，因此应设置<xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A>属性`true`。 如果未设置此属性，可能不会正确混合内容。  
  
 使用<xref:System.Windows.Media.BitmapCache.EnableClearType%2A>以便安全地缓存 ClearType 文本，当你知道缓存时，属性呈现在像素边界上。 在文本滚动的情况下通常出现这种情况。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.RenderOptions.ClearTypeHint" />
      </Docs>
    </Member>
    <Member MemberName="EnableClearTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty EnableClearTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty EnableClearTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.BitmapCache.EnableClearTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EnableClearTypeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ EnableClearTypeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable EnableClearTypeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.BitmapCache.EnableClearTypeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Media.BitmapCache.EnableClearType" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderAtScale">
      <MemberSignature Language="C#" Value="public double RenderAtScale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 RenderAtScale" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.BitmapCache.RenderAtScale" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderAtScale As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double RenderAtScale { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.RenderAtScale : double with get, set" Usage="System.Windows.Media.BitmapCache.RenderAtScale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示应用于位图的缩放比例。</summary>
        <value>应用于位图的缩放比例。 默认值为 1。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Media.BitmapCache.RenderAtScale%2A>属性来呈现<xref:System.Windows.Media.BitmapCache>正常位图大小的倍数。 正常的大小由元素的本地大小确定。  
  
 大于 1 增加的相对于元素，本机解析位图分辨率的值而小于 1 的值降低分辨率。 例如，如果<xref:System.Windows.Media.BitmapCache.RenderAtScale%2A>属性设置为 2.0 中，而你应用的 2 倍放大内容了缩放变换，内容会有相同的视觉质量使用相同的内容作为<xref:System.Windows.Media.BitmapCache.RenderAtScale%2A>设置为 1.0 和转换范围为 1。  
  
 当<xref:System.Windows.Media.BitmapCache.RenderAtScale%2A>设置为 0，不呈现任何位图。 负值被限制为 0。  
  
 如果更改此值，请在相应的新解决方法是重新生成缓存。  
  
 下图显示相同的内容的不同值的显示方式<xref:System.Windows.Media.BitmapCache.RenderAtScale%2A>属性。  
  
 **RenderAtScale = 1**  
  
 ![RenderAtScale &#61; 1](~/add/media/ndp-scale-1.png "RenderAtScale = 1")  
  
 **RenderAtScale = 0.5**  
  
 ![RenderAtScale &#61; 0.5](~/add/media/ndp-scale05.png "RenderAtScale = 0.5")  
  
 **RenderAtScale = 0.2**  
  
 ![RenderAtScale &#61; 0.2](~/add/media/ndp-scale02.png "RenderAtScale = 0.2")  
  
 下图显示应用于缓存元素的祖先缩放转换。 缩放比例设置为 1 时和<xref:System.Windows.Media.BitmapCache.RenderAtScale%2A>设置为 1，图像质量是几乎相同时<xref:System.Windows.Media.BitmapCache.RenderAtScale%2A>设置为 2。 但当缩放大于 1，设置<xref:System.Windows.Media.BitmapCache.RenderAtScale%2A>为 2 将具有更高的图像质量。  
  
 **RenderAtScale = 1.0**  
  
 ![RenderAtScale &#61; 1.0](~/add/media/ndp-scale-10.png "RenderAtScale = 1.0")  
  
 **RenderAtScale = 2.0**  
  
 ![RenderAtScale &#61; 2.0](~/add/media/ndp-scale-20.png "RenderAtScale = 2.0")  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderAtScaleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RenderAtScaleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RenderAtScaleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.BitmapCache.RenderAtScaleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RenderAtScaleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RenderAtScaleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RenderAtScaleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.BitmapCache.RenderAtScaleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Media.BitmapCache.RenderAtScale" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SnapsToDevicePixels">
      <MemberSignature Language="C#" Value="public bool SnapsToDevicePixels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SnapsToDevicePixels" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.BitmapCache.SnapsToDevicePixels" />
      <MemberSignature Language="VB.NET" Value="Public Property SnapsToDevicePixels As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SnapsToDevicePixels { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SnapsToDevicePixels : bool with get, set" Usage="System.Windows.Media.BitmapCache.SnapsToDevicePixels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示在呈现位图时是否启用像素对齐功能。</summary>
        <value>如果像素对齐处于活动状态，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 设置<xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A>当缓存显示需要像素的对齐方式正确呈现的内容时，属性。 这是 ClearType 文本的大小写。 如果你设置<xref:System.Windows.Media.BitmapCache.EnableClearType%2A>属性`true`，请考虑设置<xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A>到`true`以确保正确呈现。  
  
 当<xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A>属性设置为`false`、 可以移动并缓存的元素的缩放量的像素一小部分和双线性筛选应用。  
  
 当<xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A>属性设置为`true`，与目标像素边界对齐位图缓存。 如果移动或通过一个像素的一部分缩放缓存的元素，则会与像素网格对齐位图。 在这种情况下，向上舍入数据并与位图左上角对齐到像素网格中，但右下角位于的小数部分的像素边界上。  
  
 <xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A>属性会忽略<xref:System.Windows.Media.BitmapCacheBrush>和一起使用时<xref:System.Windows.Media.Media3D.Viewport2DVisual3D>。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.BitmapCacheBrush" />
      </Docs>
    </Member>
    <Member MemberName="SnapsToDevicePixelsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SnapsToDevicePixelsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SnapsToDevicePixelsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.BitmapCache.SnapsToDevicePixelsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SnapsToDevicePixelsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SnapsToDevicePixelsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SnapsToDevicePixelsProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.BitmapCache.SnapsToDevicePixelsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Media.BitmapCache.SnapsToDevicePixels" /> 依赖项属性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>