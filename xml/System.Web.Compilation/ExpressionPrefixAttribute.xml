<Type Name="ExpressionPrefixAttribute" FullName="System.Web.Compilation.ExpressionPrefixAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d9b47eef6ad9d0ca198f11e141c979372868e664" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36404911" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ExpressionPrefixAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExpressionPrefixAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ExpressionPrefixAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExpressionPrefixAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionPrefixAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ExpressionPrefixAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定用于表达式生成器的前缀特性。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.ExpressionPrefixAttribute>类用于在设计时使用未在配置文件中定义的表达式。 使用<xref:System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefix%2A>属性获取与关联的前缀名称<xref:System.Web.Compilation.ExpressionPrefixAttribute>对象。 表达式生成器查找的任何语句具有以下形式：  
  
 `<%$ [expressionPrefix]:[expressionValue] %>`  
  
 然后表达式生成器中，根据表达式的前缀生成为属性分配的代码。 `expressionPrefix`参数是指已配置的表达式生成器中，配置文件中或通过定义<xref:System.Web.Compilation.ExpressionPrefixAttribute>对象。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.Compilation.ExpressionPrefixAttribute>类。 该属性应用于实现一个自定义表达式生成器<xref:System.Web.Compilation.ExpressionBuilder>抽象类。 此实现的<xref:System.Web.Compilation.ExpressionBuilder>返回语句传递给表达式的计算结果。 若要运行此示例中，您必须首先在 Web.config 文件中注册自定义表达式生成器。 第一个代码示例演示如何在 Web.config 文件中注册自定义表达式生成器。  
  
```  
<configuration>  
    <system.web>  
       <compilation>  
          <expressionBuilders>  
              <add expressionPrefix="MyCustomExpression"  
               type="MyCustomExpressionBuilder"/>  
          </expressionBuilders>  
       </compilation>  
    </system.web>  
</configuration>  
```  
  
 第二个代码示例演示如何引用一个.aspx 文件中的表达式。  
  
```  
<asp:Label ID="Label1" runat="server"   
Text="<%$ MyCustomExpression:Hello, world! %>" />  
```  
  
 第三个代码示例演示如何通过从派生开发自定义的表达式生成器<xref:System.Web.Compilation.ExpressionBuilder>。 若要运行此代码示例，必须将该类放入 App_Code 文件夹中。  
  
 [!code-csharp[System.Web.Compilation.ExpressionBuilder#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/CS/MyExpressionBuilder.cs#1)] 
 [!code-vb[System.Web.Compilation.ExpressionBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/VB/MyExpressionBuilder.vb#1)]   
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
    <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
    <altmember cref="T:System.Web.UI.Design.AppSettingsExpressionEditor" />
    <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
    <altmember cref="P:System.Web.Configuration.ExpressionBuilder.ExpressionPrefix" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionPrefixAttribute (string expressionPrefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string expressionPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ExpressionPrefixAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expressionPrefix As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpressionPrefixAttribute(System::String ^ expressionPrefix);" />
      <MemberSignature Language="F#" Value="new System.Web.Compilation.ExpressionPrefixAttribute : string -&gt; System.Web.Compilation.ExpressionPrefixAttribute" Usage="new System.Web.Compilation.ExpressionPrefixAttribute expressionPrefix" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expressionPrefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expressionPrefix">当前 <see cref="T:System.Web.Compilation.ExpressionBuilder" /> 的前缀。</param>
        <summary>初始化 <see cref="T:System.Web.Compilation.ExpressionPrefixAttribute" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.Compilation.ExpressionPrefixAttribute.%23ctor%2A>构造函数初始化的实例<xref:System.Web.Compilation.ExpressionPrefixAttribute>类使用的前缀标识符。 <xref:System.Web.Compilation.ExpressionPrefixAttribute.%23ctor%2A>是默认构造函数<xref:System.Web.Compilation.ExpressionPrefixAttribute>类。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expressionPrefix" /> 为 null 或为空字符串 ("")。</exception>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.UI.Design.AppSettingsExpressionEditor" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="P:System.Web.Configuration.ExpressionBuilder.ExpressionPrefix" />
      </Docs>
    </Member>
    <Member MemberName="ExpressionPrefix">
      <MemberSignature Language="C#" Value="public string ExpressionPrefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpressionPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefix" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpressionPrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpressionPrefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExpressionPrefix : string" Usage="System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取当前 <see cref="T:System.Web.Compilation.ExpressionBuilder" /> 对象的前缀值。</summary>
        <value>已配置的 <see cref="T:System.Web.Compilation.ExpressionBuilder" /> 的表达式前缀。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefix%2A>属性，以检索与给定属性相关联的前缀的名称。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.UI.Design.AppSettingsExpressionEditor" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="P:System.Web.Configuration.ExpressionBuilder.ExpressionPrefix" />
      </Docs>
    </Member>
  </Members>
</Type>