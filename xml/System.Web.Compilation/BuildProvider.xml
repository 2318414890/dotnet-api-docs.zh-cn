<Type Name="BuildProvider" FullName="System.Web.Compilation.BuildProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c45f28c3393ed677cfa3432029e87055d139c429" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BuildProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BuildProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.BuildProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BuildProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class BuildProvider abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f4685-101">定义一组用于在 ASP.NET 生成环境中生成源代码的属性和方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f4685-101">Defines a set of properties and methods for generating source code within the ASP.NET build environment.</span>
      </span>
      <span data-ttu-id="f4685-102">此类为抽象类。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f4685-102">This class is abstract.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4685-103">ASP.NET 生成环境使用<xref:System.Web.Compilation.BuildProvider>要为应用程序中的不同文件类型生成源代码的对象。</span><span class="sxs-lookup"><span data-stu-id="f4685-103">The ASP.NET build environment uses <xref:System.Web.Compilation.BuildProvider> objects to generate source code for different file types within an application.</span></span> <span data-ttu-id="f4685-104">类派生自<xref:System.Web.Compilation.BuildProvider>主要用于文件、 网页、 资源和其他自定义项中提供的源代码。</span><span class="sxs-lookup"><span data-stu-id="f4685-104">Classes derived from <xref:System.Web.Compilation.BuildProvider> predominantly provide source code for files, Web pages, resources, and other custom items.</span></span>  
  
 <span data-ttu-id="f4685-105">通常情况下，你不创建的实例<xref:System.Web.Compilation.BuildProvider>类直接。</span><span class="sxs-lookup"><span data-stu-id="f4685-105">Typically, you do not create an instance of the <xref:System.Web.Compilation.BuildProvider> class directly.</span></span> <span data-ttu-id="f4685-106">相反，实现派生自的类<xref:System.Web.Compilation.BuildProvider>，并配置<xref:System.Web.Compilation.BuildProvider>以便在 ASP.NET 中使用的实现构建环境。</span><span class="sxs-lookup"><span data-stu-id="f4685-106">Instead, you implement a class that derives from <xref:System.Web.Compilation.BuildProvider>, and configure the <xref:System.Web.Compilation.BuildProvider> implementation for use within the ASP.NET build environment.</span></span>  
  
 <span data-ttu-id="f4685-107">实例<xref:System.Web.Compilation.BuildProvider>类用于<xref:System.Web.Compilation.AssemblyBuilder>融入编译的程序集的一个或多个文件的对象。</span><span class="sxs-lookup"><span data-stu-id="f4685-107">Instances of the <xref:System.Web.Compilation.BuildProvider> class are used with <xref:System.Web.Compilation.AssemblyBuilder> objects to build one or more files into a compiled assembly.</span></span> <span data-ttu-id="f4685-108">A<xref:System.Web.Compilation.BuildProvider>实例在单个文件的相应语言生成源代码和<xref:System.Web.Compilation.AssemblyBuilder>对象将合并每个提供的源代码<xref:System.Web.Compilation.BuildProvider>为单个程序集的实例。</span><span class="sxs-lookup"><span data-stu-id="f4685-108">A <xref:System.Web.Compilation.BuildProvider> instance generates source code in the appropriate language for individual files, and the <xref:System.Web.Compilation.AssemblyBuilder> object combines the source contributed by each <xref:System.Web.Compilation.BuildProvider> instance into a single assembly.</span></span>  
  
 <span data-ttu-id="f4685-109">ASP.NET 生成环境使用的实例<xref:System.Web.Compilation.BuildProvider>类，以生成应用程序中的文件。</span><span class="sxs-lookup"><span data-stu-id="f4685-109">The ASP.NET build environment uses instances of the <xref:System.Web.Compilation.BuildProvider> class to build files within an application.</span></span> <span data-ttu-id="f4685-110"><xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>属性<xref:System.Web.Compilation.BuildProvider>类指示要生成的文件的路径。</span><span class="sxs-lookup"><span data-stu-id="f4685-110">The <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property of the <xref:System.Web.Compilation.BuildProvider> class indicates the path of the file to be built.</span></span> <span data-ttu-id="f4685-111">应用程序中的每个文件的文件扩展名映射到相应的生成提供程序。</span><span class="sxs-lookup"><span data-stu-id="f4685-111">The file extension of each file within an application is mapped to a corresponding build provider.</span></span> <span data-ttu-id="f4685-112">ASP.NET 生成环境初始化<xref:System.Web.Compilation.BuildProvider>实例的每个文件基于文件扩展名，并使用<xref:System.Web.Compilation.BuildProvider>方法生成的文件的源代码。</span><span class="sxs-lookup"><span data-stu-id="f4685-112">The ASP.NET build environment initializes a <xref:System.Web.Compilation.BuildProvider> instance for each file based on the file extension, and uses the <xref:System.Web.Compilation.BuildProvider> methods to generate source code for the file.</span></span> <span data-ttu-id="f4685-113">ASP.NET 生成环境传递<xref:System.Web.Compilation.AssemblyBuilder>根据首选的编译器语言的文件的上下文对象<xref:System.Web.Compilation.BuildProvider>方法生成来自一个或多个文件的程序集时，以便<xref:System.Web.Compilation.BuildProvider>实例可能会造成影响对整个程序集及其文件的源代码。</span><span class="sxs-lookup"><span data-stu-id="f4685-113">The ASP.NET build environment passes an <xref:System.Web.Compilation.AssemblyBuilder> object based on the preferred compiler language and the context of the file to the <xref:System.Web.Compilation.BuildProvider> methods when building an assembly from one or more files, so that the <xref:System.Web.Compilation.BuildProvider> instance can contribute source code for its file to the overall assembly.</span></span>  
  
 <span data-ttu-id="f4685-114">若要定义用于 ASP.NET 应用程序中的文件类型的自定义生成操作，你必须从派生类<xref:System.Web.Compilation.BuildProvider>、 实现用于生成文件类型的派生类中的成员和配置的生成提供程序的相应的文件扩展名在应用程序配置文件。</span><span class="sxs-lookup"><span data-stu-id="f4685-114">To define custom build actions for a file type within an ASP.NET application, you must derive a class from <xref:System.Web.Compilation.BuildProvider>, implement members within the derived class for building the file type, and configure the build provider for the corresponding file extension within the application configuration file.</span></span>  
  
 <span data-ttu-id="f4685-115">指定的文件扩展名为受支持的文件，并在生成提供程序支持文件、 Web 文件、 资源文件或所有文件。</span><span class="sxs-lookup"><span data-stu-id="f4685-115">The  specifies the file extension for supported files, and whether the build provider supports code files, Web files, resource files or all files.</span></span> <span data-ttu-id="f4685-116">使用`type`特性以指定的生成提供程序实现的完全限定的类型名称。</span><span class="sxs-lookup"><span data-stu-id="f4685-116">Use the `type` attribute to specify the fully qualified type name of the build provider implementation.</span></span> <span data-ttu-id="f4685-117">使用<xref:System.Web.Compilation.BuildProviderAppliesToAttribute>类指定在生成提供程序应用到 App_Code 目录中的文件、 Web 内容目录，为全局或本地资源中的文件或所有文件。</span><span class="sxs-lookup"><span data-stu-id="f4685-117">Use the <xref:System.Web.Compilation.BuildProviderAppliesToAttribute> class to specify whether the build provider applies to files in the App_Code directory, to files in a Web content directory, to global or local resources, or to all files.</span></span> <span data-ttu-id="f4685-118">使用`extension`特性来指定用于标识的文件扩展名的文件<xref:System.Web.Compilation.BuildProvider>类支持。</span><span class="sxs-lookup"><span data-stu-id="f4685-118">Use the `extension` attribute to specify the file extension used to identify files that the <xref:System.Web.Compilation.BuildProvider> class supports.</span></span> <span data-ttu-id="f4685-119">使用<xref:System.Web.Configuration.BuildProviderCollection>类来检查生成提供程序配置文件中的。</span><span class="sxs-lookup"><span data-stu-id="f4685-119">Use the <xref:System.Web.Configuration.BuildProviderCollection> class to examine build providers in a configuration file.</span></span> <span data-ttu-id="f4685-120">有关配置的生成提供程序的详细信息，请参阅[buildProviders 元素进行编译 （ASP.NET 设置架构）](http://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384)。</span><span class="sxs-lookup"><span data-stu-id="f4685-120">For more information about configuring a build provider, see [buildProviders Element for compilation (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).</span></span>  
  
 <span data-ttu-id="f4685-121">若要实现为自定义文件类型生成源代码的生成提供程序，从派生类<xref:System.Web.Compilation.BuildProvider>，并重写<xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>方法来为支持的文件类型生成源代码。</span><span class="sxs-lookup"><span data-stu-id="f4685-121">To implement a build provider that generates source code for a custom file type, derive a class from <xref:System.Web.Compilation.BuildProvider>, and override the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method to generate source code for the supported file type.</span></span> <span data-ttu-id="f4685-122">生成的源代码添加到<xref:System.Web.Compilation.AssemblyBuilder>形式在 CodeDOM 图中，或者作为表示物理源代码文件的内容的对象。</span><span class="sxs-lookup"><span data-stu-id="f4685-122">The generated source is added to the <xref:System.Web.Compilation.AssemblyBuilder> object in the form of a CodeDOM graph, or as content that represents a physical source code file.</span></span> <span data-ttu-id="f4685-123">如果在生成提供程序需要特定的编程语言，重写<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>属性以返回<xref:System.Web.Compilation.CompilerType>的受支持的编程语言的对象。</span><span class="sxs-lookup"><span data-stu-id="f4685-123">If the build provider requires a specific programming language, override the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property to return a <xref:System.Web.Compilation.CompilerType> object for the supported programming language.</span></span> <span data-ttu-id="f4685-124">如果在生成提供程序不需要特定的编程语言，不会覆盖<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>属性; 请改用基类实现，它指示在生成提供程序可以使用任何.NET Framework 语言，如 Visual Basic 或 C#。</span><span class="sxs-lookup"><span data-stu-id="f4685-124">If the build provider does not require a specific programming language, do not override the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property; use the base class implementation, which indicates that the build provider can use any .NET Framework language, such as Visual Basic or C#.</span></span>  
  
 <span data-ttu-id="f4685-125">若要实现 Web 内容为生成源代码的生成提供程序，从派生类<xref:System.Web.Compilation.BuildProvider>，并重写<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>方法以返回<xref:System.Type>为生成的类<xref:System.Web.Compilation.BuildProvider>。</span><span class="sxs-lookup"><span data-stu-id="f4685-125">To implement a build provider that generates source code for Web content, derive a class from <xref:System.Web.Compilation.BuildProvider> and override the <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> method to return the <xref:System.Type> for the class generated by <xref:System.Web.Compilation.BuildProvider>.</span></span> <span data-ttu-id="f4685-126">重写<xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>方法为提供的受支持的文件类型生成源代码。</span><span class="sxs-lookup"><span data-stu-id="f4685-126">Override the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method to generate source code for the type provided by the supported file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f4685-127">添加自定义<xref:System.Web.Compilation.BuildProvider>对 Web.config 文件的类在 ASP.NET 网站中工作，但在 ASP.NET Web 应用程序项目无法正常运行。</span><span class="sxs-lookup"><span data-stu-id="f4685-127">Adding a customized <xref:System.Web.Compilation.BuildProvider> class to the Web.config file works in an ASP.NET Web site but does not work in an ASP.NET Web application project.</span></span> <span data-ttu-id="f4685-128">在 Web 应用程序项目中，通过生成的代码<xref:System.Web.Compilation.BuildProvider>类不能包含在应用程序。</span><span class="sxs-lookup"><span data-stu-id="f4685-128">In a Web application project, the code that is generated by the <xref:System.Web.Compilation.BuildProvider> class cannot be included in the application.</span></span> <span data-ttu-id="f4685-129">有关详细信息，请参阅[ASP.NET Web 应用程序项目预编译概述](http://msdn.microsoft.com/library/b940abbd-178d-4570-b441-52914fa7b887)。</span><span class="sxs-lookup"><span data-stu-id="f4685-129">For more information, see [ASP.NET Web Application Project Precompilation Overview](http://msdn.microsoft.com/library/b940abbd-178d-4570-b441-52914fa7b887).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f4685-130">下面的代码示例演示一个简单的生成提供程序实现，它继承的抽象<xref:System.Web.Compilation.BuildProvider>基类。</span><span class="sxs-lookup"><span data-stu-id="f4685-130">The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class.</span></span> <span data-ttu-id="f4685-131">生成提供程序重写<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>， <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>，和<xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>基类的成员。</span><span class="sxs-lookup"><span data-stu-id="f4685-131">The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.</span></span> <span data-ttu-id="f4685-132">该示例不包括的实现`SampleClassGenerator`类。</span><span class="sxs-lookup"><span data-stu-id="f4685-132">The example does not include the implementation of the `SampleClassGenerator` class.</span></span> <span data-ttu-id="f4685-133">有关详细信息，请参阅<xref:System.CodeDom.CodeCompileUnit>类概述。</span><span class="sxs-lookup"><span data-stu-id="f4685-133">For more information, see the <xref:System.CodeDom.CodeCompileUnit> class overview.</span></span>  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.CompilerType" />
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
    <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
    <altmember cref="T:System.Web.Configuration.BuildProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BuildProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BuildProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f4685-134">初始化 <see cref="T:System.Web.Compilation.BuildProvider" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-134">Initializes a new instance of the <see cref="T:System.Web.Compilation.BuildProvider" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4685-135">因为<xref:System.Web.Compilation.BuildProvider>类为抽象类，你无法创建的实例<xref:System.Web.Compilation.BuildProvider>直接使用构造函数。</span><span class="sxs-lookup"><span data-stu-id="f4685-135">Because the <xref:System.Web.Compilation.BuildProvider> class is abstract, you cannot create an instance of <xref:System.Web.Compilation.BuildProvider> directly using the constructor.</span></span>  
  
 <span data-ttu-id="f4685-136">从派生时<xref:System.Web.Compilation.BuildProvider>类中，重写构造函数来实现你的生成提供程序实现的自定义初始化操作。</span><span class="sxs-lookup"><span data-stu-id="f4685-136">When deriving from the <xref:System.Web.Compilation.BuildProvider> class, override the constructor to implement custom initialization actions for your build provider implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeCompilerType">
      <MemberSignature Language="C#" Value="public virtual System.Web.Compilation.CompilerType CodeCompilerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Compilation.CompilerType CodeCompilerType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.CodeCompilerType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CodeCompilerType As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Compilation::CompilerType ^ CodeCompilerType { System::Web::Compilation::CompilerType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f4685-137">表示生成提供程序为自定义文件类型生成源代码所使用的编译器类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-137">Represents the compiler type used by a build provider to generate source code for a custom file type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f4685-138">只读 <see cref="T:System.Web.Compilation.CompilerType" />，表示用于生成虚拟路径的源代码的代码生成器、代码编译器和编译器设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-138">A read-only <see cref="T:System.Web.Compilation.CompilerType" /> representing the code generator, code compiler, and compiler settings used to build source code for the virtual path.</span>
          </span>
          <span data-ttu-id="f4685-139">基类返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-139">The base class returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4685-140">使用<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>属性来提供设置编译的实现的源代码<xref:System.Web.Compilation.BuildProvider>。</span><span class="sxs-lookup"><span data-stu-id="f4685-140">Use the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property to provide the settings for compiling source code for an implementation of <xref:System.Web.Compilation.BuildProvider>.</span></span> <span data-ttu-id="f4685-141"><xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>属性是`null`如果生成提供程序不需要特定的代码语言生成和编译源代码。</span><span class="sxs-lookup"><span data-stu-id="f4685-141">The <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property is `null` if the build provider does not require a specific code language for generating and compiling source code.</span></span>  
  
 <span data-ttu-id="f4685-142">若要设置的值<xref:System.Web.Compilation.CompilerType>中生成提供程序实现中，使用对象<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A>或<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f4685-142">To set the value for a <xref:System.Web.Compilation.CompilerType> object within a build provider implementation, use the <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> or <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> method.</span></span>  
  
 <span data-ttu-id="f4685-143"><xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A>属性指定<xref:System.CodeDom.Compiler.CodeDomProvider>用于生成和编译为生成提供程序的源代码的实现。</span><span class="sxs-lookup"><span data-stu-id="f4685-143">The <xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A> property specifies the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation that is used to generate and compile source code for a build provider.</span></span> <span data-ttu-id="f4685-144"><xref:System.Web.Compilation.CompilerType.CompilerParameters%2A>属性定义的设置，用于将源代码编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="f4685-144">The <xref:System.Web.Compilation.CompilerType.CompilerParameters%2A> property defines the settings that are used to compile the source code into an assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f4685-145">下面的代码示例演示一个简单的生成提供程序实现，它继承的抽象<xref:System.Web.Compilation.BuildProvider>基类。</span><span class="sxs-lookup"><span data-stu-id="f4685-145">The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class.</span></span> <span data-ttu-id="f4685-146">生成提供程序重写<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>， <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>，和<xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>基类的成员。</span><span class="sxs-lookup"><span data-stu-id="f4685-146">The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.</span></span>  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public virtual void GenerateCode (System.Web.Compilation.AssemblyBuilder assemblyBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCode(class System.Web.Compilation.AssemblyBuilder assemblyBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCode(System::Web::Compilation::AssemblyBuilder ^ assemblyBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyBuilder" Type="System.Web.Compilation.AssemblyBuilder" />
      </Parameters>
      <Docs>
        <param name="assemblyBuilder">
          <span data-ttu-id="f4685-147">引用生成提供程序所生成的源代码的程序集生成器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-147">The assembly builder that references the source code generated by the build provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4685-148">为生成提供程序的虚拟路径生成源代码，并将源代码添加到指定程序集生成器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-148">Generates source code for the virtual path of the build provider, and adds the source code to a specified assembly builder.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4685-149">若要实现为自定义文件类型生成源代码的生成提供程序，从派生类<xref:System.Web.Compilation.BuildProvider>类，并重写<xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>方法来为支持的文件类型生成源代码。</span><span class="sxs-lookup"><span data-stu-id="f4685-149">To implement a build provider that generates source code for a custom file type, derive a class from the <xref:System.Web.Compilation.BuildProvider> class, and override the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method to generate source code for the supported file type.</span></span>  
  
 <span data-ttu-id="f4685-150">通常情况下，生成提供程序的<xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>实现会读取<xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>属性，分析内容，并将所生成的源代码添加到指定<xref:System.Web.Compilation.AssemblyBuilder>对象。</span><span class="sxs-lookup"><span data-stu-id="f4685-150">Typically, a build provider's <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> implementation reads the <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property, parses the contents, and adds the generated source code to the specified <xref:System.Web.Compilation.AssemblyBuilder> object.</span></span> <span data-ttu-id="f4685-151">你可参与源代码中的窗体的程序集<xref:System.IO.TextWriter>对象或在 CodeDOM 图。</span><span class="sxs-lookup"><span data-stu-id="f4685-151">You can contribute source code to the assembly in the form of a <xref:System.IO.TextWriter> object or a CodeDOM graph.</span></span> <span data-ttu-id="f4685-152">若要将源代码添加到的程序集通过<xref:System.IO.TextWriter>对象，请使用<xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f4685-152">To add source code to the assembly through a <xref:System.IO.TextWriter> object, use the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method.</span></span> <span data-ttu-id="f4685-153">若要将源代码在 CodeDOM 图中添加对程序集，使用<xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f4685-153">To add source code in a CodeDOM graph to the assembly, use the <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> method.</span></span>  
  
 <span data-ttu-id="f4685-154">如果在生成提供程序采用特定编程语言生成源代码，则必须重写<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>属性以返回<xref:System.Web.Compilation.CompilerType>的受支持的编程语言的对象。</span><span class="sxs-lookup"><span data-stu-id="f4685-154">If the build provider generates source code in a specific programming language, you must override the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property to return a <xref:System.Web.Compilation.CompilerType> object for the supported programming language.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f4685-155">下面的代码示例演示一个简单的生成提供程序实现，它继承的抽象<xref:System.Web.Compilation.BuildProvider>基类。</span><span class="sxs-lookup"><span data-stu-id="f4685-155">The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class.</span></span> <span data-ttu-id="f4685-156">生成提供程序重写<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>， <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>，和<xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>基类的成员。</span><span class="sxs-lookup"><span data-stu-id="f4685-156">The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.</span></span>  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetCodeCompileUnit">
      <MemberSignature Language="C#" Value="protected internal virtual System.CodeDom.CodeCompileUnit GetCodeCompileUnit (out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.CodeDom.CodeCompileUnit GetCodeCompileUnit([out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetCodeCompileUnit(System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetCodeCompileUnit (ByRef linePragmasTable As IDictionary) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::CodeDom::CodeCompileUnit ^ GetCodeCompileUnit([Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="linePragmasTable">
          <span data-ttu-id="f4685-157">当此方法返回时，该参数将包含一个字典，该字典包含源代码中所有关联行号和行杂注。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-157">When this method returns, contains a dictionary that contains all associated line numbers and line pragmas of the source code.</span>
          </span>
          <span data-ttu-id="f4685-158">此参数未经初始化即被传递。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-158">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4685-159">表示生成的 CodeDOM 关系图的容器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-159">Represents the container for the generated CodeDOM graph.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4685-160">
            <see cref="T:System.Web.Compilation.BuildProvider" /> 实例生成的 CodeDOM 关系图的容器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-160">The container for the CodeDOM graph that is generated by the <see cref="T:System.Web.Compilation.BuildProvider" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4685-161">可以通过使用此方法<xref:System.Web.Compilation.ClientBuildManager>类的 Visual Studio 中支持的语法突出显示和设计器。</span><span class="sxs-lookup"><span data-stu-id="f4685-161">This method can be used through the <xref:System.Web.Compilation.ClientBuildManager> class for syntax highlighting and designer support in Visual Studio.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomString">
      <MemberSignature Language="C#" Value="public virtual string GetCustomString (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCustomString(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomString (results As CompilerResults) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetCustomString(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">
          <span data-ttu-id="f4685-162">生成提供程序的虚拟路径的编译结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-162">The compilation results for the build provider's virtual path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4685-163">生成要在编译后的程序集中保留的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-163">Generates a string to be persisted in the compiled assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4685-164">要保留在生成环境中的字符串；如果 <see cref="T:System.Web.Compilation.BuildProvider" /> 实例不实现 <see cref="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />，则为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-164">A string to be persisted in the build environment, or <see langword="null" /> if the <see cref="T:System.Web.Compilation.BuildProvider" /> instance does not implement <see cref="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4685-165"><xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A>方法<xref:System.Web.Compilation.BuildManager>对象创建的生成提供程序输入的虚拟路径，并调用的实例<xref:System.Web.Compilation.BuildProvider.GetCustomString%2A>方法<xref:System.Web.Compilation.BuildProvider>对象。</span><span class="sxs-lookup"><span data-stu-id="f4685-165">The <xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A> method of a <xref:System.Web.Compilation.BuildManager> object creates an instance of a build provider for an input virtual path, and calls the <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> method on the <xref:System.Web.Compilation.BuildProvider> object.</span></span>  
  
 <span data-ttu-id="f4685-166">基<xref:System.Web.Compilation.BuildProvider>类返回`null`为<xref:System.Web.Compilation.BuildProvider.GetCustomString%2A>方法，指示<xref:System.Web.Compilation.BuildProvider.GetCustomString%2A>未实现。</span><span class="sxs-lookup"><span data-stu-id="f4685-166">The base <xref:System.Web.Compilation.BuildProvider> class returns `null` for the <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> method, indicating that <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> is not implemented.</span></span>  
  
 <span data-ttu-id="f4685-167">某些生成提供程序实现可以实现<xref:System.Web.Compilation.BuildProvider.GetCustomString%2A>代替了<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f4685-167">Certain build provider implementations can implement <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> in place of the <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> method.</span></span> <span data-ttu-id="f4685-168">A<xref:System.Web.Compilation.BuildProvider>对象通常使用<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>返回<xref:System.Type>虚拟路径的对象。</span><span class="sxs-lookup"><span data-stu-id="f4685-168">A <xref:System.Web.Compilation.BuildProvider> object typically uses <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> to return a <xref:System.Type> object for a virtual path.</span></span> <span data-ttu-id="f4685-169">但是，<xref:System.Web.Compilation.BuildProvider.GetCustomString%2A>方法可以用于指示<xref:System.Web.Compilation.BuildProvider>对象可以从虚拟路径生成多个类型。</span><span class="sxs-lookup"><span data-stu-id="f4685-169">However, the <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> method can be used to indicate that a <xref:System.Web.Compilation.BuildProvider> object can generate multiple types from a virtual path.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
        <altmember cref="M:System.Web.Compilation.BuildManager.GetCompiledCustomString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCompilerType">
      <MemberSignature Language="C#" Value="protected System.Web.Compilation.CompilerType GetDefaultCompilerType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.Compilation.CompilerType GetDefaultCompilerType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerType" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultCompilerType () As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::Compilation::CompilerType ^ GetDefaultCompilerType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f4685-170">返回应用程序中默认语言的编译器设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-170">Returns the compiler settings for the default language in the application.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4685-171">
            <see cref="T:System.Web.Compilation.CompilerType" />，表示应用程序中默认语言的编译器设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-171">A <see cref="T:System.Web.Compilation.CompilerType" /> that represents the compiler settings for the default language in the application.</span>
          </span>
          <span data-ttu-id="f4685-172">基类根据应用程序配置文件返回默认编译器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-172">The base class returns the default compiler based on the application configuration file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4685-173">使用<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A>方法可为生成提供程序检查默认的编译器类型。</span><span class="sxs-lookup"><span data-stu-id="f4685-173">Use the <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> method to examine the default compiler type for a build provider.</span></span> <span data-ttu-id="f4685-174">使用<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A>方法可检查配置中的生成提供程序特定语言名称的编译器类型。</span><span class="sxs-lookup"><span data-stu-id="f4685-174">Use the <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> method to examine the compiler type configured in a build provider for a specific language name.</span></span>  
  
 <span data-ttu-id="f4685-175">基<xref:System.Web.Compilation.BuildProvider>类可确定默认的编译器类型使用`defaultLanguage`属性值的部分中的应用程序配置文件。</span><span class="sxs-lookup"><span data-stu-id="f4685-175">The base <xref:System.Web.Compilation.BuildProvider> class determines the default compiler type using the `defaultLanguage` attribute value in the  section of the application configuration file.</span></span> <span data-ttu-id="f4685-176">如果没有编译部分中的默认语言设置，使用设置的默认编译器类型<xref:Microsoft.VisualBasic.VBCodeProvider>语言提供程序。</span><span class="sxs-lookup"><span data-stu-id="f4685-176">If there is no default language setting in the compilation section, the default compiler type is set using the <xref:Microsoft.VisualBasic.VBCodeProvider> language provider.</span></span>  
  
 <span data-ttu-id="f4685-177">从派生时<xref:System.Web.Compilation.BuildProvider>类，可以使用<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A>设置<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>中实现的属性。</span><span class="sxs-lookup"><span data-stu-id="f4685-177">When deriving from the <xref:System.Web.Compilation.BuildProvider> class, you can use <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> to set the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property within your implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCompilerTypeForLanguage">
      <MemberSignature Language="C#" Value="protected System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage (string language);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultCompilerTypeForLanguage (language As String) As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::Compilation::CompilerType ^ GetDefaultCompilerTypeForLanguage(System::String ^ language);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="f4685-178">代码语言名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-178">A code language name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4685-179">根据指定的语言返回生成提供程序的编译器设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-179">Returns the compiler settings for the build provider based on the specified language.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4685-180">
            <see cref="T:System.Web.Compilation.CompilerType" />，根据指定的语言表示生成提供程序的编译器设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-180">A <see cref="T:System.Web.Compilation.CompilerType" /> that represents the compiler settings for the build provider based on the specified language.</span>
          </span>
          <span data-ttu-id="f4685-181">基类根据应用程序配置文件返回该语言的默认编译器设置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-181">The base class returns the default compiler settings for the language based on the application configuration file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4685-182">使用<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A>方法可检查配置中的生成提供程序特定语言名称的编译器类型。</span><span class="sxs-lookup"><span data-stu-id="f4685-182">Use the <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> method to examine the compiler type configured in the build provider for a specific language name.</span></span> <span data-ttu-id="f4685-183">使用<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A>方法可为生成提供程序检查默认的编译器类型。</span><span class="sxs-lookup"><span data-stu-id="f4685-183">Use the <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> method to examine the default compiler type for a build provider.</span></span>  
  
 <span data-ttu-id="f4685-184">基<xref:System.Web.Compilation.BuildProvider>类可确定默认的编译器类型使用<xref:System.Web.Configuration.Compiler>中的元素<xref:System.Web.Configuration.CompilationSection.Compilers%2A>属性<xref:System.Web.Configuration.CompilationSection>配置文件的对象。</span><span class="sxs-lookup"><span data-stu-id="f4685-184">The base <xref:System.Web.Compilation.BuildProvider> class determines the default compiler type using the <xref:System.Web.Configuration.Compiler> elements in the <xref:System.Web.Configuration.CompilationSection.Compilers%2A> property of the <xref:System.Web.Configuration.CompilationSection> object for the configuration file.</span></span> <span data-ttu-id="f4685-185">这相当于检查和元素的配置文件的部分中的元素。</span><span class="sxs-lookup"><span data-stu-id="f4685-185">This is equivalent to examining the  elements in the  and the  elements in the  sections of the configuration file.</span></span> <span data-ttu-id="f4685-186">例如，对于`language`值 VB，基类方法将返回<xref:System.Web.Compilation.CompilerType>对应于为实例配置的设置的对象<xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f4685-186">For example, for the `language` value VB, the base class method returns a <xref:System.Web.Compilation.CompilerType> object that corresponds to the configured settings for an instance of <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f4685-187">派生自<xref:System.Web.Compilation.BuildProvider>类，可以使用<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A>设置<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>由您的实现所支持的语言的属性值。</span><span class="sxs-lookup"><span data-stu-id="f4685-187">When you derive from the <xref:System.Web.Compilation.BuildProvider> class, you can use <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> to set the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property value for the language supported by your implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f4685-188">
            <paramref name="language" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-188">
              <paramref name="language" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="f4685-189">
            <paramref name="language" /> 与生成提供程序的已配置编译器不匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-189">
              <paramref name="language" /> does not match a configured compiler for the build provider.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerType" />
        <altmember cref="P:System.Web.Configuration.CompilationSection.Compilers" />
        <altmember cref="T:System.Web.Configuration.Compiler" />
      </Docs>
    </Member>
    <Member MemberName="GetGeneratedType">
      <MemberSignature Language="C#" Value="public virtual Type GetGeneratedType (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetGeneratedType(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGeneratedType (results As CompilerResults) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetGeneratedType(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">
          <span data-ttu-id="f4685-190">生成提供程序的虚拟路径的编译结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-190">The compilation results for the build provider's virtual path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4685-191">返回生成提供程序从虚拟路径生成的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-191">Returns a type generated by the build provider from the virtual path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4685-192">生成提供程序为虚拟路径生成的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-192">The type that is generated by the build provider for the virtual path.</span>
          </span>
          <span data-ttu-id="f4685-193">基类返回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-193">The base class returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4685-194">若要实现为 Web 内容如.aspx 文件生成源代码的生成提供程序，从派生类<xref:System.Web.Compilation.BuildProvider>类并重写<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>方法以返回生成提供程序生成的类型。</span><span class="sxs-lookup"><span data-stu-id="f4685-194">To implement a build provider that generates source code for Web content such as .aspx files, derive a class from the <xref:System.Web.Compilation.BuildProvider> class and override the <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> method to return the type generated by the build provider.</span></span>  
  
 <span data-ttu-id="f4685-195">ASP.NET 生成系统会将文件编译为每个生成提供程序，并生成<xref:System.CodeDom.Compiler.CompilerResults>对象传递给<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f4685-195">The ASP.NET build system compiles files for each build provider, and generates a <xref:System.CodeDom.Compiler.CompilerResults> object, which is passed to the <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> method.</span></span> <span data-ttu-id="f4685-196">通常情况下，生成提供程序的<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>实现使用<xref:System.Reflection.Assembly.GetType%2A>方法<xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A>属性输入`results`对象以返回所提供的类型。</span><span class="sxs-lookup"><span data-stu-id="f4685-196">Typically, a build provider's <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> implementation uses the <xref:System.Reflection.Assembly.GetType%2A> method on the <xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A> property of the input `results` object to return the provided type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="GetResultFlags">
      <MemberSignature Language="C#" Value="public virtual System.Web.Compilation.BuildProviderResultFlags GetResultFlags (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Web.Compilation.BuildProviderResultFlags GetResultFlags(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResultFlags (results As CompilerResults) As BuildProviderResultFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Compilation::BuildProviderResultFlags GetResultFlags(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildProviderResultFlags</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">
          <span data-ttu-id="f4685-197">生成提供程序的虚拟路径的编译结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-197">The compilation results for the build provider's virtual path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4685-198">返回指示生成虚拟路径时所需操作的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-198">Returns a value indicating actions required when a virtual path is built.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4685-199">
            <see cref="T:System.Web.Compilation.BuildProviderResultFlags" /> 值，指示在 ASP.NET 生成环境中生成虚拟路径后所需的操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-199">A <see cref="T:System.Web.Compilation.BuildProviderResultFlags" /> value indicating actions required after the virtual path is built within the ASP.NET build environment.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4685-200"><xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A>方法由 ASP.NET 生成环境使用的实例时<xref:System.Web.Compilation.BuildProvider>类生成文件和加载已编译的程序集。</span><span class="sxs-lookup"><span data-stu-id="f4685-200">The <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> method is used by the ASP.NET build environment when using instances of the <xref:System.Web.Compilation.BuildProvider> class to build files and load the compiled assemblies.</span></span>  
  
 <span data-ttu-id="f4685-201">基<xref:System.Web.Compilation.BuildProvider>类方法返回<xref:System.Web.Compilation.BuildProviderResultFlags.Default>字段值，指示生成虚拟路径时，不需要任何特殊操作。</span><span class="sxs-lookup"><span data-stu-id="f4685-201">The base <xref:System.Web.Compilation.BuildProvider> class method returns the <xref:System.Web.Compilation.BuildProviderResultFlags.Default> field value, indicating that no special action is required when the virtual path is built.</span></span>  
  
 <span data-ttu-id="f4685-202">从派生时<xref:System.Web.Compilation.BuildProvider>类，你可以实现<xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A>方法以返回不同<xref:System.Web.Compilation.BuildProviderResultFlags>自定义文件类型或虚拟路径的值。</span><span class="sxs-lookup"><span data-stu-id="f4685-202">When deriving from the <xref:System.Web.Compilation.BuildProvider> class, you can implement the <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> method to return a different <xref:System.Web.Compilation.BuildProviderResultFlags> value for your custom file type or virtual path.</span></span> <span data-ttu-id="f4685-203">例如，如果重新生成你的虚拟路径将需要包含<xref:System.AppDomain>要重新加载，你可以返回对象<xref:System.Web.Compilation.BuildProviderResultFlags.ShutdownAppDomainOnChange>枚举值从你<xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f4685-203">For example, if a rebuild of your virtual path requires the containing <xref:System.AppDomain> object to be reloaded, you can return the <xref:System.Web.Compilation.BuildProviderResultFlags.ShutdownAppDomainOnChange> enumeration value from your <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
        <altmember cref="T:System.Web.Compilation.BuildProviderResultFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenReader">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f4685-204">打开文本读取器以从虚拟路径读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-204">Opens a text reader for reading from a virtual path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenReader">
      <MemberSignature Language="C#" Value="protected System.IO.TextReader OpenReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.TextReader OpenReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenReader" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenReader () As TextReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::TextReader ^ OpenReader();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f4685-205">打开文本读取器以从当前生成提供程序对象的虚拟路径读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-205">Opens a text reader for reading from the virtual path of the current build provider object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4685-206">打开的 <see cref="T:System.IO.TextReader" />，可用于读取 <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" /> 的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-206">An open <see cref="T:System.IO.TextReader" /> that can be used to read the contents of the <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4685-207">使用<xref:System.IO.TextReader.Read%2A>方法返回<xref:System.IO.TextReader>要读取的内容对象<xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>属性<xref:System.Web.Compilation.BuildProvider>对象。</span><span class="sxs-lookup"><span data-stu-id="f4685-207">Use the <xref:System.IO.TextReader.Read%2A> method on the returned <xref:System.IO.TextReader> object to read the contents of the <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property for a <xref:System.Web.Compilation.BuildProvider> object.</span></span>  
  
 <span data-ttu-id="f4685-208">在调用<xref:System.Web.Compilation.BuildProvider.OpenReader%2A>方法，则必须使用<xref:System.IO.TextReader.Close%2A>方法来关闭<xref:System.IO.TextReader>对象并释放关联的系统资源。</span><span class="sxs-lookup"><span data-stu-id="f4685-208">After calling the <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> method, you must use the <xref:System.IO.TextReader.Close%2A> method to close the <xref:System.IO.TextReader> object and free associated system resources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextReader" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="OpenReader">
      <MemberSignature Language="C#" Value="protected System.IO.TextReader OpenReader (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.TextReader OpenReader(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenReader(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenReader (virtualPath As String) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::TextReader ^ OpenReader(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="f4685-209">要读取的虚拟路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-209">The virtual path to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4685-210">打开文本读取器以从指定的虚拟路径读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-210">Opens a text reader for reading from a specified virtual path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4685-211">打开的 <see cref="T:System.IO.TextReader" />，可用于读取指定的虚拟路径的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-211">An open <see cref="T:System.IO.TextReader" /> that can be used to read the contents of the specified virtual path.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4685-212">使用<xref:System.IO.TextReader.Read%2A>方法返回的<xref:System.IO.TextReader>对象来读取的虚拟路径的内容。</span><span class="sxs-lookup"><span data-stu-id="f4685-212">Use the <xref:System.IO.TextReader.Read%2A> method on the returned <xref:System.IO.TextReader> object to read the contents of the virtual path.</span></span>  
  
 <span data-ttu-id="f4685-213">在调用<xref:System.Web.Compilation.BuildProvider.OpenReader%2A>方法，则必须使用<xref:System.IO.TextReader.Close%2A>方法来关闭<xref:System.IO.TextReader>对象并释放关联的系统资源。</span><span class="sxs-lookup"><span data-stu-id="f4685-213">After calling the <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> method, you must use the <xref:System.IO.TextReader.Close%2A> method to close the <xref:System.IO.TextReader> object and free associated system resources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStream">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f4685-214">打开流以从虚拟路径读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-214">Opens a stream for reading from a virtual path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OpenStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.Stream OpenStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenStream" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::Stream ^ OpenStream();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f4685-215">打开流以读取当前生成提供程序对象的虚拟路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-215">Opens a stream for reading the virtual path of the current build provider object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4685-216">打开的 <see cref="T:System.IO.Stream" />，可用于读取 <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" /> 的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-216">An open <see cref="T:System.IO.Stream" /> that can be used to read the contents of the <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4685-217">使用<xref:System.IO.Stream.Read%2A>方法返回<xref:System.IO.Stream>要读取的虚拟路径的内容对象<xref:System.Web.Compilation.BuildProvider>对象。</span><span class="sxs-lookup"><span data-stu-id="f4685-217">Use the <xref:System.IO.Stream.Read%2A> method on the returned <xref:System.IO.Stream> object to read the contents of the virtual path for the <xref:System.Web.Compilation.BuildProvider> object.</span></span>  
  
 <span data-ttu-id="f4685-218">在调用<xref:System.Web.Compilation.BuildProvider.OpenStream%2A>方法，则必须使用<xref:System.IO.Stream.Close%2A>方法来关闭<xref:System.IO.Stream>对象并释放关联的系统资源。</span><span class="sxs-lookup"><span data-stu-id="f4685-218">After calling the <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> method, you must use the <xref:System.IO.Stream.Close%2A> method to close the <xref:System.IO.Stream> object and free associated system resources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OpenStream (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.Stream OpenStream(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenStream (virtualPath As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::Stream ^ OpenStream(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="f4685-219">要读取的虚拟路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-219">The virtual path to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4685-220">打开流以从指定的虚拟路径读取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-220">Opens a stream for reading from a specified virtual path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4685-221">打开的 <see cref="T:System.IO.Stream" />，可用于读取指定的虚拟路径的内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-221">An open <see cref="T:System.IO.Stream" /> that can be used to read the contents of the specified virtual path.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4685-222">使用<xref:System.IO.Stream.Read%2A>方法返回的<xref:System.IO.Stream>对象来读取的虚拟路径的内容。</span><span class="sxs-lookup"><span data-stu-id="f4685-222">Use the <xref:System.IO.Stream.Read%2A> method on the returned <xref:System.IO.Stream> object to read the contents of the virtual path.</span></span>  
  
 <span data-ttu-id="f4685-223">在调用<xref:System.Web.Compilation.BuildProvider.OpenStream%2A>方法，则必须使用<xref:System.IO.Stream.Close%2A>方法来关闭<xref:System.IO.Stream>对象并释放关联的系统资源。</span><span class="sxs-lookup"><span data-stu-id="f4685-223">After calling the <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> method, you must use the <xref:System.IO.Stream.Close%2A> method to close the <xref:System.IO.Stream> object and free associated system resources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCompileErrors">
      <MemberSignature Language="C#" Value="public virtual void ProcessCompileErrors (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessCompileErrors(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessCompileErrors (results As CompilerResults)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessCompileErrors(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">
          <span data-ttu-id="f4685-224">编译器结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-224">Compiler results.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4685-225">当在派生类中被重写时，能够查看编译器错误消息，以便将其修改为提供更多信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-225">When overridden in a derived class, enables you to review compiler error messages so that you can modify them to provide more information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4685-226">你通常重写此方法，以便它们为了使对用户更有帮助的错误文本显示之前，你可以修改编译器错误。</span><span class="sxs-lookup"><span data-stu-id="f4685-226">You typically override this method so that you can modify compiler errors before they are displayed in order to make the error text more helpful to the user.</span></span> <span data-ttu-id="f4685-227">这是非常有用的认识某些错误的上下文并可向有关如何解决它们的用户提供信息的位置。</span><span class="sxs-lookup"><span data-stu-id="f4685-227">This is useful in scenarios where you know the context of certain errors and can provide information to the user about how to fix them.</span></span> <span data-ttu-id="f4685-228">原始的编译器错误消息通常特定于特定语言构造，并可能无法实现的真正原因或解决方案明显给用户。</span><span class="sxs-lookup"><span data-stu-id="f4685-228">The original compiler error message is usually specific to a particular language construct and might not make the real cause or solution obvious to the user.</span></span>  
  
 <span data-ttu-id="f4685-229">你可以通过使用访问错误<xref:System.CodeDom.Compiler.CompilerResults>传递给方法的对象。</span><span class="sxs-lookup"><span data-stu-id="f4685-229">You can access the errors by using the <xref:System.CodeDom.Compiler.CompilerResults> object that is passed to the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedAssemblies">
      <MemberSignature Language="C#" Value="protected System.Collections.ICollection ReferencedAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection ReferencedAssemblies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ReferencedAssemblies As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::ICollection ^ ReferencedAssemblies { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f4685-230">表示要用生成提供程序生成的源代码进行编译的程序集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-230">Represents the assemblies to compile with the source generated by the build provider.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f4685-231">程序集的只读集合，可由生成提供程序生成的源代码引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-231">A read-only collection of assemblies that can be referenced by the source code generated by the build provider.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4685-232">ASP.NET 生成环境初始化可为生成提供程序的引用的程序集的集合。</span><span class="sxs-lookup"><span data-stu-id="f4685-232">The ASP.NET build environment initializes the collection of assemblies that are available for reference by the build provider.</span></span> <span data-ttu-id="f4685-233">生成提供程序生成的源代码可以使用公共类型中引用的程序集。</span><span class="sxs-lookup"><span data-stu-id="f4685-233">The source code generated by a build provider can use public types in the referenced assemblies.</span></span> <span data-ttu-id="f4685-234">引用的程序集集合包含的其他 ASP.NET 应用程序，在生成的程序集和配置文件中的元素中列出的程序集。</span><span class="sxs-lookup"><span data-stu-id="f4685-234">The referenced assembly collection consists of other assemblies built in the ASP.NET application, and assemblies listed in the  element in the configuration file.</span></span>  
  
 <span data-ttu-id="f4685-235">如果生成提供程序生成引用其他程序集的源代码，生成提供程序将使用的其他程序集添加<xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f4685-235">If the build provider generates source code that references additional assemblies, the build provider adds the additional assemblies using the <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> method.</span></span> <span data-ttu-id="f4685-236">ASP.NET 生成环境解析外部类型在使用添加的两个引用的程序集的程序集编译过程生成提供程序和可用于引用的程序集的默认集合。</span><span class="sxs-lookup"><span data-stu-id="f4685-236">The ASP.NET build environment resolves external types during assembly compilation using both the referenced assemblies added by build providers and the default collection of assemblies available for reference.</span></span>  
  
 <span data-ttu-id="f4685-237"><xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A>集合不包括程序集是通过其他生成提供程序通过添加为引用<xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f4685-237">The <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A> collection does not include assemblies that are added for reference by other build providers through the <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      </Docs>
    </Member>
    <Member MemberName="RegisterBuildProvider">
      <MemberSignature Language="C#" Value="public static void RegisterBuildProvider (string extension, Type providerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterBuildProvider(string extension, class System.Type providerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.RegisterBuildProvider(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterBuildProvider (extension As String, providerType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterBuildProvider(System::String ^ extension, Type ^ providerType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
        <Parameter Name="providerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="extension">
          <span data-ttu-id="f4685-238">生成提供程序所针对的文件扩展名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-238">The file-name extension that the build provider is for.</span>
          </span>
        </param>
        <param name="providerType">
          <span data-ttu-id="f4685-239">生成提供程序类。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-239">The build provider class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4685-240">注册一个生成提供程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-240">Registers a build provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4685-241">你可以使用此方法注册生成提供程序而不是在 Web.config 文件中定义它们。</span><span class="sxs-lookup"><span data-stu-id="f4685-241">You can use this method to register build providers instead of defining them in the Web.config file.</span></span> <span data-ttu-id="f4685-242">有关生成提供程序的详细信息，请参阅<xref:System.Web.Compilation.BuildProvider>类和[buildProviders 元素进行编译 （ASP.NET 设置架构）](http://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384)。</span><span class="sxs-lookup"><span data-stu-id="f4685-242">For more information about build providers, see the <xref:System.Web.Compilation.BuildProvider> class and [buildProviders Element for compilation (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="protected internal string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f4685-243">表示要由此生成提供程序实现生成的文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-243">Represents the file to be built by this build provider implementation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f4685-244">只读字符串，指定要由此生成提供程序编译的文件的虚拟路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-244">A read-only string that specifies the virtual path of a file to be compiled by this build provider.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4685-245">虚拟路径<xref:System.Web.Compilation.BuildProvider>对象是正在编译生成提供程序的文件的路径。</span><span class="sxs-lookup"><span data-stu-id="f4685-245">The virtual path of a <xref:System.Web.Compilation.BuildProvider> object is the path to the file that is being compiled by the build provider.</span></span> <span data-ttu-id="f4685-246">例如，如果你已配置自定义<xref:System.Web.Compilation.BuildProvider>类，以生成具有.abc，自定义扩展的 Web 站点中的所有文件，如果您的网站名为 WebSite1，并且该网站包含一个名为 Example.abc，文件<xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>属性包含值`/WebSite1/Example.abc`.</span><span class="sxs-lookup"><span data-stu-id="f4685-246">For example, if you have configured a custom <xref:System.Web.Compilation.BuildProvider> class to build all files in the Web site with the custom extension of .abc, if your Web site is named WebSite1, and the Web site contains a file named Example.abc, the <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property contains the value `/WebSite1/Example.abc`.</span></span>  
  
 <span data-ttu-id="f4685-247">应用程序中的每个文件的文件扩展名确定文件类型，以及相应的生成提供程序为文件类型。</span><span class="sxs-lookup"><span data-stu-id="f4685-247">The file extension of each file within the application determines the file type, and the corresponding build provider for the file type.</span></span> <span data-ttu-id="f4685-248">ASP.NET 生成环境初始化<xref:System.Web.Compilation.BuildProvider>对象每个文件基于的文件类型，并使用<xref:System.Web.Compilation.BuildProvider>要生成的每个文件的源的方法。</span><span class="sxs-lookup"><span data-stu-id="f4685-248">The ASP.NET build environment initializes a <xref:System.Web.Compilation.BuildProvider> object for each file based on the file type, and uses the <xref:System.Web.Compilation.BuildProvider> methods to generate source for each file.</span></span>  
  
 <span data-ttu-id="f4685-249">有关配置的生成提供程序的详细信息，请参阅[buildProviders 元素进行编译 （ASP.NET 设置架构）](http://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384)。</span><span class="sxs-lookup"><span data-stu-id="f4685-249">For more information about configuring a build provider, see [buildProviders Element for compilation (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="VirtualPathDependencies">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection VirtualPathDependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection VirtualPathDependencies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property VirtualPathDependencies As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ VirtualPathDependencies { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f4685-250">表示在生成提供程序生成代码之前必须生成的虚拟路径的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-250">Represents a collection of virtual paths that must be built before the build provider generates code.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f4685-251">字符串的只读集合，表示生成提供程序的该实例依赖的虚拟路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4685-251">A read-only collection of strings, representing the virtual paths that this instance of the build provider is dependent on.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4685-252"><xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A>属性是必须在之前编译的虚拟路径的集合<xref:System.Web.Compilation.BuildProvider>实例生成源代码。</span><span class="sxs-lookup"><span data-stu-id="f4685-252">The <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> property is a collection of virtual paths that must be compiled before the <xref:System.Web.Compilation.BuildProvider> instance generates source code.</span></span> <span data-ttu-id="f4685-253">将中的虚拟路径的程序集<xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A>作为引用添加到针对编译<xref:System.Web.Compilation.BuildProvider>实例。</span><span class="sxs-lookup"><span data-stu-id="f4685-253">The assemblies from the virtual paths in <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> are added as references to the compilation for the <xref:System.Web.Compilation.BuildProvider> instance.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </Docs>
    </Member>
  </Members>
</Type>