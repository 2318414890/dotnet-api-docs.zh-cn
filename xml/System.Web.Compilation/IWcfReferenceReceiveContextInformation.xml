<Type Name="IWcfReferenceReceiveContextInformation" FullName="System.Web.Compilation.IWcfReferenceReceiveContextInformation">
  <Metadata><Meta Name="ms.openlocfilehash" Value="98c8b937128556eb3c6d6e637ca6e48c299cbedb" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59742434" /></Metadata><TypeSignature Language="C#" Value="public interface IWcfReferenceReceiveContextInformation" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWcfReferenceReceiveContextInformation" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.IWcfReferenceReceiveContextInformation" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWcfReferenceReceiveContextInformation" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWcfReferenceReceiveContextInformation" />
  <TypeSignature Language="F#" Value="type IWcfReferenceReceiveContextInformation = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>定义要为获取附加上下文信息而实现的接口。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此接口允许接收代理生成更好和更好的开发人员体验在 Visual Studio 中的额外的上下文信息的 WSDL 导入程序机制。 如果 WSDL 导入程序实现<xref:System.Web.Compilation.IWcfReferenceReceiveContextInformation>接口，`ReceiveImportContextInformation`方法将调用的任何方法之前的 WCF 代理生成器<xref:System.ServiceModel.Description.IWsdlImportExtension>和<xref:System.ServiceModel.Description.IPolicyImportExtension>调用。  
  
 其他上下文信息引用的参数传递给`ReceiveImportContextInformation`方法。 参数包括任何扩展名为的文件和对实现的对象的引用的内容<xref:System.IServiceProvider>接口。 传递给方法的任何扩展文件特定于导入程序，用于存储所需的任何其他信息。 也就是说，Visual Studio 不控制这些文件的内容并不直接使用它们。  
  
> [!NOTE]
>  导入程序指 WCF 可扩展性机制。 此机制，可自定义元数据 (WSDL/XSD) 文档，用于描述该服务从生成代理代码的方式。 有关详细信息，请参阅[导入 WCF 扩展的自定义元数据](https://go.microsoft.com/fwlink/?LinkId=92310)MSDN 上。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ReceiveImportContextInformation">
      <MemberSignature Language="C#" Value="public void ReceiveImportContextInformation (System.Collections.Generic.IDictionary&lt;string,byte[]&gt; serviceReferenceExtensionFileContents, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReceiveImportContextInformation(class System.Collections.Generic.IDictionary`2&lt;string, unsigned int8[]&gt; serviceReferenceExtensionFileContents, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.IWcfReferenceReceiveContextInformation.ReceiveImportContextInformation(System.Collections.Generic.IDictionary{System.String,System.Byte[]},System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReceiveImportContextInformation (serviceReferenceExtensionFileContents As IDictionary(Of String, Byte()), serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReceiveImportContextInformation(System::Collections::Generic::IDictionary&lt;System::String ^, cli::array &lt;System::Byte&gt; ^&gt; ^ serviceReferenceExtensionFileContents, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member ReceiveImportContextInformation : System.Collections.Generic.IDictionary&lt;string, byte[]&gt; * IServiceProvider -&gt; unit" Usage="iWcfReferenceReceiveContextInformation.ReceiveImportContextInformation (serviceReferenceExtensionFileContents, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceReferenceExtensionFileContents" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Byte[]&gt;" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceReferenceExtensionFileContents">提供与 WCF 服务引用的 .svcmap 文件相关联的任何扩展文件的内容。</param>
        <param name="serviceProvider">对 Visual Studio 服务提供程序的引用，用于查询附加信息的。</param>
        <summary>获取附加上下文信息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `serviceReferenceExtensionFileContents`参数提供的与 WCF 服务引用，如 Reference.config 或已通过扩展性添加的自定义扩展插件文件.svcmap 文件相关联的任何扩展文件的内容。  
  
> [!NOTE]
>  在 ASP.NET 生成提供程序的上下文中运行时，从特定于 Visual Studio 服务提供程序接收任何接口将无法供导入扩展。 WCF 服务引用编译的 ASP.NET 项目时，这是这种情况。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>