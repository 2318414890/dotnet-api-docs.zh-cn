<Type Name="ExpressionBuilder" FullName="System.Web.Compilation.ExpressionBuilder">
  <TypeSignature Language="C#" Value="public abstract class ExpressionBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ExpressionBuilder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionBuilder abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7b1e9-101">在分析页的过程中计算表达式。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-101">Evaluates expressions during page parsing.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b1e9-102"><xref:System.Web.Compilation.ExpressionBuilder>类是表达式生成器的基类，如<xref:System.Web.Compilation.AppSettingsExpressionBuilder>类，这在页分析过程中创建的代码表达式。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-102">The <xref:System.Web.Compilation.ExpressionBuilder> class is the base class for expression builders, such as the <xref:System.Web.Compilation.AppSettingsExpressionBuilder> class, that create code expressions during page parsing.</span></span>  
  
 <span data-ttu-id="7b1e9-103">表达式生成器分析声明性的表达式，并创建代码来检索绑定到的控件属性的值。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-103">Expression builders parse declarative expressions and create code to retrieve values bound to a control property.</span></span> <span data-ttu-id="7b1e9-104">在非编译方案中，支持非编译功能的表达式生成器计算过程运行时中的表达式。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-104">In no-compile scenarios, an expression builder that supports a no-compile feature evaluates the expression during run time.</span></span>  
  
 <span data-ttu-id="7b1e9-105">当页分析器遇到与字符串分隔的表达式`<%$ %>`，它创建基于字符串中的前缀的表达式的表达式生成器。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-105">When the page parser encounters an expression that is delimited with the string `<%$ %>`, it creates an expression builder for the expression based on the prefix in the string.</span></span> <span data-ttu-id="7b1e9-106">前缀是字符串的冒号 （:） 左侧的部分。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-106">The prefix is the portion of the string that is to the left of the colon (:).</span></span> <span data-ttu-id="7b1e9-107">例如，当分析器遇到字符串`<%$ ConnectionStrings:MessageDB %>`，它会创建<xref:System.Web.Compilation.ConnectionStringsExpressionBuilder>对象。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-107">For example, when the parser encounters the string `<%$ ConnectionStrings:MessageDB %>`, it creates a <xref:System.Web.Compilation.ConnectionStringsExpressionBuilder> object.</span></span> <span data-ttu-id="7b1e9-108">前缀是与中的 Web.config 文件中的表达式生成器关联<xref:System.Web.Configuration.CompilationSection.ExpressionBuilders%2A>部分。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-108">Prefixes are associated with expression builders in the Web.config file in the <xref:System.Web.Configuration.CompilationSection.ExpressionBuilders%2A> section.</span></span>  
  
 <span data-ttu-id="7b1e9-109">声明性的表达式的右侧将传递到表达式生成器，进行评估。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-109">The right side of the declarative expression is passed to the expression builder for evaluation.</span></span> <span data-ttu-id="7b1e9-110">重写<xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A>方法以生成将替换为页编译的代码。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-110">Override the <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> method to generate code that will be compiled with the page.</span></span>  
  
 <span data-ttu-id="7b1e9-111">如果你想要不进行编译的页面上处于活动状态的自定义表达式生成器，还必须重写<xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>方法以返回一个对象，表示表达式的结果。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-111">If you want the custom expression builder to be active on pages that are not compiled, you must also override the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method to return an object that represents the results of the expression.</span></span> <span data-ttu-id="7b1e9-112">此外必须重写<xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A>属性以指示，自定义表达式生成器支持非编译页。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-112">You also must override the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property to indicate that the custom expression builder does support no-compile pages.</span></span>  
  
 <span data-ttu-id="7b1e9-113">你可以定义一组属性和用于选择并计算表达式与该键关联的控件属性在设计时通过实现一个表达式编辑器的方法。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-113">You can define a set of properties and methods for selecting and evaluating an expression that is associated with a control property at design time by implementing an expression editor.</span></span> <span data-ttu-id="7b1e9-114">编辑器是在类级别的元数据通过表达式生成器上标记。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-114">The editor is marked on the expression builder through class-level metadata.</span></span> <span data-ttu-id="7b1e9-115">有关详情，请参阅<xref:System.Web.UI.Design.ExpressionEditor>。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-115">For more information, see <xref:System.Web.UI.Design.ExpressionEditor>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b1e9-116">下面的代码示例演示如何通过实现生成自定义表达式生成器<xref:System.Web.Compilation.ExpressionBuilder>抽象类。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-116">The following code examples demonstrate how to build a custom expression builder by implementing the <xref:System.Web.Compilation.ExpressionBuilder> abstract class.</span></span> <span data-ttu-id="7b1e9-117">此实现的<xref:System.Web.Compilation.ExpressionBuilder>返回语句传递给表达式的计算结果。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-117">This implementation of <xref:System.Web.Compilation.ExpressionBuilder> returns an evaluated statement that is passed to the expression.</span></span> <span data-ttu-id="7b1e9-118">若要运行此示例中，您必须首先在 Web.config 文件中注册自定义表达式生成器。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-118">To run this example, you must first register the custom expression builder in the Web.config file.</span></span> <span data-ttu-id="7b1e9-119">第一个代码示例演示如何在 Web.config 文件中注册自定义表达式生成器。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-119">The first code example demonstrates how to register the custom expression builder in the Web.config file.</span></span>  
  
```  
<configuration>  
    <system.web>  
       <compilation>  
          <expressionBuilders>  
              <add expressionPrefix="MyCustomExpression"  
               type="MyCustomExpressionBuilder"/>  
          </expressionBuilders>  
       </compilation>  
    </system.web>  
</configuration>  
```  
  
 <span data-ttu-id="7b1e9-120">第二个代码示例演示如何引用一个.aspx 文件中的表达式。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-120">The second code example demonstrates how to reference the expression in an .aspx file.</span></span>  
  
```  
<asp:Label ID="Label1" runat="server"   
Text="<%$ MyCustomExpression:Hello, world! %>" />  
```  
  
 <span data-ttu-id="7b1e9-121">第三个代码示例演示如何通过从派生开发自定义的表达式生成器<xref:System.Web.Compilation.ExpressionBuilder>。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-121">The third code example demonstrates how to develop a customized expression builder by deriving from <xref:System.Web.Compilation.ExpressionBuilder>.</span></span> <span data-ttu-id="7b1e9-122">若要运行此代码示例，必须将该类放入 App_Code 文件夹中。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-122">To run this code example, you must place the class in the App_Code folder.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ExpressionBuilder#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/CS/MyExpressionBuilder.cs#1)] 
 [!code-vb[System.Web.Compilation.ExpressionBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/VB/MyExpressionBuilder.vb#1)]   
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="7b1e9-123">继承自<see cref="T:System.Web.Compilation.ExpressionBuilder" />类，必须重写<see cref="M:System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />方法。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-123">When you inherit from the <see cref="T:System.Web.Compilation.ExpressionBuilder" /> class, you must override the <see cref="M:System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" /> method.</span></span></para>
    </block>
    <altmember cref="T:System.Web.Compilation.ExpressionBuilderContext" />
    <altmember cref="T:System.Web.Configuration.ExpressionBuilder" />
    <altmember cref="T:System.Web.Configuration.ExpressionBuilderCollection" />
    <altmember cref="T:System.Web.Compilation.AppSettingsExpressionBuilder" />
    <altmember cref="T:System.Web.Compilation.ConnectionStringsExpressionBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ExpressionBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7b1e9-124">初始化 <see cref="T:System.Web.Compilation.ExpressionBuilder" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-124">Initializes a new instance of the <see cref="T:System.Web.Compilation.ExpressionBuilder" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b1e9-125">因为<xref:System.Web.Compilation.ExpressionBuilder>类为抽象类，你无法创建的实例<xref:System.Web.Compilation.ExpressionBuilder>直接通过使用<xref:System.Web.Compilation.ExpressionBuilder.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-125">Because the <xref:System.Web.Compilation.ExpressionBuilder> class is abstract, you cannot create an instance of <xref:System.Web.Compilation.ExpressionBuilder> directly by using the <xref:System.Web.Compilation.ExpressionBuilder.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="7b1e9-126">从派生时<see cref="T:System.Web.Compilation.ExpressionBuilder" />类，请替代<see cref="M:System.Web.Compilation.ExpressionBuilder.#ctor" />构造函数来实现您的表达式生成器实现的自定义初始化操作。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-126">When deriving from the <see cref="T:System.Web.Compilation.ExpressionBuilder" /> class, override the <see cref="M:System.Web.Compilation.ExpressionBuilder.#ctor" /> constructor to implement custom initialization actions for your expression builder implementation.</span></span></para>
        </block>
        <altmember cref="T:System.Web.Compilation.ExpressionBuilderContext" />
        <altmember cref="T:System.Web.Configuration.ExpressionBuilder" />
        <altmember cref="T:System.Web.Configuration.ExpressionBuilderCollection" />
        <altmember cref="T:System.Web.Compilation.AppSettingsExpressionBuilder" />
        <altmember cref="T:System.Web.Compilation.ConnectionStringsExpressionBuilder" />
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public virtual object EvaluateExpression (object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EvaluateExpression(object target, class System.Web.UI.BoundPropertyEntry entry, object parsedData, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EvaluateExpression (target As Object, entry As BoundPropertyEntry, parsedData As Object, context As ExpressionBuilderContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ EvaluateExpression(System::Object ^ target, System::Web::UI::BoundPropertyEntry ^ entry, System::Object ^ parsedData, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="entry" Type="System.Web.UI.BoundPropertyEntry" />
        <Parameter Name="parsedData" Type="System.Object" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="7b1e9-127">包含表达式的对象。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-127">The object containing the expression.</span></span></param>
        <param name="entry"><span data-ttu-id="7b1e9-128">表示与被表达式绑定到的属性有关的信息的对象。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-128">The object that represents information about the property bound to by the expression.</span></span></param>
        <param name="parsedData"><span data-ttu-id="7b1e9-129">包含通过分析得到并且由 <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" /> 返回的数据的对象。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-129">The object containing parsed data as returned by <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />.</span></span></param>
        <param name="context"><span data-ttu-id="7b1e9-130">表达式计算的上下文信息。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-130">Contextual information for the evaluation of the expression.</span></span></param>
        <summary><span data-ttu-id="7b1e9-131">在派生类中重写时，会返回一个对象，该对象表示计算出的表达式。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-131">When overridden in a derived class, returns an object that represents an evaluated expression.</span></span></summary>
        <returns><span data-ttu-id="7b1e9-132">表示计算出的表达式的对象；如果继承者未实现 <see cref="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-132">An object that represents the evaluated expression; otherwise, <see langword="null" /> if the inheritor does not implement <see cref="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b1e9-133">如果你希望你<xref:System.Web.Compilation.ExpressionBuilder>对象以支持非编译功能的页上处于活动状态可以重写<xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>方法和<xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-133">If you want your <xref:System.Web.Compilation.ExpressionBuilder> object to be active on a page that supports the no-compile feature, you can override the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method and the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property.</span></span> <span data-ttu-id="7b1e9-134"><xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>方法应返回当前表达式的计算。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-134">The <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method should return the evaluation of the current expression.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b1e9-135">下面的代码示例演示如何使用重写<xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>方法以返回计算的表达式。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-135">The following code example demonstrates how to use the overridden <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method to return an evaluated expression.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ExpressionBuilder#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/CS/MyExpressionBuilder.cs#3)]    
 [!code-vb[System.Web.Compilation.ExpressionBuilder#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/VB/MyExpressionBuilder.vb#3)]   
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="7b1e9-136">如果你重写<see cref="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />方法，你还必须重写<see cref="P:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate" />属性。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-136">If you override the <see cref="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" /> method, you must also override the <see cref="P:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate" /> property.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetCodeExpression">
      <MemberSignature Language="C#" Value="public abstract System.CodeDom.CodeExpression GetCodeExpression (System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeExpression GetCodeExpression(class System.Web.UI.BoundPropertyEntry entry, object parsedData, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCodeExpression (entry As BoundPropertyEntry, parsedData As Object, context As ExpressionBuilderContext) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::CodeDom::CodeExpression ^ GetCodeExpression(System::Web::UI::BoundPropertyEntry ^ entry, System::Object ^ parsedData, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Web.UI.BoundPropertyEntry" />
        <Parameter Name="parsedData" Type="System.Object" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="entry"><span data-ttu-id="7b1e9-137">表示与被表达式绑定到的属性有关的信息的对象。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-137">The object that represents information about the property bound to by the expression.</span></span></param>
        <param name="parsedData"><span data-ttu-id="7b1e9-138">包含通过分析得到并且由 <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" /> 返回的数据的对象。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-138">The object containing parsed data as returned by <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />.</span></span></param>
        <param name="context"><span data-ttu-id="7b1e9-139">表达式计算的上下文信息。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-139">Contextual information for the evaluation of the expression.</span></span></param>
        <summary><span data-ttu-id="7b1e9-140">在派生类中重写时，返回在页执行过程中用来获取计算出的表达式的代码。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-140">When overridden in a derived class, returns code that is used during page execution to obtain the evaluated expression.</span></span></summary>
        <returns><span data-ttu-id="7b1e9-141">用于为属性赋值的 <see cref="T:System.CodeDom.CodeExpression" />。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-141">A <see cref="T:System.CodeDom.CodeExpression" /> that is used for property assignment.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b1e9-142">继承自的类<xref:System.Web.Compilation.ExpressionBuilder>类必须实现<xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A>抽象方法。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-142">Classes that inherit from the <xref:System.Web.Compilation.ExpressionBuilder> class must implement the <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> abstract method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b1e9-143">下面的代码示例演示如何返回<xref:System.CodeDom.CodeExpression>对象通过重写<xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-143">The following code example demonstrates how to return a <xref:System.CodeDom.CodeExpression> object by overriding the <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> method.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ExpressionBuilder#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/CS/MyExpressionBuilder.cs#4)] 
 [!code-vb[System.Web.Compilation.ExpressionBuilder#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/VB/MyExpressionBuilder.vb#4)]   
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="7b1e9-144">如果实现自定义表达式生成器时，你必须执行正确的类型强制转换为控件属性，并返回中的强制转换操作<see cref="T:System.CodeDom.CodeExpression" />对象。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-144">If you implement a custom expression builder, you must perform the proper type casting for the control property and return the cast operation in the <see cref="T:System.CodeDom.CodeExpression" /> object.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ParseExpression">
      <MemberSignature Language="C#" Value="public virtual object ParseExpression (string expression, Type propertyType, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ParseExpression(string expression, class System.Type propertyType, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ParseExpression (expression As String, propertyType As Type, context As ExpressionBuilderContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ParseExpression(System::String ^ expression, Type ^ propertyType, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="7b1e9-145">声明性表达式的值。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-145">The value of the declarative expression.</span></span></param>
        <param name="propertyType"><span data-ttu-id="7b1e9-146">被表达式绑定到的属性的类型。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-146">The type of the property bound to by the expression.</span></span></param>
        <param name="context"><span data-ttu-id="7b1e9-147">表达式计算的上下文信息。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-147">Contextual information for the evaluation of the expression.</span></span></param>
        <summary><span data-ttu-id="7b1e9-148">在派生类中重写时，会返回一个对象，该对象表示通过分析得到的表达式。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-148">When overridden in a derived class, returns an object that represents the parsed expression.</span></span></summary>
        <returns><span data-ttu-id="7b1e9-149">包含表达式在分析之后的表示形式的 <see cref="T:System.Object" />；如果未实现 <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-149">An <see cref="T:System.Object" /> containing the parsed representation of the expression; otherwise, <see langword="null" /> if <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" /> is not implemented.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b1e9-150">当在派生类中重写此方法分析表达式，并将其作为一个对象，可用作返回`parsedData`中的参数<xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A>或<xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-150">When overridden in a derived class, this method parses the expression and returns it as an object that can be used as the `parsedData` parameter in a <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> or <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsEvaluate">
      <MemberSignature Language="C#" Value="public virtual bool SupportsEvaluate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsEvaluate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsEvaluate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsEvaluate { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7b1e9-151">在派生类中重写时，会返回一个值，该值指示当前 <see cref="T:System.Web.Compilation.ExpressionBuilder" /> 对象是否支持非编译页。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-151">When overridden in a derived class, returns a value indicating whether the current <see cref="T:System.Web.Compilation.ExpressionBuilder" /> object supports no-compile pages.</span></span></summary>
        <value>
          <span data-ttu-id="7b1e9-152">如果 <see cref="T:System.Web.Compilation.ExpressionBuilder" /> 支持表达式计算，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-152"><see langword="true" /> if the <see cref="T:System.Web.Compilation.ExpressionBuilder" /> supports expression evaluation; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b1e9-153">默认值为<xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A>属性是`false`。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-153">The default value for the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property is `false`.</span></span> <span data-ttu-id="7b1e9-154">若要支持非编译页，你必须重写二者<xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>方法和<xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-154">To support no-compile pages, you must override both the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method and the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b1e9-155">下面的代码示例演示如何使用<xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7b1e9-155">The following code example demonstrates how to use the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ExpressionBuilder#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/CS/MyExpressionBuilder.cs#2)] 
 [!code-vb[System.Web.Compilation.ExpressionBuilder#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/VB/MyExpressionBuilder.vb#2)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>