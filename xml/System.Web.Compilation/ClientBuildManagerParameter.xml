<Type Name="ClientBuildManagerParameter" FullName="System.Web.Compilation.ClientBuildManagerParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="df67407c6097ad233c005e63868b8e8810f3a9aa" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ClientBuildManagerParameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ClientBuildManagerParameter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ClientBuildManagerParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientBuildManagerParameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientBuildManagerParameter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="39a55-101">包含在预编译期间传递给 ASP.NET 编译器的值。</span>
      <span class="sxs-lookup">
        <span data-stu-id="39a55-101">Contains values passed to the ASP.NET compiler during precompilation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39a55-102">ASP.NET Web 页和代码文件可以预编译方便用户更快地响应和允许的站点的部署而不部署的源代码。</span><span class="sxs-lookup"><span data-stu-id="39a55-102">ASP.NET Web pages and code files can be precompiled to facilitate a faster response for users and allow for the deployment of the site without deploying the source code.</span></span> <span data-ttu-id="39a55-103">预编译的 ASP.NET Web 站点的详细信息，请参阅[ASP.NET 网站项目预编译概述](http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a)。</span><span class="sxs-lookup"><span data-stu-id="39a55-103">For more information on precompiling an ASP.NET Web site, see [ASP.NET Web Site Project Precompilation Overview](http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a).</span></span>  
  
 <span data-ttu-id="39a55-104"><xref:System.Web.Compilation.ClientBuildManagerParameter>类存储在预编译过程中使用的值。</span><span class="sxs-lookup"><span data-stu-id="39a55-104">The <xref:System.Web.Compilation.ClientBuildManagerParameter> class stores values that are used during precompilation.</span></span> <span data-ttu-id="39a55-105"><xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>属性确定将如何生成程序集。</span><span class="sxs-lookup"><span data-stu-id="39a55-105">The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property determines how the assembly will be built.</span></span> <span data-ttu-id="39a55-106">例如，你可以设置<xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>到<xref:System.Web.Compilation.PrecompilationFlags.Clean>需重新编译任何以前编译的组件，或将其设置为<xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget>以允许生成的程序集，以覆盖目标目录中的任何组件。</span><span class="sxs-lookup"><span data-stu-id="39a55-106">For example, you can set <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> to <xref:System.Web.Compilation.PrecompilationFlags.Clean> to recompile any previously compiled components, or set it to <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> to permit the resulting assembly to overwrite any components in the target directory.</span></span> <span data-ttu-id="39a55-107"><xref:System.Web.Compilation.PrecompilationFlags>枚举数具有<xref:System.FlagsAttribute>属性允许其成员值的按位组合。</span><span class="sxs-lookup"><span data-stu-id="39a55-107">The <xref:System.Web.Compilation.PrecompilationFlags> enumerator has a <xref:System.FlagsAttribute> attribute that allows a bitwise combination of its member values.</span></span> <span data-ttu-id="39a55-108"><xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>属性可以包含多个值从<xref:System.Web.Compilation.PrecompilationFlags>枚举来指定预编译的行为的组合。</span><span class="sxs-lookup"><span data-stu-id="39a55-108">The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property can contain more than one value from the <xref:System.Web.Compilation.PrecompilationFlags> enumeration to specify a combination of precompilation behaviors.</span></span>  
  
 <span data-ttu-id="39a55-109">任一<xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>属性或<xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>属性分配一个值，以创建具有强名称程序集。</span><span class="sxs-lookup"><span data-stu-id="39a55-109">Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly.</span></span> <span data-ttu-id="39a55-110">这两个值不需要设置创建具有强名称程序集。</span><span class="sxs-lookup"><span data-stu-id="39a55-110">Both values do not need to be set to create a strong-named assembly.</span></span>  
  
 <span data-ttu-id="39a55-111">A<xref:System.Web.Compilation.ClientBuildManagerParameter>对象传递给<xref:System.Web.Compilation.ClientBuildManager>对象通过<xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="39a55-111">A <xref:System.Web.Compilation.ClientBuildManagerParameter> object is passed to the <xref:System.Web.Compilation.ClientBuildManager> object through the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39a55-112">下面的代码示例是在中找到的代码示例的一部分<xref:System.Web.Compilation.ClientBuildManager>类概述。</span><span class="sxs-lookup"><span data-stu-id="39a55-112">The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview.</span></span> <span data-ttu-id="39a55-113">在示例中，<xref:System.Web.Compilation.ClientBuildManagerParameter>创建对象，并且其值设置。</span><span class="sxs-lookup"><span data-stu-id="39a55-113">In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set.</span></span> <span data-ttu-id="39a55-114">生成程序集将具有强名称基于提供的密钥文件，并且将根据所提供预编译<xref:System.Web.Compilation.PrecompilationFlags>值。</span><span class="sxs-lookup"><span data-stu-id="39a55-114">The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
    <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManagerParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManagerParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManagerParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="39a55-115">初始化 <see cref="T:System.Web.Compilation.ClientBuildManagerParameter" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="39a55-115">Initializes a new instance of the <see cref="T:System.Web.Compilation.ClientBuildManagerParameter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39a55-116">此构造函数不初始化任何属性值。</span><span class="sxs-lookup"><span data-stu-id="39a55-116">This constructor does not initialize any property values.</span></span> <span data-ttu-id="39a55-117">必须通过设置这些值<xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>， <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>，和<xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>后创建对象的属性。</span><span class="sxs-lookup"><span data-stu-id="39a55-117">Those values must be set through the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>, <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>, and <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> properties after the object has been created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39a55-118">下面的代码示例是在中找到的代码示例的一部分<xref:System.Web.Compilation.ClientBuildManager>类概述。</span><span class="sxs-lookup"><span data-stu-id="39a55-118">The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview.</span></span> <span data-ttu-id="39a55-119">在示例中，<xref:System.Web.Compilation.ClientBuildManagerParameter>创建对象，并且其值设置。</span><span class="sxs-lookup"><span data-stu-id="39a55-119">In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set.</span></span> <span data-ttu-id="39a55-120">生成程序集将具有强名称基于提供的密钥文件，并且将根据所提供预编译<xref:System.Web.Compilation.PrecompilationFlags>值。</span><span class="sxs-lookup"><span data-stu-id="39a55-120">The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExcludedVirtualPaths">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; ExcludedVirtualPaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; ExcludedVirtualPaths" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExcludedVirtualPaths As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ ExcludedVirtualPaths { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="39a55-121">获取或设置排除的虚拟路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="39a55-121">Gets or sets excluded virtual paths.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="39a55-122">排除的虚拟路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="39a55-122">Excluded virtual paths.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrecompilationFlags">
      <MemberSignature Language="C#" Value="public System.Web.Compilation.PrecompilationFlags PrecompilationFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Compilation.PrecompilationFlags PrecompilationFlags" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property PrecompilationFlags As PrecompilationFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Compilation::PrecompilationFlags PrecompilationFlags { System::Web::Compilation::PrecompilationFlags get(); void set(System::Web::Compilation::PrecompilationFlags value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.PrecompilationFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="39a55-123">获取或设置确定预编译行为的标志。</span>
          <span class="sxs-lookup">
            <span data-stu-id="39a55-123">Gets or sets the flags that determine precompilation behavior.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="39a55-124">用于客户端生成的 <see cref="T:System.Web.Compilation.PrecompilationFlags" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="39a55-124">The <see cref="T:System.Web.Compilation.PrecompilationFlags" /> for a client build.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39a55-125"><xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>属性确定将如何生成程序集。</span><span class="sxs-lookup"><span data-stu-id="39a55-125">The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property determines how the assembly will be built.</span></span> <span data-ttu-id="39a55-126">例如，你可以设置<xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>到<xref:System.Web.Compilation.PrecompilationFlags.Clean>需重新编译任何以前编译的组件，或将其设置为<xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget>以允许生成的程序集，以覆盖目标目录中的任何组件。</span><span class="sxs-lookup"><span data-stu-id="39a55-126">For example, you can set <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> to <xref:System.Web.Compilation.PrecompilationFlags.Clean> to recompile any previously compiled components, or set it to <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> to permit the resulting assembly to overwrite any components in the target directory.</span></span> <span data-ttu-id="39a55-127"><xref:System.Web.Compilation.PrecompilationFlags>枚举数具有<xref:System.FlagsAttribute>属性允许其成员值的按位组合。</span><span class="sxs-lookup"><span data-stu-id="39a55-127">The <xref:System.Web.Compilation.PrecompilationFlags> enumerator has a <xref:System.FlagsAttribute> attribute that allows a bitwise combination of its member values.</span></span> <span data-ttu-id="39a55-128"><xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>属性可以包含多个值从<xref:System.Web.Compilation.PrecompilationFlags>枚举来指定预编译的行为的组合。</span><span class="sxs-lookup"><span data-stu-id="39a55-128">The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property can contain more than one value from the <xref:System.Web.Compilation.PrecompilationFlags> enumeration to specify a combination of precompilation behaviors.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39a55-129">下面的代码示例是在中找到的代码示例的一部分<xref:System.Web.Compilation.ClientBuildManager>类概述。</span><span class="sxs-lookup"><span data-stu-id="39a55-129">The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview.</span></span> <span data-ttu-id="39a55-130">在示例中，<xref:System.Web.Compilation.ClientBuildManagerParameter>创建对象，并且其值设置。</span><span class="sxs-lookup"><span data-stu-id="39a55-130">In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set.</span></span> <span data-ttu-id="39a55-131">生成程序集将具有强名称基于提供的密钥文件，并且将根据所提供预编译<xref:System.Web.Compilation.PrecompilationFlags>值。</span><span class="sxs-lookup"><span data-stu-id="39a55-131">The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
      </Docs>
    </Member>
    <Member MemberName="StrongNameKeyContainer">
      <MemberSignature Language="C#" Value="public string StrongNameKeyContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StrongNameKeyContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property StrongNameKeyContainer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StrongNameKeyContainer { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="39a55-132">获取或设置编译期间使用的密钥容器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="39a55-132">Gets or sets the key container used during compilation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="39a55-133">表示密钥容器的值的 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="39a55-133">A <see cref="T:System.String" /> of the value for the key container.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39a55-134">任一<xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>属性或<xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>属性分配一个值，以创建具有强名称程序集。</span><span class="sxs-lookup"><span data-stu-id="39a55-134">Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly.</span></span> <span data-ttu-id="39a55-135">这两个值不需要设置创建具有强名称程序集。</span><span class="sxs-lookup"><span data-stu-id="39a55-135">Both values do not need to be set to create a strong-named assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39a55-136">下面的代码示例是类似于在中找到的示例代码<xref:System.Web.Compilation.ClientBuildManager>类相似，只不过生成程序集将包含基于提供的密钥容器的强名称的概述。</span><span class="sxs-lookup"><span data-stu-id="39a55-136">The following code example is similar to the code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview except that the resulting assembly will have a strong name based on the provided key container.</span></span> <span data-ttu-id="39a55-137">它将根据所提供预编译<xref:System.Web.Compilation.PrecompilationFlags>值。</span><span class="sxs-lookup"><span data-stu-id="39a55-137">It will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager_2/CS/source.cs#1)]
 [!code-vb[System.Web.Compilation.ClientBuildManager_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager_2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
      </Docs>
    </Member>
    <Member MemberName="StrongNameKeyFile">
      <MemberSignature Language="C#" Value="public string StrongNameKeyFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StrongNameKeyFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile" />
      <MemberSignature Language="VB.NET" Value="Public Property StrongNameKeyFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StrongNameKeyFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="39a55-138">获取或设置编译期间使用的密钥文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="39a55-138">Gets or sets the key file used during compilation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="39a55-139">表示密钥文件的值的 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="39a55-139">A <see cref="T:System.String" /> of the value for the key file.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39a55-140">任一<xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>属性或<xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>属性分配一个值，以创建具有强名称程序集。</span><span class="sxs-lookup"><span data-stu-id="39a55-140">Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly.</span></span> <span data-ttu-id="39a55-141">这两个值不需要设置创建具有强名称程序集。</span><span class="sxs-lookup"><span data-stu-id="39a55-141">Both values do not need to be set to create a strong-named assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="39a55-142">下面的代码示例是在中找到的代码示例的一部分<xref:System.Web.Compilation.ClientBuildManager>类概述。</span><span class="sxs-lookup"><span data-stu-id="39a55-142">The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview.</span></span> <span data-ttu-id="39a55-143">在示例中，<xref:System.Web.Compilation.ClientBuildManagerParameter>创建对象，并且其值设置。</span><span class="sxs-lookup"><span data-stu-id="39a55-143">In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set.</span></span> <span data-ttu-id="39a55-144">生成程序集将具有强名称基于提供的密钥文件，并且将根据所提供预编译<xref:System.Web.Compilation.PrecompilationFlags>值。</span><span class="sxs-lookup"><span data-stu-id="39a55-144">The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
      </Docs>
    </Member>
  </Members>
</Type>