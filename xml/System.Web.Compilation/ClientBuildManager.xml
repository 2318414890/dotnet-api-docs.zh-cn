<Type Name="ClientBuildManager" FullName="System.Web.Compilation.ClientBuildManager">
  <TypeSignature Language="C#" Value="public sealed class ClientBuildManager : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClientBuildManager extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ClientBuildManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClientBuildManager&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientBuildManager sealed : MarshalByRefObject, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="a8515-101">为 ASP.NET 应用程序提供编译服务。</span><span class="sxs-lookup"><span data-stu-id="a8515-101">Provides compilation services for ASP.NET applications.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8515-102"><xref:System.Web.Compilation.ClientBuildManager>类提供方法和属性用于编译 ASP.NET Web 应用程序和检索生成的程序集或生成源代码。</span><span class="sxs-lookup"><span data-stu-id="a8515-102">The <xref:System.Web.Compilation.ClientBuildManager> class offers methods and properties for compiling ASP.NET Web applications, and retrieving the generated assemblies or generated source code.</span></span> <span data-ttu-id="a8515-103">类的实例在客户端的应用程序域中建立并提供对 ASP.NET 生成系统 Microsoft Internet 信息服务 (IIS) 外部访问。</span><span class="sxs-lookup"><span data-stu-id="a8515-103">Instances of the class are established in the client's application domain and provide access to the ASP.NET build system outside of Microsoft Internet Information Services (IIS).</span></span> <span data-ttu-id="a8515-104">类可以用于开发编译 Web 应用程序的自定义的工具。</span><span class="sxs-lookup"><span data-stu-id="a8515-104">The class can be used to develop customized tools for compiling Web applications.</span></span>  
  
 <span data-ttu-id="a8515-105">命令行工具`aspnet_compiler`使用<xref:System.Web.Compilation.ClientBuildManager>类。</span><span class="sxs-lookup"><span data-stu-id="a8515-105">The command-line tool `aspnet_compiler` uses the <xref:System.Web.Compilation.ClientBuildManager> class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.BuildManager" />
    <altmember cref="T:System.Web.Compilation.BuildProvider" />
    <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a8515-106">初始化 <see cref="T:System.Web.Compilation.ClientBuildManager" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a8515-106">Initializes a new instance of the <see cref="T:System.Web.Compilation.ClientBuildManager" /> class.</span></span></summary>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appVirtualDir, string appPhysicalSourceDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (appVirtualDir As String, appPhysicalSourceDir As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManager(System::String ^ appVirtualDir, System::String ^ appPhysicalSourceDir);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appVirtualDir" Type="System.String" />
        <Parameter Name="appPhysicalSourceDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appVirtualDir"><span data-ttu-id="a8515-107">应用程序根目录的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="a8515-107">The virtual path to the application root.</span></span></param>
        <param name="appPhysicalSourceDir"><span data-ttu-id="a8515-108">应用程序根目录的物理路径。</span><span class="sxs-lookup"><span data-stu-id="a8515-108">The physical path to the application root.</span></span></param>
        <summary><span data-ttu-id="a8515-109">在不指定目标目录或预编译标志的情况下初始化 <see cref="T:System.Web.Compilation.ClientBuildManager" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a8515-109">Initializes a new instance of the <see cref="T:System.Web.Compilation.ClientBuildManager" /> class without a specified target directory or precompilation flags.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (appVirtualDir As String, appPhysicalSourceDir As String, appPhysicalTargetDir As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManager(System::String ^ appVirtualDir, System::String ^ appPhysicalSourceDir, System::String ^ appPhysicalTargetDir);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appVirtualDir" Type="System.String" />
        <Parameter Name="appPhysicalSourceDir" Type="System.String" />
        <Parameter Name="appPhysicalTargetDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appVirtualDir"><span data-ttu-id="a8515-110">应用程序根目录的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="a8515-110">The virtual path to the application root.</span></span></param>
        <param name="appPhysicalSourceDir"><span data-ttu-id="a8515-111">应用程序根目录的物理路径。</span><span class="sxs-lookup"><span data-stu-id="a8515-111">The physical path to the application root.</span></span></param>
        <param name="appPhysicalTargetDir"><span data-ttu-id="a8515-112">用于预编译的目标目录。</span><span class="sxs-lookup"><span data-stu-id="a8515-112">The target directory for precompilation.</span></span></param>
        <summary><span data-ttu-id="a8515-113">使用指定的目标目录初始化 <see cref="T:System.Web.Compilation.ClientBuildManager" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a8515-113">Initializes a new instance of the <see cref="T:System.Web.Compilation.ClientBuildManager" /> class with the specified target directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8515-114">这种形式的构造函数通常用于预编译，因为它指定预编译目标目录。</span><span class="sxs-lookup"><span data-stu-id="a8515-114">This form of the constructor is typically used with precompilation, as it specifies a precompilation target directory.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, System.Web.Compilation.ClientBuildManagerParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, class System.Web.Compilation.ClientBuildManagerParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (appVirtualDir As String, appPhysicalSourceDir As String, appPhysicalTargetDir As String, parameter As ClientBuildManagerParameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManager(System::String ^ appVirtualDir, System::String ^ appPhysicalSourceDir, System::String ^ appPhysicalTargetDir, System::Web::Compilation::ClientBuildManagerParameter ^ parameter);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appVirtualDir" Type="System.String" />
        <Parameter Name="appPhysicalSourceDir" Type="System.String" />
        <Parameter Name="appPhysicalTargetDir" Type="System.String" />
        <Parameter Name="parameter" Type="System.Web.Compilation.ClientBuildManagerParameter" />
      </Parameters>
      <Docs>
        <param name="appVirtualDir"><span data-ttu-id="a8515-115">应用程序根目录的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="a8515-115">The virtual path to the application root.</span></span></param>
        <param name="appPhysicalSourceDir"><span data-ttu-id="a8515-116">应用程序根目录的物理路径。</span><span class="sxs-lookup"><span data-stu-id="a8515-116">The physical path to the application root.</span></span></param>
        <param name="appPhysicalTargetDir"><span data-ttu-id="a8515-117">用于预编译的目标目录。</span><span class="sxs-lookup"><span data-stu-id="a8515-117">The target directory for precompilation.</span></span></param>
        <param name="parameter"><span data-ttu-id="a8515-118">确定预编译行为的值。</span><span class="sxs-lookup"><span data-stu-id="a8515-118">Values that determine the precompilation behavior.</span></span></param>
        <summary><span data-ttu-id="a8515-119">使用指定的目标目录和编译参数初始化 <see cref="T:System.Web.Compilation.ClientBuildManager" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a8515-119">Initializes a new instance of the <see cref="T:System.Web.Compilation.ClientBuildManager" /> class with the specified target directory and compilation parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8515-120">这种形式的构造函数通常用于预编译，因为它指定了预编译目标目录和预编译的标志。</span><span class="sxs-lookup"><span data-stu-id="a8515-120">This form of the constructor is typically used with precompilation, as it specifies a precompilation target directory and precompilation flags.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, System.Web.Compilation.ClientBuildManagerParameter parameter, System.ComponentModel.TypeDescriptionProvider typeDescriptionProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, class System.Web.Compilation.ClientBuildManagerParameter parameter, class System.ComponentModel.TypeDescriptionProvider typeDescriptionProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManager(System::String ^ appVirtualDir, System::String ^ appPhysicalSourceDir, System::String ^ appPhysicalTargetDir, System::Web::Compilation::ClientBuildManagerParameter ^ parameter, System::ComponentModel::TypeDescriptionProvider ^ typeDescriptionProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appVirtualDir" Type="System.String" />
        <Parameter Name="appPhysicalSourceDir" Type="System.String" />
        <Parameter Name="appPhysicalTargetDir" Type="System.String" />
        <Parameter Name="parameter" Type="System.Web.Compilation.ClientBuildManagerParameter" />
        <Parameter Name="typeDescriptionProvider" Type="System.ComponentModel.TypeDescriptionProvider" />
      </Parameters>
      <Docs>
        <param name="appVirtualDir"><span data-ttu-id="a8515-121">应用程序根的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="a8515-121">The virtual path of the application root.</span></span></param>
        <param name="appPhysicalSourceDir"><span data-ttu-id="a8515-122">应用程序根目录的物理路径。</span><span class="sxs-lookup"><span data-stu-id="a8515-122">The physical path of the application root.</span></span></param>
        <param name="appPhysicalTargetDir"><span data-ttu-id="a8515-123">用于预编译的目标目录。</span><span class="sxs-lookup"><span data-stu-id="a8515-123">The target directory for precompilation.</span></span></param>
        <param name="parameter"><span data-ttu-id="a8515-124">确定预编译行为的值。</span><span class="sxs-lookup"><span data-stu-id="a8515-124">Values that determine the precompilation behavior.</span></span></param>
        <param name="typeDescriptionProvider"><span data-ttu-id="a8515-125">要使用的类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="a8515-125">The type-description provider to use.</span></span> <span data-ttu-id="a8515-126">此参数主要用于支持 Visual Studio 中的多目标基础结构。</span><span class="sxs-lookup"><span data-stu-id="a8515-126">This parameter is primarily used to support the multi-targeting infrastructure in Visual Studio.</span></span> <span data-ttu-id="a8515-127">它用于检索有关针对特定版本 .NET Framework 筛选的类型的元数据。</span><span class="sxs-lookup"><span data-stu-id="a8515-127">It is used to retrieve metadata about types that is filtered for specific versions of the .NET Framework.</span></span></param>
        <summary><span data-ttu-id="a8515-128">使用指定的虚拟目录、源目录、目标目录、编译参数和类型说明提供程序初始化 <see cref="T:System.Web.Compilation.ClientBuildManager" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="a8515-128">Initializes a new instance of the <see cref="T:System.Web.Compilation.ClientBuildManager" /> class by using the specified virtual directory, source directory, target directory, compilation parameter, and type-description provider.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppDomainShutdown">
      <MemberSignature Language="C#" Value="public event System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainShutdown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainShutdown" />
      <MemberSignature Language="DocId" Value="E:System.Web.Compilation.ClientBuildManager.AppDomainShutdown" />
      <MemberSignature Language="VB.NET" Value="Public Event AppDomainShutdown As BuildManagerHostUnloadEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::Compilation::BuildManagerHostUnloadEventHandler ^ AppDomainShutdown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildManagerHostUnloadEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8515-129">在应用程序域关闭时发生。</span><span class="sxs-lookup"><span data-stu-id="a8515-129">Occurs when an application domain is shut down.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="AppDomainStarted">
      <MemberSignature Language="C#" Value="public event EventHandler AppDomainStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AppDomainStarted" />
      <MemberSignature Language="DocId" Value="E:System.Web.Compilation.ClientBuildManager.AppDomainStarted" />
      <MemberSignature Language="VB.NET" Value="Public Event AppDomainStarted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AppDomainStarted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8515-130">在应用程序域启动时发生。</span><span class="sxs-lookup"><span data-stu-id="a8515-130">Occurs when an application domain is started.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="AppDomainUnloaded">
      <MemberSignature Language="C#" Value="public event System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainUnloaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainUnloaded" />
      <MemberSignature Language="DocId" Value="E:System.Web.Compilation.ClientBuildManager.AppDomainUnloaded" />
      <MemberSignature Language="VB.NET" Value="Public Event AppDomainUnloaded As BuildManagerHostUnloadEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::Compilation::BuildManagerHostUnloadEventHandler ^ AppDomainUnloaded;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildManagerHostUnloadEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8515-131">在应用程序域卸载时发生。</span><span class="sxs-lookup"><span data-stu-id="a8515-131">Occurs when an application domain is unloaded.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="CodeGenDir">
      <MemberSignature Language="C#" Value="public string CodeGenDir { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeGenDir" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManager.CodeGenDir" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeGenDir As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeGenDir { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8515-132">获取用于代码生成的目录的物理路径。</span><span class="sxs-lookup"><span data-stu-id="a8515-132">Gets the physical path to the directory used for code generation.</span></span></summary>
        <value><span data-ttu-id="a8515-133"><see cref="T:System.String" />，包含用于代码生成的目录路径。</span><span class="sxs-lookup"><span data-stu-id="a8515-133">A <see cref="T:System.String" /> containing the directory path used for code generation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8515-134">代码生成的目录通常是临时 ASP.NET 文件目录。</span><span class="sxs-lookup"><span data-stu-id="a8515-134">The directory for code generation is typically in the temporary ASP.NET files directory.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="CompileApplicationDependencies">
      <MemberSignature Language="C#" Value="public void CompileApplicationDependencies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompileApplicationDependencies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompileApplicationDependencies ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompileApplicationDependencies();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8515-135">编译与应用程序相关的文件，例如，App_Code 目录中的文件、Global.asax 文件、资源文件和 Web 引用。</span><span class="sxs-lookup"><span data-stu-id="a8515-135">Compiles application-dependent files, such as files in the App_Code directory, the Global.asax file, resource files, and Web references.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8515-136"><xref:System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies%2A>方法可以确保编译的资源、 Web 引用、 App_Code 目录中的文件、.browser App_Browsers 目录中的文件和 Global.asax 文件。</span><span class="sxs-lookup"><span data-stu-id="a8515-136">The <xref:System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies%2A> method ensures that resources, Web references, files in the App_Code directory, .browser files in the App_Browsers directory, and the Global.asax file are compiled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CompileFile">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a8515-137">编译按虚拟路径表示的文件。</span><span class="sxs-lookup"><span data-stu-id="a8515-137">Compiles the file represented by the virtual path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompileFile">
      <MemberSignature Language="C#" Value="public void CompileFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompileFile(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.CompileFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompileFile (virtualPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompileFile(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="a8515-138">待编译文件的路径。</span><span class="sxs-lookup"><span data-stu-id="a8515-138">The path to the file to be compiled.</span></span></param>
        <summary><span data-ttu-id="a8515-139">编译按虚拟路径表示的文件。</span><span class="sxs-lookup"><span data-stu-id="a8515-139">Compiles the file represented by the virtual path.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="CompileFile">
      <MemberSignature Language="C#" Value="public void CompileFile (string virtualPath, System.Web.Compilation.ClientBuildManagerCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompileFile(string virtualPath, class System.Web.Compilation.ClientBuildManagerCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompileFile (virtualPath As String, callback As ClientBuildManagerCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompileFile(System::String ^ virtualPath, System::Web::Compilation::ClientBuildManagerCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="callback" Type="System.Web.Compilation.ClientBuildManagerCallback" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="a8515-140">待编译文件的路径。</span><span class="sxs-lookup"><span data-stu-id="a8515-140">The path to the file to be compiled.</span></span></param>
        <param name="callback"><span data-ttu-id="a8515-141">接收编译状态信息的对象。</span><span class="sxs-lookup"><span data-stu-id="a8515-141">The object to receive status information from compilation.</span></span></param>
        <summary><span data-ttu-id="a8515-142">编译由虚拟路径表示的文件，并提供一个回调类来接收有关生成的状态信息。</span><span class="sxs-lookup"><span data-stu-id="a8515-142">Compiles the file represented by the virtual path and provides a callback class to receive status information about the build.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8515-143"><paramref name="virtualPath" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="a8515-143"><paramref name="virtualPath" /> is null.</span></span></exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (Type type, bool failIfExists);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(class System.Type type, bool failIfExists) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.CreateObject(System.Type,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(Type ^ type, bool failIfExists);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="failIfExists" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="a8515-144">要创建的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="a8515-144">The type of object to be created.</span></span></param>
        <param name="failIfExists">
          <span data-ttu-id="a8515-145">如果已在 ASP.NET 运行时的应用程序域中创建了对象，则为 <see langword="true" /> 以引发异常；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a8515-145"><see langword="true" /> to throw an exception if the object has already been created in the application domain of the ASP.NET runtime; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a8515-146">在 ASP.NET 运行时的应用程序域中创建一个对象。</span><span class="sxs-lookup"><span data-stu-id="a8515-146">Creates an object in the application domain of the ASP.NET runtime.</span></span></summary>
        <returns><span data-ttu-id="a8515-147">在 ASP.NET 运行时的应用程序域中的一个对象。</span><span class="sxs-lookup"><span data-stu-id="a8515-147">An object in the application domain of the ASP.NET runtime.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8515-148"><paramref name="type" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a8515-148"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a8515-149">对象已存在于应用程序域中，且 <paramref name="failIfExists" /> 为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="a8515-149">The object already exists in the application domain and <paramref name="failIfExists" /> is <see langword="true" />.</span></span></exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public string GenerateCode (string virtualPath, string virtualFileString, out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GenerateCode(string virtualPath, string virtualFileString, [out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GenerateCode(System.String,System.String,System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCode (virtualPath As String, virtualFileString As String, ByRef linePragmasTable As IDictionary) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GenerateCode(System::String ^ virtualPath, System::String ^ virtualFileString, [Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="virtualFileString" Type="System.String" />
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="a8515-150">文件的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="a8515-150">The virtual path to the file.</span></span></param>
        <param name="virtualFileString"><span data-ttu-id="a8515-151">文件的内容。</span><span class="sxs-lookup"><span data-stu-id="a8515-151">The contents of the file.</span></span></param>
        <param name="linePragmasTable"><span data-ttu-id="a8515-152">此方法返回时，包含一个行杂注的字典。</span><span class="sxs-lookup"><span data-stu-id="a8515-152">When this method returns, contains a dictionary of line pragmas.</span></span></param>
        <summary><span data-ttu-id="a8515-153">根据文件内容生成代码。</span><span class="sxs-lookup"><span data-stu-id="a8515-153">Generates code from the contents of a file.</span></span></summary>
        <returns><span data-ttu-id="a8515-154"><see cref="T:System.String" />，包含生成的代码。</span><span class="sxs-lookup"><span data-stu-id="a8515-154">A <see cref="T:System.String" /> containing the generated code.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8515-155"><paramref name="virtualPath" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="a8515-155"><paramref name="virtualPath" /> is null.</span></span></exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <altmember cref="T:System.Web.Compilation.LinePragmaCodeInfo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GenerateCodeCompileUnit">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a8515-156">为按虚拟路径表示的文件返回 codeDOM 树、编译器类型和编译器参数。</span><span class="sxs-lookup"><span data-stu-id="a8515-156">Returns the codeDOM tree, compiler type, and compiler parameters for a file represented by a virtual path.</span></span></summary>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GenerateCodeCompileUnit">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit (string virtualPath, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit(string virtualPath, [out] class System.Type&amp; codeDomProviderType, [out] class System.CodeDom.Compiler.CompilerParameters&amp; compilerParameters, [out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCodeCompileUnit (virtualPath As String, ByRef codeDomProviderType As Type, ByRef compilerParameters As CompilerParameters, ByRef linePragmasTable As IDictionary) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::CodeCompileUnit ^ GenerateCodeCompileUnit(System::String ^ virtualPath, [Runtime::InteropServices::Out] Type ^ % codeDomProviderType, [Runtime::InteropServices::Out] System::CodeDom::Compiler::CompilerParameters ^ % compilerParameters, [Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="codeDomProviderType" Type="System.Type&amp;" RefType="out" />
        <Parameter Name="compilerParameters" Type="System.CodeDom.Compiler.CompilerParameters&amp;" RefType="out" />
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="a8515-157">文件的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="a8515-157">The virtual path to the file.</span></span></param>
        <param name="codeDomProviderType"><span data-ttu-id="a8515-158">此方法返回时，包含用于代码生成和编译的 codeDOM 提供程序类型。</span><span class="sxs-lookup"><span data-stu-id="a8515-158">When this method returns, contains the codeDOM provider type used for code generation and compilation.</span></span></param>
        <param name="compilerParameters"><span data-ttu-id="a8515-159">此方法返回时，包含定义如何编译文件的属性。</span><span class="sxs-lookup"><span data-stu-id="a8515-159">When this method returns, contains the properties that define how the file will be compiled.</span></span></param>
        <param name="linePragmasTable"><span data-ttu-id="a8515-160">此方法返回时，包含一个行杂注的字典。</span><span class="sxs-lookup"><span data-stu-id="a8515-160">When this method returns, contains a dictionary of line pragmas.</span></span></param>
        <summary><span data-ttu-id="a8515-161">为按虚拟路径表示的文件返回 codeDOM 树、编译器类型和编译器参数。</span><span class="sxs-lookup"><span data-stu-id="a8515-161">Returns the codeDOM tree, compiler type, and compiler parameters for a file represented by a virtual path.</span></span></summary>
        <returns><span data-ttu-id="a8515-162">给定文件的 <see cref="T:System.CodeDom.CodeCompileUnit" />。</span><span class="sxs-lookup"><span data-stu-id="a8515-162">A <see cref="T:System.CodeDom.CodeCompileUnit" /> for the given file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8515-163"><xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A>方法检索编译文件所需的信息。</span><span class="sxs-lookup"><span data-stu-id="a8515-163">The <xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A> method retrieves information needed to compile a file.</span></span> <span data-ttu-id="a8515-164">除了<xref:System.CodeDom.CodeCompileUnit>对象作为返回值，它返回三个`out`参数。</span><span class="sxs-lookup"><span data-stu-id="a8515-164">In addition to a <xref:System.CodeDom.CodeCompileUnit> object as a return value, it returns three `out` parameters.</span></span> <span data-ttu-id="a8515-165">`codeDomProviderType`参数返回用于生成和编译该文件提供程序类型。</span><span class="sxs-lookup"><span data-stu-id="a8515-165">The `codeDomProviderType` parameter returns the provider type for generating and compiling the file.</span></span> <span data-ttu-id="a8515-166">`compilerParameters`参数包含确定编译行为的属性。</span><span class="sxs-lookup"><span data-stu-id="a8515-166">The `compilerParameters` parameter contains properties that determine compilation behavior.</span></span> <span data-ttu-id="a8515-167">`linePragmasTable`参数包含行杂注的字典。</span><span class="sxs-lookup"><span data-stu-id="a8515-167">The `linePragmasTable` parameter contains a dictionary of line pragmas.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <altmember cref="T:System.Web.Compilation.LinePragmaCodeInfo" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeCompileUnit">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit (string virtualPath, string virtualFileString, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit(string virtualPath, string virtualFileString, [out] class System.Type&amp; codeDomProviderType, [out] class System.CodeDom.Compiler.CompilerParameters&amp; compilerParameters, [out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCodeCompileUnit (virtualPath As String, virtualFileString As String, ByRef codeDomProviderType As Type, ByRef compilerParameters As CompilerParameters, ByRef linePragmasTable As IDictionary) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::CodeCompileUnit ^ GenerateCodeCompileUnit(System::String ^ virtualPath, System::String ^ virtualFileString, [Runtime::InteropServices::Out] Type ^ % codeDomProviderType, [Runtime::InteropServices::Out] System::CodeDom::Compiler::CompilerParameters ^ % compilerParameters, [Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="virtualFileString" Type="System.String" />
        <Parameter Name="codeDomProviderType" Type="System.Type&amp;" RefType="out" />
        <Parameter Name="compilerParameters" Type="System.CodeDom.Compiler.CompilerParameters&amp;" RefType="out" />
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="a8515-168">文件的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="a8515-168">The virtual path to the file.</span></span></param>
        <param name="virtualFileString"><span data-ttu-id="a8515-169"><c>virtualPath</c> 参数所表示的文件的内容。</span><span class="sxs-lookup"><span data-stu-id="a8515-169">The contents of the file represented by the <c>virtualPath</c> parameter.</span></span></param>
        <param name="codeDomProviderType"><span data-ttu-id="a8515-170">此方法返回时，包含用于代码生成和编译的 codeDOM 提供程序类型。</span><span class="sxs-lookup"><span data-stu-id="a8515-170">When this method returns, contains the codeDOM provider type used for code generation and compilation.</span></span></param>
        <param name="compilerParameters"><span data-ttu-id="a8515-171">此方法返回时，结果包含一些属性，其中定义了 <c>virtualPath</c> 参数所表示的文件的编译方式。</span><span class="sxs-lookup"><span data-stu-id="a8515-171">When this method returns, contains the properties that define how the file represented by the <c>virtualPath</c> parameter will be compiled.</span></span></param>
        <param name="linePragmasTable"><span data-ttu-id="a8515-172">此方法返回时，包含一个行杂注的字典。</span><span class="sxs-lookup"><span data-stu-id="a8515-172">When this method returns, contains a dictionary of line pragmas.</span></span></param>
        <summary><span data-ttu-id="a8515-173">返回虚拟路径所表示的文件的内容、codeDOM 树、编译器类型和编译器参数。</span><span class="sxs-lookup"><span data-stu-id="a8515-173">Returns the contents, codeDOM tree, compiler type, and compiler parameters for a file represented by a virtual path.</span></span></summary>
        <returns><span data-ttu-id="a8515-174">给定文件的 <see cref="T:System.CodeDom.CodeCompileUnit" />。</span><span class="sxs-lookup"><span data-stu-id="a8515-174">A <see cref="T:System.CodeDom.CodeCompileUnit" /> for the given file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8515-175"><xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A>方法检索编译文件所需的信息。</span><span class="sxs-lookup"><span data-stu-id="a8515-175">The <xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A> method retrieves information needed to compile a file.</span></span> <span data-ttu-id="a8515-176">除了<xref:System.CodeDom.CodeCompileUnit>对象作为返回值，它返回三个`out`参数。</span><span class="sxs-lookup"><span data-stu-id="a8515-176">In addition to a <xref:System.CodeDom.CodeCompileUnit> object as a return value, it returns three `out` parameters.</span></span> <span data-ttu-id="a8515-177">`codeDomProviderType`参数返回用于生成和编译该文件提供程序类型。</span><span class="sxs-lookup"><span data-stu-id="a8515-177">The `codeDomProviderType` parameter returns the provider type for generating and compiling the file.</span></span> <span data-ttu-id="a8515-178">`compilerParameters`参数包含确定编译行为的属性。</span><span class="sxs-lookup"><span data-stu-id="a8515-178">The `compilerParameters` parameter contains properties that determine compilation behavior.</span></span> <span data-ttu-id="a8515-179">`linePragmasTable`参数包含行杂注的字典。</span><span class="sxs-lookup"><span data-stu-id="a8515-179">The `linePragmasTable` parameter contains a dictionary of line pragmas.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8515-180"><paramref name="virtualPath" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="a8515-180"><paramref name="virtualPath" /> is null.</span></span></exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <altmember cref="T:System.Web.Compilation.LinePragmaCodeInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetAppDomainShutdownDirectories">
      <MemberSignature Language="C#" Value="public string[] GetAppDomainShutdownDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetAppDomainShutdownDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAppDomainShutdownDirectories () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetAppDomainShutdownDirectories();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8515-181">获取包含特定文件的目录，这些文件如果更改，会导致应用程序域关闭。</span><span class="sxs-lookup"><span data-stu-id="a8515-181">Gets the directories with files that, when changed, cause the application domain to shut down.</span></span></summary>
        <returns><span data-ttu-id="a8515-182">包含顶级目录名称的 <see cref="T:System.String" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="a8515-182">A <see cref="T:System.String" /> array containing the top-level directory names.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8515-183">对特定的顶级目录中的文件的更改会导致应用程序域关闭。</span><span class="sxs-lookup"><span data-stu-id="a8515-183">Changes to files in specific top-level directories cause the application domain to shut down.</span></span> <span data-ttu-id="a8515-184">Bin、 App_Code、 Global_Resources、 Web 引用和 App_Browsers 目录中的文件监视以检测任何更改。</span><span class="sxs-lookup"><span data-stu-id="a8515-184">Files within the Bin, App_Code, Global_Resources, Web References, and App_Browsers directories are monitored to detect any changes.</span></span> <span data-ttu-id="a8515-185">检测到更改后，应用程序域关闭的情况下。</span><span class="sxs-lookup"><span data-stu-id="a8515-185">When changes are detected, the application domain is shut down.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetBrowserDefinitions">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary GetBrowserDefinitions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IDictionary GetBrowserDefinitions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBrowserDefinitions () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionary ^ GetBrowserDefinitions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8515-186">获取浏览器元素的集合。</span><span class="sxs-lookup"><span data-stu-id="a8515-186">Gets a collection of browser elements.</span></span></summary>
        <returns><span data-ttu-id="a8515-187">包含浏览器元素的 <see cref="T:System.Collections.IDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="a8515-187">An <see cref="T:System.Collections.IDictionary" /> containing browser elements.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8515-188"><xref:System.Collections.IDictionary>对象包含的键的浏览器名称和<xref:System.Web.UI.Triplet>对象的值。</span><span class="sxs-lookup"><span data-stu-id="a8515-188">The <xref:System.Collections.IDictionary> object contains browser names for the keys and <xref:System.Web.UI.Triplet> objects for the values.</span></span> <span data-ttu-id="a8515-189"><xref:System.Web.UI.Triplet>对象每个包含父浏览器元素、 说明和在树中的浏览器元素深度的名称。</span><span class="sxs-lookup"><span data-stu-id="a8515-189">The <xref:System.Web.UI.Triplet> objects each contain the name of the parent browser element, a description, and the depth of the browser element in the tree.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.BrowserCapabilitiesFactory" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetCodeDirectoryInformation">
      <MemberSignature Language="C#" Value="public void GetCodeDirectoryInformation (string virtualCodeDir, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out string generatedFilesDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetCodeDirectoryInformation(string virtualCodeDir, [out] class System.Type&amp; codeDomProviderType, [out] class System.CodeDom.Compiler.CompilerParameters&amp; compilerParameters, [out] string&amp; generatedFilesDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetCodeDirectoryInformation (virtualCodeDir As String, ByRef codeDomProviderType As Type, ByRef compilerParameters As CompilerParameters, ByRef generatedFilesDir As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetCodeDirectoryInformation(System::String ^ virtualCodeDir, [Runtime::InteropServices::Out] Type ^ % codeDomProviderType, [Runtime::InteropServices::Out] System::CodeDom::Compiler::CompilerParameters ^ % compilerParameters, [Runtime::InteropServices::Out] System::String ^ % generatedFilesDir);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualCodeDir" Type="System.String" />
        <Parameter Name="codeDomProviderType" Type="System.Type&amp;" RefType="out" />
        <Parameter Name="compilerParameters" Type="System.CodeDom.Compiler.CompilerParameters&amp;" RefType="out" />
        <Parameter Name="generatedFilesDir" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualCodeDir"><span data-ttu-id="a8515-190">要检索其相关信息的目录。</span><span class="sxs-lookup"><span data-stu-id="a8515-190">The directory about which to retrieve information.</span></span></param>
        <param name="codeDomProviderType"><span data-ttu-id="a8515-191">此方法返回时，包含用于代码生成和编译的提供程序类型。</span><span class="sxs-lookup"><span data-stu-id="a8515-191">When this method returns, contains the provider type used for code generation and compilation.</span></span></param>
        <param name="compilerParameters"><span data-ttu-id="a8515-192">此方法返回时，包含定义如何编译文件的属性。</span><span class="sxs-lookup"><span data-stu-id="a8515-192">When this method returns, contains the properties that define how the file will be compiled.</span></span></param>
        <param name="generatedFilesDir"><span data-ttu-id="a8515-193">此方法返回时，包含用于存储根据非代码文件生成的文件的目录。</span><span class="sxs-lookup"><span data-stu-id="a8515-193">When this method returns, contains the directory for files generated from non-code files.</span></span></param>
        <summary><span data-ttu-id="a8515-194">获取与编译器类型、编译器参数以及用来存储根据非代码文件（如 .wsdl 文件）生成的代码文件的目录有关的信息。</span><span class="sxs-lookup"><span data-stu-id="a8515-194">Gets information about the compiler type, compiler parameters, and the directory in which to store code files generated from non-code files such as .wsdl files.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8515-195"><xref:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation%2A>方法检索生成的代码目录所需的信息。</span><span class="sxs-lookup"><span data-stu-id="a8515-195">The <xref:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation%2A> method retrieves information needed to build a code directory.</span></span> <span data-ttu-id="a8515-196">它将返回此信息通过三个`out`参数。</span><span class="sxs-lookup"><span data-stu-id="a8515-196">It returns this information through three `out` parameters.</span></span> <span data-ttu-id="a8515-197">`codeDomProviderType`参数返回用于生成和编译代码目录中的文件提供程序类型。</span><span class="sxs-lookup"><span data-stu-id="a8515-197">The `codeDomProviderType` parameter returns the provider type for generating and compiling the files in the code directory.</span></span> <span data-ttu-id="a8515-198">`compilerParameters`参数包含确定编译行为的属性。</span><span class="sxs-lookup"><span data-stu-id="a8515-198">The `compilerParameters` parameter contains properties that determine compilation behavior.</span></span> <span data-ttu-id="a8515-199">`generatedFilesDir`参数将存储包含从在代码目录中，如.wsdl 文件的非代码文件生成的所有代码文件的目录路径。</span><span class="sxs-lookup"><span data-stu-id="a8515-199">The `generatedFilesDir` parameter stores the directory path containing all the code files generated from non-code files in the code directory, such as .wsdl files.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8515-200"><paramref name="virtualCodeDir" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="a8515-200"><paramref name="virtualCodeDir" /> is null.</span></span></exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetCompiledType">
      <MemberSignature Language="C#" Value="public Type GetCompiledType (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetCompiledType(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetCompiledType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCompiledType (virtualPath As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetCompiledType(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="a8515-201">要编译的文件的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="a8515-201">The virtual path of the file to compile.</span></span></param>
        <summary><span data-ttu-id="a8515-202">编译由虚拟路径表示的文件，并返回其编译类型。</span><span class="sxs-lookup"><span data-stu-id="a8515-202">Compiles the file represented by the virtual path and returns its compiled type.</span></span></summary>
        <returns><span data-ttu-id="a8515-203">经过编译的文件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a8515-203">The <see cref="T:System.Type" /> of the compiled file.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8515-204"><paramref name="virtualPath" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="a8515-204"><paramref name="virtualPath" /> is null.</span></span></exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetCompilerParameters">
      <MemberSignature Language="C#" Value="public void GetCompilerParameters (string virtualPath, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetCompilerParameters(string virtualPath, [out] class System.Type&amp; codeDomProviderType, [out] class System.CodeDom.Compiler.CompilerParameters&amp; compilerParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetCompilerParameters (virtualPath As String, ByRef codeDomProviderType As Type, ByRef compilerParameters As CompilerParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetCompilerParameters(System::String ^ virtualPath, [Runtime::InteropServices::Out] Type ^ % codeDomProviderType, [Runtime::InteropServices::Out] System::CodeDom::Compiler::CompilerParameters ^ % compilerParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="codeDomProviderType" Type="System.Type&amp;" RefType="out" />
        <Parameter Name="compilerParameters" Type="System.CodeDom.Compiler.CompilerParameters&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="a8515-205">文件的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="a8515-205">The virtual path to the file.</span></span></param>
        <param name="codeDomProviderType"><span data-ttu-id="a8515-206">此方法返回时，包含用于代码生成和编译的提供程序类型。</span><span class="sxs-lookup"><span data-stu-id="a8515-206">When this method returns, contains the provider type used for code generation and compilation.</span></span></param>
        <param name="compilerParameters"><span data-ttu-id="a8515-207">此方法返回时，包含定义如何编译文件的属性。</span><span class="sxs-lookup"><span data-stu-id="a8515-207">When this method returns, contains the properties that define how the file will be compiled.</span></span></param>
        <summary><span data-ttu-id="a8515-208">返回用来生成虚拟路径所表示的文件的编译器类型和参数。</span><span class="sxs-lookup"><span data-stu-id="a8515-208">Returns the compiler type and parameters that are used to build a file represented by a virtual path.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8515-209"><paramref name="virtualPath" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="a8515-209"><paramref name="virtualPath" /> is null.</span></span></exception>
        <altmember cref="P:System.Web.Compilation.CompilerType.CompilerParameters" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetGeneratedFileVirtualPath">
      <MemberSignature Language="C#" Value="public string GetGeneratedFileVirtualPath (string filePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetGeneratedFileVirtualPath(string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGeneratedFileVirtualPath (filePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetGeneratedFileVirtualPath(System::String ^ filePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filePath"><span data-ttu-id="a8515-210">所生成文件的完整物理路径。</span><span class="sxs-lookup"><span data-stu-id="a8515-210">The full physical path to a generated file.</span></span></param>
        <summary><span data-ttu-id="a8515-211">返回所生成文件的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="a8515-211">Returns the virtual path of a generated file.</span></span></summary>
        <returns><span data-ttu-id="a8515-212"><see cref="T:System.String" />，包含 <paramref name="filePath" /> 的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="a8515-212">A <see cref="T:System.String" /> containing the virtual path for <paramref name="filePath" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8515-213"><paramref name="filePath" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="a8515-213"><paramref name="filePath" /> is null.</span></span></exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetGeneratedSourceFile">
      <MemberSignature Language="C#" Value="public string GetGeneratedSourceFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetGeneratedSourceFile(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGeneratedSourceFile (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetGeneratedSourceFile(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="a8515-214">要检索的文件的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="a8515-214">The virtual path of the file to retrieve.</span></span></param>
        <summary><span data-ttu-id="a8515-215">获取虚拟路径的生成文件的物理路径。</span><span class="sxs-lookup"><span data-stu-id="a8515-215">Gets the physical path to the generated file for a virtual path.</span></span></summary>
        <returns><span data-ttu-id="a8515-216"><see cref="T:System.String" />，包含所生成文件的物理路径。</span><span class="sxs-lookup"><span data-stu-id="a8515-216">A <see cref="T:System.String" /> that contains the physical path to the generated file.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8515-217"><paramref name="virtualPath" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="a8515-217"><paramref name="virtualPath" /> is null.</span></span></exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetTopLevelAssemblyReferences">
      <MemberSignature Language="C#" Value="public string[] GetTopLevelAssemblyReferences (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetTopLevelAssemblyReferences(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTopLevelAssemblyReferences (virtualPath As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetTopLevelAssemblyReferences(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="a8515-218">配置的名称和路径。</span><span class="sxs-lookup"><span data-stu-id="a8515-218">The configuration name and path.</span></span></param>
        <summary><span data-ttu-id="a8515-219">返回 Bin 目录和 Web 配置文件的 <see langword="&lt;assembly&gt;" /> 节中定义的程序集的数组。</span><span class="sxs-lookup"><span data-stu-id="a8515-219">Returns an array of the assemblies defined in the Bin directory and the <see langword="&lt;assembly&gt;" /> section of the Web configuration file.</span></span></summary>
        <returns><span data-ttu-id="a8515-220"><see cref="T:System.String" /> 数组，包含指向 Bin 目录和 Web 配置文件的 <see langword="&lt;assembly&gt;" /> 节中的基本代码的路径。</span><span class="sxs-lookup"><span data-stu-id="a8515-220">A <see cref="T:System.String" /> array containing paths to code bases in the Bin directory and the <see langword="&lt;assembly&gt;" /> section of the Web configuration file.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8515-221"><paramref name="virtualPath" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="a8515-221"><paramref name="virtualPath" /> is null.</span></span></exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetVirtualCodeDirectories">
      <MemberSignature Language="C#" Value="public string[] GetVirtualCodeDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetVirtualCodeDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function GetVirtualCodeDirectories () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetVirtualCodeDirectories();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8515-222">返回 ASP.NET 应用程序中 App_Code 目录及其子目录的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="a8515-222">Returns the virtual paths to the App_Code directory and its subdirectories in an ASP.NET application.</span></span></summary>
        <returns><span data-ttu-id="a8515-223">一个 <see cref="T:System.String" /> 数组，包含应用程序中代码目录的所有虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="a8515-223">A <see cref="T:System.String" /> array containing all the virtual paths to code directories in an application.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8515-224">通过防止创建租约来给予应用程序域无限生存期。</span><span class="sxs-lookup"><span data-stu-id="a8515-224">Gives the application domain an infinite lifetime by preventing a lease from being created.</span></span></summary>
        <returns><span data-ttu-id="a8515-225">总是为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a8515-225">Always <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8515-226">此方法将替代<xref:System.MarshalByRefObject.InitializeLifetimeService%2A>其基类中的方法。</span><span class="sxs-lookup"><span data-stu-id="a8515-226">This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method in its base class.</span></span> <span data-ttu-id="a8515-227">它始终返回`null`，从而防止创建租约，会限制应用程序域的生存期。</span><span class="sxs-lookup"><span data-stu-id="a8515-227">It always returns `null` and thereby prevents a lease from being created that would limit the application domain's lifetime.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="IsCodeAssembly">
      <MemberSignature Language="C#" Value="public bool IsCodeAssembly (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsCodeAssembly(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.IsCodeAssembly(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsCodeAssembly (assemblyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsCodeAssembly(System::String ^ assemblyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="a8515-228">要标识为代码程序集的程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="a8515-228">The name of the assembly to be identified as a code assembly.</span></span></param>
        <summary><span data-ttu-id="a8515-229">指示程序集是否为代码程序集。</span><span class="sxs-lookup"><span data-stu-id="a8515-229">Indicates whether an assembly is a code assembly.</span></span></summary>
        <returns>
          <span data-ttu-id="a8515-230">如果 <paramref name="assemblyName" /> 参数与某个生成的代码程序集匹配，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a8515-230"><see langword="true" /> if the <paramref name="assemblyName" /> parameter matches one of the generated code assemblies; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8515-231"><paramref name="assemblyName" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="a8515-231"><paramref name="assemblyName" /> is null.</span></span></exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="IsHostCreated">
      <MemberSignature Language="C#" Value="public bool IsHostCreated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHostCreated" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManager.IsHostCreated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsHostCreated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHostCreated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8515-232">获取一个值，该值指出用于编译 ASP.NET Web 应用程序的应用程序域是否已经创建。</span><span class="sxs-lookup"><span data-stu-id="a8515-232">Gets a value that indicates whether an application domain for compiling ASP.NET Web applications has been created.</span></span></summary>
        <value>
          <span data-ttu-id="a8515-233">如果用于编译 ASP.NET Web 应用程序的应用程序域已经创建，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a8515-233"><see langword="true" /> if the application domain for compiling ASP.NET Web applications has been created; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PrecompileApplication">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a8515-234">预编译 ASP.NET 应用程序。</span><span class="sxs-lookup"><span data-stu-id="a8515-234">Precompiles an ASP.NET application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8515-235">ASP.NET 支持三种形式的预编译。</span><span class="sxs-lookup"><span data-stu-id="a8515-235">ASP.NET supports three forms of precompilation.</span></span> <span data-ttu-id="a8515-236">一种形式允许 ASP.NET 应用程序就地预编译。</span><span class="sxs-lookup"><span data-stu-id="a8515-236">One form allows for the in-place precompilation of an ASP.NET application.</span></span> <span data-ttu-id="a8515-237">在此窗体中，站点是部署到生产环境，然后进行预编译，因而不需要用户首次访问时动态编译站点。</span><span class="sxs-lookup"><span data-stu-id="a8515-237">In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user.</span></span> <span data-ttu-id="a8515-238">站点的第一个用户将不会遇到通常遇到动态编译的站点上的延迟。</span><span class="sxs-lookup"><span data-stu-id="a8515-238">The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.</span></span>  
  
 <span data-ttu-id="a8515-239">部署使用两个其他形式的预编译。</span><span class="sxs-lookup"><span data-stu-id="a8515-239">The two other forms of precompilation are used for deployment.</span></span> <span data-ttu-id="a8515-240">在其中任一种形式的布局的站点生成可以部署到生产计算机。</span><span class="sxs-lookup"><span data-stu-id="a8515-240">In either form, a layout of the site is generated that can be deployed to a production computer.</span></span> <span data-ttu-id="a8515-241">其中一种形式包括标记页，因此可以在编译的站点上执行一定量的更新。</span><span class="sxs-lookup"><span data-stu-id="a8515-241">One of these forms includes the markup pages so some amount of updating can be performed on the compiled site.</span></span> <span data-ttu-id="a8515-242">其他窗体不包含标记页，并因此无法更新无需重新编译原始站点。</span><span class="sxs-lookup"><span data-stu-id="a8515-242">The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site.</span></span> <span data-ttu-id="a8515-243">没有源代码部署到目标环境中的这些形式的预编译。</span><span class="sxs-lookup"><span data-stu-id="a8515-243">No source code is deployed to the target environment in either of these forms of precompilation.</span></span>  
  
 <span data-ttu-id="a8515-244">要预编译的应用程序通过定义<xref:System.Web.Compilation.ClientBuildManager>构造函数。</span><span class="sxs-lookup"><span data-stu-id="a8515-244">The application to precompile is defined through the <xref:System.Web.Compilation.ClientBuildManager> constructor.</span></span> <span data-ttu-id="a8515-245"><xref:System.Web.Compilation.ClientBuildManagerParameter>对象<xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A>构造函数定义的三种形式的预编译才能执行。</span><span class="sxs-lookup"><span data-stu-id="a8515-245">The <xref:System.Web.Compilation.ClientBuildManagerParameter> object of the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor defines which of the three forms of precompilation to perform.</span></span>  
  
 <span data-ttu-id="a8515-246">开发人员可以预编译网站与`aspnet_compiler`命令行工具或通过调用<xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a8515-246">A developer can precompile a Web site with the `aspnet_compiler` command-line tool or by calling the <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.ClientBuildManager.#ctor" />
      </Docs>
    </MemberGroup>
    <Member MemberName="PrecompileApplication">
      <MemberSignature Language="C#" Value="public void PrecompileApplication ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrecompileApplication() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrecompileApplication ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrecompileApplication();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8515-247">预编译 ASP.NET 应用程序。</span><span class="sxs-lookup"><span data-stu-id="a8515-247">Precompiles an ASP.NET application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8515-248">ASP.NET 支持三种形式的预编译。</span><span class="sxs-lookup"><span data-stu-id="a8515-248">ASP.NET supports three forms of precompilation.</span></span> <span data-ttu-id="a8515-249">一种形式允许 ASP.NET 应用程序就地预编译。</span><span class="sxs-lookup"><span data-stu-id="a8515-249">One form allows for the in-place precompilation of an ASP.NET application.</span></span> <span data-ttu-id="a8515-250">在此窗体中，站点是部署到生产环境，然后进行预编译，因而不需要用户首次访问时动态编译站点。</span><span class="sxs-lookup"><span data-stu-id="a8515-250">In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user.</span></span> <span data-ttu-id="a8515-251">站点的第一个用户将不会遇到通常遇到动态编译的站点上的延迟。</span><span class="sxs-lookup"><span data-stu-id="a8515-251">The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.</span></span>  
  
 <span data-ttu-id="a8515-252">部署使用两个其他形式的预编译。</span><span class="sxs-lookup"><span data-stu-id="a8515-252">The two other forms of precompilation are used for deployment.</span></span> <span data-ttu-id="a8515-253">在其中任一种形式的布局的站点生成可以部署到生产计算机。</span><span class="sxs-lookup"><span data-stu-id="a8515-253">In either form, a layout of the site is generated that can be deployed to a production computer.</span></span> <span data-ttu-id="a8515-254">其中一种形式包括标记页，因此可以在编译的站点上执行一定量的更新。</span><span class="sxs-lookup"><span data-stu-id="a8515-254">One of these forms includes the markup pages so some amount of updating can be performed on the compiled site.</span></span> <span data-ttu-id="a8515-255">其他窗体不包含标记页，并因此无法更新无需重新编译原始站点。</span><span class="sxs-lookup"><span data-stu-id="a8515-255">The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site.</span></span> <span data-ttu-id="a8515-256">没有源代码部署到目标环境中的这些形式的预编译。</span><span class="sxs-lookup"><span data-stu-id="a8515-256">No source code is deployed to the target environment in either of these forms of precompilation.</span></span>  
  
 <span data-ttu-id="a8515-257">要预编译的应用程序通过定义<xref:System.Web.Compilation.ClientBuildManager>构造函数。</span><span class="sxs-lookup"><span data-stu-id="a8515-257">The application to precompile is defined through the <xref:System.Web.Compilation.ClientBuildManager> constructor.</span></span> <span data-ttu-id="a8515-258"><xref:System.Web.Compilation.ClientBuildManagerParameter>对象<xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A>构造函数定义的三种形式的预编译才能执行。</span><span class="sxs-lookup"><span data-stu-id="a8515-258">The <xref:System.Web.Compilation.ClientBuildManagerParameter> object of the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor defines which of the three forms of precompilation to perform.</span></span>  
  
 <span data-ttu-id="a8515-259">开发人员可以预编译网站与`aspnet_compiler`命令行工具或通过调用<xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a8515-259">A developer can precompile a Web site with the `aspnet_compiler` command-line tool or by calling the <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.ClientBuildManager.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="PrecompileApplication">
      <MemberSignature Language="C#" Value="public void PrecompileApplication (System.Web.Compilation.ClientBuildManagerCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrecompileApplication(class System.Web.Compilation.ClientBuildManagerCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrecompileApplication (callback As ClientBuildManagerCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrecompileApplication(System::Web::Compilation::ClientBuildManagerCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.Compilation.ClientBuildManagerCallback" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="a8515-260">包含报告编译结果时要调用的方法的 <see cref="T:System.Web.Compilation.ClientBuildManagerCallback" />。</span><span class="sxs-lookup"><span data-stu-id="a8515-260">A <see cref="T:System.Web.Compilation.ClientBuildManagerCallback" /> containing the method to call when reporting the result of compilation.</span></span></param>
        <summary><span data-ttu-id="a8515-261">预编译 ASP.NET 应用程序，并提供回调方法来接收有关生成的状态信息。</span><span class="sxs-lookup"><span data-stu-id="a8515-261">Precompiles an ASP.NET application and provides a callback method to receive status information about the build.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8515-262">ASP.NET 支持三种形式的预编译。</span><span class="sxs-lookup"><span data-stu-id="a8515-262">ASP.NET supports three forms of precompilation.</span></span> <span data-ttu-id="a8515-263">一种形式允许 ASP.NET 应用程序就地预编译。</span><span class="sxs-lookup"><span data-stu-id="a8515-263">One form allows for the in-place precompilation of an ASP.NET application.</span></span> <span data-ttu-id="a8515-264">在此窗体中，站点是部署到生产环境，然后进行预编译，因而不需要用户首次访问时动态编译站点。</span><span class="sxs-lookup"><span data-stu-id="a8515-264">In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user.</span></span> <span data-ttu-id="a8515-265">站点的第一个用户将不会遇到通常遇到动态编译的站点上的延迟。</span><span class="sxs-lookup"><span data-stu-id="a8515-265">The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.</span></span> <span data-ttu-id="a8515-266">`callback`参数包含报告的编译结果时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="a8515-266">The `callback` parameter contains the method to call when reporting the result of compilation.</span></span>  
  
 <span data-ttu-id="a8515-267">部署使用两个其他形式的预编译。</span><span class="sxs-lookup"><span data-stu-id="a8515-267">The two other forms of precompilation are used for deployment.</span></span> <span data-ttu-id="a8515-268">在其中任一种形式的布局的站点生成可以部署到生产计算机。</span><span class="sxs-lookup"><span data-stu-id="a8515-268">In either form, a layout of the site is generated that can be deployed to a production computer.</span></span> <span data-ttu-id="a8515-269">其中一种形式包括标记页，因此可以在编译的站点上执行一定量的更新。</span><span class="sxs-lookup"><span data-stu-id="a8515-269">One of these forms includes the markup pages so some amount of updating can be performed on the compiled site.</span></span> <span data-ttu-id="a8515-270">其他窗体不包含标记页，并因此无法更新无需重新编译原始站点。</span><span class="sxs-lookup"><span data-stu-id="a8515-270">The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site.</span></span> <span data-ttu-id="a8515-271">没有源代码部署到目标环境中的这些形式的预编译。</span><span class="sxs-lookup"><span data-stu-id="a8515-271">No source code is deployed to the target environment in either of these forms of precompilation.</span></span>  
  
 <span data-ttu-id="a8515-272">要预编译的应用程序通过定义<xref:System.Web.Compilation.ClientBuildManager>构造函数。</span><span class="sxs-lookup"><span data-stu-id="a8515-272">The application to precompile is defined through the <xref:System.Web.Compilation.ClientBuildManager> constructor.</span></span> <span data-ttu-id="a8515-273"><xref:System.Web.Compilation.ClientBuildManagerParameter>对象<xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A>构造函数定义的三种形式的预编译才能执行。</span><span class="sxs-lookup"><span data-stu-id="a8515-273">The <xref:System.Web.Compilation.ClientBuildManagerParameter> object of the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor defines which of the three forms of precompilation to perform.</span></span>  
  
 <span data-ttu-id="a8515-274">开发人员可以预编译网站与`aspnet_compiler`命令行工具或通过调用<xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a8515-274">A developer can precompile a Web site with the `aspnet_compiler` command-line tool or by calling the <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.ClientBuildManager.#ctor" />
        <altmember cref="T:System.Web.Compilation.ClientBuildManagerCallback" />
      </Docs>
    </Member>
    <Member MemberName="PrecompileApplication">
      <MemberSignature Language="C#" Value="public void PrecompileApplication (System.Web.Compilation.ClientBuildManagerCallback callback, bool forceCleanBuild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrecompileApplication(class System.Web.Compilation.ClientBuildManagerCallback callback, bool forceCleanBuild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrecompileApplication (callback As ClientBuildManagerCallback, forceCleanBuild As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrecompileApplication(System::Web::Compilation::ClientBuildManagerCallback ^ callback, bool forceCleanBuild);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.Compilation.ClientBuildManagerCallback" />
        <Parameter Name="forceCleanBuild" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="a8515-275">包含报告编译结果时要调用的方法的 <see cref="T:System.Web.Compilation.ClientBuildManagerCallback" />。</span><span class="sxs-lookup"><span data-stu-id="a8515-275">A <see cref="T:System.Web.Compilation.ClientBuildManagerCallback" /> containing the method to call when reporting the result of compilation.</span></span></param>
        <param name="forceCleanBuild">
          <span data-ttu-id="a8515-276"><see langword="true" /> 执行干净生成，这将首先删除所有对象和中间文件；<see langword="false" /> 则仅重新生成那些已更改的文件。</span><span class="sxs-lookup"><span data-stu-id="a8515-276"><see langword="true" /> to perform a clean build, which will first delete all object and intermediate files; <see langword="false" /> to rebuild only those files that have changed.</span></span> <span data-ttu-id="a8515-277">如果存在生成环境可能不选取依赖项的可能性，则设置为 true。</span><span class="sxs-lookup"><span data-stu-id="a8515-277">Set to true if there is a chance that a dependency might not be picked up by the build environment.</span></span></param>
        <summary><span data-ttu-id="a8515-278">预编译 ASP.NET 应用程序，提供回调方法以接收有关生成的状态信息，并指示是否创建干净生成。</span><span class="sxs-lookup"><span data-stu-id="a8515-278">Precompiles an ASP.NET application, provides a callback method to receive status information about the build, and indicates whether to create a clean build.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8515-279">ASP.NET 支持三种形式的预编译。</span><span class="sxs-lookup"><span data-stu-id="a8515-279">ASP.NET supports three forms of precompilation.</span></span> <span data-ttu-id="a8515-280">一种形式允许 ASP.NET 应用程序就地预编译。</span><span class="sxs-lookup"><span data-stu-id="a8515-280">One form allows for the in-place precompilation of an ASP.NET application.</span></span> <span data-ttu-id="a8515-281">在此窗体中，站点是部署到生产环境，然后进行预编译，因而不需要用户首次访问时动态编译站点。</span><span class="sxs-lookup"><span data-stu-id="a8515-281">In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user.</span></span> <span data-ttu-id="a8515-282">站点的第一个用户将不会遇到通常遇到动态编译的站点上的延迟。</span><span class="sxs-lookup"><span data-stu-id="a8515-282">The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.</span></span> <span data-ttu-id="a8515-283">`callback`参数包含报告的编译结果时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="a8515-283">The `callback` parameter contains the method to call when reporting the result of compilation.</span></span>  
  
 <span data-ttu-id="a8515-284">部署使用两个其他形式的预编译。</span><span class="sxs-lookup"><span data-stu-id="a8515-284">The two other forms of precompilation are used for deployment.</span></span> <span data-ttu-id="a8515-285">在其中任一种形式的布局的站点生成可以部署到生产计算机。</span><span class="sxs-lookup"><span data-stu-id="a8515-285">In either form, a layout of the site is generated that can be deployed to a production computer.</span></span> <span data-ttu-id="a8515-286">其中一种形式包括标记页，因此可以在编译的站点上执行一定量的更新。</span><span class="sxs-lookup"><span data-stu-id="a8515-286">One of these forms includes the markup pages so some amount of updating can be performed on the compiled site.</span></span> <span data-ttu-id="a8515-287">其他窗体不包含标记页，并因此无法更新无需重新编译原始站点。</span><span class="sxs-lookup"><span data-stu-id="a8515-287">The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site.</span></span> <span data-ttu-id="a8515-288">没有源代码部署到目标环境中的这些形式的预编译。</span><span class="sxs-lookup"><span data-stu-id="a8515-288">No source code is deployed to the target environment in either of these forms of precompilation.</span></span>  
  
 <span data-ttu-id="a8515-289">要预编译的应用程序通过定义<xref:System.Web.Compilation.ClientBuildManager>构造函数。</span><span class="sxs-lookup"><span data-stu-id="a8515-289">The application to precompile is defined through the <xref:System.Web.Compilation.ClientBuildManager> constructor.</span></span> <span data-ttu-id="a8515-290"><xref:System.Web.Compilation.ClientBuildManagerParameter>对象<xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A>构造函数定义的三种形式的预编译才能执行。</span><span class="sxs-lookup"><span data-stu-id="a8515-290">The <xref:System.Web.Compilation.ClientBuildManagerParameter> object of the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor defines which of the three forms of precompilation to perform.</span></span>  
  
 <span data-ttu-id="a8515-291">开发人员可以预编译网站与`aspnet_compiler`命令行工具或通过调用<xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a8515-291">A developer can precompile a Web site with the `aspnet_compiler` command-line tool or by calling the <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <altmember cref="Overload:System.Web.Compilation.ClientBuildManager.#ctor" />
        <altmember cref="T:System.Web.Compilation.ClientBuildManagerCallback" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8515-292">终止当前 ASP.NET 应用程序。</span><span class="sxs-lookup"><span data-stu-id="a8515-292">Terminates the current ASP.NET application.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public bool Unload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Unload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.Unload" />
      <MemberSignature Language="VB.NET" Value="Public Function Unload () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Unload();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8515-293">卸载用于编译 ASP.NET Web 应用程序的应用程序域。</span><span class="sxs-lookup"><span data-stu-id="a8515-293">Unloads the application domain for compiling ASP.NET Web applications.</span></span></summary>
        <returns>
          <span data-ttu-id="a8515-294">如果卸载了应用程序域，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a8515-294"><see langword="true" /> if the application domain is unloaded; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
  </Members>
</Type>