<Type Name="HwndSource" FullName="System.Windows.Interop.HwndSource">
  <TypeSignature Language="C#" Value="public class HwndSource : System.Windows.PresentationSource, IDisposable, System.Windows.Interop.IKeyboardInputSink, System.Windows.Interop.IWin32Window" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi HwndSource extends System.Windows.PresentationSource implements class System.IDisposable, class System.Windows.Interop.IKeyboardInputSink, class System.Windows.Interop.IWin32Window" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.HwndSource" />
  <TypeSignature Language="VB.NET" Value="Public Class HwndSource&#xA;Inherits PresentationSource&#xA;Implements IDisposable, IKeyboardInputSink, IWin32Window" />
  <TypeSignature Language="C++ CLI" Value="public ref class HwndSource : System::Windows::PresentationSource, IDisposable, System::Windows::Interop::IKeyboardInputSink, System::Windows::Interop::IWin32Window" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.PresentationSource</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Interop.IKeyboardInputSink</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Interop.IWin32Window</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="3c18e-101">在 Win32 窗口中呈现 Windows Presentation Foundation (WPF) 内容。</span><span class="sxs-lookup"><span data-stu-id="3c18e-101">Presents Windows Presentation Foundation (WPF) content in a Win32 window.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3c18e-102">此类的许多成员 Internet 安全区域中不可用。</span><span class="sxs-lookup"><span data-stu-id="3c18e-102">Many members of this class are unavailable in the Internet security zone.</span></span>  
  
 <span data-ttu-id="3c18e-103"><xref:System.Windows.Interop.HwndSource>实现[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]可以包含窗口[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]内容。</span><span class="sxs-lookup"><span data-stu-id="3c18e-103">An <xref:System.Windows.Interop.HwndSource> implements a [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] window that can contain [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] content.</span></span> <span data-ttu-id="3c18e-104">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]排列窗口中的内容，为度量单位，呈现; 且交互式输入。</span><span class="sxs-lookup"><span data-stu-id="3c18e-104">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] content in the window is arranged, measured, and rendered; and is interactive to input.</span></span> <span data-ttu-id="3c18e-105">因为<xref:System.Windows.Interop.HwndSource>专门用于与进行互操作[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]，此类公开了多个低级别[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]功能。</span><span class="sxs-lookup"><span data-stu-id="3c18e-105">Because the <xref:System.Windows.Interop.HwndSource> is specifically designed to interoperate with [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)], this class exposes several low-level [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] features.</span></span> <span data-ttu-id="3c18e-106">此类可用于执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="3c18e-106">You can use this class to do the following:</span></span>  
  
-   <span data-ttu-id="3c18e-107">指定窗口样式、 窗口类样式和扩展窗口样式。</span><span class="sxs-lookup"><span data-stu-id="3c18e-107">Specify window styles, window class styles, and extended window styles.</span></span>  
  
-   <span data-ttu-id="3c18e-108">挂钩窗口过程。</span><span class="sxs-lookup"><span data-stu-id="3c18e-108">Hook the window procedure.</span></span>  
  
-   <span data-ttu-id="3c18e-109">提供对窗口句柄 (HWND) 访问。</span><span class="sxs-lookup"><span data-stu-id="3c18e-109">Provide access to the window handle (HWND).</span></span>  
  
-   <span data-ttu-id="3c18e-110">销毁窗口。</span><span class="sxs-lookup"><span data-stu-id="3c18e-110">Destroy the window.</span></span>  
  
 <span data-ttu-id="3c18e-111"><xref:System.Windows.Interop.HwndSource>类用于常规的互操作性，而不是托管的 HWND 包装。</span><span class="sxs-lookup"><span data-stu-id="3c18e-111">The <xref:System.Windows.Interop.HwndSource> class is designed for general interoperability and is not designed as a managed HWND wrapper.</span></span> <span data-ttu-id="3c18e-112">一般情况下，它不提供用于操作的窗口或检查其状态的属性的托管的方法。</span><span class="sxs-lookup"><span data-stu-id="3c18e-112">In general, it does not provide managed methods for manipulating the window or properties for inspecting its state.</span></span> <span data-ttu-id="3c18e-113">相反，<xref:System.Windows.Interop.HwndSource>类提供对访问[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]窗口句柄 (HWND) 通过<xref:System.Windows.Interop.HwndSource.Handle%2A>属性，可以通过 PInvoke 技术来传递[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)][!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)]以操作该窗口。</span><span class="sxs-lookup"><span data-stu-id="3c18e-113">Instead, the <xref:System.Windows.Interop.HwndSource> class provides access to the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] window handle (HWND) through the <xref:System.Windows.Interop.HwndSource.Handle%2A> property, which can be passed by means of PInvoke techniques to [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] in order to manipulate the window.</span></span>  
  
 <span data-ttu-id="3c18e-114">**构造**</span><span class="sxs-lookup"><span data-stu-id="3c18e-114">**Construction**</span></span>  
  
 <span data-ttu-id="3c18e-115">许多方面<xref:System.Windows.Interop.HwndSource>只能在构造时指定。</span><span class="sxs-lookup"><span data-stu-id="3c18e-115">Many aspects of the <xref:System.Windows.Interop.HwndSource> can only be specified at construction time.</span></span> <span data-ttu-id="3c18e-116">若要创建<xref:System.Windows.Interop.HwndSource>，首先创建<xref:System.Windows.Interop.HwndSourceParameters>结构并使用所需参数填充它。</span><span class="sxs-lookup"><span data-stu-id="3c18e-116">To create an <xref:System.Windows.Interop.HwndSource>, first create an <xref:System.Windows.Interop.HwndSourceParameters> structure and populate it with the desired parameters.</span></span> <span data-ttu-id="3c18e-117">这些参数包括：</span><span class="sxs-lookup"><span data-stu-id="3c18e-117">These parameters include the following:</span></span>  
  
-   <span data-ttu-id="3c18e-118">类、 窗口中，和扩展的窗口样式。</span><span class="sxs-lookup"><span data-stu-id="3c18e-118">The class, window, and extended window styles.</span></span> <span data-ttu-id="3c18e-119">你必须使用 PInvoke 更改样式创建窗口后。</span><span class="sxs-lookup"><span data-stu-id="3c18e-119">You must use PInvoke to change the styles after the window is created.</span></span> <span data-ttu-id="3c18e-120">创建窗口后，可以更改不是所有样式。</span><span class="sxs-lookup"><span data-stu-id="3c18e-120">Not all styles can be changed after the window is created.</span></span> <span data-ttu-id="3c18e-121">请查阅[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]文档，然后再更改窗口样式。</span><span class="sxs-lookup"><span data-stu-id="3c18e-121">Consult the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] documentation before changing window styles.</span></span>  
  
-   <span data-ttu-id="3c18e-122">窗口的初始位置。</span><span class="sxs-lookup"><span data-stu-id="3c18e-122">The initial position of the window.</span></span>  
  
-   <span data-ttu-id="3c18e-123">窗口，其中包括是否指定的大小，或应确定大小确定的初始大小[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]内容。</span><span class="sxs-lookup"><span data-stu-id="3c18e-123">The initial size of the window, which includes whether the size is specified or should be determined from the determined size of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] content.</span></span>  
  
-   <span data-ttu-id="3c18e-124">父窗口。</span><span class="sxs-lookup"><span data-stu-id="3c18e-124">The parent window.</span></span>  
  
-   <span data-ttu-id="3c18e-125"><xref:System.Windows.Interop.HwndSourceHook>包含在窗口过程链中。</span><span class="sxs-lookup"><span data-stu-id="3c18e-125">The <xref:System.Windows.Interop.HwndSourceHook> to include in the window procedure chain.</span></span> <span data-ttu-id="3c18e-126">如果在构造时指定了挂钩，它将接收所有消息窗口。</span><span class="sxs-lookup"><span data-stu-id="3c18e-126">If you specify a hook at construction time, it receives all messages for the window.</span></span> <span data-ttu-id="3c18e-127">你可以使用<xref:System.Windows.Interop.HwndSource.AddHook%2A>来添加挂钩后创建窗口。</span><span class="sxs-lookup"><span data-stu-id="3c18e-127">You can use <xref:System.Windows.Interop.HwndSource.AddHook%2A> to add a hook after the window is created.</span></span>  
  
-   <span data-ttu-id="3c18e-128">透明度设置中。</span><span class="sxs-lookup"><span data-stu-id="3c18e-128">The transparency settings.</span></span> <span data-ttu-id="3c18e-129">可以将顶级窗口配置为与其他 windows 桌面上的每像素透明度根据 blend[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]内容。</span><span class="sxs-lookup"><span data-stu-id="3c18e-129">A top-level window can be configured to blend with the other windows on the desktop according to the per-pixel transparency of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] content.</span></span> <span data-ttu-id="3c18e-130">若要启用此功能，设置<xref:System.Windows.Interop.HwndSourceParameters.UsesPerPixelOpacity%2A>中的属性<xref:System.Windows.Interop.HwndSourceParameters>到`true`。</span><span class="sxs-lookup"><span data-stu-id="3c18e-130">To enable this, set the <xref:System.Windows.Interop.HwndSourceParameters.UsesPerPixelOpacity%2A> property in the <xref:System.Windows.Interop.HwndSourceParameters> to `true`.</span></span> <span data-ttu-id="3c18e-131">此属性只能在构造时，而只能通过指定<xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29>构造函数签名，并实施一些限制。</span><span class="sxs-lookup"><span data-stu-id="3c18e-131">This property can only be specified at construction time, and only through the <xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29> constructor signature, and it imposes several limitations.</span></span>  
  
 <span data-ttu-id="3c18e-132">你填充后<xref:System.Windows.Interop.HwndSourceParameters>结构，请将其传递到<xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29>构造函数<xref:System.Windows.Interop.HwndSource>。</span><span class="sxs-lookup"><span data-stu-id="3c18e-132">After you populate the <xref:System.Windows.Interop.HwndSourceParameters> structure, pass it to the <xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29> constructor for the <xref:System.Windows.Interop.HwndSource>.</span></span>  
  
 <span data-ttu-id="3c18e-133">**对象生存期**</span><span class="sxs-lookup"><span data-stu-id="3c18e-133">**Object Lifetime**</span></span>  
  
 <span data-ttu-id="3c18e-134"><xref:System.Windows.Interop.HwndSource>是一个常规[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]对象，并且其生存期由垃圾回收器。</span><span class="sxs-lookup"><span data-stu-id="3c18e-134">An <xref:System.Windows.Interop.HwndSource> is a regular [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, and its lifetime is managed by the garbage collector.</span></span> <span data-ttu-id="3c18e-135">因为<xref:System.Windows.Interop.HwndSource>表示非托管的资源，<xref:System.Windows.Interop.HwndSource>实现<xref:System.IDisposable>。</span><span class="sxs-lookup"><span data-stu-id="3c18e-135">Because the <xref:System.Windows.Interop.HwndSource> represents an unmanaged resource, <xref:System.Windows.Interop.HwndSource> implements <xref:System.IDisposable>.</span></span> <span data-ttu-id="3c18e-136">以同步方式调用<xref:System.Windows.Interop.HwndSource.Dispose%2A>立即销毁[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]窗口，如果从所有者线程调用。</span><span class="sxs-lookup"><span data-stu-id="3c18e-136">Synchronously calling <xref:System.Windows.Interop.HwndSource.Dispose%2A> immediately destroys the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] window if called from the owner thread.</span></span> <span data-ttu-id="3c18e-137">如果从另一个线程调用[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]异步销毁窗口。</span><span class="sxs-lookup"><span data-stu-id="3c18e-137">If called from another thread, the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] window is destroyed asynchronously.</span></span> <span data-ttu-id="3c18e-138">调用<xref:System.Windows.Interop.HwndSource.Dispose%2A>显式交互操作的代码从可能某些互操作方案所必需的。</span><span class="sxs-lookup"><span data-stu-id="3c18e-138">Calling <xref:System.Windows.Interop.HwndSource.Dispose%2A> explicitly from the interoperating code might be necessary for certain interoperation scenarios.</span></span>  
  
 <span data-ttu-id="3c18e-139">**窗口过程**</span><span class="sxs-lookup"><span data-stu-id="3c18e-139">**Window Procedures**</span></span>  
  
 <span data-ttu-id="3c18e-140"><xref:System.Windows.Interop.HwndSource>类实现其自己的窗口过程。</span><span class="sxs-lookup"><span data-stu-id="3c18e-140">The <xref:System.Windows.Interop.HwndSource> class implements its own window procedure.</span></span> <span data-ttu-id="3c18e-141">此窗口过程是用于处理重要的窗口消息，例如那些与布局、 呈现、 和输入。</span><span class="sxs-lookup"><span data-stu-id="3c18e-141">This window procedure is used to process important window messages, such as those related to layout, rendering, and input.</span></span> <span data-ttu-id="3c18e-142">但是，您还可以供自己使用挂钩窗口过程。</span><span class="sxs-lookup"><span data-stu-id="3c18e-142">However, you can also hook the window procedure for your own use.</span></span> <span data-ttu-id="3c18e-143">你可以通过设置在构造过程指定您自己的挂钩<xref:System.Windows.Interop.HwndSourceParameters.HwndSourceHook%2A?displayProperty=nameWithType>属性，或你还可以使用<xref:System.Windows.Interop.HwndSource.AddHook%2A>和<xref:System.Windows.Interop.HwndSource.RemoveHook%2A>添加和删除挂钩后创建窗口。</span><span class="sxs-lookup"><span data-stu-id="3c18e-143">You can specify your own hook during construction by setting the <xref:System.Windows.Interop.HwndSourceParameters.HwndSourceHook%2A?displayProperty=nameWithType> property, or you can also use <xref:System.Windows.Interop.HwndSource.AddHook%2A> and <xref:System.Windows.Interop.HwndSource.RemoveHook%2A> to add and remove hooks after the window is created.</span></span> <span data-ttu-id="3c18e-144">挂钩所调用的最后一个单元中先进先出顺序，使挂钩内置处理之前执行。</span><span class="sxs-lookup"><span data-stu-id="3c18e-144">The hooks are called by last-in first-out order, which enables your hooks to execute before the built-in processing.</span></span> <span data-ttu-id="3c18e-145">实际挂钩持有通过弱引用。</span><span class="sxs-lookup"><span data-stu-id="3c18e-145">The actual hooks are held by a weak reference.</span></span> <span data-ttu-id="3c18e-146">因此，请确保你管理挂钩委托的生存期。</span><span class="sxs-lookup"><span data-stu-id="3c18e-146">Therefore, make sure that you manage the lifetime of your hook delegate.</span></span>  
  
 <span data-ttu-id="3c18e-147">有关详细信息<xref:System.Windows.Interop.HwndSource>和互操作的其他类，请参阅[WPF 和 Win32 间的互操作](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md)。</span><span class="sxs-lookup"><span data-stu-id="3c18e-147">For more information about <xref:System.Windows.Interop.HwndSource> and other interoperation classes, see [WPF and Win32 Interoperation](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md).</span></span>  
  
 <span data-ttu-id="3c18e-148">请注意如何的构造函数<xref:System.Windows.Interop.HwndSource>采用类似于的参数的参数[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]函数如[CreateWindowEx](http://go.microsoft.com/fwlink/?LinkID=98462)。</span><span class="sxs-lookup"><span data-stu-id="3c18e-148">Notice how the constructors for <xref:System.Windows.Interop.HwndSource> take parameters that resemble the parameters for [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] functions such as [CreateWindowEx](http://go.microsoft.com/fwlink/?LinkID=98462).</span></span>  
  
 <span data-ttu-id="3c18e-149">缩放转换不应应用于<xref:System.Windows.Interop.HwndSource.RootVisual%2A>的<xref:System.Windows.Interop.HwndSource>。</span><span class="sxs-lookup"><span data-stu-id="3c18e-149">Scale transformations should not be applied to the <xref:System.Windows.Interop.HwndSource.RootVisual%2A> of an <xref:System.Windows.Interop.HwndSource>.</span></span> <span data-ttu-id="3c18e-150">请参阅备注以<xref:System.Windows.Interop.HwndSource.RootVisual%2A>。</span><span class="sxs-lookup"><span data-stu-id="3c18e-150">See Remarks for <xref:System.Windows.Interop.HwndSource.RootVisual%2A>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Interop.HwndHost" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c18e-151">初始化 <see cref="T:System.Windows.Interop.HwndSource" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="3c18e-151">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSource" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3c18e-152">此方法在 Internet 安全区域中不可用。</span><span class="sxs-lookup"><span data-stu-id="3c18e-152">This method is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HwndSource (System.Windows.Interop.HwndSourceParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Interop.HwndSourceParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.#ctor(System.Windows.Interop.HwndSourceParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameters As HwndSourceParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HwndSource(System::Windows::Interop::HwndSourceParameters parameters);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parameters" Type="System.Windows.Interop.HwndSourceParameters" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="3c18e-153">包含创建窗口所需的参数的结构。</span><span class="sxs-lookup"><span data-stu-id="3c18e-153">A structure that contains the parameters that are required to create the window.</span></span></param>
        <summary><span data-ttu-id="3c18e-154">通过使用包含初始设置的结构初始化 <see cref="T:System.Windows.Interop.HwndSource" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="3c18e-154">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSource" /> class by using a structure that contains the initial settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3c18e-155">此方法在 Internet 安全区域中不可用。</span><span class="sxs-lookup"><span data-stu-id="3c18e-155">This method is not available in the Internet security zone.</span></span>  
  
 <span data-ttu-id="3c18e-156">此构造函数签名可能在某些情况下，更方便，因为默认结构包含某些适当的初始默认值。</span><span class="sxs-lookup"><span data-stu-id="3c18e-156">This constructor signature might be more convenient in certain situations, because the default structure contains some appropriate initial default values.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3c18e-157">如果你使用此签名，不要使用默认值<xref:System.Windows.Interop.HwndSourceParameters>构造函数来构造<xref:System.Windows.Interop.HwndSourceParameters>结构`parameters`值。</span><span class="sxs-lookup"><span data-stu-id="3c18e-157">If you use this signature, do not use the default <xref:System.Windows.Interop.HwndSourceParameters> constructor to construct the <xref:System.Windows.Interop.HwndSourceParameters> structure for the `parameters` value.</span></span> <span data-ttu-id="3c18e-158">必须使用<xref:System.Windows.Interop.HwndSourceParameters>使您能够指定初始窗口名称的构造函数。</span><span class="sxs-lookup"><span data-stu-id="3c18e-158">You must use the <xref:System.Windows.Interop.HwndSourceParameters> constructor that enables you to specify an initial window name.</span></span> <span data-ttu-id="3c18e-159">如果使用默认<xref:System.Windows.Interop.HwndSourceParameters>构造函数并创建<xref:System.Windows.Interop.HwndSource>与其，，<xref:System.Windows.Interop.HwndSource>不显示因为初始窗口名称是表示的 HWND 的构造必要条件。</span><span class="sxs-lookup"><span data-stu-id="3c18e-159">If you use the default <xref:System.Windows.Interop.HwndSourceParameters> constructor and create an <xref:System.Windows.Interop.HwndSource> with it, that <xref:System.Windows.Interop.HwndSource> does not display because an initial window name is a construction requirement for the represented HWND.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="3c18e-160">若要创建此类的实例。</span><span class="sxs-lookup"><span data-stu-id="3c18e-160">to create instances of this class.</span></span> <span data-ttu-id="3c18e-161">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="3c18e-161">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HwndSource (int classStyle, int style, int exStyle, int x, int y, string name, IntPtr parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 classStyle, int32 style, int32 exStyle, int32 x, int32 y, string name, native int parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (classStyle As Integer, style As Integer, exStyle As Integer, x As Integer, y As Integer, name As String, parent As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HwndSource(int classStyle, int style, int exStyle, int x, int y, System::String ^ name, IntPtr parent);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="classStyle" Type="System.Int32" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="exStyle" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parent" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="classStyle"><span data-ttu-id="3c18e-162">窗口的 [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] 类样式。</span><span class="sxs-lookup"><span data-stu-id="3c18e-162">The [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] class styles for the window.</span></span></param>
        <param name="style"><span data-ttu-id="3c18e-163">窗口的 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 样式。</span><span class="sxs-lookup"><span data-stu-id="3c18e-163">The [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] styles for the window.</span></span></param>
        <param name="exStyle"><span data-ttu-id="3c18e-164">窗口的扩展 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 样式。</span><span class="sxs-lookup"><span data-stu-id="3c18e-164">The extended [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] styles for the window.</span></span></param>
        <param name="x"><span data-ttu-id="3c18e-165">窗口左边缘的位置。</span><span class="sxs-lookup"><span data-stu-id="3c18e-165">The position of the window's left edge.</span></span></param>
        <param name="y"><span data-ttu-id="3c18e-166">窗口上边缘的位置。</span><span class="sxs-lookup"><span data-stu-id="3c18e-166">The position of the window's upper edge.</span></span></param>
        <param name="name"><span data-ttu-id="3c18e-167">窗口的名称。</span><span class="sxs-lookup"><span data-stu-id="3c18e-167">The name of the window.</span></span></param>
        <param name="parent"><span data-ttu-id="3c18e-168">窗口的父窗口的句柄。</span><span class="sxs-lookup"><span data-stu-id="3c18e-168">The handle of the window's parent window.</span></span></param>
        <summary><span data-ttu-id="3c18e-169">初始化具有指定类样式、样式、扩展样式、x-y 位置、名称和父窗口的 <see cref="T:System.Windows.Interop.HwndSource" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="3c18e-169">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSource" /> class with a specified class style, style, extended style, x-y position, name, and parent window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3c18e-170">此方法在 Internet 安全区域中不可用。</span><span class="sxs-lookup"><span data-stu-id="3c18e-170">This method is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="3c18e-171">若要创建此类的实例。</span><span class="sxs-lookup"><span data-stu-id="3c18e-171">to create instances of this class.</span></span> <span data-ttu-id="3c18e-172">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="3c18e-172">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HwndSource (int classStyle, int style, int exStyle, int x, int y, int width, int height, string name, IntPtr parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 classStyle, int32 style, int32 exStyle, int32 x, int32 y, int32 width, int32 height, string name, native int parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (classStyle As Integer, style As Integer, exStyle As Integer, x As Integer, y As Integer, width As Integer, height As Integer, name As String, parent As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HwndSource(int classStyle, int style, int exStyle, int x, int y, int width, int height, System::String ^ name, IntPtr parent);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="classStyle" Type="System.Int32" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="exStyle" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parent" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="classStyle"><span data-ttu-id="3c18e-173">窗口的 [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] 类样式。</span><span class="sxs-lookup"><span data-stu-id="3c18e-173">The [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] class styles for the window.</span></span></param>
        <param name="style"><span data-ttu-id="3c18e-174">窗口的 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 样式。</span><span class="sxs-lookup"><span data-stu-id="3c18e-174">The [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] styles for the window.</span></span></param>
        <param name="exStyle"><span data-ttu-id="3c18e-175">窗口的扩展 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 样式。</span><span class="sxs-lookup"><span data-stu-id="3c18e-175">The extended [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] styles for the window.</span></span></param>
        <param name="x"><span data-ttu-id="3c18e-176">窗口左边缘的位置。</span><span class="sxs-lookup"><span data-stu-id="3c18e-176">The position of the window's left edge.</span></span></param>
        <param name="y"><span data-ttu-id="3c18e-177">窗口上边缘的位置。</span><span class="sxs-lookup"><span data-stu-id="3c18e-177">The position of the window's upper edge.</span></span></param>
        <param name="width"><span data-ttu-id="3c18e-178">窗口的宽度。</span><span class="sxs-lookup"><span data-stu-id="3c18e-178">The width of the window.</span></span></param>
        <param name="height"><span data-ttu-id="3c18e-179">窗口的高度。</span><span class="sxs-lookup"><span data-stu-id="3c18e-179">The height of the window.</span></span></param>
        <param name="name"><span data-ttu-id="3c18e-180">窗口的名称。</span><span class="sxs-lookup"><span data-stu-id="3c18e-180">The name of the window.</span></span></param>
        <param name="parent"><span data-ttu-id="3c18e-181">窗口的父窗口的句柄。</span><span class="sxs-lookup"><span data-stu-id="3c18e-181">The handle of the window's parent window.</span></span></param>
        <summary><span data-ttu-id="3c18e-182">初始化具有指定类样式、样式、扩展样式、x-y 位置、宽度、高度、名称和父窗口的 <see cref="T:System.Windows.Interop.HwndSource" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="3c18e-182">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSource" /> class with a specified class style, style, extended style, x-y position, width, height, name, and parent window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3c18e-183">此方法在 Internet 安全区域中不可用。</span><span class="sxs-lookup"><span data-stu-id="3c18e-183">This method is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="3c18e-184">若要创建此类的实例。</span><span class="sxs-lookup"><span data-stu-id="3c18e-184">to create instances of this class.</span></span> <span data-ttu-id="3c18e-185">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="3c18e-185">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HwndSource (int classStyle, int style, int exStyle, int x, int y, int width, int height, string name, IntPtr parent, bool adjustSizingForNonClientArea);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 classStyle, int32 style, int32 exStyle, int32 x, int32 y, int32 width, int32 height, string name, native int parent, bool adjustSizingForNonClientArea) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (classStyle As Integer, style As Integer, exStyle As Integer, x As Integer, y As Integer, width As Integer, height As Integer, name As String, parent As IntPtr, adjustSizingForNonClientArea As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HwndSource(int classStyle, int style, int exStyle, int x, int y, int width, int height, System::String ^ name, IntPtr parent, bool adjustSizingForNonClientArea);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="classStyle" Type="System.Int32" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="exStyle" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parent" Type="System.IntPtr" />
        <Parameter Name="adjustSizingForNonClientArea" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="classStyle"><span data-ttu-id="3c18e-186">窗口的 [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] 类样式。</span><span class="sxs-lookup"><span data-stu-id="3c18e-186">The [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] class styles for the window.</span></span></param>
        <param name="style"><span data-ttu-id="3c18e-187">窗口的 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 样式。</span><span class="sxs-lookup"><span data-stu-id="3c18e-187">The [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] styles for the window.</span></span></param>
        <param name="exStyle"><span data-ttu-id="3c18e-188">窗口的扩展 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 样式。</span><span class="sxs-lookup"><span data-stu-id="3c18e-188">The extended [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] styles for the window.</span></span></param>
        <param name="x"><span data-ttu-id="3c18e-189">窗口左边缘的位置。</span><span class="sxs-lookup"><span data-stu-id="3c18e-189">The position of the window's left edge.</span></span></param>
        <param name="y"><span data-ttu-id="3c18e-190">窗口上边缘的位置。</span><span class="sxs-lookup"><span data-stu-id="3c18e-190">The position of the window's upper edge.</span></span></param>
        <param name="width"><span data-ttu-id="3c18e-191">窗口的宽度。</span><span class="sxs-lookup"><span data-stu-id="3c18e-191">The width of the window.</span></span></param>
        <param name="height"><span data-ttu-id="3c18e-192">窗口的高度。</span><span class="sxs-lookup"><span data-stu-id="3c18e-192">The height of the window.</span></span></param>
        <param name="name"><span data-ttu-id="3c18e-193">窗口的名称。</span><span class="sxs-lookup"><span data-stu-id="3c18e-193">The name of the window.</span></span></param>
        <param name="parent"><span data-ttu-id="3c18e-194">窗口的父窗口的句柄。</span><span class="sxs-lookup"><span data-stu-id="3c18e-194">The handle of the window's parent window.</span></span></param>
        <param name="adjustSizingForNonClientArea">
          <span data-ttu-id="3c18e-195">如果布局管理器包含要调整大小的非工作区，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c18e-195"><see langword="true" /> to have the layout manager include the non-client area for sizing; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="3c18e-196">初始化 <see cref="T:System.Windows.Interop.HwndSource" /> 类的新实例，此实例具有指定的类样式、样式、扩展样式、x-y 位置、宽度、高度、名称和父窗口，并且指示了窗口是否自动调整大小。</span><span class="sxs-lookup"><span data-stu-id="3c18e-196">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSource" /> class with a specified class style, style, extended style, x-y position, width, height, name, and parent window, and by specifying whether the window is autosized.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3c18e-197">此方法在 Internet 安全区域中不可用。</span><span class="sxs-lookup"><span data-stu-id="3c18e-197">This method is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="3c18e-198">若要创建此类的实例。</span><span class="sxs-lookup"><span data-stu-id="3c18e-198">to create instances of this class.</span></span> <span data-ttu-id="3c18e-199">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="3c18e-199">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AcquireHwndFocusInMenuMode">
      <MemberSignature Language="C#" Value="public bool AcquireHwndFocusInMenuMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcquireHwndFocusInMenuMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcquireHwndFocusInMenuMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcquireHwndFocusInMenuMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c18e-200">获取一个值，该值确定是否为此 <see cref="T:System.Windows.Interop.HwndSource" /> 获取包含窗口的 WPF 的 Win32 焦点。</span><span class="sxs-lookup"><span data-stu-id="3c18e-200">Gets the value that determines whether to acquire Win32 focus for the WPF containing window for this <see cref="T:System.Windows.Interop.HwndSource" />.</span></span></summary>
        <value>
          <span data-ttu-id="3c18e-201">若要在用户与菜单交互时获取包含窗口的 WPF 的 Win32 焦点，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c18e-201"><see langword="true" /> to acquire Win32 focus for the WPF containing window when the user interacts with menus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c18e-202">在创建时设置此值<xref:System.Windows.Interop.HwndSource>通过设置<xref:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode%2A>参数。</span><span class="sxs-lookup"><span data-stu-id="3c18e-202">This value is set when you create the <xref:System.Windows.Interop.HwndSource> by setting the <xref:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode%2A> parameter.</span></span>  
  
 <span data-ttu-id="3c18e-203">默认值由<xref:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3c18e-203">The default value is determined by the <xref:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHook">
      <MemberSignature Language="C#" Value="public void AddHook (System.Windows.Interop.HwndSourceHook hook);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHook(class System.Windows.Interop.HwndSourceHook hook) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHook (hook As HwndSourceHook)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHook(System::Windows::Interop::HwndSourceHook ^ hook);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hook" Type="System.Windows.Interop.HwndSourceHook" />
      </Parameters>
      <Docs>
        <param name="hook"><span data-ttu-id="3c18e-204">接收窗口消息的处理程序实现（基于 <see cref="T:System.Windows.Interop.HwndSourceHook" /> 委托）。</span><span class="sxs-lookup"><span data-stu-id="3c18e-204">The handler implementation (based on the <see cref="T:System.Windows.Interop.HwndSourceHook" /> delegate) that receives the window messages.</span></span></param>
        <summary><span data-ttu-id="3c18e-205">添加接收所有窗口消息的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3c18e-205">Adds an event handler that receives all window messages.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3c18e-206">此方法在 Internet 安全区域中不可用。</span><span class="sxs-lookup"><span data-stu-id="3c18e-206">This method is not available in the Internet security zone.</span></span>  
  
 <span data-ttu-id="3c18e-207">大多数[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]消息在该到达<xref:System.Windows.Interop.HwndSource>有近似[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]等效。</span><span class="sxs-lookup"><span data-stu-id="3c18e-207">Most [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] messages that reach the <xref:System.Windows.Interop.HwndSource> have an approximate [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] equivalent.</span></span> <span data-ttu-id="3c18e-208">你使用<xref:System.Windows.Interop.HwndSource.AddHook%2A>来处理该消息没有的情况[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]等效。</span><span class="sxs-lookup"><span data-stu-id="3c18e-208">You use <xref:System.Windows.Interop.HwndSource.AddHook%2A> to handle the cases where the message has no [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] equivalent.</span></span>  
  
 <span data-ttu-id="3c18e-209"><xref:System.Windows.Interop.HwndSourceHook>委托类似于的参数配置文件[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]主窗口过程。</span><span class="sxs-lookup"><span data-stu-id="3c18e-209">The <xref:System.Windows.Interop.HwndSourceHook> delegate resembles the parameter profile of a [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] main window procedure.</span></span> <span data-ttu-id="3c18e-210">所有的窗口消息的主窗口过程<xref:System.Windows.Interop.HwndSource>父窗口收到还将转发到<xref:System.Windows.Interop.HwndSourceHook>委托。</span><span class="sxs-lookup"><span data-stu-id="3c18e-210">All window messages that the main window procedure of the <xref:System.Windows.Interop.HwndSource> parent window receives are also forwarded to the <xref:System.Windows.Interop.HwndSourceHook> delegates.</span></span>  
  
 <span data-ttu-id="3c18e-211">挂钩的调用与它们的添加顺序。</span><span class="sxs-lookup"><span data-stu-id="3c18e-211">Hooks are called in the order that they were added.</span></span> <span data-ttu-id="3c18e-212">如果任何挂钩返回`handled` = `true`消息，则调用顺序中的后它挂钩不调用该消息。</span><span class="sxs-lookup"><span data-stu-id="3c18e-212">If any hook returns `handled`=`true` for a message, the hooks after it in the call order are not called for that message.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="3c18e-213">若要添加处理。</span><span class="sxs-lookup"><span data-stu-id="3c18e-213">to add handling.</span></span> <span data-ttu-id="3c18e-214">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="3c18e-214">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="T:System.Windows.Interop.HwndSourceHook" />
        <altmember cref="M:System.Windows.Interop.HwndSource.RemoveHook(System.Windows.Interop.HwndSourceHook)" />
      </Docs>
    </Member>
    <Member MemberName="AutoResized">
      <MemberSignature Language="C#" Value="public event System.Windows.AutoResizedEventHandler AutoResized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.AutoResizedEventHandler AutoResized" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.HwndSource.AutoResized" />
      <MemberSignature Language="VB.NET" Value="Public Event AutoResized As AutoResizedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::AutoResizedEventHandler ^ AutoResized;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.AutoResizedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c18e-215">当布局导致 <see cref="T:System.Windows.Interop.HwndSource" /> 自动调整大小时发生。</span><span class="sxs-lookup"><span data-stu-id="3c18e-215">Occurs when layout causes the <see cref="T:System.Windows.Interop.HwndSource" /> to automatically resize.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c18e-216">本机行为<xref:System.Windows.Interop.HwndSource>是内容和更改通过报告所基于的窗口区域自动调整大小[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]布局系统。</span><span class="sxs-lookup"><span data-stu-id="3c18e-216">The native behavior of <xref:System.Windows.Interop.HwndSource> is to automatically resize content and the window region based on changes reported through the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] layout system.</span></span> <span data-ttu-id="3c18e-217">如果当前最小化，或如果，不会不调整大小窗口<xref:System.Windows.Interop.HwndSource.SizeToContent%2A>设置为<xref:System.Windows.SizeToContent.Manual>。</span><span class="sxs-lookup"><span data-stu-id="3c18e-217">The window does not resize if it is currently minimized or if <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> is set to <xref:System.Windows.SizeToContent.Manual>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildKeyboardInputSinks">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Interop.IKeyboardInputSink&gt; ChildKeyboardInputSinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Interop.IKeyboardInputSink&gt; ChildKeyboardInputSinks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.ChildKeyboardInputSinks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildKeyboardInputSinks As IEnumerable(Of IKeyboardInputSink)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Interop::IKeyboardInputSink ^&gt; ^ ChildKeyboardInputSinks { System::Collections::Generic::IEnumerable&lt;System::Windows::Interop::IKeyboardInputSink ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Windows.Interop.HwndSource/&lt;get_ChildKeyboardInputSinks&gt;d__29))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Interop.IKeyboardInputSink&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c18e-218">获取一系列注册的输入接收器。</span><span class="sxs-lookup"><span data-stu-id="3c18e-218">Gets a sequence of registered input sinks.</span></span></summary>
        <value><span data-ttu-id="3c18e-219">键盘输入接收器的枚举。</span><span class="sxs-lookup"><span data-stu-id="3c18e-219">An enumeration of keyboard input sinks.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompositionTarget">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.HwndTarget CompositionTarget { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.HwndTarget CompositionTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.CompositionTarget" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompositionTarget As HwndTarget" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Interop::HwndTarget ^ CompositionTarget { System::Windows::Interop::HwndTarget ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.HwndTarget</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c18e-220">获取所承载的窗口的可视化管理器。</span><span class="sxs-lookup"><span data-stu-id="3c18e-220">Gets the visual manager for the hosted window.</span></span></summary>
        <value><span data-ttu-id="3c18e-221">可视化管理器。</span><span class="sxs-lookup"><span data-stu-id="3c18e-221">The visual manager.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c18e-222">重写<xref:System.Windows.Interop.HwndSource.GetCompositionTargetCore%2A>若要重写值的<xref:System.Windows.Interop.HwndSource.CompositionTarget%2A>返回。</span><span class="sxs-lookup"><span data-stu-id="3c18e-222">Override <xref:System.Windows.Interop.HwndSource.GetCompositionTargetCore%2A> in order to override the value that <xref:System.Windows.Interop.HwndSource.CompositionTarget%2A> returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHandleRef">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.HandleRef CreateHandleRef ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.InteropServices.HandleRef CreateHandleRef() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.CreateHandleRef" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateHandleRef () As HandleRef" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::InteropServices::HandleRef CreateHandleRef();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.HandleRef</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c18e-223">获取 <see cref="T:System.Windows.Interop.HwndSource" /> 的窗口句柄。</span><span class="sxs-lookup"><span data-stu-id="3c18e-223">Gets the window handle for the <see cref="T:System.Windows.Interop.HwndSource" />.</span></span> <span data-ttu-id="3c18e-224">此窗口句柄作为 <see cref="T:System.Runtime.InteropServices.HandleRef" /> 结构一部分打包。</span><span class="sxs-lookup"><span data-stu-id="3c18e-224">The window handle is packaged as part of a <see cref="T:System.Runtime.InteropServices.HandleRef" /> structure.</span></span></summary>
        <returns><span data-ttu-id="3c18e-225">包含此 <see cref="T:System.Windows.Interop.HwndSource" /> 的窗口句柄的结构。</span><span class="sxs-lookup"><span data-stu-id="3c18e-225">A structure that contains the window handle for this <see cref="T:System.Windows.Interop.HwndSource" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c18e-226">你可以使用从获取的句柄<xref:System.Windows.Interop.HwndSource.CreateHandleRef%2A>引用<xref:System.Windows.Interop.HwndSource>从[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]代码。</span><span class="sxs-lookup"><span data-stu-id="3c18e-226">You can use the handle that is obtained from <xref:System.Windows.Interop.HwndSource.CreateHandleRef%2A> to reference the <xref:System.Windows.Interop.HwndSource> from [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] code.</span></span> <span data-ttu-id="3c18e-227">消息处理和窗口行为等操作中使用该句柄。</span><span class="sxs-lookup"><span data-stu-id="3c18e-227">Use the handle for operations such as message handling and window behavior.</span></span>  
  
 <span data-ttu-id="3c18e-228">若要获取只的句柄，请使用<xref:System.Windows.Interop.HwndSource.Handle%2A>。</span><span class="sxs-lookup"><span data-stu-id="3c18e-228">To get just the handle, use <xref:System.Windows.Interop.HwndSource.Handle%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.HwndSource.Handle" />
      </Docs>
    </Member>
    <Member MemberName="DefaultAcquireHwndFocusInMenuMode">
      <MemberSignature Language="C#" Value="public static bool DefaultAcquireHwndFocusInMenuMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool DefaultAcquireHwndFocusInMenuMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultAcquireHwndFocusInMenuMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool DefaultAcquireHwndFocusInMenuMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c18e-229">获取或设置 <see cref="P:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode" /> 的新实例的默认 <see cref="T:System.Windows.Interop.HwndSource" /> 值。</span><span class="sxs-lookup"><span data-stu-id="3c18e-229">Gets or sets the default <see cref="P:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode" /> value for new instances of <see cref="T:System.Windows.Interop.HwndSource" />.</span></span></summary>
        <value>
          <span data-ttu-id="3c18e-230">若要在用户与菜单交互时获取包含窗口的 WPF 的 Win32 焦点，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c18e-230"><see langword="true" /> to acquire Win32 focus for the WPF containing window when the user interacts with menus; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3c18e-231">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="3c18e-231">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c18e-232">新实例<xref:System.Windows.Interop.HwndSource>具有<xref:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode%2A>设置为此默认值，除非不同的值传递作为参数传递给<xref:System.Windows.Interop.HwndSource>构造函数的特定实例，通过使用<xref:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3c18e-232">New instances of <xref:System.Windows.Interop.HwndSource> have <xref:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode%2A> set to this default value, unless a different value is passed as a parameter to the <xref:System.Windows.Interop.HwndSource> constructor for a specific instance, by using the <xref:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="3c18e-233">若要获取此属性。</span><span class="sxs-lookup"><span data-stu-id="3c18e-233">to get this property.</span></span> <span data-ttu-id="3c18e-234">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="3c18e-234">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="P:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c18e-235">释放 <see cref="T:System.Windows.Interop.HwndSource" /> 使用的所有托管资源，并引发 <see cref="E:System.Windows.Interop.HwndSource.Disposed" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="3c18e-235">Releases all managed resources that are used by the <see cref="T:System.Windows.Interop.HwndSource" />, and raises the <see cref="E:System.Windows.Interop.HwndSource.Disposed" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3c18e-236">此方法在 Internet 安全区域中不可用。</span><span class="sxs-lookup"><span data-stu-id="3c18e-236">This method is not available in the Internet security zone.</span></span>  
  
 <span data-ttu-id="3c18e-237"><xref:System.Windows.Interop.HwndSource.Dispose%2A> 启动与相关的 HWND 的清理工作。</span><span class="sxs-lookup"><span data-stu-id="3c18e-237"><xref:System.Windows.Interop.HwndSource.Dispose%2A> initiates related cleanup work for the HWND.</span></span> <span data-ttu-id="3c18e-238">如果<xref:System.Windows.Interop.HwndSource.Dispose%2A>称为通过不同的主 UI 线程的线程，直到它可以发送到的主 UI 线程可能延迟的清理工作。</span><span class="sxs-lookup"><span data-stu-id="3c18e-238">If <xref:System.Windows.Interop.HwndSource.Dispose%2A> is called through a thread that is different from the main UI thread, the cleanup work may be deferred until it can be posted to the main UI thread.</span></span>  
  
 <span data-ttu-id="3c18e-239">调用<xref:System.Windows.Interop.HwndSource.Dispose%2A>显式交互操作的代码中可能需要某些互操作的情况下，因为<xref:System.Windows.Interop.HwndSource>在某些互操作的情况下可以生成多个引用了它跨互操作边界可能会阻止及时进行垃圾回收。</span><span class="sxs-lookup"><span data-stu-id="3c18e-239">Calling <xref:System.Windows.Interop.HwndSource.Dispose%2A> explicitly from the interoperating code might be necessary for certain interoperation scenarios, because an <xref:System.Windows.Interop.HwndSource> in some interoperation scenarios can generate several references to it across the interoperation boundaries that might prevent timely garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.HwndSource.IsDisposed" />
      </Docs>
    </Member>
    <Member MemberName="Disposed">
      <MemberSignature Language="C#" Value="public event EventHandler Disposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Disposed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.HwndSource.Disposed" />
      <MemberSignature Language="VB.NET" Value="Public Event Disposed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Disposed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c18e-240">对此对象调用 <see cref="M:System.Windows.Interop.HwndSource.Dispose" /> 方法时发生。</span><span class="sxs-lookup"><span data-stu-id="3c18e-240">Occurs when the <see cref="M:System.Windows.Interop.HwndSource.Dispose" /> method is called on this object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c18e-241"><xref:System.Windows.Interop.HwndSource.Disposed>之前通过释放任何资源，将引发事件<xref:System.Windows.Interop.HwndSource>。</span><span class="sxs-lookup"><span data-stu-id="3c18e-241">The <xref:System.Windows.Interop.HwndSource.Disposed> event is raised before any resources are released by the <xref:System.Windows.Interop.HwndSource>.</span></span> <span data-ttu-id="3c18e-242"><xref:System.Windows.Interop.HwndSource.Disposed>事件表示引发事件的对象即将所有引用了它删除。</span><span class="sxs-lookup"><span data-stu-id="3c18e-242">The <xref:System.Windows.Interop.HwndSource.Disposed> event indicates that the object that raises the event is about to have all references to it removed.</span></span>  
  
 <span data-ttu-id="3c18e-243">使用<xref:System.Windows.Interop.HwndSource.Disposed>和<xref:System.Windows.Interop.HwndSource.IsDisposed%2A>属性以避免调用<xref:System.Windows.Interop.HwndSource.Dispose%2A>两次 （这将引发异常）。</span><span class="sxs-lookup"><span data-stu-id="3c18e-243">Use <xref:System.Windows.Interop.HwndSource.Disposed> and the <xref:System.Windows.Interop.HwndSource.IsDisposed%2A> property to avoid calling <xref:System.Windows.Interop.HwndSource.Dispose%2A> twice (which raises an exception).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.HwndSource.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="DpiChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.HwndDpiChangedEventHandler DpiChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.HwndDpiChangedEventHandler DpiChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.HwndSource.DpiChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event DpiChanged As HwndDpiChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::HwndDpiChangedEventHandler ^ DpiChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.HwndDpiChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c18e-244">已更改此 Hwnd 的监视器的 DPI 或 Hwnd 移动到具有不同 DPI 的监视器时发生。</span><span class="sxs-lookup"><span data-stu-id="3c18e-244">Occurs when the DPI of the monitor of this Hwnd has changed, or the Hwnd is moved to a monitor with a different DPI.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromHwnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Interop.HwndSource FromHwnd (IntPtr hwnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Interop.HwndSource FromHwnd(native int hwnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.FromHwnd(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHwnd (hwnd As IntPtr) As HwndSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Interop::HwndSource ^ FromHwnd(IntPtr hwnd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.HwndSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwnd" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hwnd"><span data-ttu-id="3c18e-245">提供的窗口句柄。</span><span class="sxs-lookup"><span data-stu-id="3c18e-245">The provided window handle.</span></span></param>
        <summary><span data-ttu-id="3c18e-246">返回指定窗口的 <see cref="T:System.Windows.Interop.HwndSource" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="3c18e-246">Returns the <see cref="T:System.Windows.Interop.HwndSource" /> object of the specified window.</span></span></summary>
        <returns><span data-ttu-id="3c18e-247"><paramref name="hwnd" /> 窗口句柄指定的窗口的 <see cref="T:System.Windows.Interop.HwndSource" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="3c18e-247">The <see cref="T:System.Windows.Interop.HwndSource" /> object for the window that is specified by the <paramref name="hwnd" /> window handle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3c18e-248">此方法不可用或部分信任 Internet 安全区域，在一般情况下。</span><span class="sxs-lookup"><span data-stu-id="3c18e-248">This method is not available in the Internet security zone, or for partial trust in general.</span></span>  
  
 <span data-ttu-id="3c18e-249">你可以使用此方法返回<xref:System.Windows.Interop.HwndSource>不显式互操作的窗口的窗口。</span><span class="sxs-lookup"><span data-stu-id="3c18e-249">You can use this method to return an <xref:System.Windows.Interop.HwndSource> for a window that is not explicitly an interoperation window.</span></span> <span data-ttu-id="3c18e-250">此过程是：</span><span class="sxs-lookup"><span data-stu-id="3c18e-250">The procedure for this is:</span></span>  
  
1.  <span data-ttu-id="3c18e-251">创建<xref:System.Windows.Interop.WindowInteropHelper>实例 (提供主<xref:System.Windows.Window>作为构造函数参数)。</span><span class="sxs-lookup"><span data-stu-id="3c18e-251">Create a <xref:System.Windows.Interop.WindowInteropHelper> instance (providing the main <xref:System.Windows.Window> as a constructor parameter).</span></span>  
  
2.  <span data-ttu-id="3c18e-252">获取的值<xref:System.Windows.Interop.WindowInteropHelper.Handle%2A>属性从，<xref:System.Windows.Interop.WindowInteropHelper>实例。</span><span class="sxs-lookup"><span data-stu-id="3c18e-252">Get the value of the <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> property from that <xref:System.Windows.Interop.WindowInteropHelper> instance.</span></span>  
  
3.  <span data-ttu-id="3c18e-253">将 HWND 该值传递作为参数传递给<xref:System.Windows.Interop.HwndSource.FromHwnd%2A>。</span><span class="sxs-lookup"><span data-stu-id="3c18e-253">Pass that HWND value as a parameter to <xref:System.Windows.Interop.HwndSource.FromHwnd%2A>.</span></span>  
  
 <span data-ttu-id="3c18e-254">此技术很有用，如果你然后想要添加常规<xref:System.Windows.Interop.HwndSource.AddHook%2A>消息处理到窗口。</span><span class="sxs-lookup"><span data-stu-id="3c18e-254">This technique can be useful if you then want to add general <xref:System.Windows.Interop.HwndSource.AddHook%2A> message processing to the window.</span></span> <span data-ttu-id="3c18e-255">但是，每当创建<xref:System.Windows.Interop.HwndSource>，你还将负责销毁它。</span><span class="sxs-lookup"><span data-stu-id="3c18e-255">However, whenever you create an <xref:System.Windows.Interop.HwndSource>, you are also responsible for destroying it.</span></span> <span data-ttu-id="3c18e-256">这是 true 即使<xref:System.Windows.Application>应用程序的对象<xref:System.Windows.Interop.HwndSource>已释放。</span><span class="sxs-lookup"><span data-stu-id="3c18e-256">This is true even if the <xref:System.Windows.Application> object for an application <xref:System.Windows.Interop.HwndSource> is disposed.</span></span> <span data-ttu-id="3c18e-257">详细信息，请参阅备注上<xref:System.Windows.Interop.HwndSource>。</span><span class="sxs-lookup"><span data-stu-id="3c18e-257">For more information, see Remarks on <xref:System.Windows.Interop.HwndSource>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="3c18e-258">若要调用此方法。</span><span class="sxs-lookup"><span data-stu-id="3c18e-258">to call this method.</span></span> <span data-ttu-id="3c18e-259">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="3c18e-259">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="T:System.Windows.Interop.WindowInteropHelper" />
      </Docs>
    </Member>
    <Member MemberName="GetCompositionTargetCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.CompositionTarget GetCompositionTargetCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.CompositionTarget GetCompositionTargetCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.GetCompositionTargetCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetCompositionTargetCore () As CompositionTarget" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::CompositionTarget ^ GetCompositionTargetCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CompositionTarget</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c18e-260">获取窗口的可视化目标。</span><span class="sxs-lookup"><span data-stu-id="3c18e-260">Gets the visual target of the window.</span></span></summary>
        <returns><span data-ttu-id="3c18e-261">返回窗口的可视化目标。</span><span class="sxs-lookup"><span data-stu-id="3c18e-261">Returns the visual target of the window.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c18e-262">默认实现返回与相同的结果<xref:System.Windows.Interop.HwndSource.CompositionTarget%2A>。</span><span class="sxs-lookup"><span data-stu-id="3c18e-262">The default implementation returns the same result as <xref:System.Windows.Interop.HwndSource.CompositionTarget%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="3c18e-263">实现此方法以返回特定类型的可视化目标。</span><span class="sxs-lookup"><span data-stu-id="3c18e-263">Implement this method to return a type-specific visual target.</span></span> <span data-ttu-id="3c18e-264"><see cref="T:System.Windows.Interop.HwndSource" /> 实现此方法以返回<see cref="T:System.Windows.Interop.HwndTarget" />。</span><span class="sxs-lookup"><span data-stu-id="3c18e-264"><see cref="T:System.Windows.Interop.HwndSource" /> implements this method to return <see cref="T:System.Windows.Interop.HwndTarget" />.</span></span></para>
        </block>
        <altmember cref="T:System.Windows.Media.CompositionTarget" />
        <altmember cref="P:System.Windows.Interop.HwndSource.CompositionTarget" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Interop.IWin32Window.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c18e-265">获取此 <see cref="T:System.Windows.Interop.HwndSource" /> 的窗口句柄。</span><span class="sxs-lookup"><span data-stu-id="3c18e-265">Gets the window handle for this <see cref="T:System.Windows.Interop.HwndSource" />.</span></span></summary>
        <value><span data-ttu-id="3c18e-266">窗口句柄。</span><span class="sxs-lookup"><span data-stu-id="3c18e-266">The window handle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3c18e-267">此属性在 Internet 安全区域中不可用。</span><span class="sxs-lookup"><span data-stu-id="3c18e-267">This property is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="3c18e-268">若要访问此指针。</span><span class="sxs-lookup"><span data-stu-id="3c18e-268">to access this pointer.</span></span> <span data-ttu-id="3c18e-269">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="3c18e-269">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="HasFocusWithinCore">
      <MemberSignature Language="C#" Value="protected virtual bool HasFocusWithinCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool HasFocusWithinCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.HasFocusWithinCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HasFocusWithinCore () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool HasFocusWithinCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c18e-270">获取一个值，该值指示接收器或其所包含的组件之一是否具有焦点。</span><span class="sxs-lookup"><span data-stu-id="3c18e-270">Gets a value that indicates whether the sink or one of its contained components has focus.</span></span></summary>
        <returns>
          <span data-ttu-id="3c18e-271">如果接收器或其所包含的组件之一具有焦点，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c18e-271"><see langword="true" /> if the sink or one of its contained components has focus; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin" />
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="public override bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDisposed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c18e-272">获取一个值，指示是否已对此 <see cref="M:System.Windows.Interop.HwndSource.Dispose" /> 调用 <see cref="T:System.Windows.Interop.HwndSource" />。</span><span class="sxs-lookup"><span data-stu-id="3c18e-272">Gets a value that indicates whether <see cref="M:System.Windows.Interop.HwndSource.Dispose" /> has been called on this <see cref="T:System.Windows.Interop.HwndSource" />.</span></span></summary>
        <value>
          <span data-ttu-id="3c18e-273">如果已对该对象调用了 <see cref="M:System.Windows.Interop.HwndSource.Dispose" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c18e-273"><see langword="true" /> if the object has had <see cref="M:System.Windows.Interop.HwndSource.Dispose" /> called on it; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c18e-274"><xref:System.Windows.Interop.HwndSource.Dispose%2A> 启动与相关的 HWND 的清理工作。</span><span class="sxs-lookup"><span data-stu-id="3c18e-274"><xref:System.Windows.Interop.HwndSource.Dispose%2A> initiates related cleanup work for the HWND.</span></span> <span data-ttu-id="3c18e-275">如果<xref:System.Windows.Interop.HwndSource.Dispose%2A>称为通过不同的主 UI 线程的线程，直到它可以发送到的主 UI 线程可能延迟的清理工作。</span><span class="sxs-lookup"><span data-stu-id="3c18e-275">If <xref:System.Windows.Interop.HwndSource.Dispose%2A> is called through a thread that is different from the main UI thread, the cleanup work may be deferred until it can be posted to the main UI thread.</span></span> <span data-ttu-id="3c18e-276"><xref:System.Windows.Interop.HwndSource.Disposed>引发事件的值和<xref:System.Windows.Interop.HwndSource.IsDisposed%2A>变得`false`立即<xref:System.Windows.Interop.HwndSource.Dispose%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="3c18e-276">The <xref:System.Windows.Interop.HwndSource.Disposed> event is raised and the value of <xref:System.Windows.Interop.HwndSource.IsDisposed%2A> becomes `false` as soon as <xref:System.Windows.Interop.HwndSource.Dispose%2A> is called.</span></span> <span data-ttu-id="3c18e-277">在此期间，如果调用<xref:System.Windows.Interop.HwndSource.Dispose%2A>再次，<xref:System.Windows.Interop.HwndSource.Dispose%2A>引发异常。</span><span class="sxs-lookup"><span data-stu-id="3c18e-277">During this time, if you call <xref:System.Windows.Interop.HwndSource.Dispose%2A> again, <xref:System.Windows.Interop.HwndSource.Dispose%2A> raises an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.HwndSource.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="KeyboardInputSiteCore">
      <MemberSignature Language="C#" Value="protected System.Windows.Interop.IKeyboardInputSite KeyboardInputSiteCore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.IKeyboardInputSite KeyboardInputSiteCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.KeyboardInputSiteCore" />
      <MemberSignature Language="VB.NET" Value="Protected Property KeyboardInputSiteCore As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Interop::IKeyboardInputSite ^ KeyboardInputSiteCore { System::Windows::Interop::IKeyboardInputSite ^ get(); void set(System::Windows::Interop::IKeyboardInputSite ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c18e-278">获取或设置对组件容器的 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 接口的引用。</span><span class="sxs-lookup"><span data-stu-id="3c18e-278">Gets or sets a reference to the component's container's <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interface.</span></span></summary>
        <value><span data-ttu-id="3c18e-279">对容器的 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 接口的引用；或者，如果未分配站点，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c18e-279">A reference to the container's <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interface; or <see langword="null" /> if no site is assigned.</span></span> <span data-ttu-id="3c18e-280">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c18e-280">The default is <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="3c18e-281">若要设置此属性。</span><span class="sxs-lookup"><span data-stu-id="3c18e-281">to set this property.</span></span> <span data-ttu-id="3c18e-282">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="3c18e-282">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      </Docs>
    </Member>
    <Member MemberName="OnDpiChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDpiChanged (System.Windows.HwndDpiChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDpiChanged(class System.Windows.HwndDpiChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.OnDpiChanged(System.Windows.HwndDpiChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDpiChanged (e As HwndDpiChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDpiChanged(System::Windows::HwndDpiChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.HwndDpiChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3c18e-283">事件参数</span><span class="sxs-lookup"><span data-stu-id="3c18e-283">The event arguments</span></span></param>
        <summary><span data-ttu-id="3c18e-284">在窗口的 DPI 即将变化时进行调用。</span><span class="sxs-lookup"><span data-stu-id="3c18e-284">Called when the DPI is going to change for the window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c18e-285">如果用户处理此事件，WPF 无法缩放任何视觉对象。</span><span class="sxs-lookup"><span data-stu-id="3c18e-285">If the user handles this event,         WPF does not scale any visuals.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3c18e-286">此方法访问关键数据<xref:System.Windows.Interop.HwndTarget>。</span><span class="sxs-lookup"><span data-stu-id="3c18e-286">This method accesses critical data <xref:System.Windows.Interop.HwndTarget>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMnemonicCore">
      <MemberSignature Language="C#" Value="protected virtual bool OnMnemonicCore (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnMnemonicCore(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMnemonicCore (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnMnemonicCore(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="3c18e-287">助记键和关联数据的消息。</span><span class="sxs-lookup"><span data-stu-id="3c18e-287">The message for the mnemonic and associated data.</span></span></param>
        <param name="modifiers"><span data-ttu-id="3c18e-288">修改键。</span><span class="sxs-lookup"><span data-stu-id="3c18e-288">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="3c18e-289">调用此接收器的助记键（访问键）之一时调用。</span><span class="sxs-lookup"><span data-stu-id="3c18e-289">Called when one of the mnemonics (access keys) for this sink is invoked.</span></span></summary>
        <returns>
          <span data-ttu-id="3c18e-290">如果消息已处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c18e-290"><see langword="true" /> if the message was handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3c18e-291"><paramref name="msg" /> 不是 WM_KEYDOWN、WM_SYSKEYDOWN、WM_CHAR 或 WM_DEADCHAR。</span><span class="sxs-lookup"><span data-stu-id="3c18e-291"><paramref name="msg" /> is not WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, or WM_DEADCHAR.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="3c18e-292">若要调用此方法。</span><span class="sxs-lookup"><span data-stu-id="3c18e-292">to call this method.</span></span> <span data-ttu-id="3c18e-293">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="3c18e-293">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterKeyboardInputSinkCore">
      <MemberSignature Language="C#" Value="protected System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSinkCore (System.Windows.Interop.IKeyboardInputSink sink);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSinkCore(class System.Windows.Interop.IKeyboardInputSink sink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)" />
      <MemberSignature Language="VB.NET" Value="Protected Function RegisterKeyboardInputSinkCore (sink As IKeyboardInputSink) As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Interop::IKeyboardInputSite ^ RegisterKeyboardInputSinkCore(System::Windows::Interop::IKeyboardInputSink ^ sink);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sink" Type="System.Windows.Interop.IKeyboardInputSink" />
      </Parameters>
      <Docs>
        <param name="sink"><span data-ttu-id="3c18e-294">所包含组件的 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 接收器。</span><span class="sxs-lookup"><span data-stu-id="3c18e-294">The <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> sink of the contained component.</span></span></param>
        <summary><span data-ttu-id="3c18e-295">注册所包含组件的 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 接口。</span><span class="sxs-lookup"><span data-stu-id="3c18e-295">Registers the <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> interface of a contained component.</span></span></summary>
        <returns><span data-ttu-id="3c18e-296">所包含组件的 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 站点。</span><span class="sxs-lookup"><span data-stu-id="3c18e-296">The <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> site of the contained component.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="3c18e-297">若要调用此方法。</span><span class="sxs-lookup"><span data-stu-id="3c18e-297">to call this method.</span></span> <span data-ttu-id="3c18e-298">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="3c18e-298">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveHook">
      <MemberSignature Language="C#" Value="public void RemoveHook (System.Windows.Interop.HwndSourceHook hook);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveHook(class System.Windows.Interop.HwndSourceHook hook) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.RemoveHook(System.Windows.Interop.HwndSourceHook)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveHook (hook As HwndSourceHook)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveHook(System::Windows::Interop::HwndSourceHook ^ hook);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hook" Type="System.Windows.Interop.HwndSourceHook" />
      </Parameters>
      <Docs>
        <param name="hook"><span data-ttu-id="3c18e-299">要移除的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3c18e-299">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3c18e-300">移除 <see cref="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)" /> 已添加的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3c18e-300">Removes the event handlers that were added by <see cref="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="3c18e-301">此方法在 Internet 安全区域中不可用。</span><span class="sxs-lookup"><span data-stu-id="3c18e-301">This method is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="3c18e-302">若要移除处理程序。</span><span class="sxs-lookup"><span data-stu-id="3c18e-302">to remove handlers.</span></span> <span data-ttu-id="3c18e-303">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="3c18e-303">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)" />
        <altmember cref="T:System.Windows.Interop.HwndSourceHook" />
      </Docs>
    </Member>
    <Member MemberName="RestoreFocusMode">
      <MemberSignature Language="C#" Value="public System.Windows.Input.RestoreFocusMode RestoreFocusMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.RestoreFocusMode RestoreFocusMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.RestoreFocusMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RestoreFocusMode As RestoreFocusMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::RestoreFocusMode RestoreFocusMode { System::Windows::Input::RestoreFocusMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RestoreFocusMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c18e-304">获取窗口的 <see cref="T:System.Windows.Input.RestoreFocusMode" />。</span><span class="sxs-lookup"><span data-stu-id="3c18e-304">Gets the <see cref="T:System.Windows.Input.RestoreFocusMode" /> for the window.</span></span></summary>
        <value><span data-ttu-id="3c18e-305">窗口的 <see cref="T:System.Windows.Input.RestoreFocusMode" />。</span><span class="sxs-lookup"><span data-stu-id="3c18e-305">The <see cref="T:System.Windows.Input.RestoreFocusMode" /> for the window.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c18e-306">可以设置此属性仅在<xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29?displayProperty=nameWithType>构造函数通过使用<xref:System.Windows.Interop.HwndSourceParameters.RestoreFocusMode%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="3c18e-306">This property can be set only in the <xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29?displayProperty=nameWithType> constructor by using the <xref:System.Windows.Interop.HwndSourceParameters.RestoreFocusMode%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootVisual">
      <MemberSignature Language="C#" Value="public override System.Windows.Media.Visual RootVisual { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Visual RootVisual" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.RootVisual" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property RootVisual As Visual" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Media::Visual ^ RootVisual { System::Windows::Media::Visual ^ get(); void set(System::Windows::Media::Visual ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c18e-307">获取或设置窗口的 <see cref="P:System.Windows.Media.CompositionTarget.RootVisual" />。</span><span class="sxs-lookup"><span data-stu-id="3c18e-307">Gets or sets the <see cref="P:System.Windows.Media.CompositionTarget.RootVisual" /> of the window.</span></span></summary>
        <value><span data-ttu-id="3c18e-308">窗口的根可视化对象。</span><span class="sxs-lookup"><span data-stu-id="3c18e-308">The root visual object of the window.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c18e-309">此属性用于连接<xref:System.Windows.Controls.Page>或另一个根到视觉效果<xref:System.Windows.Interop.HwndSource>。</span><span class="sxs-lookup"><span data-stu-id="3c18e-309">Use this property to connect a <xref:System.Windows.Controls.Page> or another root visual to the <xref:System.Windows.Interop.HwndSource>.</span></span>  
  
 <span data-ttu-id="3c18e-310">缩放转换不应应用于<xref:System.Windows.Interop.HwndSource.RootVisual%2A>的<xref:System.Windows.Interop.HwndSource>因为这可以禁用<xref:System.Windows.Interop.HwndSource.SizeToContent%2A>行为。</span><span class="sxs-lookup"><span data-stu-id="3c18e-310">Scale transformations should not be applied to the <xref:System.Windows.Interop.HwndSource.RootVisual%2A> of an <xref:System.Windows.Interop.HwndSource> because this can disable <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> behavior.</span></span> <span data-ttu-id="3c18e-311">内容将缩放，但封闭窗口不会。</span><span class="sxs-lookup"><span data-stu-id="3c18e-311">The content will scale, but the enclosing window will not.</span></span> <span data-ttu-id="3c18e-312">而不是将转换应用于对象，则<xref:System.Windows.Interop.HwndSource.RootVisual%2A>，将转换应用到一个对象，它的子元素<xref:System.Windows.Interop.HwndSource.RootVisual%2A>。</span><span class="sxs-lookup"><span data-stu-id="3c18e-312">Instead of applying the transformation to the object that is the <xref:System.Windows.Interop.HwndSource.RootVisual%2A>, apply the transformation to an object that is a child element of the <xref:System.Windows.Interop.HwndSource.RootVisual%2A>.</span></span> <span data-ttu-id="3c18e-313">你可能需要额外的封闭将元素添加到[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]内容，如面板中，以便提供可缩放的对象。</span><span class="sxs-lookup"><span data-stu-id="3c18e-313">You might need to add an extra enclosing element to the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] content, such as a panel, in order to provide a scaleable object.</span></span>  
  
 <span data-ttu-id="3c18e-314">你可以添加<xref:System.Windows.Window>作为根视觉对象，但仅为顶级窗口 （与 WS_OVERLAPPED)，而不是子窗口。</span><span class="sxs-lookup"><span data-stu-id="3c18e-314">You can add a <xref:System.Windows.Window> as the root visual, but only as a top-level window (with WS_OVERLAPPED), not as a child window.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="3c18e-315">若要设置此属性。</span><span class="sxs-lookup"><span data-stu-id="3c18e-315">to set this property.</span></span> <span data-ttu-id="3c18e-316">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="3c18e-316">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="P:System.Windows.Interop.HwndTarget.RootVisual" />
      </Docs>
    </Member>
    <Member MemberName="SizeToContent">
      <MemberSignature Language="C#" Value="public System.Windows.SizeToContent SizeToContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.SizeToContent SizeToContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.SizeToContent" />
      <MemberSignature Language="VB.NET" Value="Public Property SizeToContent As SizeToContent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SizeToContent SizeToContent { System::Windows::SizeToContent get(); void set(System::Windows::SizeToContent value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.SizeToContent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c18e-317">获取或设置窗口是否根据其内容调整大小以及如何调整大小。</span><span class="sxs-lookup"><span data-stu-id="3c18e-317">Get or sets whether and how the window is sized to its content.</span></span></summary>
        <value><span data-ttu-id="3c18e-318">枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="3c18e-318">One of the enumeration values.</span></span> <span data-ttu-id="3c18e-319">默认值为 <see cref="F:System.Windows.SizeToContent.Manual" />，它指定窗口不会根据内容调整大小。</span><span class="sxs-lookup"><span data-stu-id="3c18e-319">The default value is <see cref="F:System.Windows.SizeToContent.Manual" />, which specifies that the window is not sized to its content.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c18e-320">最终用户可能间接设置此属性通过应用程序 UI 中，如果公开了该功能由应用程序。</span><span class="sxs-lookup"><span data-stu-id="3c18e-320">End users might indirectly set this property through application UI, if that functionality is exposed by the application.</span></span>  
  
 <span data-ttu-id="3c18e-321">缩放转换不应应用于<xref:System.Windows.Interop.HwndSource.RootVisual%2A>的<xref:System.Windows.Interop.HwndSource>，因为这可以禁用<xref:System.Windows.Interop.HwndSource.SizeToContent%2A>行为。</span><span class="sxs-lookup"><span data-stu-id="3c18e-321">Scale transformations should not be applied to the <xref:System.Windows.Interop.HwndSource.RootVisual%2A> of an <xref:System.Windows.Interop.HwndSource>, because this can disable <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> behavior.</span></span> <span data-ttu-id="3c18e-322">请参阅备注以<xref:System.Windows.Interop.HwndSource.RootVisual%2A>。</span><span class="sxs-lookup"><span data-stu-id="3c18e-322">See Remarks for <xref:System.Windows.Interop.HwndSource.RootVisual%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.SizeToContent" />
      </Docs>
    </Member>
    <Member MemberName="SizeToContentChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SizeToContentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SizeToContentChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.HwndSource.SizeToContentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event SizeToContentChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SizeToContentChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c18e-323">当 <see cref="P:System.Windows.Interop.HwndSource.SizeToContent" /> 属性的值更改时发生。</span><span class="sxs-lookup"><span data-stu-id="3c18e-323">Occurs when the value of the <see cref="P:System.Windows.Interop.HwndSource.SizeToContent" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c18e-324"><xref:System.Windows.Interop.HwndSource.SizeToContentChanged>当用户交互导致更改时才引发事件。</span><span class="sxs-lookup"><span data-stu-id="3c18e-324">The <xref:System.Windows.Interop.HwndSource.SizeToContentChanged> event is only raised when user interaction causes the change.</span></span> <span data-ttu-id="3c18e-325">如果你设置<xref:System.Windows.Window.SizeToContent%2A>在代码中，<xref:System.Windows.Interop.HwndSource.SizeToContentChanged>不会引发事件。</span><span class="sxs-lookup"><span data-stu-id="3c18e-325">If you set <xref:System.Windows.Window.SizeToContent%2A> in code, the <xref:System.Windows.Interop.HwndSource.SizeToContentChanged> event is not raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Interop.HwndSource.AutoResized" />
        <altmember cref="P:System.Windows.Interop.HwndSource.SizeToContent" />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.HasFocusWithin">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.HasFocusWithin ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.HasFocusWithin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Function HasFocusWithin () As Boolean Implements IKeyboardInputSink.HasFocusWithin" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.HasFocusWithin() = System::Windows::Interop::IKeyboardInputSink::HasFocusWithin;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c18e-326">有关此成员的说明，请参阅 <see cref="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Remove(System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="3c18e-326">For a description of this member, see <see cref="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Remove(System.Object)" />.</span></span></summary>
        <returns>
          <span data-ttu-id="3c18e-327">如果接收器或其所包含的组件之一具有焦点，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c18e-327"><see langword="true" /> if the sink or one of its contained components has focus; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c18e-328">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="3c18e-328">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3c18e-329">它只能在 <xref:System.Windows.Interop.HwndSource> 实例强制转换为 <xref:System.Windows.Interop.IKeyboardInputSink> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="3c18e-329">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
      <MemberSignature Language="C#" Value="System.Windows.Interop.IKeyboardInputSite System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.IKeyboardInputSite System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite" />
      <MemberSignature Language="VB.NET" Value=" Property KeyboardInputSite As IKeyboardInputSite Implements IKeyboardInputSink.KeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="property System::Windows::Interop::IKeyboardInputSite ^ System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite { System::Windows::Interop::IKeyboardInputSite ^ get(); void set(System::Windows::Interop::IKeyboardInputSite ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c18e-330">有关此成员的说明，请参阅 <see cref="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />。</span><span class="sxs-lookup"><span data-stu-id="3c18e-330">For a description of this member, see <see cref="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />.</span></span></summary>
        <value><span data-ttu-id="3c18e-331">对容器的 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 接口的引用。</span><span class="sxs-lookup"><span data-stu-id="3c18e-331">A reference to the container's <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c18e-332">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="3c18e-332">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3c18e-333">它只能在 <xref:System.Windows.Interop.HwndSource> 实例强制转换为 <xref:System.Windows.Interop.IKeyboardInputSink> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="3c18e-333">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="3c18e-334">若要设置此属性。</span><span class="sxs-lookup"><span data-stu-id="3c18e-334">to set this property.</span></span> <span data-ttu-id="3c18e-335">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="3c18e-335">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.OnMnemonic">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.OnMnemonic (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.OnMnemonic(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Function OnMnemonic (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean Implements IKeyboardInputSink.OnMnemonic" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers) = System::Windows::Interop::IKeyboardInputSink::OnMnemonic;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="3c18e-336">助记键和关联数据的消息。</span><span class="sxs-lookup"><span data-stu-id="3c18e-336">The message for the mnemonic and associated data.</span></span> <span data-ttu-id="3c18e-337">请勿修改此消息结构。</span><span class="sxs-lookup"><span data-stu-id="3c18e-337">Do not modify this message structure.</span></span> <span data-ttu-id="3c18e-338">仅由于性能原因，通过引用来传递此消息。</span><span class="sxs-lookup"><span data-stu-id="3c18e-338">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="3c18e-339">修改键。</span><span class="sxs-lookup"><span data-stu-id="3c18e-339">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="3c18e-340">有关此成员的说明，请参阅 <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />。</span><span class="sxs-lookup"><span data-stu-id="3c18e-340">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</span></span></summary>
        <returns>
          <span data-ttu-id="3c18e-341">如果消息已处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c18e-341"><see langword="true" /> if the message was handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c18e-342">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="3c18e-342">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3c18e-343">它只能在 <xref:System.Windows.Interop.HwndSource> 实例强制转换为 <xref:System.Windows.Interop.IKeyboardInputSink> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="3c18e-343">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink">
      <MemberSignature Language="C#" Value="System.Windows.Interop.IKeyboardInputSite IKeyboardInputSink.RegisterKeyboardInputSink (System.Windows.Interop.IKeyboardInputSink sink);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Windows.Interop.IKeyboardInputSite System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(class System.Windows.Interop.IKeyboardInputSink sink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
      <MemberSignature Language="VB.NET" Value="Function RegisterKeyboardInputSink (sink As IKeyboardInputSink) As IKeyboardInputSite Implements IKeyboardInputSink.RegisterKeyboardInputSink" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Windows::Interop::IKeyboardInputSite ^ System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System::Windows::Interop::IKeyboardInputSink ^ sink) = System::Windows::Interop::IKeyboardInputSink::RegisterKeyboardInputSink;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sink" Type="System.Windows.Interop.IKeyboardInputSink" />
      </Parameters>
      <Docs>
        <param name="sink"><span data-ttu-id="3c18e-344">所包含组件的 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 接收器。</span><span class="sxs-lookup"><span data-stu-id="3c18e-344">The <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> sink of the contained component.</span></span></param>
        <summary><span data-ttu-id="3c18e-345">有关此成员的说明，请参阅 <see cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />。</span><span class="sxs-lookup"><span data-stu-id="3c18e-345">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />.</span></span></summary>
        <returns><span data-ttu-id="3c18e-346">所包含组件的 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 站点。</span><span class="sxs-lookup"><span data-stu-id="3c18e-346">The <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> site of the contained component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c18e-347">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="3c18e-347">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3c18e-348">它只能在 <xref:System.Windows.Interop.HwndSource> 实例强制转换为 <xref:System.Windows.Interop.IKeyboardInputSink> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="3c18e-348">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="3c18e-349">若要调用此方法。</span><span class="sxs-lookup"><span data-stu-id="3c18e-349">to call this method.</span></span> <span data-ttu-id="3c18e-350">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="3c18e-350">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.TabInto">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.TabInto (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.TabInto(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Function TabInto (request As TraversalRequest) As Boolean Implements IKeyboardInputSink.TabInto" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.TabInto(System::Windows::Input::TraversalRequest ^ request) = System::Windows::Interop::IKeyboardInputSink::TabInto;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="3c18e-351">指定是将焦点设置到第一个制表位，还是设置到最后一个制表位。</span><span class="sxs-lookup"><span data-stu-id="3c18e-351">Specifies whether focus should be set to the first or the last tab stop.</span></span></param>
        <summary><span data-ttu-id="3c18e-352">有关此成员的说明，请参阅 <see cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />。</span><span class="sxs-lookup"><span data-stu-id="3c18e-352">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />.</span></span></summary>
        <returns>
          <span data-ttu-id="3c18e-353">如果已按要求对焦点进行了设置，则为 <see langword="true" />；如果没有制表位，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c18e-353"><see langword="true" /> if the focus has been set as requested; <see langword="false" />, if there are no tab stops.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c18e-354">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="3c18e-354">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3c18e-355">它只能在 <xref:System.Windows.Interop.HwndSource> 实例强制转换为 <xref:System.Windows.Interop.IKeyboardInputSink> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="3c18e-355">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="3c18e-356">若要调用此方法。</span><span class="sxs-lookup"><span data-stu-id="3c18e-356">to call this method.</span></span> <span data-ttu-id="3c18e-357">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="3c18e-357">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.TranslateAccelerator (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Function TranslateAccelerator (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean Implements IKeyboardInputSink.TranslateAccelerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers) = System::Windows::Interop::IKeyboardInputSink::TranslateAccelerator;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="3c18e-358">消息及关联数据。</span><span class="sxs-lookup"><span data-stu-id="3c18e-358">The message and associated data.</span></span> <span data-ttu-id="3c18e-359">请勿修改此结构。</span><span class="sxs-lookup"><span data-stu-id="3c18e-359">Do not modify this structure.</span></span> <span data-ttu-id="3c18e-360">仅由于性能原因，通过引用来传递此消息。</span><span class="sxs-lookup"><span data-stu-id="3c18e-360">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="3c18e-361">修改键。</span><span class="sxs-lookup"><span data-stu-id="3c18e-361">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="3c18e-362">有关此成员的说明，请参阅 <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />。</span><span class="sxs-lookup"><span data-stu-id="3c18e-362">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</span></span></summary>
        <returns>
          <span data-ttu-id="3c18e-363">如果方法实现对该消息进行了处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c18e-363"><see langword="true" /> if the message was handled by the method implementation; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c18e-364">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="3c18e-364">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3c18e-365">它只能在 <xref:System.Windows.Interop.HwndSource> 实例强制转换为 <xref:System.Windows.Interop.IKeyboardInputSink> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="3c18e-365">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="3c18e-366">若要调用此方法。</span><span class="sxs-lookup"><span data-stu-id="3c18e-366">to call this method.</span></span> <span data-ttu-id="3c18e-367">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="3c18e-367">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.TranslateChar">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.TranslateChar (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.TranslateChar(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Function TranslateChar (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean Implements IKeyboardInputSink.TranslateChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.TranslateChar(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers) = System::Windows::Interop::IKeyboardInputSink::TranslateChar;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="3c18e-368">消息及关联数据。</span><span class="sxs-lookup"><span data-stu-id="3c18e-368">The message and associated data.</span></span> <span data-ttu-id="3c18e-369">请勿修改此结构。</span><span class="sxs-lookup"><span data-stu-id="3c18e-369">Do not modify this structure.</span></span> <span data-ttu-id="3c18e-370">仅由于性能原因，通过引用来传递此消息。</span><span class="sxs-lookup"><span data-stu-id="3c18e-370">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="3c18e-371">修改键。</span><span class="sxs-lookup"><span data-stu-id="3c18e-371">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="3c18e-372">有关此成员的说明，请参阅 <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />。</span><span class="sxs-lookup"><span data-stu-id="3c18e-372">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</span></span></summary>
        <returns>
          <span data-ttu-id="3c18e-373">如果消息已处理并且不应调用 <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c18e-373"><see langword="true" /> if the message was processed and <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> should not be called; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c18e-374">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="3c18e-374">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3c18e-375">它只能在 <xref:System.Windows.Interop.HwndSource> 实例强制转换为 <xref:System.Windows.Interop.IKeyboardInputSink> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="3c18e-375">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabIntoCore">
      <MemberSignature Language="C#" Value="protected virtual bool TabIntoCore (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TabIntoCore(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.TabIntoCore(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TabIntoCore (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TabIntoCore(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="3c18e-376">指定是将焦点设置到第一个制表位，还是设置到最后一个制表位。</span><span class="sxs-lookup"><span data-stu-id="3c18e-376">Specifies whether focus should be set to the first or the last tab stop.</span></span></param>
        <summary><span data-ttu-id="3c18e-377">在接收器的第一个制表位或最后一个制表位上设置焦点。</span><span class="sxs-lookup"><span data-stu-id="3c18e-377">Sets focus on either the first tab stop or the last tab stop of the sink.</span></span></summary>
        <returns>
          <span data-ttu-id="3c18e-378">如果已按要求对焦点进行了设置，则为 <see langword="true" />；如果没有制表位，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c18e-378"><see langword="true" /> if the focus has been set as requested; <see langword="false" />, if there are no tab stops.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3c18e-379"><paramref name="request" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3c18e-379"><paramref name="request" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />
      </Docs>
    </Member>
    <Member MemberName="TranslateAcceleratorCore">
      <MemberSignature Language="C#" Value="protected virtual bool TranslateAcceleratorCore (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TranslateAcceleratorCore(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TranslateAcceleratorCore (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TranslateAcceleratorCore(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="3c18e-380">消息及关联数据。</span><span class="sxs-lookup"><span data-stu-id="3c18e-380">The message and associated data.</span></span> <span data-ttu-id="3c18e-381">请勿修改此结构。</span><span class="sxs-lookup"><span data-stu-id="3c18e-381">Do not modify this structure.</span></span> <span data-ttu-id="3c18e-382">仅由于性能原因，通过引用来传递此消息。</span><span class="sxs-lookup"><span data-stu-id="3c18e-382">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="3c18e-383">修改键。</span><span class="sxs-lookup"><span data-stu-id="3c18e-383">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="3c18e-384">在键按下消息级处理键盘输入。</span><span class="sxs-lookup"><span data-stu-id="3c18e-384">Processes keyboard input at the key-down message level.</span></span></summary>
        <returns>
          <span data-ttu-id="3c18e-385">如果方法实现对该消息进行了处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c18e-385"><see langword="true" /> if the message was handled by the method implementation; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="3c18e-386">若要调用此方法。</span><span class="sxs-lookup"><span data-stu-id="3c18e-386">to call this method.</span></span> <span data-ttu-id="3c18e-387">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="3c18e-387">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      </Docs>
    </Member>
    <Member MemberName="TranslateCharCore">
      <MemberSignature Language="C#" Value="protected virtual bool TranslateCharCore (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TranslateCharCore(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TranslateCharCore (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TranslateCharCore(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="3c18e-388">消息及关联数据。</span><span class="sxs-lookup"><span data-stu-id="3c18e-388">The message and associated data.</span></span> <span data-ttu-id="3c18e-389">请勿修改此结构。</span><span class="sxs-lookup"><span data-stu-id="3c18e-389">Do not modify this structure.</span></span> <span data-ttu-id="3c18e-390">仅由于性能原因，通过引用来传递此消息。</span><span class="sxs-lookup"><span data-stu-id="3c18e-390">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="3c18e-391">修改键。</span><span class="sxs-lookup"><span data-stu-id="3c18e-391">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="3c18e-392">在调用 <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> 方法之前处理 WM_CHAR、WM_SYSCHAR、WM_DEADCHAR 和 WM_SYSDEADCHAR 输入消息。</span><span class="sxs-lookup"><span data-stu-id="3c18e-392">Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before the <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> method is called.</span></span></summary>
        <returns>
          <span data-ttu-id="3c18e-393">如果消息已处理并且不应调用 <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c18e-393"><see langword="true" /> if the message was processed and <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> should not be called; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="3c18e-394">若要调用此方法。</span><span class="sxs-lookup"><span data-stu-id="3c18e-394">to call this method.</span></span> <span data-ttu-id="3c18e-395">关联的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="3c18e-395">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="UsesPerPixelOpacity">
      <MemberSignature Language="C#" Value="public bool UsesPerPixelOpacity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesPerPixelOpacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.UsesPerPixelOpacity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsesPerPixelOpacity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsesPerPixelOpacity { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c18e-396">获取一个值，该值声明是否遵守源窗口内容的每像素不透明度。</span><span class="sxs-lookup"><span data-stu-id="3c18e-396">Gets a value that declares whether the per-pixel opacity of the source window content is respected.</span></span></summary>
        <value>
          <span data-ttu-id="3c18e-397">如果系统使用每像素不透明度，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c18e-397"><see langword="true" /> if the system uses per-pixel opacity; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c18e-398">当启用每像素不透明度时，系统将不再绘制非工作区。</span><span class="sxs-lookup"><span data-stu-id="3c18e-398">When you enable per-pixel opacity, the system no longer draws the non-client area.</span></span> <span data-ttu-id="3c18e-399">这是因为既定的目的为<xref:System.Windows.Interop.HwndSource.UsesPerPixelOpacity%2A>是在互操作方案中显示的工作的非矩形顶级 UI。</span><span class="sxs-lookup"><span data-stu-id="3c18e-399">This is because the intended purpose of <xref:System.Windows.Interop.HwndSource.UsesPerPixelOpacity%2A> is to show non-rectangular top-level UI that works in interoperation scenarios.</span></span> <span data-ttu-id="3c18e-400">因此，显示矩形的非工作区破坏该目的。</span><span class="sxs-lookup"><span data-stu-id="3c18e-400">Therefore, showing the rectangular non-client area defeats that purpose.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>