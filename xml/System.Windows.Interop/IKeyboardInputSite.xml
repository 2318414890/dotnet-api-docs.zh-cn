<Type Name="IKeyboardInputSite" FullName="System.Windows.Interop.IKeyboardInputSite">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="62212e48122fb5f080c327b49194a0bed3917162" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IKeyboardInputSite" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IKeyboardInputSite" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.IKeyboardInputSite" />
  <TypeSignature Language="VB.NET" Value="Public Interface IKeyboardInputSite" />
  <TypeSignature Language="C++ CLI" Value="public interface class IKeyboardInputSite" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b7df1-101">管理容器中的键盘焦点。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b7df1-101">Manages keyboard focus within the container.</span>
      </span>
      <span data-ttu-id="b7df1-102">此接口实现 WPF-Win32 互操作方案中的键盘消息管理。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b7df1-102">This interface implements keyboard message management in WPF-Win32 interoperation scenarios.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7df1-103">容器应为每个所包含的组件提供此接口的唯一实例。</span><span class="sxs-lookup"><span data-stu-id="b7df1-103">A container should provide a unique instance of this interface for each of its contained components.</span></span>  
  
 <span data-ttu-id="b7df1-104"><xref:System.Windows.Interop.IKeyboardInputSite>接口和<xref:System.Windows.Interop.IKeyboardInputSink>一起用于跨互操作边界的键盘操作提供支持。</span><span class="sxs-lookup"><span data-stu-id="b7df1-104">The <xref:System.Windows.Interop.IKeyboardInputSite> interface and the <xref:System.Windows.Interop.IKeyboardInputSink> are used together to provide support for keyboard actions across interoperation boundaries.</span></span> <span data-ttu-id="b7df1-105">站点 (<xref:System.Windows.Interop.IKeyboardInputSite>实现) 表示的父项接收器 (<xref:System.Windows.Interop.IKeyboardInputSink>)。</span><span class="sxs-lookup"><span data-stu-id="b7df1-105">A site (<xref:System.Windows.Interop.IKeyboardInputSite> implementation) represents a parent of a sink (<xref:System.Windows.Interop.IKeyboardInputSink>).</span></span> <span data-ttu-id="b7df1-106">接收器 (<xref:System.Windows.Interop.IKeyboardInputSink>) 实现的大部分键盘行为。</span><span class="sxs-lookup"><span data-stu-id="b7df1-106">The sink (<xref:System.Windows.Interop.IKeyboardInputSink>) implements the majority of keyboard behavior.</span></span> <span data-ttu-id="b7df1-107">因为该站点的接收器将返回的属性，每个站点还必须提供一个接收器<xref:System.Windows.Interop.IKeyboardInputSite>接口。</span><span class="sxs-lookup"><span data-stu-id="b7df1-107">Each site must also provide a sink, because the site-specific sink is returned by a property of the <xref:System.Windows.Interop.IKeyboardInputSite> interface.</span></span>  
  
 <span data-ttu-id="b7df1-108">有关专门为实现该输入体系结构的讨论[!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)]互操作，请参阅[Windows 窗体和 WPF 互操作性输入体系结构](~/docs/framework/wpf/advanced/windows-forms-and-wpf-interoperability-input-architecture.md)。</span><span class="sxs-lookup"><span data-stu-id="b7df1-108">For a discussion of the input architecture specifically implemented for [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] interoperation, see [Windows Forms and WPF Interoperability Input Architecture](~/docs/framework/wpf/advanced/windows-forms-and-wpf-interoperability-input-architecture.md).</span></span>  
  
 <span data-ttu-id="b7df1-109">有关详细信息[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] - [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]互操作方案，请参阅[WPF 和 Win32 间的互操作](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md)。</span><span class="sxs-lookup"><span data-stu-id="b7df1-109">For more information about [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]-[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] interoperation scenarios, see [WPF and Win32 Interoperation](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
  </Docs>
  <Members>
    <Member MemberName="OnNoMoreTabStops">
      <MemberSignature Language="C#" Value="public bool OnNoMoreTabStops (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnNoMoreTabStops(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function OnNoMoreTabStops (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool OnNoMoreTabStops(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="b7df1-110">指定是将焦点设置到第一个制表位，还是设置到最后一个制表位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7df1-110">Specifies whether focus should be set to the first or the last tab stop.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b7df1-111">当所包含的组件到达其最后一个制表位并且按 Tab 键不能移动到其他项时，由该组件调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7df1-111">Called by a contained component when it has reached its last tab stop and has no further items to tab to.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b7df1-112">如果此方法返回 <see langword="true" />，则表示该站点已将焦点移动至其他组件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7df1-112">If this method returns <see langword="true" />, the site has shifted focus to another component.</span>
          </span>
          <span data-ttu-id="b7df1-113">如果此方法返回 <see langword="false" />，则表示焦点仍在调用组件中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7df1-113">If this method returns <see langword="false" />, focus is still within the calling component.</span>
          </span>
          <span data-ttu-id="b7df1-114">组件应该“回绕”并将焦点设置到其所包含的第一个制表位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7df1-114">The component should "wrap around" and set focus to its first contained tab stop.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7df1-115">组件调用<xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A>组件尝试请求进行焦点移动，但有没有进一步的选项卡时停止该方向在该自己的组件中。</span><span class="sxs-lookup"><span data-stu-id="b7df1-115">Components call <xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A> when the component attempts a requested focus move but there are no further tab stops in that direction within that own component.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
      </Docs>
    </Member>
    <Member MemberName="Sink">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.IKeyboardInputSink Sink { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.IKeyboardInputSink Sink" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.IKeyboardInputSite.Sink" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sink As IKeyboardInputSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Interop::IKeyboardInputSink ^ Sink { System::Windows::Interop::IKeyboardInputSink ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSink</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b7df1-116">获取与此站点关联的键盘接收器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7df1-116">Gets the keyboard sink associated with this site.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b7df1-117">当前站点的 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 接口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7df1-117">The current site's <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> interface.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7df1-118">此属性不返回父<xref:System.Windows.Interop.IKeyboardInputSink>接口。</span><span class="sxs-lookup"><span data-stu-id="b7df1-118">This property does not return the parent <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public void Unregister ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unregister() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSite.Unregister" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unregister ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unregister();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b7df1-119">从此站点中注销子键盘输入接收器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b7df1-119">Unregisters a child keyboard input sink from this site.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7df1-120">此属性不会影响容器上的站点。</span><span class="sxs-lookup"><span data-stu-id="b7df1-120">This property does not affect the site on the container.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>