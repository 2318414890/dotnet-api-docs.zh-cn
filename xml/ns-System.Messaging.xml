<Namespace Name="System.Messaging">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="eab5ed0569927572b94947f95901b3f05d70f785" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="05/10/2018" />
    <Meta Name="ms.locfileid" Value="30734691" />
  </Metadata>
  <Docs>
    <summary>
      <see cref="N:System.Messaging" /> 命名空间提供一些类，您可以使用这些类连接到、监视和管理网络上的消息队列，并发送、接收或查看消息。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 成员<xref:System.Messaging.MessageQueue>类包含用于读取和写入到队列的消息的以下方法：  
  
-   <xref:System.Messaging.MessageQueue.Send%2A>方法使应用程序将消息写入到队列。 该方法的重载，可以指定是否将发送消息 using <xref:System.Messaging.Message> （它提供了具体控制你发送的信息） 或任何其他托管的对象，包括特定于应用程序的类。 作为事务的一部分，该方法还支持发送消息。  
  
-   <xref:System.Messaging.MessageQueue.Receive%2A>， <xref:System.Messaging.MessageQueue.ReceiveById%2A>，和<xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%2A>方法提供了用于从队列中读取消息的功能。 如<xref:System.Messaging.MessageQueue.Send%2A>方法，这些方法提供重载，以支持事务的队列处理。 这些方法还提供了超时时间的重载。  
  
     Out 参数，使处理继续队列是否为空。 因为这些方法是同步处理的示例，它们将中断当前线程，直到可用消息，则除非您指定了超时。  
  
-   <xref:System.Messaging.MessageQueue.Peek%2A>方法类似于是<xref:System.Messaging.MessageQueue.Receive%2A>，但它不会导致要读取它时从队列中移除的消息。 因为<xref:System.Messaging.MessageQueue.Peek%2A>不会更改队列内容中，没有重载以支持事务处理。 但是，因为<xref:System.Messaging.MessageQueue.Peek%2A>、 like <xref:System.Messaging.MessageQueue.Receive%2A>，以同步方式从队列中读取消息，该方法的重载确实支持才能防止线程无限期地等待指定超时。  
  
-   <xref:System.Messaging.MessageQueue.BeginPeek%2A>， <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>， <xref:System.Messaging.MessageQueue.BeginReceive%2A>，和<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>方法提供方法以异步方式从队列中读取消息。 它们不会在等待消息到达队列中时中断当前线程。  
  
 以下的方法<xref:System.Messaging.MessageQueue>类提供用于按指定的条件检索队列的列表和确定是否存在特定的队列的功能：  
  
-   <xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29> 允许检索的专用队列的计算机上。  
  
-   <xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29><xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29>，和<xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29>提供检索由通用准则的公用队列的方法。 重载<xref:System.Messaging.MessageQueue.GetPublicQueues%2A>提供甚至更细致地选择基于大量的搜索条件的队列。  
  
 其他方法<xref:System.Messaging.MessageQueue>类提供了以下功能：  
  
-   创建和删除消息队列队列。  
  
-   使用消息枚举器来单步执行队列中的消息。  
  
-   用于循环访问系统上的队列的队列枚举器。  
  
-   设置基于 ACL 的访问权限。  
  
-   如何使用连接缓存。  
  
 <xref:System.Messaging.Message>类提供了详细的控制的信息发送到队列，并且该对象使用接收或查看从队列消息时。 消息正文的属性除了<xref:System.Messaging.Message>类包括确认设置、 格式化程序选择、 标识、 身份验证和加密的信息、 时间戳、 有关使用跟踪，服务器日志记录，指示和死信队列和事务数据。  
  
 <xref:System.Messaging.MessageQueue>组件是与以下三个格式化程序，使您能够序列化和反序列化消息从队列发送和接收相关联：  
  
-   <xref:System.Messaging.XmlMessageFormatter>提供松散耦合的消息传递，启用的客户端和服务器上的序列化类型的独立版本控制。  
  
-   <xref:System.Messaging.ActiveXMessageFormatter>与 MSMQ COM 控件兼容。 它允许你将发送可接收的控件的类型以及接收已由控件发送的类型。  
  
-   <xref:System.Messaging.BinaryMessageFormatter>提供一个更快的替代方法<xref:System.Messaging.XmlMessageFormatter>，但没有优点的松散耦合的消息传递。  
  
 中的其他类`Messaging`命名空间支持代码访问和基于 ACL 的安全筛选<xref:System.Messaging.Message>时从队列中读取消息，以及使用事务时发送和接收消息的属性。  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>