<Type Name="ContentType" FullName="System.Net.Mime.ContentType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e6c5f4638a9124739d77c13ace2a1c3d42fa0438" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37478058" /></Metadata><TypeSignature Language="C#" Value="public class ContentType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContentType extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Mime.ContentType" />
  <TypeSignature Language="VB.NET" Value="Public Class ContentType" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContentType" />
  <TypeSignature Language="F#" Value="type ContentType = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Mail</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示 MIME 协议 Content-Type 标头。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 中的信息<xref:System.Net.Mime.ContentType>类用来描述将显示电子邮件的软件可以在适当的方式显示内容的方式的电子邮件中包含的数据。 <xref:System.Net.Mime.ContentType> 用于<xref:System.Net.Mail.Attachment>类，以指定附件中的内容类型。  
  
 RFC 2045 第 5.1 节中介绍的内容类型标头的语法。 RFC 2046 提供了有关 MIME 媒体类型及其参数的详细的信息。 这些 Rfc 目前[ https://www.ietf.org ](https://www.ietf.org/)。  
  
   
  
## Examples  
 下面的代码示例将发送带有附件的电子邮件，并显示<xref:System.Net.Mail.Attachment.ContentDisposition%2A>附件的属性。  
  
 [!code-cpp[NclMailSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#6)]
 [!code-csharp[NclMailSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.Mail.SmtpClient" />
    <altmember cref="T:System.Net.Mail.MailMessage" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Net.Mime.ContentType" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mime.ContentType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContentType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Net.Mime.ContentType" /> 类的新默认实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数将 <xref:System.Net.Mime.ContentType.MediaType%2A> 属性初始化为 `"application/octet-stream"`。  
  
   
  
## Examples  
 下面的代码示例演示如何调用此构造函数。  
  
 [!code-cpp[NclMailSync#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#15)]
 [!code-csharp[NclMailSync#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentType (string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mime.ContentType.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contentType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContentType(System::String ^ contentType);" />
      <MemberSignature Language="F#" Value="new System.Net.Mime.ContentType : string -&gt; System.Net.Mime.ContentType" Usage="new System.Net.Mime.ContentType contentType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentType">一个 <see cref="T:System.String" />，例如，包含 MIME 媒体类型、子类型和可选参数的 <c>"text/plain; charset=us-ascii"</c>。</param>
        <summary>使用指定的字符串初始化 <see cref="T:System.Net.Mime.ContentType" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 语法`contentType`字符串 RFC 2045 第 5.1 在节中所述[ https://www.ietf.org ](https://www.ietf.org/)。  
  
   
  
## Examples  
 下面的代码示例演示如何调用此构造函数。  
  
 [!code-cpp[NclMailSync#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#15)]
 [!code-csharp[NclMailSync#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="contentType" /> 为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="contentType" /> 为 <see cref="F:System.String.Empty" /> ("")。</exception>
        <exception cref="T:System.FormatException"><paramref name="contentType" /> 所用的形式无法进行分析。</exception>
      </Docs>
    </Member>
    <Member MemberName="Boundary">
      <MemberSignature Language="C#" Value="public string Boundary { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Boundary" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mime.ContentType.Boundary" />
      <MemberSignature Language="VB.NET" Value="Public Property Boundary As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Boundary { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Boundary : string with get, set" Usage="System.Net.Mime.ContentType.Boundary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置由此实例表示的 Content-Type 标头中包含的边界参数的值。</summary>
        <value><see cref="T:System.String" />，包含与边界参数关联的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在以下示例中的内容类型标头的值<xref:System.Net.Mime.ContentType.Boundary%2A>参数是"`-----boundary---0`"。  
  
 `content-type: multipart/mixed; boundary=-----boundary---0`  
  
 将此属性设置为`null`或<xref:System.String.Empty?displayProperty=nameWithType>标头中删除的边界信息。  
  
 RFC 2045 第 5.1 节中介绍的内容类型标头的语法。 在 RFC 2046 第 5.1.1 节中包含的边界参数的深入讨论。 这些 Rfc 目前[ https://www.ietf.org ](https://www.ietf.org/)。  
  
   
  
## Examples  
 下面的代码示例显示的值<xref:System.Net.Mime.ContentType.Boundary%2A>属性。  
  
 [!code-cpp[NclMailSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#5)]
 [!code-csharp[NclMailSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharSet">
      <MemberSignature Language="C#" Value="public string CharSet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CharSet" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mime.ContentType.CharSet" />
      <MemberSignature Language="VB.NET" Value="Public Property CharSet As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CharSet { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CharSet : string with get, set" Usage="System.Net.Mime.ContentType.CharSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置由此实例表示的 Content-Type 标头中包含的字符集参数的值。</summary>
        <value><see cref="T:System.String" />，包含与字符集参数关联的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在以下示例中的内容类型标头的值<xref:System.Net.Mime.ContentType.CharSet%2A>属性是"`us-ascii`"。  
  
 `content-type: application/x-myType; charset=us-ascii`  
  
 将此属性设置为`null`或<xref:System.String.Empty?displayProperty=nameWithType>标头中删除的字符集的信息。  
  
 详细介绍的内容类型标头的语法的语法是 RFC 2045 第 5.1 节中所述。 在 RFC 2046 4.1.2 部分中包含的字符集参数的深入讨论。 这些 Rfc 目前[ https://www.ietf.org ](https://www.ietf.org/)。  
  
   
  
## Examples  
 下面的代码示例显示的属性的值。  
  
 [!code-cpp[NclMailSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#5)]
 [!code-csharp[NclMailSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object rparam);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object rparam) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mime.ContentType.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (rparam As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ rparam);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="contentType.Equals rparam" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rparam" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="rparam">与此对象进行比较的 <see cref="T:System.Net.Mime.ContentType" /> 对象。</param>
        <summary>确定指定 <see cref="T:System.Net.Mime.ContentType" /> 对象的 Content-Type 标头是否等于此对象的 Content-Type 标头。</summary>
        <returns>如果 Content-Type 标头相同，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mime.ContentType.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="contentType.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>确定指定 <see cref="T:System.Net.Mime.ContentType" /> 对象的哈希代码</summary>
        <returns>整数哈希值。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaType">
      <MemberSignature Language="C#" Value="public string MediaType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MediaType" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mime.ContentType.MediaType" />
      <MemberSignature Language="VB.NET" Value="Public Property MediaType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MediaType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MediaType : string with get, set" Usage="System.Net.Mime.ContentType.MediaType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置由此实例表示的 Content-Type 标头中包含的媒体类型值。</summary>
        <value>包含媒体类型和子类型值的 <see cref="T:System.String" />。 在该值中，子类型后面没有分号 (;) 分隔符。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在以下示例中的内容类型标头的值<xref:System.Net.Mime.ContentType.MediaType%2A>属性是`"application/x-myType"`。  
  
 `content-type: application/x-myType; name=data.xyz`  
  
 将此属性设置为`null`或<xref:System.String.Empty?displayProperty=nameWithType>标头中删除名称信息。  
  
 RFC 2045 第 5.1 节中介绍的内容类型标头的语法。 RFC 2046 提供了有关 MIME 媒体类型的详细的信息。 这些 Rfc 目前[ https://www.ietf.org ](https://www.ietf.org/)。  
  
   
  
## Examples  
 下面的代码示例设置此属性的值。  
  
 [!code-cpp[NclMailSync#13](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#13)]
 [!code-csharp[NclMailSync#13](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">为集运算指定的值为 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">为设置操作指定的值为 <see cref="F:System.String.Empty" /> ("")。</exception>
        <exception cref="T:System.FormatException">为设置操作指定的值的格式是无法分析的。</exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mime.ContentType.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Net.Mime.ContentType.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置由此实例表示的 Content-Type 标头中包含的名称参数的值。</summary>
        <value><see cref="T:System.String" />，包含与名称参数关联的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在以下示例中的内容类型标头的值<xref:System.Net.Mime.ContentType.Name%2A>属性是`"data.xyz"`。  
  
 `content-type: application/x-myType; name=data.xyz`  
  
 详细介绍的内容类型标头的语法的语法 RFC 2045 第 5.1 中，可在节中所述[ https://www.ietf.org ](https://www.ietf.org/)。  
  
 指定的内容时<xref:System.Net.Mail.Attachment>作为<xref:System.IO.Stream>或<xref:System.String>，可以使用<xref:System.Net.Mime.ContentType.Name%2A>设置收件人的系统存储内容的文件的名称。  
  
   
  
## Examples  
 下面的代码示例设置要为正在以流的形式附加的文件指定名称的属性的值。  
  
 [!code-cpp[NclMailSync#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#15)]
 [!code-csharp[NclMailSync#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringDictionary Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mime.ContentType.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringDictionary ^ Parameters { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Collections.Specialized.StringDictionary" Usage="System.Net.Mime.ContentType.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取包含由此实例表示的 Content-Type 标头中包含的参数的字典。</summary>
        <value>可写的 <see cref="T:System.Collections.Specialized.StringDictionary" />，包含名称和值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可以通过在构造时指定的整个内容标头值设置参数<xref:System.Net.Mime.ContentType>对象，或者您可以将参数添加到<xref:System.Collections.Specialized.StringDictionary>返回的<xref:System.Net.Mime.ContentType.Parameters%2A>属性。  
  
 参数的名称时将参数项添加到字典中，是项的键，该参数的值是条目的值。  
  
 详细介绍的内容类型标头的语法的语法是 RFC 2045 第 5.1 节中所述。 RFC 2046 提供了有关 MIME 媒体类型及其关联的参数的详细的信息。 这些 Rfc 目前[ https://www.ietf.org ](https://www.ietf.org/)。  
  
   
  
## Examples  
 下面的代码示例显示返回此属性的字典中的值。  
  
 [!code-cpp[NclMailSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#5)]
 [!code-csharp[NclMailSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mime.ContentType.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="contentType.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回此 <see cref="T:System.Net.Mime.ContentType" /> 对象的字符串表示形式。</summary>
        <returns>一个 <see cref="T:System.String" />，其中包含此 <see cref="T:System.Net.Mime.ContentType" /> 的当前设置。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Net.Mime.ContentType.ToString%2A>方法包含用于创建此字符串<xref:System.Net.Mime.ContentType>，如果指定了，并且没有属性值已更改。 如果不指定任何字符串，或者一个或多个属性值已更改自这<xref:System.Net.Mime.ContentType>已创建的值<xref:System.Net.Mime.ContentType.ToString%2A>是采用内容类型标头，其中包含使用当前属性值的格式的字符串。 字符串未包含`"Content-type:"`前缀。  
  
 RFC 2045 第 5.1 中，可在节中介绍的内容类型标头的语法[ https://www.ietf.org ](https://www.ietf.org/)。  
  
   
  
## Examples  
 下面的代码示例显示的字符串表示形式<xref:System.Net.Mime.ContentType>。  
  
 [!code-cpp[NclMailSync#13](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#13)]
 [!code-csharp[NclMailSync#13](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>