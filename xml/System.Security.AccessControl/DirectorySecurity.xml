<Type Name="DirectorySecurity" FullName="System.Security.AccessControl.DirectorySecurity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="eb4ea4d5f8d45d89560e21775e689dbb2066c93a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36532821" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DirectorySecurity : System.Security.AccessControl.FileSystemSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DirectorySecurity extends System.Security.AccessControl.FileSystemSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.DirectorySecurity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DirectorySecurity&#xA;Inherits FileSystemSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirectorySecurity sealed : System::Security::AccessControl::FileSystemSecurity" />
  <TypeSignature Language="F#" Value="type DirectorySecurity = class&#xA;    inherit FileSystemSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.FileSystemSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示目录的访问控制和审核安全。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.DirectorySecurity>类指定的系统目录以及如何审核的访问尝试次数的访问权限。 此类表示为一组规则的访问和审核权限。 每个规则都由<xref:System.Security.AccessControl.FileSystemAccessRule>对象，而每个审核规则由<xref:System.Security.AccessControl.FileSystemAuditRule>对象。  
  
 <xref:System.Security.AccessControl.DirectorySecurity>类是基础的 Windows 文件安全系统的抽象。 在此系统中，每个目录具有自定义访问控制列表 (DACL)，它控制对目录访问权限和系统访问控制列表 (SACL)，指定进行审核的访问控制尝试。 <xref:System.Security.AccessControl.FileSystemAccessRule>和<xref:System.Security.AccessControl.FileSystemAuditRule>类是抽象的构成 Dacl 和 Sacl 的访问控制项 (Ace)。  
  
 <xref:System.Security.AccessControl.DirectorySecurity>类隐藏的许多细节，Dacl 和 Sacl; 无需担心 ACE 排序或 null DACL。  
  
 使用<xref:System.Security.AccessControl.FileSecurity>类来检索、 添加或更改表示 DACL 和 SACL 的文件的访问规则。  
  
 下表列出了可用于访问和维护目录安全性的方法。  
  
|任务|方法|  
|----------|-------------|  
|添加规则|<xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A?displayProperty=nameWithType><br /><br /> <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A?displayProperty=nameWithType>|  
|删除规则|<xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A?displayProperty=nameWithType><br /><br /> <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A?displayProperty=nameWithType>|  
|检索到的目录的访问控制|<xref:System.IO.Directory.GetAccessControl%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.DirectoryInfo.GetAccessControl%2A?displayProperty=nameWithType>|  
|保留到目录的访问控制|<xref:System.IO.Directory.SetAccessControl%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.DirectoryInfo.SetAccessControl%2A?displayProperty=nameWithType>|  
  
   
  
## Examples  
 下面的代码示例使用<xref:System.Security.AccessControl.DirectorySecurity>类添加，然后从目录中删除的访问控制列表 (ACL) 项。  你必须提供有效的用户或组帐户以运行此示例。  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.DirectorySecurity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySecurity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此构造函数，如果你想要创建一个空<xref:System.Security.AccessControl.DirectorySecurity>不基于现有的目录的对象。 然后可以使用访问控制信息填充该对象，并将其应用到的目录。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">当前操作系统不是 Microsoft Windows 2000 或更高版本。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySecurity (string name, System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.DirectorySecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, includeSections As AccessControlSections)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySecurity(System::String ^ name, System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.DirectorySecurity : string * System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.DirectorySecurity" Usage="new System.Security.AccessControl.DirectorySecurity (name, includeSections)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="name">一个目录位置，将从该目录创建 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 对象。</param>
        <param name="includeSections">
          <see cref="T:System.Security.AccessControl.AccessControlSections" /> 值之一，该值指定要检索的访问控制列表 (ACL) 信息的类型。</param>
        <summary>使用指定的 <see cref="T:System.Security.AccessControl.DirectorySecurity" /> 枚举值从指定目录初始化 <see cref="T:System.Security.AccessControl.AccessControlSections" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数检索指定的目录的访问控制信息，然后创建<xref:System.Security.AccessControl.DirectorySecurity>封装该信息的对象。 然后可以检查、 添加或删除指定的目录的访问控制信息。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> 参数为长度为零的字符串，仅包含空格，或包含一个或多个由 <see cref="F:System.IO.Path.InvalidPathChars" /> 定义的无效字符。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">指定的路径无效（例如，它位于未映射的驱动器上）。</exception>
        <exception cref="T:System.IO.FileNotFoundException">未找到 <paramref name="name" /> 参数中所指定的文件。</exception>
        <exception cref="T:System.IO.IOException">打开目录时发生 I/O 错误。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="name" /> 参数的格式无效。</exception>
        <exception cref="T:System.PlatformNotSupportedException">当前操作系统不是 Microsoft Windows 2000 或更高版本。</exception>
        <exception cref="T:System.IO.PathTooLongException">指定的路径和/或文件名超过了系统定义的最大长度。</exception>
        <exception cref="T:System.Security.AccessControl.PrivilegeNotHeldException">当前的系统帐户没有管理权限。</exception>
        <exception cref="T:System.SystemException">找不到该目录。</exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <paramref name="name" /> 参数指定了一个只读目录。  - 或 -  当前平台不支持此操作。  - 或 -  调用方没有所需权限。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">对指定的目录的访问权<paramref name="name" />参数。 关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /> ，<see cref="F:System.Security.AccessControl.AccessControlActions.View" />安全操作： 需</permission>
      </Docs>
    </Member>
  </Members>
</Type>