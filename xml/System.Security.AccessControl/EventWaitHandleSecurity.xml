<Type Name="EventWaitHandleSecurity" FullName="System.Security.AccessControl.EventWaitHandleSecurity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="53c92bf39570207be810f6dfa4a58f895f55b64e" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37466930" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EventWaitHandleSecurity : System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventWaitHandleSecurity extends System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.EventWaitHandleSecurity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventWaitHandleSecurity&#xA;Inherits NativeObjectSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventWaitHandleSecurity sealed : System::Security::AccessControl::NativeObjectSecurity" />
  <TypeSignature Language="F#" Value="type EventWaitHandleSecurity = class&#xA;    inherit NativeObjectSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.NativeObjectSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7c95f-101">表示应用于命名的系统等待句柄的 Windows 访问控制安全性。</span>
      <span class="sxs-lookup">
        <span data-stu-id="7c95f-101">Represents the Windows access control security applied to a named system wait handle.</span>
      </span>
      <span data-ttu-id="7c95f-102">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="7c95f-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c95f-103"><xref:System.Security.AccessControl.EventWaitHandleSecurity>对象指定访问权限的已命名的系统等待句柄，并且还可指定审核访问尝试的方法。</span><span class="sxs-lookup"><span data-stu-id="7c95f-103">An <xref:System.Security.AccessControl.EventWaitHandleSecurity> object specifies access rights for a named system wait handle, and also specifies the way access attempts are audited.</span></span> <span data-ttu-id="7c95f-104">等待句柄的访问权限表示为规则，由表示每个访问规则<xref:System.Security.AccessControl.EventWaitHandleAccessRule>对象。</span><span class="sxs-lookup"><span data-stu-id="7c95f-104">Access rights to the wait handle are expressed as rules, with each access rule represented by an <xref:System.Security.AccessControl.EventWaitHandleAccessRule> object.</span></span> <span data-ttu-id="7c95f-105">每个审核规则由<xref:System.Security.AccessControl.EventWaitHandleAuditRule>对象。</span><span class="sxs-lookup"><span data-stu-id="7c95f-105">Each auditing rule is represented by an <xref:System.Security.AccessControl.EventWaitHandleAuditRule> object.</span></span>  
  
 <span data-ttu-id="7c95f-106">这反映了基础的 Windows 安全系统，其中每个安全对象具有最多有一个自定义访问控制列表 (DACL) 控制对受保护的对象，并最多指定的访问权限的一个系统访问控制列表 (SACL) 访问尝试进行审核。</span><span class="sxs-lookup"><span data-stu-id="7c95f-106">This mirrors the underlying Windows security system, in which each securable object has at most one discretionary access control list (DACL) that controls access to the secured object, and at most one system access control list (SACL) that specifies which access attempts are audited.</span></span> <span data-ttu-id="7c95f-107">DACL 和 SACL 进行排序的访问控制项 (ACE) 指定的访问和审核用户和组的列表。</span><span class="sxs-lookup"><span data-stu-id="7c95f-107">The DACL and SACL are ordered lists of access control entries (ACE) that specify access and auditing for users and groups.</span></span> <span data-ttu-id="7c95f-108"><xref:System.Security.AccessControl.EventWaitHandleAccessRule>或<xref:System.Security.AccessControl.EventWaitHandleAuditRule>对象可以表示多个 ACE。</span><span class="sxs-lookup"><span data-stu-id="7c95f-108">An <xref:System.Security.AccessControl.EventWaitHandleAccessRule> or <xref:System.Security.AccessControl.EventWaitHandleAuditRule> object might represent more than one ACE.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7c95f-109"><xref:System.Threading.EventWaitHandle>对象可以表示本地等待句柄或已命名的系统等待句柄。</span><span class="sxs-lookup"><span data-stu-id="7c95f-109">An <xref:System.Threading.EventWaitHandle> object can represent a local wait handle or a named system wait handle.</span></span> <span data-ttu-id="7c95f-110">Windows 访问控制安全性是仅对已命名的系统等待句柄有意义。</span><span class="sxs-lookup"><span data-stu-id="7c95f-110">Windows access control security is meaningful only for named system wait handles.</span></span>  
  
 <span data-ttu-id="7c95f-111"><xref:System.Security.AccessControl.EventWaitHandleSecurity>， <xref:System.Security.AccessControl.EventWaitHandleAccessRule>，和<xref:System.Security.AccessControl.EventWaitHandleAuditRule>类隐藏的 Acl 和 Ace 的实现详细信息。</span><span class="sxs-lookup"><span data-stu-id="7c95f-111">The <xref:System.Security.AccessControl.EventWaitHandleSecurity>, <xref:System.Security.AccessControl.EventWaitHandleAccessRule>, and <xref:System.Security.AccessControl.EventWaitHandleAuditRule> classes hide the implementation details of ACLs and ACEs.</span></span> <span data-ttu-id="7c95f-112">它们允许您忽略十七个不同的 ACE 类型和继承和传播的访问权限进行正确维护的复杂性。</span><span class="sxs-lookup"><span data-stu-id="7c95f-112">They allow you to ignore the seventeen different ACE types and the complexity of correctly maintaining inheritance and propagation of access rights.</span></span> <span data-ttu-id="7c95f-113">这些对象还旨在阻止以下常见的访问控制错误：</span><span class="sxs-lookup"><span data-stu-id="7c95f-113">These objects are also designed to prevent the following common access control errors:</span></span>  
  
-   <span data-ttu-id="7c95f-114">创建具有 null DACL 的安全描述符。</span><span class="sxs-lookup"><span data-stu-id="7c95f-114">Creating a security descriptor with a null DACL.</span></span> <span data-ttu-id="7c95f-115">对 DACL 的 null 引用允许任何用户将访问规则添加到一个对象，可能会创建拒绝服务攻击。</span><span class="sxs-lookup"><span data-stu-id="7c95f-115">A null reference to a DACL allows any user to add access rules to an object, potentially creating a denial-of-service attack.</span></span> <span data-ttu-id="7c95f-116">一个新<xref:System.Security.AccessControl.EventWaitHandleSecurity>对象开始时始终使用空的 DACL，此操作会拒绝所有用户的所有访问权限。</span><span class="sxs-lookup"><span data-stu-id="7c95f-116">A new <xref:System.Security.AccessControl.EventWaitHandleSecurity> object always starts with an empty DACL, which denies all access for all users.</span></span>  
  
-   <span data-ttu-id="7c95f-117">违反 Ace 的规范顺序。</span><span class="sxs-lookup"><span data-stu-id="7c95f-117">Violating the canonical ordering of ACEs.</span></span> <span data-ttu-id="7c95f-118">如果 DACL 中的 ACE 列表不会保存在规范顺序，用户可能会无意中被赋予访问受保护的对象。</span><span class="sxs-lookup"><span data-stu-id="7c95f-118">If the ACE list in the DACL is not kept in the canonical order, users might inadvertently be given access to the secured object.</span></span> <span data-ttu-id="7c95f-119">例如，被拒绝的访问权限必须始终出现在允许的访问权限之前。</span><span class="sxs-lookup"><span data-stu-id="7c95f-119">For example, denied access rights must always appear before allowed access rights.</span></span> <span data-ttu-id="7c95f-120"><xref:System.Security.AccessControl.EventWaitHandleSecurity> 对象在内部维护正确的顺序。</span><span class="sxs-lookup"><span data-stu-id="7c95f-120"><xref:System.Security.AccessControl.EventWaitHandleSecurity> objects maintain the correct order internally.</span></span>  
  
-   <span data-ttu-id="7c95f-121">操作应仅资源管理器控制下的安全描述符标志。</span><span class="sxs-lookup"><span data-stu-id="7c95f-121">Manipulating security descriptor flags, which should be under resource manager control only.</span></span>  
  
-   <span data-ttu-id="7c95f-122">正在创建无效的 ACE 标志组合。</span><span class="sxs-lookup"><span data-stu-id="7c95f-122">Creating invalid combinations of ACE flags.</span></span>  
  
-   <span data-ttu-id="7c95f-123">处理继承的 Ace。</span><span class="sxs-lookup"><span data-stu-id="7c95f-123">Manipulating inherited ACEs.</span></span> <span data-ttu-id="7c95f-124">继承和传播由资源管理器，以响应对访问和审核规则所做的更改处理。</span><span class="sxs-lookup"><span data-stu-id="7c95f-124">Inheritance and propagation are handled by the resource manager, in response to changes you make to access and audit rules.</span></span>  
  
-   <span data-ttu-id="7c95f-125">将无意义的 Ace 插入到 Acl。</span><span class="sxs-lookup"><span data-stu-id="7c95f-125">Inserting meaningless ACEs into ACLs.</span></span>  
  
 <span data-ttu-id="7c95f-126">不支持的.NET 安全对象的唯一功能是危险的活动，应避免使用由大多数应用程序开发人员，如下所示：</span><span class="sxs-lookup"><span data-stu-id="7c95f-126">The only capabilities not supported by the .NET security objects are dangerous activities that should be avoided by the majority of application developers, such as the following:</span></span>  
  
-   <span data-ttu-id="7c95f-127">通常由资源管理器执行的低级别任务。</span><span class="sxs-lookup"><span data-stu-id="7c95f-127">Low-level tasks that are normally performed by the resource manager.</span></span>  
  
-   <span data-ttu-id="7c95f-128">添加或删除访问控制项中不维护规范排序的方式。</span><span class="sxs-lookup"><span data-stu-id="7c95f-128">Adding or removing access control entries in ways that do not maintain the canonical ordering.</span></span>  
  
 <span data-ttu-id="7c95f-129">若要修改某个命名的等待句柄的 Windows 访问控制安全性，请使用<xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType>方法以获取<xref:System.Security.AccessControl.EventWaitHandleSecurity>对象。</span><span class="sxs-lookup"><span data-stu-id="7c95f-129">To modify Windows access control security for a named wait handle, use the <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> method to get the <xref:System.Security.AccessControl.EventWaitHandleSecurity> object.</span></span> <span data-ttu-id="7c95f-130">通过添加和删除规则，修改安全对象，然后使用<xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>方法以将其重新附加。</span><span class="sxs-lookup"><span data-stu-id="7c95f-130">Modify the security object by adding and removing rules, and then use the <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType> method to reattach it.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7c95f-131">对所做的更改<xref:System.Security.AccessControl.EventWaitHandleSecurity>对象并不会影响命名的等待句柄的访问级别，直到你调用<xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>方法以将修改过的安全对象分配给命名的等待句柄。</span><span class="sxs-lookup"><span data-stu-id="7c95f-131">Changes you make to an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object do not affect the access levels of the named wait handle until you call the <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType> method to assign the altered security object to the named wait handle.</span></span>  
  
 <span data-ttu-id="7c95f-132">若要将访问控制安全性复制到另一个等待句柄，请使用<xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType>方法以获取<xref:System.Security.AccessControl.EventWaitHandleSecurity>对象表示的第一个等待句柄的访问和审核规则，然后使用<xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>方法或接受的构造函数<xref:System.Security.AccessControl.EventWaitHandleSecurity>对象，将这些规则分配给第二个等待句柄。</span><span class="sxs-lookup"><span data-stu-id="7c95f-132">To copy access control security from one wait handle to another, use the <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> method to get an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object representing the access and audit rules for the first wait handle, and then use the <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType> method, or a constructor that accepts an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object, to assign those rules to the second wait handle.</span></span>  
  
 <span data-ttu-id="7c95f-133">安全描述符定义语言 (SDDL) 投资的用户可以使用<xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A>方法设置为命名的等待句柄的访问规则和<xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A>方法来获取一个字符串，表示访问规则的 SDDL 格式。</span><span class="sxs-lookup"><span data-stu-id="7c95f-133">Users with an investment in the security descriptor definition language (SDDL) can use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to set access rules for a named wait handle, and the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method to obtain a string that represents the access rules in SDDL format.</span></span> <span data-ttu-id="7c95f-134">这不被建议用于新开发。</span><span class="sxs-lookup"><span data-stu-id="7c95f-134">This is not recommended for new development.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c95f-135">下面的代码示例演示了之间的分离<xref:System.Security.AccessControl.AccessControlType.Allow>规则和<xref:System.Security.AccessControl.AccessControlType.Deny>规则，并在兼容的规则中显示的权限的组合。</span><span class="sxs-lookup"><span data-stu-id="7c95f-135">The following code example demonstrates the separation between <xref:System.Security.AccessControl.AccessControlType.Allow> rules and <xref:System.Security.AccessControl.AccessControlType.Deny> rules, and shows the combination of rights in compatible rules.</span></span> <span data-ttu-id="7c95f-136">此示例将创建<xref:System.Security.AccessControl.EventWaitHandleSecurity>对象，添加规则，允许和拒绝具有各种权限的当前用户，并显示最终的规则对。</span><span class="sxs-lookup"><span data-stu-id="7c95f-136">The example creates an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="7c95f-137">然后可对当前用户的新权限，并显示结果，显示新权限将与现有合并<xref:System.Security.AccessControl.AccessControlType.Allow>规则。</span><span class="sxs-lookup"><span data-stu-id="7c95f-137">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7c95f-138">此示例不会附加到的安全对象<xref:System.Threading.EventWaitHandle>对象。</span><span class="sxs-lookup"><span data-stu-id="7c95f-138">This example does not attach the security object to a <xref:System.Threading.EventWaitHandle> object.</span></span> <span data-ttu-id="7c95f-139">附加安全对象的示例可在<xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType>和<xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="7c95f-139">Examples that attach security objects can be found in <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />
    <altmember cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" />
    <altmember cref="T:System.Security.AccessControl.EventWaitHandleRights" />
    <altmember cref="M:System.Threading.EventWaitHandle.GetAccessControl" />
    <altmember cref="M:System.Threading.EventWaitHandle.SetAccessControl(System.Security.AccessControl.EventWaitHandleSecurity)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventWaitHandleSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.EventWaitHandleSecurity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventWaitHandleSecurity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7c95f-140">使用默认值初始化 <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-140">Initializes a new instance of the <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> class with default values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c95f-141">一个新<xref:System.Security.AccessControl.EventWaitHandleSecurity>对象开始时始终具有空的自由访问控制列表 (DACL)，此操作会拒绝所有用户的所有访问权限。</span><span class="sxs-lookup"><span data-stu-id="7c95f-141">A new <xref:System.Security.AccessControl.EventWaitHandleSecurity> object always starts with an empty discretionary access list (DACL), which denies all access for all users.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7c95f-142">Windows 98 或 Windows Millennium Edition 不支持此类。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-142">This class is not supported on Windows 98 or Windows Millennium Edition.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AccessRightType">
      <MemberSignature Language="C#" Value="public override Type AccessRightType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRightType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.EventWaitHandleSecurity.AccessRightType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRightType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRightType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRightType : Type" Usage="System.Security.AccessControl.EventWaitHandleSecurity.AccessRightType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c95f-143">获取 <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> 类用于表示访问权限的枚举类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-143">Gets the enumeration type that the <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> class uses to represent access rights.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7c95f-144">一个 <see cref="T:System.Type" /> 对象，表示 <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> 枚举。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-144">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> enumeration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c95f-145">派生的类<xref:System.Security.AccessControl.ObjectSecurity>类重写<xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A>属性，并返回它们用于表示访问权限的类型。</span><span class="sxs-lookup"><span data-stu-id="7c95f-145">Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> property and return the type they use to represent access rights.</span></span> <span data-ttu-id="7c95f-146">数组或包含多个类型的安全对象的集合时，使用此属性来确定要使用每个安全对象的正确的枚举类型。</span><span class="sxs-lookup"><span data-stu-id="7c95f-146">When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleFactory">
      <MemberSignature Language="C#" Value="public override System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AccessRule AccessRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AccessRule ^ AccessRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="override this.AccessRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.AccessRule" Usage="eventWaitHandleSecurity.AccessRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identityReference">
          <span data-ttu-id="7c95f-147">一个 <see cref="T:System.Security.Principal.IdentityReference" />，用于标识此规则应用到的用户或组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-147">An <see cref="T:System.Security.Principal.IdentityReference" /> that identifies the user or group the rule applies to.</span>
          </span>
        </param>
        <param name="accessMask">
          <span data-ttu-id="7c95f-148">
            <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> 值的按位组合，用于指定允许或拒绝的访问权限，该组合将被强制转换为整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-148">A bitwise combination of <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> values specifying the access rights to allow or deny, cast to an integer.</span>
          </span>
        </param>
        <param name="isInherited">
          <span data-ttu-id="7c95f-149">这对于命名的等待句柄没有意义，因为这些句柄没有层次结构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-149">Meaningless for named wait handles, because they have no hierarchy.</span>
          </span>
        </param>
        <param name="inheritanceFlags">
          <span data-ttu-id="7c95f-150">这对于命名的等待句柄没有意义，因为这些句柄没有层次结构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-150">Meaningless for named wait handles, because they have no hierarchy.</span>
          </span>
        </param>
        <param name="propagationFlags">
          <span data-ttu-id="7c95f-151">这对于命名的等待句柄没有意义，因为这些句柄没有层次结构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-151">Meaningless for named wait handles, because they have no hierarchy.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="7c95f-152">
            <see cref="T:System.Security.AccessControl.AccessControlType" /> 值之一，用于指定是允许还是拒绝相应权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-152">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c95f-153">使用指定的访问权限、访问控制和标志为指定用户创建新的访问控制规则。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-153">Creates a new access control rule for the specified user, with the specified access rights, access control, and flags.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7c95f-154">一个 <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> 对象，表示指定用户的指定权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-154">An <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> object representing the specified rights for the specified user.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c95f-155">创建访问控制规则的建议的方法是使用的构造函数<xref:System.Security.AccessControl.EventWaitHandleAccessRule>类。</span><span class="sxs-lookup"><span data-stu-id="7c95f-155">The recommended way to create access control rules is to use the constructors of the <xref:System.Security.AccessControl.EventWaitHandleAccessRule> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7c95f-156">虽然继承和传播标志对命名的事件无意义，就仍然可以指定它们。</span><span class="sxs-lookup"><span data-stu-id="7c95f-156">Although inheritance and propagation flags are meaningless for named events, it is still possible to specify them.</span></span> <span data-ttu-id="7c95f-157">这不是建议，因为它不必要地增加复杂性维护的规则，例如通过干扰本来可以兼容的规则组合起来。</span><span class="sxs-lookup"><span data-stu-id="7c95f-157">This is not recommended, because it needlessly complicates the maintenance of rules, for example by interfering with the combination of rules that would otherwise be compatible.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7c95f-158">
            <paramref name="accessMask" />、<paramref name="inheritanceFlags" />、<paramref name="propagationFlags" /> 或 <paramref name="type" /> 指定了一个无效值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-158">
              <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />, or <paramref name="type" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7c95f-159">
            <paramref name="identityReference" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-159">
              <paramref name="identityReference" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="7c95f-160">- 或 -  <paramref name="accessMask" /> 是零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-160">-or-  <paramref name="accessMask" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7c95f-161">
            <paramref name="identityReference" /> 既不属于类型 <see cref="T:System.Security.Principal.SecurityIdentifier" />，也不属于可以转换为 <see cref="T:System.Security.Principal.NTAccount" /> 类型的类型（如 <see cref="T:System.Security.Principal.SecurityIdentifier" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-161">
              <paramref name="identityReference" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleType">
      <MemberSignature Language="C#" Value="public override Type AccessRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRuleType : Type" Usage="System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c95f-162">获取 <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> 类用于表示访问规则的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-162">Gets the type that the <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> class uses to represent access rules.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7c95f-163">一个表示 <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> 类的 <see cref="T:System.Type" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-163">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c95f-164">派生的类<xref:System.Security.AccessControl.ObjectSecurity>类重写<xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A>属性，并返回它们用于表示访问规则的类型。</span><span class="sxs-lookup"><span data-stu-id="7c95f-164">Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> property and return the type they use to represent access rules.</span></span> <span data-ttu-id="7c95f-165">数组或包含多个类型的安全对象的集合时，使用此属性来确定要使用每个安全对象的正确的访问规则类型。</span><span class="sxs-lookup"><span data-stu-id="7c95f-165">When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct access rule type to use with each security object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessRule">
      <MemberSignature Language="C#" Value="public void AddAccessRule (System.Security.AccessControl.EventWaitHandleAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAccessRule(class System.Security.AccessControl.EventWaitHandleAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAccessRule (rule As EventWaitHandleAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAccessRule(System::Security::AccessControl::EventWaitHandleAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAccessRule : System.Security.AccessControl.EventWaitHandleAccessRule -&gt; unit" Usage="eventWaitHandleSecurity.AddAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.EventWaitHandleAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="7c95f-166">要添加的访问控制规则。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-166">The access control rule to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c95f-167">搜索可以将新规则与之合并的匹配访问控制规则。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-167">Searches for a matching access control rule with which the new rule can be merged.</span>
          </span>
          <span data-ttu-id="7c95f-168">如果未找到符合条件的规则，则添加新规则。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-168">If none are found, adds the new rule.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c95f-169"><xref:System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule%2A>方法搜索与同一用户或组和相同的规则<xref:System.Security.AccessControl.AccessControlType>作为`rule`。</span><span class="sxs-lookup"><span data-stu-id="7c95f-169">The <xref:System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule%2A> method searches for rules with the same user or group and the same <xref:System.Security.AccessControl.AccessControlType> as `rule`.</span></span> <span data-ttu-id="7c95f-170">如果找不到，`rule`添加。</span><span class="sxs-lookup"><span data-stu-id="7c95f-170">If none are found, `rule` is added.</span></span> <span data-ttu-id="7c95f-171">如果找到匹配规则是中的权限`rule`与现有规则合并。</span><span class="sxs-lookup"><span data-stu-id="7c95f-171">If a matching rule is found, the rights in `rule` are merged with the existing rule.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c95f-172">下面的代码示例演示了之间的分离<xref:System.Security.AccessControl.AccessControlType.Allow>规则和<xref:System.Security.AccessControl.AccessControlType.Deny>规则，并在兼容的规则中显示的权限的组合。</span><span class="sxs-lookup"><span data-stu-id="7c95f-172">The following code example demonstrates the separation between <xref:System.Security.AccessControl.AccessControlType.Allow> rules and <xref:System.Security.AccessControl.AccessControlType.Deny> rules, and shows the combination of rights in compatible rules.</span></span> <span data-ttu-id="7c95f-173">此示例将创建<xref:System.Security.AccessControl.EventWaitHandleSecurity>对象，添加规则，允许和拒绝具有各种权限的当前用户，并显示最终的规则对。</span><span class="sxs-lookup"><span data-stu-id="7c95f-173">The example creates an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="7c95f-174">然后可对当前用户的新权限，并显示结果，显示新权限将与现有合并<xref:System.Security.AccessControl.AccessControlType.Allow>规则。</span><span class="sxs-lookup"><span data-stu-id="7c95f-174">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7c95f-175">此示例不会附加到的安全对象<xref:System.Threading.EventWaitHandle>对象。</span><span class="sxs-lookup"><span data-stu-id="7c95f-175">This example does not attach the security object to a <xref:System.Threading.EventWaitHandle> object.</span></span> <span data-ttu-id="7c95f-176">附加安全对象的示例可在<xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType>和<xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="7c95f-176">Examples that attach security objects can be found in <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7c95f-177">
            <paramref name="rule" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-177">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddAuditRule">
      <MemberSignature Language="C#" Value="public void AddAuditRule (System.Security.AccessControl.EventWaitHandleAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAuditRule(class System.Security.AccessControl.EventWaitHandleAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.EventWaitHandleSecurity.AddAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAuditRule (rule As EventWaitHandleAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAuditRule(System::Security::AccessControl::EventWaitHandleAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAuditRule : System.Security.AccessControl.EventWaitHandleAuditRule -&gt; unit" Usage="eventWaitHandleSecurity.AddAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.EventWaitHandleAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="7c95f-178">要添加的审核规则。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-178">The audit rule to add.</span>
          </span>
          <span data-ttu-id="7c95f-179">由此规则指定的用户来确定搜索。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-179">The user specified by this rule determines the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c95f-180">搜索可以将新规则与之合并的审核规则。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-180">Searches for an audit rule with which the new rule can be merged.</span>
          </span>
          <span data-ttu-id="7c95f-181">如果未找到符合条件的规则，则添加新规则。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-181">If none are found, adds the new rule.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c95f-182"><xref:System.Security.AccessControl.EventWaitHandleSecurity.AddAuditRule%2A>方法搜索的规则具有相同的用户或组作为`rule`。</span><span class="sxs-lookup"><span data-stu-id="7c95f-182">The <xref:System.Security.AccessControl.EventWaitHandleSecurity.AddAuditRule%2A> method searches for rules with the same user or group as `rule`.</span></span> <span data-ttu-id="7c95f-183">如果找不到，`rule`添加。</span><span class="sxs-lookup"><span data-stu-id="7c95f-183">If none are found, `rule` is added.</span></span> <span data-ttu-id="7c95f-184">如果找到匹配规则是中的标志`rule`合并到现有规则。</span><span class="sxs-lookup"><span data-stu-id="7c95f-184">If a matching rule is found, the flags in `rule` are merged into the existing rule.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7c95f-185">
            <paramref name="rule" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-185">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleFactory">
      <MemberSignature Language="C#" Value="public override System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AuditRule AuditRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AuditRule ^ AuditRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="override this.AuditRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.AuditRule" Usage="eventWaitHandleSecurity.AuditRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuditRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identityReference">
          <span data-ttu-id="7c95f-186">一个 <see cref="T:System.Security.Principal.IdentityReference" />，用于标识此规则应用到的用户或组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-186">An <see cref="T:System.Security.Principal.IdentityReference" /> that identifies the user or group the rule applies to.</span>
          </span>
        </param>
        <param name="accessMask">
          <span data-ttu-id="7c95f-187">
            <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> 值的按位组合，用于指定要审核的访问权限，该组合将被强制转换为整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-187">A bitwise combination of <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> values specifying the access rights to audit, cast to an integer.</span>
          </span>
        </param>
        <param name="isInherited">
          <span data-ttu-id="7c95f-188">这对于命名的等待句柄没有意义，因为这些句柄没有层次结构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-188">Meaningless for named wait handles, because they have no hierarchy.</span>
          </span>
        </param>
        <param name="inheritanceFlags">
          <span data-ttu-id="7c95f-189">这对于命名的等待句柄没有意义，因为这些句柄没有层次结构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-189">Meaningless for named wait handles, because they have no hierarchy.</span>
          </span>
        </param>
        <param name="propagationFlags">
          <span data-ttu-id="7c95f-190">这对于命名的等待句柄没有意义，因为这些句柄没有层次结构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-190">Meaningless for named wait handles, because they have no hierarchy.</span>
          </span>
        </param>
        <param name="flags">
          <span data-ttu-id="7c95f-191">
            <see cref="T:System.Security.AccessControl.AuditFlags" /> 值的按位组合，它指定是审核成功的访问、失败的访问还是对这两种情况都进行审核。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-191">A bitwise combination of <see cref="T:System.Security.AccessControl.AuditFlags" /> values specifying whether to audit successful access, failed access, or both.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c95f-192">新建审核规则，指定规则应用到的用户、要审核的访问权限以及触发审核规则的结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-192">Creates a new audit rule, specifying the user the rule applies to, the access rights to audit, and the outcome that triggers the audit rule.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7c95f-193">一个 <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" /> 对象，表示指定用户的指定审核规则。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-193">An <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" /> object representing the specified audit rule for the specified user.</span>
          </span>
          <span data-ttu-id="7c95f-194">该方法的返回类型是基类 <see cref="T:System.Security.AccessControl.AuditRule" />，但可以安全地将返回值强制转换为派生类。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-194">The return type of the method is the base class, <see cref="T:System.Security.AccessControl.AuditRule" />, but the return value can be cast safely to the derived class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c95f-195">若要创建的审核规则的建议的方法是使用的构造函数<xref:System.Security.AccessControl.EventWaitHandleAuditRule>类。</span><span class="sxs-lookup"><span data-stu-id="7c95f-195">The recommended way to create audit rules is to use the constructors of the <xref:System.Security.AccessControl.EventWaitHandleAuditRule> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7c95f-196">虽然继承和传播标志对命名的事件无意义，就仍然可以指定它们。</span><span class="sxs-lookup"><span data-stu-id="7c95f-196">Although inheritance and propagation flags are meaningless for named events, it is still possible to specify them.</span></span> <span data-ttu-id="7c95f-197">这不是建议，因为它不必要地增加复杂性维护的规则，例如通过干扰本来可以兼容的规则组合起来。</span><span class="sxs-lookup"><span data-stu-id="7c95f-197">This is not recommended, because it needlessly complicates the maintenance of rules, for example by interfering with the combination of rules that would otherwise be compatible.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7c95f-198">
            <paramref name="accessMask" />、<paramref name="inheritanceFlags" />、<paramref name="propagationFlags" /> 或 <paramref name="flags" /> 指定了一个无效值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-198">
              <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />, or <paramref name="flags" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7c95f-199">
            <paramref name="identityReference" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-199">
              <paramref name="identityReference" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="7c95f-200">- 或 -  <paramref name="accessMask" /> 是零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-200">-or-  <paramref name="accessMask" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7c95f-201">
            <paramref name="identityReference" /> 既不属于类型 <see cref="T:System.Security.Principal.SecurityIdentifier" />，也不属于可以转换为 <see cref="T:System.Security.Principal.NTAccount" /> 类型的类型（如 <see cref="T:System.Security.Principal.SecurityIdentifier" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-201">
              <paramref name="identityReference" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleType">
      <MemberSignature Language="C#" Value="public override Type AuditRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AuditRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AuditRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AuditRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuditRuleType : Type" Usage="System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7c95f-202">获取 <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> 类用于表示审核规则的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-202">Gets the type that the <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> class uses to represent audit rules.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7c95f-203">一个表示 <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" /> 类的 <see cref="T:System.Type" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-203">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c95f-204">派生的类<xref:System.Security.AccessControl.ObjectSecurity>类重写<xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A>属性，并返回它们用于表示审核权限的类型。</span><span class="sxs-lookup"><span data-stu-id="7c95f-204">Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> property and return the type they use to represent audit rights.</span></span> <span data-ttu-id="7c95f-205">数组或包含多个类型的安全对象的集合时，使用此属性来确定要使用每个安全对象的正确的审核规则类型。</span><span class="sxs-lookup"><span data-stu-id="7c95f-205">When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct audit rule type to use with each security object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRule">
      <MemberSignature Language="C#" Value="public bool RemoveAccessRule (System.Security.AccessControl.EventWaitHandleAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAccessRule(class System.Security.AccessControl.EventWaitHandleAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAccessRule (rule As EventWaitHandleAccessRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAccessRule(System::Security::AccessControl::EventWaitHandleAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRule : System.Security.AccessControl.EventWaitHandleAccessRule -&gt; bool" Usage="eventWaitHandleSecurity.RemoveAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.EventWaitHandleAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="7c95f-206">指定要搜索的用户和 <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> 的 <see cref="T:System.Security.AccessControl.AccessControlType" />，以及匹配规则（如果找到）必须兼容的一组继承和传播标志。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-206">An <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> that specifies the user and <see cref="T:System.Security.AccessControl.AccessControlType" /> to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with.</span>
          </span>
          <span data-ttu-id="7c95f-207">指定要从兼容规则移除的权限（如果找到）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-207">Specifies the rights to remove from the compatible rule, if found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c95f-208">搜索如下的访问控制规则：与指定的访问规则具有相同的用户和 <see cref="T:System.Security.AccessControl.AccessControlType" />（允许或拒绝），并具有兼容的继承和传播标志；如果找到，则从中移除指定访问规则中包含的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-208">Searches for an access control rule with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified access rule, and with compatible inheritance and propagation flags; if such a rule is found, the rights contained in the specified access rule are removed from it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7c95f-209">如果找到一个兼容规则，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-209">
              <see langword="true" /> if a compatible rule is found; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c95f-210">当前<xref:System.Security.AccessControl.EventWaitHandleSecurity>具有相同的用户以及相同的规则中搜索<xref:System.Security.AccessControl.AccessControlType>值作为`rule`。</span><span class="sxs-lookup"><span data-stu-id="7c95f-210">The current <xref:System.Security.AccessControl.EventWaitHandleSecurity> is searched for a rule that has the same user and the same <xref:System.Security.AccessControl.AccessControlType> value as `rule`.</span></span> <span data-ttu-id="7c95f-211">如果找到任何此类规则，不执行任何操作，并且该方法返回`false`。</span><span class="sxs-lookup"><span data-stu-id="7c95f-211">If no such rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="7c95f-212">如果找到匹配规则，将检查其继承和兼容性标志是否与中指定的标志的兼容性`rule`。</span><span class="sxs-lookup"><span data-stu-id="7c95f-212">If matching rules are found, their inheritance and compatibility flags are checked for compatibility with the flags specified in `rule`.</span></span> <span data-ttu-id="7c95f-213">如果找到不兼容的规则，不执行任何操作，并且该方法返回`false`。</span><span class="sxs-lookup"><span data-stu-id="7c95f-213">If no compatible rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="7c95f-214">如果找到具有兼容的标志的规则，则在指定的权限`rule`删除从兼容规则，并且该方法返回`true`。</span><span class="sxs-lookup"><span data-stu-id="7c95f-214">If a rule with compatible flags is found, the rights specified in `rule` are removed from the compatible rule, and the method returns `true`.</span></span> <span data-ttu-id="7c95f-215">如果`rule`指定不兼容的规则中包含的权限，根据这些权限不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="7c95f-215">If `rule` specifies rights not contained in the compatible rule, no action is taken with respect to those rights.</span></span> <span data-ttu-id="7c95f-216">如果从兼容规则移除的所有权限，整个规则都已从当前<xref:System.Security.AccessControl.EventWaitHandleSecurity>对象。</span><span class="sxs-lookup"><span data-stu-id="7c95f-216">If all rights are removed from the compatible rule, the entire rule is removed from the current <xref:System.Security.AccessControl.EventWaitHandleSecurity> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7c95f-217">虽然可以通过创建使用指定的事件的访问规则的继承和传播标志<xref:System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleFactory%2A>，这不推荐使用方法。</span><span class="sxs-lookup"><span data-stu-id="7c95f-217">Although you can specify inheritance and propagation flags for event access rules, by creating them with the <xref:System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleFactory%2A> method, this is not recommended.</span></span> <span data-ttu-id="7c95f-218">继承和传播命名事件没有意义并且它们使得访问规则的维护更复杂。</span><span class="sxs-lookup"><span data-stu-id="7c95f-218">Inheritance and propagation have no meaning for named events, and they make the maintenance of access rules more complicated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c95f-219">下面的代码示例演示如何将<xref:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRule%2A>方法删除的权限<xref:System.Security.AccessControl.AccessControlType.Allow>中的规则<xref:System.Security.AccessControl.EventWaitHandleSecurity>对象。</span><span class="sxs-lookup"><span data-stu-id="7c95f-219">The following code example demonstrates the use of the <xref:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRule%2A> method to remove rights from an <xref:System.Security.AccessControl.AccessControlType.Allow> rule in an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object.</span></span> <span data-ttu-id="7c95f-220">它还演示了中的其他权限`rule`将被忽略。</span><span class="sxs-lookup"><span data-stu-id="7c95f-220">It also shows that other rights in `rule` are ignored.</span></span>  
  
 <span data-ttu-id="7c95f-221">此示例将创建<xref:System.Security.AccessControl.EventWaitHandleSecurity>对象，并添加允许和拒绝为当前用户的各种权限的规则。</span><span class="sxs-lookup"><span data-stu-id="7c95f-221">The example creates an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object and adds rules that allow and deny various rights for the current user.</span></span> <span data-ttu-id="7c95f-222">允许的权限包括<xref:System.Security.AccessControl.EventWaitHandleRights.Modify>， <xref:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions>，和<xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize>。</span><span class="sxs-lookup"><span data-stu-id="7c95f-222">The rights allowed include <xref:System.Security.AccessControl.EventWaitHandleRights.Modify>, <xref:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions>, and <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize>.</span></span> <span data-ttu-id="7c95f-223">然后，示例创建的新规则的当前用户，包括<xref:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions>并<xref:System.Security.AccessControl.EventWaitHandleRights.TakeOwnership>权限，并将该规则用于<xref:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRule%2A>方法来删除<xref:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions>从<xref:System.Security.AccessControl.AccessControlType.Allow>中的规则<xref:System.Security.AccessControl.EventWaitHandleSecurity>对象。</span><span class="sxs-lookup"><span data-stu-id="7c95f-223">The example then creates a new rule for the current user, including <xref:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions> and <xref:System.Security.AccessControl.EventWaitHandleRights.TakeOwnership> rights, and uses that rule with the <xref:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRule%2A> method to remove <xref:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions> from the <xref:System.Security.AccessControl.AccessControlType.Allow> rule in the <xref:System.Security.AccessControl.EventWaitHandleSecurity> object.</span></span> <span data-ttu-id="7c95f-224"><xref:System.Security.AccessControl.EventWaitHandleRights.TakeOwnership>在中直接`rule`将被忽略。</span><span class="sxs-lookup"><span data-stu-id="7c95f-224">The <xref:System.Security.AccessControl.EventWaitHandleRights.TakeOwnership> right in `rule` is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7c95f-225">此示例不会附加到的安全对象<xref:System.Threading.EventWaitHandle>对象。</span><span class="sxs-lookup"><span data-stu-id="7c95f-225">This example does not attach the security object to a <xref:System.Threading.EventWaitHandle> object.</span></span> <span data-ttu-id="7c95f-226">附加安全对象的示例可在<xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType>和<xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="7c95f-226">Examples that attach security objects can be found in <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7c95f-227">
            <paramref name="rule" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-227">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleAll (System.Security.AccessControl.EventWaitHandleAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleAll(class System.Security.AccessControl.EventWaitHandleAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleAll(System.Security.AccessControl.EventWaitHandleAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleAll (rule As EventWaitHandleAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleAll(System::Security::AccessControl::EventWaitHandleAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRuleAll : System.Security.AccessControl.EventWaitHandleAccessRule -&gt; unit" Usage="eventWaitHandleSecurity.RemoveAccessRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.EventWaitHandleAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="7c95f-228">一个 <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />，指定要搜索的用户和 <see cref="T:System.Security.AccessControl.AccessControlType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-228">An <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> that specifies the user and <see cref="T:System.Security.AccessControl.AccessControlType" /> to search for.</span>
          </span>
          <span data-ttu-id="7c95f-229">此规则指定的任何权限都被忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-229">Any rights specified by this rule are ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c95f-230">搜索与指定的规则具有相同用户和 <see cref="T:System.Security.AccessControl.AccessControlType" />（允许或拒绝）的所有访问控制规则，如果找到则将其移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-230">Searches for all access control rules with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified rule and, if found, removes them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c95f-231">当前<xref:System.Security.AccessControl.EventWaitHandleSecurity>具有相同的用户以及相同的规则中搜索<xref:System.Security.AccessControl.AccessControlType>值作为`rule`。</span><span class="sxs-lookup"><span data-stu-id="7c95f-231">The current <xref:System.Security.AccessControl.EventWaitHandleSecurity> is searched for rules that have the same user and the same <xref:System.Security.AccessControl.AccessControlType> value as `rule`.</span></span> <span data-ttu-id="7c95f-232">指定的任何权限`rule`时执行此搜索，将忽略。</span><span class="sxs-lookup"><span data-stu-id="7c95f-232">Any rights specified by `rule` are ignored when performing this search.</span></span> <span data-ttu-id="7c95f-233">删除所有匹配规则。</span><span class="sxs-lookup"><span data-stu-id="7c95f-233">All matching rules are removed.</span></span> <span data-ttu-id="7c95f-234">如果不找到任何匹配的规则，不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="7c95f-234">If no matching rules are found, no action is taken.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c95f-235">下面的代码示例演示<xref:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleAll%2A>方法中删除所有与用户匹配的规则和<xref:System.Security.AccessControl.AccessControlType>，忽略权限。</span><span class="sxs-lookup"><span data-stu-id="7c95f-235">The following code example shows that the <xref:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleAll%2A> method removes all rules that match user and <xref:System.Security.AccessControl.AccessControlType>, ignoring rights.</span></span>  
  
 <span data-ttu-id="7c95f-236">此示例将创建<xref:System.Security.AccessControl.EventWaitHandleSecurity>对象，添加规则，允许和拒绝具有各种权限的当前用户，然后将合并到更多权限<xref:System.Security.AccessControl.AccessControlType.Allow>规则。</span><span class="sxs-lookup"><span data-stu-id="7c95f-236">The example creates an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object, adds rules that allow and deny various rights for the current user, and then merges additional rights into the <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span> <span data-ttu-id="7c95f-237">该示例然后创建新的规则，允许当前用户取得所有权，并使用该规则来删除<xref:System.Security.AccessControl.AccessControlType.Allow>规则从<xref:System.Security.AccessControl.EventWaitHandleSecurity>对象。</span><span class="sxs-lookup"><span data-stu-id="7c95f-237">The example then creates a new rule that allows the current user to take ownership, and uses that rule to remove the <xref:System.Security.AccessControl.AccessControlType.Allow> rule from the <xref:System.Security.AccessControl.EventWaitHandleSecurity> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7c95f-238">此示例不会附加到的安全对象<xref:System.Threading.EventWaitHandle>对象。</span><span class="sxs-lookup"><span data-stu-id="7c95f-238">This example does not attach the security object to a <xref:System.Threading.EventWaitHandle> object.</span></span> <span data-ttu-id="7c95f-239">附加安全对象的示例可在<xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType>和<xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="7c95f-239">Examples that attach security objects can be found in <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleAll#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleAll/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleAll/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7c95f-240">
            <paramref name="rule" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-240">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleSpecific (System.Security.AccessControl.EventWaitHandleAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleSpecific(class System.Security.AccessControl.EventWaitHandleAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.EventWaitHandleAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleSpecific (rule As EventWaitHandleAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleSpecific(System::Security::AccessControl::EventWaitHandleAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRuleSpecific : System.Security.AccessControl.EventWaitHandleAccessRule -&gt; unit" Usage="eventWaitHandleSecurity.RemoveAccessRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.EventWaitHandleAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="7c95f-241">要移除的 <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-241">The <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c95f-242">搜索与指定的规则完全匹配的访问控制规则，如果找到则将其移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-242">Searches for an access control rule that exactly matches the specified rule and, if found, removes it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c95f-243">仅当完全匹配时移除规则`rule`中的所有详细信息，包括标志。</span><span class="sxs-lookup"><span data-stu-id="7c95f-243">The rule is removed only if it exactly matches `rule` in all details, including flags.</span></span> <span data-ttu-id="7c95f-244">其他规则具有相同的用户和<xref:System.Security.AccessControl.AccessControlType>不会受到影响。</span><span class="sxs-lookup"><span data-stu-id="7c95f-244">Other rules with the same user and <xref:System.Security.AccessControl.AccessControlType> are not affected.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7c95f-245">一个规则表示一个或多个基础访问控制项 (ACE)，这些条目拆分或组合根据需要修改用户的访问安全性规则时。</span><span class="sxs-lookup"><span data-stu-id="7c95f-245">A rule represents one or more underlying access control entries (ACE), and these entries are split or combined as necessary when you modify the access security rules for a user.</span></span> <span data-ttu-id="7c95f-246">因此，存在的规则可能无法再在特定窗体时添加，并在这种情况下<xref:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleSpecific%2A>方法不能删除它。</span><span class="sxs-lookup"><span data-stu-id="7c95f-246">Thus, a rule might no longer exist in the specific form it had when it was added, and in that case the <xref:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleSpecific%2A> method cannot remove it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c95f-247">下面的代码示例演示<xref:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleSpecific%2A>方法需要完全匹配才能删除的规则和规则来允许和拒绝权限是相互独立。</span><span class="sxs-lookup"><span data-stu-id="7c95f-247">The following code example shows that the <xref:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleSpecific%2A> method requires an exact match in order to remove a rule, and that rules to allow and deny rights are independent of each other.</span></span>  
  
 <span data-ttu-id="7c95f-248">此示例将创建<xref:System.Security.AccessControl.EventWaitHandleSecurity>对象，添加规则，允许和拒绝具有各种权限的当前用户，然后将合并到更多权限<xref:System.Security.AccessControl.AccessControlType.Allow>访问规则。</span><span class="sxs-lookup"><span data-stu-id="7c95f-248">The example creates an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object, adds rules that allow and deny various rights for the current user, and then merges additional rights into the <xref:System.Security.AccessControl.AccessControlType.Allow> access rule.</span></span> <span data-ttu-id="7c95f-249">该示例然后将原始<xref:System.Security.AccessControl.AccessControlType.Allow>规则<xref:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleSpecific%2A>方法，并显示结果，其中显示任何内容，并被删除。</span><span class="sxs-lookup"><span data-stu-id="7c95f-249">The example then passes the original <xref:System.Security.AccessControl.AccessControlType.Allow> rule to the <xref:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleSpecific%2A> method, and displays the results, showing that nothing is deleted.</span></span> <span data-ttu-id="7c95f-250">然后，该示例将构造匹配的规则<xref:System.Security.AccessControl.AccessControlType.Allow>中的规则<xref:System.Security.AccessControl.EventWaitHandleSecurity>对象，并已成功使用<xref:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleSpecific%2A>方法来删除该规则。</span><span class="sxs-lookup"><span data-stu-id="7c95f-250">The example then constructs a rule that matches the <xref:System.Security.AccessControl.AccessControlType.Allow> rule in the <xref:System.Security.AccessControl.EventWaitHandleSecurity> object, and successfully uses the <xref:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleSpecific%2A> method to remove the rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7c95f-251">此示例不会附加到的安全对象<xref:System.Threading.EventWaitHandle>对象。</span><span class="sxs-lookup"><span data-stu-id="7c95f-251">This example does not attach the security object to a <xref:System.Threading.EventWaitHandle> object.</span></span> <span data-ttu-id="7c95f-252">附加安全对象的示例可在<xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType>和<xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="7c95f-252">Examples that attach security objects can be found in <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleSpecific#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleSpecific/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleSpecific#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleSpecific/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7c95f-253">
            <paramref name="rule" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-253">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRule">
      <MemberSignature Language="C#" Value="public bool RemoveAuditRule (System.Security.AccessControl.EventWaitHandleAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAuditRule(class System.Security.AccessControl.EventWaitHandleAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAuditRule (rule As EventWaitHandleAuditRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAuditRule(System::Security::AccessControl::EventWaitHandleAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRule : System.Security.AccessControl.EventWaitHandleAuditRule -&gt; bool" Usage="eventWaitHandleSecurity.RemoveAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.EventWaitHandleAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="7c95f-254">一个 <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" />，指定要搜索的用户以及匹配规则（如果找到）必须兼容的一组继承和传播标志。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-254">An <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" /> that specifies the user to search for and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with.</span>
          </span>
          <span data-ttu-id="7c95f-255">指定要从兼容规则移除的权限（如果找到）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-255">Specifies the rights to remove from the compatible rule, if found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c95f-256">搜索以下的审核规则：与指定的规则具有相同的用户，并具有兼容的继承和传播标志；如果找到兼容规则，则从中移除指定的规则中包含的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-256">Searches for an audit rule with the same user as the specified rule, and with compatible inheritance and propagation flags; if a compatible rule is found, the rights contained in the specified rule are removed from it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7c95f-257">如果找到一个兼容规则，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-257">
              <see langword="true" /> if a compatible rule is found; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c95f-258">当前<xref:System.Security.AccessControl.EventWaitHandleSecurity>搜索的审核规则具有相同用户作为`rule`。</span><span class="sxs-lookup"><span data-stu-id="7c95f-258">The current <xref:System.Security.AccessControl.EventWaitHandleSecurity> is searched for an audit rule that has the same user as `rule`.</span></span> <span data-ttu-id="7c95f-259">如果找到任何此类规则，不执行任何操作，并且该方法返回`false`。</span><span class="sxs-lookup"><span data-stu-id="7c95f-259">If no such rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="7c95f-260">如果找到匹配规则，将检查其继承和兼容性标志是否与中指定的标志的兼容性`rule`。</span><span class="sxs-lookup"><span data-stu-id="7c95f-260">If matching rules are found, their inheritance and compatibility flags are checked for compatibility with the flags specified in `rule`.</span></span> <span data-ttu-id="7c95f-261">如果找到不兼容的规则，不执行任何操作，并且该方法返回`false`。</span><span class="sxs-lookup"><span data-stu-id="7c95f-261">If no compatible rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="7c95f-262">如果找到具有兼容的标志的规则，则在指定的权限`rule`删除从兼容规则，并且该方法返回`true`。</span><span class="sxs-lookup"><span data-stu-id="7c95f-262">If a rule with compatible flags is found, the rights specified in `rule` are removed from the compatible rule, and the method returns `true`.</span></span> <span data-ttu-id="7c95f-263">如果`rule`指定不兼容的规则中包含的权限，根据这些权限不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="7c95f-263">If `rule` specifies rights not contained in the compatible rule, no action is taken with respect to those rights.</span></span> <span data-ttu-id="7c95f-264">如果从兼容规则移除的所有权限，整个规则都已从当前<xref:System.Security.AccessControl.EventWaitHandleSecurity>对象。</span><span class="sxs-lookup"><span data-stu-id="7c95f-264">If all rights are removed from the compatible rule, the entire rule is removed from the current <xref:System.Security.AccessControl.EventWaitHandleSecurity> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7c95f-265">虽然可以通过创建使用指定的事件的审核规则的继承和传播标志<xref:System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleFactory%2A>，这不推荐使用方法。</span><span class="sxs-lookup"><span data-stu-id="7c95f-265">Although you can specify inheritance and propagation flags for event audit rules, by creating them with the <xref:System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleFactory%2A> method, this is not recommended.</span></span> <span data-ttu-id="7c95f-266">继承和传播命名事件没有意义并且它们使得审核规则的维护更复杂。</span><span class="sxs-lookup"><span data-stu-id="7c95f-266">Inheritance and propagation have no meaning for named events, and they make the maintenance of audit rules more complicated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7c95f-267">
            <paramref name="rule" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-267">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleAll (System.Security.AccessControl.EventWaitHandleAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleAll(class System.Security.AccessControl.EventWaitHandleAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleAll(System.Security.AccessControl.EventWaitHandleAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleAll (rule As EventWaitHandleAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleAll(System::Security::AccessControl::EventWaitHandleAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleAll : System.Security.AccessControl.EventWaitHandleAuditRule -&gt; unit" Usage="eventWaitHandleSecurity.RemoveAuditRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.EventWaitHandleAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="7c95f-268">指定要搜索的用户的 <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-268">An <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" /> that specifies the user to search for.</span>
          </span>
          <span data-ttu-id="7c95f-269">此规则指定的任何权限都被忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-269">Any rights specified by this rule are ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c95f-270">搜索所有使用相同用户作为指定规则的审核规则，如果找到符合条件的规则，则移除它们。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-270">Searches for all audit rules with the same user as the specified rule and, if found, removes them.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c95f-271">当前<xref:System.Security.AccessControl.EventWaitHandleSecurity>搜索的审核规则具有相同用户作为`rule`。</span><span class="sxs-lookup"><span data-stu-id="7c95f-271">The current <xref:System.Security.AccessControl.EventWaitHandleSecurity> is searched for audit rules that have the same user as `rule`.</span></span> <span data-ttu-id="7c95f-272">指定的任何权限`rule`时执行此搜索，将忽略。</span><span class="sxs-lookup"><span data-stu-id="7c95f-272">Any rights specified by `rule` are ignored when performing this search.</span></span> <span data-ttu-id="7c95f-273">删除所有匹配规则。</span><span class="sxs-lookup"><span data-stu-id="7c95f-273">All matching rules are removed.</span></span> <span data-ttu-id="7c95f-274">如果不找到任何匹配的规则，不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="7c95f-274">If no matching rules are found, no action is taken.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7c95f-275">
            <paramref name="rule" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-275">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleSpecific (System.Security.AccessControl.EventWaitHandleAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleSpecific(class System.Security.AccessControl.EventWaitHandleAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.EventWaitHandleAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleSpecific (rule As EventWaitHandleAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleSpecific(System::Security::AccessControl::EventWaitHandleAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleSpecific : System.Security.AccessControl.EventWaitHandleAuditRule -&gt; unit" Usage="eventWaitHandleSecurity.RemoveAuditRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.EventWaitHandleAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="7c95f-276">要移除的 <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-276">The <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" /> to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c95f-277">搜索与指定的规则完全匹配的审核规则；如果找到，则移除这些规则。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-277">Searches for an audit rule that exactly matches the specified rule and, if found, removes it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c95f-278">仅当完全匹配时移除规则`rule`中的所有详细信息，包括标志。</span><span class="sxs-lookup"><span data-stu-id="7c95f-278">The rule is removed only if it exactly matches `rule` in all details, including flags.</span></span> <span data-ttu-id="7c95f-279">不会影响同一个用户的其他审核规则。</span><span class="sxs-lookup"><span data-stu-id="7c95f-279">Other audit rules for the same user are not affected.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7c95f-280">一个规则表示一个或多个基础访问控制项 (ACE)，这些条目拆分或组合根据需要修改用户的审核安全规则时。</span><span class="sxs-lookup"><span data-stu-id="7c95f-280">A rule represents one or more underlying access control entries (ACE), and these entries are split or combined as necessary when you modify the audit security rules for a user.</span></span> <span data-ttu-id="7c95f-281">因此，存在的规则可能无法再在特定窗体时添加，并在这种情况下<xref:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleSpecific%2A>方法不能删除它。</span><span class="sxs-lookup"><span data-stu-id="7c95f-281">Thus, a rule might no longer exist in the specific form it had when it was added, and in that case the <xref:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleSpecific%2A> method cannot remove it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7c95f-282">
            <paramref name="rule" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-282">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResetAccessRule">
      <MemberSignature Language="C#" Value="public void ResetAccessRule (System.Security.AccessControl.EventWaitHandleAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAccessRule(class System.Security.AccessControl.EventWaitHandleAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.EventWaitHandleSecurity.ResetAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAccessRule (rule As EventWaitHandleAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAccessRule(System::Security::AccessControl::EventWaitHandleAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.ResetAccessRule : System.Security.AccessControl.EventWaitHandleAccessRule -&gt; unit" Usage="eventWaitHandleSecurity.ResetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.EventWaitHandleAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="7c95f-283">要添加的 <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-283">The <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> to add.</span>
          </span>
          <span data-ttu-id="7c95f-284">由此规则指定的用户确定在添加此规则之前要移除的规则。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-284">The user specified by this rule determines the rules to remove before this rule is added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c95f-285">不论 <see cref="T:System.Security.AccessControl.AccessControlType" /> 如何，移除与指定的规则具有相同用户的所有访问控制规则，然后添加指定的规则。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-285">Removes all access control rules with the same user as the specified rule, regardless of <see cref="T:System.Security.AccessControl.AccessControlType" />, and then adds the specified rule.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c95f-286">如果没有与指定的规则匹配的用户的访问规则`rule`添加。</span><span class="sxs-lookup"><span data-stu-id="7c95f-286">If there are no access rules whose user matches the specified rule, `rule` is added.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c95f-287">下面的代码示例演示如何将<xref:System.Security.AccessControl.EventWaitHandleSecurity.ResetAccessRule%2A>方法会替换为匹配指定的规则匹配的用户的所有规则。</span><span class="sxs-lookup"><span data-stu-id="7c95f-287">The following code example shows how the <xref:System.Security.AccessControl.EventWaitHandleSecurity.ResetAccessRule%2A> method replaces all rules for the matching user with the rule specified for the match.</span></span>  
  
 <span data-ttu-id="7c95f-288">此示例将创建<xref:System.Security.AccessControl.EventWaitHandleSecurity>对象，并添加允许和拒绝为当前用户的各种权限的规则。</span><span class="sxs-lookup"><span data-stu-id="7c95f-288">The example creates an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object and adds rules that allow and deny various rights for the current user.</span></span> <span data-ttu-id="7c95f-289">该示例然后创建新的规则，允许当前的用户完全控制，并使用<xref:System.Security.AccessControl.EventWaitHandleSecurity.ResetAccessRule%2A>方法将这两个现有规则替换为新的规则。</span><span class="sxs-lookup"><span data-stu-id="7c95f-289">The example then creates a new rule that allows the current user full control, and uses the <xref:System.Security.AccessControl.EventWaitHandleSecurity.ResetAccessRule%2A> method to replace both of the existing rules with the new rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7c95f-290">此示例不会附加到的安全对象<xref:System.Threading.EventWaitHandle>对象。</span><span class="sxs-lookup"><span data-stu-id="7c95f-290">This example does not attach the security object to a <xref:System.Threading.EventWaitHandle> object.</span></span> <span data-ttu-id="7c95f-291">附加安全对象的示例可在<xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType>和<xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="7c95f-291">Examples that attach security objects can be found in <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.EventWaitHandleSecurity.ResetAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.ResetAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.EventWaitHandleSecurity.ResetAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.ResetAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7c95f-292">
            <paramref name="rule" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-292">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetAccessRule">
      <MemberSignature Language="C#" Value="public void SetAccessRule (System.Security.AccessControl.EventWaitHandleAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessRule(class System.Security.AccessControl.EventWaitHandleAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.EventWaitHandleSecurity.SetAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessRule (rule As EventWaitHandleAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessRule(System::Security::AccessControl::EventWaitHandleAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAccessRule : System.Security.AccessControl.EventWaitHandleAccessRule -&gt; unit" Usage="eventWaitHandleSecurity.SetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.EventWaitHandleAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="7c95f-293">要添加的 <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-293">The <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> to add.</span>
          </span>
          <span data-ttu-id="7c95f-294">由此规则的用户和 <see cref="T:System.Security.AccessControl.AccessControlType" /> 确定在添加此规则之前要移除的规则。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-294">The user and <see cref="T:System.Security.AccessControl.AccessControlType" /> of this rule determine the rules to remove before this rule is added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c95f-295">移除与指定的规则具有相同用户和 <see cref="T:System.Security.AccessControl.AccessControlType" />（允许或拒绝）的所有控制规则，然后添加指定的规则。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-295">Removes all access control rules with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified rule, and then adds the specified rule.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c95f-296">如果指定的规则具有<xref:System.Security.AccessControl.AccessControlType.Allow>，此方法的效果是删除所有<xref:System.Security.AccessControl.AccessControlType.Allow>为指定的用户，它们替换为指定的规则的规则。</span><span class="sxs-lookup"><span data-stu-id="7c95f-296">If the specified rule has <xref:System.Security.AccessControl.AccessControlType.Allow>, the effect of this method is to remove all <xref:System.Security.AccessControl.AccessControlType.Allow> rules for the specified user, replacing them with the specified rule.</span></span> <span data-ttu-id="7c95f-297">如果指定的规则具有<xref:System.Security.AccessControl.AccessControlType.Deny>，则所有<xref:System.Security.AccessControl.AccessControlType.Deny>规则指定的用户将替换为指定的规则。</span><span class="sxs-lookup"><span data-stu-id="7c95f-297">If the specified rule has <xref:System.Security.AccessControl.AccessControlType.Deny>, all <xref:System.Security.AccessControl.AccessControlType.Deny> rules for the specified user are replaced with the specified rule.</span></span>  
  
 <span data-ttu-id="7c95f-298">如果没有规则的用户和<xref:System.Security.AccessControl.AccessControlType>匹配指定的规则`rule`添加。</span><span class="sxs-lookup"><span data-stu-id="7c95f-298">If there are no rules whose user and <xref:System.Security.AccessControl.AccessControlType> match the specified rule, `rule` is added.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c95f-299">下面的代码示例演示如何<xref:System.Security.AccessControl.EventWaitHandleSecurity.SetAccessRule%2A>方法移除匹配这两个用户的所有规则和<xref:System.Security.AccessControl.AccessControlType>的`rule`，将它们替换为`rule`。</span><span class="sxs-lookup"><span data-stu-id="7c95f-299">The following code example shows how the <xref:System.Security.AccessControl.EventWaitHandleSecurity.SetAccessRule%2A> method removes all rules that match both the user and the <xref:System.Security.AccessControl.AccessControlType> of `rule`, replacing them with `rule`.</span></span>  
  
 <span data-ttu-id="7c95f-300">此示例将创建<xref:System.Security.AccessControl.EventWaitHandleSecurity>对象，并添加允许和拒绝为当前用户的各种权限的规则。</span><span class="sxs-lookup"><span data-stu-id="7c95f-300">The example creates an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object and adds rules that allow and deny various rights for the current user.</span></span> <span data-ttu-id="7c95f-301">该示例然后创建新的规则，允许当前的用户完全控制，并使用<xref:System.Security.AccessControl.EventWaitHandleSecurity.SetAccessRule%2A>方法来替换现有<xref:System.Security.AccessControl.AccessControlType.Allow>使用新规则的规则。</span><span class="sxs-lookup"><span data-stu-id="7c95f-301">The example then creates a new rule that allows the current user full control, and uses the <xref:System.Security.AccessControl.EventWaitHandleSecurity.SetAccessRule%2A> method to replace the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule with the new rule.</span></span> <span data-ttu-id="7c95f-302">拒绝访问的规则不受影响。</span><span class="sxs-lookup"><span data-stu-id="7c95f-302">The rule that denies access is not affected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7c95f-303">此示例不会附加到的安全对象<xref:System.Threading.EventWaitHandle>对象。</span><span class="sxs-lookup"><span data-stu-id="7c95f-303">This example does not attach the security object to a <xref:System.Threading.EventWaitHandle> object.</span></span> <span data-ttu-id="7c95f-304">附加安全对象的示例可在<xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType>和<xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="7c95f-304">Examples that attach security objects can be found in <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.EventWaitHandleSecurity.SetAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.SetAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.EventWaitHandleSecurity.SetAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.SetAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7c95f-305">
            <paramref name="rule" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-305">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetAuditRule">
      <MemberSignature Language="C#" Value="public void SetAuditRule (System.Security.AccessControl.EventWaitHandleAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAuditRule(class System.Security.AccessControl.EventWaitHandleAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.EventWaitHandleSecurity.SetAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAuditRule (rule As EventWaitHandleAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAuditRule(System::Security::AccessControl::EventWaitHandleAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAuditRule : System.Security.AccessControl.EventWaitHandleAuditRule -&gt; unit" Usage="eventWaitHandleSecurity.SetAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.EventWaitHandleAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="7c95f-306">要添加的 <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-306">The <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" /> to add.</span>
          </span>
          <span data-ttu-id="7c95f-307">由此规则指定的用户确定在添加此规则之前要移除的规则。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-307">The user specified by this rule determines the rules to remove before this rule is added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7c95f-308">不论 <see cref="T:System.Security.AccessControl.AuditFlags" /> 的值如何，移除与指定的规则具有相同用户的所有审核规则，然后添加指定的规则。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-308">Removes all audit rules with the same user as the specified rule, regardless of the <see cref="T:System.Security.AccessControl.AuditFlags" /> value, and then adds the specified rule.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c95f-309">如果没有与指定的规则匹配的用户的审核规则`rule`添加。</span><span class="sxs-lookup"><span data-stu-id="7c95f-309">If there are no audit rules whose user matches the specified rule, `rule` is added.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7c95f-310">
            <paramref name="rule" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c95f-310">
              <paramref name="rule" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>