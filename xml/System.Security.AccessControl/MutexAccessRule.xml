<Type Name="MutexAccessRule" FullName="System.Security.AccessControl.MutexAccessRule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cc2ddbf08b7af564d2bf172f4e59ea676b3a8afe" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30489781" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class MutexAccessRule : System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MutexAccessRule extends System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.MutexAccessRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MutexAccessRule&#xA;Inherits AccessRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class MutexAccessRule sealed : System::Security::AccessControl::AccessRule" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AccessRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6be1a-101">表示一组允许或拒绝用户或组进行访问的权限。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6be1a-101">Represents a set of access rights allowed or denied for a user or group.</span>
      </span>
      <span data-ttu-id="6be1a-102">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6be1a-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6be1a-103"><xref:System.Security.AccessControl.MutexAccessRule>类是一套.NET Framework 提供了用于管理已命名的系统互斥体上的 Windows 访问控制安全性的类之一。</span><span class="sxs-lookup"><span data-stu-id="6be1a-103">The <xref:System.Security.AccessControl.MutexAccessRule> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on named system mutexes.</span></span> <span data-ttu-id="6be1a-104">这些类，以及它们与基础 Windows 访问控制结构的关系的概述，请参阅<xref:System.Security.AccessControl.MutexSecurity>。</span><span class="sxs-lookup"><span data-stu-id="6be1a-104">For an overview of these classes, and their relationship to the underlying Windows access control structures, see <xref:System.Security.AccessControl.MutexSecurity>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6be1a-105">Windows 访问控制安全，则仅对已命名的系统互斥体有意义。</span><span class="sxs-lookup"><span data-stu-id="6be1a-105">Windows access control security is meaningful only for named system mutexes.</span></span> <span data-ttu-id="6be1a-106">如果<xref:System.Threading.Mutex>对象表示了局部互斥体，则访问控制不起作用。</span><span class="sxs-lookup"><span data-stu-id="6be1a-106">If a <xref:System.Threading.Mutex> object represents a local mutex, access control is irrelevant.</span></span>  
  
 <span data-ttu-id="6be1a-107">若要获取当前应用于已命名的互斥体的规则的列表，请使用<xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType>方法以获取<xref:System.Security.AccessControl.MutexSecurity>对象，，然后使用其<xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A>方法来获取的集合<xref:System.Security.AccessControl.MutexAccessRule>对象。</span><span class="sxs-lookup"><span data-stu-id="6be1a-107">To get a list of the rules currently applied to a named mutex, use the <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> method to get a <xref:System.Security.AccessControl.MutexSecurity> object, and then use its <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> method to obtain a collection of <xref:System.Security.AccessControl.MutexAccessRule> objects.</span></span>  
  
 <span data-ttu-id="6be1a-108"><xref:System.Security.AccessControl.MutexAccessRule> 对象不映射一对一与基础的自由访问控制列表 (DACL) 中的访问控制项。</span><span class="sxs-lookup"><span data-stu-id="6be1a-108"><xref:System.Security.AccessControl.MutexAccessRule> objects do not map one-to-one with access control entries in the underlying discretionary access control list (DACL).</span></span> <span data-ttu-id="6be1a-109">时为互斥体获取的所有访问规则集，该集合包含当前表示所有访问控制项所需要的规则的最小数量。</span><span class="sxs-lookup"><span data-stu-id="6be1a-109">When you get the set of all access rules for a mutex, the set contains the minimum number of rules currently required to express all the access control entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6be1a-110">基础的访问控制项更改，因为将应用并删除规则。</span><span class="sxs-lookup"><span data-stu-id="6be1a-110">The underlying access control entries change as you apply and remove rules.</span></span> <span data-ttu-id="6be1a-111">如果可能，合并规则中的信息来维护最少数量的访问控制项。</span><span class="sxs-lookup"><span data-stu-id="6be1a-111">The information in rules is merged if possible, to maintain the smallest number of access control entries.</span></span> <span data-ttu-id="6be1a-112">因此，当读取的规则的当前列表，它可能不完全一样已添加的所有规则的列表。</span><span class="sxs-lookup"><span data-stu-id="6be1a-112">Thus, when you read the current list of rules, it might not look exactly like the list of all the rules you have added.</span></span>  
  
 <span data-ttu-id="6be1a-113">使用<xref:System.Security.AccessControl.MutexAccessRule>对象来指定允许或拒绝用户或组的访问权限。</span><span class="sxs-lookup"><span data-stu-id="6be1a-113">Use <xref:System.Security.AccessControl.MutexAccessRule> objects to specify access rights to allow or deny to a user or group.</span></span> <span data-ttu-id="6be1a-114">A<xref:System.Security.AccessControl.MutexAccessRule>对象始终表示允许访问或拒绝访问，但永远不会同时。</span><span class="sxs-lookup"><span data-stu-id="6be1a-114">A <xref:System.Security.AccessControl.MutexAccessRule> object always represents either allowed access or denied access, never both.</span></span>  
  
 <span data-ttu-id="6be1a-115">若要将规则应用于已命名的系统互斥体，使用<xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType>方法以获取<xref:System.Security.AccessControl.MutexSecurity>对象。</span><span class="sxs-lookup"><span data-stu-id="6be1a-115">To apply a rule to a named system mutex, use the <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> method to get the <xref:System.Security.AccessControl.MutexSecurity> object.</span></span> <span data-ttu-id="6be1a-116">修改<xref:System.Security.AccessControl.MutexSecurity>对象通过使用其方法来添加规则，然后使用<xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>方法重新附加安全对象。</span><span class="sxs-lookup"><span data-stu-id="6be1a-116">Modify the <xref:System.Security.AccessControl.MutexSecurity> object by using its methods to add the rule, and then use the <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> method to reattach the security object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6be1a-117">对所做的更改<xref:System.Security.AccessControl.MutexSecurity>对象并不会影响已命名的互斥体的访问级别，直到你调用<xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>方法以将修改过的安全对象分配给命名互斥体。</span><span class="sxs-lookup"><span data-stu-id="6be1a-117">Changes you make to a <xref:System.Security.AccessControl.MutexSecurity> object do not affect the access levels of the named mutex until you call the <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> method to assign the altered security object to the named mutex.</span></span>  
  
 <span data-ttu-id="6be1a-118"><xref:System.Security.AccessControl.MutexAccessRule> 对象是不可变。</span><span class="sxs-lookup"><span data-stu-id="6be1a-118"><xref:System.Security.AccessControl.MutexAccessRule> objects are immutable.</span></span> <span data-ttu-id="6be1a-119">使用的方法修改的互斥体安全性<xref:System.Security.AccessControl.MutexSecurity>类来添加或删除规则; 执行此操作时，修改的基础的访问控制项。</span><span class="sxs-lookup"><span data-stu-id="6be1a-119">Security for a mutex is modified using the methods of the <xref:System.Security.AccessControl.MutexSecurity> class to add or remove rules; as you do this, the underlying access control entries are modified.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6be1a-120">Windows 98 或 Windows Millennium Edition 不支持同步对象的安全性。</span><span class="sxs-lookup"><span data-stu-id="6be1a-120">Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6be1a-121">下面的代码示例演示如何创建和使用<xref:System.Security.AccessControl.MutexAccessRule>对象。</span><span class="sxs-lookup"><span data-stu-id="6be1a-121">The following code example demonstrates the creation and use of <xref:System.Security.AccessControl.MutexAccessRule> objects.</span></span> <span data-ttu-id="6be1a-122">该示例创建<xref:System.Security.AccessControl.MutexSecurity>对象，添加规则，允许和拒绝具有各种权限的当前用户，并显示最终的规则对。</span><span class="sxs-lookup"><span data-stu-id="6be1a-122">The example creates a <xref:System.Security.AccessControl.MutexSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="6be1a-123">该示例然后允许新权限为当前用户，并显示结果，显示新的权限会与现有合并<xref:System.Security.AccessControl.AccessControlType.Allow>规则。</span><span class="sxs-lookup"><span data-stu-id="6be1a-123">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6be1a-124">此示例不会附加到的安全对象<xref:System.Threading.Mutex>对象。</span><span class="sxs-lookup"><span data-stu-id="6be1a-124">This example does not attach the security object to a <xref:System.Threading.Mutex> object.</span></span> <span data-ttu-id="6be1a-125">附加安全对象的示例可在<xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType>和<xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="6be1a-125">Examples that attach security objects can be found in <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.AccessControl.MutexSecurity" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6be1a-126">初始化 <see cref="T:System.Security.AccessControl.MutexAccessRule" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6be1a-126">Initializes a new instance of the <see cref="T:System.Security.AccessControl.MutexAccessRule" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MutexAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.MutexRights eventRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.MutexRights eventRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IdentityReference, eventRights As MutexRights, type As AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MutexAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::MutexRights eventRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.MutexRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="6be1a-127">此规则应用到的用户或组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6be1a-127">The user or group the rule applies to.</span>
          </span>
          <span data-ttu-id="6be1a-128">必须为 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 类型，或可以转换为 <see cref="T:System.Security.Principal.NTAccount" /> 类型的类型，如 <see cref="T:System.Security.Principal.SecurityIdentifier" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6be1a-128">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </param>
        <param name="eventRights">
          <span data-ttu-id="6be1a-129">
            <see cref="T:System.Security.AccessControl.MutexRights" /> 值的按位组合，它指定允许或拒绝的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6be1a-129">A bitwise combination of <see cref="T:System.Security.AccessControl.MutexRights" /> values specifying the rights allowed or denied.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="6be1a-130">
            <see cref="T:System.Security.AccessControl.AccessControlType" /> 值之一，用于指定是允许还是拒绝相应权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6be1a-130">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6be1a-131">初始化 <see cref="T:System.Security.AccessControl.MutexAccessRule" /> 类的新实例，指定此规则应用到的用户或组、访问权限以及是否允许或拒绝指定的访问权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6be1a-131">Initializes a new instance of the <see cref="T:System.Security.AccessControl.MutexAccessRule" /> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6be1a-132">若要等待<xref:System.Threading.Mutex>(通过调用<xref:System.Threading.WaitHandle.WaitOne%2A>，<xref:System.Threading.WaitHandle.WaitAny%2A>或<xref:System.Threading.WaitHandle.WaitAll%2A>方法)，用户必须具有<xref:System.Security.AccessControl.MutexRights.Synchronize?displayProperty=nameWithType>访问。</span><span class="sxs-lookup"><span data-stu-id="6be1a-132">To wait on a <xref:System.Threading.Mutex> (by calling the <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A> or <xref:System.Threading.WaitHandle.WaitAll%2A> method), a user must have <xref:System.Security.AccessControl.MutexRights.Synchronize?displayProperty=nameWithType> access.</span></span> <span data-ttu-id="6be1a-133">若要通过调用释放互斥体<xref:System.Threading.Mutex.ReleaseMutex%2A>方法，用户必须具有<xref:System.Security.AccessControl.MutexRights.Modify?displayProperty=nameWithType>访问。</span><span class="sxs-lookup"><span data-stu-id="6be1a-133">To release the mutex, by calling the <xref:System.Threading.Mutex.ReleaseMutex%2A> method, the user must have <xref:System.Security.AccessControl.MutexRights.Modify?displayProperty=nameWithType> access.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6be1a-134">
            <paramref name="eventRights" /> 指定了一个无效值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6be1a-134">
              <paramref name="eventRights" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="6be1a-135">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="6be1a-135">-or-</span>
          </span>
          <span data-ttu-id="6be1a-136">
            <paramref name="type" /> 指定了一个无效值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6be1a-136">
              <paramref name="type" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6be1a-137">
            <paramref name="identity" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6be1a-137">
              <paramref name="identity" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6be1a-138">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="6be1a-138">-or-</span>
          </span>
          <span data-ttu-id="6be1a-139">
            <paramref name="eventRights" /> 为零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6be1a-139">
              <paramref name="eventRights" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6be1a-140">
            <paramref name="identity" /> 既不属于类型 <see cref="T:System.Security.Principal.SecurityIdentifier" />，也不属于可以转换为 <see cref="T:System.Security.Principal.NTAccount" /> 类型的类型（如 <see cref="T:System.Security.Principal.SecurityIdentifier" />）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6be1a-140">
              <paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MutexAccessRule (string identity, System.Security.AccessControl.MutexRights eventRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.MutexRights eventRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As String, eventRights As MutexRights, type As AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MutexAccessRule(System::String ^ identity, System::Security::AccessControl::MutexRights eventRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.MutexRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="6be1a-141">应用此规则的用户或组的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6be1a-141">The name of the user or group the rule applies to.</span>
          </span>
        </param>
        <param name="eventRights">
          <span data-ttu-id="6be1a-142">
            <see cref="T:System.Security.AccessControl.MutexRights" /> 值的按位组合，它指定允许或拒绝的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6be1a-142">A bitwise combination of <see cref="T:System.Security.AccessControl.MutexRights" /> values specifying the rights allowed or denied.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="6be1a-143">
            <see cref="T:System.Security.AccessControl.AccessControlType" /> 值之一，用于指定是允许还是拒绝相应权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6be1a-143">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6be1a-144">初始化 <see cref="T:System.Security.AccessControl.MutexAccessRule" /> 类的新实例，指定应用此规则的用户或组的名称、访问权限以及是否允许或拒绝指定的访问权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6be1a-144">Initializes a new instance of the <see cref="T:System.Security.AccessControl.MutexAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6be1a-145">若要等待<xref:System.Threading.Mutex>(通过调用<xref:System.Threading.WaitHandle.WaitOne%2A>，<xref:System.Threading.WaitHandle.WaitAny%2A>或<xref:System.Threading.WaitHandle.WaitAll%2A>方法)，用户必须具有<xref:System.Security.AccessControl.MutexRights.Synchronize?displayProperty=nameWithType>访问。</span><span class="sxs-lookup"><span data-stu-id="6be1a-145">To wait on a <xref:System.Threading.Mutex> (by calling the <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A> or <xref:System.Threading.WaitHandle.WaitAll%2A> method), a user must have <xref:System.Security.AccessControl.MutexRights.Synchronize?displayProperty=nameWithType> access.</span></span> <span data-ttu-id="6be1a-146">若要通过调用释放互斥体<xref:System.Threading.Mutex.ReleaseMutex%2A>方法，用户必须具有<xref:System.Security.AccessControl.MutexRights.Modify?displayProperty=nameWithType>访问。</span><span class="sxs-lookup"><span data-stu-id="6be1a-146">To release the mutex, by calling the <xref:System.Threading.Mutex.ReleaseMutex%2A> methods, the user must have <xref:System.Security.AccessControl.MutexRights.Modify?displayProperty=nameWithType> access.</span></span>  
  
 <span data-ttu-id="6be1a-147">此构造函数等效于创建<xref:System.Security.Principal.NTAccount>对象，通过传递`identity`到<xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType>构造函数，并传递新创建<xref:System.Security.Principal.NTAccount>对象传递给<xref:System.Security.AccessControl.MutexAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.MutexRights%2CSystem.Security.AccessControl.AccessControlType%29>构造函数。</span><span class="sxs-lookup"><span data-stu-id="6be1a-147">This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.MutexAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.MutexRights%2CSystem.Security.AccessControl.AccessControlType%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6be1a-148">下面的代码示例演示如何使用此构造函数创建<xref:System.Security.AccessControl.MutexAccessRule>对象。</span><span class="sxs-lookup"><span data-stu-id="6be1a-148">The following code example demonstrates the use of this constructor to create <xref:System.Security.AccessControl.MutexAccessRule> objects.</span></span> <span data-ttu-id="6be1a-149">该示例创建<xref:System.Security.AccessControl.MutexSecurity>对象，添加规则，允许和拒绝具有各种权限的当前用户，并显示最终的规则对。</span><span class="sxs-lookup"><span data-stu-id="6be1a-149">The example creates a <xref:System.Security.AccessControl.MutexSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="6be1a-150">该示例然后允许新权限为当前用户，并显示结果，显示新的权限会与现有合并<xref:System.Security.AccessControl.AccessControlType.Allow>规则。</span><span class="sxs-lookup"><span data-stu-id="6be1a-150">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6be1a-151">此示例不会附加到的安全对象<xref:System.Threading.Mutex>对象。</span><span class="sxs-lookup"><span data-stu-id="6be1a-151">This example does not attach the security object to a <xref:System.Threading.Mutex> object.</span></span> <span data-ttu-id="6be1a-152">附加安全对象的示例可在<xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType>和<xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="6be1a-152">Examples that attach security objects can be found in <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6be1a-153">
            <paramref name="eventRights" /> 指定了一个无效值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6be1a-153">
              <paramref name="eventRights" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="6be1a-154">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="6be1a-154">-or-</span>
          </span>
          <span data-ttu-id="6be1a-155">
            <paramref name="type" /> 指定了一个无效值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6be1a-155">
              <paramref name="type" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6be1a-156">
            <paramref name="eventRights" /> 为零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6be1a-156">
              <paramref name="eventRights" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6be1a-157">
            <paramref name="identity" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6be1a-157">
              <paramref name="identity" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6be1a-158">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="6be1a-158">-or-</span>
          </span>
          <span data-ttu-id="6be1a-159">
            <paramref name="identity" /> 是一个长度为零的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6be1a-159">
              <paramref name="identity" /> is a zero-length string.</span>
          </span>
          <span data-ttu-id="6be1a-160">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="6be1a-160">-or-</span>
          </span>
          <span data-ttu-id="6be1a-161">
            <paramref name="identity" /> 的长度超过 512 个字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6be1a-161">
              <paramref name="identity" /> is longer than 512 characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MutexRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.MutexRights MutexRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.MutexRights MutexRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.MutexAccessRule.MutexRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MutexRights As MutexRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::MutexRights MutexRights { System::Security::AccessControl::MutexRights get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.MutexRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6be1a-162">获取访问规则允许或拒绝的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6be1a-162">Gets the rights allowed or denied by the access rule.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6be1a-163">
            <see cref="T:System.Security.AccessControl.MutexRights" /> 值的按位组合，它指示访问规则允许或拒绝的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6be1a-163">A bitwise combination of <see cref="T:System.Security.AccessControl.MutexRights" /> values indicating the rights allowed or denied by the access rule.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6be1a-164"><xref:System.Security.AccessControl.MutexAccessRule> 对象是不可变。</span><span class="sxs-lookup"><span data-stu-id="6be1a-164"><xref:System.Security.AccessControl.MutexAccessRule> objects are immutable.</span></span> <span data-ttu-id="6be1a-165">你可以创建新的访问规则，以表示不同的用户，不同的权限，或不同<xref:System.Security.AccessControl.AccessControlType>，但不是能修改现有的访问规则。</span><span class="sxs-lookup"><span data-stu-id="6be1a-165">You can create a new access rule representing a different user, different rights, or a different <xref:System.Security.AccessControl.AccessControlType>, but you cannot modify an existing access rule.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6be1a-166">下面的代码示例演示如何将<xref:System.Security.AccessControl.MutexAccessRule.MutexRights%2A>属性中包含的规则集中显示权限<xref:System.Security.AccessControl.MutexSecurity>对象。</span><span class="sxs-lookup"><span data-stu-id="6be1a-166">The following code example demonstrates the use of the <xref:System.Security.AccessControl.MutexAccessRule.MutexRights%2A> property to display the rights in the set of rules contained in a <xref:System.Security.AccessControl.MutexSecurity> object.</span></span> <span data-ttu-id="6be1a-167">该示例创建<xref:System.Security.AccessControl.MutexSecurity>对象，添加规则，允许和拒绝具有各种权限的当前用户，并显示最终的规则对。</span><span class="sxs-lookup"><span data-stu-id="6be1a-167">The example creates a <xref:System.Security.AccessControl.MutexSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="6be1a-168">该示例然后允许新权限为当前用户，并显示结果，显示新的权限会与现有合并<xref:System.Security.AccessControl.AccessControlType.Allow>规则。</span><span class="sxs-lookup"><span data-stu-id="6be1a-168">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6be1a-169">此示例不会附加到的安全对象<xref:System.Threading.Mutex>对象。</span><span class="sxs-lookup"><span data-stu-id="6be1a-169">This example does not attach the security object to a <xref:System.Threading.Mutex> object.</span></span> <span data-ttu-id="6be1a-170">附加安全对象的示例可在<xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType>和<xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="6be1a-170">Examples that attach security objects can be found in <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>