<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ObjectSecurity.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac528cc68a06a77599b75fdfa8d46df2264d5bccda9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">28cc68a06a77599b75fdfa8d46df2264d5bccda9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>Provides the ability to control access to objects without direct manipulation of Access Control Lists (ACLs).</source>
          <target state="translated">在没有直接操作访问控制列表 (ACL) 的情况下，提供对对象的访问控制权限。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>This class is the abstract base class for the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonObjectSecurity" /&gt;</ph> and <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.DirectoryObjectSecurity" /&gt;</ph> classes.</source>
          <target state="translated">此类是 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonObjectSecurity" /&gt;</ph> 类和 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.DirectoryObjectSecurity" /&gt;</ph> 类的抽象基类。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> of the new <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonObjectSecurity" /&gt;</ph> instance.</source>
          <target state="translated">新 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonObjectSecurity" /&gt;</ph> 实例的 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.#ctor(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the new <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object is a container object.</source>
          <target state="translated">如果新 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象是容器对象，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.#ctor(System.Boolean,System.Boolean)">
          <source>True if the new <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object is a directory object.</source>
          <target state="translated">如果新 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象是容器对象，则为 True。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.#ctor(System.Boolean,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.AccessRightType">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the securable object associated with this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">获取与此 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象关联的安全对象的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.AccessRightType">
          <source>The type of the securable object associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">与此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象关联的安全对象的类型。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>The identity to which the access rule applies.</source>
          <target state="translated">访问规则应用到其中的标识。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>It must be an object that can be cast as a <ph id="ph1">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</source>
          <target state="translated">它必须是可强制转换为 <ph id="ph1">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> 的对象。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>The access mask of this rule.</source>
          <target state="translated">此规则的访问掩码。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.</source>
          <target state="translated">访问掩码是 32 位的匿名位集合，其含义由单个集成者定义。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>true if this rule is inherited from a parent container.</source>
          <target state="translated">如果此规则继承自父容器，则为 true。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Specifies the inheritance properties of the access rule.</source>
          <target state="translated">指定访问规则的继承属性。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Specifies whether inherited access rules are automatically propagated.</source>
          <target state="translated">指定继承的访问规则是否自动传播。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>The propagation flags are ignored if <bpt id="p1">&lt;c&gt;</bpt>inheritanceFlags<ept id="p1">&lt;/c&gt;</ept> is set to <ph id="ph1">&lt;see cref="F:System.Security.AccessControl.InheritanceFlags.None" /&gt;</ph>.</source>
          <target state="translated">如果将 <bpt id="p1">&lt;c&gt;</bpt>inheritanceFlags<ept id="p1">&lt;/c&gt;</ept> 设置为 <ph id="ph1">&lt;see cref="F:System.Security.AccessControl.InheritanceFlags.None" /&gt;</ph>，则忽略传播标志。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Specifies the valid access control type.</source>
          <target state="translated">指定有效的访问控制类型。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessRule" /&gt;</ph> class with the specified values.</source>
          <target state="translated">用指定的值初始化 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessRule" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessRule" /&gt;</ph> object that this method creates.</source>
          <target state="translated">此方法创建的 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessRule" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.AccessRulesModified">
          <source>Gets or sets a Boolean value that specifies whether the access rules associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object have been modified.</source>
          <target state="translated">获取或设置一个布尔值，该值指定是否已修改与此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象关联的访问规则。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.AccessRulesModified">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the access rules associated with this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object have been modified; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果与此 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象关联的访问规则已被修改，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.AccessRuleType">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the object associated with the access rules of this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">获取与此 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象的访问规则关联的对象的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.AccessRuleType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object must be an object that can be cast as a <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 对象必须是可以转换为 <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> 对象的对象。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.AccessRuleType">
          <source>The type of the object associated with the access rules of this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">与此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象的访问规则关联的对象的类型。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical">
          <source>Gets a Boolean value that specifies whether the access rules associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object are in canonical order.</source>
          <target state="translated">获取一个布尔值，该值指定与此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象关联的访问规则是否处于规范顺序。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the access rules are in canonical order; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果访问规则处于规范顺序，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected">
          <source>Gets a Boolean value that specifies whether the Discretionary Access Control List (DACL) associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object is protected.</source>
          <target state="translated">获取一个布尔值，用于指定与 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象关联的自定义访问控制列表 (DACL) 是否受到保护。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the DACL is protected; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 DACL 受到保护，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical">
          <source>Gets a Boolean value that specifies whether the audit rules associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object are in canonical order.</source>
          <target state="translated">获取一个布尔值，该值指定与此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象关联的审核规则是否处于规范顺序。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the audit rules are in canonical order; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果审核规则处于规范顺序，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected">
          <source>Gets a Boolean value that specifies whether the System Access Control List (SACL) associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object is protected.</source>
          <target state="translated">获取一个布尔值，该值指定与此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象关联的系统访问控制列表 (SACL) 是否受保护。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the SACL is protected; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 SACL 受保护，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The identity to which the audit rule applies.</source>
          <target state="translated">审核规则应用到其中的标识。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>It must be an object that can be cast as a <ph id="ph1">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph>.</source>
          <target state="translated">它必须是可强制转换为 <ph id="ph1">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> 的对象。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The access mask of this rule.</source>
          <target state="translated">此规则的访问掩码。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The access mask is a 32-bit collection of anonymous bits, the meaning of which is defined by the individual integrators.</source>
          <target state="translated">访问掩码是 32 位的匿名位集合，其含义由单个集成者定义。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this rule is inherited from a parent container.</source>
          <target state="translated">如果此规则继承自父容器，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Specifies the inheritance properties of the audit rule.</source>
          <target state="translated">指定审核规则的继承属性。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Specifies whether inherited audit rules are automatically propagated.</source>
          <target state="translated">指定审核规则是否自动传播。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The propagation flags are ignored if <bpt id="p1">&lt;c&gt;</bpt>inheritanceFlags<ept id="p1">&lt;/c&gt;</ept> is set to <ph id="ph1">&lt;see cref="F:System.Security.AccessControl.InheritanceFlags.None" /&gt;</ph>.</source>
          <target state="translated">如果将 <bpt id="p1">&lt;c&gt;</bpt>inheritanceFlags<ept id="p1">&lt;/c&gt;</ept> 设置为 <ph id="ph1">&lt;see cref="F:System.Security.AccessControl.InheritanceFlags.None" /&gt;</ph>，则忽略传播标志。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Specifies the conditions for which the rule is audited.</source>
          <target state="translated">指定对其审核规则的条件。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditRule" /&gt;</ph> class with the specified values.</source>
          <target state="translated">用指定的值初始化 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditRule" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditRule" /&gt;</ph> object that this method creates.</source>
          <target state="translated">此方法创建的 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AuditRule" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.AuditRulesModified">
          <source>Gets or sets a Boolean value that specifies whether the audit rules associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object have been modified.</source>
          <target state="translated">获取或设置一个布尔值，该值指定是否已修改与此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象关联的审核规则。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.AuditRulesModified">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the audit rules associated with this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object have been modified; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果与此 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象关联的审核规则已被修改，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.AuditRuleType">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object associated with the audit rules of this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">获取与此 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象的审核规则关联的 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.AuditRuleType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object must be an object that can be cast as a <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 对象必须是可以转换为 <ph id="ph2">&lt;see cref="T:System.Security.Principal.SecurityIdentifier" /&gt;</ph> 对象的对象。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.AuditRuleType">
          <source>The type of the object associated with the audit rules of this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">与此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象的审核规则关联的对象的类型。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)">
          <source>The owner for which to get the primary group.</source>
          <target state="translated">要获取其主要组的所有者。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)">
          <source>Gets the primary group associated with the specified owner.</source>
          <target state="translated">获取与指定所有者关联的主要组。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)">
          <source>The primary group associated with the specified owner.</source>
          <target state="translated">与指定所有者关联的主要组。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)">
          <source>The primary group for which to get the owner.</source>
          <target state="translated">要获取其所有者的主要组。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)">
          <source>Gets the owner associated with the specified primary group.</source>
          <target state="translated">获取与指定主要组关联的所有者。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)">
          <source>The owner associated with the specified group.</source>
          <target state="translated">与指定组关联的所有者。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)">
          <source><ph id="ph1">&lt;paramref name="targetType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetType" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)">
          <source><ph id="ph1">&lt;paramref name="targetType" /&gt;</ph> is not an <ph id="ph2">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph> type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="targetType" /&gt;</ph> 不是 <ph id="ph2">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph> 类型。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)">
          <source>Some or all identity references could not be translated.</source>
          <target state="translated">未能转换部分或所有标识引用。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)">
          <source>A Win32 error code was returned.</source>
          <target state="translated">返回了一个 Win32 错误代码。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm">
          <source>Returns an array of byte values that represents the security descriptor information for this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">返回表示此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象的安全描述符信息的字节值数组。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm">
          <source>An array of byte values that represents the security descriptor for this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">表示此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象的安全描述符的字节值数组。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm">
          <source>This method returns <ph id="ph1">&lt;see langword="null" /&gt;</ph> if there is no security information in this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">如果此 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象中没有任何安全信息，此方法则返回 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm">
          <source>This method returns the security descriptor information currently in memory.</source>
          <target state="translated">此方法返回当前在内存中的安全描述符信息。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm">
          <source>It does not retrieve information saved in permanent storage.</source>
          <target state="translated">它不会检索信息保存到永久存储中。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)">
          <source>Specifies which sections (access rules, audit rules, primary group, owner) of the security descriptor to get.</source>
          <target state="translated">指定要获取安全描述符的哪些部分（访问规则、审核规则、主要组、所有者）。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)">
          <source>Returns the Security Descriptor Definition Language (SDDL) representation of the specified sections of the security descriptor associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">返回与此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象关联的安全描述符的指定部分的安全描述符定义语言 (SDDL) 表示形式。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)">
          <source>The SDDL representation of the specified sections of the security descriptor associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">与此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象关联的安全描述符的指定部分的 SDDL 表示形式。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.GroupModified">
          <source>Gets or sets a Boolean value that specifies whether the group associated with the securable object has been modified.</source>
          <target state="translated">获取或设置一个布尔值，该值指定是否已修改与安全对象相关联的组。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.GroupModified">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the group associated with the securable object has been modified; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果已修改与安全对象相关联的组，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.IsContainer">
          <source>Gets a Boolean value that specifies whether this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object is a container object.</source>
          <target state="translated">获取一个指定此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象是否是容器对象的布尔值。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.IsContainer">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object is a container object; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象是容器对象，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.IsDS">
          <source>Gets a Boolean value that specifies whether this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object is a directory object.</source>
          <target state="translated">获取一个布尔值，该值指定此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象是否是目录对象。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.IsDS">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object is a directory object; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象是一个目录对象，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported">
          <source>Returns a Boolean value that specifies whether the security descriptor associated with this  <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object can be converted to the Security Descriptor Definition Language (SDDL) format.</source>
          <target state="translated">返回一个布尔值，该值指示与此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象相关联的安全描述符是否可以转换为安全描述符定义语言 (SDDL) 格式。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the security descriptor associated with this  <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object can be converted to the Security Descriptor Definition Language (SDDL) format; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果与此 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象相关联的安全描述符可以转换为安全描述符定义语言 (SDDL) 格式，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <source>The modification to apply to the DACL.</source>
          <target state="translated">要应用于 DACL 的修改。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <source>The access rule to modify.</source>
          <target state="translated">要修改的访问规则。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the DACL is successfully modified; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果已成功修改 DACL，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <source>Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">将指定的修改应用到与此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象关联的自由访问控制列表 (DACL) 中。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the DACL is successfully modified; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果已成功修改 DACL，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <source>To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.</source>
          <target state="translated">若要避免无意中允许主体访问，应用程序应检查是否存在的允许每个人都完全访问 (AEFA) 访问控制项 (ACE)，并将其删除之前修改 DACL。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <source>The modification to apply to the DACL.</source>
          <target state="translated">要应用于 DACL 的修改。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <source>The access rule to modify.</source>
          <target state="translated">要修改的访问规则。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the DACL is successfully modified; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果已成功修改 DACL，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <source>Applies the specified modification to the Discretionary Access Control List (DACL) associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">将指定的修改应用到与此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象关联的自由访问控制列表 (DACL) 中。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the DACL is successfully modified; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果已成功修改 DACL，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <source>To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.</source>
          <target state="translated">若要避免无意中允许主体访问，应用程序应检查是否存在的允许每个人都完全访问 (AEFA) 访问控制项 (ACE)，并将其删除之前修改 DACL。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
          <source>The modification to apply to the SACL.</source>
          <target state="translated">要应用于 SACL 的修改。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
          <source>The audit rule to modify.</source>
          <target state="translated">要修改的审核规则。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the SACL is successfully modified; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果已成功修改 SACL，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
          <source>Applies the specified modification to the System Access Control List (SACL) associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">将指定的修改应用到与此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象关联的系统访问控制列表 (SACL) 中。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the SACL is successfully modified; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果已成功修改 SACL，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
          <source>The modification to apply to the SACL.</source>
          <target state="translated">要应用于 SACL 的修改。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
          <source>The audit rule to modify.</source>
          <target state="translated">要修改的审核规则。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the SACL is successfully modified; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果已成功修改 SACL，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
          <source>Applies the specified modification to the System Access Control List (SACL) associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">将指定的修改应用到与此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象关联的系统访问控制列表 (SACL) 中。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the SACL is successfully modified; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果已成功修改 SACL，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.ObjectSecurity.OwnerModified">
          <source>Gets or sets a Boolean value that specifies whether the owner of the securable object has been modified.</source>
          <target state="translated">获取或设置一个布尔值，该值指定是否已修改安全对象的所有者。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.ObjectSecurity.OwnerModified">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the owner of the securable object has been modified; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果已修改安全对象的所有者，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>Protected methods that save the security descriptor information in this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object to permanent storage.</source>
          <target state="translated">将此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象中的安全说明符信息保存到永久性存储的受保护方法。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)">
          <source>The handle used to retrieve the persisted information.</source>
          <target state="translated">用于检索已保持信息的句柄。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlSections" /&gt;</ph> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlSections" /&gt;</ph> 枚举值之一，该值指定要保存的安全对象的安全描述符（访问规则、审核规则、所有者和主要组）的部分。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)">
          <source>Saves the specified sections of the security descriptor associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object to permanent storage.</source>
          <target state="translated">将与此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象关联的安全描述符的指定部分保存到永久存储中。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)">
          <source>We recommend that the values of the <ph id="ph1">&lt;paramref name="includeSections" /&gt;</ph> parameters passed to the constructor and persist methods be identical.</source>
          <target state="translated">我们建议传递给构造函数和 persist 方法的 <ph id="ph1">&lt;paramref name="includeSections" /&gt;</ph> 参数的值应完全相同。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)">
          <source>When persisting a <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object, if the value of the <ph id="ph2">`includeSections`</ph> parameter passed to the <ph id="ph3">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph> method is not identical to the value of the <ph id="ph4">`includeSections`</ph> parameter passed to the constructor used to create that <ph id="ph5">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object, sections of the persisted <ph id="ph6">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object can contain unpredictable values.</source>
          <target state="translated">在保留时<ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph>对象，如果值<ph id="ph2">`includeSections`</ph>参数传递给<ph id="ph3">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph>方法并不完全相同的值<ph id="ph4">`includeSections`</ph>参数传递给构造函数用于创建该<ph id="ph5">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph>对象、 部分持久化<ph id="ph6">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph>对象可以包含不可预知的值。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)">
          <source>For example, if a constructor is called with an <ph id="ph1">`includeSections`</ph> value of <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlSections.Access&gt;</ph>, and later a <ph id="ph3">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph> method is called on that object with an <ph id="ph4">`includeSections`</ph> value of <ph id="ph5">&lt;xref:System.Security.AccessControl.AccessControlSections.All&gt;</ph>, the resulting persisted <ph id="ph6">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object will contain unpredictable values for its audit rules, group, and owner.</source>
          <target state="translated">例如，如果一个构造函数使用调用<ph id="ph1">`includeSections`</ph>值<ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlSections.Access&gt;</ph>，及更高版本<ph id="ph3">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph>对该对象调用方法<ph id="ph4">`includeSections`</ph>值<ph id="ph5">&lt;xref:System.Security.AccessControl.AccessControlSections.All&gt;</ph>，则产生的保持<ph id="ph6">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph>对象将包含其审核规则、 组和所有者的不可预知的值。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>The name used to retrieve the persisted information.</source>
          <target state="translated">用于检索已保存信息的名称。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlSections" /&gt;</ph> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlSections" /&gt;</ph> 枚举值之一，该值指定要保存的安全对象的安全描述符（访问规则、审核规则、所有者和主要组）的部分。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>Saves the specified sections of the security descriptor associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object to permanent storage.</source>
          <target state="translated">将与此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象关联的安全描述符的指定部分保存到永久存储中。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>We recommend that the values of the <ph id="ph1">&lt;paramref name="includeSections" /&gt;</ph> parameters passed to the constructor and persist methods be identical.</source>
          <target state="translated">我们建议传递给构造函数和 persist 方法的 <ph id="ph1">&lt;paramref name="includeSections" /&gt;</ph> 参数的值应完全相同。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>When persisting a <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object, if the value of the <ph id="ph2">`includeSections`</ph> parameter passed to the <ph id="ph3">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph> method is not identical to the value of the <ph id="ph4">`includeSections`</ph> parameter passed to the constructor used to create that <ph id="ph5">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object, sections of the persisted <ph id="ph6">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object can contain unpredictable values.</source>
          <target state="translated">在保留时<ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph>对象，如果值<ph id="ph2">`includeSections`</ph>参数传递给<ph id="ph3">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph>方法并不完全相同的值<ph id="ph4">`includeSections`</ph>参数传递给构造函数用于创建该<ph id="ph5">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph>对象、 部分持久化<ph id="ph6">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph>对象可以包含不可预知的值。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>For example, if a constructor is called with an <ph id="ph1">`includeSections`</ph> value of <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlSections.Access&gt;</ph>, and later a <ph id="ph3">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph> method is called on that object with an <ph id="ph4">`includeSections`</ph> value of <ph id="ph5">&lt;xref:System.Security.AccessControl.AccessControlSections.All&gt;</ph>, the resulting persisted <ph id="ph6">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object will contain unpredictable values for its audit rules, group, and owner.</source>
          <target state="translated">例如，如果一个构造函数使用调用<ph id="ph1">`includeSections`</ph>值<ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlSections.Access&gt;</ph>，及更高版本<ph id="ph3">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph>对该对象调用方法<ph id="ph4">`includeSections`</ph>值<ph id="ph5">&lt;xref:System.Security.AccessControl.AccessControlSections.All&gt;</ph>，则产生的保持<ph id="ph6">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph>对象将包含其审核规则、 组和所有者的不可预知的值。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to enable the privilege that allows the caller to take ownership of the object.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则启用允许调用方取得对象的所有权的权限。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)">
          <source>The name used to retrieve the persisted information.</source>
          <target state="translated">用于检索已保存信息的名称。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlSections" /&gt;</ph> enumeration values that specifies the sections of the security descriptor (access rules, audit rules, owner, primary group) of the securable object to save.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.AccessControlSections" /&gt;</ph> 枚举值之一，该值指定要保存的安全对象的安全描述符（访问规则、审核规则、所有者和主要组）的部分。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)">
          <source>Saves the specified sections of the security descriptor associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object to permanent storage.</source>
          <target state="translated">将与此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象关联的安全描述符的指定部分保存到永久存储中。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)">
          <source>We recommend that the values of the <ph id="ph1">&lt;paramref name="includeSections" /&gt;</ph> parameters passed to the constructor and persist methods be identical.</source>
          <target state="translated">我们建议传递给构造函数和 persist 方法的 <ph id="ph1">&lt;paramref name="includeSections" /&gt;</ph> 参数的值应完全相同。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)">
          <source>When persisting a <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object, if the value of the <ph id="ph2">`includeSections`</ph> parameter passed to the <ph id="ph3">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph> method is not identical to the value of the <ph id="ph4">`includeSections`</ph> parameter passed to the constructor used to create that <ph id="ph5">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object, sections of the persisted <ph id="ph6">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object can contain unpredictable values.</source>
          <target state="translated">在保留时<ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph>对象，如果值<ph id="ph2">`includeSections`</ph>参数传递给<ph id="ph3">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph>方法并不完全相同的值<ph id="ph4">`includeSections`</ph>参数传递给构造函数用于创建该<ph id="ph5">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph>对象、 部分持久化<ph id="ph6">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph>对象可以包含不可预知的值。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)">
          <source>For example, if a constructor is called with an <ph id="ph1">`includeSections`</ph> value of <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlSections.Access&gt;</ph>, and later a <ph id="ph3">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph> method is called on that object with an <ph id="ph4">`includeSections`</ph> value of <ph id="ph5">&lt;xref:System.Security.AccessControl.AccessControlSections.All&gt;</ph>, the resulting persisted <ph id="ph6">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph> object will contain unpredictable values for its audit rules, group, and owner.</source>
          <target state="translated">例如，如果一个构造函数使用调用<ph id="ph1">`includeSections`</ph>值<ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlSections.Access&gt;</ph>，及更高版本<ph id="ph3">&lt;xref:System.Security.AccessControl.ObjectSecurity.Persist%2A&gt;</ph>对该对象调用方法<ph id="ph4">`includeSections`</ph>值<ph id="ph5">&lt;xref:System.Security.AccessControl.AccessControlSections.All&gt;</ph>，则产生的保持<ph id="ph6">&lt;xref:System.Security.AccessControl.ObjectSecurity&gt;</ph>对象将包含其审核规则、 组和所有者的不可预知的值。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph> for which to remove all access rules.</source>
          <target state="translated">要删除其所有访问规则的 <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)">
          <source>Removes all access rules associated with the specified <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph>.</source>
          <target state="translated">删除与指定 <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph> 关联的所有访问规则。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)">
          <source>All access rules are not in canonical order.</source>
          <target state="translated">所有访问规则的顺序都不规范。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph> for which to remove all audit rules.</source>
          <target state="translated">要删除其所有审核规则的 <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)">
          <source>Removes all audit rules associated with the specified <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph>.</source>
          <target state="translated">删除与指定 <ph id="ph1">&lt;see cref="T:System.Security.Principal.IdentityReference" /&gt;</ph> 关联的所有审核规则。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)">
          <source>All audit rules are not in canonical order.</source>
          <target state="translated">所有审核规则的顺序都不规范。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ReadLock">
          <source>Locks this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object for read access.</source>
          <target state="translated">为读取访问锁定此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.ReadUnlock">
          <source>Unlocks this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object for read access.</source>
          <target state="translated">解锁此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象以进行读取访问。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to protect the access rules associated with this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object from inheritance; <ph id="ph3">&lt;see langword="false" /&gt;</ph> to allow inheritance.</source>
          <target state="translated">若为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则保护与此 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象关联的访问规则不被继承；若为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>，则允许继承。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to preserve inherited access rules; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to remove inherited access rules.</source>
          <target state="translated">若为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则保留继承的访问规则；若为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>，则删除继承的访问规则。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)">
          <source>This parameter is ignored if <bpt id="p1">&lt;c&gt;</bpt>isProtected<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>isProtected<ept id="p1">&lt;/c&gt;</ept> 为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>，则忽略此参数。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)">
          <source>Sets or removes protection of the access rules associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">设置或删除与此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象相关联的访问规则保护。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)">
          <source>Protected access rules cannot be modified by parent objects through inheritance.</source>
          <target state="translated">父级对象不能通过继承来修改受保护的访问规则。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)">
          <source>This method attempts to remove inherited rules from a non-canonical Discretionary Access Control List (DACL).</source>
          <target state="translated">此方法尝试从非标准自定义访问控制列表 (DACL) 中删除继承的规则。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to protect the audit rules associated with this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object from inheritance; <ph id="ph3">&lt;see langword="false" /&gt;</ph> to allow inheritance.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 以通过继承保护与此 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象相关的审核规则；<ph id="ph3">&lt;see langword="false" /&gt;</ph> 以允许继承。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to preserve inherited audit rules; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to remove inherited audit rules.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 以保留继承的审核规则；<ph id="ph2">&lt;see langword="false" /&gt;</ph> 以删除继承的审核规则。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)">
          <source>This parameter is ignored if <bpt id="p1">&lt;c&gt;</bpt>isProtected<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <bpt id="p1">&lt;c&gt;</bpt>isProtected<ept id="p1">&lt;/c&gt;</ept> 为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>，则忽略此参数。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)">
          <source>Sets or removes protection of the audit rules associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">设置或删除与此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象相关联的审核规则保护。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)">
          <source>Protected audit rules cannot be modified by parent objects through inheritance.</source>
          <target state="translated">不能由通过继承的父级对象修改受保护的审核规则。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)">
          <source>This method attempts to remove inherited rules from a non-canonical System Access Control List (SACL).</source>
          <target state="translated">此方法尝试从非规范化系统访问控制列表 (SACL) 中删除继承的规则。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)">
          <source>The primary group to set.</source>
          <target state="translated">要设置的主要组。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)">
          <source>Sets the primary group for the security descriptor associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">设置与此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象关联的安全描述符的主要组。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)">
          <source>The owner to set.</source>
          <target state="translated">要设置的所有者。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)">
          <source>Sets the owner for the security descriptor associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object.</source>
          <target state="translated">设置与此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象关联的安全描述符的所有者。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>Sets the security descriptor for this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object from the specified binary data.</source>
          <target state="translated">根据指定的二进制数据设置此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象的安全说明符。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>If the security descriptor represented by the binary data contains <ph id="ph1">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</source>
          <target state="translated">如果由二进制数据的安全描述符包含<ph id="ph1">`null`</ph>其自定义访问控制列表 (DACL)，允许每个人单一访问控制项 (ACE) 完全访问权限 (AEFA) 添加到 DACL。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</source>
          <target state="translated">如果应用程序修改的 DACL 中向其添加 AEFA ACE 的安全描述符，如果该 DACL 保持不变，通过 DACL 已持久化 AEFA ACE。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>This can result in an application unintentionally allowing access to principals.</source>
          <target state="translated">这可能导致无意中允许主体访问应用程序。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</source>
          <target state="translated">因此，应用程序应检查 AEFA ACE 存在，并将其删除才能修改任何安全描述符。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])">
          <source>The array of bytes from which to set the security descriptor.</source>
          <target state="translated">要根据其设置安全描述符的字节数组。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])">
          <source>Sets the security descriptor for this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object from the specified array of byte values.</source>
          <target state="translated">根据指定的字节值数组设置此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象的安全描述符。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])">
          <source>If the security descriptor represented by the binary data contains <ph id="ph1">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</source>
          <target state="translated">如果由二进制数据的安全描述符包含<ph id="ph1">`null`</ph>其自定义访问控制列表 (DACL)，允许每个人单一访问控制项 (ACE) 完全访问权限 (AEFA) 添加到 DACL。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])">
          <source>If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</source>
          <target state="translated">如果应用程序修改的 DACL 中向其添加 AEFA ACE 的安全描述符，如果该 DACL 保持不变，通过 DACL 已持久化 AEFA ACE。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])">
          <source>This can result in an application unintentionally allowing access to principals.</source>
          <target state="translated">这可能导致无意中允许主体访问应用程序。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])">
          <source>Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</source>
          <target state="translated">因此，应用程序应检查 AEFA ACE 存在，并将其删除才能修改任何安全描述符。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)">
          <source>The array of bytes from which to set the security descriptor.</source>
          <target state="translated">要根据其设置安全描述符的字节数组。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)">
          <source>The sections (access rules, audit rules, owner, primary group) of the security descriptor to set.</source>
          <target state="translated">要设置的安全描述符的部分（访问规则、审核规则、所有者、主要组）。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)">
          <source>Sets the specified sections of the security descriptor for this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object from the specified array of byte values.</source>
          <target state="translated">根据指定的字节值数组设置此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象的安全描述符的指定部分。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)">
          <source>If the security descriptor represented by the binary data contains <ph id="ph1">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</source>
          <target state="translated">如果由二进制数据的安全描述符包含<ph id="ph1">`null`</ph>其自定义访问控制列表 (DACL)，允许每个人单一访问控制项 (ACE) 完全访问权限 (AEFA) 添加到 DACL。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)">
          <source>If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</source>
          <target state="translated">如果应用程序修改的 DACL 中向其添加 AEFA ACE 的安全描述符，如果该 DACL 保持不变，通过 DACL 已持久化 AEFA ACE。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)">
          <source>This can result in an application unintentionally allowing access to principals.</source>
          <target state="translated">这可能导致无意中允许主体访问应用程序。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)">
          <source>Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</source>
          <target state="translated">因此，应用程序应检查 AEFA ACE 存在，并将其删除才能修改任何安全描述符。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>Sets the security descriptor for this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object from the specified Security Descriptor Definition Language (SDDL) string.</source>
          <target state="translated">根据指定的安全描述符定义语言 (SDDL) 字符串设置此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象的安全描述符。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>If the security descriptor represented by the SDDL string contains <ph id="ph1">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</source>
          <target state="translated">如果包含的 SDDL 字符串所表示的安全描述符<ph id="ph1">`null`</ph>其自定义访问控制列表 (DACL)，允许每个人单一访问控制项 (ACE) 完全访问权限 (AEFA) 添加到 DACL。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</source>
          <target state="translated">如果应用程序修改的 DACL 中向其添加 AEFA ACE 的安全描述符，如果该 DACL 保持不变，通过 DACL 已持久化 AEFA ACE。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>This can result in an application unintentionally allowing access to principals.</source>
          <target state="translated">这可能导致无意中允许主体访问应用程序。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.AccessControl.ObjectSecurity">
          <source>Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</source>
          <target state="translated">因此，应用程序应检查 AEFA ACE 存在，并将其删除才能修改任何安全描述符。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)">
          <source>The SDDL string from which to set the security descriptor.</source>
          <target state="translated">要根据其设置安全描述符的 SDDL 字符串。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)">
          <source>Sets the security descriptor for this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object from the specified Security Descriptor Definition Language (SDDL) string.</source>
          <target state="translated">根据指定的安全描述符定义语言 (SDDL) 字符串设置此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象的安全描述符。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)">
          <source>If the security descriptor represented by the SDDL string contains <ph id="ph1">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</source>
          <target state="translated">如果包含的 SDDL 字符串所表示的安全描述符<ph id="ph1">`null`</ph>其自定义访问控制列表 (DACL)，允许每个人单一访问控制项 (ACE) 完全访问权限 (AEFA) 添加到 DACL。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)">
          <source>If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</source>
          <target state="translated">如果应用程序修改的 DACL 中向其添加 AEFA ACE 的安全描述符，如果该 DACL 保持不变，通过 DACL 已持久化 AEFA ACE。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)">
          <source>This can result in an application unintentionally allowing access to principals.</source>
          <target state="translated">这可能导致无意中允许主体访问应用程序。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)">
          <source>Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</source>
          <target state="translated">因此，应用程序应检查 AEFA ACE 存在，并将其删除才能修改任何安全描述符。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>The SDDL string from which to set the security descriptor.</source>
          <target state="translated">要根据其设置安全描述符的 SDDL 字符串。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>The sections (access rules, audit rules, owner, primary group) of the security descriptor to set.</source>
          <target state="translated">要设置的安全描述符的部分（访问规则、审核规则、所有者、主要组）。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>Sets the specified sections of the security descriptor for this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object from the specified Security Descriptor Definition Language (SDDL) string.</source>
          <target state="translated">根据指定的安全描述符定义语言 (SDDL) 字符串设置此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象的安全描述符的指定部分。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>If the security descriptor represented by the SDDL string contains <ph id="ph1">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</source>
          <target state="translated">如果包含的 SDDL 字符串所表示的安全描述符<ph id="ph1">`null`</ph>其自定义访问控制列表 (DACL)，允许每个人单一访问控制项 (ACE) 完全访问权限 (AEFA) 添加到 DACL。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</source>
          <target state="translated">如果应用程序修改的 DACL 中向其添加 AEFA ACE 的安全描述符，如果该 DACL 保持不变，通过 DACL 已持久化 AEFA ACE。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>This can result in an application unintentionally allowing access to principals.</source>
          <target state="translated">这可能导致无意中允许主体访问应用程序。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)">
          <source>Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</source>
          <target state="translated">因此，应用程序应检查 AEFA ACE 存在，并将其删除才能修改任何安全描述符。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.WriteLock">
          <source>Locks this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object for write access.</source>
          <target state="translated">锁定此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象以进行写访问。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.ObjectSecurity.WriteUnlock">
          <source>Unlocks this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> object for write access.</source>
          <target state="translated">解锁此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ObjectSecurity" /&gt;</ph> 对象以进行写入访问。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>