<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CommonSecurityDescriptor.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a5ae9e2a22a909613abf30f4a4f8020972658d7f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a5ae9e2a22a909613abf30f4a4f8020972658d7f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.CommonSecurityDescriptor">
          <source>Represents a security descriptor.</source>
          <target state="translated">表示一个安全描述符。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.CommonSecurityDescriptor">
          <source>A security descriptor includes an owner, a primary group, a Discretionary Access Control List (DACL), and a System Access Control List (SACL).</source>
          <target state="translated">安全描述符包括所有者、 主要组、 自定义访问控制列表 (DACL) 和系统访问控制列表 (SACL)。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.CommonSecurityDescriptor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawSecurityDescriptor)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the new security descriptor is associated with a container object.</source>
          <target state="translated">如果新的安全性说明符与某个容器对象关联，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawSecurityDescriptor)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the new security descriptor is associated with a directory object.</source>
          <target state="translated">如果新的安全性说明符与某个目录对象关联，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawSecurityDescriptor)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RawSecurityDescriptor" /&gt;</ph> object from which to create the new <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">用来从中创建新 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.RawSecurityDescriptor" /&gt;</ph> 对象的 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawSecurityDescriptor)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> class from the specified <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.RawSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">从指定的 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 对象初始化 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.RawSecurityDescriptor" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawSecurityDescriptor)">
          <source>If the underlying security descriptor from which the new <ph id="ph1">&lt;xref:System.Security.AccessControl.RawSecurityDescriptor&gt;</ph> object is created contains <ph id="ph2">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</source>
          <target state="translated">如果从中的基础安全描述符新<ph id="ph1">&lt;xref:System.Security.AccessControl.RawSecurityDescriptor&gt;</ph>创建对象包含<ph id="ph2">`null`</ph>其自定义访问控制列表 (DACL)，允许每个人单一访问控制项 (ACE) 完全访问权限 (AEFA) 添加到 DACL。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawSecurityDescriptor)">
          <source>If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</source>
          <target state="translated">如果应用程序修改的 DACL 中向其添加 AEFA ACE 的安全描述符，如果该 DACL 保持不变，通过 DACL 已持久化 AEFA ACE。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawSecurityDescriptor)">
          <source>This can result in an application unintentionally allowing access to principals.</source>
          <target state="translated">这可能导致无意中允许主体访问应用程序。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.RawSecurityDescriptor)">
          <source>Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</source>
          <target state="translated">因此，应用程序应检查 AEFA ACE 存在，并将其删除才能修改任何安全描述符。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the new security descriptor is associated with a container object.</source>
          <target state="translated">如果新的安全性说明符与某个容器对象关联，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the new security descriptor is associated with a directory object.</source>
          <target state="translated">如果新的安全性说明符与某个目录对象关联，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.String)">
          <source>The SDDL string from which to create the new <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">用于创建新 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 对象的 SDDL 字符串。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> class from the specified Security Descriptor Definition Language (SDDL) string.</source>
          <target state="translated">使用指定的安全性说明符定义语言 (SDDL) 字符串初始化 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.String)">
          <source>If the underlying security descriptor from which the new <ph id="ph1">&lt;xref:System.Security.AccessControl.RawSecurityDescriptor&gt;</ph> object is created contains <ph id="ph2">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</source>
          <target state="translated">如果从中的基础安全描述符新<ph id="ph1">&lt;xref:System.Security.AccessControl.RawSecurityDescriptor&gt;</ph>创建对象包含<ph id="ph2">`null`</ph>其自定义访问控制列表 (DACL)，允许每个人单一访问控制项 (ACE) 完全访问权限 (AEFA) 添加到 DACL。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.String)">
          <source>If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</source>
          <target state="translated">如果应用程序修改的 DACL 中向其添加 AEFA ACE 的安全描述符，如果该 DACL 保持不变，通过 DACL 已持久化 AEFA ACE。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.String)">
          <source>This can result in an application unintentionally allowing access to principals.</source>
          <target state="translated">这可能导致无意中允许主体访问应用程序。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.String)">
          <source>Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</source>
          <target state="translated">因此，应用程序应检查 AEFA ACE 存在，并将其删除才能修改任何安全描述符。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the new security descriptor is associated with a container object.</source>
          <target state="translated">如果新的安全性说明符与某个容器对象关联，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the new security descriptor is associated with a directory object.</source>
          <target state="translated">如果新的安全性说明符与某个目录对象关联，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Byte[],System.Int32)">
          <source>The array of byte values from which to create the new <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">用于创建新的 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 对象的字节值数组。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Byte[],System.Int32)">
          <source>The offset in the <bpt id="p1">&lt;c&gt;</bpt>binaryForm<ept id="p1">&lt;/c&gt;</ept> array at which to begin copying.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>binaryForm<ept id="p1">&lt;/c&gt;</ept> 数组中的偏移量，在此位置开始复制。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Byte[],System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> class from the specified array of byte values.</source>
          <target state="translated">使用指定的字节值数组初始化 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Byte[],System.Int32)">
          <source>If the underlying security descriptor from which the new <ph id="ph1">&lt;xref:System.Security.AccessControl.RawSecurityDescriptor&gt;</ph> object is created contains <ph id="ph2">`null`</ph> for its discretionary access control list (DACL),a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</source>
          <target state="translated">如果从中的基础安全描述符新<ph id="ph1">&lt;xref:System.Security.AccessControl.RawSecurityDescriptor&gt;</ph>创建对象包含<ph id="ph2">`null`</ph>其自定义访问控制列表 (DACL)，允许每个人单一访问控制项 (ACE) 完全访问权限 (AEFA) 添加到 DACL。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Byte[],System.Int32)">
          <source>If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</source>
          <target state="translated">如果应用程序修改的 DACL 中向其添加 AEFA ACE 的安全描述符，如果该 DACL 保持不变，通过 DACL 已持久化 AEFA ACE。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Byte[],System.Int32)">
          <source>This can result in an application unintentionally allowing access to principals.</source>
          <target state="translated">这可能导致无意中允许主体访问应用程序。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Byte[],System.Int32)">
          <source>Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</source>
          <target state="translated">因此，应用程序应检查 AEFA ACE 存在，并将其删除才能修改任何安全描述符。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the new security descriptor is associated with a container object.</source>
          <target state="translated">如果新的安全性说明符与某个容器对象关联，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the new security descriptor is associated with a directory object.</source>
          <target state="translated">如果新的安全性说明符与某个目录对象关联，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)">
          <source>Flags that specify behavior of the new <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">指定新的 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 对象的行为的标志。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)">
          <source>The owner for the new <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">新 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 对象的所有者。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)">
          <source>The primary group for the new <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">新 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 对象的主要组。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)">
          <source>The System Access Control List (SACL) for the new <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">新的 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 对象的系统访问控制列表 (SACL)。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)">
          <source>The Discretionary Access Control List (DACL) for the new <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">新的 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 对象的自由访问控制列表 (DACL)。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> class from the specified information.</source>
          <target state="translated">使用指定信息初始化 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)">
          <source>If the underlying security descriptor from which the new <ph id="ph1">&lt;xref:System.Security.AccessControl.RawSecurityDescriptor&gt;</ph> object is created contains <ph id="ph2">`null`</ph> for its discretionary access control list (DACL), a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</source>
          <target state="translated">如果从中的基础安全描述符新<ph id="ph1">&lt;xref:System.Security.AccessControl.RawSecurityDescriptor&gt;</ph>创建对象包含<ph id="ph2">`null`</ph>其自定义访问控制列表 (DACL)，允许每个人单一访问控制项 (ACE) 完全访问权限 (AEFA) 添加到 DACL。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)">
          <source>If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</source>
          <target state="translated">如果应用程序修改的 DACL 中向其添加 AEFA ACE 的安全描述符，如果该 DACL 保持不变，通过 DACL 已持久化 AEFA ACE。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)">
          <source>This can result in an application unintentionally allowing access to principals.</source>
          <target state="translated">这可能导致无意中允许主体访问应用程序。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.#ctor(System.Boolean,System.Boolean,System.Security.AccessControl.ControlFlags,System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.SystemAcl,System.Security.AccessControl.DiscretionaryAcl)">
          <source>Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</source>
          <target state="translated">因此，应用程序应检查 AEFA ACE 存在，并将其删除才能修改任何安全描述符。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl(System.Byte,System.Int32)">
          <source>The revision level of the new <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DiscretionaryAcl" /&gt;</ph> object.</source>
          <target state="translated">新的 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DiscretionaryAcl" /&gt;</ph> 对象的修订级别。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl(System.Byte,System.Int32)">
          <source>The number of Access Control Entries (ACEs) this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DiscretionaryAcl" /&gt;</ph> object can contain.</source>
          <target state="translated">此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.DiscretionaryAcl" /&gt;</ph> 对象可包含的访问控制项 (ACE) 的数量。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl(System.Byte,System.Int32)">
          <source>This number is to be used only as a hint.</source>
          <target state="translated">此数量只作为一种提示。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl(System.Byte,System.Int32)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl" /&gt;</ph> property for this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> instance and sets the <ph id="ph3">&lt;see cref="F:System.Security.AccessControl.ControlFlags.DiscretionaryAclPresent" /&gt;</ph> flag.</source>
          <target state="translated">为此 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 实例设置 <ph id="ph1">&lt;see cref="P:System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl" /&gt;</ph> 属性，并设置 <ph id="ph3">&lt;see cref="F:System.Security.AccessControl.ControlFlags.DiscretionaryAclPresent" /&gt;</ph> 标志。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.AddDiscretionaryAcl(System.Byte,System.Int32)">
          <source>The constructor for the <ph id="ph1">&lt;xref:System.Security.AccessControl.DiscretionaryAcl&gt;</ph> uses the <ph id="ph2">&lt;xref:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Security.AccessControl.CommonSecurityDescriptor.IsDS%2A&gt;</ph> properties for this <ph id="ph4">&lt;xref:System.Security.AccessControl.CommonSecurityDescriptor&gt;</ph>.</source>
          <target state="translated">构造函数<ph id="ph1">&lt;xref:System.Security.AccessControl.DiscretionaryAcl&gt;</ph>使用<ph id="ph2">&lt;xref:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Security.AccessControl.CommonSecurityDescriptor.IsDS%2A&gt;</ph>此属性<ph id="ph4">&lt;xref:System.Security.AccessControl.CommonSecurityDescriptor&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.AddSystemAcl(System.Byte,System.Int32)">
          <source>The revision level of the new <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SystemAcl" /&gt;</ph> object.</source>
          <target state="translated">新的 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.SystemAcl" /&gt;</ph> 对象的修订级别。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.AddSystemAcl(System.Byte,System.Int32)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl" /&gt;</ph> property for this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> instance and sets the <ph id="ph3">&lt;see cref="F:System.Security.AccessControl.ControlFlags.SystemAclPresent" /&gt;</ph> flag.</source>
          <target state="translated">为此 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 实例设置 <ph id="ph1">&lt;see cref="P:System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl" /&gt;</ph> 属性，并设置 <ph id="ph3">&lt;see cref="F:System.Security.AccessControl.ControlFlags.SystemAclPresent" /&gt;</ph> 标志。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.AddSystemAcl(System.Byte,System.Int32)">
          <source>The constructor for the <ph id="ph1">&lt;xref:System.Security.AccessControl.SystemAcl&gt;</ph> uses the <ph id="ph2">&lt;xref:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Security.AccessControl.CommonSecurityDescriptor.IsDS%2A&gt;</ph> properties for this <ph id="ph4">&lt;xref:System.Security.AccessControl.CommonSecurityDescriptor&gt;</ph>.</source>
          <target state="translated">构造函数<ph id="ph1">&lt;xref:System.Security.AccessControl.SystemAcl&gt;</ph>使用<ph id="ph2">&lt;xref:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Security.AccessControl.CommonSecurityDescriptor.IsDS%2A&gt;</ph>此属性<ph id="ph4">&lt;xref:System.Security.AccessControl.CommonSecurityDescriptor&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.ControlFlags">
          <source>Gets values that specify behavior of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">获取指定 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 对象的行为的值。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.ControlFlags">
          <source>One or more values of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ControlFlags" /&gt;</ph> enumeration combined with a logical OR operation.</source>
          <target state="translated">与逻辑 OR 运算结合的 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.ControlFlags" /&gt;</ph> 枚举的一个或多个值。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl">
          <source>Gets or sets the discretionary access control list (DACL) for this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">获取或设置此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 对象的自由访问控制列表 (DACL)。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl">
          <source>The DACL contains access rules.</source>
          <target state="translated">DACL 包含访问规则。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl">
          <source>The DACL for this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 对象的 DACL。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl">
          <source>If this property is set to <ph id="ph1">`null`</ph>, a single access control entry (ACE) that allows everyone full access (AEFA) is added to the DACL.</source>
          <target state="translated">如果此属性设置为<ph id="ph1">`null`</ph>，允许每个人完全访问权限 (AEFA) 添加到 DACL 单一访问控制项 (ACE)。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl">
          <source>If an application modifies the DACL of a security descriptor to which an AEFA ACE has been added, the AEFA ACE is persisted with the DACL when that DACL is persisted.</source>
          <target state="translated">如果应用程序修改的 DACL 中向其添加 AEFA ACE 的安全描述符，如果该 DACL 保持不变，通过 DACL 已持久化 AEFA ACE。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl">
          <source>This can result in an application unintentionally allowing access to principals.</source>
          <target state="translated">这可能导致无意中允许主体访问应用程序。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.DiscretionaryAcl">
          <source>Because of this, an application should check for the existence of an AEFA ACE and remove it before modifying any security descriptor.</source>
          <target state="translated">因此，应用程序应检查 AEFA ACE 存在，并将其删除才能修改任何安全描述符。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.Group">
          <source>Gets or sets the primary group for this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">获取或设置此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 对象的主要组。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.Group">
          <source>The primary group for this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 对象的主要组。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer">
          <source>Gets a Boolean value that specifies whether the object associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object is a container object.</source>
          <target state="translated">获取一个布尔值，该值指定与此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 对象关联的对象是否为容器对象。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.IsContainer">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the object associated with this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object is a container object; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果与此 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 对象关联的对象是一个容器对象，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.IsDiscretionaryAclCanonical">
          <source>Gets a Boolean value that specifies whether the Discretionary Access Control List (DACL) associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object is in canonical order.</source>
          <target state="translated">获取一个布尔值，该值指定与此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 对象关联的自由访问控制列表 (DACL) 是否按规范顺序。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.IsDiscretionaryAclCanonical">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the DACL associated with this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object is in canonical order; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果与此 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 对象关联的 DACL 处于规范顺序，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.IsDS">
          <source>Gets a Boolean value that specifies whether the object associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object is a directory object.</source>
          <target state="translated">获取一个布尔值，该值指定与此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 对象关联的对象是否为目录对象。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.IsDS">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the object associated with this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object is a directory object; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果与此 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 对象关联的对象是一个目录对象，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.IsSystemAclCanonical">
          <source>Gets a Boolean value that specifies whether the System Access Control List (SACL) associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object is in canonical order.</source>
          <target state="translated">获取一个布尔值，该值指定与此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 对象关联的系统访问控制列表 (SACL) 是否按规范顺序。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.IsSystemAclCanonical">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the SACL associated with this <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object is in canonical order; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果与此 <ph id="ph2">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 对象关联的 SACL 处于规范顺序，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.Owner">
          <source>Gets or sets the owner of the object associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">获取或设置与此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 关联的对象的所有者。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.Owner">
          <source>The owner of the object associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">与此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 关联的对象的所有者。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.PurgeAccessControl(System.Security.Principal.SecurityIdentifier)">
          <source>The security identifier for which to remove access rules.</source>
          <target state="translated">要为其移除访问规则的安全性标识符。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.PurgeAccessControl(System.Security.Principal.SecurityIdentifier)">
          <source>Removes all access rules for the specified security identifier from the Discretionary Access Control List (DACL) associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">从与此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 对象关联的自由访问控制列表 (DACL) 中移除指定的安全性标识符的所有访问规则。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.PurgeAccessControl(System.Security.Principal.SecurityIdentifier)">
          <source>To avoid unintentionally allowing access to principals, applications should check for the existence of an allow everyone full access (AEFA) access control entry (ACE) and remove it before modifying a DACL.</source>
          <target state="translated">若要避免无意中允许主体访问，应用程序应检查是否存在的允许每个人都完全访问 (AEFA) 访问控制项 (ACE)，并将其删除之前修改 DACL。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.PurgeAudit(System.Security.Principal.SecurityIdentifier)">
          <source>The security identifier for which to remove audit rules.</source>
          <target state="translated">要为其移除审核规则的安全性标识符。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.PurgeAudit(System.Security.Principal.SecurityIdentifier)">
          <source>Removes all audit rules for the specified security identifier from the System Access Control List (SACL) associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">从与此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 对象关联的系统访问控制列表 (SACL) 中移除指定的安全性标识符的所有审核规则。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to protect the DACL from inheritance.</source>
          <target state="translated">若要保护 DACL 不被继承，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to keep inherited access rules in the DACL; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to remove inherited access rules from the DACL.</source>
          <target state="translated">若要在 DACL 中保留继承的访问规则，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；若要从 DACL 中移除继承的访问规则，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection(System.Boolean,System.Boolean)">
          <source>Sets the inheritance protection for the Discretionary Access Control List (DACL) associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">为与此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 对象关联的自由访问控制列表 (DACL) 设置继承保护。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.SetDiscretionaryAclProtection(System.Boolean,System.Boolean)">
          <source>DACLs that are protected do not inherit access rules from parent containers.</source>
          <target state="translated">受保护的 DACL 不会从父容器继承访问规则。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to protect the SACL from inheritance.</source>
          <target state="translated">若要保护 SACL 不被继承，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to keep inherited audit rules in the SACL; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to remove inherited audit rules from the SACL.</source>
          <target state="translated">若要在 SACL 中保留继承的审核规则，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；若要从 SACL 中移除继承的审核规则，则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection(System.Boolean,System.Boolean)">
          <source>Sets the inheritance protection for the System Access Control List (SACL) associated with this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">为与此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 对象关联的系统访问控制列表 (SACL) 设置继承保护。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.CommonSecurityDescriptor.SetSystemAclProtection(System.Boolean,System.Boolean)">
          <source>SACLs that are protected do not inherit audit rules from parent containers.</source>
          <target state="translated">受保护的 SACL 不会从父容器继承审核规则。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl">
          <source>Gets or sets the System Access Control List (SACL) for this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">获取或设置此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 对象的系统访问控制列表 (SACL)。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl">
          <source>The SACL contains audit rules.</source>
          <target state="translated">SACL 包含审核规则。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.CommonSecurityDescriptor.SystemAcl">
          <source>The SACL for this <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> object.</source>
          <target state="translated">此 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.CommonSecurityDescriptor" /&gt;</ph> 对象的 SACL。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>