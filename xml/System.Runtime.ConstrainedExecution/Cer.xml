<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Cer.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ac470bff59f11addb66604e46af25f3ade4f4d27.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ac470bff59f11addb66604e46af25f3ade4f4d27</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.ConstrainedExecution.Cer">
          <source>Specifies a method's behavior when called within a constrained execution region.</source>
          <target state="translated">在受约束的执行区域内调用时指定方法的行为。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.Cer">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.Cer&gt;</ph> enumeration specifies the behavior of a method, type, or assembly within a constrained execution region (CER).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.Cer&gt;</ph>枚举指定的方法、 类型或在受约束的执行区域 (CER) 内的程序集的行为。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.Cer">
          <source>Use one of the three available values to indicate that the entity will succeed, has no knowledge of a CER, or might (deterministically) be able to report success or failure.</source>
          <target state="translated">使用三个可用的值，以指示该实体将成功，之一 CER 不了解或者 （肯定） 可能能够报告成功或失败。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.Cer">
          <source>A CER provides guarantees that the region of code will execute uninterrupted even if an asynchronous exception such as an aborted thread out-of-memory exception, or stack overflow is raised.</source>
          <target state="translated">CER 提供了将执行的代码区域的保证不间断即使引发异步如中止的线程内存不足异常或堆栈溢出异常。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.Cer">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.Cer&gt;</ph> enumeration when specifying a constrained execution region for a method.</source>
          <target state="translated">下面的代码示例演示如何将<ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.Cer&gt;</ph>枚举指定方法的受约束的执行区域时。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.Cer">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">此代码示例摘自更大的示例为提供<ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.%23ctor%2A&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.MayFail">
          <source>In the face of exceptional conditions, the method might fail.</source>
          <target state="translated">在遇到异常情况时，此方法可能会失败。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.MayFail">
          <source>In this case, the method will report back to the calling method whether it succeeded or failed.</source>
          <target state="translated">在这种情况下，此方法将向调用方法报告它是否成功。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.MayFail">
          <source>The method must have a CER around the method body to ensure that it can report the return value.</source>
          <target state="translated">该方法的方法体周围必须有 CER 以确保它可以报告返回值。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.None">
          <source>The method, type, or assembly has no concept of a CER.</source>
          <target state="translated">方法、类型或程序集没有 CER 的概念。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.None">
          <source>It does not take advantage of CER guarantees.</source>
          <target state="translated">它不利用 CER 保证。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.None">
          <source>This implies the following:</source>
          <target state="translated">这意味着：</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.ConstrainedExecution.Cer.None">
          <source>In the face of exceptional conditions the method might fail.</source>
          <target state="translated">在遇到异常情况方法可能会失败。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.ConstrainedExecution.Cer.None">
          <source>The method might or might not report that it failed (it is non-deterministic).</source>
          <target state="translated">该方法可能或可能不失败的报告 （它是不确定）。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.ConstrainedExecution.Cer.None">
          <source>The method is not written with CERs in mind (which is the most likely scenario).</source>
          <target state="translated">该方法是编写未 Cer 记住 （这是最可能的方案）。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.ConstrainedExecution.Cer.None">
          <source>If a method, type, or assembly is not explicitly marked to succeed, it is implicitly marked as <ph id="ph1">`Cer.None`</ph>.</source>
          <target state="translated">如果方法、 类型或程序集未被显式标记为成功的隐式标记为<ph id="ph1">`Cer.None`</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.Success">
          <source>In the face of exceptional conditions, the method is guaranteed to succeed.</source>
          <target state="translated">在遇到异常情况时，保证此方法获得成功。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.Success">
          <source>You should always construct a CER around the method that is called, even when it is called from within a non-CER region.</source>
          <target state="translated">应始终在调用的方法周围构造 CER，即使是在非 CER 区域内调用该方法。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.Success">
          <source>A method is successful if it accomplishes what is intended.</source>
          <target state="translated">如果方法完成了其任务，则该方法成功。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="F:System.Runtime.ConstrainedExecution.Cer.Success">
          <source>For example, marking <ph id="ph1">&lt;see cref="P:System.Collections.ArrayList.Count" /&gt;</ph> with <bpt id="p1">&lt;c&gt;</bpt>ReliabilityContractAttribute(Cer.Success)<ept id="p1">&lt;/c&gt;</ept> implies that when it is run under a CER, it always returns a count of the number of elements in the <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> and it can never leave the internal fields in an undetermined state.</source>
          <target state="translated">例如，用 ReliabilityContractAttribute(Cer.Success)<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept> 标记 <ph id="ph1">&lt;see cref="P:System.Collections.ArrayList.Count" /&gt;</ph> 意味着当它在 CER 下运行时，它始终返回 <ph id="ph2">&lt;see cref="T:System.Collections.ArrayList" /&gt;</ph> 中的元素的数目计数，并且它永远不能将内部的字段保留为不确定状态。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>