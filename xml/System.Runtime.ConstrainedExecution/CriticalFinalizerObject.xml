<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CriticalFinalizerObject.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f1d2facb08d43ad654cb2b085fefa826d0c99cd7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f1d2facb08d43ad654cb2b085fefa826d0c99cd7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>Ensures that all finalization code in derived classes is marked as critical.</source>
          <target state="translated">确保派生类中的所有终止代码均标记为关键。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>Classes deriving from the <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt;</ph> class are implicitly treated as a constrained execution region (CER).</source>
          <target state="translated">类派生自<ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt;</ph>类隐式视为受约束的执行区域 (CER)。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>This requires code in the finalizer to only call code with a strong reliability contract.</source>
          <target state="translated">这要求在终结器仅调用具有高可靠性协定的代码中的代码。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>For more information about CERs, see the <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution&gt;</ph> namespace.</source>
          <target state="translated">有关 Cer 的详细信息，请参阅<ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution&gt;</ph>命名空间。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>In classes derived from the <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt;</ph> class, the common language runtime (CLR) guarantees that all critical finalization code will be given the opportunity to execute, provided the finalizer follows the rules for a CER, even in situations where the CLR forcibly unloads an application domain or aborts a thread.</source>
          <target state="translated">从派生的类中<ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt;</ph>类，公共语言运行时 (CLR) 可保证，所有关键终止代码将有机会若要执行，提供终结器遵循的规则为 CER，即使在情况下，CLR强制卸载应用程序域或中止的线程。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>If a finalizer violates the rules for a CER, it might not successfully execute.</source>
          <target state="translated">如果终结器 cer 违反规则，它可能无法成功执行。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>In addition, the CLR establishes a weak ordering among normal and critical finalizers: for objects reclaimed by garbage collection at the same time, all the noncritical finalizers are called before any of the critical finalizers.</source>
          <target state="translated">此外，CLR 建立之间正常和关键终结器弱排序： 对于通过一次垃圾回收回收的对象，所有非关键的终结器调用任何关键终结器之前。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>For example, a class such as <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph>, which holds data in the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.SafeHandle&gt;</ph> class that is derived from <ph id="ph3">&lt;xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt;</ph>, can run a standard finalizer to flush out existing buffered data.</source>
          <target state="translated">例如，如类<ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph>，用于存储中的数据<ph id="ph2">&lt;xref:System.Runtime.InteropServices.SafeHandle&gt;</ph>派生自的类<ph id="ph3">&lt;xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt;</ph>，可以运行一个标准的终结器清空现有的缓冲数据。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>In most cases, you do not need to write classes that derive from the <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt;</ph> class.</source>
          <target state="translated">在大多数情况下，不需要编写派生自的类<ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt;</ph>类。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>The .NET Framework class library provides two classes, <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SafeHandle&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.CriticalHandle&gt;</ph>, that provide critical finalization functionality for handle resources.</source>
          <target state="translated">.NET Framework 类库提供了两个类，<ph id="ph1">&lt;xref:System.Runtime.InteropServices.SafeHandle&gt;</ph>和<ph id="ph2">&lt;xref:System.Runtime.InteropServices.CriticalHandle&gt;</ph>，句柄资源提供关键终止功能。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>Furthermore, the .NET Framework provides a set of prewritten classes derived from the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SafeHandle&gt;</ph> class, and this set is located in the <ph id="ph2">&lt;xref:Microsoft.Win32.SafeHandles&gt;</ph> namespace.</source>
          <target state="translated">此外，.NET Framework 提供一组预写类派生自<ph id="ph1">&lt;xref:System.Runtime.InteropServices.SafeHandle&gt;</ph>类，并且此组位于<ph id="ph2">&lt;xref:Microsoft.Win32.SafeHandles&gt;</ph>命名空间。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>These classes are designed to provide common functionality for supporting file and operating system handles.</source>
          <target state="translated">这些类旨在提供通用功能的支持文件和操作系统句柄。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:Microsoft.Win32.SafeHandles.SafeFileHandle&gt;</ph> class to provide critical finalization for the standard input and output streams.</source>
          <target state="translated">下面的代码示例演示了利用<ph id="ph1">&lt;xref:Microsoft.Win32.SafeHandles.SafeFileHandle&gt;</ph>类以提供的标准输入和输出流的关键终止。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>The <ph id="ph1">&lt;xref:Microsoft.Win32.SafeHandles.SafeFileHandle&gt;</ph>, derived from the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.SafeHandle&gt;</ph> class, is passed to the file stream in the <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:Microsoft.Win32.SafeHandles.SafeFileHandle&gt;</ph>派生自<ph id="ph2">&lt;xref:System.Runtime.InteropServices.SafeHandle&gt;</ph>类时，传递到中的文件流<ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph>构造函数。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>for permission to call unmanaged code.</source>
          <target state="translated">表示调用非托管的代码的权限。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">安全操作： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>for full trust for inheritors.</source>
          <target state="translated">对继承者的完全信任。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
          <source>This class cannot be used by partially trusted code.</source>
          <target state="translated">此类不能由部分受信任的代码使用。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor">
          <source>for permission to call unmanaged code.</source>
          <target state="translated">表示调用非托管的代码的权限。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor">
          <source>Security action: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">安全操作： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">关联的枚举： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor">
          <source>for full trust for inheritors.</source>
          <target state="translated">对继承者的完全信任。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ConstrainedExecution.CriticalFinalizerObject.#ctor">
          <source>This class cannot be used by partially trusted code.</source>
          <target state="translated">此类不能由部分受信任的代码使用。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize">
          <source>Releases all the resources used by the <ph id="ph1">&lt;see cref="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" /&gt;</ph> class.</source>
          <target state="translated">释放由 <ph id="ph1">&lt;see cref="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" /&gt;</ph> 类使用的所有资源。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize">
          <source>The finalizer for any types deriving from <ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt;</ph> is given the opportunity to execute and will not be aborted, assuming the finalizer correctly follows the rules for a constrained execution region (CER).</source>
          <target state="translated">从派生的任何类型的终结器<ph id="ph1">&lt;xref:System.Runtime.ConstrainedExecution.CriticalFinalizerObject&gt;</ph>有机会执行并不会中止，假定终结器正确遵守受约束的执行区域 (CER) 的规则。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>