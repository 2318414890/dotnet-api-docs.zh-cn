<Type Name="ButtonBase" FullName="System.Windows.Controls.Primitives.ButtonBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fa5f9a14186fa0954d3fb8dffb82163b3f0b0827" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52592813" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ButtonBase : System.Windows.Controls.ContentControl, System.Windows.Input.ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract ButtonBase extends System.Windows.Controls.ContentControl implements class System.Windows.Input.ICommandSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Primitives.ButtonBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ButtonBase&#xA;Inherits ContentControl&#xA;Implements ICommandSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class ButtonBase abstract : System::Windows::Controls::ContentControl, System::Windows::Input::ICommandSource" />
  <TypeSignature Language="F#" Value="type ButtonBase = class&#xA;    inherit ContentControl&#xA;    interface ICommandSource" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Input.ICommandSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Button)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="44538-101">表示所有 <see cref="T:System.Windows.Controls.Button" /> 控件的基类。</span>
      <span class="sxs-lookup">
        <span data-stu-id="44538-101">Represents the base class for all <see cref="T:System.Windows.Controls.Button" /> controls.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44538-102">处理<xref:System.Windows.Controls.Primitives.ButtonBase.Click>事件来响应用户单击时<xref:System.Windows.Controls.Primitives.ButtonBase>。</span><span class="sxs-lookup"><span data-stu-id="44538-102">Handle the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event to respond when the user clicks a <xref:System.Windows.Controls.Primitives.ButtonBase>.</span></span> <span data-ttu-id="44538-103">用户可以提高<xref:System.Windows.Controls.Primitives.ButtonBase.Click>通过使用事件<xref:System.Windows.Controls.AccessText>或通过在控件有焦点时按 ENTER 或空格键。</span><span class="sxs-lookup"><span data-stu-id="44538-103">The user can raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event by using an <xref:System.Windows.Controls.AccessText> or by pressing ENTER or the SPACEBAR when the control has focus.</span></span>  <span data-ttu-id="44538-104">当用户按空格键后，控件集中<xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A>到`true`和捕获鼠标。</span><span class="sxs-lookup"><span data-stu-id="44538-104">When the user presses the SPACEBAR, the control sets <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> to `true` and captures the mouse.</span></span>  <span data-ttu-id="44538-105">将结果，该控件如引发鼠标事件<xref:System.Windows.UIElement.MouseEnter>和<xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>。</span><span class="sxs-lookup"><span data-stu-id="44538-105">As a result, the control will raise mouse events such as <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span></span> <span data-ttu-id="44538-106">请注意，使用<xref:System.Windows.Controls.AccessText>或 ENTER 不会更改<xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A>或捕获鼠标，但它确实增加<xref:System.Windows.Controls.Primitives.ButtonBase.Click>事件。</span><span class="sxs-lookup"><span data-stu-id="44538-106">Note that using the <xref:System.Windows.Controls.AccessText> or ENTER does not change <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> or capture the mouse, but it does raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 <span data-ttu-id="44538-107"><xref:System.Windows.Controls.Primitives.ButtonBase>设置<xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A>附加属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="44538-107">The <xref:System.Windows.Controls.Primitives.ButtonBase> sets the <xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A> attached property to `true`.</span></span>  
  
 <span data-ttu-id="44538-108"><xref:System.Windows.Controls.Primitives.ButtonBase> 将 <xref:System.Windows.UIElement.IsInputMethodEnabled%2A> 属性设置为 `false`。</span><span class="sxs-lookup"><span data-stu-id="44538-108">The <xref:System.Windows.Controls.Primitives.ButtonBase> sets the <xref:System.Windows.UIElement.IsInputMethodEnabled%2A> property to `false`.</span></span>  
  
 <span data-ttu-id="44538-109">一个<xref:System.Windows.Controls.Primitives.ButtonBase>是<xref:System.Windows.Controls.ContentControl>，这意味着它可以包含任何类型 （如字符串、 图像或一个面板） 的单个对象。</span><span class="sxs-lookup"><span data-stu-id="44538-109">A <xref:System.Windows.Controls.Primitives.ButtonBase> is a <xref:System.Windows.Controls.ContentControl>, which means that it can contain a single object of any type (such as a string, an image, or a panel).</span></span> <span data-ttu-id="44538-110">有关更多信息，请参见 <xref:System.Windows.Controls.ContentControl> 类。</span><span class="sxs-lookup"><span data-stu-id="44538-110">For more information, see the <xref:System.Windows.Controls.ContentControl> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ButtonBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ButtonBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="44538-111">初始化 <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-111">Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Primitives.ButtonBase.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : System.Windows.RoutedEventHandler " Usage="member this.Click : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44538-112">在单击 <see cref="T:System.Windows.Controls.Button" /> 时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-112">Occurs when a <see cref="T:System.Windows.Controls.Button" /> is clicked.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44538-113">用户可以提高<xref:System.Windows.Controls.Primitives.ButtonBase.Click>通过使用事件<xref:System.Windows.Controls.AccessText>或通过在控件有焦点时按 ENTER 或空格键。</span><span class="sxs-lookup"><span data-stu-id="44538-113">The user can raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event by using an <xref:System.Windows.Controls.AccessText> or by pressing ENTER or the SPACEBAR when the control has focus.</span></span>  <span data-ttu-id="44538-114">当用户按空格键后，控件集中<xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A>到`true`和捕获鼠标。</span><span class="sxs-lookup"><span data-stu-id="44538-114">When the user presses the SPACEBAR, the control sets <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> to `true` and captures the mouse.</span></span>  <span data-ttu-id="44538-115">将结果，该控件如引发鼠标事件<xref:System.Windows.UIElement.MouseEnter>和<xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>。</span><span class="sxs-lookup"><span data-stu-id="44538-115">As a result, the control will raise mouse events such as <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span></span> <span data-ttu-id="44538-116">请注意，使用<xref:System.Windows.Controls.AccessText>或 ENTER 不会更改<xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A>或捕获鼠标，但它确实增加<xref:System.Windows.Controls.Primitives.ButtonBase.Click>事件。</span><span class="sxs-lookup"><span data-stu-id="44538-116">Note that using the <xref:System.Windows.Controls.AccessText> or ENTER does not change <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> or capture the mouse, but it does raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 <span data-ttu-id="44538-117"><xref:System.Windows.Controls.Primitives.ButtonBase>标记<xref:System.Windows.UIElement.MouseLeftButtonDown>事件，如在中处理<xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A>方法并引发<xref:System.Windows.Controls.Primitives.ButtonBase.Click>事件。</span><span class="sxs-lookup"><span data-stu-id="44538-117">The <xref:System.Windows.Controls.Primitives.ButtonBase> marks the <xref:System.Windows.UIElement.MouseLeftButtonDown> event as handled in the <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> method and raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span> <span data-ttu-id="44538-118">因此，<xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A>事件将永远不会继承的控件发生<xref:System.Windows.Controls.Primitives.ButtonBase>。</span><span class="sxs-lookup"><span data-stu-id="44538-118">Hence, the <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> event will never occur for a control that inherits from <xref:System.Windows.Controls.Primitives.ButtonBase>.</span></span> <span data-ttu-id="44538-119">相反，将附加到事件处理程序<xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>事件或调用<xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29>与`handledEventsToo`设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="44538-119">Instead, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
<a name="routedEventInfo_Click"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="44538-120">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="44538-120">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="44538-121">标识符字段</span><span class="sxs-lookup"><span data-stu-id="44538-121">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.ClickEvent>|  
|<span data-ttu-id="44538-122">路由策略</span><span class="sxs-lookup"><span data-stu-id="44538-122">Routing strategy</span></span>|<span data-ttu-id="44538-123">浮升</span><span class="sxs-lookup"><span data-stu-id="44538-123">Bubbling</span></span>|  
|<span data-ttu-id="44538-124">委托</span><span class="sxs-lookup"><span data-stu-id="44538-124">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="44538-125">下面的示例显示了三种不同方式响应的单击的三个按钮。</span><span class="sxs-lookup"><span data-stu-id="44538-125">The following example shows three buttons that respond to clicks in three different ways.</span></span>  
  
-   <span data-ttu-id="44538-126">悬停时的用户将鼠标悬停在按钮上时的第一个按钮更改颜色</span><span class="sxs-lookup"><span data-stu-id="44538-126">Hover - the first button changes colors when the user hovers with the mouse over the button</span></span>  
  
-   <span data-ttu-id="44538-127">按下的第二个按钮要求在按钮的鼠标指针时按下鼠标。</span><span class="sxs-lookup"><span data-stu-id="44538-127">Press - the second button requires that the mouse be pressed while the mouse pointer is in the button.</span></span>  
  
-   <span data-ttu-id="44538-128">发布的第三个不重置按钮的背景色，直到鼠标是按下并释放按钮中。</span><span class="sxs-lookup"><span data-stu-id="44538-128">Release - the third does not reset the background color of the buttons until the mouse is pressed and released in the button.</span></span>  
  
 [!code-xaml[ClickModes_snip#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ClickModes_snip/CSharp/Pane1.xaml#1)]  
  
 [!code-csharp[ClickModes_snip#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ClickModes_snip/CSharp/Pane1.xaml.cs#2)]
 [!code-vb[ClickModes_snip#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClickModes_snip/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClickEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ClickEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ClickEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.ClickEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClickEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ClickEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClickEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.Primitives.ButtonBase.ClickEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44538-129">标识 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 路由事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-129">Identifies the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44538-130">此事件对应于鼠标左键单击。</span><span class="sxs-lookup"><span data-stu-id="44538-130">This event corresponds to a left mouse button click.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClickMode">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ClickMode ClickMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ClickMode ClickMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ClickMode As ClickMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ClickMode ClickMode { System::Windows::Controls::ClickMode get(); void set(System::Windows::Controls::ClickMode value); };" />
      <MemberSignature Language="F#" Value="member this.ClickMode : System.Windows.Controls.ClickMode with get, set" Usage="System.Windows.Controls.Primitives.ButtonBase.ClickMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ClickMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44538-131">获取或设置 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 事件何时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-131">Gets or sets when the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event occurs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44538-132">
            <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 事件何时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-132">When the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event occurs.</span>
          </span>
          <span data-ttu-id="44538-133">默认值为 <see cref="F:System.Windows.Controls.ClickMode.Release" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-133">The default value is <see cref="F:System.Windows.Controls.ClickMode.Release" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_ClickMode"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="44538-134">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="44538-134">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="44538-135">标识符字段</span><span class="sxs-lookup"><span data-stu-id="44538-135">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty>|  
|<span data-ttu-id="44538-136">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="44538-136">Metadata properties set to `true`</span></span>|<span data-ttu-id="44538-137">无</span><span class="sxs-lookup"><span data-stu-id="44538-137">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClickModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ClickModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ClickModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClickModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ClickModeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClickModeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44538-138">标识 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-138">Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.Command" />
      <MemberSignature Language="VB.NET" Value="Public Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); void set(System::Windows::Input::ICommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Windows.Input.ICommand with get, set" Usage="System.Windows.Controls.Primitives.ButtonBase.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44538-139">获取或设置在按下按钮时调用的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-139">Gets or sets the command to invoke when this button is pressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44538-140">当按此按钮时要调用的命令。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-140">A command to invoke when this button is pressed.</span>
          </span>
          <span data-ttu-id="44538-141">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-141">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44538-142">此属性用于将命令与特定按钮实例相关联。</span><span class="sxs-lookup"><span data-stu-id="44538-142">This property is used to associate a command with a particular button instance.</span></span>  
  
 <span data-ttu-id="44538-143">在中[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]，此属性通常设置为静态命令值从一个现有命令库，如<xref:System.Windows.Input.ApplicationCommands>或<xref:System.Windows.Input.NavigationCommands>。</span><span class="sxs-lookup"><span data-stu-id="44538-143">In [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], this property is most often set to be a static command value from one of the existing command libraries, such as <xref:System.Windows.Input.ApplicationCommands> or <xref:System.Windows.Input.NavigationCommands>.</span></span> <span data-ttu-id="44538-144">有关详细信息，请参阅[命令概述](~/docs/framework/wpf/advanced/commanding-overview.md)或<xref:System.Windows.Input.ICommand>。</span><span class="sxs-lookup"><span data-stu-id="44538-144">For details, see [Commanding Overview](~/docs/framework/wpf/advanced/commanding-overview.md) or <xref:System.Windows.Input.ICommand>.</span></span>  
  
<a name="xamlAttributeUsage_Command"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="44538-145">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="44538-145">XAML Attribute Usage</span></span>  
  
```  
<object Command="commandName"/>  
```  
  
<a name="xamlValues_Command"></a>   
## <a name="xaml-values"></a><span data-ttu-id="44538-146">XAML 值</span><span class="sxs-lookup"><span data-stu-id="44538-146">XAML Values</span></span>  
 <span data-ttu-id="44538-147">*commandName*</span><span class="sxs-lookup"><span data-stu-id="44538-147">*commandName*</span></span>  
 <span data-ttu-id="44538-148">要按此按钮时调用的命令。</span><span class="sxs-lookup"><span data-stu-id="44538-148">The command to invoke when this button is pressed.</span></span>  
  
<a name="dependencyPropertyInfo_Command"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="44538-149">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="44538-149">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="44538-150">标识符字段</span><span class="sxs-lookup"><span data-stu-id="44538-150">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.CommandProperty>|  
|<span data-ttu-id="44538-151">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="44538-151">Metadata properties set to `true`</span></span>|<span data-ttu-id="44538-152">无</span><span class="sxs-lookup"><span data-stu-id="44538-152">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandParameter">
      <MemberSignature Language="C#" Value="public object CommandParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandParameter { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandParameter : obj with get, set" Usage="System.Windows.Controls.Primitives.ButtonBase.CommandParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44538-153">获取或设置要传递给 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> 属性的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-153">Gets or sets the parameter to pass to the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44538-154">要传递给 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> 属性的参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-154">Parameter to pass to the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44538-155">命令库中的大多数现有命令不使用命令参数。</span><span class="sxs-lookup"><span data-stu-id="44538-155">Most existing commands from the command libraries do not use a command parameter.</span></span> <span data-ttu-id="44538-156">命令参数中使用的命令，其中的大多数采取某些基元类型值，如整数或字符串参数。</span><span class="sxs-lookup"><span data-stu-id="44538-156">Of the commands that do use a command parameter, most of these take a parameter with some primitive type value, such as an integer or a string.</span></span> <span data-ttu-id="44538-157">但是，就可以创建自定义命令，该命令需要非基元类型作为命令参数。</span><span class="sxs-lookup"><span data-stu-id="44538-157">However, it is possible to create a custom command where that command expects a nonprimitive type as its command parameter.</span></span> <span data-ttu-id="44538-158">有关自定义命令这种情况下，设置<xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A>在代码中可能需要一个新的或现有的对象实例。</span><span class="sxs-lookup"><span data-stu-id="44538-158">For a custom command case like this, setting <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> in code might require a new or existing object instance.</span></span> <span data-ttu-id="44538-159">设置<xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A>标记中可能需要属性元素语法，其中填充属性元素语法的对象元素是该命令需要的类型的新元素。</span><span class="sxs-lookup"><span data-stu-id="44538-159">Setting <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> in markup might require property element syntax, where the object element filling the property element syntax is a new element of the type expected by that command.</span></span> <span data-ttu-id="44538-160">此外，在标记中的设置可能需要通过标记扩展对现有对象的引用 (通常与进行此类引用[绑定标记扩展](~/docs/framework/wpf/advanced/binding-markup-extension.md)或[StaticResource 标记扩展](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)).</span><span class="sxs-lookup"><span data-stu-id="44538-160">Alternatively, setting in markup might require a reference through a markup extension to an existing object (typically these references are made with [Binding Markup Extension](~/docs/framework/wpf/advanced/binding-markup-extension.md) or [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)).</span></span>  
  
<a name="xamlAttributeUsage_CommandParameter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="44538-161">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="44538-161">XAML Attribute Usage</span></span>  
  
```  
<object CommandParameter="commandParameter" />  
```  
  
<a name="xamlValues_CommandParameter"></a>   
## <a name="xaml-values"></a><span data-ttu-id="44538-162">XAML 值</span><span class="sxs-lookup"><span data-stu-id="44538-162">XAML Values</span></span>  
 <span data-ttu-id="44538-163">*commandParameter*</span><span class="sxs-lookup"><span data-stu-id="44538-163">*commandParameter*</span></span>  
 <span data-ttu-id="44538-164">与特定的命令中指定相同类型的值<xref:System.Windows.Controls.Primitives.ButtonBase.Command%2A>属性所需。</span><span class="sxs-lookup"><span data-stu-id="44538-164">A value of the same type as the particular command specified in the <xref:System.Windows.Controls.Primitives.ButtonBase.Command%2A> property expects.</span></span> <span data-ttu-id="44538-165">如果使用现有命令库命令，请参阅该命令库文档[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]使用情况信息，包括哪种类型的<xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A>命令需要。</span><span class="sxs-lookup"><span data-stu-id="44538-165">If you use an existing command library command, see that command library's documentation for [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage information, including which type of <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> the command expects.</span></span> <span data-ttu-id="44538-166">如果使用自定义命令，请参阅备注。</span><span class="sxs-lookup"><span data-stu-id="44538-166">If you use a custom command, see Remarks.</span></span>  
  
<a name="dependencyPropertyInfo_CommandParameter"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="44538-167">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="44538-167">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="44538-168">标识符字段</span><span class="sxs-lookup"><span data-stu-id="44538-168">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty>|  
|<span data-ttu-id="44538-169">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="44538-169">Metadata properties set to `true`</span></span>|<span data-ttu-id="44538-170">无</span><span class="sxs-lookup"><span data-stu-id="44538-170">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandParameterProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandParameterProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandParameterProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandParameterProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandParameterProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandParameterProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44538-171">标识 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-171">Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.CommandProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.ButtonBase.CommandProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44538-172">标识路由的 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> 依赖属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-172">Identifies the routed <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTarget">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement CommandTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement CommandTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTarget As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ CommandTarget { System::Windows::IInputElement ^ get(); void set(System::Windows::IInputElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandTarget : System.Windows.IInputElement with get, set" Usage="System.Windows.Controls.Primitives.ButtonBase.CommandTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44538-173">获取或设置要引发指定命令的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-173">Gets or sets the element on which to raise the specified command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44538-174">要对其引发命令的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-174">Element on which to raise a command.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44538-175"><xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget%2A>属性不能用于定义<xref:System.Windows.UIElement>。</span><span class="sxs-lookup"><span data-stu-id="44538-175">The <xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget%2A> property cannot be used to define a <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="44538-176"><xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget%2A>属性提供对应用程序中某一位置已定义的元素的引用。</span><span class="sxs-lookup"><span data-stu-id="44538-176">The <xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget%2A> property provides a reference to an element that is already defined somewhere in your application.</span></span>  
  
<a name="xamlAttributeUsage_Target"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="44538-177">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="44538-177">XAML Attribute Usage</span></span>  
  
```  
<ButtonBase CommandTarget="{Binding ElementName= elementName }"/>  
```  
  
<a name="xamlValues_CommandTarget"></a>   
## <a name="xaml-values"></a><span data-ttu-id="44538-178">XAML 值</span><span class="sxs-lookup"><span data-stu-id="44538-178">XAML Values</span></span>  
 <span data-ttu-id="44538-179">*elementName*</span><span class="sxs-lookup"><span data-stu-id="44538-179">*elementName*</span></span>  
 <span data-ttu-id="44538-180">名称<xref:System.Windows.IInputElement>收到命令。</span><span class="sxs-lookup"><span data-stu-id="44538-180">The name of <xref:System.Windows.IInputElement> that receives the command.</span></span>  
  
<a name="dependencyPropertyInfo_CommandTarget"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="44538-181">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="44538-181">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="44538-182">标识符字段</span><span class="sxs-lookup"><span data-stu-id="44538-182">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty>|  
|<span data-ttu-id="44538-183">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="44538-183">Metadata properties set to `true`</span></span>|<span data-ttu-id="44538-184">无</span><span class="sxs-lookup"><span data-stu-id="44538-184">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandTargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandTargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandTargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandTargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandTargetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandTargetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44538-185">标识 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-185">Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected override bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property IsEnabledCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsEnabledCore { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabledCore : bool" Usage="System.Windows.Controls.Primitives.ButtonBase.IsEnabledCore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44538-186">获取 <see cref="P:System.Windows.ContentElement.IsEnabled" /> 属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-186">Gets the value of the <see cref="P:System.Windows.ContentElement.IsEnabled" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44538-187">如果已启用该控件，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-187">
              <see langword="true" /> if the control is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44538-188">如果您选择重写此实现，请确保调用基方法。</span><span class="sxs-lookup"><span data-stu-id="44538-188">If you choose to override this implementation, make certain that you call the base method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressed">
      <MemberSignature Language="C#" Value="public bool IsPressed { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPressed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:  property bool IsPressed {  public:&#xA;bool get(); protected:&#xA; void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsPressed : bool with get, set" Usage="System.Windows.Controls.Primitives.ButtonBase.IsPressed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44538-189">获取一个值，该值指示 <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> 当前是否已被激活。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-189">Gets a value that indicates whether a <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> is currently activated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44538-190">如果 <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> 已激活，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-190">
              <see langword="true" /> if the <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> is activated; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="44538-191">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-191">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44538-192"><xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> 按钮，该值指示鼠标左键的状态或到按钮上方按空格键。</span><span class="sxs-lookup"><span data-stu-id="44538-192"><xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is the state of a button that indicates the left mouse button or SPACEBAR is pressed over the button.</span></span> <span data-ttu-id="44538-193">当<xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A>是`true`，控件捕获鼠标。</span><span class="sxs-lookup"><span data-stu-id="44538-193">When <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is `true`, the control captures the mouse.</span></span>  <span data-ttu-id="44538-194">将结果，该控件如引发鼠标事件<xref:System.Windows.UIElement.MouseEnter>和<xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>。</span><span class="sxs-lookup"><span data-stu-id="44538-194">As a result, the control will raise mouse events such as <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span></span> <span data-ttu-id="44538-195">请注意，使用<xref:System.Windows.Controls.AccessText>或 ENTER 不会更改<xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A>或捕获鼠标，但的确能引发<xref:System.Windows.Controls.Primitives.ButtonBase.Click>事件。</span><span class="sxs-lookup"><span data-stu-id="44538-195">Note that using the <xref:System.Windows.Controls.AccessText> or ENTER does not change <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> or capture the mouse, but is does raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 <span data-ttu-id="44538-196">从.NET Framework 版本 3.0 Service Pack 1，<xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A>具有受保护的资源库。</span><span class="sxs-lookup"><span data-stu-id="44538-196">Starting with the .NET Framework version 3.0 Service Pack 1, <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> has a protected setter.</span></span> <span data-ttu-id="44538-197">若要使用此功能，你的应用程序应面向.NET Framework 3.5 版。</span><span class="sxs-lookup"><span data-stu-id="44538-197">To use this functionality, your application should target the .NET Framework version 3.5.</span></span>  <span data-ttu-id="44538-198">有关详细信息，请参见[版本和依赖关系](~/docs/framework/migration-guide/versions-and-dependencies.md)。</span><span class="sxs-lookup"><span data-stu-id="44538-198">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsPressed"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="44538-199">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="44538-199">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="44538-200">标识符字段</span><span class="sxs-lookup"><span data-stu-id="44538-200">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty>|  
|<span data-ttu-id="44538-201">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="44538-201">Metadata properties set to `true`</span></span>|<span data-ttu-id="44538-202">无</span><span class="sxs-lookup"><span data-stu-id="44538-202">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="44538-203">此示例演示如何使用<xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A>触发器样式中的属性。</span><span class="sxs-lookup"><span data-stu-id="44538-203">This example shows how to use the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property in a trigger style.</span></span>  
  
 [!code-xaml[BtnColor#9](~/samples/snippets/csharp/VS_Snippets_Wpf/BtnColor/CSharp/Pane1.xaml#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsPressedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsPressedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsPressedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsPressedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsPressedProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44538-204">标识 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-204">Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAccessKey">
      <MemberSignature Language="C#" Value="protected override void OnAccessKey (System.Windows.Input.AccessKeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAccessKey(class System.Windows.Input.AccessKeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAccessKey (e As AccessKeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnAccessKey(System::Windows::Input::AccessKeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnAccessKey : System.Windows.Input.AccessKeyEventArgs -&gt; unit" Usage="buttonBase.OnAccessKey e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.AccessKeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="44538-205">
            <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> 事件的事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-205">The event data for the <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44538-206">在调用此控件的 <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> 时响应。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-206">Responds when the <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> for this control is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44538-207">如果<xref:System.Windows.Input.AccessKeyEventArgs.IsMultiple%2A>是`true`，此方法调用基实现，使此控件具有焦点。</span><span class="sxs-lookup"><span data-stu-id="44538-207">If <xref:System.Windows.Input.AccessKeyEventArgs.IsMultiple%2A> is `true`, this method calls the base implementation, which gives this control focus.</span></span>  <span data-ttu-id="44538-208">否则，此方法将引发<xref:System.Windows.Controls.Primitives.ButtonBase.Click>事件。</span><span class="sxs-lookup"><span data-stu-id="44538-208">Otherwise, this method raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick();" />
      <MemberSignature Language="F#" Value="abstract member OnClick : unit -&gt; unit&#xA;override this.OnClick : unit -&gt; unit" Usage="buttonBase.OnClick " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="44538-209">引发 <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> 路由事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-209">Raises the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44538-210">该控件将引发<xref:System.Windows.Controls.Primitives.ButtonBase.Click>通过调用事件<xref:System.Windows.UIElement.RaiseEvent%2A>。</span><span class="sxs-lookup"><span data-stu-id="44538-210">The control raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event by calling <xref:System.Windows.UIElement.RaiseEvent%2A>.</span></span> <span data-ttu-id="44538-211">有关详细信息，请参阅[路由事件概述](~/docs/framework/wpf/advanced/routed-events-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="44538-211">For more information, see [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="44538-212">重写时<see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" />在派生类中，请务必调用基类的<see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" />方法，以便已注册的委托接收事件。</span>
            <span class="sxs-lookup">
              <span data-stu-id="44538-212">When overriding <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnIsPressedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsPressedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsPressedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsPressedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsPressedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsPressedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsPressedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="buttonBase.OnIsPressedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="44538-213">
            <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> 的数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-213">The data for <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44538-214">当 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> 属性更改时调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-214">Called when the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="buttonBase.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="44538-215">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-215">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44538-216">为在此控件有焦点的情况下用户按任意键时发生的 <see cref="E:System.Windows.UIElement.KeyDown" /> 路由事件提供类处理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-216">Provides class handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> routed event that occurs when the user presses a key while this control has focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44538-217">此实现将标记<xref:System.Windows.UIElement.KeyDown>事件处理的设置<xref:System.Windows.RoutedEventArgs.Handled%2A>的事件数据的属性`true`时<xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A>未设置为<xref:System.Windows.Controls.ClickMode.Hover>，并且在以下情况之一成立：</span><span class="sxs-lookup"><span data-stu-id="44538-217">This implementation marks the <xref:System.Windows.UIElement.KeyDown> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode.Hover> and one of the following cases are true:</span></span>  
  
-   <span data-ttu-id="44538-218">用户按下空格键。</span><span class="sxs-lookup"><span data-stu-id="44538-218">The user presses the SPACEBAR.</span></span>  
  
-   <span data-ttu-id="44538-219">用户按下 ENTER 键和<xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A>是`true`此控件。</span><span class="sxs-lookup"><span data-stu-id="44538-219">The user presses ENTER and <xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A> is `true` for this control.</span></span>  
  
 <span data-ttu-id="44538-220">在所有其他情况下，此实现不会更改处理的状态 (<xref:System.Windows.RoutedEventArgs.Handled%2A>属性) 的<xref:System.Windows.UIElement.KeyDown>事件数据。</span><span class="sxs-lookup"><span data-stu-id="44538-220">In all other cases, this implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.KeyDown> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="44538-221">如果重写<see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />，均应调用基实现你<see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="44538-221">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" /> implementation.</span>
            </span>
            <span data-ttu-id="44538-222">无法调用基实现可防止基类处理具有类处理程序，这可能会改变最终类的运行时行为的事件。</span>
            <span class="sxs-lookup">
              <span data-stu-id="44538-222">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span>
            </span>
            <span data-ttu-id="44538-223">您可以调用基实现之前或之后应用特殊处理，具体取决于您的要求。</span>
            <span class="sxs-lookup">
              <span data-stu-id="44538-223">You can call the base implementation either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="buttonBase.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="44538-224">
            <see cref="E:System.Windows.UIElement.KeyUp" /> 事件的事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-224">The event data for the <see cref="E:System.Windows.UIElement.KeyUp" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44538-225">为在此控件有焦点的情况下用户释放任意键时发生的 <see cref="E:System.Windows.UIElement.KeyUp" /> 路由事件提供类处理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-225">Provides class handling for the <see cref="E:System.Windows.UIElement.KeyUp" /> routed event that occurs when the user releases a key while this control has focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44538-226">此实现将标记<xref:System.Windows.UIElement.KeyUp>事件处理的设置<xref:System.Windows.RoutedEventArgs.Handled%2A>属性的事件数据`true`当用户释放空格键。</span><span class="sxs-lookup"><span data-stu-id="44538-226">This implementation marks the <xref:System.Windows.UIElement.KeyUp> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when the user releases the SPACEBAR.</span></span> <span data-ttu-id="44538-227">否则，此实现不会更改处理的状态 (<xref:System.Windows.RoutedEventArgs.Handled%2A>属性) 的<xref:System.Windows.UIElement.KeyUp>事件数据。</span><span class="sxs-lookup"><span data-stu-id="44538-227">Otherwise, this implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.KeyUp> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="44538-228">如果重写<see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" />，均应调用基实现你<see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" />实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="44538-228">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" /> implementation.</span>
            </span>
            <span data-ttu-id="44538-229">无法调用基实现可防止基类处理具有类处理程序，这可能会改变最终类的运行时行为的事件。</span>
            <span class="sxs-lookup">
              <span data-stu-id="44538-229">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span>
            </span>
            <span data-ttu-id="44538-230">您可以调用基实现之前或之后应用特殊处理，具体取决于您的要求。</span>
            <span class="sxs-lookup">
              <span data-stu-id="44538-230">You can call the base implementation either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="buttonBase.OnLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="44538-231">
            <see cref="E:System.Windows.IInputElement.LostKeyboardFocus" /> 事件的事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-231">The event data for the <see cref="E:System.Windows.IInputElement.LostKeyboardFocus" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44538-232">在元素失去键盘焦点时调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-232">Called when an element loses keyboard focus.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLostMouseCapture">
      <MemberSignature Language="C#" Value="protected override void OnLostMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLostMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="buttonBase.OnLostMouseCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="44538-233">
            <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> 事件的事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-233">The event data for the <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44538-234">提供路由事件 <see cref="E:System.Windows.UIElement.LostMouseCapture" /> 的类处理，该事件在此控件不再接收鼠标事件消息时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-234">Provides class handling for the <see cref="E:System.Windows.UIElement.LostMouseCapture" /> routed event that occurs when this control is no longer receiving mouse event messages.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44538-235">此实现不会更改处理的状态 (<xref:System.Windows.RoutedEventArgs.Handled%2A>属性) 的<xref:System.Windows.UIElement.LostMouseCapture>事件数据。</span><span class="sxs-lookup"><span data-stu-id="44538-235">This implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.LostMouseCapture> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="44538-236">如果重写<see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />，均应调用基实现你<see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="44538-236">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" /> implementation.</span>
            </span>
            <span data-ttu-id="44538-237">无法调用基实现可防止基类处理具有类处理程序，这可能会改变最终类的运行时行为的事件。</span>
            <span class="sxs-lookup">
              <span data-stu-id="44538-237">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span>
            </span>
            <span data-ttu-id="44538-238">您可以调用基实现之前或之后应用特殊处理，具体取决于您的要求。</span>
            <span class="sxs-lookup">
              <span data-stu-id="44538-238">You can call the base implementation either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="buttonBase.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="44538-239">
            <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> 事件的事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-239">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44538-240">为当鼠标进入此控件时发生的 <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> 路由事件提供类处理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-240">Provides class handling for the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> routed event that occurs when the mouse enters this control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44538-241">当<xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A>设置为<xref:System.Windows.Controls.ClickMode.Hover>，此实现将标记<xref:System.Windows.UIElement.MouseEnter>事件处理的设置<xref:System.Windows.RoutedEventArgs.Handled%2A>的事件数据的属性`true`并引发<xref:System.Windows.Controls.Primitives.ButtonBase.Click>事件。</span><span class="sxs-lookup"><span data-stu-id="44538-241">When <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode.Hover>, this implementation marks the <xref:System.Windows.UIElement.MouseEnter> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` and raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="44538-242">如果重写<see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />，均应调用基实现你<see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="44538-242">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" /> implementation.</span>
            </span>
            <span data-ttu-id="44538-243">无法调用基实现可防止基类处理具有类处理程序，这可能会改变最终类的运行时行为的事件。</span>
            <span class="sxs-lookup">
              <span data-stu-id="44538-243">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span>
            </span>
            <span data-ttu-id="44538-244">您可以调用基实现之前或之后应用特殊处理，具体取决于您的要求。</span>
            <span class="sxs-lookup">
              <span data-stu-id="44538-244">You can call the base implementation either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="buttonBase.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="44538-245">
            <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> 事件的事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-245">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44538-246">为当鼠标离开元素时发生的 <see cref="E:System.Windows.UIElement.MouseLeave" /> 路由事件提供类处理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-246">Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeave" /> routed event that occurs when the mouse leaves an element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44538-247">此实现将标记<xref:System.Windows.UIElement.MouseLeave>事件处理的设置<xref:System.Windows.RoutedEventArgs.Handled%2A>的事件数据的属性`true`时<xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A>设置为<xref:System.Windows.Controls.ClickMode.Hover>。</span><span class="sxs-lookup"><span data-stu-id="44538-247">This implementation marks the <xref:System.Windows.UIElement.MouseLeave> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode.Hover>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="44538-248">如果重写<see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />，均应调用基实现你<see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="44538-248">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" /> implementation.</span>
            </span>
            <span data-ttu-id="44538-249">无法调用基实现可防止基类处理具有类处理程序，这可能会改变最终类的运行时行为的事件。</span>
            <span class="sxs-lookup">
              <span data-stu-id="44538-249">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span>
            </span>
            <span data-ttu-id="44538-250">您可以调用基实现之前或之后应用特殊处理，具体取决于您的要求。</span>
            <span class="sxs-lookup">
              <span data-stu-id="44538-250">You can call the base implementation either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="buttonBase.OnMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="44538-251">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-251">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44538-252">为鼠标指针位于此控件上并按下鼠标左键时发生的 <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> 路由事件提供类处理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-252">Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> routed event that occurs when the left mouse button is pressed while the mouse pointer is over this control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44538-253">此实现将标记<xref:System.Windows.UIElement.MouseLeftButtonDown>事件处理的设置<xref:System.Windows.RoutedEventArgs.Handled%2A>的事件数据的属性`true`时<xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A>未设置为<xref:System.Windows.Controls.ClickMode.Hover>。</span><span class="sxs-lookup"><span data-stu-id="44538-253">This implementation marks the <xref:System.Windows.UIElement.MouseLeftButtonDown> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode.Hover>.</span></span> <span data-ttu-id="44538-254">若要响应<xref:System.Windows.UIElement.MouseLeftButtonDown>事件，将附加到事件处理程序<xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>事件或调用<xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29>与`handledEventsToo`设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="44538-254">To respond to the <xref:System.Windows.UIElement.MouseLeftButtonDown> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
 <span data-ttu-id="44538-255">当<xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A>设置为<xref:System.Windows.Controls.ClickMode.Press>，此方法将引发<xref:System.Windows.Controls.Primitives.ButtonBase.Click>事件。</span><span class="sxs-lookup"><span data-stu-id="44538-255">When <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode.Press>, this method raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="44538-256">如果重写<see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />，均应调用基实现你<see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="44538-256">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" /> implementation.</span>
            </span>
            <span data-ttu-id="44538-257">无法调用基实现可防止基类处理具有类处理程序，这可能会改变最终类的运行时行为的事件。</span>
            <span class="sxs-lookup">
              <span data-stu-id="44538-257">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span>
            </span>
            <span data-ttu-id="44538-258">您可以调用基实现之前或之后应用特殊处理，具体取决于您的要求。</span>
            <span class="sxs-lookup">
              <span data-stu-id="44538-258">You can call the base implementation either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="buttonBase.OnMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="44538-259">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-259">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44538-260">为鼠标指针位于此控件上并释放鼠标左键时发生的 <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> 路由事件提供类处理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-260">Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> routed event that occurs when the left mouse button is released while the mouse pointer is over this control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44538-261">此实现将标记<xref:System.Windows.UIElement.MouseLeftButtonUp>事件处理的设置<xref:System.Windows.RoutedEventArgs.Handled%2A>的事件数据的属性`true`时<xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A>未设置为<xref:System.Windows.Controls.ClickMode.Hover>。</span><span class="sxs-lookup"><span data-stu-id="44538-261">This implementation marks the <xref:System.Windows.UIElement.MouseLeftButtonUp> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode.Hover>.</span></span> <span data-ttu-id="44538-262">若要响应<xref:System.Windows.UIElement.MouseLeftButtonUp>事件，将附加到事件处理程序<xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp>事件或调用<xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29>与`handledEventsToo`设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="44538-262">To respond to the <xref:System.Windows.UIElement.MouseLeftButtonUp> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
 <span data-ttu-id="44538-263">当<xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A>设置为<xref:System.Windows.Controls.ClickMode.Release>是<xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A>是`true`，此方法将引发<xref:System.Windows.Controls.Primitives.ButtonBase.Click>事件。</span><span class="sxs-lookup"><span data-stu-id="44538-263">When <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode.Release> is <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is `true`, this method raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="44538-264">如果重写<see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />，均应调用基实现你<see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="44538-264">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" /> implementation.</span>
            </span>
            <span data-ttu-id="44538-265">无法调用基实现可防止基类处理具有类处理程序，这可能会改变最终类的运行时行为的事件。</span>
            <span class="sxs-lookup">
              <span data-stu-id="44538-265">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span>
            </span>
            <span data-ttu-id="44538-266">您可以调用基实现之前或之后应用特殊处理，具体取决于您的要求。</span>
            <span class="sxs-lookup">
              <span data-stu-id="44538-266">You can call the base implementation either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="buttonBase.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="44538-267">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-267">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44538-268">提供当鼠标指针位于此元素上并且移动鼠标指针发生的<see cref="E:System.Windows.UIElement.MouseMove" /> 路由事件的类处理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-268">Provides class handling for the <see cref="E:System.Windows.UIElement.MouseMove" /> routed event that occurs when the mouse pointer moves while over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44538-269">此实现将标记<xref:System.Windows.UIElement.MouseMove>事件处理的设置<xref:System.Windows.RoutedEventArgs.Handled%2A>的事件数据的属性`true`时<xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A>未设置为<xref:System.Windows.Controls.ClickMode.Hover>并<xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A>是`true`。</span><span class="sxs-lookup"><span data-stu-id="44538-269">This implementation marks the <xref:System.Windows.UIElement.MouseMove> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode.Hover> and <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is `true`.</span></span> <span data-ttu-id="44538-270">若要响应<xref:System.Windows.UIElement.MouseMove>事件，将附加到事件处理程序<xref:System.Windows.ContentElement.PreviewMouseMove>事件或调用<xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29>与`handledEventsToo`设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="44538-270">To respond to the <xref:System.Windows.UIElement.MouseMove> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseMove> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="44538-271">如果重写<see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" />，均应调用基实现你<see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" />实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="44538-271">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" /> implementation.</span>
            </span>
            <span data-ttu-id="44538-272">无法调用基实现可防止基类处理具有类处理程序，这可能会改变最终类的运行时行为的事件。</span>
            <span class="sxs-lookup">
              <span data-stu-id="44538-272">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span>
            </span>
            <span data-ttu-id="44538-273">您可以调用基实现之前或之后应用特殊处理，具体取决于您的要求。</span>
            <span class="sxs-lookup">
              <span data-stu-id="44538-273">You can call the base implementation either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRenderSizeChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnRenderSizeChanged (System.Windows.SizeChangedInfo sizeInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnRenderSizeChanged(class System.Windows.SizeChangedInfo sizeInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged(System.Windows.SizeChangedInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnRenderSizeChanged (sizeInfo As SizeChangedInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnRenderSizeChanged(System::Windows::SizeChangedInfo ^ sizeInfo);" />
      <MemberSignature Language="F#" Value="override this.OnRenderSizeChanged : System.Windows.SizeChangedInfo -&gt; unit" Usage="buttonBase.OnRenderSizeChanged sizeInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sizeInfo" Type="System.Windows.SizeChangedInfo" />
      </Parameters>
      <Docs>
        <param name="sizeInfo">
          <span data-ttu-id="44538-274">指定大小更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-274">Specifies the size changes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44538-275">当控件的呈现大小更改时调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="44538-275">Called when the rendered size of a control changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44538-276">重写<xref:System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged%2A>方法的<xref:System.Windows.UIElement>。</span><span class="sxs-lookup"><span data-stu-id="44538-276">Overrides the <xref:System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged%2A> method of the <xref:System.Windows.UIElement>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>