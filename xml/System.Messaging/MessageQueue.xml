<Type Name="MessageQueue" FullName="System.Messaging.MessageQueue">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1b97a104f63118e1195286620b5b320bc17ba498" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MessageQueue : System.ComponentModel.Component, System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageQueue extends System.ComponentModel.Component implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.MessageQueue" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageQueue&#xA;Inherits Component&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageQueue : System::ComponentModel::Component, System::Collections::IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ReceiveCompleted")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.InstallerType(typeof(System.Messaging.MessageQueueInstaller))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.Design.MessageQueueConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="7aa34-101">提供对“消息队列”服务器上的队列的访问。</span>
      <span class="sxs-lookup">
        <span data-stu-id="7aa34-101">Provides access to a queue on a Message Queuing server.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-102">消息队列技术就允许在不同时间运行的应用程序能够跨异构网络和可能是暂时处于脱机状态的系统进行通信。</span><span class="sxs-lookup"><span data-stu-id="7aa34-102">The Message Queuing technology allows applications running at different times to communicate across heterogeneous networks and systems that might be temporarily offline.</span></span> <span data-ttu-id="7aa34-103">应用程序发送、 接收或查看从队列中的 （而不删除读取） 消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-103">Applications send, receive, or peek (read without removing) messages from queues.</span></span> <span data-ttu-id="7aa34-104">消息队列是一个可选组件的[!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]和 Windows NT 中，并且必须单独安装。</span><span class="sxs-lookup"><span data-stu-id="7aa34-104">Message Queuing is an optional component of [!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)] and Windows NT, and must be installed separately.</span></span>  
  
 <span data-ttu-id="7aa34-105"><xref:System.Messaging.MessageQueue>类是消息队列周围的包装器。</span><span class="sxs-lookup"><span data-stu-id="7aa34-105">The <xref:System.Messaging.MessageQueue> class is a wrapper around Message Queuing.</span></span> <span data-ttu-id="7aa34-106">有多个版本的消息队列，以及使用<xref:System.Messaging.MessageQueue>类可能会导致略有不同的行为，具体取决于操作系统使用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-106">There are multiple versions of Message Queuing, and using the <xref:System.Messaging.MessageQueue> class can result in slightly different behavior, depending on the operating system you are using.</span></span> <span data-ttu-id="7aa34-107">有关特定功能的每个版本的消息队列的信息，请参阅 MSDN 中的平台 SDK 中的"什么是消息队列中的新增功能"主题。</span><span class="sxs-lookup"><span data-stu-id="7aa34-107">For information about specific features of each version of Message Queuing, see the topic "What's New in Message Queuing" in the Platform SDK in MSDN.</span></span>  
  
 <span data-ttu-id="7aa34-108"><xref:System.Messaging.MessageQueue>类提供对消息队列的队列的引用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-108">The <xref:System.Messaging.MessageQueue> class provides a reference to a Message Queuing queue.</span></span> <span data-ttu-id="7aa34-109">你可以指定在路径<xref:System.Messaging.MessageQueue.%23ctor%2A>构造函数，以连接到现有资源，或者让你可以在服务器上创建一个新队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-109">You can specify a path in the <xref:System.Messaging.MessageQueue.%23ctor%2A> constructor to connect to an existing resource, or you can create a new queue on the server.</span></span> <span data-ttu-id="7aa34-110">在可以调用之前<xref:System.Messaging.MessageQueue.Send%28System.Object%29>， <xref:System.Messaging.MessageQueue.Peek%2A>，或<xref:System.Messaging.MessageQueue.Receive%2A>，必须将关联的新实例<xref:System.Messaging.MessageQueue>与某个现有队列的类。</span><span class="sxs-lookup"><span data-stu-id="7aa34-110">Before you can call <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, <xref:System.Messaging.MessageQueue.Peek%2A>, or <xref:System.Messaging.MessageQueue.Receive%2A>, you must associate the new instance of the <xref:System.Messaging.MessageQueue> class with an existing queue.</span></span> <span data-ttu-id="7aa34-111">此时，如操作队列属性<xref:System.Messaging.MessageQueue.Category%2A>和<xref:System.Messaging.MessageQueue.Label%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-111">At that point, you can manipulate the queue properties such as <xref:System.Messaging.MessageQueue.Category%2A> and <xref:System.Messaging.MessageQueue.Label%2A>.</span></span>  
  
 <span data-ttu-id="7aa34-112"><xref:System.Messaging.MessageQueue> 支持两种类型的消息检索： 同步和异步。</span><span class="sxs-lookup"><span data-stu-id="7aa34-112"><xref:System.Messaging.MessageQueue> supports two types of message retrieval: synchronous and asynchronous.</span></span> <span data-ttu-id="7aa34-113">同步方法，<xref:System.Messaging.MessageQueue.Peek%2A>和<xref:System.Messaging.MessageQueue.Receive%2A>，会导致进程线程等待新消息到达队列中指定的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="7aa34-113">The synchronous methods, <xref:System.Messaging.MessageQueue.Peek%2A> and <xref:System.Messaging.MessageQueue.Receive%2A>, cause the process thread to wait a specified time interval for a new message to arrive in the queue.</span></span> <span data-ttu-id="7aa34-114">异步方法，<xref:System.Messaging.MessageQueue.BeginPeek%2A>和<xref:System.Messaging.MessageQueue.BeginReceive%2A>，允许以继续在一个单独的线程，直到消息到达队列中的主应用程序任务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-114">The asynchronous methods, <xref:System.Messaging.MessageQueue.BeginPeek%2A> and <xref:System.Messaging.MessageQueue.BeginReceive%2A>, allow the main application tasks to continue in a separate thread until a message arrives in the queue.</span></span> <span data-ttu-id="7aa34-115">这些方法通过使用回调对象和状态对象将在线程之间的信息进行工作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-115">These methods work by using callback objects and state objects to communicate information between threads.</span></span>  
  
 <span data-ttu-id="7aa34-116">当你创建的新实例<xref:System.Messaging.MessageQueue>类，不在创建一个新的消息队列队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-116">When you create a new instance of the <xref:System.Messaging.MessageQueue> class, you are not creating a new Message Queuing queue.</span></span> <span data-ttu-id="7aa34-117">相反，你可以使用<xref:System.Messaging.MessageQueue.Create%28System.String%29>， <xref:System.Messaging.MessageQueue.Delete%28System.String%29>，和<xref:System.Messaging.MessageQueue.Purge%2A>方法来管理服务器上的队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-117">Instead, you can use the <xref:System.Messaging.MessageQueue.Create%28System.String%29>, <xref:System.Messaging.MessageQueue.Delete%28System.String%29>, and <xref:System.Messaging.MessageQueue.Purge%2A> methods to manage queues on the server.</span></span>  
  
 <span data-ttu-id="7aa34-118">与不同<xref:System.Messaging.MessageQueue.Purge%2A>，<xref:System.Messaging.MessageQueue.Create%28System.String%29>和<xref:System.Messaging.MessageQueue.Delete%28System.String%29>是`static`成员，因此您可以调用它们而无需创建的新实例<xref:System.Messaging.MessageQueue>类。</span><span class="sxs-lookup"><span data-stu-id="7aa34-118">Unlike <xref:System.Messaging.MessageQueue.Purge%2A>, <xref:System.Messaging.MessageQueue.Create%28System.String%29> and <xref:System.Messaging.MessageQueue.Delete%28System.String%29> are `static` members, so you can call them without creating a new instance of the <xref:System.Messaging.MessageQueue> class.</span></span>  
  
 <span data-ttu-id="7aa34-119">你可以设置<xref:System.Messaging.MessageQueue>对象的<xref:System.Messaging.MessageQueue.Path%2A>具有三个名称之一属性： 的友好名称， <xref:System.Messaging.MessageQueue.FormatName%2A>，或<xref:System.Messaging.MessageQueue.Label%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-119">You can set the <xref:System.Messaging.MessageQueue> object's <xref:System.Messaging.MessageQueue.Path%2A> property with one of three names: the friendly name, the <xref:System.Messaging.MessageQueue.FormatName%2A>, or the <xref:System.Messaging.MessageQueue.Label%2A>.</span></span> <span data-ttu-id="7aa34-120">友好名称，由队列的定义<xref:System.Messaging.MessageQueue.MachineName%2A>和<xref:System.Messaging.MessageQueue.QueueName%2A>属性，是<xref:System.Messaging.MessageQueue.MachineName%2A> \\ <xref:System.Messaging.MessageQueue.QueueName%2A>公共队列和<xref:System.Messaging.MessageQueue.MachineName%2A> \\ `Private$` \\ <xref:System.Messaging.MessageQueue.QueueName%2A>专用队列的。</span><span class="sxs-lookup"><span data-stu-id="7aa34-120">The friendly name, which is defined by the queue's <xref:System.Messaging.MessageQueue.MachineName%2A> and <xref:System.Messaging.MessageQueue.QueueName%2A> properties, is <xref:System.Messaging.MessageQueue.MachineName%2A>\\<xref:System.Messaging.MessageQueue.QueueName%2A> for a public queue, and <xref:System.Messaging.MessageQueue.MachineName%2A>\\`Private$`\\<xref:System.Messaging.MessageQueue.QueueName%2A> for a private queue.</span></span> <span data-ttu-id="7aa34-121"><xref:System.Messaging.MessageQueue.FormatName%2A>属性允许脱机访问消息队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-121">The <xref:System.Messaging.MessageQueue.FormatName%2A> property allows offline access to message queues.</span></span> <span data-ttu-id="7aa34-122">最后，你可以使用队列的<xref:System.Messaging.MessageQueue.Label%2A>属性来设置队列的<xref:System.Messaging.MessageQueue.Path%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-122">Lastly, you can use the queue's <xref:System.Messaging.MessageQueue.Label%2A> property to set the queue's <xref:System.Messaging.MessageQueue.Path%2A>.</span></span>  
  
 <span data-ttu-id="7aa34-123">有关的实例的初始属性值的列表<xref:System.Messaging.MessageQueue>，请参阅<xref:System.Messaging.MessageQueue.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-123">For a list of initial property values for an instance of <xref:System.Messaging.MessageQueue>, see the <xref:System.Messaging.MessageQueue.%23ctor%2A> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-124">下面的代码示例创建新<xref:System.Messaging.MessageQueue>对象使用各种路径名称语法类型。</span><span class="sxs-lookup"><span data-stu-id="7aa34-124">The following code example creates new <xref:System.Messaging.MessageQueue> objects using various path name syntax types.</span></span> <span data-ttu-id="7aa34-125">在每个情况下，它将消息发送到其路径定义构造函数中的队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-125">In each case, it sends a message to the queue whose path is defined in the constructor.</span></span>  
  
 [!code-cpp[MessageQueue.Path#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Path/CPP/mqpath.cpp#1)]
 [!code-csharp[MessageQueue.Path#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Path/CS/mqpath.cs#1)]
 [!code-vb[MessageQueue.Path#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Path/VB/mqpath.vb#1)]  
  
 <span data-ttu-id="7aa34-126">下面的代码示例向队列发送消息和接收来自队列，使用名为的应用程序特定类的消息`Order`。</span><span class="sxs-lookup"><span data-stu-id="7aa34-126">The following code example sends a message to a queue, and receives a message from a queue, using an application-specific class called `Order`.</span></span>  
  
 [!code-cpp[MessageQueue.Receive_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Receive_noparms/CPP/mqreceive_noparms.cpp#1)]
 [!code-csharp[MessageQueue.Receive_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Receive_noparms/CS/mqreceive_noparms.cs#1)]
 [!code-vb[MessageQueue.Receive_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Receive_noparms/VB/mqreceive_noparms.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="7aa34-127">仅<see cref="M:System.Messaging.MessageQueue.GetAllMessages" />是线程安全的方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="7aa34-127">Only the <see cref="M:System.Messaging.MessageQueue.GetAllMessages" /> method is thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Messaging.Message" />
    <altmember cref="T:System.Messaging.DefaultPropertiesToSend" />
    <altmember cref="T:System.Messaging.MessageQueueException" />
    <altmember cref="M:System.Messaging.MessageQueue.#ctor" />
    <altmember cref="M:System.Messaging.MessageQueue.Peek" />
    <altmember cref="M:System.Messaging.MessageQueue.Receive" />
    <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
    <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
    <altmember cref="P:System.Messaging.MessageQueue.Path" />
    <altmember cref="P:System.Messaging.MessageQueue.Label" />
    <altmember cref="P:System.Messaging.MessageQueue.FormatName" />
    <altmember cref="P:System.Messaging.MessageQueue.QueueName" />
    <altmember cref="P:System.Messaging.MessageQueue.MachineName" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-128">初始化 <see cref="T:System.Messaging.MessageQueue" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-128">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueue();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-129">初始化 <see cref="T:System.Messaging.MessageQueue" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-129">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class.</span>
          </span>
          <span data-ttu-id="7aa34-130">默认构造函数初始化新实例后，必须设置该实例的 <see cref="P:System.Messaging.MessageQueue.Path" /> 属性才能使用该实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-130">After the default constructor initializes the new instance, you must set the instance's <see cref="P:System.Messaging.MessageQueue.Path" /> property before you can use the instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-131">使用此重载来创建的新实例<xref:System.Messaging.MessageQueue>不立即绑定到消息队列服务器上的队列的类。</span><span class="sxs-lookup"><span data-stu-id="7aa34-131">Use this overload to create a new instance of the <xref:System.Messaging.MessageQueue> class that is not immediately tied to a queue on the Message Queuing server.</span></span> <span data-ttu-id="7aa34-132">使用此实例前，你必须将其连接到现有消息队列队列通过设置<xref:System.Messaging.MessageQueue.Path%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-132">Before using this instance, you must connect it to an existing Message Queuing queue by setting the <xref:System.Messaging.MessageQueue.Path%2A> property.</span></span> <span data-ttu-id="7aa34-133">或者，您可以设置<xref:System.Messaging.MessageQueue>引用<xref:System.Messaging.MessageQueue.Create%28System.String%29>方法的返回值，从而创建一个新的消息队列队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-133">Alternatively, you can set the <xref:System.Messaging.MessageQueue> reference to the <xref:System.Messaging.MessageQueue.Create%28System.String%29> method's return value, thereby creating a new Message Queuing queue.</span></span>  
  
 <span data-ttu-id="7aa34-134"><xref:System.Messaging.MessageQueue.%23ctor%2A>构造函数实例化的新实例<xref:System.Messaging.MessageQueue>类; 它不会创建一个新的消息队列队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-134">The <xref:System.Messaging.MessageQueue.%23ctor%2A> constructor instantiates a new instance of the <xref:System.Messaging.MessageQueue> class; it does not create a new Message Queuing queue.</span></span>  
  
 <span data-ttu-id="7aa34-135">下表显示的实例的初始属性值<xref:System.Messaging.MessageQueue>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-135">The following table shows initial property values for an instance of <xref:System.Messaging.MessageQueue>.</span></span>  
  
|<span data-ttu-id="7aa34-136">Property</span><span class="sxs-lookup"><span data-stu-id="7aa34-136">Property</span></span>|<span data-ttu-id="7aa34-137">初始值</span><span class="sxs-lookup"><span data-stu-id="7aa34-137">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>|<span data-ttu-id="7aa34-138">设置的默认构造函数的值<xref:System.Messaging.DefaultPropertiesToSend>类。</span><span class="sxs-lookup"><span data-stu-id="7aa34-138">The values set by the default constructor of the <xref:System.Messaging.DefaultPropertiesToSend> class.</span></span>|  
|<xref:System.Messaging.MessageQueue.Formatter%2A>|<xref:System.Messaging.XmlMessageFormatter>|  
|<xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A>|<span data-ttu-id="7aa34-139">设置的默认构造函数的值<xref:System.Messaging.MessagePropertyFilter>类。</span><span class="sxs-lookup"><span data-stu-id="7aa34-139">The values set by the default constructor of the <xref:System.Messaging.MessagePropertyFilter> class.</span></span> <span data-ttu-id="7aa34-140">所有的筛选器值设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="7aa34-140">All the filter values are set to `true`.</span></span>|  
|<xref:System.Messaging.MessageQueue.DenySharedReceive%2A>|`false`|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-141">下面的代码示例创建一个新<xref:System.Messaging.MessageQueue>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-141">The following code example creates a new <xref:System.Messaging.MessageQueue>.</span></span>  
  
 [!code-csharp[MessageQueue#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
        <altmember cref="P:System.Messaging.MessageQueue.QueueName" />
        <altmember cref="P:System.Messaging.MessageQueue.FormatName" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueue (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueue(System::String ^ path);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="7aa34-142">此 <see cref="T:System.Messaging.MessageQueue" /> 引用的队列的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-142">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-143">初始化 <see cref="T:System.Messaging.MessageQueue" /> 类的新实例，该实例引用指定路径处的“消息队列”队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-143">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class that references the Message Queuing queue at the specified path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-144">当你想要将新使用此重载<xref:System.Messaging.MessageQueue>到特定消息队列的队列，并为其知道路径、 格式名或标签的实例。</span><span class="sxs-lookup"><span data-stu-id="7aa34-144">Use this overload when you want to tie the new <xref:System.Messaging.MessageQueue> instance to a particular Message Queuing queue, for which you know the path, format name, or label.</span></span> <span data-ttu-id="7aa34-145">如果你想要授予对第一个应用程序独占访问权引用队列，则必须设置<xref:System.Messaging.MessageQueue.DenySharedReceive%2A>属性`true`或使用传递的读取访问权限限制参数的构造函数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-145">If you want to grant exclusive access to the first application that references the queue, you must set the <xref:System.Messaging.MessageQueue.DenySharedReceive%2A> property to `true` or use the constructor that passes a read-access restriction parameter.</span></span>  
  
 <span data-ttu-id="7aa34-146"><xref:System.Messaging.MessageQueue.%23ctor%2A>构造函数实例化的新实例<xref:System.Messaging.MessageQueue>类; 它不会创建一个新的消息队列队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-146">The <xref:System.Messaging.MessageQueue.%23ctor%2A> constructor instantiates a new instance of the <xref:System.Messaging.MessageQueue> class; it does not create a new Message Queuing queue.</span></span> <span data-ttu-id="7aa34-147">若要在消息队列中创建新队列，使用<xref:System.Messaging.MessageQueue.Create%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-147">To create a new queue in Message Queuing, use <xref:System.Messaging.MessageQueue.Create%28System.String%29>.</span></span>  
  
 <span data-ttu-id="7aa34-148">语法`path`参数取决于队列的类型它的引用下, 表中所示。</span><span class="sxs-lookup"><span data-stu-id="7aa34-148">The syntax of the `path` parameter depends on the type of queue it references, as shown in the following table.</span></span>  
  
|<span data-ttu-id="7aa34-149">队列类型</span><span class="sxs-lookup"><span data-stu-id="7aa34-149">Queue type</span></span>|<span data-ttu-id="7aa34-150">语法</span><span class="sxs-lookup"><span data-stu-id="7aa34-150">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="7aa34-151">公用队列</span><span class="sxs-lookup"><span data-stu-id="7aa34-151">Public queue</span></span>|`MachineName`\\`QueueName`|  
|<span data-ttu-id="7aa34-152">专用队列</span><span class="sxs-lookup"><span data-stu-id="7aa34-152">Private queue</span></span>|`MachineName`\\`Private$`\\`QueueName`|  
|<span data-ttu-id="7aa34-153">日记队列</span><span class="sxs-lookup"><span data-stu-id="7aa34-153">Journal queue</span></span>|`MachineName`\\`QueueName`\\`Journal$`|  
|<span data-ttu-id="7aa34-154">计算机日记队列</span><span class="sxs-lookup"><span data-stu-id="7aa34-154">Machine journal queue</span></span>|`MachineName`\\`Journal$`|  
|<span data-ttu-id="7aa34-155">机死信队列</span><span class="sxs-lookup"><span data-stu-id="7aa34-155">Machine dead-letter queue</span></span>|`MachineName`\\`Deadletter$`|  
|<span data-ttu-id="7aa34-156">计算机事务性死信队列</span><span class="sxs-lookup"><span data-stu-id="7aa34-156">Machine transactional dead-letter queue</span></span>|`MachineName`\\`XactDeadletter$`|  
  
 <span data-ttu-id="7aa34-157">或者，可以使用<xref:System.Messaging.MessageQueue.FormatName%2A>或<xref:System.Messaging.MessageQueue.Label%2A>来描述队列路径中下, 表中所示。</span><span class="sxs-lookup"><span data-stu-id="7aa34-157">Alternatively, you can use the <xref:System.Messaging.MessageQueue.FormatName%2A> or <xref:System.Messaging.MessageQueue.Label%2A> to describe the queue path, as shown in the following table.</span></span>  
  
|<span data-ttu-id="7aa34-158">参考</span><span class="sxs-lookup"><span data-stu-id="7aa34-158">Reference</span></span>|<span data-ttu-id="7aa34-159">语法</span><span class="sxs-lookup"><span data-stu-id="7aa34-159">Syntax</span></span>|<span data-ttu-id="7aa34-160">示例</span><span class="sxs-lookup"><span data-stu-id="7aa34-160">Example</span></span>|  
|---------------|------------|-------------|  
|<span data-ttu-id="7aa34-161">格式名称</span><span class="sxs-lookup"><span data-stu-id="7aa34-161">Format name</span></span>|<span data-ttu-id="7aa34-162">`FormatName:` [*格式名*]</span><span class="sxs-lookup"><span data-stu-id="7aa34-162">`FormatName:` [ *format name* ]</span></span>|<span data-ttu-id="7aa34-163">`FormatName:Public=` 5A5F7535-AE9A-41d4-935C-845C2AFF7112</span><span class="sxs-lookup"><span data-stu-id="7aa34-163">`FormatName:Public=` 5A5F7535-AE9A-41d4-935C-845C2AFF7112</span></span><br /><br /> <span data-ttu-id="7aa34-164">`FormatName:DIRECT=SPX:` `NetworkNumber`; `HostNumber`\\`QueueName`</span><span class="sxs-lookup"><span data-stu-id="7aa34-164">`FormatName:DIRECT=SPX:` `NetworkNumber`; `HostNumber`\\`QueueName`</span></span><br /><br /> <span data-ttu-id="7aa34-165">`FormatName:DIRECT=TCP:` `IPAddress`\\`QueueName`</span><span class="sxs-lookup"><span data-stu-id="7aa34-165">`FormatName:DIRECT=TCP:` `IPAddress`\\`QueueName`</span></span><br /><br /> <span data-ttu-id="7aa34-166">`FormatName:DIRECT=OS:` `MachineName`\\`QueueName`</span><span class="sxs-lookup"><span data-stu-id="7aa34-166">`FormatName:DIRECT=OS:` `MachineName`\\`QueueName`</span></span>|  
|<span data-ttu-id="7aa34-167">Label</span><span class="sxs-lookup"><span data-stu-id="7aa34-167">Label</span></span>|<span data-ttu-id="7aa34-168">`Label:` [*标签*]</span><span class="sxs-lookup"><span data-stu-id="7aa34-168">`Label:` [ *label* ]</span></span>|<span data-ttu-id="7aa34-169">`Label:` 标签</span><span class="sxs-lookup"><span data-stu-id="7aa34-169">`Label:` TheLabel</span></span>|  
  
 <span data-ttu-id="7aa34-170">若要在脱机工作，必须使用的格式名称语法，而不是路径名称语法构造函数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-170">To work offline, you must use the format name syntax, not the path name syntax for the constructor.</span></span> <span data-ttu-id="7aa34-171">否则，因为该域的主域控制器不可用来为格式名称解析路径，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="7aa34-171">Otherwise, an exception is thrown because the primary domain controller is not available to resolve the path to the format name.</span></span>  
  
 <span data-ttu-id="7aa34-172">下表显示的实例的初始属性值<xref:System.Messaging.MessageQueue>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-172">The following table shows initial property values for an instance of <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="7aa34-173">这些值基于消息队列队列的属性与指定的路径`path`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-173">These values are based on the properties of the Message Queuing queue with the path specified by the `path` parameter.</span></span>  
  
|<span data-ttu-id="7aa34-174">Property</span><span class="sxs-lookup"><span data-stu-id="7aa34-174">Property</span></span>|<span data-ttu-id="7aa34-175">初始值</span><span class="sxs-lookup"><span data-stu-id="7aa34-175">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Messaging.MessageQueue.Authenticate%2A>|`false`|  
|<xref:System.Messaging.MessageQueue.BasePriority%2A>|<span data-ttu-id="7aa34-176">0</span><span class="sxs-lookup"><span data-stu-id="7aa34-176">0</span></span>|  
|<xref:System.Messaging.MessageQueue.Category%2A>|<xref:System.Guid.Empty>|  
|<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>|<span data-ttu-id="7aa34-177">设置的默认构造函数的值<xref:System.Messaging.DefaultPropertiesToSend>类。</span><span class="sxs-lookup"><span data-stu-id="7aa34-177">The values set by the default constructor of the <xref:System.Messaging.DefaultPropertiesToSend> class.</span></span>|  
|<xref:System.Messaging.MessageQueue.EncryptionRequired%2A>|<span data-ttu-id="7aa34-178">`true`如果消息队列队列的隐私级别设置为"正文";否则为`false`。</span><span class="sxs-lookup"><span data-stu-id="7aa34-178">`true`, if the Message Queuing queue's privacy level setting is "Body"; otherwise, `false`.</span></span>|  
|<xref:System.Messaging.MessageQueue.Formatter%2A>|<xref:System.Messaging.XmlMessageFormatter>|  
|<xref:System.Messaging.MessageQueue.Label%2A>|<xref:System.String.Empty>|  
|<xref:System.Messaging.MessageQueue.MachineName%2A>|<span data-ttu-id="7aa34-179">消息队列队列的计算机名称属性的值。</span><span class="sxs-lookup"><span data-stu-id="7aa34-179">The value of the Message Queuing queue's computer name property.</span></span>|  
|<xref:System.Messaging.MessageQueue.MaximumJournalSize%2A>|<xref:System.Messaging.MessageQueue.InfiniteQueueSize>|  
|<xref:System.Messaging.MessageQueue.MaximumQueueSize%2A>|<xref:System.Messaging.MessageQueue.InfiniteQueueSize>|  
|<xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A>|<span data-ttu-id="7aa34-180">设置的默认构造函数的值<xref:System.Messaging.MessagePropertyFilter>类。</span><span class="sxs-lookup"><span data-stu-id="7aa34-180">The values set by the default constructor of the <xref:System.Messaging.MessagePropertyFilter> class.</span></span>|  
|<xref:System.Messaging.MessageQueue.Path%2A>|<span data-ttu-id="7aa34-181"><xref:System.String.Empty>如果未设置由构造函数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-181"><xref:System.String.Empty>, if not set by the constructor.</span></span>|  
|<xref:System.Messaging.MessageQueue.QueueName%2A>|<span data-ttu-id="7aa34-182"><xref:System.String.Empty>如果未设置由构造函数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-182"><xref:System.String.Empty>, if not set by the constructor.</span></span>|  
|<xref:System.Messaging.MessageQueue.DenySharedReceive%2A>|`false`|  
|<xref:System.Messaging.MessageQueue.UseJournalQueue%2A>|<span data-ttu-id="7aa34-183">`true`如果启用了消息队列对象的日志设置;否则为`false`。</span><span class="sxs-lookup"><span data-stu-id="7aa34-183">`true`, if the Message Queuing object's journal setting is enabled; otherwise, `false`.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-184">下面的代码示例创建新<xref:System.Messaging.MessageQueue>对象使用各种路径名称语法类型。</span><span class="sxs-lookup"><span data-stu-id="7aa34-184">The following code example creates new <xref:System.Messaging.MessageQueue> objects using various path name syntax types.</span></span> <span data-ttu-id="7aa34-185">在每个情况下，它将消息发送到其路径定义构造函数中的队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-185">In each case, it sends a message to the queue whose path is defined in the constructor.</span></span>  
  
 [!code-cpp[MessageQueue.Path#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Path/CPP/mqpath.cpp#1)]
 [!code-csharp[MessageQueue.Path#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Path/CS/mqpath.cs#1)]
 [!code-vb[MessageQueue.Path#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Path/VB/mqpath.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-186">
            <see cref="P:System.Messaging.MessageQueue.Path" /> 属性无效，很可能因为尚未设置该属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-186">The <see cref="P:System.Messaging.MessageQueue.Path" /> property is not valid, possibly because it has not been set.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.FormatName" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
        <altmember cref="P:System.Messaging.MessageQueue.QueueName" />
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueue (string path, bool sharedModeDenyReceive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, bool sharedModeDenyReceive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, sharedModeDenyReceive As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueue(System::String ^ path, bool sharedModeDenyReceive);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="sharedModeDenyReceive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="7aa34-187">此 <see cref="T:System.Messaging.MessageQueue" /> 引用的队列的位置，它对于本地计算机可以是“.”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-187">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />, which can be "." for the local computer.</span>
          </span>
        </param>
        <param name="sharedModeDenyReceive">
          <span data-ttu-id="7aa34-188">
            <see langword="true" />，授予访问该队列的第一个应用程序独占读访问权；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-188">
              <see langword="true" /> to grant exclusive read access to the first application that accesses the queue; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-189">初始化 <see cref="T:System.Messaging.MessageQueue" /> 类的新实例，该实例引用位于指定路径处而且具有指定读访问限制的“消息队列”队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-189">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class that references the Message Queuing queue at the specified path and with the specified read-access restriction.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-190">当你想要将新使用此重载<xref:System.Messaging.MessageQueue>到特定消息队列的队列，并为其知道路径、 格式名或标签。</span><span class="sxs-lookup"><span data-stu-id="7aa34-190">Use this overload when you want to tie the new <xref:System.Messaging.MessageQueue> to a particular Message Queuing queue, for which you know the path, format name, or label.</span></span> <span data-ttu-id="7aa34-191">如果你想要授予对第一个应用程序独占访问权引用队列，请将设置`sharedModeDenyReceive`参数`true`。</span><span class="sxs-lookup"><span data-stu-id="7aa34-191">If you want to grant exclusive access to the first application that references the queue, set the `sharedModeDenyReceive` parameter to `true`.</span></span> <span data-ttu-id="7aa34-192">否则，设置`sharedModeDenyReceive`到`false`或使用构造函数仅具有`path`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-192">Otherwise, set `sharedModeDenyReceive` to `false` or use the constructor that has only a `path` parameter.</span></span>  
  
 <span data-ttu-id="7aa34-193">设置`sharedModeDenyReceive`到`true`影响访问消息队列队列，包括其他应用程序的所有对象。</span><span class="sxs-lookup"><span data-stu-id="7aa34-193">Setting `sharedModeDenyReceive` to `true` affects all objects that access the Message Queuing queue, including other applications.</span></span> <span data-ttu-id="7aa34-194">参数的效果并不限于此应用程序。</span><span class="sxs-lookup"><span data-stu-id="7aa34-194">The effects of the parameter are not restricted to this application.</span></span>  
  
 <span data-ttu-id="7aa34-195"><xref:System.Messaging.MessageQueue.%23ctor%2A>构造函数创建的新实例<xref:System.Messaging.MessageQueue>类; 它不会创建一个新的消息队列队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-195">The <xref:System.Messaging.MessageQueue.%23ctor%2A> constructor creates a new instance of the <xref:System.Messaging.MessageQueue> class; it does not create a new Message Queuing queue.</span></span> <span data-ttu-id="7aa34-196">若要在消息队列中创建新队列，使用<xref:System.Messaging.MessageQueue.Create%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-196">To create a new queue in Message Queuing, use <xref:System.Messaging.MessageQueue.Create%28System.String%29>.</span></span>  
  
 <span data-ttu-id="7aa34-197">语法`path`参数依赖于的队列的类型。</span><span class="sxs-lookup"><span data-stu-id="7aa34-197">The syntax of the `path` parameter depends on the type of queue.</span></span>  
  
|<span data-ttu-id="7aa34-198">队列类型</span><span class="sxs-lookup"><span data-stu-id="7aa34-198">Queue type</span></span>|<span data-ttu-id="7aa34-199">语法</span><span class="sxs-lookup"><span data-stu-id="7aa34-199">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="7aa34-200">公用队列</span><span class="sxs-lookup"><span data-stu-id="7aa34-200">Public queue</span></span>|`MachineName`\\`QueueName`|  
|<span data-ttu-id="7aa34-201">专用队列</span><span class="sxs-lookup"><span data-stu-id="7aa34-201">Private queue</span></span>|`MachineName`\\`Private$`\\`QueueName`|  
|<span data-ttu-id="7aa34-202">日记队列</span><span class="sxs-lookup"><span data-stu-id="7aa34-202">Journal queue</span></span>|`MachineName`\\`QueueName`\\`Journal$`|  
|<span data-ttu-id="7aa34-203">计算机日记队列</span><span class="sxs-lookup"><span data-stu-id="7aa34-203">Machine journal queue</span></span>|`MachineName`\\`Journal$`|  
|<span data-ttu-id="7aa34-204">机死信队列</span><span class="sxs-lookup"><span data-stu-id="7aa34-204">Machine dead-letter queue</span></span>|`MachineName`\\`Deadletter$`|  
|<span data-ttu-id="7aa34-205">计算机事务性死信队列</span><span class="sxs-lookup"><span data-stu-id="7aa34-205">Machine transactional dead-letter queue</span></span>|`MachineName`\\`XactDeadletter$`|  
  
 <span data-ttu-id="7aa34-206">或者，你可以使用的格式名或标签的消息队列的队列来描述队列路径。</span><span class="sxs-lookup"><span data-stu-id="7aa34-206">Alternatively, you can use the format name or label of a Message Queuing queue to describe the queue path.</span></span>  
  
|<span data-ttu-id="7aa34-207">参考</span><span class="sxs-lookup"><span data-stu-id="7aa34-207">Reference</span></span>|<span data-ttu-id="7aa34-208">语法</span><span class="sxs-lookup"><span data-stu-id="7aa34-208">Syntax</span></span>|<span data-ttu-id="7aa34-209">示例</span><span class="sxs-lookup"><span data-stu-id="7aa34-209">Example</span></span>|  
|---------------|------------|-------------|  
|<span data-ttu-id="7aa34-210">格式名称</span><span class="sxs-lookup"><span data-stu-id="7aa34-210">Format name</span></span>|<span data-ttu-id="7aa34-211">`FormatName:` [*格式名*]</span><span class="sxs-lookup"><span data-stu-id="7aa34-211">`FormatName:` [ *format name* ]</span></span>|<span data-ttu-id="7aa34-212">`FormatName:Public=` 5A5F7535-AE9A-41d4-935C-845C2AFF7112</span><span class="sxs-lookup"><span data-stu-id="7aa34-212">`FormatName:Public=` 5A5F7535-AE9A-41d4-935C-845C2AFF7112</span></span><br /><br /> <span data-ttu-id="7aa34-213">`FormatName:DIRECT=SPX:` `NetworkNumber`; `HostNumber`\\`QueueName`</span><span class="sxs-lookup"><span data-stu-id="7aa34-213">`FormatName:DIRECT=SPX:` `NetworkNumber`; `HostNumber`\\`QueueName`</span></span><br /><br /> <span data-ttu-id="7aa34-214">`FormatName:DIRECT=TCP:` `IPAddress`\\`QueueName`</span><span class="sxs-lookup"><span data-stu-id="7aa34-214">`FormatName:DIRECT=TCP:` `IPAddress`\\`QueueName`</span></span><br /><br /> <span data-ttu-id="7aa34-215">`FormatName:DIRECT=OS:` `MachineName`\\`QueueName`</span><span class="sxs-lookup"><span data-stu-id="7aa34-215">`FormatName:DIRECT=OS:` `MachineName`\\`QueueName`</span></span>|  
|<span data-ttu-id="7aa34-216">Label</span><span class="sxs-lookup"><span data-stu-id="7aa34-216">Label</span></span>|<span data-ttu-id="7aa34-217">`Label:` [*标签*]</span><span class="sxs-lookup"><span data-stu-id="7aa34-217">`Label:` [ *label* ]</span></span>|<span data-ttu-id="7aa34-218">`Label:` 标签</span><span class="sxs-lookup"><span data-stu-id="7aa34-218">`Label:` TheLabel</span></span>|  
  
 <span data-ttu-id="7aa34-219">若要在脱机工作，必须使用格式名语法，而不是友好名称语法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-219">To work offline, you must use the format name syntax, rather than the friendly name syntax.</span></span> <span data-ttu-id="7aa34-220">否则，因为该域的主域控制器 （在其 Active Directory 处于） 不是可用于为格式名称解析的路径，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="7aa34-220">Otherwise, an exception is thrown because the primary domain controller (on which Active Directory resides) is not available to resolve the path to the format name.</span></span>  
  
 <span data-ttu-id="7aa34-221">如果<xref:System.Messaging.MessageQueue>打开一个队列`sharedModeDenyReceive`参数设置为`true`、 任何<xref:System.Messaging.MessageQueue>，随后尝试从队列中读取生成<xref:System.Messaging.MessageQueueException>由于共享冲突。</span><span class="sxs-lookup"><span data-stu-id="7aa34-221">If a <xref:System.Messaging.MessageQueue> opens a queue with the `sharedModeDenyReceive` parameter set to `true`, any <xref:System.Messaging.MessageQueue> that subsequently tries to read from the queue generates a <xref:System.Messaging.MessageQueueException> because of a sharing violation.</span></span> <span data-ttu-id="7aa34-222">A<xref:System.Messaging.MessageQueueException>也会引发如果<xref:System.Messaging.MessageQueue>尝试访问以独占模式，而此时另一个队列<xref:System.Messaging.MessageQueue>已有非独占访问该队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-222">A <xref:System.Messaging.MessageQueueException> is also thrown if a <xref:System.Messaging.MessageQueue> tries to access the queue in exclusive mode while another <xref:System.Messaging.MessageQueue> already has non-exclusive access to the queue.</span></span>  
  
 <span data-ttu-id="7aa34-223">下表显示的实例的初始属性值<xref:System.Messaging.MessageQueue>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-223">The following table shows initial property values for an instance of <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="7aa34-224">这些值基于属性的消息队列队列中，使用指定的路径`path`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-224">These values are based on the properties of the Message Queuing queue, with the path specified by the `path` parameter.</span></span>  
  
|<span data-ttu-id="7aa34-225">Property</span><span class="sxs-lookup"><span data-stu-id="7aa34-225">Property</span></span>|<span data-ttu-id="7aa34-226">初始值</span><span class="sxs-lookup"><span data-stu-id="7aa34-226">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Messaging.MessageQueue.Authenticate%2A>|<span data-ttu-id="7aa34-227">`false`。</span><span class="sxs-lookup"><span data-stu-id="7aa34-227">`false`.</span></span>|  
|<xref:System.Messaging.MessageQueue.BasePriority%2A>|<span data-ttu-id="7aa34-228">0.</span><span class="sxs-lookup"><span data-stu-id="7aa34-228">0.</span></span>|  
|<xref:System.Messaging.MessageQueue.Category%2A>|<span data-ttu-id="7aa34-229"><xref:System.Guid.Empty>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-229"><xref:System.Guid.Empty>.</span></span>|  
|<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>|<span data-ttu-id="7aa34-230">设置的默认构造函数的值<xref:System.Messaging.DefaultPropertiesToSend>类。</span><span class="sxs-lookup"><span data-stu-id="7aa34-230">The values set by the default constructor of the <xref:System.Messaging.DefaultPropertiesToSend> class.</span></span>|  
|<xref:System.Messaging.MessageQueue.EncryptionRequired%2A>|<span data-ttu-id="7aa34-231">`true`如果消息队列队列的隐私级别设置为"正文";否则为`false`。</span><span class="sxs-lookup"><span data-stu-id="7aa34-231">`true`, if the Message Queuing queue's privacy level setting is "Body"; otherwise, `false`.</span></span>|  
|<xref:System.Messaging.MessageQueue.Formatter%2A>|<span data-ttu-id="7aa34-232"><xref:System.Messaging.XmlMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-232"><xref:System.Messaging.XmlMessageFormatter>.</span></span>|  
|<xref:System.Messaging.MessageQueue.Label%2A>|<span data-ttu-id="7aa34-233"><xref:System.String.Empty>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-233"><xref:System.String.Empty>.</span></span>|  
|<xref:System.Messaging.MessageQueue.MachineName%2A>|<span data-ttu-id="7aa34-234">消息队列队列的计算机名称属性的值。</span><span class="sxs-lookup"><span data-stu-id="7aa34-234">The value of the Message Queuing queue's computer name property.</span></span>|  
|<xref:System.Messaging.MessageQueue.MaximumJournalSize%2A>|<span data-ttu-id="7aa34-235"><xref:System.Messaging.MessageQueue.InfiniteQueueSize>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-235"><xref:System.Messaging.MessageQueue.InfiniteQueueSize>.</span></span>|  
|<xref:System.Messaging.MessageQueue.MaximumQueueSize%2A>|<span data-ttu-id="7aa34-236"><xref:System.Messaging.MessageQueue.InfiniteQueueSize>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-236"><xref:System.Messaging.MessageQueue.InfiniteQueueSize>.</span></span>|  
|<xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A>|<span data-ttu-id="7aa34-237">设置的默认构造函数的值<xref:System.Messaging.MessagePropertyFilter>类。</span><span class="sxs-lookup"><span data-stu-id="7aa34-237">The values set by the default constructor of the <xref:System.Messaging.MessagePropertyFilter> class.</span></span>|  
|<xref:System.Messaging.MessageQueue.Path%2A>|<span data-ttu-id="7aa34-238"><xref:System.String.Empty>如果未设置由构造函数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-238"><xref:System.String.Empty>, if not set by the constructor.</span></span>|  
|<xref:System.Messaging.MessageQueue.QueueName%2A>|<span data-ttu-id="7aa34-239"><xref:System.String.Empty>如果未设置由构造函数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-239"><xref:System.String.Empty>, if not set by the constructor.</span></span>|  
|<xref:System.Messaging.MessageQueue.DenySharedReceive%2A>|<span data-ttu-id="7aa34-240">`sharedModeDenyReceive` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="7aa34-240">The value of the `sharedModeDenyReceive` parameter.</span></span>|  
|<xref:System.Messaging.MessageQueue.UseJournalQueue%2A>|<span data-ttu-id="7aa34-241">`true`如果启用了消息队列对象的日志设置;否则为`false`。</span><span class="sxs-lookup"><span data-stu-id="7aa34-241">`true`, if the Message Queuing object's journal setting is enabled; otherwise, `false`.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-242">下面的代码示例创建一个新<xref:System.Messaging.MessageQueue>具有独占访问权，将设置其路径中，并向队列发送消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-242">The following code example creates a new <xref:System.Messaging.MessageQueue> with exclusive access, sets its path, and sends a message to the queue.</span></span>  
  
 [!code-cpp[MessageQueue.ctor_PathSharedModeDenyReceive#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.ctor_PathSharedModeDenyReceive/CPP/mqctor_denysharedreceive.cpp#1)]
 [!code-csharp[MessageQueue.ctor_PathSharedModeDenyReceive#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.ctor_PathSharedModeDenyReceive/CS/mqctor_denysharedreceive.cs#1)]
 [!code-vb[MessageQueue.ctor_PathSharedModeDenyReceive#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.ctor_PathSharedModeDenyReceive/VB/mqctor_denysharedreceive.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-243">
            <see cref="P:System.Messaging.MessageQueue.Path" /> 属性无效，很可能因为尚未设置该属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-243">The <see cref="P:System.Messaging.MessageQueue.Path" /> property is not valid, possibly because it has not been set.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.FormatName" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
        <altmember cref="P:System.Messaging.MessageQueue.QueueName" />
        <altmember cref="P:System.Messaging.MessageQueue.DenySharedReceive" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueue (string path, System.Messaging.QueueAccessMode accessMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.Messaging.QueueAccessMode accessMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.#ctor(System.String,System.Messaging.QueueAccessMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, accessMode As QueueAccessMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueue(System::String ^ path, System::Messaging::QueueAccessMode accessMode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="accessMode" Type="System.Messaging.QueueAccessMode" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="7aa34-244">此 <see cref="T:System.Messaging.MessageQueue" /> 引用的队列的位置，它对于本地计算机可以是“.”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-244">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />, which can be "." for the local computer.</span>
          </span>
        </param>
        <param name="accessMode">
          <span data-ttu-id="7aa34-245">
            <see cref="T:System.Messaging.QueueAccessMode" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-245">One of the <see cref="T:System.Messaging.QueueAccessMode" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-246">初始化 <see cref="T:System.Messaging.MessageQueue" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-246">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueue (string path, bool sharedModeDenyReceive, bool enableCache);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, bool sharedModeDenyReceive, bool enableCache) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, sharedModeDenyReceive As Boolean, enableCache As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueue(System::String ^ path, bool sharedModeDenyReceive, bool enableCache);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="sharedModeDenyReceive" Type="System.Boolean" />
        <Parameter Name="enableCache" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="7aa34-247">此 <see cref="T:System.Messaging.MessageQueue" /> 引用的队列的位置，它对于本地计算机可以是“.”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-247">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />, which can be "." for the local computer.</span>
          </span>
        </param>
        <param name="sharedModeDenyReceive">
          <span data-ttu-id="7aa34-248">
            <see langword="true" />，授予访问该队列的第一个应用程序独占读访问权；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-248">
              <see langword="true" /> to grant exclusive read access to the first application that accesses the queue; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="enableCache">
          <span data-ttu-id="7aa34-249">如果创建和使用连接缓存，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-249">
              <see langword="true" /> to create and use a connection cache; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-250">初始化 <see cref="T:System.Messaging.MessageQueue" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-250">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7aa34-251">下面的代码示例创建一个新<xref:System.Messaging.MessageQueue>具有独占读取访问权限和启用了连接缓存。</span><span class="sxs-lookup"><span data-stu-id="7aa34-251">The following code example creates a new <xref:System.Messaging.MessageQueue> with exclusive read access and with connection caching enabled.</span></span>  
  
 [!code-cpp[MessageQueue4#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue4/cpp/class1.cpp#1)]
 [!code-csharp[MessageQueue4#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue4/CS/class1.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueue (string path, bool sharedModeDenyReceive, bool enableCache, System.Messaging.QueueAccessMode accessMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, bool sharedModeDenyReceive, bool enableCache, valuetype System.Messaging.QueueAccessMode accessMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean,System.Boolean,System.Messaging.QueueAccessMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, sharedModeDenyReceive As Boolean, enableCache As Boolean, accessMode As QueueAccessMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueue(System::String ^ path, bool sharedModeDenyReceive, bool enableCache, System::Messaging::QueueAccessMode accessMode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="sharedModeDenyReceive" Type="System.Boolean" />
        <Parameter Name="enableCache" Type="System.Boolean" />
        <Parameter Name="accessMode" Type="System.Messaging.QueueAccessMode" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="7aa34-252">此 <see cref="T:System.Messaging.MessageQueue" /> 引用的队列的位置，它对于本地计算机可以是“.”。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-252">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />, which can be "." for the local computer.</span>
          </span>
        </param>
        <param name="sharedModeDenyReceive">
          <span data-ttu-id="7aa34-253">
            <see langword="true" />，授予访问该队列的第一个应用程序独占读访问权；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-253">
              <see langword="true" /> to grant exclusive read access to the first application that accesses the queue; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="enableCache">
          <span data-ttu-id="7aa34-254">如果创建和使用连接缓存，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-254">
              <see langword="true" /> to create and use a connection cache; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="accessMode">
          <span data-ttu-id="7aa34-255">
            <see cref="T:System.Messaging.QueueAccessMode" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-255">One of the <see cref="T:System.Messaging.QueueAccessMode" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-256">初始化 <see cref="T:System.Messaging.MessageQueue" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-256">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessMode">
      <MemberSignature Language="C#" Value="public System.Messaging.QueueAccessMode AccessMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.QueueAccessMode AccessMode" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.AccessMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AccessMode As QueueAccessMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::QueueAccessMode AccessMode { System::Messaging::QueueAccessMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.QueueAccessMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-257">获取一个值，该值指示队列的访问模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-257">Gets a value that indicates the access mode for the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7aa34-258">
            <see cref="T:System.Messaging.QueueAccessMode" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-258">One of the <see cref="T:System.Messaging.QueueAccessMode" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-259">队列的默认访问模式是`QueueAccessMode.SendAndReceive`，除非另行指定，否则时调用的构造函数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-259">The default access mode for a queue is `QueueAccessMode.SendAndReceive`, unless you specify otherwise when calling the constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public bool Authenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Authenticate" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.Authenticate" />
      <MemberSignature Language="VB.NET" Value="Public Property Authenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Authenticate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_Authenticate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-260">获取或设置一个值，该值指示队列是否仅接受经过身份验证的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-260">Gets or sets a value that indicates whether the queue accepts only authenticated messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7aa34-261">如果队列仅接受已经过身份验证的消息，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-261">
              <see langword="true" /> if the queue accepts only authenticated messages; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="7aa34-262">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-262">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-263">消息身份验证提供的方法来确保消息完整性和验证的发件人消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-263">Message authentication provides a way to ensure message integrity and to verify who sent the message.</span></span> <span data-ttu-id="7aa34-264">若要请求身份验证，发送应用程序，请设置消息的身份验证级别。</span><span class="sxs-lookup"><span data-stu-id="7aa34-264">To request authentication, the sending application sets the message's authentication level.</span></span>  
  
 <span data-ttu-id="7aa34-265">当你将设置<xref:System.Messaging.MessageQueue.Authenticate%2A>到`true`，可将在服务器上，而不仅与此队列的访问权限<xref:System.Messaging.MessageQueue>实例。</span><span class="sxs-lookup"><span data-stu-id="7aa34-265">When you set <xref:System.Messaging.MessageQueue.Authenticate%2A> to `true`, you are restricting access to the queue on the server, not only to this <xref:System.Messaging.MessageQueue> instance.</span></span> <span data-ttu-id="7aa34-266">将影响所有客户端使用相同的消息队列队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-266">All clients working against the same Message Queuing queue will be affected.</span></span>  
  
 <span data-ttu-id="7aa34-267">只接受经过身份验证的消息队列将拒绝未经身份验证的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-267">A queue that accepts only authenticated messages will reject a non-authenticated message.</span></span> <span data-ttu-id="7aa34-268">若要请求消息遭到拒绝的通知，发送应用程序可以设置<xref:System.Messaging.Message.AcknowledgeType%2A>消息的属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-268">To request notification of message rejection, a sending application can set the <xref:System.Messaging.Message.AcknowledgeType%2A> property of the message.</span></span> <span data-ttu-id="7aa34-269">因为消息遭到拒绝的任何其他指示不存在，则发送应用程序可以丢失的消息，除非您请求，它将发送到死信队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-269">Because no other indication of message rejection exists, the sending application can lose the message unless you request that it be sent to the dead-letter queue.</span></span>  
  
 <span data-ttu-id="7aa34-270">下表显示此属性是在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-270">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-271">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-271">Workgroup mode</span></span>|<span data-ttu-id="7aa34-272">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-272">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-273">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-273">Local computer</span></span>|<span data-ttu-id="7aa34-274">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-274">Yes</span></span>|  
|<span data-ttu-id="7aa34-275">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-275">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-276">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-276">Yes</span></span>|  
|<span data-ttu-id="7aa34-277">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-277">Remote computer</span></span>|<span data-ttu-id="7aa34-278">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-278">No</span></span>|  
|<span data-ttu-id="7aa34-279">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-279">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-280">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-280">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-281">下面的代码示例获取和设置的消息队列的值<xref:System.Messaging.MessageQueue.Authenticate%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-281">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.Authenticate%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#3](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-282">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-282">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.UseDeadLetterQueue" />
        <altmember cref="P:System.Messaging.Message.AcknowledgeType" />
      </Docs>
    </Member>
    <Member MemberName="BasePriority">
      <MemberSignature Language="C#" Value="public short BasePriority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 BasePriority" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.BasePriority" />
      <MemberSignature Language="VB.NET" Value="Public Property BasePriority As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short BasePriority { short get(); void set(short value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_BasePriority")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-283">获取或设置基优先级，“消息队列”使用该基优先级在网络上传送公共队列的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-283">Gets or sets the base priority Message Queuing uses to route a public queue's messages over the network.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7aa34-284">发送到（公共）队列的所有消息的单个基本优先级。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-284">The single base priority for all messages sent to the (public) queue.</span>
          </span>
          <span data-ttu-id="7aa34-285">默认值为零 (0)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-285">The default is zero (0).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-286">消息队列的基本优先级指定如何一条消息路由到的队列被视为通过网络传输。</span><span class="sxs-lookup"><span data-stu-id="7aa34-286">A message queue's base priority specifies how a message en route to that queue is treated as it travels through the network.</span></span> <span data-ttu-id="7aa34-287">你可以设置<xref:System.Messaging.MessageQueue.BasePriority%2A>属性来授予较高或较低的优先级，于发送到指定的队列比发送到其他队列的所有消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-287">You can set the <xref:System.Messaging.MessageQueue.BasePriority%2A> property to confer a higher or lower priority to all messages sent to the specified queue than those sent to other queues.</span></span> <span data-ttu-id="7aa34-288">将此属性设置修改消息队列队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-288">Setting this property modifies the Message Queuing queue.</span></span> <span data-ttu-id="7aa34-289">因此，任何其他<xref:System.Messaging.MessageQueue>的更改会影响实例。</span><span class="sxs-lookup"><span data-stu-id="7aa34-289">Therefore, any other <xref:System.Messaging.MessageQueue> instances are affected by the change.</span></span>  
  
 <span data-ttu-id="7aa34-290">消息队列的<xref:System.Messaging.MessageQueue.BasePriority%2A>无关<xref:System.Messaging.Message.Priority%2A>消息，它指定在其中传入消息放置在队列中的顺序的属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-290">A message queue's <xref:System.Messaging.MessageQueue.BasePriority%2A> is not related to the <xref:System.Messaging.Message.Priority%2A> property of a message, which specifies the order in which an incoming message is placed in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-291"><xref:System.Messaging.MessageQueue.BasePriority%2A> 将应用使用的格式名来指定其路径仅为公共队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-291"><xref:System.Messaging.MessageQueue.BasePriority%2A> applies only to public queues whose paths are specified using the format name.</span></span> <span data-ttu-id="7aa34-292">专用队列的基本优先级始终为零 (0)。</span><span class="sxs-lookup"><span data-stu-id="7aa34-292">The base priority of a private queue is always zero (0).</span></span>  
  
 <span data-ttu-id="7aa34-293">下表显示此属性是在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-293">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-294">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-294">Workgroup mode</span></span>|<span data-ttu-id="7aa34-295">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-295">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-296">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-296">Local computer</span></span>|<span data-ttu-id="7aa34-297">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-297">Yes</span></span>|  
|<span data-ttu-id="7aa34-298">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-298">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-299">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-299">Yes</span></span>|  
|<span data-ttu-id="7aa34-300">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-300">Remote computer</span></span>|<span data-ttu-id="7aa34-301">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-301">No</span></span>|  
|<span data-ttu-id="7aa34-302">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-302">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-303">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-303">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-304">下面的代码示例获取和设置的消息队列的值<xref:System.Messaging.MessageQueue.BasePriority%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-304">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.BasePriority%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#4](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-305">基优先级被设置为无效值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-305">The base priority was set to an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-306">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-306">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.FormatName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginPeek">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <threadsafe>
          <span data-ttu-id="7aa34-307">该方法不是线程安全。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-307">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <summary>
          <span data-ttu-id="7aa34-308">通过通知“消息队列”开始查看消息并在完成后通知事件处理程序，启动一个异步查看操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-308">Initiates an asynchronous peek operation by telling Message Queuing to begin peeking a message and notify the event handler when finished.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginPeek">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPeek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPeek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginPeek" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginPeek () As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPeek();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-309">启动一个没有超时设定的异步查看操作。直到队列中出现消息时，才完成此操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-309">Initiates an asynchronous peek operation that has no time-out. The operation is not complete until a message becomes available in the queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-310">该 <see cref="T:System.IAsyncResult" /> 标识已发布的异步请求的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-310">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-311">在异步处理，你使用<xref:System.Messaging.MessageQueue.BeginPeek%2A>引发<xref:System.Messaging.MessageQueue.PeekCompleted>事件时的消息变得在队列中可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-311">In asynchronous processing, you use <xref:System.Messaging.MessageQueue.BeginPeek%2A> to raise the <xref:System.Messaging.MessageQueue.PeekCompleted> event when a message becomes available in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-312"><xref:System.Messaging.MessageQueue.PeekCompleted> 也会引发一条消息在队列中已存在。</span><span class="sxs-lookup"><span data-stu-id="7aa34-312"><xref:System.Messaging.MessageQueue.PeekCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-313">若要使用<xref:System.Messaging.MessageQueue.BeginPeek%2A>、 创建的事件处理程序处理的异步操作的结果，并将其与你的事件委托。</span><span class="sxs-lookup"><span data-stu-id="7aa34-313">To use <xref:System.Messaging.MessageQueue.BeginPeek%2A>, create an event handler that processes the results of the asynchronous operation, and associate it with your event delegate.</span></span> <span data-ttu-id="7aa34-314"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 启动异步扫视操作;<xref:System.Messaging.MessageQueue>则通知，通过引发<xref:System.Messaging.MessageQueue.PeekCompleted>事件，当消息到达队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-314"><xref:System.Messaging.MessageQueue.BeginPeek%2A> initiates an asynchronous peek operation; the <xref:System.Messaging.MessageQueue> is notified, through the raising of the <xref:System.Messaging.MessageQueue.PeekCompleted> event, when a message arrives in the queue.</span></span> <span data-ttu-id="7aa34-315"><xref:System.Messaging.MessageQueue>然后可以通过调用访问消息<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>或通过检索结果使用<xref:System.Messaging.PeekCompletedEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-315">The <xref:System.Messaging.MessageQueue> can then access the message by calling <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> or by retrieving the result using the <xref:System.Messaging.PeekCompletedEventArgs>.</span></span>  
  
 <span data-ttu-id="7aa34-316"><xref:System.Messaging.MessageQueue.BeginPeek%2A>方法立即返回，但直到调用事件处理程序，则不会完成异步操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-316">The <xref:System.Messaging.MessageQueue.BeginPeek%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="7aa34-317">因为<xref:System.Messaging.MessageQueue.BeginPeek%2A>是异步的你可以调用它可查看队列，而不必阻止当前线程的执行。</span><span class="sxs-lookup"><span data-stu-id="7aa34-317">Because <xref:System.Messaging.MessageQueue.BeginPeek%2A> is asynchronous, you can call it to peek the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="7aa34-318">若要以同步方式查看队列，请使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-318">To synchronously peek the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span>  
  
 <span data-ttu-id="7aa34-319">异步操作完成后，你可以调用<xref:System.Messaging.MessageQueue.BeginPeek%2A>或<xref:System.Messaging.MessageQueue.BeginReceive%2A>再次中继续接收通知的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="7aa34-319">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="7aa34-320"><xref:System.IAsyncResult> ，<xref:System.Messaging.MessageQueue.BeginPeek%2A>返回标识方法启动异步操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-320">The <xref:System.IAsyncResult> that <xref:System.Messaging.MessageQueue.BeginPeek%2A> returns identifies the asynchronous operation that the method started.</span></span> <span data-ttu-id="7aa34-321">你可以使用此<xref:System.IAsyncResult>的整个生存期内此操作，尽管你通常不使用它之前<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>调用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-321">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="7aa34-322">但是，如果启动多个异步操作，你可以将其<xref:System.IAsyncResult>值在数组中，并指定是否等待所有的操作或任何操作完成。</span><span class="sxs-lookup"><span data-stu-id="7aa34-322">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="7aa34-323">在这种情况下，使用<xref:System.IAsyncResult.AsyncWaitHandle%2A>属性<xref:System.IAsyncResult>用于标识已完成的操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-323">In this case, you use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="7aa34-324">如果<xref:System.Messaging.MessageQueue.CanRead%2A>是`false`，引发完成事件时，但调用时，将引发异常<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-324">If <xref:System.Messaging.MessageQueue.CanRead%2A> is `false`, the completion event is raised, but an exception will be thrown when calling <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>.</span></span>  
  
 <span data-ttu-id="7aa34-325">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-325">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-326">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-326">Workgroup mode</span></span>|<span data-ttu-id="7aa34-327">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-327">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-328">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-328">Local computer</span></span>|<span data-ttu-id="7aa34-329">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-329">Yes</span></span>|  
|<span data-ttu-id="7aa34-330">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-330">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-331">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-331">Yes</span></span>|  
|<span data-ttu-id="7aa34-332">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-332">Remote computer</span></span>|<span data-ttu-id="7aa34-333">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-333">No</span></span>|  
|<span data-ttu-id="7aa34-334">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-334">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-335">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-335">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-336">下面的代码示例创建名为一个事件处理程序`MyPeekCompleted`，将其附加到<xref:System.Messaging.MessageQueue.PeekCompleted>事件处理程序委托，然后调用<xref:System.Messaging.MessageQueue.BeginPeek%2A>启动位于路径的队列上的异步查看操作"。 \myQueue"。</span><span class="sxs-lookup"><span data-stu-id="7aa34-336">The following code example creates an event handler named `MyPeekCompleted`, attaches it to the <xref:System.Messaging.MessageQueue.PeekCompleted> event handler delegate, and calls <xref:System.Messaging.MessageQueue.BeginPeek%2A> to initiate an asynchronous peek operation on the queue that is located at the path ".\myQueue".</span></span> <span data-ttu-id="7aa34-337">当<xref:System.Messaging.MessageQueue.PeekCompleted>引发事件，该示例扫视消息，并将其正文写入到屏幕。</span><span class="sxs-lookup"><span data-stu-id="7aa34-337">When a <xref:System.Messaging.MessageQueue.PeekCompleted> event is raised, the example peeks the message and writes its body to the screen.</span></span> <span data-ttu-id="7aa34-338">该示例然后调用<xref:System.Messaging.MessageQueue.BeginPeek%2A>以启动新的异步扫视操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-338">The example then calls <xref:System.Messaging.MessageQueue.BeginPeek%2A> again to initiate a new asynchronous peek operation.</span></span>  
  
 [!code-cpp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CPP/mqbeginpeek_noparms.cpp#1)]
 [!code-csharp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CS/mqbeginpeek_noparms.cs#1)]
 [!code-vb[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/VB/mqbeginpeek_noparms.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-339">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-339">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="7aa34-340">该方法不是线程安全。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-340">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
      </Docs>
    </Member>
    <Member MemberName="BeginPeek">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPeek (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPeek(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginPeek (timeout As TimeSpan) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPeek(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="7aa34-341">一个 <see cref="T:System.TimeSpan" /> 指示等待消息变为可用所用的时间间隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-341">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-342">启动一个具有指定超时设定的异步查看操作。直到队列中出现消息时或发生超时时才完成操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-342">Initiates an asynchronous peek operation that has a specified time-out. The operation is not complete until either a message becomes available in the queue or the time-out occurs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-343">该 <see cref="T:System.IAsyncResult" /> 标识已发布的异步请求的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-343">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-344">在异步处理，你使用<xref:System.Messaging.MessageQueue.BeginPeek%2A>引发<xref:System.Messaging.MessageQueue.PeekCompleted>事件时的消息变得在队列中或在指定的时间间隔已过期时可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-344">In asynchronous processing, you use <xref:System.Messaging.MessageQueue.BeginPeek%2A> to raise the <xref:System.Messaging.MessageQueue.PeekCompleted> event when a message becomes available in the queue or when the specified interval of time has expired.</span></span>  
  
 <span data-ttu-id="7aa34-345"><xref:System.Messaging.MessageQueue.PeekCompleted> 也会引发一条消息在队列中已存在。</span><span class="sxs-lookup"><span data-stu-id="7aa34-345"><xref:System.Messaging.MessageQueue.PeekCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-346">若要使用<xref:System.Messaging.MessageQueue.BeginPeek%2A>、 创建的事件处理程序处理的异步操作的结果，并将其与你的事件委托。</span><span class="sxs-lookup"><span data-stu-id="7aa34-346">To use <xref:System.Messaging.MessageQueue.BeginPeek%2A>, create an event handler that processes the results of the asynchronous operation, and associate it with your event delegate.</span></span> <span data-ttu-id="7aa34-347"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 启动异步扫视操作;<xref:System.Messaging.MessageQueue>则通知，通过引发<xref:System.Messaging.MessageQueue.PeekCompleted>事件，当消息到达队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-347"><xref:System.Messaging.MessageQueue.BeginPeek%2A> initiates an asynchronous peek operation; the <xref:System.Messaging.MessageQueue> is notified, through the raising of the <xref:System.Messaging.MessageQueue.PeekCompleted> event, when a message arrives in the queue.</span></span> <span data-ttu-id="7aa34-348"><xref:System.Messaging.MessageQueue>然后可以通过调用访问消息<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>或通过检索结果使用<xref:System.Messaging.PeekCompletedEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-348">The <xref:System.Messaging.MessageQueue> can then access the message by calling <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> or by retrieving the result using the <xref:System.Messaging.PeekCompletedEventArgs>.</span></span>  
  
 <span data-ttu-id="7aa34-349"><xref:System.Messaging.MessageQueue.BeginPeek%2A>方法立即返回，但直到调用事件处理程序，则不会完成异步操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-349">The <xref:System.Messaging.MessageQueue.BeginPeek%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="7aa34-350">因为<xref:System.Messaging.MessageQueue.BeginPeek%2A>是异步的你可以调用它可查看队列，而不必阻止当前线程的执行。</span><span class="sxs-lookup"><span data-stu-id="7aa34-350">Because <xref:System.Messaging.MessageQueue.BeginPeek%2A> is asynchronous, you can call it to peek the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="7aa34-351">若要以同步方式查看队列，请使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-351">To synchronously peek the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span>  
  
 <span data-ttu-id="7aa34-352">异步操作完成后，你可以调用<xref:System.Messaging.MessageQueue.BeginPeek%2A>或<xref:System.Messaging.MessageQueue.BeginReceive%2A>再次中继续接收通知的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="7aa34-352">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="7aa34-353"><xref:System.IAsyncResult> ，<xref:System.Messaging.MessageQueue.BeginPeek%2A>返回标识方法启动异步操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-353">The <xref:System.IAsyncResult> that <xref:System.Messaging.MessageQueue.BeginPeek%2A> returns identifies the asynchronous operation that the method started.</span></span> <span data-ttu-id="7aa34-354">你可以使用此<xref:System.IAsyncResult>的整个生存期内此操作，尽管你通常不使用它之前<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>调用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-354">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="7aa34-355">但是，如果启动多个异步操作，你可以将其<xref:System.IAsyncResult>值在数组中，并指定是否等待所有的操作或任何操作完成。</span><span class="sxs-lookup"><span data-stu-id="7aa34-355">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="7aa34-356">在这种情况下，使用<xref:System.IAsyncResult.AsyncWaitHandle%2A>属性<xref:System.IAsyncResult>用于标识已完成的操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-356">In this case, you use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="7aa34-357">此重载指定超时。如果指定的间隔`timeout`参数过期，则此组件引发<xref:System.Messaging.MessageQueue.PeekCompleted>事件。</span><span class="sxs-lookup"><span data-stu-id="7aa34-357">This overload specifies a time-out. If the interval specified by the `timeout` parameter expires, this component raises the <xref:System.Messaging.MessageQueue.PeekCompleted> event.</span></span> <span data-ttu-id="7aa34-358">因为不存在的任何消息的后续调用<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>将引发异常。</span><span class="sxs-lookup"><span data-stu-id="7aa34-358">Because no message exists, a subsequent call to <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> will throw an exception.</span></span>  
  
 <span data-ttu-id="7aa34-359">如果<xref:System.Messaging.MessageQueue.CanRead%2A>是`false`，引发完成事件时，但调用时，将引发异常<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-359">If <xref:System.Messaging.MessageQueue.CanRead%2A> is `false`, the completion event is raised, but an exception will be thrown when calling <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>.</span></span>  
  
 <span data-ttu-id="7aa34-360">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-360">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-361">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-361">Workgroup mode</span></span>|<span data-ttu-id="7aa34-362">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-362">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-363">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-363">Local computer</span></span>|<span data-ttu-id="7aa34-364">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-364">Yes</span></span>|  
|<span data-ttu-id="7aa34-365">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-365">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-366">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-366">Yes</span></span>|  
|<span data-ttu-id="7aa34-367">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-367">Remote computer</span></span>|<span data-ttu-id="7aa34-368">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-368">No</span></span>|  
|<span data-ttu-id="7aa34-369">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-369">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-370">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-370">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-371">下面的代码示例创建一个异步查看操作，使用队列路径"。 \myQueue"。</span><span class="sxs-lookup"><span data-stu-id="7aa34-371">The following code example creates an asynchronous peek operation, using the queue path ".\myQueue".</span></span> <span data-ttu-id="7aa34-372">它将创建事件处理程序， `MyPeekCompleted`，并将其附加到<xref:System.Messaging.MessageQueue.PeekCompleted>事件处理程序委托。</span><span class="sxs-lookup"><span data-stu-id="7aa34-372">It creates an event handler, `MyPeekCompleted`, and attaches it to the <xref:System.Messaging.MessageQueue.PeekCompleted> event handler delegate.</span></span> <span data-ttu-id="7aa34-373"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 调用的超时值为 1 分钟后，可启动异步扫视操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-373"><xref:System.Messaging.MessageQueue.BeginPeek%2A> is called with a time-out of one minute, to initiate the asynchronous peek operation.</span></span> <span data-ttu-id="7aa34-374">当<xref:System.Messaging.MessageQueue.PeekCompleted>引发事件或超时时间已到，如果存在，并且其正文会写入到屏幕检索消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-374">When a <xref:System.Messaging.MessageQueue.PeekCompleted> event is raised or the time-out expires, the message is retrieved if one exists, and its body is written to the screen.</span></span> <span data-ttu-id="7aa34-375">然后<xref:System.Messaging.MessageQueue.BeginPeek%2A>会再次调用以启动新的异步扫视操作相同的超时时间。</span><span class="sxs-lookup"><span data-stu-id="7aa34-375">Then <xref:System.Messaging.MessageQueue.BeginPeek%2A> is called again to initiate a new asynchronous peek operation with the same time-out.</span></span>  
  
 [!code-cpp[MessageQueue.BeginPeek_timeout#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginPeek_timeout/CPP/mqbeginpeek_timeout.cpp#1)]
 [!code-csharp[MessageQueue.BeginPeek_timeout#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginPeek_timeout/CS/mqbeginpeek_timeout.cs#1)]
 [!code-vb[MessageQueue.BeginPeek_timeout#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginPeek_timeout/VB/mqbeginpeek_timeout.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-376">为 <paramref name="timeout" /> 参数指定的值无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-376">The value specified for the <paramref name="timeout" /> parameter is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-377">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-377">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="7aa34-378">该方法不是线程安全。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-378">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="BeginPeek">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPeek (TimeSpan timeout, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPeek(valuetype System.TimeSpan timeout, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginPeek (timeout As TimeSpan, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPeek(TimeSpan timeout, System::Object ^ stateObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="7aa34-379">一个 <see cref="T:System.TimeSpan" /> 指示等待消息变为可用所用的时间间隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-379">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</span>
          </span>
        </param>
        <param name="stateObject">
          <span data-ttu-id="7aa34-380">应用程序指定的状态对象，包含与异步操作关联的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-380">A state object, specified by the application, that contains information associated with the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-381">启动具有指定超时设定和指定状态对象的异步查看操作，此状态对象在操作的整个生存期内提供相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-381">Initiates an asynchronous peek operation that has a specified time-out and a specified state object, which provides associated information throughout the operation's lifetime.</span>
          </span>
          <span data-ttu-id="7aa34-382">直到队列中出现消息时或发生超时时才完成操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-382">The operation is not complete until either a message becomes available in the queue or the time-out occurs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-383">该 <see cref="T:System.IAsyncResult" /> 标识已发布的异步请求的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-383">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-384">在异步处理，你使用<xref:System.Messaging.MessageQueue.BeginPeek%2A>引发<xref:System.Messaging.MessageQueue.PeekCompleted>事件时的消息变得在队列中或在指定的时间间隔已过期时可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-384">In asynchronous processing, you use <xref:System.Messaging.MessageQueue.BeginPeek%2A> to raise the <xref:System.Messaging.MessageQueue.PeekCompleted> event when a message becomes available in the queue or when the specified interval of time has expired.</span></span>  
  
 <span data-ttu-id="7aa34-385"><xref:System.Messaging.MessageQueue.PeekCompleted> 也会引发一条消息在队列中已存在。</span><span class="sxs-lookup"><span data-stu-id="7aa34-385"><xref:System.Messaging.MessageQueue.PeekCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-386">使用此重载以将信息关联与将整个操作的整个生存期内保留操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-386">Use this overload to associate information with the operation that will be preserved throughout the operation's lifetime.</span></span> <span data-ttu-id="7aa34-387">事件处理程序可以访问此信息通过查看<xref:System.IAsyncResult.AsyncState%2A>属性<xref:System.IAsyncResult>操作与该键相关联。</span><span class="sxs-lookup"><span data-stu-id="7aa34-387">The event handler can access this information by looking at the <xref:System.IAsyncResult.AsyncState%2A> property of the <xref:System.IAsyncResult> that is associated with the operation.</span></span>  
  
 <span data-ttu-id="7aa34-388">若要使用<xref:System.Messaging.MessageQueue.BeginPeek%2A>、 创建的事件处理程序处理的异步操作的结果，并将其与你的事件委托。</span><span class="sxs-lookup"><span data-stu-id="7aa34-388">To use <xref:System.Messaging.MessageQueue.BeginPeek%2A>, create an event handler that processes the results of the asynchronous operation, and associate it with your event delegate.</span></span> <span data-ttu-id="7aa34-389"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 启动异步扫视操作;<xref:System.Messaging.MessageQueue>则通知，通过引发<xref:System.Messaging.MessageQueue.PeekCompleted>事件，当消息到达队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-389"><xref:System.Messaging.MessageQueue.BeginPeek%2A> initiates an asynchronous peek operation; the <xref:System.Messaging.MessageQueue> is notified, through the raising of the <xref:System.Messaging.MessageQueue.PeekCompleted> event, when a message arrives in the queue.</span></span> <span data-ttu-id="7aa34-390"><xref:System.Messaging.MessageQueue>然后可以通过调用访问消息<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>或通过检索结果使用<xref:System.Messaging.PeekCompletedEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-390">The <xref:System.Messaging.MessageQueue> can then access the message by calling <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> or by retrieving the result using the <xref:System.Messaging.PeekCompletedEventArgs>.</span></span>  
  
 <span data-ttu-id="7aa34-391"><xref:System.Messaging.MessageQueue.BeginPeek%2A>方法立即返回，但直到调用事件处理程序，则不会完成异步操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-391">The <xref:System.Messaging.MessageQueue.BeginPeek%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="7aa34-392">因为<xref:System.Messaging.MessageQueue.BeginPeek%2A>是异步的你可以调用它可查看队列，而不必阻止当前线程的执行。</span><span class="sxs-lookup"><span data-stu-id="7aa34-392">Because <xref:System.Messaging.MessageQueue.BeginPeek%2A> is asynchronous, you can call it to peek the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="7aa34-393">若要以同步方式查看队列，请使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-393">To synchronously peek the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span>  
  
 <span data-ttu-id="7aa34-394">异步操作完成后，你可以调用<xref:System.Messaging.MessageQueue.BeginPeek%2A>或<xref:System.Messaging.MessageQueue.BeginReceive%2A>再次中继续接收通知的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="7aa34-394">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="7aa34-395"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 返回<xref:System.IAsyncResult>标识方法启动异步操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-395"><xref:System.Messaging.MessageQueue.BeginPeek%2A> returns a <xref:System.IAsyncResult> that identifies the asynchronous operation that the method started.</span></span> <span data-ttu-id="7aa34-396">你可以使用此<xref:System.IAsyncResult>的整个生存期内此操作，尽管你通常不使用它之前<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>调用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-396">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="7aa34-397">但是，如果启动多个异步操作，你可以将其<xref:System.IAsyncResult>值在数组中，并指定是否等待所有的操作或任何操作完成。</span><span class="sxs-lookup"><span data-stu-id="7aa34-397">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="7aa34-398">在这种情况下，使用<xref:System.IAsyncResult.AsyncWaitHandle%2A>属性<xref:System.IAsyncResult>用于标识已完成的操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-398">In this case, you use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="7aa34-399">此重载指定超时和状态对象。</span><span class="sxs-lookup"><span data-stu-id="7aa34-399">This overload specifies a time-out and a state object.</span></span> <span data-ttu-id="7aa34-400">如果指定的间隔`timeout`参数过期，则此组件引发<xref:System.Messaging.MessageQueue.PeekCompleted>事件。</span><span class="sxs-lookup"><span data-stu-id="7aa34-400">If the interval specified by the `timeout` parameter expires, this component raises the <xref:System.Messaging.MessageQueue.PeekCompleted> event.</span></span> <span data-ttu-id="7aa34-401">因为不存在的任何消息的后续调用<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>将引发异常。</span><span class="sxs-lookup"><span data-stu-id="7aa34-401">Because no message exists, a subsequent call to <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> will throw an exception.</span></span>  
  
 <span data-ttu-id="7aa34-402">状态对象将与操作相关联的状态信息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-402">The state object associates state information with the operation.</span></span> <span data-ttu-id="7aa34-403">例如，如果你调用<xref:System.Messaging.MessageQueue.BeginPeek%2A>多次启动多个操作，你可以指定每个操作通过你定义单独的状态对象。</span><span class="sxs-lookup"><span data-stu-id="7aa34-403">For example, if you call <xref:System.Messaging.MessageQueue.BeginPeek%2A> multiple times to initiate multiple operations, you can identify each operation through a separate state object that you define.</span></span> <span data-ttu-id="7aa34-404">举例说明了这种情况下，请参阅示例部分。</span><span class="sxs-lookup"><span data-stu-id="7aa34-404">For an illustration of this scenario, see the Example section.</span></span>  
  
 <span data-ttu-id="7aa34-405">状态对象还可用于跨进程线程中传递信息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-405">You can also use the state object to pass information across process threads.</span></span> <span data-ttu-id="7aa34-406">如果在线程启动，但在另一个线程中的异步方案是回调，状态对象封送，并从该事件传递回以及信息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-406">If a thread is started but the callback is on a different thread in an asynchronous scenario, the state object is marshaled and passed back along with information from the event.</span></span>  
  
 <span data-ttu-id="7aa34-407">如果<xref:System.Messaging.MessageQueue.CanRead%2A>是`false`，引发完成事件时，但调用时，将引发异常<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-407">If <xref:System.Messaging.MessageQueue.CanRead%2A> is `false`, the completion event is raised, but an exception will be thrown when calling <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>.</span></span>  
  
 <span data-ttu-id="7aa34-408">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-408">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-409">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-409">Workgroup mode</span></span>|<span data-ttu-id="7aa34-410">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-410">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-411">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-411">Local computer</span></span>|<span data-ttu-id="7aa34-412">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-412">Yes</span></span>|  
|<span data-ttu-id="7aa34-413">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-413">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-414">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-414">Yes</span></span>|  
|<span data-ttu-id="7aa34-415">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-415">Remote computer</span></span>|<span data-ttu-id="7aa34-416">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-416">No</span></span>|  
|<span data-ttu-id="7aa34-417">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-417">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-418">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-418">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-419">下面的代码示例创建一个异步查看操作，使用队列路径"。 \myQueue"。</span><span class="sxs-lookup"><span data-stu-id="7aa34-419">The following code example creates an asynchronous peek operation, using the queue path ".\myQueue".</span></span> <span data-ttu-id="7aa34-420">它将创建事件处理程序， `MyPeekCompleted`，并将其附加到<xref:System.Messaging.MessageQueue.PeekCompleted>事件处理程序委托。</span><span class="sxs-lookup"><span data-stu-id="7aa34-420">It creates an event handler, `MyPeekCompleted`, and attaches it to the <xref:System.Messaging.MessageQueue.PeekCompleted> event handler delegate.</span></span> <span data-ttu-id="7aa34-421"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 被调用的超时值为一分钟。</span><span class="sxs-lookup"><span data-stu-id="7aa34-421"><xref:System.Messaging.MessageQueue.BeginPeek%2A> is called, with a time-out of one minute.</span></span> <span data-ttu-id="7aa34-422">每次调用<xref:System.Messaging.MessageQueue.BeginPeek%2A>具有一个唯一的关联的整数，它标识该特定操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-422">Each call to <xref:System.Messaging.MessageQueue.BeginPeek%2A> has a unique associated integer that identifies that particular operation.</span></span> <span data-ttu-id="7aa34-423">当<xref:System.Messaging.MessageQueue.PeekCompleted>引发事件或超时到期时，检索消息，如果存在，并且其正文和特定操作的整数标识符写入到屏幕。</span><span class="sxs-lookup"><span data-stu-id="7aa34-423">When a <xref:System.Messaging.MessageQueue.PeekCompleted> event is raised or the time-out expired, the message, if one exists, is retrieved and its body and the operation-specific integer identifier are written to the screen.</span></span> <span data-ttu-id="7aa34-424">然后<xref:System.Messaging.MessageQueue.BeginPeek%2A>会再次调用以启动新的异步扫视操作与相同的超时和的只是已完成的操作关联的整数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-424">Then <xref:System.Messaging.MessageQueue.BeginPeek%2A> is called again to initiate a new asynchronous peek operation with the same time-out and the associated integer of the just completed operation.</span></span>  
  
 [!code-cpp[MessageQueue.BeginPeek_TimeSpanStateObject#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginPeek_TimeSpanStateObject/CPP/mqbeginpeek_timeoutstateobject.cpp#1)]
 [!code-csharp[MessageQueue.BeginPeek_TimeSpanStateObject#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginPeek_TimeSpanStateObject/CS/mqbeginpeek_timeoutstateobject.cs#1)]
 [!code-vb[MessageQueue.BeginPeek_TimeSpanStateObject#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginPeek_TimeSpanStateObject/VB/mqbeginpeek_timeoutstateobject.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-425">为 <paramref name="timeout" /> 参数指定的值无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-425">The value specified for the <paramref name="timeout" /> parameter is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-426">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-426">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="7aa34-427">该方法不是线程安全。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-427">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="BeginPeek">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPeek (TimeSpan timeout, object stateObject, AsyncCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPeek(valuetype System.TimeSpan timeout, object stateObject, class System.AsyncCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginPeek (timeout As TimeSpan, stateObject As Object, callback As AsyncCallback) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPeek(TimeSpan timeout, System::Object ^ stateObject, AsyncCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="stateObject" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="7aa34-428">一个 <see cref="T:System.TimeSpan" /> 指示等待消息变为可用所用的时间间隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-428">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</span>
          </span>
        </param>
        <param name="stateObject">
          <span data-ttu-id="7aa34-429">应用程序指定的状态对象，包含与异步操作关联的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-429">A state object, specified by the application, that contains information associated with the asynchronous operation.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="7aa34-430">该 <see cref="T:System.AsyncCallback" /> 将接收异步操作完成通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-430">The <see cref="T:System.AsyncCallback" /> that will receive the notification of the asynchronous operation completion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-431">启动具有指定超时设定和指定状态对象的异步查看操作，此状态对象在操作的整个生存期内提供相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-431">Initiates an asynchronous peek operation that has a specified time-out and a specified state object, which provides associated information throughout the operation's lifetime.</span>
          </span>
          <span data-ttu-id="7aa34-432">此重载通过回调接收操作的事件处理程序标识的通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-432">This overload receives notification, through a callback, of the identity of the event handler for the operation.</span>
          </span>
          <span data-ttu-id="7aa34-433">直到队列中出现消息时或发生超时时才完成操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-433">The operation is not complete until either a message becomes available in the queue or the time-out occurs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-434">该 <see cref="T:System.IAsyncResult" /> 标识已发布的异步请求的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-434">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-435">当你使用此重载时，回调参数中指定时将调用回调直接的消息变得可用队列中或已过期的指定的时间间隔;<xref:System.Messaging.MessageQueue.PeekCompleted>不会引发事件。</span><span class="sxs-lookup"><span data-stu-id="7aa34-435">When you use this overload, the callback specified in the callback parameter is invoked directly when a message becomes available in the queue or when the specified interval of time has expired; the <xref:System.Messaging.MessageQueue.PeekCompleted> event is not raised.</span></span> <span data-ttu-id="7aa34-436">其他重载的<xref:System.Messaging.MessageQueue.BeginPeek%2A>依赖于此组件以引发<xref:System.Messaging.MessageQueue.PeekCompleted>事件。</span><span class="sxs-lookup"><span data-stu-id="7aa34-436">The other overloads of <xref:System.Messaging.MessageQueue.BeginPeek%2A> rely on this component to raise the <xref:System.Messaging.MessageQueue.PeekCompleted> event.</span></span>  
  
 <span data-ttu-id="7aa34-437"><xref:System.Messaging.MessageQueue.PeekCompleted> 也会引发一条消息在队列中已存在。</span><span class="sxs-lookup"><span data-stu-id="7aa34-437"><xref:System.Messaging.MessageQueue.PeekCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-438"><xref:System.Messaging.MessageQueue.BeginPeek%2A>方法立即返回，但直到调用事件处理程序，则不会完成异步操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-438">The <xref:System.Messaging.MessageQueue.BeginPeek%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="7aa34-439">因为<xref:System.Messaging.MessageQueue.BeginPeek%2A>是异步的你可以调用它可查看队列，而不必阻止当前线程的执行。</span><span class="sxs-lookup"><span data-stu-id="7aa34-439">Because <xref:System.Messaging.MessageQueue.BeginPeek%2A> is asynchronous, you can call it to peek the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="7aa34-440">若要以同步方式查看队列，请使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-440">To synchronously peek the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span>  
  
 <span data-ttu-id="7aa34-441">异步操作完成后，你可以调用<xref:System.Messaging.MessageQueue.BeginPeek%2A>或<xref:System.Messaging.MessageQueue.BeginReceive%2A>再次中继续接收通知的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="7aa34-441">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="7aa34-442"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 返回<xref:System.IAsyncResult>标识方法启动异步操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-442"><xref:System.Messaging.MessageQueue.BeginPeek%2A> returns a <xref:System.IAsyncResult> that identifies the asynchronous operation that the method started.</span></span> <span data-ttu-id="7aa34-443">你可以使用此<xref:System.IAsyncResult>的整个生存期内此操作，尽管你通常不使用它之前<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>调用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-443">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="7aa34-444">但是，如果启动多个异步操作，你可以将其<xref:System.IAsyncResult>值在数组中，并指定是否等待所有的操作或任何操作完成。</span><span class="sxs-lookup"><span data-stu-id="7aa34-444">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="7aa34-445">在这种情况下，使用<xref:System.IAsyncResult.AsyncWaitHandle%2A>属性<xref:System.IAsyncResult>用于标识已完成的操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-445">In this case, you use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="7aa34-446">状态对象将与操作相关联的状态信息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-446">The state object associates state information with the operation.</span></span> <span data-ttu-id="7aa34-447">例如，如果你调用<xref:System.Messaging.MessageQueue.BeginPeek%2A>多次启动多个操作，你可以指定每个操作通过你定义单独的状态对象。</span><span class="sxs-lookup"><span data-stu-id="7aa34-447">For example, if you call <xref:System.Messaging.MessageQueue.BeginPeek%2A> multiple times to initiate multiple operations, you can identify each operation through a separate state object that you define.</span></span>  
  
 <span data-ttu-id="7aa34-448">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-448">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-449">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-449">Workgroup mode</span></span>|<span data-ttu-id="7aa34-450">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-450">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-451">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-451">Local computer</span></span>|<span data-ttu-id="7aa34-452">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-452">Yes</span></span>|  
|<span data-ttu-id="7aa34-453">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-453">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-454">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-454">Yes</span></span>|  
|<span data-ttu-id="7aa34-455">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-455">Remote computer</span></span>|<span data-ttu-id="7aa34-456">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-456">No</span></span>|  
|<span data-ttu-id="7aa34-457">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-457">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-458">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-458">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-459">下面的代码示例创建一个异步查看操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-459">The following code example creates an asynchronous peek operation.</span></span> <span data-ttu-id="7aa34-460">此代码示例将发送一条消息到本地的消息队列，然后调用<xref:System.Messaging.MessageQueue.BeginPeek%28System.TimeSpan%2CSystem.Object%2CSystem.AsyncCallback%29>，并传入： 超时值为十秒; 标识该特定的消息; 和的新实例的唯一整数<xref:System.AsyncCallback>标识的事件处理程序中， `MyPeekCompleted`.</span><span class="sxs-lookup"><span data-stu-id="7aa34-460">The code example sends a message to a local message queue, then calls <xref:System.Messaging.MessageQueue.BeginPeek%28System.TimeSpan%2CSystem.Object%2CSystem.AsyncCallback%29>, passing in: a time-out value of ten seconds; a unique integer that identifies that particular message; and a new instance of <xref:System.AsyncCallback> that identifies the event handler, `MyPeekCompleted`.</span></span> <span data-ttu-id="7aa34-461">当<xref:System.Messaging.MessageQueue.PeekCompleted>引发事件，事件处理程序扫视消息，并将消息正文和整数消息标识符写到屏幕。</span><span class="sxs-lookup"><span data-stu-id="7aa34-461">When a <xref:System.Messaging.MessageQueue.PeekCompleted> event is raised, the event handler peeks at the message and writes the message body and the integer message identifier to the screen.</span></span>  
  
 [!code-cpp[MessageQueueBeginPeek#0](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueueBeginPeek/cpp/class1.cpp#0)]
 [!code-csharp[MessageQueueBeginPeek#0](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueueBeginPeek/CS/class1.cs#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-462">为 <paramref name="timeout" /> 参数指定的值无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-462">The value specified for the <paramref name="timeout" /> parameter is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-463">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-463">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="7aa34-464">该方法不是线程安全。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-464">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="BeginPeek">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPeek (TimeSpan timeout, System.Messaging.Cursor cursor, System.Messaging.PeekAction action, object state, AsyncCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPeek(valuetype System.TimeSpan timeout, class System.Messaging.Cursor cursor, valuetype System.Messaging.PeekAction action, object state, class System.AsyncCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction,System.Object,System.AsyncCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPeek(TimeSpan timeout, System::Messaging::Cursor ^ cursor, System::Messaging::PeekAction action, System::Object ^ state, AsyncCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cursor" Type="System.Messaging.Cursor" />
        <Parameter Name="action" Type="System.Messaging.PeekAction" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="7aa34-465">一个 <see cref="T:System.TimeSpan" /> 指示等待消息变为可用所用的时间间隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-465">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</span>
          </span>
        </param>
        <param name="cursor">
          <span data-ttu-id="7aa34-466">维持消息队列中特定位置的 <see cref="T:System.Messaging.Cursor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-466">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</span>
          </span>
        </param>
        <param name="action">
          <span data-ttu-id="7aa34-467">
            <see cref="T:System.Messaging.PeekAction" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-467">One of the <see cref="T:System.Messaging.PeekAction" /> values.</span>
          </span>
          <span data-ttu-id="7aa34-468">指示是查看队列中的当前消息还是下一条消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-468">Indicates whether to peek at the current message in the queue, or the next message.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="7aa34-469">应用程序指定的状态对象，包含与异步操作关联的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-469">A state object, specified by the application, that contains information associated with the asynchronous operation.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="7aa34-470">该 <see cref="T:System.AsyncCallback" /> 将接收异步操作完成通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-470">The <see cref="T:System.AsyncCallback" /> that receives the notification of the asynchronous operation completion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-471">启动异步查看操作，此操作具有指定的超时并使用指定的游标、指定的查看操作和指定的状态对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-471">Initiates an asynchronous peek operation that has a specified time-out and that uses a specified cursor, a specified peek action, and a specified state object.</span>
          </span>
          <span data-ttu-id="7aa34-472">状态对象在操作的整个生存期内提供相关的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-472">The state object provides associated information throughout the lifetime of the operation.</span>
          </span>
          <span data-ttu-id="7aa34-473">此重载通过回调接收操作的事件处理程序标识的通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-473">This overload receives notification, through a callback, of the identity of the event handler for the operation.</span>
          </span>
          <span data-ttu-id="7aa34-474">直到队列中出现消息时或发生超时时才完成操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-474">The operation is not complete until either a message becomes available in the queue or the time-out occurs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-475">该 <see cref="T:System.IAsyncResult" /> 标识已发布的异步请求的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-475">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-476">当你使用此重载时，回调参数中指定时将调用回调直接的消息变得在队列中或在指定的时间间隔已过期时可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-476">When you use this overload, the callback specified in the callback parameter is invoked directly when a message becomes available in the queue or when the specified interval of time has expired.</span></span> <span data-ttu-id="7aa34-477"><xref:System.Messaging.MessageQueue.PeekCompleted>不会引发事件。</span><span class="sxs-lookup"><span data-stu-id="7aa34-477">The <xref:System.Messaging.MessageQueue.PeekCompleted> event is not raised.</span></span> <span data-ttu-id="7aa34-478">其他重载的<xref:System.Messaging.MessageQueue.BeginPeek%2A>依赖于此组件以引发<xref:System.Messaging.MessageQueue.PeekCompleted>事件。</span><span class="sxs-lookup"><span data-stu-id="7aa34-478">The other overloads of <xref:System.Messaging.MessageQueue.BeginPeek%2A> rely on this component to raise the <xref:System.Messaging.MessageQueue.PeekCompleted> event.</span></span>  
  
 <span data-ttu-id="7aa34-479"><xref:System.Messaging.MessageQueue.PeekCompleted> 也会引发一条消息在队列中已存在。</span><span class="sxs-lookup"><span data-stu-id="7aa34-479"><xref:System.Messaging.MessageQueue.PeekCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-480"><xref:System.Messaging.MessageQueue.BeginPeek%2A>方法立即返回，但直到调用事件处理程序，则不会完成异步操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-480">The <xref:System.Messaging.MessageQueue.BeginPeek%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="7aa34-481">因为<xref:System.Messaging.MessageQueue.BeginPeek%2A>是异步的你可以调用它可查看队列，而不必阻止当前线程的执行。</span><span class="sxs-lookup"><span data-stu-id="7aa34-481">Because <xref:System.Messaging.MessageQueue.BeginPeek%2A> is asynchronous, you can call it to peek the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="7aa34-482">若要以同步方式查看队列，请使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-482">To synchronously peek the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span>  
  
 <span data-ttu-id="7aa34-483">异步操作完成后，你可以调用<xref:System.Messaging.MessageQueue.BeginPeek%2A>或<xref:System.Messaging.MessageQueue.BeginReceive%2A>再次中继续接收通知的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="7aa34-483">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="7aa34-484"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 返回<xref:System.IAsyncResult>标识通过方法启动的异步操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-484"><xref:System.Messaging.MessageQueue.BeginPeek%2A> returns a <xref:System.IAsyncResult> that identifies the asynchronous operation started by the method.</span></span> <span data-ttu-id="7aa34-485">你可以使用此<xref:System.IAsyncResult>的整个生存期内此操作，尽管你通常不使用它之前<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>调用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-485">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="7aa34-486">但是，如果启动多个异步操作，你可以将其<xref:System.IAsyncResult>值在数组中，并指定是否等待所有的操作或任何操作完成。</span><span class="sxs-lookup"><span data-stu-id="7aa34-486">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="7aa34-487">在这种情况下，使用<xref:System.IAsyncResult.AsyncWaitHandle%2A>属性<xref:System.IAsyncResult>用于标识已完成的操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-487">In this case, use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="7aa34-488">状态对象将与操作相关联的状态信息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-488">The state object associates state information with the operation.</span></span> <span data-ttu-id="7aa34-489">例如，如果你调用<xref:System.Messaging.MessageQueue.BeginPeek%2A>多次启动多个操作，你可以指定每个操作通过你定义单独的状态对象。</span><span class="sxs-lookup"><span data-stu-id="7aa34-489">For example, if you call <xref:System.Messaging.MessageQueue.BeginPeek%2A> multiple times to initiate multiple operations, you can identify each operation through a separate state object that you define.</span></span>  
  
 <span data-ttu-id="7aa34-490">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-490">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-491">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-491">Workgroup mode</span></span>|<span data-ttu-id="7aa34-492">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-492">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-493">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-493">Local computer</span></span>|<span data-ttu-id="7aa34-494">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-494">Yes</span></span>|  
|<span data-ttu-id="7aa34-495">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-495">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-496">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-496">Yes</span></span>|  
|<span data-ttu-id="7aa34-497">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-497">Remote computer</span></span>|<span data-ttu-id="7aa34-498">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-498">No</span></span>|  
|<span data-ttu-id="7aa34-499">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-499">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-500">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-500">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7aa34-501">为 <paramref name="action" /> 参数指定的值不是 <see langword="PeekAction.Current" /> 和 <see langword="PeekAction.Next" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-501">A value other than <see langword="PeekAction.Current" /> or <see langword="PeekAction.Next" /> was specified for the <paramref name="action" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7aa34-502">
            <paramref name="cursor" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-502">The <paramref name="cursor" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-503">为 <paramref name="timeout" /> 参数指定的值无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-503">The value specified for the <paramref name="timeout" /> parameter is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-504">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-504">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="7aa34-505">该方法不是线程安全。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-505">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginReceive">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <threadsafe>
          <span data-ttu-id="7aa34-506">该方法不是线程安全。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-506">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <summary>
          <span data-ttu-id="7aa34-507">通过通知“消息队列”开始接收消息并在完成后通知事件处理程序，启动一个异步接收操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-507">Initiates an asynchronous receive operation by telling Message Queuing to begin receiving a message and notify the event handler when finished.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginReceive" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive () As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-508">启动一个没有超时设定的异步接收操作。直到队列中出现消息时，才完成此操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-508">Initiates an asynchronous receive operation that has no time-out. The operation is not complete until a message becomes available in the queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-509">该 <see cref="T:System.IAsyncResult" /> 标识已发布的异步请求的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-509">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-510">在异步处理，你使用<xref:System.Messaging.MessageQueue.BeginReceive%2A>引发<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件时从队列中删除一条消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-510">In asynchronous processing, you use <xref:System.Messaging.MessageQueue.BeginReceive%2A> to raise the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event when a message has been removed from the queue.</span></span>  
  
 <span data-ttu-id="7aa34-511"><xref:System.Messaging.MessageQueue.ReceiveCompleted> 也会引发一条消息在队列中已存在。</span><span class="sxs-lookup"><span data-stu-id="7aa34-511"><xref:System.Messaging.MessageQueue.ReceiveCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-512">若要使用<xref:System.Messaging.MessageQueue.BeginReceive%2A>、 创建的事件处理程序处理异步操作的结果，并将其与你的事件委托。</span><span class="sxs-lookup"><span data-stu-id="7aa34-512">To use <xref:System.Messaging.MessageQueue.BeginReceive%2A>, create an event handler that processes the results of the asynchronous operation and associate it with your event delegate.</span></span> <span data-ttu-id="7aa34-513"><xref:System.Messaging.MessageQueue.BeginReceive%2A> 启动异步接收操作;<xref:System.Messaging.MessageQueue>则通知，通过引发<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件，当消息到达队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-513"><xref:System.Messaging.MessageQueue.BeginReceive%2A> initiates an asynchronous receive operation; the <xref:System.Messaging.MessageQueue> is notified, through the raising of the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event, when a message arrives in the queue.</span></span> <span data-ttu-id="7aa34-514"><xref:System.Messaging.MessageQueue>然后可以通过调用访问消息<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-514">The <xref:System.Messaging.MessageQueue> can then access the message by calling <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>.</span></span>  
  
 <span data-ttu-id="7aa34-515"><xref:System.Messaging.MessageQueue.BeginReceive%2A>方法立即返回，但直到调用事件处理程序，则不会完成异步操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-515">The <xref:System.Messaging.MessageQueue.BeginReceive%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="7aa34-516">因为<xref:System.Messaging.MessageQueue.BeginReceive%2A>是异步的你可以调用它可接收来自队列的消息，而不会阻止当前线程的执行。</span><span class="sxs-lookup"><span data-stu-id="7aa34-516">Because <xref:System.Messaging.MessageQueue.BeginReceive%2A> is asynchronous, you can call it to receive a message from the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="7aa34-517">若要以同步方式收到一条消息，使用<xref:System.Messaging.MessageQueue.Receive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-517">To synchronously receive a message, use the <xref:System.Messaging.MessageQueue.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="7aa34-518">异步操作完成后，你可以调用<xref:System.Messaging.MessageQueue.BeginPeek%2A>或<xref:System.Messaging.MessageQueue.BeginReceive%2A>再次中继续接收通知的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="7aa34-518">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="7aa34-519"><xref:System.IAsyncResult> ，<xref:System.Messaging.MessageQueue.BeginReceive%2A>返回标识方法启动异步操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-519">The <xref:System.IAsyncResult> that <xref:System.Messaging.MessageQueue.BeginReceive%2A> returns identifies the asynchronous operation that the method started.</span></span> <span data-ttu-id="7aa34-520">你可以使用此<xref:System.IAsyncResult>的整个生存期内此操作，尽管你通常不使用它之前<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>调用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-520">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="7aa34-521">但是，如果启动多个异步操作，你可以将其<xref:System.IAsyncResult>值在数组中，并指定是否等待所有的操作或任何操作完成。</span><span class="sxs-lookup"><span data-stu-id="7aa34-521">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="7aa34-522">在这种情况下，使用<xref:System.IAsyncResult.AsyncWaitHandle%2A>属性<xref:System.IAsyncResult>用于标识已完成的操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-522">In this case, you use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="7aa34-523">如果<xref:System.Messaging.MessageQueue.CanRead%2A>是`false`，引发完成事件时，但调用时，将引发异常<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-523">If <xref:System.Messaging.MessageQueue.CanRead%2A> is `false`, the completion event is raised, but an exception will be thrown when calling <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>.</span></span>  
  
 <span data-ttu-id="7aa34-524">不使用异步调用<xref:System.Messaging.MessageQueue.BeginReceive%2A>与事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-524">Do not use the asynchronous call <xref:System.Messaging.MessageQueue.BeginReceive%2A> with transactions.</span></span> <span data-ttu-id="7aa34-525">如果你想要执行的事务的异步操作，调用<xref:System.Messaging.MessageQueue.BeginPeek%2A>，并将事务和 （同步）<xref:System.Messaging.MessageQueue.Receive%2A>扫视操作在你创建的事件处理程序方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-525">If you want to perform a transactional asynchronous operation, call <xref:System.Messaging.MessageQueue.BeginPeek%2A>, and put the transaction and the (synchronous) <xref:System.Messaging.MessageQueue.Receive%2A> method within the event handler you create for the peek operation.</span></span> <span data-ttu-id="7aa34-526">事件处理程序可能包含功能，如下面的 C# 代码中所示。</span><span class="sxs-lookup"><span data-stu-id="7aa34-526">Your event handler might contain functionality as shown in the following C# code.</span></span>  
  
```csharp  
myMessageQueue.BeginTransaction();  
 myMessageQueue.Receive();  
 myMessageQueue.CommitTransaction();  
```  
  
 <span data-ttu-id="7aa34-527">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-527">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-528">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-528">Workgroup mode</span></span>|<span data-ttu-id="7aa34-529">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-529">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-530">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-530">Local computer</span></span>|<span data-ttu-id="7aa34-531">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-531">Yes</span></span>|  
|<span data-ttu-id="7aa34-532">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-532">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-533">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-533">Yes</span></span>|  
|<span data-ttu-id="7aa34-534">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-534">Remote computer</span></span>|<span data-ttu-id="7aa34-535">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-535">No</span></span>|  
|<span data-ttu-id="7aa34-536">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-536">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-537">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-537">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-538">下面的代码示例链接异步请求。</span><span class="sxs-lookup"><span data-stu-id="7aa34-538">The following code example chains asynchronous requests.</span></span> <span data-ttu-id="7aa34-539">它假定名为"myQueue"的本地计算机上没有队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-539">It assumes there is a queue on the local computer called "myQueue".</span></span> <span data-ttu-id="7aa34-540">`Main`函数开始异步操作由处理`MyReceiveCompleted`例程。</span><span class="sxs-lookup"><span data-stu-id="7aa34-540">The `Main` function begins the asynchronous operation that is handled by the `MyReceiveCompleted` routine.</span></span> <span data-ttu-id="7aa34-541">`MyReceiveCompleted` 处理当前消息并开始一个新异步接收操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-541">`MyReceiveCompleted` processes the current message and begins a new asynchronous receive operation.</span></span>  
  
 [!code-cpp[MessageQueue.BeginReceive_noparms_combined#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginReceive_noparms_combined/CPP/mqbeginreceive_noparms_mre.cpp#1)]
 [!code-csharp[MessageQueue.BeginReceive_noparms_combined#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginReceive_noparms_combined/CS/mqbeginreceive_noparms_mre.cs#1)]
 [!code-vb[MessageQueue.BeginReceive_noparms_combined#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginReceive_noparms_combined/VB/mqbeginreceive_noparms_mre.vb#1)]  
  
 <span data-ttu-id="7aa34-542">下面的代码示例将异步请求排队。</span><span class="sxs-lookup"><span data-stu-id="7aa34-542">The following code example queues asynchronous requests.</span></span> <span data-ttu-id="7aa34-543">调用<xref:System.Messaging.MessageQueue.BeginReceive%2A>使用<xref:System.IAsyncResult.AsyncWaitHandle%2A>其返回值中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-543">The call to <xref:System.Messaging.MessageQueue.BeginReceive%2A> uses the <xref:System.IAsyncResult.AsyncWaitHandle%2A> in its return value.</span></span> <span data-ttu-id="7aa34-544">`Main`例程等待所有异步操作，可在退出之前完成。</span><span class="sxs-lookup"><span data-stu-id="7aa34-544">The `Main` routine waits for all asynchronous operations to be completed before exiting.</span></span>  
  
 [!code-cpp[MessageQueue.BeginReceive_noparms_combined#2](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginReceive_noparms_combined/CPP/mqbeginreceive_noparms_wh.cpp#2)]
 [!code-csharp[MessageQueue.BeginReceive_noparms_combined#2](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginReceive_noparms_combined/CS/mqbeginreceive_noparms_wh.cs#2)]
 [!code-vb[MessageQueue.BeginReceive_noparms_combined#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginReceive_noparms_combined/VB/mqbeginreceive_noparms_wh.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-545">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-545">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="7aa34-546">该方法不是线程安全。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-546">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive (timeout As TimeSpan) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="7aa34-547">一个 <see cref="T:System.TimeSpan" /> 指示等待消息变为可用所用的时间间隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-547">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-548">启动具有指定超时设定的异步接收操作。直到队列中出现消息时或发生超时时才完成操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-548">Initiates an asynchronous receive operation that has a specified time-out. The operation is not complete until either a message becomes available in the queue or the time-out occurs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-549">该 <see cref="T:System.IAsyncResult" /> 标识已发布的异步请求的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-549">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-550">在异步处理，你使用<xref:System.Messaging.MessageQueue.BeginReceive%2A>引发<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件时的消息变得在队列中或在指定的时间间隔已过期时可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-550">In asynchronous processing, you use <xref:System.Messaging.MessageQueue.BeginReceive%2A> to raise the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event when a message becomes available in the queue or when the specified interval of time has expired.</span></span>  
  
 <span data-ttu-id="7aa34-551"><xref:System.Messaging.MessageQueue.ReceiveCompleted> 也会引发一条消息在队列中已存在。</span><span class="sxs-lookup"><span data-stu-id="7aa34-551"><xref:System.Messaging.MessageQueue.ReceiveCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-552">若要使用<xref:System.Messaging.MessageQueue.BeginReceive%2A>、 创建的事件处理程序处理异步操作的结果，并将其与你的事件委托。</span><span class="sxs-lookup"><span data-stu-id="7aa34-552">To use <xref:System.Messaging.MessageQueue.BeginReceive%2A>, create an event handler that processes the results of the asynchronous operation and associate it with your event delegate.</span></span> <span data-ttu-id="7aa34-553"><xref:System.Messaging.MessageQueue.BeginReceive%2A> 启动异步接收操作;<xref:System.Messaging.MessageQueue>则通知，通过引发<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件，当消息到达队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-553"><xref:System.Messaging.MessageQueue.BeginReceive%2A> initiates an asynchronous receive operation; the <xref:System.Messaging.MessageQueue> is notified, through the raising of the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event, when a message arrives in the queue.</span></span> <span data-ttu-id="7aa34-554"><xref:System.Messaging.MessageQueue>然后可以通过调用访问消息<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>或检索结果使用<xref:System.Messaging.ReceiveCompletedEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-554">The <xref:System.Messaging.MessageQueue> can then access the message by calling <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> or retrieving the result using the <xref:System.Messaging.ReceiveCompletedEventArgs>.</span></span>  
  
 <span data-ttu-id="7aa34-555"><xref:System.Messaging.MessageQueue.BeginReceive%2A>方法立即返回，但直到调用事件处理程序，则不会完成异步操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-555">The <xref:System.Messaging.MessageQueue.BeginReceive%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="7aa34-556">因为<xref:System.Messaging.MessageQueue.BeginReceive%2A>是异步的你可以调用它可接收来自队列的消息，而不会阻止当前线程的执行。</span><span class="sxs-lookup"><span data-stu-id="7aa34-556">Because <xref:System.Messaging.MessageQueue.BeginReceive%2A> is asynchronous, you can call it to receive a message from the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="7aa34-557">若要以同步方式收到一条消息，使用<xref:System.Messaging.MessageQueue.Receive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-557">To synchronously receive a message, use the <xref:System.Messaging.MessageQueue.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="7aa34-558">异步操作完成后，你可以调用<xref:System.Messaging.MessageQueue.BeginPeek%2A>或<xref:System.Messaging.MessageQueue.BeginReceive%2A>再次中继续接收通知的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="7aa34-558">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="7aa34-559">如果<xref:System.Messaging.MessageQueue.CanRead%2A>是`false`，引发完成事件时，但调用时，将引发异常<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-559">If <xref:System.Messaging.MessageQueue.CanRead%2A> is `false`, the completion event is raised, but an exception will be thrown when calling <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>.</span></span>  
  
 <span data-ttu-id="7aa34-560"><xref:System.IAsyncResult> ，<xref:System.Messaging.MessageQueue.BeginReceive%2A>返回标识方法启动异步操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-560">The <xref:System.IAsyncResult> that <xref:System.Messaging.MessageQueue.BeginReceive%2A> returns identifies the asynchronous operation that the method started.</span></span> <span data-ttu-id="7aa34-561">你可以使用此<xref:System.IAsyncResult>的整个生存期内此操作，尽管你通常不使用它之前<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>调用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-561">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="7aa34-562">但是，如果启动多个异步操作，你可以将其<xref:System.IAsyncResult>值在数组中，并指定是否等待所有的操作或任何操作完成。</span><span class="sxs-lookup"><span data-stu-id="7aa34-562">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="7aa34-563">在这种情况下，使用<xref:System.IAsyncResult.AsyncWaitHandle%2A>属性<xref:System.IAsyncResult>用于标识已完成的操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-563">In this case, you use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="7aa34-564">此重载指定超时。如果指定的间隔`timeout`参数过期，则此组件引发<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件。</span><span class="sxs-lookup"><span data-stu-id="7aa34-564">This overload specifies a time-out. If the interval specified by the `timeout` parameter expires, this component raises the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event.</span></span> <span data-ttu-id="7aa34-565">因为不存在的任何消息的后续调用<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>将引发异常。</span><span class="sxs-lookup"><span data-stu-id="7aa34-565">Because no message exists, a subsequent call to <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> will throw an exception.</span></span>  
  
 <span data-ttu-id="7aa34-566">不使用异步调用<xref:System.Messaging.MessageQueue.BeginReceive%2A>与事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-566">Do not use the asynchronous call <xref:System.Messaging.MessageQueue.BeginReceive%2A> with transactions.</span></span> <span data-ttu-id="7aa34-567">如果你想要执行的事务的异步操作，调用<xref:System.Messaging.MessageQueue.BeginPeek%2A>，并将事务和 （同步）<xref:System.Messaging.MessageQueue.Receive%2A>扫视操作在你创建的事件处理程序方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-567">If you want to perform a transactional asynchronous operation, call <xref:System.Messaging.MessageQueue.BeginPeek%2A>, and put the transaction and the (synchronous) <xref:System.Messaging.MessageQueue.Receive%2A> method within the event handler you create for the peek operation.</span></span> <span data-ttu-id="7aa34-568">事件处理程序可能包含功能，如下面的 C# 代码中所示。</span><span class="sxs-lookup"><span data-stu-id="7aa34-568">Your event handler might contain functionality as shown in the following C# code.</span></span>  
  
```csharp  
myMessageQueue.BeginTransaction();  
 myMessageQueue.Receive();  
 myMessageQueue.CommitTransaction();  
```  
  
 <span data-ttu-id="7aa34-569">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-569">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-570">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-570">Workgroup mode</span></span>|<span data-ttu-id="7aa34-571">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-571">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-572">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-572">Local computer</span></span>|<span data-ttu-id="7aa34-573">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-573">Yes</span></span>|  
|<span data-ttu-id="7aa34-574">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-574">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-575">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-575">Yes</span></span>|  
|<span data-ttu-id="7aa34-576">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-576">Remote computer</span></span>|<span data-ttu-id="7aa34-577">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-577">No</span></span>|  
|<span data-ttu-id="7aa34-578">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-578">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-579">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-579">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-580">下面的代码示例创建异步接收操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-580">The following code example creates an asynchronous receive operation.</span></span> <span data-ttu-id="7aa34-581">此代码示例创建一个事件处理程序即`MyReceiveCompleted`，并将其附加到<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件处理程序委托。</span><span class="sxs-lookup"><span data-stu-id="7aa34-581">The code example creates an event handler, `MyReceiveCompleted`, and attaches it to the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event handler delegate.</span></span> <span data-ttu-id="7aa34-582">此代码示例将发送一条消息到本地的消息队列，然后调用<xref:System.Messaging.MessageQueue.BeginReceive%28System.TimeSpan%29>，并传入超时值为十秒。</span><span class="sxs-lookup"><span data-stu-id="7aa34-582">The code example sends a message to a local message queue, then calls <xref:System.Messaging.MessageQueue.BeginReceive%28System.TimeSpan%29>, passing in a time-out value of ten seconds.</span></span> <span data-ttu-id="7aa34-583">当<xref:System.Messaging.MessageQueue.ReceiveCompleted>引发事件，事件处理程序接收消息，并将消息正文写到屏幕。</span><span class="sxs-lookup"><span data-stu-id="7aa34-583">When a <xref:System.Messaging.MessageQueue.ReceiveCompleted> event is raised, the event handler receives the message and writes the message body to the screen.</span></span>  
  
 [!code-cpp[MessageQueueBeginReceive1#0](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueueBeginReceive1/cpp/class1.cpp#0)]
 [!code-csharp[MessageQueueBeginReceive1#0](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueueBeginReceive1/CS/class1.cs#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-584">为 <paramref name="timeout" /> 参数指定的值无效，可能是因为它表示负数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-584">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly because it represents a negative number.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-585">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-585">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="7aa34-586">该方法不是线程安全。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-586">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (TimeSpan timeout, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(valuetype System.TimeSpan timeout, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive (timeout As TimeSpan, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(TimeSpan timeout, System::Object ^ stateObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="stateObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="7aa34-587">一个 <see cref="T:System.TimeSpan" /> 指示等待消息变为可用所用的时间间隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-587">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</span>
          </span>
        </param>
        <param name="stateObject">
          <span data-ttu-id="7aa34-588">应用程序指定的状态对象，包含与异步操作关联的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-588">A state object, specified by the application, that contains information associated with the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-589">启动具有指定超时设定和指定状态对象的异步接收操作，此状态对象在操作的整个生存期内提供相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-589">Initiates an asynchronous receive operation that has a specified time-out and a specified state object, which provides associated information throughout the operation's lifetime.</span>
          </span>
          <span data-ttu-id="7aa34-590">直到队列中出现消息时或发生超时时才完成操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-590">The operation is not complete until either a message becomes available in the queue or the time-out occurs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-591">该 <see cref="T:System.IAsyncResult" /> 标识已发布的异步请求的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-591">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-592">在异步处理，你使用<xref:System.Messaging.MessageQueue.BeginReceive%2A>引发<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件时的消息变得在队列中或在指定的时间间隔已过期时可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-592">In asynchronous processing, you use <xref:System.Messaging.MessageQueue.BeginReceive%2A> to raise the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event when a message becomes available in the queue or when the specified interval of time has expired.</span></span>  
  
 <span data-ttu-id="7aa34-593"><xref:System.Messaging.MessageQueue.ReceiveCompleted> 也会引发一条消息在队列中已存在。</span><span class="sxs-lookup"><span data-stu-id="7aa34-593"><xref:System.Messaging.MessageQueue.ReceiveCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-594">使用此重载以将信息关联与将整个操作的整个生存期内保留操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-594">Use this overload to associate information with the operation that will be preserved throughout the operation's lifetime.</span></span> <span data-ttu-id="7aa34-595">事件处理程序可以通过查看检测此信息<xref:System.IAsyncResult.AsyncState%2A>属性<xref:System.IAsyncResult>操作与该键相关联。</span><span class="sxs-lookup"><span data-stu-id="7aa34-595">The event handler can detect this information by looking at the <xref:System.IAsyncResult.AsyncState%2A> property of the <xref:System.IAsyncResult> that is associated with the operation.</span></span>  
  
 <span data-ttu-id="7aa34-596">若要使用<xref:System.Messaging.MessageQueue.BeginReceive%2A>、 创建的事件处理程序处理异步操作的结果，并将其与你的事件委托。</span><span class="sxs-lookup"><span data-stu-id="7aa34-596">To use <xref:System.Messaging.MessageQueue.BeginReceive%2A>, create an event handler that processes the results of the asynchronous operation and associate it with your event delegate.</span></span> <span data-ttu-id="7aa34-597"><xref:System.Messaging.MessageQueue.BeginReceive%2A> 启动异步接收操作;<xref:System.Messaging.MessageQueue>则通知，通过引发<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件，当消息到达队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-597"><xref:System.Messaging.MessageQueue.BeginReceive%2A> initiates an asynchronous receive operation; the <xref:System.Messaging.MessageQueue> is notified, through the raising of the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event, when a message arrives in the queue.</span></span> <span data-ttu-id="7aa34-598"><xref:System.Messaging.MessageQueue>然后可以通过调用访问消息<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>或检索结果使用<xref:System.Messaging.ReceiveCompletedEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-598">The <xref:System.Messaging.MessageQueue> can then access the message by calling <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> or retrieving the result using the <xref:System.Messaging.ReceiveCompletedEventArgs>.</span></span>  
  
 <span data-ttu-id="7aa34-599"><xref:System.Messaging.MessageQueue.BeginReceive%2A>方法立即返回，但直到调用事件处理程序，则不会完成异步操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-599">The <xref:System.Messaging.MessageQueue.BeginReceive%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="7aa34-600">因为<xref:System.Messaging.MessageQueue.BeginReceive%2A>是异步的你可以调用它可接收来自队列的消息，而不会阻止当前线程的执行。</span><span class="sxs-lookup"><span data-stu-id="7aa34-600">Because <xref:System.Messaging.MessageQueue.BeginReceive%2A> is asynchronous, you can call it to receive a message from the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="7aa34-601">若要以同步方式收到一条消息，使用<xref:System.Messaging.MessageQueue.Receive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-601">To synchronously receive a message, use the <xref:System.Messaging.MessageQueue.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="7aa34-602">异步操作完成后，你可以调用<xref:System.Messaging.MessageQueue.BeginPeek%2A>或<xref:System.Messaging.MessageQueue.BeginReceive%2A>再次中继续接收通知的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="7aa34-602">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="7aa34-603"><xref:System.IAsyncResult> ，<xref:System.Messaging.MessageQueue.BeginReceive%2A>返回标识方法启动异步操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-603">The <xref:System.IAsyncResult> that <xref:System.Messaging.MessageQueue.BeginReceive%2A> returns identifies the asynchronous operation that the method started.</span></span> <span data-ttu-id="7aa34-604">你可以使用此<xref:System.IAsyncResult>的整个生存期内此操作，尽管你通常不使用它之前<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>调用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-604">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="7aa34-605">但是，如果启动多个异步操作，你可以将其<xref:System.IAsyncResult>值在数组中，并指定是否等待所有的操作或任何操作完成。</span><span class="sxs-lookup"><span data-stu-id="7aa34-605">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="7aa34-606">在这种情况下，使用<xref:System.IAsyncResult.AsyncWaitHandle%2A>属性<xref:System.IAsyncResult>用于标识已完成的操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-606">In this case, you use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="7aa34-607">此重载指定超时和状态对象。</span><span class="sxs-lookup"><span data-stu-id="7aa34-607">This overload specifies a time-out and a state object.</span></span> <span data-ttu-id="7aa34-608">如果指定的间隔`timeout`参数过期，则此组件引发<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件。</span><span class="sxs-lookup"><span data-stu-id="7aa34-608">If the interval specified by the `timeout` parameter expires, this component raises the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event.</span></span> <span data-ttu-id="7aa34-609">因为不存在的任何消息的后续调用<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>将引发异常。</span><span class="sxs-lookup"><span data-stu-id="7aa34-609">Because no message exists, a subsequent call to <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> will throw an exception.</span></span>  
  
 <span data-ttu-id="7aa34-610">状态对象将与操作相关联的状态信息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-610">The state object associates state information with the operation.</span></span> <span data-ttu-id="7aa34-611">例如，如果你调用<xref:System.Messaging.MessageQueue.BeginReceive%2A>多次启动多个操作，你可以指定每个操作通过你定义单独的状态对象。</span><span class="sxs-lookup"><span data-stu-id="7aa34-611">For example, if you call <xref:System.Messaging.MessageQueue.BeginReceive%2A> multiple times to initiate multiple operations, you can identify each operation through a separate state object that you define.</span></span>  
  
 <span data-ttu-id="7aa34-612">状态对象还可用于跨进程线程中传递信息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-612">You can also use the state object to pass information across process threads.</span></span> <span data-ttu-id="7aa34-613">如果在线程启动，但在另一个线程中的异步方案是回调，状态对象封送，并从该事件传递回以及信息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-613">If a thread is started but the callback is on a different thread in an asynchronous scenario, the state object is marshaled and passed back along with information from the event.</span></span>  
  
 <span data-ttu-id="7aa34-614">不使用异步调用<xref:System.Messaging.MessageQueue.BeginReceive%2A>与事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-614">Do not use the asynchronous call <xref:System.Messaging.MessageQueue.BeginReceive%2A> with transactions.</span></span> <span data-ttu-id="7aa34-615">如果你想要执行的事务的异步操作，调用<xref:System.Messaging.MessageQueue.BeginPeek%2A>，并将事务和 （同步）<xref:System.Messaging.MessageQueue.Receive%2A>扫视操作在你创建的事件处理程序方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-615">If you want to perform a transactional asynchronous operation, call <xref:System.Messaging.MessageQueue.BeginPeek%2A>, and put the transaction and the (synchronous) <xref:System.Messaging.MessageQueue.Receive%2A> method within the event handler you create for the peek operation.</span></span> <span data-ttu-id="7aa34-616">事件处理程序可能包含功能，如下面的 C# 代码中所示。</span><span class="sxs-lookup"><span data-stu-id="7aa34-616">Your event handler might contain functionality as shown in the following C# code.</span></span>  
  
```csharp  
myMessageQueue.BeginTransaction();  
 myMessageQueue.Receive();  
 myMessageQueue.CommitTransaction();  
```  
  
 <span data-ttu-id="7aa34-617">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-617">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-618">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-618">Workgroup mode</span></span>|<span data-ttu-id="7aa34-619">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-619">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-620">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-620">Local computer</span></span>|<span data-ttu-id="7aa34-621">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-621">Yes</span></span>|  
|<span data-ttu-id="7aa34-622">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-622">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-623">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-623">Yes</span></span>|  
|<span data-ttu-id="7aa34-624">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-624">Remote computer</span></span>|<span data-ttu-id="7aa34-625">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-625">No</span></span>|  
|<span data-ttu-id="7aa34-626">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-626">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-627">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-627">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-628">下面的代码示例创建异步接收操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-628">The following code example creates an asynchronous receive operation.</span></span> <span data-ttu-id="7aa34-629">此代码示例创建一个事件处理程序即`MyReceiveCompleted`，并将其附加到<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件处理程序委托。</span><span class="sxs-lookup"><span data-stu-id="7aa34-629">The code example creates an event handler, `MyReceiveCompleted`, and attaches it to the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event handler delegate.</span></span> <span data-ttu-id="7aa34-630">此代码示例将发送一条消息到本地的消息队列，然后调用<xref:System.Messaging.MessageQueue.BeginReceive%28System.TimeSpan%2CSystem.Object%29>，并传入超时值为十秒和一个唯一的整数，它标识该特定消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-630">The code example sends a message to a local message queue, then calls <xref:System.Messaging.MessageQueue.BeginReceive%28System.TimeSpan%2CSystem.Object%29>, passing in a time-out value of ten seconds and a unique integer that identifies that particular message.</span></span> <span data-ttu-id="7aa34-631">当<xref:System.Messaging.MessageQueue.ReceiveCompleted>引发事件，事件处理程序接收消息，并将消息正文和整数消息标识符写入屏幕。</span><span class="sxs-lookup"><span data-stu-id="7aa34-631">When a <xref:System.Messaging.MessageQueue.ReceiveCompleted> event is raised, the event handler receives the message and writes the message body and the integer message identifier to the screen.</span></span>  
  
 [!code-cpp[MessageQueueBeginReceive2#0](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueueBeginReceive2/cpp/class1.cpp#0)]
 [!code-csharp[MessageQueueBeginReceive2#0](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueueBeginReceive2/CS/class1.cs#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-632">为 <paramref name="timeout" /> 参数指定的值无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-632">The value specified for the <paramref name="timeout" /> parameter is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-633">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-633">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="7aa34-634">该方法不是线程安全。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-634">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (TimeSpan timeout, object stateObject, AsyncCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(valuetype System.TimeSpan timeout, object stateObject, class System.AsyncCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive (timeout As TimeSpan, stateObject As Object, callback As AsyncCallback) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(TimeSpan timeout, System::Object ^ stateObject, AsyncCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="stateObject" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="7aa34-635">一个 <see cref="T:System.TimeSpan" /> 指示等待消息变为可用所用的时间间隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-635">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</span>
          </span>
        </param>
        <param name="stateObject">
          <span data-ttu-id="7aa34-636">应用程序指定的状态对象，包含与异步操作关联的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-636">A state object, specified by the application, that contains information associated with the asynchronous operation.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="7aa34-637">该 <see cref="T:System.AsyncCallback" /> 将接收异步操作完成通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-637">The <see cref="T:System.AsyncCallback" /> that will receive the notification of the asynchronous operation completion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-638">启动具有指定超时设定和指定状态对象的异步接收操作，此状态对象在操作的整个生存期内提供相关信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-638">Initiates an asynchronous receive operation that has a specified time-out and a specified state object, which provides associated information throughout the operation's lifetime.</span>
          </span>
          <span data-ttu-id="7aa34-639">此重载通过回调接收操作的事件处理程序标识的通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-639">This overload receives notification, through a callback, of the identity of the event handler for the operation.</span>
          </span>
          <span data-ttu-id="7aa34-640">直到队列中出现消息时或发生超时时才完成操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-640">The operation is not complete until either a message becomes available in the queue or the time-out occurs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-641">该 <see cref="T:System.IAsyncResult" /> 标识已发布的异步请求的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-641">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-642">当你使用此重载时，回调参数中指定时将调用回调直接的消息变得可用队列中或已过期的指定的时间间隔;<xref:System.Messaging.MessageQueue.ReceiveCompleted>不会引发事件。</span><span class="sxs-lookup"><span data-stu-id="7aa34-642">When you use this overload, the callback specified in the callback parameter is invoked directly when a message becomes available in the queue or when the specified interval of time has expired; the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event is not raised.</span></span> <span data-ttu-id="7aa34-643">其他重载的<xref:System.Messaging.MessageQueue.BeginReceive%2A>依赖于此组件以引发<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件。</span><span class="sxs-lookup"><span data-stu-id="7aa34-643">The other overloads of <xref:System.Messaging.MessageQueue.BeginReceive%2A> rely on this component to raise the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event.</span></span>  
  
 <span data-ttu-id="7aa34-644"><xref:System.Messaging.MessageQueue.ReceiveCompleted> 也会引发一条消息在队列中已存在。</span><span class="sxs-lookup"><span data-stu-id="7aa34-644"><xref:System.Messaging.MessageQueue.ReceiveCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-645">若要使用<xref:System.Messaging.MessageQueue.BeginReceive%2A>、 创建的事件处理程序处理异步操作的结果，并将其与你的事件委托。</span><span class="sxs-lookup"><span data-stu-id="7aa34-645">To use <xref:System.Messaging.MessageQueue.BeginReceive%2A>, create an event handler that processes the results of the asynchronous operation and associate it with your event delegate.</span></span> <span data-ttu-id="7aa34-646"><xref:System.Messaging.MessageQueue.BeginReceive%2A> 启动异步接收操作;<xref:System.Messaging.MessageQueue>则通知，通过引发<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件，当消息到达队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-646"><xref:System.Messaging.MessageQueue.BeginReceive%2A> initiates an asynchronous receive operation; the <xref:System.Messaging.MessageQueue> is notified, through the raising of the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event, when a message arrives in the queue.</span></span> <span data-ttu-id="7aa34-647"><xref:System.Messaging.MessageQueue>然后可以通过调用访问消息<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>或检索结果使用<xref:System.Messaging.ReceiveCompletedEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-647">The <xref:System.Messaging.MessageQueue> can then access the message by calling <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> or retrieving the result using the <xref:System.Messaging.ReceiveCompletedEventArgs>.</span></span>  
  
 <span data-ttu-id="7aa34-648"><xref:System.Messaging.MessageQueue.BeginReceive%2A>方法立即返回，但直到调用事件处理程序，则不会完成异步操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-648">The <xref:System.Messaging.MessageQueue.BeginReceive%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="7aa34-649">因为<xref:System.Messaging.MessageQueue.BeginReceive%2A>是异步的你可以调用它可接收来自队列的消息，而不会阻止当前线程的执行。</span><span class="sxs-lookup"><span data-stu-id="7aa34-649">Because <xref:System.Messaging.MessageQueue.BeginReceive%2A> is asynchronous, you can call it to receive a message from the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="7aa34-650">若要以同步方式收到一条消息，使用<xref:System.Messaging.MessageQueue.Receive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-650">To synchronously receive a message, use the <xref:System.Messaging.MessageQueue.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="7aa34-651">异步操作完成后，你可以调用<xref:System.Messaging.MessageQueue.BeginPeek%2A>或<xref:System.Messaging.MessageQueue.BeginReceive%2A>再次中继续接收通知的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="7aa34-651">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="7aa34-652"><xref:System.IAsyncResult> ，<xref:System.Messaging.MessageQueue.BeginReceive%2A>返回标识方法启动异步操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-652">The <xref:System.IAsyncResult> that <xref:System.Messaging.MessageQueue.BeginReceive%2A> returns identifies the asynchronous operation that the method started.</span></span> <span data-ttu-id="7aa34-653">你可以使用此<xref:System.IAsyncResult>的整个生存期内此操作，尽管你通常不使用它之前<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>调用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-653">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="7aa34-654">但是，如果启动多个异步操作，你可以将其<xref:System.IAsyncResult>值在数组中，并指定是否等待所有的操作或任何操作完成。</span><span class="sxs-lookup"><span data-stu-id="7aa34-654">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="7aa34-655">在这种情况下，使用<xref:System.IAsyncResult.AsyncWaitHandle%2A>属性<xref:System.IAsyncResult>用于标识已完成的操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-655">In this case, you use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="7aa34-656">状态对象将与操作相关联的状态信息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-656">The state object associates state information with the operation.</span></span> <span data-ttu-id="7aa34-657">例如，如果你调用<xref:System.Messaging.MessageQueue.BeginReceive%2A>多次启动多个操作，你可以指定每个操作通过你定义单独的状态对象。</span><span class="sxs-lookup"><span data-stu-id="7aa34-657">For example, if you call <xref:System.Messaging.MessageQueue.BeginReceive%2A> multiple times to initiate multiple operations, you can identify each operation through a separate state object that you define.</span></span>  
  
 <span data-ttu-id="7aa34-658">状态对象还可用于跨进程线程中传递信息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-658">You can also use the state object to pass information across process threads.</span></span> <span data-ttu-id="7aa34-659">如果在线程启动，但在另一个线程中的异步方案是回调，状态对象封送，并从该事件传递回以及信息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-659">If a thread is started but the callback is on a different thread in an asynchronous scenario, the state object is marshaled and passed back along with information from the event.</span></span>  
  
 <span data-ttu-id="7aa34-660">不使用异步调用<xref:System.Messaging.MessageQueue.BeginReceive%2A>与事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-660">Do not use the asynchronous call <xref:System.Messaging.MessageQueue.BeginReceive%2A> with transactions.</span></span> <span data-ttu-id="7aa34-661">如果你想要执行的事务的异步操作，调用<xref:System.Messaging.MessageQueue.BeginPeek%2A>，并将事务和 （同步）<xref:System.Messaging.MessageQueue.Receive%2A>扫视操作在你创建的事件处理程序方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-661">If you want to perform a transactional asynchronous operation, call <xref:System.Messaging.MessageQueue.BeginPeek%2A>, and put the transaction and the (synchronous) <xref:System.Messaging.MessageQueue.Receive%2A> method within the event handler you create for the peek operation.</span></span> <span data-ttu-id="7aa34-662">事件处理程序可能包含功能，如下面的 C# 代码中所示。</span><span class="sxs-lookup"><span data-stu-id="7aa34-662">Your event handler might contain functionality as shown in the following C# code.</span></span>  
  
```csharp  
myMessageQueue.BeginTransaction();  
 myMessageQueue.Receive();  
 myMessageQueue.CommitTransaction();  
```  
  
 <span data-ttu-id="7aa34-663">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-663">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-664">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-664">Workgroup mode</span></span>|<span data-ttu-id="7aa34-665">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-665">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-666">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-666">Local computer</span></span>|<span data-ttu-id="7aa34-667">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-667">Yes</span></span>|  
|<span data-ttu-id="7aa34-668">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-668">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-669">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-669">Yes</span></span>|  
|<span data-ttu-id="7aa34-670">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-670">Remote computer</span></span>|<span data-ttu-id="7aa34-671">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-671">No</span></span>|  
|<span data-ttu-id="7aa34-672">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-672">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-673">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-673">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-674">下面的代码示例创建异步接收操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-674">The following code example creates an asynchronous receive operation.</span></span> <span data-ttu-id="7aa34-675">此代码示例将发送一条消息到本地的消息队列，然后调用<xref:System.Messaging.MessageQueue.BeginReceive%28System.TimeSpan%2CSystem.Object%2CSystem.AsyncCallback%29>，并传入： 超时值为十秒; 标识该特定的消息; 和的新实例的唯一整数<xref:System.AsyncCallback>标识的事件处理程序中， `MyReceiveCompleted`.</span><span class="sxs-lookup"><span data-stu-id="7aa34-675">The code example sends a message to a local message queue, then calls <xref:System.Messaging.MessageQueue.BeginReceive%28System.TimeSpan%2CSystem.Object%2CSystem.AsyncCallback%29>, passing in: a time-out value of ten seconds; a unique integer that identifies that particular message; and a new instance of <xref:System.AsyncCallback> that identifies the event handler, `MyReceiveCompleted`.</span></span> <span data-ttu-id="7aa34-676">当<xref:System.Messaging.MessageQueue.ReceiveCompleted>引发事件，事件处理程序接收消息，并将消息正文和整数消息标识符写入屏幕。</span><span class="sxs-lookup"><span data-stu-id="7aa34-676">When a <xref:System.Messaging.MessageQueue.ReceiveCompleted> event is raised, the event handler receives the message and writes the message body and the integer message identifier to the screen.</span></span>  
  
 [!code-cpp[MessageQueueBeginReceive3#0](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueueBeginReceive3/cpp/class1.cpp#0)]
 [!code-csharp[MessageQueueBeginReceive3#0](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueueBeginReceive3/CS/class1.cs#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-677">为 <paramref name="timeout" /> 参数指定的值无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-677">The value specified for the <paramref name="timeout" /> parameter is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-678">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-678">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="7aa34-679">该方法不是线程安全。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-679">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (TimeSpan timeout, System.Messaging.Cursor cursor, object state, AsyncCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(valuetype System.TimeSpan timeout, class System.Messaging.Cursor cursor, object state, class System.AsyncCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Messaging.Cursor,System.Object,System.AsyncCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(TimeSpan timeout, System::Messaging::Cursor ^ cursor, System::Object ^ state, AsyncCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cursor" Type="System.Messaging.Cursor" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="7aa34-680">一个 <see cref="T:System.TimeSpan" /> 指示等待消息变为可用所用的时间间隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-680">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</span>
          </span>
        </param>
        <param name="cursor">
          <span data-ttu-id="7aa34-681">维持消息队列中特定位置的 <see cref="T:System.Messaging.Cursor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-681">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="7aa34-682">应用程序指定的状态对象，包含与异步操作关联的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-682">A state object, specified by the application, that contains information associated with the asynchronous operation.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="7aa34-683">该 <see cref="T:System.AsyncCallback" /> 将接收异步操作完成通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-683">The <see cref="T:System.AsyncCallback" /> that receives the notification of the asynchronous operation completion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-684">启动异步接收操作，此操作具有指定的超时并使用指定的游标和指定的状态对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-684">Initiates an asynchronous receive operation that has a specified time-out and uses a specified cursor and a specified state object.</span>
          </span>
          <span data-ttu-id="7aa34-685">状态对象在操作的整个生存期内提供相关的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-685">The state object provides associated information throughout the lifetime of the operation.</span>
          </span>
          <span data-ttu-id="7aa34-686">此重载通过回调接收操作的事件处理程序标识的通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-686">This overload receives notification, through a callback, of the identity of the event handler for the operation.</span>
          </span>
          <span data-ttu-id="7aa34-687">直到队列中出现消息时或发生超时时才完成操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-687">The operation is not complete until either a message becomes available in the queue or the time-out occurs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-688">该 <see cref="T:System.IAsyncResult" /> 标识已发布的异步请求的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-688">The <see cref="T:System.IAsyncResult" /> that identifies the posted asynchronous request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-689">当你使用此重载时，回调参数中指定时将调用回调直接的消息变得可用队列中或已过期的指定的时间间隔;<xref:System.Messaging.MessageQueue.ReceiveCompleted>不会引发事件。</span><span class="sxs-lookup"><span data-stu-id="7aa34-689">When you use this overload, the callback specified in the callback parameter is invoked directly when a message becomes available in the queue or when the specified interval of time has expired; the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event is not raised.</span></span> <span data-ttu-id="7aa34-690">其他重载的<xref:System.Messaging.MessageQueue.BeginReceive%2A>依赖于此组件以引发<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件。</span><span class="sxs-lookup"><span data-stu-id="7aa34-690">The other overloads of <xref:System.Messaging.MessageQueue.BeginReceive%2A> rely on this component to raise the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event.</span></span>  
  
 <span data-ttu-id="7aa34-691"><xref:System.Messaging.MessageQueue.ReceiveCompleted> 也会引发一条消息在队列中已存在。</span><span class="sxs-lookup"><span data-stu-id="7aa34-691"><xref:System.Messaging.MessageQueue.ReceiveCompleted> is also raised if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-692">若要使用<xref:System.Messaging.MessageQueue.BeginReceive%2A>、 创建的事件处理程序处理异步操作的结果，并将其与你的事件委托。</span><span class="sxs-lookup"><span data-stu-id="7aa34-692">To use <xref:System.Messaging.MessageQueue.BeginReceive%2A>, create an event handler that processes the results of the asynchronous operation and associate it with your event delegate.</span></span> <span data-ttu-id="7aa34-693"><xref:System.Messaging.MessageQueue.BeginReceive%2A> 启动异步接收操作;<xref:System.Messaging.MessageQueue>则通知，通过引发<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件，当消息到达队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-693"><xref:System.Messaging.MessageQueue.BeginReceive%2A> initiates an asynchronous receive operation; the <xref:System.Messaging.MessageQueue> is notified, through the raising of the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event, when a message arrives in the queue.</span></span> <span data-ttu-id="7aa34-694"><xref:System.Messaging.MessageQueue>然后可以通过调用访问消息<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>或检索结果使用<xref:System.Messaging.ReceiveCompletedEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-694">The <xref:System.Messaging.MessageQueue> can then access the message by calling <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> or retrieving the result using the <xref:System.Messaging.ReceiveCompletedEventArgs>.</span></span>  
  
 <span data-ttu-id="7aa34-695"><xref:System.Messaging.MessageQueue.BeginReceive%2A>方法立即返回，但直到调用事件处理程序，则不会完成异步操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-695">The <xref:System.Messaging.MessageQueue.BeginReceive%2A> method returns immediately, but the asynchronous operation is not completed until the event handler is called.</span></span>  
  
 <span data-ttu-id="7aa34-696">因为<xref:System.Messaging.MessageQueue.BeginReceive%2A>是异步的你可以调用它可接收来自队列的消息，而不会阻止当前线程的执行。</span><span class="sxs-lookup"><span data-stu-id="7aa34-696">Because <xref:System.Messaging.MessageQueue.BeginReceive%2A> is asynchronous, you can call it to receive a message from the queue without blocking the current thread of execution.</span></span> <span data-ttu-id="7aa34-697">若要以同步方式收到一条消息，使用<xref:System.Messaging.MessageQueue.Receive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-697">To synchronously receive a message, use the <xref:System.Messaging.MessageQueue.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="7aa34-698">异步操作完成后，你可以调用<xref:System.Messaging.MessageQueue.BeginPeek%2A>或<xref:System.Messaging.MessageQueue.BeginReceive%2A>再次中继续接收通知的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="7aa34-698">Once an asynchronous operation completes, you can call <xref:System.Messaging.MessageQueue.BeginPeek%2A> or <xref:System.Messaging.MessageQueue.BeginReceive%2A> again in the event handler to keep receiving notifications.</span></span>  
  
 <span data-ttu-id="7aa34-699"><xref:System.IAsyncResult> ，<xref:System.Messaging.MessageQueue.BeginReceive%2A>返回标识方法启动异步操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-699">The <xref:System.IAsyncResult> that <xref:System.Messaging.MessageQueue.BeginReceive%2A> returns identifies the asynchronous operation that the method started.</span></span> <span data-ttu-id="7aa34-700">你可以使用此<xref:System.IAsyncResult>的整个生存期内此操作，尽管你通常不使用它之前<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>调用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-700">You can use this <xref:System.IAsyncResult> throughout the lifetime of the operation, although you generally do not use it until <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> is called.</span></span> <span data-ttu-id="7aa34-701">但是，如果启动多个异步操作，你可以将其<xref:System.IAsyncResult>值在数组中，并指定是否等待所有的操作或任何操作完成。</span><span class="sxs-lookup"><span data-stu-id="7aa34-701">However, if you start several asynchronous operations, you can place their <xref:System.IAsyncResult> values in an array and specify whether to wait for all operations or any operation to complete.</span></span> <span data-ttu-id="7aa34-702">在这种情况下，使用<xref:System.IAsyncResult.AsyncWaitHandle%2A>属性<xref:System.IAsyncResult>用于标识已完成的操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-702">In this case, use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property of the <xref:System.IAsyncResult> to identify the completed operation.</span></span>  
  
 <span data-ttu-id="7aa34-703">状态对象将与操作相关联的状态信息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-703">The state object associates state information with the operation.</span></span> <span data-ttu-id="7aa34-704">例如，如果你调用<xref:System.Messaging.MessageQueue.BeginReceive%2A>多次启动多个操作，你可以指定每个操作通过你定义单独的状态对象。</span><span class="sxs-lookup"><span data-stu-id="7aa34-704">For example, if you call <xref:System.Messaging.MessageQueue.BeginReceive%2A> multiple times to initiate multiple operations, you can identify each operation through a separate state object that you define.</span></span>  
  
 <span data-ttu-id="7aa34-705">状态对象还可用于跨进程线程中传递信息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-705">You can also use the state object to pass information across process threads.</span></span> <span data-ttu-id="7aa34-706">如果在线程启动，但在另一个线程中的异步方案是回调，状态对象封送，并从该事件传递回以及信息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-706">If a thread is started but the callback is on a different thread in an asynchronous scenario, the state object is marshaled and passed back along with information from the event.</span></span>  
  
 <span data-ttu-id="7aa34-707">不使用异步调用<xref:System.Messaging.MessageQueue.BeginReceive%2A>与事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-707">Do not use the asynchronous call <xref:System.Messaging.MessageQueue.BeginReceive%2A> with transactions.</span></span> <span data-ttu-id="7aa34-708">如果你想要执行的事务的异步操作，调用<xref:System.Messaging.MessageQueue.BeginPeek%2A>，并将事务和 （同步）<xref:System.Messaging.MessageQueue.Receive%2A>扫视操作在你创建的事件处理程序方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-708">If you want to perform a transactional asynchronous operation, call <xref:System.Messaging.MessageQueue.BeginPeek%2A>, and put the transaction and the (synchronous) <xref:System.Messaging.MessageQueue.Receive%2A> method within the event handler you create for the peek operation.</span></span> <span data-ttu-id="7aa34-709">事件处理程序可能包含功能，如下面的 C# 代码中所示。</span><span class="sxs-lookup"><span data-stu-id="7aa34-709">Your event handler might contain functionality as shown in the following C# code.</span></span>  
  
```csharp  
myMessageQueue.BeginTransaction();  
 myMessageQueue.Receive();  
 myMessageQueue.CommitTransaction();  
```  
  
 <span data-ttu-id="7aa34-710">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-710">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-711">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-711">Workgroup mode</span></span>|<span data-ttu-id="7aa34-712">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-712">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-713">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-713">Local computer</span></span>|<span data-ttu-id="7aa34-714">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-714">Yes</span></span>|  
|<span data-ttu-id="7aa34-715">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-715">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-716">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-716">Yes</span></span>|  
|<span data-ttu-id="7aa34-717">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-717">Remote computer</span></span>|<span data-ttu-id="7aa34-718">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-718">No</span></span>|  
|<span data-ttu-id="7aa34-719">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-719">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-720">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-720">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7aa34-721">
            <paramref name="cursor" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-721">The <paramref name="cursor" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-722">为 <paramref name="timeout" /> 参数指定的值无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-722">The value specified for the <paramref name="timeout" /> parameter is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-723">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-723">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="7aa34-724">该方法不是线程安全。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-724">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="T:System.Messaging.Cursor" />
        <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRead { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_CanRead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-725">获取一个值，该值指示 <see cref="T:System.Messaging.MessageQueue" /> 是否可读。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-725">Gets a value that indicates whether the <see cref="T:System.Messaging.MessageQueue" /> can be read.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7aa34-726">如果存在 <see cref="T:System.Messaging.MessageQueue" /> 而且应用程序可从其中读取，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-726">
              <see langword="true" /> if the <see cref="T:System.Messaging.MessageQueue" /> exists and the application can read from it; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-727"><xref:System.Messaging.MessageQueue.CanRead%2A> 指示应用程序是否能够查看或从队列接收消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-727"><xref:System.Messaging.MessageQueue.CanRead%2A> indicates whether the application is able to peek or receive messages from the queue.</span></span> <span data-ttu-id="7aa34-728">如果<xref:System.Messaging.MessageQueue.CanRead%2A>是`true`、<xref:System.Messaging.MessageQueue>可以接收或查看从队列的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-728">If <xref:System.Messaging.MessageQueue.CanRead%2A> is `true`, the <xref:System.Messaging.MessageQueue> can receive or peek messages from the queue.</span></span> <span data-ttu-id="7aa34-729">否则，不能。</span><span class="sxs-lookup"><span data-stu-id="7aa34-729">Otherwise, it cannot.</span></span>  
  
 <span data-ttu-id="7aa34-730"><xref:System.Messaging.MessageQueue.CanRead%2A> 是`false`如果队列已打开使用独占读取访问权 (或如果它是使用非独占访问权限和这打开<xref:System.Messaging.MessageQueue>请求独占访问权)，或如果应用程序没有足够的权限访问它。</span><span class="sxs-lookup"><span data-stu-id="7aa34-730"><xref:System.Messaging.MessageQueue.CanRead%2A> is `false` if a queue is already open with exclusive read access (or if it's open with non-exclusive access and this <xref:System.Messaging.MessageQueue> requests exclusive access), or if the application does not have sufficient rights to access it.</span></span> <span data-ttu-id="7aa34-731">如果你的应用程序尝试从队列中读取时<xref:System.Messaging.MessageQueue.CanRead%2A>是`false`，访问被拒绝。</span><span class="sxs-lookup"><span data-stu-id="7aa34-731">If your application tries to read from a queue when <xref:System.Messaging.MessageQueue.CanRead%2A> is `false`, access is denied.</span></span>  
  
 <span data-ttu-id="7aa34-732">下表显示此属性是在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-732">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-733">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-733">Workgroup mode</span></span>|<span data-ttu-id="7aa34-734">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-734">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-735">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-735">Local computer</span></span>|<span data-ttu-id="7aa34-736">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-736">Yes</span></span>|  
|<span data-ttu-id="7aa34-737">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-737">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-738">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-738">Yes</span></span>|  
|<span data-ttu-id="7aa34-739">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-739">Remote computer</span></span>|<span data-ttu-id="7aa34-740">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-740">No</span></span>|  
|<span data-ttu-id="7aa34-741">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-741">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-742">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-742">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-743">下面的代码示例显示的消息队列的值<xref:System.Messaging.MessageQueue.CanRead%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-743">The following code example displays the value of a message queue's <xref:System.Messaging.MessageQueue.CanRead%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#5](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.MessageQueue.CanWrite" />
        <altmember cref="P:System.Messaging.MessageQueue.ReadHandle" />
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanWrite { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_CanWrite")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-744">获取一个值，该值指示 <see cref="T:System.Messaging.MessageQueue" /> 是否可写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-744">Gets a value that indicates whether the <see cref="T:System.Messaging.MessageQueue" /> can be written to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7aa34-745">如果存在 <see cref="T:System.Messaging.MessageQueue" /> 而且应用程序可向其中写入，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-745">
              <see langword="true" /> if the <see cref="T:System.Messaging.MessageQueue" /> exists and the application can write to it; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-746"><xref:System.Messaging.MessageQueue.CanWrite%2A> 指示应用程序是否能够将消息发送到队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-746"><xref:System.Messaging.MessageQueue.CanWrite%2A> indicates whether the application is able to send messages to the queue.</span></span> <span data-ttu-id="7aa34-747">如果<xref:System.Messaging.MessageQueue.CanWrite%2A>是`true`、<xref:System.Messaging.MessageQueue>可以向队列发送消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-747">If <xref:System.Messaging.MessageQueue.CanWrite%2A> is `true`, the <xref:System.Messaging.MessageQueue> can send messages to the queue.</span></span> <span data-ttu-id="7aa34-748">否则，不能。</span><span class="sxs-lookup"><span data-stu-id="7aa34-748">Otherwise, it cannot.</span></span>  
  
 <span data-ttu-id="7aa34-749"><xref:System.Messaging.MessageQueue.CanWrite%2A> 是`false`如果队列已用独占写入访问权限打开 (或如果它是使用非独占访问权限和这打开<xref:System.Messaging.MessageQueue>请求独占访问权)，或如果应用程序没有足够的权限访问它。</span><span class="sxs-lookup"><span data-stu-id="7aa34-749"><xref:System.Messaging.MessageQueue.CanWrite%2A> is `false` if a queue is already open with exclusive write access (or if it's open with non-exclusive access and this <xref:System.Messaging.MessageQueue> requests exclusive access), or if the application does not have sufficient rights to access it.</span></span> <span data-ttu-id="7aa34-750">如果你的应用程序尝试写入队列时<xref:System.Messaging.MessageQueue.CanWrite%2A>是`false`，访问被拒绝。</span><span class="sxs-lookup"><span data-stu-id="7aa34-750">If your application tries to write to a queue when <xref:System.Messaging.MessageQueue.CanWrite%2A> is `false`, access is denied.</span></span>  
  
 <span data-ttu-id="7aa34-751">下表显示此属性是在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-751">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-752">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-752">Workgroup mode</span></span>|<span data-ttu-id="7aa34-753">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-753">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-754">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-754">Local computer</span></span>|<span data-ttu-id="7aa34-755">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-755">Yes</span></span>|  
|<span data-ttu-id="7aa34-756">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-756">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-757">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-757">Yes</span></span>|  
|<span data-ttu-id="7aa34-758">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-758">Remote computer</span></span>|<span data-ttu-id="7aa34-759">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-759">No</span></span>|  
|<span data-ttu-id="7aa34-760">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-760">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-761">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-761">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-762">下面的代码示例显示的消息队列的值<xref:System.Messaging.MessageQueue.CanWrite%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-762">The following code example displays the value of a message queue's <xref:System.Messaging.MessageQueue.CanWrite%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#6](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.MessageQueue.WriteHandle" />
        <altmember cref="P:System.Messaging.MessageQueue.CanRead" />
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public Guid Category { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Category" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.Category" />
      <MemberSignature Language="VB.NET" Value="Public Property Category As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Category { Guid get(); void set(Guid value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_Category")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-763">获取或设置队列类别。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-763">Gets or sets the queue category.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7aa34-764">
            <see cref="T:System.Guid" />，表示队列类别（“消息队列”类型标识符），它允许应用程序将其队列分类。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-764">A <see cref="T:System.Guid" /> that represents the queue category (Message Queuing type identifier), which allows an application to categorize its queues.</span>
          </span>
          <span data-ttu-id="7aa34-765">默认值为 <see langword="Guid.empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-765">The default is <see langword="Guid.empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-766">队列类别允许应用程序对它的队列进行分类。</span><span class="sxs-lookup"><span data-stu-id="7aa34-766">The queue category allows an application to categorize its queues.</span></span> <span data-ttu-id="7aa34-767">例如，你可以将所有计费队列都放在一个类别和在另一个中的所有订单队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-767">For example, you can place all Billing queues in one category and all Order queues in another.</span></span>  
  
 <span data-ttu-id="7aa34-768"><xref:System.Messaging.MessageQueue.Category%2A>属性提供访问权限 （这是读/写） 的消息队列类型 ID 属性，可通过访问**队列属性**计算机管理控制台中的对话框。</span><span class="sxs-lookup"><span data-stu-id="7aa34-768">The <xref:System.Messaging.MessageQueue.Category%2A> property provides access to the Message Queuing Type ID property (which is read/write), accessible through the **Queue Properties** dialog box in the Computer Management Console.</span></span> <span data-ttu-id="7aa34-769">你可以定义新类别。</span><span class="sxs-lookup"><span data-stu-id="7aa34-769">You can define a new category.</span></span> <span data-ttu-id="7aa34-770">尽管可以使用<xref:System.Guid.NewGuid%2A>来创建跨所有都是唯一的类别值<xref:System.Guid>值，执行此操作是不必要的。</span><span class="sxs-lookup"><span data-stu-id="7aa34-770">Although you can use <xref:System.Guid.NewGuid%2A> to create a category value that is unique across all <xref:System.Guid> values, such an action is unnecessary.</span></span> <span data-ttu-id="7aa34-771">类别值必须是不同于其他类别，不是从所有其他仅<xref:System.Guid>值。</span><span class="sxs-lookup"><span data-stu-id="7aa34-771">The category value needs to be distinct only from other categories, not from all other <xref:System.Guid> values.</span></span> <span data-ttu-id="7aa34-772">例如，你可作为分配 {00000000-0000-0000-0000-000000000001}<xref:System.Messaging.MessageQueue.Category%2A>为一组队列而 {将 00000000-0000-0000-0000-000000000002} 作为<xref:System.Messaging.MessageQueue.Category%2A>为另一组。</span><span class="sxs-lookup"><span data-stu-id="7aa34-772">For example, you can assign {00000000-0000-0000-0000-000000000001} as the <xref:System.Messaging.MessageQueue.Category%2A> for one set of queues and {00000000-0000-0000-0000-000000000002} as the <xref:System.Messaging.MessageQueue.Category%2A> for another set.</span></span>  
  
 <span data-ttu-id="7aa34-773">不需要设置<xref:System.Messaging.MessageQueue.Category%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-773">It is not necessary to set the <xref:System.Messaging.MessageQueue.Category%2A>.</span></span> <span data-ttu-id="7aa34-774">该值可以为 `null`。</span><span class="sxs-lookup"><span data-stu-id="7aa34-774">The value can be `null`.</span></span>  
  
 <span data-ttu-id="7aa34-775">将此属性设置修改消息队列队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-775">Setting this property modifies the Message Queuing queue.</span></span> <span data-ttu-id="7aa34-776">因此，任何其他<xref:System.Messaging.MessageQueue>的更改会影响实例。</span><span class="sxs-lookup"><span data-stu-id="7aa34-776">Therefore, any other <xref:System.Messaging.MessageQueue> instances are affected by the change.</span></span>  
  
 <span data-ttu-id="7aa34-777">下表显示此属性是在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-777">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-778">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-778">Workgroup mode</span></span>|<span data-ttu-id="7aa34-779">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-779">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-780">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-780">Local computer</span></span>|<span data-ttu-id="7aa34-781">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-781">Yes</span></span>|  
|<span data-ttu-id="7aa34-782">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-782">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-783">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-783">Yes</span></span>|  
|<span data-ttu-id="7aa34-784">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-784">Remote computer</span></span>|<span data-ttu-id="7aa34-785">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-785">No</span></span>|  
|<span data-ttu-id="7aa34-786">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-786">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-787">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-787">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-788">下面的代码示例获取和设置的消息队列的值<xref:System.Messaging.MessageQueue.Category%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-788">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.Category%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#7](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-789">队列类别被设置为无效值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-789">The queue category was set to an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-790">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-790">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.Id" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
      </Docs>
    </Member>
    <Member MemberName="ClearConnectionCache">
      <MemberSignature Language="C#" Value="public static void ClearConnectionCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearConnectionCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ClearConnectionCache" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearConnectionCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearConnectionCache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-791">清除连接缓存。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-791">Clears the connection cache.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-792">当调用<xref:System.Messaging.MessageQueue.ClearConnectionCache%2A>，将删除缓存中存储的格式名，并且关闭句柄打开并存储在缓存中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-792">When you call <xref:System.Messaging.MessageQueue.ClearConnectionCache%2A>, the format names stored in the cache are removed and handles opened and stored in the cache are closed.</span></span>  
  
 <span data-ttu-id="7aa34-793">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-793">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-794">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-794">Workgroup mode</span></span>|<span data-ttu-id="7aa34-795">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-795">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-796">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-796">Local computer</span></span>|<span data-ttu-id="7aa34-797">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-797">Yes</span></span>|  
|<span data-ttu-id="7aa34-798">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-798">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-799">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-799">Yes</span></span>|  
|<span data-ttu-id="7aa34-800">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-800">Remote computer</span></span>|<span data-ttu-id="7aa34-801">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-801">Yes</span></span>|  
|<span data-ttu-id="7aa34-802">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-802">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-803">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-803">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-804">下面的代码示例调用 <xref:System.Messaging.MessageQueue.ClearConnectionCache%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-804">The following code example calls <xref:System.Messaging.MessageQueue.ClearConnectionCache%2A>.</span></span>  
  
 [!code-csharp[MessageQueue#8](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-805">释放 <see cref="T:System.Messaging.MessageQueue" /> 分配的所有资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-805">Frees all resources allocated by the <see cref="T:System.Messaging.MessageQueue" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-806"><xref:System.Messaging.MessageQueue.Close%2A> 释放与关联的所有资源<xref:System.Messaging.MessageQueue>，包括根据共享资源。</span><span class="sxs-lookup"><span data-stu-id="7aa34-806"><xref:System.Messaging.MessageQueue.Close%2A> frees all resources associated with a <xref:System.Messaging.MessageQueue>, including shared resources if appropriate.</span></span> <span data-ttu-id="7aa34-807">系统自动重新获取这些资源它们是否仍然可用，例如当调用<xref:System.Messaging.MessageQueue.Send%28System.Object%29>方法，如下面的 C# 代码所示。</span><span class="sxs-lookup"><span data-stu-id="7aa34-807">The system re-acquires these resources automatically if they are still available, for example when you call the <xref:System.Messaging.MessageQueue.Send%28System.Object%29> method, as in the following C# code.</span></span>  
  
```csharp  
myMessageQueue.Send("Text 1.");  
myMessageQueue.Close();  
myMessageQueue.Send("Text 2."); //Resources are re-acquired.  
```  
  
 <span data-ttu-id="7aa34-808">当调用<xref:System.Messaging.MessageQueue.Close%2A>，所有<xref:System.Messaging.MessageQueue>直接访问消息队列队列的属性会清除。<xref:System.Messaging.MessageQueue.Path%2A>， <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>， <xref:System.Messaging.MessageQueue.Formatter%2A>，和<xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A>所有保持不变。</span><span class="sxs-lookup"><span data-stu-id="7aa34-808">When you call <xref:System.Messaging.MessageQueue.Close%2A>, all <xref:System.Messaging.MessageQueue> properties that directly access the Message Queuing queue are cleared out. The <xref:System.Messaging.MessageQueue.Path%2A>, <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>, <xref:System.Messaging.MessageQueue.Formatter%2A>, and <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> all remain as they were.</span></span>  
  
 <span data-ttu-id="7aa34-809"><xref:System.Messaging.MessageQueue.Close%2A> 不会不能始终释放读取和写入队列的句柄，因为它们可能被共享。</span><span class="sxs-lookup"><span data-stu-id="7aa34-809"><xref:System.Messaging.MessageQueue.Close%2A> does not always free the read and write handles to a queue, because they might be shared.</span></span> <span data-ttu-id="7aa34-810">你可以采取以下步骤以确保任一<xref:System.Messaging.MessageQueue.Close%2A>释放到队列的读取和写入句柄：</span><span class="sxs-lookup"><span data-stu-id="7aa34-810">You can take any of the following steps to ensure that <xref:System.Messaging.MessageQueue.Close%2A> frees the read and write handles to a queue:</span></span>  
  
-   <span data-ttu-id="7aa34-811">创建<xref:System.Messaging.MessageQueue>具有独占访问权。</span><span class="sxs-lookup"><span data-stu-id="7aa34-811">Create the <xref:System.Messaging.MessageQueue> with exclusive access.</span></span> <span data-ttu-id="7aa34-812">为此，请调用<xref:System.Messaging.MessageQueue.%23ctor%28System.String%2CSystem.Boolean%29>或<xref:System.Messaging.MessageQueue.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Boolean%29>构造函数，并且组`sharedModeDenyReceive`参数`true`。</span><span class="sxs-lookup"><span data-stu-id="7aa34-812">To do so, call the <xref:System.Messaging.MessageQueue.%23ctor%28System.String%2CSystem.Boolean%29> or <xref:System.Messaging.MessageQueue.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Boolean%29> constructor, and set the `sharedModeDenyReceive` parameter to `true`.</span></span>  
  
-   <span data-ttu-id="7aa34-813">创建<xref:System.Messaging.MessageQueue>禁用了连接缓存。</span><span class="sxs-lookup"><span data-stu-id="7aa34-813">Create the <xref:System.Messaging.MessageQueue> with connection caching disabled.</span></span> <span data-ttu-id="7aa34-814">为此，请调用<xref:System.Messaging.MessageQueue.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Boolean%29>构造函数和组`enableConnectionCache`参数`false`。</span><span class="sxs-lookup"><span data-stu-id="7aa34-814">To do so, call the <xref:System.Messaging.MessageQueue.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Boolean%29> constructor and set the `enableConnectionCache` parameter to `false`.</span></span>  
  
-   <span data-ttu-id="7aa34-815">禁用连接缓存。</span><span class="sxs-lookup"><span data-stu-id="7aa34-815">Disable connection caching.</span></span> <span data-ttu-id="7aa34-816">为此，请设置<xref:System.Messaging.MessageQueue.EnableConnectionCache%2A>属性`false`。</span><span class="sxs-lookup"><span data-stu-id="7aa34-816">To do so, set the <xref:System.Messaging.MessageQueue.EnableConnectionCache%2A> property to `false`.</span></span>  
  
 <span data-ttu-id="7aa34-817">应调用<xref:System.Messaging.MessageQueue.Close%2A>队列之前删除消息队列服务器上的队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-817">You should call <xref:System.Messaging.MessageQueue.Close%2A> for a queue before you delete the queue on the Message Queuing server.</span></span> <span data-ttu-id="7aa34-818">否则为，请发送到队列的消息无法引发异常，或出现在死信队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-818">Otherwise, messages sent to the queue could throw exceptions or appear in the dead-letter queue.</span></span>  
  
 <span data-ttu-id="7aa34-819">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-819">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-820">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-820">Workgroup mode</span></span>|<span data-ttu-id="7aa34-821">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-821">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-822">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-822">Local computer</span></span>|<span data-ttu-id="7aa34-823">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-823">Yes</span></span>|  
|<span data-ttu-id="7aa34-824">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-824">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-825">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-825">Yes</span></span>|  
|<span data-ttu-id="7aa34-826">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-826">Remote computer</span></span>|<span data-ttu-id="7aa34-827">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-827">Yes</span></span>|  
|<span data-ttu-id="7aa34-828">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-828">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-829">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-829">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-830">下面的代码示例将关闭消息队列的队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-830">The following code example closes a Message Queuing queue.</span></span>  
  
 [!code-cpp[MessageQueue.Close#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Close/CPP/mqclose.cpp#1)]
 [!code-csharp[MessageQueue.Close#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Close/CS/mqclose.cs#1)]
 [!code-vb[MessageQueue.Close#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Close/VB/mqclose.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-831">在“消息队列”服务器上的指定路径中创建新队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-831">Creates a new queue at the specified path on a Message Queuing server.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueue Create (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueue Create(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (path As String) As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Messaging::MessageQueue ^ Create(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="7aa34-832">要创建的队列的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-832">The path of the queue to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-833">在指定的路径中创建非事务性“消息队列”队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-833">Creates a non-transactional Message Queuing queue at the specified path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-834">表示新队列的 <see cref="T:System.Messaging.MessageQueue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-834">A <see cref="T:System.Messaging.MessageQueue" /> that represents the new queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-835">使用此重载以创建消息队列的非事务性队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-835">Use this overload to create a non-transactional Message Queuing queue.</span></span>  
  
 <span data-ttu-id="7aa34-836">若要创建的新实例<xref:System.Messaging.MessageQueue>类在你的应用程序并将其绑定到现有队列，而使用<xref:System.Messaging.MessageQueue.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-836">To create a new instance of the <xref:System.Messaging.MessageQueue> class in your application and bind it to an existing queue, use the <xref:System.Messaging.MessageQueue.%23ctor%2A> constructor.</span></span> <span data-ttu-id="7aa34-837">若要在消息队列中创建新队列，调用<xref:System.Messaging.MessageQueue.Create%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-837">To create a new queue in Message Queuing, call <xref:System.Messaging.MessageQueue.Create%28System.String%29>.</span></span>  
  
 <span data-ttu-id="7aa34-838">语法`path`参数取决于队列的类型它的引用下, 表中所示。</span><span class="sxs-lookup"><span data-stu-id="7aa34-838">The syntax for the `path` parameter depends on the type of queue it references, as shown in the following table.</span></span>  
  
|<span data-ttu-id="7aa34-839">队列类型</span><span class="sxs-lookup"><span data-stu-id="7aa34-839">Queue type</span></span>|<span data-ttu-id="7aa34-840">语法</span><span class="sxs-lookup"><span data-stu-id="7aa34-840">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="7aa34-841">公用队列</span><span class="sxs-lookup"><span data-stu-id="7aa34-841">Public queue</span></span>|`MachineName`\\`QueueName`|  
|<span data-ttu-id="7aa34-842">专用队列</span><span class="sxs-lookup"><span data-stu-id="7aa34-842">Private queue</span></span>|`MachineName`\\`Private$`\\`QueueName`|  
  
 <span data-ttu-id="7aa34-843">使用"。"本地计算机。</span><span class="sxs-lookup"><span data-stu-id="7aa34-843">Use "." for the local computer.</span></span> <span data-ttu-id="7aa34-844">有关更多的语法，请参阅<xref:System.Messaging.MessageQueue.Path%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-844">For more syntax, see the <xref:System.Messaging.MessageQueue.Path%2A> property.</span></span>  
  
 <span data-ttu-id="7aa34-845">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-845">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-846">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-846">Workgroup mode</span></span>|<span data-ttu-id="7aa34-847">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-847">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-848">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-848">Local computer</span></span>|<span data-ttu-id="7aa34-849">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-849">Yes</span></span>|  
|<span data-ttu-id="7aa34-850">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-850">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-851">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-851">Yes</span></span>|  
|<span data-ttu-id="7aa34-852">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-852">Remote computer</span></span>|<span data-ttu-id="7aa34-853">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-853">No</span></span>|  
|<span data-ttu-id="7aa34-854">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-854">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-855">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-855">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-856">下面的代码示例创建了公用和专用队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-856">The following code example creates public and private queues.</span></span> <span data-ttu-id="7aa34-857">它将消息发送到所选队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-857">It sends a message to selected queues.</span></span>  
  
 [!code-cpp[MessageQueue.Create_path#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Create_path/CPP/mqcreate.cpp#1)]
 [!code-csharp[MessageQueue.Create_path#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Create_path/CS/mqcreate.cs#1)]
 [!code-vb[MessageQueue.Create_path#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Create_path/VB/mqcreate.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-858">
            <paramref name="path" /> 参数为 <see langword="null" /> 或者是空字符串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-858">The <paramref name="path" /> parameter is <see langword="null" /> or is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-859">队列已存在于指定的路径中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-859">A queue already exists at the specified path.</span>
          </span>
          <span data-ttu-id="7aa34-860">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-860">-or-</span>
          </span>
          <span data-ttu-id="7aa34-861">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-861">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
        <altmember cref="M:System.Messaging.MessageQueue.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueue Create (string path, bool transactional);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueue Create(string path, bool transactional) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (path As String, transactional As Boolean) As MessageQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Messaging::MessageQueue ^ Create(System::String ^ path, bool transactional);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="transactional" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="7aa34-862">要创建的队列的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-862">The path of the queue to create.</span>
          </span>
        </param>
        <param name="transactional">
          <span data-ttu-id="7aa34-863">如果创建事务性队列，为 <see langword="true" />；如果创建非事务性队列，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-863">
              <see langword="true" /> to create a transactional queue; <see langword="false" /> to create a non-transactional queue.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-864">在指定的路径中创建事务性或非事务性“消息队列”队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-864">Creates a transactional or non-transactional Message Queuing queue at the specified path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-865">表示新队列的 <see cref="T:System.Messaging.MessageQueue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-865">A <see cref="T:System.Messaging.MessageQueue" /> that represents the new queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-866">此重载可用于在消息队列中创建事务性队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-866">You can use this overload to create a transactional queue in Message Queuing.</span></span> <span data-ttu-id="7aa34-867">可以创建非事务性队列时，通过设置`transactional`参数`false`或通过调用的其他重载<xref:System.Messaging.MessageQueue.Create%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-867">You can create a non-transactional queue, by setting the `transactional` parameter to `false` or by calling the other overload of <xref:System.Messaging.MessageQueue.Create%28System.String%29>.</span></span>  
  
 <span data-ttu-id="7aa34-868">若要创建的新实例<xref:System.Messaging.MessageQueue>类在你的应用程序并将其绑定到现有队列，而使用<xref:System.Messaging.MessageQueue.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-868">To create a new instance of the <xref:System.Messaging.MessageQueue> class in your application and bind it to an existing queue, use the <xref:System.Messaging.MessageQueue.%23ctor%2A> constructor.</span></span> <span data-ttu-id="7aa34-869">若要在消息队列中创建新队列，调用<xref:System.Messaging.MessageQueue.Create%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-869">To create a new queue in Message Queuing, call <xref:System.Messaging.MessageQueue.Create%28System.String%29>.</span></span>  
  
 <span data-ttu-id="7aa34-870">语法`path`参数取决于队列的类型它的引用下, 表中所示。</span><span class="sxs-lookup"><span data-stu-id="7aa34-870">The syntax for the `path` parameter depends on the type of queue it references, as shown in the following table.</span></span>  
  
|<span data-ttu-id="7aa34-871">队列类型</span><span class="sxs-lookup"><span data-stu-id="7aa34-871">Queue type</span></span>|<span data-ttu-id="7aa34-872">语法</span><span class="sxs-lookup"><span data-stu-id="7aa34-872">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="7aa34-873">公用队列</span><span class="sxs-lookup"><span data-stu-id="7aa34-873">Public queue</span></span>|`MachineName`\\`QueueName`|  
|<span data-ttu-id="7aa34-874">专用队列</span><span class="sxs-lookup"><span data-stu-id="7aa34-874">Private queue</span></span>|`MachineName`\\`Private$`\\`QueueName`|  
  
 <span data-ttu-id="7aa34-875">使用"。"本地计算机。</span><span class="sxs-lookup"><span data-stu-id="7aa34-875">Use "." for the local computer.</span></span> <span data-ttu-id="7aa34-876">有关更多的语法，请参阅<xref:System.Messaging.MessageQueue.Path%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-876">For more syntax, see the <xref:System.Messaging.MessageQueue.Path%2A> property.</span></span>  
  
 <span data-ttu-id="7aa34-877">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-877">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-878">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-878">Workgroup mode</span></span>|<span data-ttu-id="7aa34-879">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-879">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-880">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-880">Local computer</span></span>|<span data-ttu-id="7aa34-881">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-881">Yes</span></span>|  
|<span data-ttu-id="7aa34-882">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-882">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-883">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-883">Yes</span></span>|  
|<span data-ttu-id="7aa34-884">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-884">Remote computer</span></span>|<span data-ttu-id="7aa34-885">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-885">No</span></span>|  
|<span data-ttu-id="7aa34-886">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-886">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-887">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-887">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-888">下面的代码示例创建公钥和私钥的事务性队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-888">The following code example creates public and private transactional queues.</span></span> <span data-ttu-id="7aa34-889">它将消息发送到所选队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-889">It sends a message to selected queues.</span></span>  
  
 [!code-cpp[MessageQueue.Create_PathTransactional#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Create_PathTransactional/CPP/mqcreate_transactional.cpp#1)]
 [!code-csharp[MessageQueue.Create_PathTransactional#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Create_PathTransactional/CS/mqcreate_transactional.cs#1)]
 [!code-vb[MessageQueue.Create_PathTransactional#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Create_PathTransactional/VB/mqcreate_transactional.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-890">
            <paramref name="path" /> 参数为 <see langword="null" /> 或者是空字符串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-890">The <paramref name="path" /> parameter is <see langword="null" /> or is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-891">队列已存在于指定的路径中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-891">A queue already exists at the specified path.</span>
          </span>
          <span data-ttu-id="7aa34-892">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-892">-or-</span>
          </span>
          <span data-ttu-id="7aa34-893">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-893">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
        <altmember cref="M:System.Messaging.MessageQueue.#ctor" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
      </Docs>
    </Member>
    <Member MemberName="CreateCursor">
      <MemberSignature Language="C#" Value="public System.Messaging.Cursor CreateCursor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Cursor CreateCursor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.CreateCursor" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCursor () As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Cursor ^ CreateCursor();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Cursor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-894">为当前消息队列创建新的 <see cref="T:System.Messaging.Cursor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-894">Creates a new <see cref="T:System.Messaging.Cursor" /> for the current message queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-895">当前消息队列的新 <see cref="T:System.Messaging.Cursor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-895">A new <see cref="T:System.Messaging.Cursor" /> for the current message queue.</span>
          </span>
          <span data-ttu-id="7aa34-896">此游标用于在读取队列的消息时保持队列中的特定位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-896">This cursor is used to maintain a specific location in the queue when reading the queue's messages.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Messaging.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="CreateTime">
      <MemberSignature Language="C#" Value="public DateTime CreateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime CreateTime" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.CreateTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CreateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime CreateTime { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_CreateTime")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-897">获取在“消息队列”中创建队列的时间和日期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-897">Gets the time and date that the queue was created in Message Queuing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7aa34-898">表示队列创建日期和时间的 <see cref="T:System.DateTime" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-898">A <see cref="T:System.DateTime" /> that represents the date and time at which the queue was created.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-899"><xref:System.Messaging.MessageQueue.CreateTime%2A> 不是指在消息队列服务器上，队列<xref:System.Messaging.MessageQueue>实例。</span><span class="sxs-lookup"><span data-stu-id="7aa34-899"><xref:System.Messaging.MessageQueue.CreateTime%2A> refers to the queue on the Message Queuing server, not the <xref:System.Messaging.MessageQueue> instance.</span></span>  
  
 <span data-ttu-id="7aa34-900">如果该队列存在，则此属性表示创建队列，队列所在的服务器的本地时间调整的时间。</span><span class="sxs-lookup"><span data-stu-id="7aa34-900">If the queue exists, this property represents the time the queue was created, adjusted to the local time of the server on which the queue exists.</span></span>  
  
 <span data-ttu-id="7aa34-901">下表显示此属性是在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-901">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-902">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-902">Workgroup mode</span></span>|<span data-ttu-id="7aa34-903">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-903">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-904">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-904">Local computer</span></span>|<span data-ttu-id="7aa34-905">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-905">Yes</span></span>|  
|<span data-ttu-id="7aa34-906">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-906">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-907">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-907">Yes</span></span>|  
|<span data-ttu-id="7aa34-908">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-908">Remote computer</span></span>|<span data-ttu-id="7aa34-909">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-909">No</span></span>|  
|<span data-ttu-id="7aa34-910">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-910">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-911">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-911">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-912">下面的代码示例显示的消息队列的值<xref:System.Messaging.MessageQueue.CreateTime%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-912">The following code example displays the value of a message queue's <xref:System.Messaging.MessageQueue.CreateTime%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#9](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-913">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-913">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.LastModifyTime" />
      </Docs>
    </Member>
    <Member MemberName="DefaultPropertiesToSend">
      <MemberSignature Language="C#" Value="public System.Messaging.DefaultPropertiesToSend DefaultPropertiesToSend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.DefaultPropertiesToSend DefaultPropertiesToSend" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultPropertiesToSend As DefaultPropertiesToSend" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::DefaultPropertiesToSend ^ DefaultPropertiesToSend { System::Messaging::DefaultPropertiesToSend ^ get(); void set(System::Messaging::DefaultPropertiesToSend ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_DefaultPropertiesToSend")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.DefaultPropertiesToSend</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-914">获取或设置(当应用程序向队列发送消息时)默认情况下使用的消息属性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-914">Gets or sets the message property values to be used by default when the application sends messages to the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7aa34-915">
            <see cref="T:System.Messaging.DefaultPropertiesToSend" />，它包含当应用程序向队列发送 <see cref="T:System.Messaging.Message" /> 实例以外的对象时使用的默认“消息队列”消息属性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-915">A <see cref="T:System.Messaging.DefaultPropertiesToSend" /> that contains the default Message Queuing message property values used when the application sends objects other than <see cref="T:System.Messaging.Message" /> instances to the queue.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-916">如果要将发送的类型不是任何对象<xref:System.Messaging.Message>到队列，<xref:System.Messaging.MessageQueue>将对象插入到消息队列消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-916">When you send any object that is not of type <xref:System.Messaging.Message> to the queue, the <xref:System.Messaging.MessageQueue> inserts the object into a Message Queuing message.</span></span> <span data-ttu-id="7aa34-917">在那时，<xref:System.Messaging.MessageQueue>适用于消息中指定的属性值<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-917">At that time, the <xref:System.Messaging.MessageQueue> applies to the message the property values you specify in the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property.</span></span> <span data-ttu-id="7aa34-918">相反，如果你发送<xref:System.Messaging.Message>到队列，这些属性已指定为该实例本身，因此<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>对于，将忽略<xref:System.Messaging.Message>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-918">Conversely, if you send a <xref:System.Messaging.Message> to the queue, these properties are already specified for the instance itself, so <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> is ignored for the <xref:System.Messaging.Message>.</span></span>  
  
 <span data-ttu-id="7aa34-919">尽管您设置的属性通过<xref:System.Messaging.MessageQueue>对象，<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>引用的是发送到队列，队列本身的消息属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-919">Although you set the properties through the <xref:System.Messaging.MessageQueue> object, the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> refers to the properties of the messages that are sent to the queue, not the queue itself.</span></span>  
  
 <span data-ttu-id="7aa34-920">下表中显示属性的默认值。</span><span class="sxs-lookup"><span data-stu-id="7aa34-920">The default values for the properties are shown in the following table.</span></span>  
  
|<span data-ttu-id="7aa34-921">Property</span><span class="sxs-lookup"><span data-stu-id="7aa34-921">Property</span></span>|<span data-ttu-id="7aa34-922">默认值</span><span class="sxs-lookup"><span data-stu-id="7aa34-922">Default value</span></span>|  
|--------------|-------------------|  
|<xref:System.Messaging.DefaultPropertiesToSend.AcknowledgeType%2A>|`AcknowledgeType.None`|  
|<xref:System.Messaging.DefaultPropertiesToSend.AdministrationQueue%2A>|`null`|  
|<xref:System.Messaging.DefaultPropertiesToSend.AppSpecific%2A>|<span data-ttu-id="7aa34-923">零 (0)</span><span class="sxs-lookup"><span data-stu-id="7aa34-923">Zero (0)</span></span>|  
|<xref:System.Messaging.DefaultPropertiesToSend.AttachSenderId%2A>|`true`|  
|<xref:System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm%2A>|`EncryptionAlgorithm.RC2`|  
|<xref:System.Messaging.DefaultPropertiesToSend.Extension%2A>|<span data-ttu-id="7aa34-924">一个零长度的字节数组</span><span class="sxs-lookup"><span data-stu-id="7aa34-924">A zero-length array of bytes</span></span>|  
|<xref:System.Messaging.DefaultPropertiesToSend.HashAlgorithm%2A>|`HashAlgorithm.MD5`|  
|<xref:System.Messaging.DefaultPropertiesToSend.Label%2A>|<span data-ttu-id="7aa34-925">空字符串 ("")</span><span class="sxs-lookup"><span data-stu-id="7aa34-925">Empty string ("")</span></span>|  
|<xref:System.Messaging.DefaultPropertiesToSend.Priority%2A>|`MessagePriority.Normal`|  
|<xref:System.Messaging.DefaultPropertiesToSend.Recoverable%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.ResponseQueue%2A>|`null`|  
|<xref:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue%2A>|`Message.InfiniteTimeout`|  
|<xref:System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue%2A>|`null`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseEncryption%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseJournalQueue%2A>|`false`|  
|<xref:System.Messaging.DefaultPropertiesToSend.UseTracing%2A>|`false`|  
  
 <span data-ttu-id="7aa34-926">下表显示此属性是在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-926">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-927">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-927">Workgroup mode</span></span>|<span data-ttu-id="7aa34-928">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-928">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-929">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-929">Local computer</span></span>|<span data-ttu-id="7aa34-930">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-930">Yes</span></span>|  
|<span data-ttu-id="7aa34-931">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-931">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-932">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-932">Yes</span></span>|  
|<span data-ttu-id="7aa34-933">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-933">Remote computer</span></span>|<span data-ttu-id="7aa34-934">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-934">Yes</span></span>|  
|<span data-ttu-id="7aa34-935">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-935">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-936">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-936">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-937">下面的代码示例使用一条消息的优先级来确定要发送的消息的默认属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-937">The following code example uses the priority of a message to determine default properties to send for the message.</span></span>  
  
 [!code-cpp[MessageQueue.DefaultPropertiesToSend#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.DefaultPropertiesToSend/CPP/mqdefaultpropertiestosend.cpp#1)]
 [!code-csharp[MessageQueue.DefaultPropertiesToSend#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.DefaultPropertiesToSend/CS/mqdefaultpropertiestosend.cs#1)]
 [!code-vb[MessageQueue.DefaultPropertiesToSend#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.DefaultPropertiesToSend/VB/mqdefaultpropertiestosend.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-938">未能设置队列的默认属性，可能因为这些属性之一无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-938">The default properties could not be set for the queue, possibly because one of the properties is not valid.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="T:System.Messaging.AcknowledgeTypes" />
        <altmember cref="T:System.Messaging.EncryptionAlgorithm" />
        <altmember cref="T:System.Messaging.HashAlgorithm" />
        <altmember cref="F:System.Messaging.Message.InfiniteTimeout" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static void Delete (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Delete(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Delete(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Delete (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Delete(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="7aa34-939">要删除的队列的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-939">The location of the queue to be deleted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-940">删除“消息队列”服务器上的队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-940">Deletes a queue on a Message Queuing server.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-941">语法`path`参数依赖于的队列的类型。</span><span class="sxs-lookup"><span data-stu-id="7aa34-941">The syntax for the `path` parameter depends on the type of queue.</span></span>  
  
|<span data-ttu-id="7aa34-942">队列类型</span><span class="sxs-lookup"><span data-stu-id="7aa34-942">Queue type</span></span>|<span data-ttu-id="7aa34-943">语法</span><span class="sxs-lookup"><span data-stu-id="7aa34-943">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="7aa34-944">公用队列</span><span class="sxs-lookup"><span data-stu-id="7aa34-944">Public queue</span></span>|`MachineName`\\`QueueName`|  
|<span data-ttu-id="7aa34-945">专用队列</span><span class="sxs-lookup"><span data-stu-id="7aa34-945">Private queue</span></span>|`MachineName`\\`Private$`\\`QueueName`|  
  
 <span data-ttu-id="7aa34-946">有关更多的语法，请参阅<xref:System.Messaging.MessageQueue.Path%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-946">For more syntax, see the <xref:System.Messaging.MessageQueue.Path%2A> property.</span></span>  
  
 <span data-ttu-id="7aa34-947">或者，可以使用<xref:System.Messaging.MessageQueue.FormatName%2A>或<xref:System.Messaging.MessageQueue.Label%2A>来描述队列路径。</span><span class="sxs-lookup"><span data-stu-id="7aa34-947">Alternatively, you can use the <xref:System.Messaging.MessageQueue.FormatName%2A> or <xref:System.Messaging.MessageQueue.Label%2A> to describe the queue path.</span></span>  
  
|<span data-ttu-id="7aa34-948">参考</span><span class="sxs-lookup"><span data-stu-id="7aa34-948">Reference</span></span>|<span data-ttu-id="7aa34-949">语法</span><span class="sxs-lookup"><span data-stu-id="7aa34-949">Syntax</span></span>|  
|---------------|------------|  
|<span data-ttu-id="7aa34-950">格式名称</span><span class="sxs-lookup"><span data-stu-id="7aa34-950">Format name</span></span>|<span data-ttu-id="7aa34-951">通过 FormatName: [*格式名*]</span><span class="sxs-lookup"><span data-stu-id="7aa34-951">FormatName:[ *format name* ]</span></span>|  
|<span data-ttu-id="7aa34-952">Label</span><span class="sxs-lookup"><span data-stu-id="7aa34-952">Label</span></span>|<span data-ttu-id="7aa34-953">标签: [*标签*]</span><span class="sxs-lookup"><span data-stu-id="7aa34-953">Label:[ *label* ]</span></span>|  
  
 <span data-ttu-id="7aa34-954">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-954">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-955">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-955">Workgroup mode</span></span>|<span data-ttu-id="7aa34-956">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-956">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-957">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-957">Local computer</span></span>|<span data-ttu-id="7aa34-958">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-958">Yes</span></span>|  
|<span data-ttu-id="7aa34-959">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-959">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-960">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-960">Yes</span></span>|  
|<span data-ttu-id="7aa34-961">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-961">Remote computer</span></span>|<span data-ttu-id="7aa34-962">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-962">No</span></span>|  
|<span data-ttu-id="7aa34-963">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-963">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-964">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-964">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-965">下面的代码示例删除消息队列队列中，如果它存在。</span><span class="sxs-lookup"><span data-stu-id="7aa34-965">The following code example deletes a Message Queuing queue, if it exists.</span></span>  
  
 [!code-cpp[MessageQueue.ExistsDelete#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.ExistsDelete/CPP/mqexistsdelete.cpp#1)]
 [!code-csharp[MessageQueue.ExistsDelete#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.ExistsDelete/CS/mqexistsdelete.cs#1)]
 [!code-vb[MessageQueue.ExistsDelete#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.ExistsDelete/VB/mqexistsdelete.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-966">
            <paramref name="path" /> 参数为 <see langword="null" /> 或者是空字符串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-966">The <paramref name="path" /> parameter is <see langword="null" /> or is an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-967">该 <paramref name="path" /> 参数的语法无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-967">The syntax for the <paramref name="path" /> parameter is not valid.</span>
          </span>
          <span data-ttu-id="7aa34-968">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-968">-or-</span>
          </span>
          <span data-ttu-id="7aa34-969">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-969">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageQueue.Close" />
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
      </Docs>
    </Member>
    <Member MemberName="DenySharedReceive">
      <MemberSignature Language="C#" Value="public bool DenySharedReceive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DenySharedReceive" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.DenySharedReceive" />
      <MemberSignature Language="VB.NET" Value="Public Property DenySharedReceive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DenySharedReceive { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_DenySharedReceive")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-970">获取或设置一个值，该值指示此 <see cref="T:System.Messaging.MessageQueue" /> 对来自“消息队列”队列的消息是否有独占接收访问权。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-970">Gets or sets a value that indicates whether this <see cref="T:System.Messaging.MessageQueue" /> has exclusive access to receive messages from the Message Queuing queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7aa34-971">如果此 <see cref="T:System.Messaging.MessageQueue" /> 对来自队列的消息有独占接收权，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-971">
              <see langword="true" /> if this <see cref="T:System.Messaging.MessageQueue" /> has exclusive rights to receive messages from the queue; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="7aa34-972">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-972">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-973"><xref:System.Messaging.MessageQueue.DenySharedReceive%2A> 指定引用此队列的共享的模式<xref:System.Messaging.MessageQueue>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-973"><xref:System.Messaging.MessageQueue.DenySharedReceive%2A> specifies the shared mode of the queue referenced by this <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="7aa34-974">设置<xref:System.Messaging.MessageQueue.DenySharedReceive%2A>到`true`以指示只有这<xref:System.Messaging.MessageQueue>应具有访问权限以查看或从指定的队列接收消息<xref:System.Messaging.MessageQueue.Path%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-974">Set <xref:System.Messaging.MessageQueue.DenySharedReceive%2A> to `true` to indicate that only this <xref:System.Messaging.MessageQueue> should have access to peek or receive messages from the queue with the specified <xref:System.Messaging.MessageQueue.Path%2A>.</span></span> <span data-ttu-id="7aa34-975">如果另一个<xref:System.Messaging.MessageQueue>或者通过同一队列资源，该实例关联的另一个应用程序或应用程序将不能查看或接收消息，但它仍可发送它们。</span><span class="sxs-lookup"><span data-stu-id="7aa34-975">If another <xref:System.Messaging.MessageQueue> or another application is associated with the same queue resource, that instance or application will not be able to peek or receive messages, but it can still send them.</span></span>  
  
 <span data-ttu-id="7aa34-976">如果<xref:System.Messaging.MessageQueue.DenySharedReceive%2A>是`false`，队列可供多个应用程序来发送、 扫视、 或接收消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-976">If <xref:System.Messaging.MessageQueue.DenySharedReceive%2A> is `false`, the queue is available to multiple applications for sending, peeking, or receiving messages.</span></span>  
  
 <span data-ttu-id="7aa34-977">下表显示此属性是在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-977">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-978">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-978">Workgroup mode</span></span>|<span data-ttu-id="7aa34-979">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-979">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-980">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-980">Local computer</span></span>|<span data-ttu-id="7aa34-981">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-981">Yes</span></span>|  
|<span data-ttu-id="7aa34-982">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-982">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-983">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-983">Yes</span></span>|  
|<span data-ttu-id="7aa34-984">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-984">Remote computer</span></span>|<span data-ttu-id="7aa34-985">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-985">Yes</span></span>|  
|<span data-ttu-id="7aa34-986">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-986">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-987">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-987">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-988">下面的代码示例获取和设置的消息队列的值<xref:System.Messaging.MessageQueue.DenySharedReceive%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-988">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.DenySharedReceive%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#10](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.#ctor" />
        <altmember cref="P:System.Messaging.MessageQueue.EnableConnectionCache" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="7aa34-989">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-989">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-990">处置由 <see cref="T:System.Messaging.MessageQueue" /> 占用的资源（内存除外）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-990">Disposes of the resources (other than memory) used by the <see cref="T:System.Messaging.MessageQueue" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-991">在完成使用 <xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29> 后，应调用 <xref:System.Messaging.MessageQueue>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-991">Call <xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29> when you are finished using the <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="7aa34-992"><xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29> 方法使 <xref:System.Messaging.MessageQueue> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="7aa34-992">The <xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29> method leaves the <xref:System.Messaging.MessageQueue> in an unusable state.</span></span> <span data-ttu-id="7aa34-993">在调用<xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29>，必须释放对所有引用<xref:System.Messaging.MessageQueue>以便可以通过垃圾回收回收其占用的内存。</span><span class="sxs-lookup"><span data-stu-id="7aa34-993">After calling <xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29>, you must release all references to the <xref:System.Messaging.MessageQueue> so the memory it was occupying can be reclaimed by garbage collection.</span></span>  
  
 <span data-ttu-id="7aa34-994">应调用<xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29>在发布到最后一个引用之前<xref:System.Messaging.MessageQueue>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-994">You should call <xref:System.Messaging.MessageQueue.Dispose%28System.Boolean%29> before you release your last reference to the <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="7aa34-995">否则为资源<xref:System.Messaging.MessageQueue>是使用不会被释放之前垃圾集合调用<xref:System.Messaging.MessageQueue>对象的析构函数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-995">Otherwise, the resources the <xref:System.Messaging.MessageQueue> is using will not be freed until garbage collection calls the <xref:System.Messaging.MessageQueue> object's destructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.Close" />
      </Docs>
    </Member>
    <Member MemberName="EnableConnectionCache">
      <MemberSignature Language="C#" Value="public static bool EnableConnectionCache { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnableConnectionCache" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.EnableConnectionCache" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property EnableConnectionCache As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnableConnectionCache { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-996">获取或设置一个值，该值指示应用程序是否维护连接缓存。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-996">Gets or sets a value that indicates whether a cache of connections will be maintained by the application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7aa34-997">如果创建和使用连接缓存，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-997">
              <see langword="true" /> to create and use a connection cache; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-998">连接缓存是对结构包含读取或写入队列的句柄的引用列表。</span><span class="sxs-lookup"><span data-stu-id="7aa34-998">A connection cache is a list of references to structures that contain read or write handles to queues.</span></span> <span data-ttu-id="7aa34-999">当<xref:System.Messaging.MessageQueue.EnableConnectionCache%2A>是`true`、<xref:System.Messaging.MessageQueue>借用从缓存的句柄您每次调用<xref:System.Messaging.MessageQueue.Send%28System.Object%29>， <xref:System.Messaging.MessageQueue.Peek%2A>，或<xref:System.Messaging.MessageQueue.Receive%2A>，而不是打开新的句柄。</span><span class="sxs-lookup"><span data-stu-id="7aa34-999">When <xref:System.Messaging.MessageQueue.EnableConnectionCache%2A> is `true`, the <xref:System.Messaging.MessageQueue> borrows handles from the cache each time you call <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, <xref:System.Messaging.MessageQueue.Peek%2A>, or <xref:System.Messaging.MessageQueue.Receive%2A>, rather than open new handles.</span></span> <span data-ttu-id="7aa34-1000">这可以提高性能。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1000">This can improve performance.</span></span> <span data-ttu-id="7aa34-1001">使用连接缓存还使<xref:System.Messaging.MessageQueue>网络拓扑中的更改。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1001">Using a connection cache also insulates the <xref:System.Messaging.MessageQueue> from changes in the network topology.</span></span>  
  
 <span data-ttu-id="7aa34-1002">如果你创建新的连接到队列，当连接缓存已满，<xref:System.Messaging.MessageQueue>覆盖最近访问最少的结构与新的连接。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1002">If you create a new connection to a queue when the connection cache is full, the <xref:System.Messaging.MessageQueue> overwrites the least recently accessed structure with the new connection.</span></span> <span data-ttu-id="7aa34-1003">你可以完全由调用清除缓存<xref:System.Messaging.MessageQueue.ClearConnectionCache%2A>，例如，如果你正在使用的队列的格式名已更改，以便以前的读取和写入句柄不再有效。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1003">You can clear the cache entirely by calling <xref:System.Messaging.MessageQueue.ClearConnectionCache%2A>, for example, if the format names of the queues you are working with have changed so that the previous read and write handles are no longer valid.</span></span>  
  
 <span data-ttu-id="7aa34-1004">下表显示此属性是在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1004">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1005">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1005">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1006">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1006">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1007">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1007">Local computer</span></span>|<span data-ttu-id="7aa34-1008">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1008">Yes</span></span>|  
|<span data-ttu-id="7aa34-1009">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1009">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1010">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1010">Yes</span></span>|  
|<span data-ttu-id="7aa34-1011">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1011">Remote computer</span></span>|<span data-ttu-id="7aa34-1012">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1012">Yes</span></span>|  
|<span data-ttu-id="7aa34-1013">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1013">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1014">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1014">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-1015">下面的代码示例获取和设置的消息队列的值<xref:System.Messaging.MessageQueue.EnableConnectionCache%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1015">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.EnableConnectionCache%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#11](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.ClearConnectionCache" />
      </Docs>
    </Member>
    <Member MemberName="EncryptionRequired">
      <MemberSignature Language="C#" Value="public System.Messaging.EncryptionRequired EncryptionRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.EncryptionRequired EncryptionRequired" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.EncryptionRequired" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptionRequired As EncryptionRequired" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::EncryptionRequired EncryptionRequired { System::Messaging::EncryptionRequired get(); void set(System::Messaging::EncryptionRequired value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_EncryptionRequired")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.EncryptionRequired</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-1016">获取或设置一个指示队列是否只接受非私有（非加密）消息的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1016">Gets or sets a value that indicates whether the queue accepts only non-private (non-encrypted) messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7aa34-1017">
            <see cref="T:System.Messaging.EncryptionRequired" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1017">One of the <see cref="T:System.Messaging.EncryptionRequired" /> values.</span>
          </span>
          <span data-ttu-id="7aa34-1018">默认值为 <see langword="None" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1018">The default is <see langword="None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1019">指定该加密是必需的消息发送到队列时，只有消息正文进行加密。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1019">When you specify that encryption is required for the messages sent to a queue, only the message bodies are encrypted.</span></span> <span data-ttu-id="7aa34-1020">其他成员 (例如，<xref:System.Messaging.Message.Label%2A>和<xref:System.Messaging.Message.SenderId%2A>属性) 不能被加密。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1020">The other members (for example, the <xref:System.Messaging.Message.Label%2A> and <xref:System.Messaging.Message.SenderId%2A> properties) cannot be encrypted.</span></span>  
  
 <span data-ttu-id="7aa34-1021">将此属性设置修改消息队列队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1021">Setting this property modifies the Message Queuing queue.</span></span> <span data-ttu-id="7aa34-1022">因此，任何其他<xref:System.Messaging.MessageQueue>的更改会影响实例。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1022">Therefore, any other <xref:System.Messaging.MessageQueue> instances are affected by the change.</span></span>  
  
 <span data-ttu-id="7aa34-1023">加密的邮件将使私有消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1023">Encrypting a message makes the message private.</span></span> <span data-ttu-id="7aa34-1024">你可以指定队列的加密需要`None`， `Body`，或`Optional`通过设置<xref:System.Messaging.MessageQueue.EncryptionRequired%2A>属性正确。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1024">You can specify the queue's encryption requirement to be `None`, `Body`, or `Optional` by setting the <xref:System.Messaging.MessageQueue.EncryptionRequired%2A> property appropriately.</span></span> <span data-ttu-id="7aa34-1025"><xref:System.Messaging.Message.UseEncryption%2A>消息的设置必须与对应的队列的加密要求。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1025">The <xref:System.Messaging.Message.UseEncryption%2A> setting of the message must correspond to the encryption requirement of the queue.</span></span> <span data-ttu-id="7aa34-1026">如果未加密消息，而队列指定`Body`，或者如果消息已加密，而队列指定`None`，消息被拒绝由队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1026">If the message is not encrypted but the queue specifies `Body`, or if the message is encrypted but the queue specifies `None`, the message is rejected by the queue.</span></span> <span data-ttu-id="7aa34-1027">如果发送应用程序请求在这种情况的否定确认消息，消息队列指示发送应用程序的消息遭到拒绝。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1027">If the sending application requests a negative acknowledgment message in this event, Message Queuing indicates the message's rejection to the sending application.</span></span> <span data-ttu-id="7aa34-1028">如果<xref:System.Messaging.Message.UseDeadLetterQueue%2A>属性是`true`，加密失败消息发送到死信队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1028">If the <xref:System.Messaging.Message.UseDeadLetterQueue%2A> property is `true`, a message that fails encryption is sent to the dead-letter queue.</span></span> <span data-ttu-id="7aa34-1029">否则，消息将丢失。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1029">Otherwise, the message is lost.</span></span>  
  
 <span data-ttu-id="7aa34-1030">下表显示此属性是在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1030">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1031">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1031">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1032">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1032">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1033">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1033">Local computer</span></span>|<span data-ttu-id="7aa34-1034">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1034">Yes</span></span>|  
|<span data-ttu-id="7aa34-1035">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1035">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1036">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1036">Yes</span></span>|  
|<span data-ttu-id="7aa34-1037">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1037">Remote computer</span></span>|<span data-ttu-id="7aa34-1038">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1038">No</span></span>|  
|<span data-ttu-id="7aa34-1039">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1039">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1040">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1040">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-1041">下面的代码示例获取和设置的消息队列的值<xref:System.Messaging.MessageQueue.EncryptionRequired%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1041">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.EncryptionRequired%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#12](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-1042">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1042">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.Acknowledgment" />
        <altmember cref="P:System.Messaging.Message.UseEncryption" />
      </Docs>
    </Member>
    <Member MemberName="EndPeek">
      <MemberSignature Language="C#" Value="public System.Messaging.Message EndPeek (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message EndPeek(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndPeek (asyncResult As IAsyncResult) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ EndPeek(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="7aa34-1043">该 <see cref="T:System.IAsyncResult" /> 标识要完成的异步查看操作，并且从它检索最终结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1043">The <see cref="T:System.IAsyncResult" /> that identifies the asynchronous peek operation to finish and from which to retrieve an end result.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-1044">完成指定的异步查看操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1044">Completes the specified asynchronous peek operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-1045">该 <see cref="T:System.Messaging.Message" /> 与已完成的异步操作关联。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1045">The <see cref="T:System.Messaging.Message" /> associated with the completed asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1046">当<xref:System.Messaging.MessageQueue.PeekCompleted>引发事件时，<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>完成由启动的操作<xref:System.Messaging.MessageQueue.BeginPeek%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1046">When the <xref:System.Messaging.MessageQueue.PeekCompleted> event is raised, <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> completes the operation that was initiated by the <xref:System.Messaging.MessageQueue.BeginPeek%2A> call.</span></span> <span data-ttu-id="7aa34-1047">为此，请<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>查看的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1047">To do so, <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> peeks the message.</span></span>  
  
 <span data-ttu-id="7aa34-1048"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 可以指定超时，这会导致<xref:System.Messaging.MessageQueue.PeekCompleted>如果队列中出现一条消息之前发生超时的时候引发的事件。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1048"><xref:System.Messaging.MessageQueue.BeginPeek%2A> can specify a time-out, which causes the <xref:System.Messaging.MessageQueue.PeekCompleted> event to be raised if the time-out occurs before a message appears in the queue.</span></span> <span data-ttu-id="7aa34-1049">当发生超时则没有消息到达队列的后续调用中<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>引发异常。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1049">When a time-out occurs without a message arriving in the queue, a subsequent call to <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> throws an exception.</span></span>  
  
 <span data-ttu-id="7aa34-1050"><xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> 用于读取导致的消息<xref:System.Messaging.MessageQueue.PeekCompleted>引发事件。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1050"><xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> is used to read the message that caused the <xref:System.Messaging.MessageQueue.PeekCompleted> event to be raised.</span></span>  
  
 <span data-ttu-id="7aa34-1051">如果你想要继续以异步方式扫视消息，则可以再次调用<xref:System.Messaging.MessageQueue.BeginPeek%2A>之后调用<xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1051">If you want to continue to asynchronously peek messages, you can again call <xref:System.Messaging.MessageQueue.BeginPeek%2A> after calling <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>.</span></span>  
  
 <span data-ttu-id="7aa34-1052">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1052">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1053">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1053">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1054">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1054">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1055">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1055">Local computer</span></span>|<span data-ttu-id="7aa34-1056">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1056">Yes</span></span>|  
|<span data-ttu-id="7aa34-1057">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1057">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1058">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1058">Yes</span></span>|  
|<span data-ttu-id="7aa34-1059">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1059">Remote computer</span></span>|<span data-ttu-id="7aa34-1060">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1060">No</span></span>|  
|<span data-ttu-id="7aa34-1061">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1061">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1062">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1062">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-1063">下面的代码示例创建名为一个事件处理程序`MyPeekCompleted`，将其附加到<xref:System.Messaging.MessageQueue.PeekCompleted>事件处理程序委托，然后调用<xref:System.Messaging.MessageQueue.BeginPeek%2A>启动位于路径的队列上的异步查看操作"。 \myQueue"。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1063">The following code example creates an event handler named `MyPeekCompleted`, attaches it to the <xref:System.Messaging.MessageQueue.PeekCompleted> event handler delegate, and calls <xref:System.Messaging.MessageQueue.BeginPeek%2A> to initiate an asynchronous peek operation on the queue that is located at the path ".\myQueue".</span></span> <span data-ttu-id="7aa34-1064">当<xref:System.Messaging.MessageQueue.PeekCompleted>引发事件，该示例扫视消息，并将其正文写入到屏幕。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1064">When a <xref:System.Messaging.MessageQueue.PeekCompleted> event is raised, the example peeks the message and writes its body to the screen.</span></span> <span data-ttu-id="7aa34-1065">该示例然后调用<xref:System.Messaging.MessageQueue.BeginPeek%2A>以启动新的异步扫视操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1065">The example then calls <xref:System.Messaging.MessageQueue.BeginPeek%2A> again to initiate a new asynchronous peek operation.</span></span>  
  
 [!code-cpp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CPP/mqbeginpeek_noparms.cpp#1)]
 [!code-csharp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CS/mqbeginpeek_noparms.cs#1)]
 [!code-vb[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/VB/mqbeginpeek_noparms.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7aa34-1066">
            <paramref name="asyncResult" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1066">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-1067">该 <paramref name="asyncResult" /> 参数的语法无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1067">The syntax of the <paramref name="asyncResult" /> parameter is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-1068">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1068">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
      </Docs>
    </Member>
    <Member MemberName="EndReceive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message EndReceive (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message EndReceive(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceive (asyncResult As IAsyncResult) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ EndReceive(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="7aa34-1069">该 <see cref="T:System.IAsyncResult" /> 标识要完成的异步接收操作，并且从它检索最终结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1069">The <see cref="T:System.IAsyncResult" /> that identifies the asynchronous receive operation to finish and from which to retrieve an end result.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-1070">完成指定的异步接收操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1070">Completes the specified asynchronous receive operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-1071">该 <see cref="T:System.Messaging.Message" /> 与已完成的异步操作关联。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1071">The <see cref="T:System.Messaging.Message" /> associated with the completed asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1072">当<xref:System.Messaging.MessageQueue.ReceiveCompleted>引发事件时，<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>完成由启动的操作<xref:System.Messaging.MessageQueue.BeginReceive%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1072">When the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event is raised, <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> completes the operation that was initiated by the <xref:System.Messaging.MessageQueue.BeginReceive%2A> call.</span></span> <span data-ttu-id="7aa34-1073">为此，请<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>接收消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1073">To do so, <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> receives the message.</span></span>  
  
 <span data-ttu-id="7aa34-1074"><xref:System.Messaging.MessageQueue.BeginReceive%2A> 可以指定超时，这会导致<xref:System.Messaging.MessageQueue.ReceiveCompleted>如果队列中出现一条消息之前发生超时的时候引发的事件。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1074"><xref:System.Messaging.MessageQueue.BeginReceive%2A> can specify a time-out, which causes the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event to be raised if the time-out occurs before a message appears in the queue.</span></span> <span data-ttu-id="7aa34-1075">当发生超时则没有消息到达队列的后续调用中<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>引发异常。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1075">When a time-out occurs without a message arriving in the queue, a subsequent call to <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> throws an exception.</span></span>  
  
 <span data-ttu-id="7aa34-1076"><xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> 用于读取 （从队列中删除） 导致的消息<xref:System.Messaging.MessageQueue.ReceiveCompleted>引发事件。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1076"><xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> is used to read (removing from the queue) the message that caused the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event to be raised.</span></span>  
  
 <span data-ttu-id="7aa34-1077">如果你想要继续以异步方式接收消息，则可以再次调用<xref:System.Messaging.MessageQueue.BeginReceive%2A>之后调用<xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1077">If you want to continue to asynchronously receive messages, you can again call <xref:System.Messaging.MessageQueue.BeginReceive%2A> after calling <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29>.</span></span>  
  
 <span data-ttu-id="7aa34-1078">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1078">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1079">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1079">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1080">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1080">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1081">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1081">Local computer</span></span>|<span data-ttu-id="7aa34-1082">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1082">Yes</span></span>|  
|<span data-ttu-id="7aa34-1083">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1083">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1084">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1084">Yes</span></span>|  
|<span data-ttu-id="7aa34-1085">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1085">Remote computer</span></span>|<span data-ttu-id="7aa34-1086">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1086">No</span></span>|  
|<span data-ttu-id="7aa34-1087">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1087">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1088">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1088">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-1089">下面的代码示例链接异步请求。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1089">The following code example chains asynchronous requests.</span></span> <span data-ttu-id="7aa34-1090">它假定名为"myQueue"的本地计算机上没有队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1090">It assumes there is a queue on the local computer called "myQueue".</span></span> <span data-ttu-id="7aa34-1091">`Main`函数开始异步操作由处理`MyReceiveCompleted`例程。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1091">The `Main` function begins the asynchronous operation that is handled by the `MyReceiveCompleted` routine.</span></span> <span data-ttu-id="7aa34-1092">`MyReceiveCompleted` 处理当前消息并开始一个新异步接收操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1092">`MyReceiveCompleted` processes the current message and begins a new asynchronous receive operation.</span></span>  
  
 [!code-cpp[MessageQueue.BeginReceive_noparms_combined#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginReceive_noparms_combined/CPP/mqbeginreceive_noparms_mre.cpp#1)]
 [!code-csharp[MessageQueue.BeginReceive_noparms_combined#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginReceive_noparms_combined/CS/mqbeginreceive_noparms_mre.cs#1)]
 [!code-vb[MessageQueue.BeginReceive_noparms_combined#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginReceive_noparms_combined/VB/mqbeginreceive_noparms_mre.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7aa34-1093">
            <paramref name="asyncResult" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1093">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-1094">该 <paramref name="asyncResult" /> 参数的语法无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1094">The syntax of the <paramref name="asyncResult" /> parameter is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-1095">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1095">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
        <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Exists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists (path As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Exists(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="7aa34-1096">要查找的队列的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1096">The location of the queue to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-1097">确定指定的路径中是否存在“消息队列”队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1097">Determines whether a Message Queuing queue exists at the specified path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-1098">如果指定的路径中存在队列，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1098">
              <see langword="true" /> if a queue with the specified path exists; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1099"><xref:System.Messaging.MessageQueue.Exists%28System.String%29>方法确定消息队列的队列是否存在在指定路径。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1099">The <xref:System.Messaging.MessageQueue.Exists%28System.String%29> method determines whether a Message Queuing queue exists at a specified path.</span></span> <span data-ttu-id="7aa34-1100">不存在的方法来确定是否存在具有指定的格式名称的队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1100">No method exists to determine whether a queue with a specified format name exists.</span></span> <span data-ttu-id="7aa34-1101">有关格式名语法和其他路径语法窗体的详细信息，请参阅<xref:System.Messaging.MessageQueue.Path%2A>属性。)</span><span class="sxs-lookup"><span data-stu-id="7aa34-1101">For more information about the format name syntax and other path syntax forms, see the <xref:System.Messaging.MessageQueue.Path%2A> property.)</span></span>  
  
 <span data-ttu-id="7aa34-1102"><xref:System.Messaging.MessageQueue.Exists%28System.String%29> 是代价高昂的操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1102"><xref:System.Messaging.MessageQueue.Exists%28System.String%29> is an expensive operation.</span></span> <span data-ttu-id="7aa34-1103">应用程序中的必要时，请使用它。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1103">Use it only when it is necessary within the application.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7aa34-1104"><xref:System.Messaging.MessageQueue.Exists%28System.String%29>方法不支持<xref:System.Messaging.MessageQueue.FormatName%2A>前缀。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1104">The <xref:System.Messaging.MessageQueue.Exists%28System.String%29> method does not support the <xref:System.Messaging.MessageQueue.FormatName%2A> prefix.</span></span>  
  
 <span data-ttu-id="7aa34-1105">语法`path`参数取决于队列的类型下表中所示。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1105">The syntax for the `path` parameter depends on the type of queue, as shown in the following table.</span></span>  
  
|<span data-ttu-id="7aa34-1106">队列类型</span><span class="sxs-lookup"><span data-stu-id="7aa34-1106">Queue type</span></span>|<span data-ttu-id="7aa34-1107">语法</span><span class="sxs-lookup"><span data-stu-id="7aa34-1107">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="7aa34-1108">公用队列</span><span class="sxs-lookup"><span data-stu-id="7aa34-1108">Public queue</span></span>|`MachineName`\\`QueueName`|  
  
 <span data-ttu-id="7aa34-1109"><xref:System.Messaging.MessageQueue.Exists%28System.String%29> 无法调用它以验证远程专用队列存在。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1109"><xref:System.Messaging.MessageQueue.Exists%28System.String%29> cannot be called to verify the existence of a remote private queue.</span></span>  
  
 <span data-ttu-id="7aa34-1110">有关更多的语法，请参阅<xref:System.Messaging.MessageQueue.Path%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1110">For more syntax, see the <xref:System.Messaging.MessageQueue.Path%2A> property.</span></span>  
  
 <span data-ttu-id="7aa34-1111">或者，可以使用<xref:System.Messaging.MessageQueue.Label%2A>来描述队列路径。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1111">Alternatively, you can use the <xref:System.Messaging.MessageQueue.Label%2A> to describe the queue path.</span></span>  
  
|<span data-ttu-id="7aa34-1112">参考</span><span class="sxs-lookup"><span data-stu-id="7aa34-1112">Reference</span></span>|<span data-ttu-id="7aa34-1113">语法</span><span class="sxs-lookup"><span data-stu-id="7aa34-1113">Syntax</span></span>|  
|---------------|------------|  
|<span data-ttu-id="7aa34-1114">Label</span><span class="sxs-lookup"><span data-stu-id="7aa34-1114">Label</span></span>|<span data-ttu-id="7aa34-1115">标签: [ `label` ]</span><span class="sxs-lookup"><span data-stu-id="7aa34-1115">Label:[ `label` ]</span></span>|  
  
 <span data-ttu-id="7aa34-1116">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1116">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1117">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1117">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1118">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1118">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1119">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1119">Local computer</span></span>|<span data-ttu-id="7aa34-1120">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1120">Yes</span></span>|  
|<span data-ttu-id="7aa34-1121">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1121">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1122">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1122">No</span></span>|  
|<span data-ttu-id="7aa34-1123">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1123">Remote computer</span></span>|<span data-ttu-id="7aa34-1124">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1124">No</span></span>|  
|<span data-ttu-id="7aa34-1125">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1125">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1126">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1126">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-1127">下面的代码示例验证消息队列的队列是否存在，，然后将其删除。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1127">The following code example verifies whether a Message Queuing queue exists, and then deletes it.</span></span>  
  
 [!code-cpp[MessageQueue.ExistsDelete#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.ExistsDelete/CPP/mqexistsdelete.cpp#1)]
 [!code-csharp[MessageQueue.ExistsDelete#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.ExistsDelete/CS/mqexistsdelete.cs#1)]
 [!code-vb[MessageQueue.ExistsDelete#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.ExistsDelete/VB/mqexistsdelete.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-1128">该 <paramref name="path" /> 语法无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1128">The <paramref name="path" /> syntax is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-1129">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1129">An error occurred when accessing a Message Queuing method.</span>
          </span>
          <span data-ttu-id="7aa34-1130">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1130">-or-</span>
          </span>
          <span data-ttu-id="7aa34-1131">
            <see cref="M:System.Messaging.MessageQueue.Exists(System.String)" /> 方法正被远程专用队列调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1131">The <see cref="M:System.Messaging.MessageQueue.Exists(System.String)" /> method is being called on a remote private queue</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7aa34-1132">应用程序在验证队列是否存在时使用的格式名语法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1132">The application used format name syntax when verifying queue existence.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
      </Docs>
    </Member>
    <Member MemberName="FormatName">
      <MemberSignature Language="C#" Value="public string FormatName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormatName" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.FormatName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FormatName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormatName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_FormatName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-1133">获取“消息队列”在创建队列时生成的唯一队列名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1133">Gets the unique queue name that Message Queuing generated at the time of the queue's creation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7aa34-1134">队列的名称，该名称在网络上是唯一的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1134">The name for the queue, which is unique on the network.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1135"><xref:System.Messaging.MessageQueue.FormatName%2A>属性包含队列的格式名。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1135">The <xref:System.Messaging.MessageQueue.FormatName%2A> property contains the format name of the queue.</span></span> <span data-ttu-id="7aa34-1136">消息队列使用的格式名来标识要打开的队列以及如何访问它。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1136">Message Queuing uses the format name to identify which queue to open and how to access it.</span></span> <span data-ttu-id="7aa34-1137">与大部分队列的特征，不同的格式名不是消息队列应用程序队列属性，因此不能通过消息队列管理工具访问它。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1137">Unlike most of a queue's characteristics, the format name is not a Message Queuing application queue property, so you cannot access it through the Message Queuing management tool.</span></span> <span data-ttu-id="7aa34-1138">格式名只是的唯一名称的队列，当它创建队列或更高版本生成应用程序的消息队列生成的。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1138">The format name is simply a unique name for the queue, which Message Queuing generates when it creates the queue or which the application generates later.</span></span>  
  
 <span data-ttu-id="7aa34-1139">如果指定路径中使用的路径名称语法 (如`myComputer\myQueue`) 而不是在读取或写入到队列时，请使用格式名称语法，主域控制器 （它使用 Active Directory） 将转换<xref:System.Messaging.MessageQueue.Path%2A>到关联的<xref:System.Messaging.MessageQueue.FormatName%2A>之前访问该队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1139">If you specify a path using the path name syntax (such as `myComputer\myQueue`) rather than using the format name syntax when you read or write to the queue, the primary domain controller (which uses Active Directory) translates the <xref:System.Messaging.MessageQueue.Path%2A> into the associated <xref:System.Messaging.MessageQueue.FormatName%2A> before accessing the queue.</span></span> <span data-ttu-id="7aa34-1140">如果你的应用程序正在脱机工作，则必须使用格式名称语法;否则，该域的主域控制器将不可以执行路径翻译。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1140">If your application is working offline, you must use the format name syntax; otherwise, the primary domain controller will not be available to perform the path translation.</span></span>  
  
 <span data-ttu-id="7aa34-1141">下表显示此属性是在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1141">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1142">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1142">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1143">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1143">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1144">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1144">Local computer</span></span>|<span data-ttu-id="7aa34-1145">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1145">Yes</span></span>|  
|<span data-ttu-id="7aa34-1146">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1146">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1147">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1147">Yes</span></span>|  
|<span data-ttu-id="7aa34-1148">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1148">Remote computer</span></span>|<span data-ttu-id="7aa34-1149">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1149">Yes</span></span>|  
|<span data-ttu-id="7aa34-1150">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1150">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1151">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1151">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-1152">下面的代码示例显示的消息队列的值<xref:System.Messaging.MessageQueue.FormatName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1152">The following code example displays the value of a message queue's <xref:System.Messaging.MessageQueue.FormatName%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#13](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-1153">未设置 <see cref="P:System.Messaging.MessageQueue.Path" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1153">The <see cref="P:System.Messaging.MessageQueue.Path" /> is not set.</span>
          </span>
          <span data-ttu-id="7aa34-1154">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1154">-or-</span>
          </span>
          <span data-ttu-id="7aa34-1155">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1155">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
        <altmember cref="T:System.Messaging.MessageQueue" />
      </Docs>
    </Member>
    <Member MemberName="Formatter">
      <MemberSignature Language="C#" Value="public System.Messaging.IMessageFormatter Formatter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.IMessageFormatter Formatter" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.Formatter" />
      <MemberSignature Language="VB.NET" Value="Public Property Formatter As IMessageFormatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::IMessageFormatter ^ Formatter { System::Messaging::IMessageFormatter ^ get(); void set(System::Messaging::IMessageFormatter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Messaging.Design.MessageFormatterConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_Formatter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.IMessageFormatter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-1156">获取或设置格式化程序，该格式化程序用于将对象序列化为从队列读取或写入队列的消息体，或者用于将从队列读取或写入队列的消息体反序列化为对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1156">Gets or sets the formatter used to serialize an object into or deserialize an object from the body of a message read from or written to the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7aa34-1157">该 <see cref="T:System.Messaging.IMessageFormatter" /> 产生要写入消息体或要从消息体中读取的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1157">The <see cref="T:System.Messaging.IMessageFormatter" /> that produces a stream to be written to or read from the message body.</span>
          </span>
          <span data-ttu-id="7aa34-1158">默认值为 <see cref="T:System.Messaging.XmlMessageFormatter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1158">The default is <see cref="T:System.Messaging.XmlMessageFormatter" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1159"><xref:System.Messaging.MessageQueue.Formatter%2A>属性包含一个格式化程序对象，该转换时你的应用程序读取或写入到队列的消息对象的实例。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1159">The <xref:System.Messaging.MessageQueue.Formatter%2A> property contains an instance of a formatter object, which transforms messages when your application reads or writes to the queue.</span></span>  
  
 <span data-ttu-id="7aa34-1160">当应用程序将消息发送到队列时，格式化程序对象序列化为流，并将它插入到消息正文。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1160">When the application sends message to the queue, the formatter serializes the object into a stream and inserts it into the message body.</span></span> <span data-ttu-id="7aa34-1161">当从队列中读取，格式化程序反序列化到消息数据<xref:System.Messaging.Message.Body%2A>属性<xref:System.Messaging.Message>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1161">When reading from a queue, the formatter deserializes the message data into the <xref:System.Messaging.Message.Body%2A> property of a <xref:System.Messaging.Message>.</span></span>  
  
 <span data-ttu-id="7aa34-1162"><xref:System.Messaging.XmlMessageFormatter>松散耦合的因此不需要时使用此格式键入发送方和接收方将相同对象。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1162">The <xref:System.Messaging.XmlMessageFormatter> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format.</span></span> <span data-ttu-id="7aa34-1163"><xref:System.Messaging.ActiveXMessageFormatter>和<xref:System.Messaging.BinaryMessageFormatter>数据序列化为二进制表示形式。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1163">The <xref:System.Messaging.ActiveXMessageFormatter> and <xref:System.Messaging.BinaryMessageFormatter> serialize the data into binary representation.</span></span> <span data-ttu-id="7aa34-1164"><xref:System.Messaging.ActiveXMessageFormatter>发送或接收 COM 组件时使用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1164">The <xref:System.Messaging.ActiveXMessageFormatter> is used when sending or receiving COM components.</span></span>  
  
 <span data-ttu-id="7aa34-1165"><xref:System.Messaging.BinaryMessageFormatter> 和<xref:System.Messaging.ActiveXMessageFormatter>提供更快吞吐量要高于<xref:System.Messaging.XmlMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1165"><xref:System.Messaging.BinaryMessageFormatter> and <xref:System.Messaging.ActiveXMessageFormatter> provide faster throughput than the <xref:System.Messaging.XmlMessageFormatter>.</span></span> <span data-ttu-id="7aa34-1166"><xref:System.Messaging.ActiveXMessageFormatter>允许与 Visual Basic 6.0 消息队列应用程序的互操作性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1166">The <xref:System.Messaging.ActiveXMessageFormatter> allows interoperability with Visual Basic 6.0 Message Queuing applications.</span></span>  
  
 <span data-ttu-id="7aa34-1167">当你的应用程序将消息发送到队列，<xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType>仅适用于使用默认消息属性，这些消息<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1167">When your application sends messages to the queue, the <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> applies only to those messages that use the default message properties, <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>.</span></span> <span data-ttu-id="7aa34-1168">如果你发送<xref:System.Messaging.Message>到队列，消息队列使用格式化程序中定义<xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType>要改为序列化正文的属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1168">If you send a <xref:System.Messaging.Message> to the queue, Message Queuing uses the formatter defined in the <xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType> property to serialize the body instead.</span></span>  
  
 <span data-ttu-id="7aa34-1169"><xref:System.Messaging.MessageQueue>类将始终使用<xref:System.Messaging.Message>接收或查看从队列的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1169">The <xref:System.Messaging.MessageQueue> class will always use a <xref:System.Messaging.Message> to receive or peek a message from the queue.</span></span> <span data-ttu-id="7aa34-1170">消息使用反序列化<xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1170">The message is deserialized using the <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="7aa34-1171">下表显示此属性是在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1171">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1172">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1172">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1173">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1173">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1174">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1174">Local computer</span></span>|<span data-ttu-id="7aa34-1175">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1175">Yes</span></span>|  
|<span data-ttu-id="7aa34-1176">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1176">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1177">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1177">Yes</span></span>|  
|<span data-ttu-id="7aa34-1178">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1178">Remote computer</span></span>|<span data-ttu-id="7aa34-1179">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1179">No</span></span>|  
|<span data-ttu-id="7aa34-1180">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1180">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1181">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1181">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-1182">下面的代码示例演示了格式设置消息正文使用<xref:System.Messaging.BinaryMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1182">The following code example demonstrates formatting a message body using <xref:System.Messaging.BinaryMessageFormatter>.</span></span>  
  
 [!code-cpp[MessagingBinaryFormatter#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessagingBinaryFormatter/CPP/message_binaryformatter.cpp#1)]
 [!code-csharp[MessagingBinaryFormatter#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessagingBinaryFormatter/CS/message_binaryformatter.cs#1)]
 [!code-vb[MessagingBinaryFormatter#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessagingBinaryFormatter/VB/message_binaryformatter.vb#1)]  
  
 <span data-ttu-id="7aa34-1183">下面的代码示例演示了格式设置消息正文使用<xref:System.Messaging.XmlMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1183">The following code example demonstrates formatting a message body using <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]
 [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]
 [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.XmlMessageFormatter" />
        <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
        <altmember cref="T:System.Messaging.BinaryMessageFormatter" />
        <altmember cref="P:System.Messaging.Message.Formatter" />
      </Docs>
    </Member>
    <Member MemberName="GetAllMessages">
      <MemberSignature Language="C#" Value="public System.Messaging.Message[] GetAllMessages ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message[] GetAllMessages() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetAllMessages" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllMessages () As Message()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Messaging::Message ^&gt; ^ GetAllMessages();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-1184">返回位于队列中的所有消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1184">Returns all the messages that are in the queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-1185">类型 <see cref="T:System.Messaging.Message" /> 的数组，表示队列中所有消息，其顺序与这些消息在“消息队列”队列中的出现顺序相同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1185">An array of type <see cref="T:System.Messaging.Message" /> that represents all the messages in the queue, in the same order as they appear in the Message Queuing queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1186"><xref:System.Messaging.MessageQueue.GetAllMessages%2A> 返回这些消息的队列中的消息，不是动态链接的静态快照。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1186"><xref:System.Messaging.MessageQueue.GetAllMessages%2A> returns a static snapshot of the messages in the queue, not dynamic links to those messages.</span></span> <span data-ttu-id="7aa34-1187">因此，数组不能用于修改在队列中的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1187">Therefore, you cannot use the array to modify the messages in the queue.</span></span> <span data-ttu-id="7aa34-1188">如果您需要与队列 （如删除消息的能力） 的实时、 动态交互，调用<xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A>方法，返回队列中的动态列表的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1188">If you want real-time, dynamic interaction with the queue (such as the ability to delete messages), call the <xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A> method, which returns a dynamic list of the messages in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-1189">因为<xref:System.Messaging.MessageQueue.GetAllMessages%2A>调用该方法返回的队列中的消息副本时，该数组不会反映新消息到达队列中或从队列中删除的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1189">Because <xref:System.Messaging.MessageQueue.GetAllMessages%2A> returns a copy of the messages in the queue at the time the method was called, the array does not reflect new messages that arrive in the queue or messages that are removed from the queue.</span></span>  
  
 <span data-ttu-id="7aa34-1190"><xref:System.Messaging.MessageQueue.GetAllMessages%2A> 检索不通过筛选出这些属性<xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1190"><xref:System.Messaging.MessageQueue.GetAllMessages%2A> retrieves only those properties not filtered out by the <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> property.</span></span>  
  
 <span data-ttu-id="7aa34-1191">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1191">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1192">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1192">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1193">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1193">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1194">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1194">Local computer</span></span>|<span data-ttu-id="7aa34-1195">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1195">Yes</span></span>|  
|<span data-ttu-id="7aa34-1196">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1196">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1197">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1197">Yes</span></span>|  
|<span data-ttu-id="7aa34-1198">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1198">Remote computer</span></span>|<span data-ttu-id="7aa34-1199">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1199">No</span></span>|  
|<span data-ttu-id="7aa34-1200">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1200">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1201">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1201">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-1202">以下代码示例演示了 <xref:System.Messaging.MessageQueue.GetAllMessages%2A> 的用法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1202">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.GetAllMessages%2A>.</span></span>  
  
 [!code-cpp[MessageQueue2#21](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#21)]
 [!code-csharp[MessageQueue2#21](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-1203">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1203">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-1204">枚举队列中的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1204">Enumerates the messages in a queue.</span>
          </span>
          <span data-ttu-id="7aa34-1205">
            <see cref="M:System.Messaging.MessageQueue.GetEnumerator" /> 已弃用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1205">
              <see cref="M:System.Messaging.MessageQueue.GetEnumerator" /> is deprecated.</span>
          </span>
          <span data-ttu-id="7aa34-1206">应改用 <see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1206">
              <see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" /> should be used instead.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-1207">
            <see cref="T:System.Collections.IEnumerator" />，它提供与队列消息的动态连接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1207">A <see cref="T:System.Collections.IEnumerator" /> that provides a dynamic connection to the messages in the queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1208">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1208">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1209">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1209">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1210">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1210">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1211">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1211">Local computer</span></span>|<span data-ttu-id="7aa34-1212">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1212">Yes</span></span>|  
|<span data-ttu-id="7aa34-1213">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1213">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1214">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1214">Yes</span></span>|  
|<span data-ttu-id="7aa34-1215">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1215">Remote computer</span></span>|<span data-ttu-id="7aa34-1216">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1216">No</span></span>|  
|<span data-ttu-id="7aa34-1217">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1217">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1218">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1218">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-1219">以下代码示例演示了 <xref:System.Messaging.MessageQueue.GetEnumerator%2A> 的用法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1219">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.GetEnumerator%2A>.</span></span>  
  
 [!code-cpp[MessageQueue2#22](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#22)]
 [!code-csharp[MessageQueue2#22](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#22)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" />
      </Docs>
    </Member>
    <Member MemberName="GetMachineId">
      <MemberSignature Language="C#" Value="public static Guid GetMachineId (string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GetMachineId(string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetMachineId(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMachineId (machineName As String) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GetMachineId(System::String ^ machineName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="machineName">
          <span data-ttu-id="7aa34-1220">包含队列的计算机的名称，名称前不含两个反斜杠 (\\\\)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1220">The name of the computer that contains the queue, without the two preceding backslashes (\\\\).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-1221">获取计算机的标识符，此 <see cref="T:System.Messaging.MessageQueue" /> 引用的队列位于该计算机上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1221">Gets the identifier of the computer on which the queue referenced by this <see cref="T:System.Messaging.MessageQueue" /> is located.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-1222">
            <see cref="T:System.Guid" />，表示队列所在的计算机的唯一标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1222">A <see cref="T:System.Guid" /> that represents a unique identifier for the computer on which the queue is located.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1223">你可以有两个用途，以及其他使用计算机的标识符： 读取计算机日志和设置的安全证书。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1223">You can use a computer's identifier for two purposes, among others: to read the computer journal and to set security certificates.</span></span> <span data-ttu-id="7aa34-1224">但是，不能调用<xref:System.Messaging.MessageQueue.GetMachineId%28System.String%29>以远程计算机时脱机工作因为的应用程序必须对目录服务的访问，域控制器上。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1224">However, you cannot call <xref:System.Messaging.MessageQueue.GetMachineId%28System.String%29> for a remote computer when you are working offline because the application must have access to the directory service on the domain controller.</span></span>  
  
 <span data-ttu-id="7aa34-1225">计算机标识符 （或的计算机标识符） 是<xref:System.Guid>消息队列时，创建一台计算机添加到企业。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1225">The computer identifier (or machine identifier) is a <xref:System.Guid> that Message Queuing creates when a computer is added to the enterprise.</span></span> <span data-ttu-id="7aa34-1226">消息队列结合使用计算机标识符`Machine`和`Journal`关键字创建具有语法的计算机日记格式名`Machine=<computeridentifier>;Journal`。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1226">Message Queuing combines the computer identifier with the `Machine` and `Journal` keywords to create the machine journal's format name, which has the syntax `Machine=<computeridentifier>;Journal`.</span></span> <span data-ttu-id="7aa34-1227">计算机日记，也称为作为日记队列中，是用于存储的副本的系统队列应用程序生成消息时<xref:System.Messaging.MessageQueue.UseJournalQueue%2A>属性是`true`。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1227">The machine journal, which is also known as the journal queue, is a system queue that stores copies of application-generated messages when the <xref:System.Messaging.MessageQueue.UseJournalQueue%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="7aa34-1228">构造队列格式名时，此语法为日志才有效。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1228">This syntax for the journal is only valid when constructing the format name for the queue.</span></span> <span data-ttu-id="7aa34-1229">路径名称语法不`MachineName` \\ `Journal$`。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1229">The path name syntax is `MachineName`\\`Journal$`.</span></span>  
  
 <span data-ttu-id="7aa34-1230">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1230">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1231">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1231">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1232">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1232">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1233">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1233">Local computer</span></span>|<span data-ttu-id="7aa34-1234">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1234">No</span></span>|  
|<span data-ttu-id="7aa34-1235">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1235">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1236">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1236">No</span></span>|  
|<span data-ttu-id="7aa34-1237">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1237">Remote computer</span></span>|<span data-ttu-id="7aa34-1238">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1238">No</span></span>|  
|<span data-ttu-id="7aa34-1239">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1239">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1240">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1240">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-1241">下面的代码示例调用 <xref:System.Messaging.MessageQueue.GetMachineId%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1241">The following code example calls <xref:System.Messaging.MessageQueue.GetMachineId%28System.String%29>.</span></span>  
  
 [!code-csharp[MessageQueue#14](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-1242">未能检索到计算机标识符，可能是因为目录服务不可用，例如当正在脱机工作时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1242">The computer identifier could not be retrieved, possibly because the directory service is not available; for example, if you are working offline.</span>
          </span>
          <span data-ttu-id="7aa34-1243">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1243">-or-</span>
          </span>
          <span data-ttu-id="7aa34-1244">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1244">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.MachineName" />
        <altmember cref="P:System.Messaging.MessageQueue.UseJournalQueue" />
      </Docs>
    </Member>
    <Member MemberName="GetMessageEnumerator">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageEnumerator GetMessageEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.MessageEnumerator GetMessageEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetMessageEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMessageEnumerator () As MessageEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::MessageEnumerator ^ GetMessageEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-1245">为队列中的所有消息创建枚举数对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1245">Creates an enumerator object for all the messages in the queue.</span>
          </span>
          <span data-ttu-id="7aa34-1246">
            <see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator" /> 已弃用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1246">
              <see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator" /> is deprecated.</span>
          </span>
          <span data-ttu-id="7aa34-1247">应改用 <see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1247">
              <see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" /> should be used instead.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-1248">该 <see cref="T:System.Messaging.MessageEnumerator" /> 包括队列中所包含的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1248">The <see cref="T:System.Messaging.MessageEnumerator" /> holding the messages that are contained in the queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1249"><xref:System.Messaging.MessageQueue.GetMessageEnumerator%2A> 在队列中创建的所有消息的动态列表。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1249"><xref:System.Messaging.MessageQueue.GetMessageEnumerator%2A> creates a dynamic list of all the messages in a queue.</span></span> <span data-ttu-id="7aa34-1250">你可以从队列中删除位于枚举器的当前位置的消息通过调用<xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A>为<xref:System.Messaging.MessageEnumerator>，<xref:System.Messaging.MessageQueue.GetMessageEnumerator%2A>返回。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1250">You can remove from the queue the message at the enumerator's current position by calling <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> for the <xref:System.Messaging.MessageEnumerator> that <xref:System.Messaging.MessageQueue.GetMessageEnumerator%2A> returns.</span></span>  
  
 <span data-ttu-id="7aa34-1251">因为光标位于与队列中消息的动态列表相关联，则枚举将反映对消息在队列中，进行任何修改，如果消息已超出了当前光标位置。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1251">Because the cursor is associated with the dynamic list of messages in the queue, the enumeration reflects any modification you make to the messages in the queue, if the message is beyond the current cursor position.</span></span> <span data-ttu-id="7aa34-1252">例如，枚举数可以自动访问放置光标的当前位置，之外优先级较低的消息，但不是在该位置之前插入优先级较高的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1252">For example, the enumerator can automatically access a lower-priority message placed beyond the cursor's current position, but not a higher-priority message inserted before that position.</span></span> <span data-ttu-id="7aa34-1253">但是，你可以重置枚举，从而移动光标返回到的列表中，通过调用<xref:System.Messaging.MessageEnumerator.Reset%2A>为<xref:System.Messaging.MessageEnumerator>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1253">However, you can reset the enumeration, thereby moving the cursor back to the beginning of the list, by calling <xref:System.Messaging.MessageEnumerator.Reset%2A> for the <xref:System.Messaging.MessageEnumerator>.</span></span>  
  
 <span data-ttu-id="7aa34-1254">枚举中消息的顺序反映在队列中，其顺序，因此优先级高的消息将出现在优先级较低之前。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1254">The order of the messages in the enumeration reflects their order in the queue, so higher-priority messages will appear before lower-priority ones.</span></span>  
  
 <span data-ttu-id="7aa34-1255">如果您需要在队列，而不是动态连接到它们的消息的静态快照，调用<xref:System.Messaging.MessageQueue.GetAllMessages%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1255">If you want a static snapshot of the messages in the queue rather than a dynamic connection to them, call <xref:System.Messaging.MessageQueue.GetAllMessages%2A>.</span></span> <span data-ttu-id="7aa34-1256">此方法返回的数组<xref:System.Messaging.Message>对象，表示该方法调用时的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1256">This method returns an array of <xref:System.Messaging.Message> objects, which represent the messages at the time the method was called.</span></span>  
  
 <span data-ttu-id="7aa34-1257">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1257">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1258">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1258">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1259">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1259">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1260">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1260">Local computer</span></span>|<span data-ttu-id="7aa34-1261">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1261">Yes</span></span>|  
|<span data-ttu-id="7aa34-1262">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1262">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1263">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1263">Yes</span></span>|  
|<span data-ttu-id="7aa34-1264">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1264">Remote computer</span></span>|<span data-ttu-id="7aa34-1265">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1265">Yes</span></span>|  
|<span data-ttu-id="7aa34-1266">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1266">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1267">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1267">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-1268">下面的代码示例获取队列中消息的动态列表和使用的所有消息进行都计数<xref:System.Messaging.Message.Priority%2A>属性设置为<xref:System.Messaging.MessagePriority.Lowest?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1268">The following code example gets a dynamic list of messages in a queue and counts all messages with the <xref:System.Messaging.Message.Priority%2A> property set to <xref:System.Messaging.MessagePriority.Lowest?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[MessageQueue.GetMessageEnumerator#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetMessageEnumerator/CPP/mqgetmessageenumerator.cpp#1)]
 [!code-csharp[MessageQueue.GetMessageEnumerator#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetMessageEnumerator/CS/mqgetmessageenumerator.cs#1)]
 [!code-vb[MessageQueue.GetMessageEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetMessageEnumerator/VB/mqgetmessageenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.GetAllMessages" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetMessageEnumerator2">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageEnumerator GetMessageEnumerator2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.MessageEnumerator GetMessageEnumerator2() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetMessageEnumerator2" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMessageEnumerator2 () As MessageEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::MessageEnumerator ^ GetMessageEnumerator2();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-1269">为队列中的所有消息创建枚举数对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1269">Creates an enumerator object for all the messages in the queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-1270">该 <see cref="T:System.Messaging.MessageEnumerator" /> 包括队列中所包含的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1270">The <see cref="T:System.Messaging.MessageEnumerator" /> holding the messages that are contained in the queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1271"><xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A> 在队列中创建的所有消息的动态列表。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1271"><xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A> creates a dynamic list of all the messages in a queue.</span></span> <span data-ttu-id="7aa34-1272">你可以从队列中删除位于枚举器的当前位置的消息通过调用<xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A>为<xref:System.Messaging.MessageEnumerator>，<xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A>返回。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1272">You can remove from the queue the message at the enumerator's current position by calling <xref:System.Messaging.MessageEnumerator.RemoveCurrent%2A> for the <xref:System.Messaging.MessageEnumerator> that <xref:System.Messaging.MessageQueue.GetMessageEnumerator2%2A> returns.</span></span>  
  
 <span data-ttu-id="7aa34-1273">因为光标位于与队列中消息的动态列表相关联，则枚举将反映对消息在队列中，进行任何修改，如果消息已超出了当前光标位置。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1273">Because the cursor is associated with the dynamic list of messages in the queue, the enumeration reflects any modification you make to the messages in the queue, if the message is beyond the current cursor position.</span></span> <span data-ttu-id="7aa34-1274">例如，枚举数可以自动访问放置光标的当前位置，之外优先级较低的消息，但不是在该位置之前插入优先级较高的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1274">For example, the enumerator can automatically access a lower-priority message placed beyond the cursor's current position, but not a higher-priority message inserted before that position.</span></span> <span data-ttu-id="7aa34-1275">但是，你可以重置枚举，从而移动光标返回到的列表中，通过调用<xref:System.Messaging.MessageEnumerator.Reset%2A>为<xref:System.Messaging.MessageEnumerator>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1275">However, you can reset the enumeration, thereby moving the cursor back to the beginning of the list, by calling <xref:System.Messaging.MessageEnumerator.Reset%2A> for the <xref:System.Messaging.MessageEnumerator>.</span></span>  
  
 <span data-ttu-id="7aa34-1276">枚举中消息的顺序反映在队列中，其顺序，因此优先级高的消息将出现在优先级较低之前。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1276">The order of the messages in the enumeration reflects their order in the queue, so higher-priority messages will appear before lower-priority ones.</span></span>  
  
 <span data-ttu-id="7aa34-1277">如果您需要在队列，而不是动态连接到它们的消息的静态快照，调用<xref:System.Messaging.MessageQueue.GetAllMessages%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1277">If you want a static snapshot of the messages in the queue rather than a dynamic connection to them, call <xref:System.Messaging.MessageQueue.GetAllMessages%2A>.</span></span> <span data-ttu-id="7aa34-1278">此方法返回的数组<xref:System.Messaging.Message>对象，表示该方法调用时的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1278">This method returns an array of <xref:System.Messaging.Message> objects, which represent the messages at the time the method was called.</span></span>  
  
 <span data-ttu-id="7aa34-1279">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1279">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1280">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1280">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1281">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1281">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1282">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1282">Local computer</span></span>|<span data-ttu-id="7aa34-1283">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1283">Yes</span></span>|  
|<span data-ttu-id="7aa34-1284">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1284">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1285">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1285">Yes</span></span>|  
|<span data-ttu-id="7aa34-1286">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1286">Remote computer</span></span>|<span data-ttu-id="7aa34-1287">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1287">Yes</span></span>|  
|<span data-ttu-id="7aa34-1288">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1288">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1289">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1289">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.GetAllMessages" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMessageQueueEnumerator">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-1290">为网络上公共队列的动态列表创建枚举数对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1290">Creates an enumerator object for a dynamic listing of the public queues on the network.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMessageQueueEnumerator">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueueEnumerator GetMessageQueueEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueueEnumerator GetMessageQueueEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMessageQueueEnumerator () As MessageQueueEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Messaging::MessageQueueEnumerator ^ GetMessageQueueEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-1291">提供只进游标语义，以枚举网络上的所有公共队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1291">Provides forward-only cursor semantics to enumerate through all public queues on the network.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-1292">
            <see cref="T:System.Messaging.MessageQueueEnumerator" />，提供网络上所有公共消息队列的动态列表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1292">A <see cref="T:System.Messaging.MessageQueueEnumerator" /> that provides a dynamic listing of all the public message queues on the network.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1293">此重载<xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>返回位于网络上的所有公用队列的枚举。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1293">This overload of <xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A> returns an enumeration of all the public queues that are on the network.</span></span>  
  
 <span data-ttu-id="7aa34-1294">因为光标位于与动态列表相关联，则枚举反映对删除或添加光标的当前位置之后的队列的队列列表进行任何修改。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1294">Because the cursor is associated with a dynamic listing, the enumeration reflects any modification you make to a queue list for queues deleted or added beyond the cursor's current position.</span></span> <span data-ttu-id="7aa34-1295">添加或删除队列位于光标的当前位置之前不会反映。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1295">Additions or deletion of queues located before the cursor's current position are not reflected.</span></span> <span data-ttu-id="7aa34-1296">例如，枚举数可以自动访问追加之外光标位置的队列，但不是一插入该位置之前。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1296">For example, the enumerator can automatically access a queue appended beyond the cursor position but not one inserted before that position.</span></span> <span data-ttu-id="7aa34-1297">但是，你可以重置枚举，从而移动光标返回到的列表中，通过调用<xref:System.Messaging.MessageQueueEnumerator.Reset%2A>为<xref:System.Messaging.MessageQueueEnumerator>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1297">However, you can reset the enumeration, thereby moving the cursor back to the beginning of the list, by calling <xref:System.Messaging.MessageQueueEnumerator.Reset%2A> for the <xref:System.Messaging.MessageQueueEnumerator>.</span></span>  
  
 <span data-ttu-id="7aa34-1298">没有任何已定义的排序的网络中的队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1298">There is no defined ordering of queues in a network.</span></span> <span data-ttu-id="7aa34-1299">一个枚举器不会不通过进行排序，例如，计算机、 标签、 公共或私有状态或任何其他可访问的条件。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1299">An enumerator does not order them, for example, by computer, label, public or private status, or any other accessible criteria.</span></span>  
  
 <span data-ttu-id="7aa34-1300">如果您需要静态快照的网络，而不是与它们的动态连接上的队列，调用<xref:System.Messaging.MessageQueue.GetPublicQueues%2A>或<xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1300">If you want a static snapshot of the queues on the network rather than a dynamic connection to them, call <xref:System.Messaging.MessageQueue.GetPublicQueues%2A> or <xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29>.</span></span> <span data-ttu-id="7aa34-1301">这两种方法的每个返回的数组<xref:System.Messaging.MessageQueue>对象，表示该方法调用时的队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1301">Each of these two methods returns an array of <xref:System.Messaging.MessageQueue> objects, which represent the queues at the time the method was called.</span></span>  
  
 <span data-ttu-id="7aa34-1302">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1302">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1303">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1303">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1304">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1304">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1305">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1305">Local computer</span></span>|<span data-ttu-id="7aa34-1306">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1306">No</span></span>|  
|<span data-ttu-id="7aa34-1307">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1307">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1308">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1308">No</span></span>|  
|<span data-ttu-id="7aa34-1309">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1309">Remote computer</span></span>|<span data-ttu-id="7aa34-1310">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1310">No</span></span>|  
|<span data-ttu-id="7aa34-1311">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1311">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1312">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1312">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-1313">下面的代码示例循环访问网络中的所有消息队列，并检查每个队列的路径。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1313">The following code example iterates through all the message queues in the network, and examines the path for each queue.</span></span> <span data-ttu-id="7aa34-1314">最后，它显示网络上的公用队列的数量。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1314">Finally, it displays the number of public queues on the network.</span></span>  
  
 [!code-cpp[MessageQueue.GetMessageQueueEnumerator_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_noparms/CPP/mqgetmessagequeueenumerator.cpp#1)]
 [!code-csharp[MessageQueue.GetMessageQueueEnumerator_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_noparms/CS/mqgetmessagequeueenumerator.cs#1)]
 [!code-vb[MessageQueue.GetMessageQueueEnumerator_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_noparms/VB/mqgetmessagequeueenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" />
      </Docs>
    </Member>
    <Member MemberName="GetMessageQueueEnumerator">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueueEnumerator GetMessageQueueEnumerator (System.Messaging.MessageQueueCriteria criteria);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueueEnumerator GetMessageQueueEnumerator(class System.Messaging.MessageQueueCriteria criteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMessageQueueEnumerator (criteria As MessageQueueCriteria) As MessageQueueEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Messaging::MessageQueueEnumerator ^ GetMessageQueueEnumerator(System::Messaging::MessageQueueCriteria ^ criteria);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="criteria" Type="System.Messaging.MessageQueueCriteria" />
      </Parameters>
      <Docs>
        <param name="criteria">
          <span data-ttu-id="7aa34-1315">
            <see cref="T:System.Messaging.MessageQueueCriteria" />，包含用于筛选可用消息队列的判据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1315">A <see cref="T:System.Messaging.MessageQueueCriteria" /> that contains the criteria used to filter the available message queues.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-1316">提供只进游标语义，以枚举网络上满足指定判据的所有公共队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1316">Provides forward-only cursor semantics to enumerate through all public queues on the network that meet the specified criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-1317">
            <see cref="T:System.Messaging.MessageQueueEnumerator" />，提供网络上公共消息队列的动态列表，这些消息队列满足 <paramref name="criteria" /> 参数指定的限制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1317">A <see cref="T:System.Messaging.MessageQueueEnumerator" /> that provides a dynamic listing of the public message queues on the network that satisfy the restrictions specified by the <paramref name="criteria" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1318">此重载<xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>返回满足条件的应用程序条件中定义的网络上的所有公用队列的列表。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1318">This overload of <xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A> returns a listing of all the public queues on the network that satisfy criteria defined in the application criteria.</span></span> <span data-ttu-id="7aa34-1319">你可以指定条件后，若要包括，例如，队列创建或修改时间、 计算机名、 标签、 类别或这些项的组合。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1319">You can specify the criteria to include, for example, queue creation or modification time, computer name, label, category, or any combination of these.</span></span>  
  
 <span data-ttu-id="7aa34-1320">因为光标位于与动态列表相关联，则枚举反映对队列发生游标的当前位置之后进行任何修改。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1320">Because the cursor is associated with a dynamic listing, the enumeration reflects any modification you make to a queue that occurs beyond the cursor's current position.</span></span> <span data-ttu-id="7aa34-1321">不反映对队列位于光标的当前位置之前的更改。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1321">Changes to queues located before the cursor's current position are not reflected.</span></span> <span data-ttu-id="7aa34-1322">例如，枚举数可以自动访问追加之外光标位置的队列，但不是一插入该位置之前。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1322">For example, the enumerator can automatically access a queue appended beyond the cursor position but not one inserted before that position.</span></span> <span data-ttu-id="7aa34-1323">但是，你可以重置枚举，从而移动光标返回到的列表中，通过调用<xref:System.Messaging.MessageQueueEnumerator.Reset%2A>为<xref:System.Messaging.MessageQueueEnumerator>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1323">However, you can reset the enumeration, thereby moving the cursor back to the beginning of the list, by calling <xref:System.Messaging.MessageQueueEnumerator.Reset%2A> for the <xref:System.Messaging.MessageQueueEnumerator>.</span></span>  
  
 <span data-ttu-id="7aa34-1324">没有任何已定义的排序的网络中的队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1324">There is no defined ordering of queues in a network.</span></span> <span data-ttu-id="7aa34-1325">一个枚举器不会不通过进行排序，例如，计算机、 标签、 公共或私有状态或任何其他可访问的条件。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1325">An enumerator does not order them, for example, by computer, label, public or private status, or any other accessible criteria.</span></span>  
  
 <span data-ttu-id="7aa34-1326">如果你希望网络而不是与它们的动态连接上的队列的静态快照，指定用于条件<xref:System.Messaging.MessageQueue.GetPublicQueues%2A>或调用<xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1326">If you want a static snapshot of the queues on the network rather than a dynamic connection to them, specify criteria for <xref:System.Messaging.MessageQueue.GetPublicQueues%2A> or call <xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29>.</span></span> <span data-ttu-id="7aa34-1327">这两种方法的每个返回的数组<xref:System.Messaging.MessageQueue>对象，表示该方法调用时的队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1327">Each of these two methods returns an array of <xref:System.Messaging.MessageQueue> objects, which represent the queues at the time the method was called.</span></span> <span data-ttu-id="7aa34-1328">调用<xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29>， <xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29>，或<xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29>提供相同的结果与调用<xref:System.Messaging.MessageQueue.GetPublicQueues%2A>使用的筛选条件<xref:System.Messaging.MessageQueue.Category%2A>， <xref:System.Messaging.MessageQueue.Label%2A>，和<xref:System.Messaging.MessageQueue.MachineName%2A>分别。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1328">Calling <xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29>, <xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29>, or <xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29> provides the same results as calling <xref:System.Messaging.MessageQueue.GetPublicQueues%2A> with the filtering criteria of <xref:System.Messaging.MessageQueue.Category%2A>, <xref:System.Messaging.MessageQueue.Label%2A>, and <xref:System.Messaging.MessageQueue.MachineName%2A>, respectively.</span></span>  
  
 <span data-ttu-id="7aa34-1329">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1329">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1330">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1330">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1331">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1331">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1332">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1332">Local computer</span></span>|<span data-ttu-id="7aa34-1333">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1333">No</span></span>|  
|<span data-ttu-id="7aa34-1334">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1334">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1335">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1335">No</span></span>|  
|<span data-ttu-id="7aa34-1336">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1336">Remote computer</span></span>|<span data-ttu-id="7aa34-1337">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1337">No</span></span>|  
|<span data-ttu-id="7aa34-1338">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1338">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1339">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1339">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-1340">下面的代码示例循环访问消息队列，并显示"MyComputer"的计算机上的每个队列中的最后一天的已创建并存在的路径。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1340">The following code example iterates through message queues and displays the path of each queue that was created in the last day and that exists on the computer "MyComputer".</span></span>  
  
 [!code-cpp[MessageQueue.GetMessageQueueEnumerator_criteria#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_criteria/CPP/mqgetmessagequeueenumerator_criteria.cpp#1)]
 [!code-csharp[MessageQueue.GetMessageQueueEnumerator_criteria#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_criteria/CS/mqgetmessagequeueenumerator_criteria.cs#1)]
 [!code-vb[MessageQueue.GetMessageQueueEnumerator_criteria#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetMessageQueueEnumerator_criteria/VB/mqgetmessagequeueenumerator_criteria.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageEnumerator2" />
      </Docs>
    </Member>
    <Member MemberName="GetPrivateQueuesByMachine">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueue[] GetPrivateQueuesByMachine (string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueue[] GetPrivateQueuesByMachine(string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetPrivateQueuesByMachine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPrivateQueuesByMachine (machineName As String) As MessageQueue()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Messaging::MessageQueue ^&gt; ^ GetPrivateQueuesByMachine(System::String ^ machineName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="machineName">
          <span data-ttu-id="7aa34-1341">计算机，从其中检索专用队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1341">The computer from which to retrieve the private queues.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-1342">检索指定计算机上的所有专用队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1342">Retrieves all the private queues on the specified computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-1343">引用检索的专用队列的 <see cref="T:System.Messaging.MessageQueue" /> 对象数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1343">An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the retrieved private queues.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1344"><xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29> 检索指定计算机上的队列的静态快照。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1344"><xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29> retrieves a static snapshot of the queues on a specified computer.</span></span>  
  
 <span data-ttu-id="7aa34-1345">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1345">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1346">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1346">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1347">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1347">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1348">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1348">Local computer</span></span>|<span data-ttu-id="7aa34-1349">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1349">Yes</span></span>|  
|<span data-ttu-id="7aa34-1350">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1350">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1351">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1351">Yes</span></span>|  
|<span data-ttu-id="7aa34-1352">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1352">Remote computer</span></span>|<span data-ttu-id="7aa34-1353">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1353">Yes</span></span>|  
|<span data-ttu-id="7aa34-1354">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1354">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1355">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1355">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-1356">下面的代码示例检索队列的列表。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1356">The following code example retrieves lists of queues.</span></span>  
  
 [!code-cpp[MessageQueue.GetQueueLists#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CPP/mqgetqueuelists.cpp#1)]
 [!code-csharp[MessageQueue.GetQueueLists#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CS/mqgetqueuelists.cs#1)]
 [!code-vb[MessageQueue.GetQueueLists#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetQueueLists/VB/mqgetqueuelists.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-1357">
            <paramref name="machineName" /> 参数为 <see langword="null" /> 或是空字符串（“”）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1357">The <paramref name="machineName" /> parameter is <see langword="null" /> or an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-1358">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1358">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.MachineName" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPublicQueues">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-1359">检索网络上的所有公共队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1359">Retrieves all the public queues on the network.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPublicQueues">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueue[] GetPublicQueues ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueue[] GetPublicQueues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetPublicQueues" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPublicQueues () As MessageQueue()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Messaging::MessageQueue ^&gt; ^ GetPublicQueues();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-1360">检索网络上的所有公共队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1360">Retrieves all the public queues on the network.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-1361">引用检索的公共队列的 <see cref="T:System.Messaging.MessageQueue" /> 对象数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1361">An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the retrieved public queues.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1362">如果你想在网络上的所有公用队列的完整列表，请使用此重载。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1362">Use this overload if you want a complete list of all the public queues on the network.</span></span> <span data-ttu-id="7aa34-1363">如果你想要按某些条件，如限制列表<xref:System.Messaging.MessageQueue.MachineName%2A>， <xref:System.Messaging.MessageQueue.Category%2A>，或上次修改的时间使用此方法的另一个重载。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1363">If you want to restrict the list by certain criteria, such as <xref:System.Messaging.MessageQueue.MachineName%2A>, <xref:System.Messaging.MessageQueue.Category%2A>, or last modified time use another overload of this method.</span></span> <span data-ttu-id="7aa34-1364">(或者，可以使用<xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29>， <xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29>，或<xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29>。)</span><span class="sxs-lookup"><span data-stu-id="7aa34-1364">(Alternatively, you can use <xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29>, <xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29>, or <xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29>.)</span></span>  
  
 <span data-ttu-id="7aa34-1365"><xref:System.Messaging.MessageQueue.GetPublicQueues%2A> 检索队列的静态快照。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1365"><xref:System.Messaging.MessageQueue.GetPublicQueues%2A> retrieves a static snapshot of the queues.</span></span> <span data-ttu-id="7aa34-1366">若要与队列的动态列表进行交互，使用<xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1366">To interact with a dynamic list of the queues, use <xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>.</span></span>  
  
 <span data-ttu-id="7aa34-1367">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1367">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1368">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1368">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1369">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1369">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1370">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1370">Local computer</span></span>|<span data-ttu-id="7aa34-1371">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1371">No</span></span>|  
|<span data-ttu-id="7aa34-1372">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1372">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1373">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1373">No</span></span>|  
|<span data-ttu-id="7aa34-1374">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1374">Remote computer</span></span>|<span data-ttu-id="7aa34-1375">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1375">No</span></span>|  
|<span data-ttu-id="7aa34-1376">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1376">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1377">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1377">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-1378">下面的代码示例检索队列的列表。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1378">The following code example retrieves lists of queues.</span></span>  
  
 [!code-cpp[MessageQueue.GetQueueLists#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CPP/mqgetqueuelists.cpp#1)]
 [!code-csharp[MessageQueue.GetQueueLists#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CS/mqgetqueuelists.cs#1)]
 [!code-vb[MessageQueue.GetQueueLists#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetQueueLists/VB/mqgetqueuelists.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-1379">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1379">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetPublicQueues">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueue[] GetPublicQueues (System.Messaging.MessageQueueCriteria criteria);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueue[] GetPublicQueues(class System.Messaging.MessageQueueCriteria criteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPublicQueues (criteria As MessageQueueCriteria) As MessageQueue()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Messaging::MessageQueue ^&gt; ^ GetPublicQueues(System::Messaging::MessageQueueCriteria ^ criteria);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="criteria" Type="System.Messaging.MessageQueueCriteria" />
      </Parameters>
      <Docs>
        <param name="criteria">
          <span data-ttu-id="7aa34-1380">
            <see cref="T:System.Messaging.MessageQueueCriteria" />，包含用于筛选队列的判据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1380">A <see cref="T:System.Messaging.MessageQueueCriteria" /> that contains the criteria used to filter the queues.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-1381">检索网络上满足指定判据的所有公共队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1381">Retrieves all the public queues on the network that meet the specified criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-1382">引用检索的公共队列的 <see cref="T:System.Messaging.MessageQueue" /> 对象数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1382">An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the retrieved public queues.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1383">如果你想要按标签、 类别或计算机名称，筛选在网络上的所有公用队列<xref:System.Messaging.MessageQueue>类包含提供该功能的特定方法 (<xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29>， <xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29>，和<xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29>分别)。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1383">If you want to filter all the public queues on the network by label, category, or computer name, the <xref:System.Messaging.MessageQueue> class contains specific methods that provide that functionality (<xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29>, <xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29>, and <xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29>, respectively).</span></span> <span data-ttu-id="7aa34-1384">使用此重载以获取网络上 （例如，如果你想要指定一个标签和类别） 满足多个这些条件之一的所有公用队列的列表。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1384">Use this overload to get a list of all the public queues on the network that meet more than one of these criteria (for example, if you want to specify both a label and a category).</span></span> <span data-ttu-id="7aa34-1385">你还可以筛选按消息条件以外<xref:System.Messaging.MessageQueue.Label%2A>， <xref:System.Messaging.MessageQueue.Category%2A>，和<xref:System.Messaging.MessageQueue.MachineName%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1385">You can also filter by message criteria other than <xref:System.Messaging.MessageQueue.Label%2A>, <xref:System.Messaging.MessageQueue.Category%2A>, and <xref:System.Messaging.MessageQueue.MachineName%2A>.</span></span> <span data-ttu-id="7aa34-1386">例如，你可以使用此重载按队列的上次修改时间进行筛选。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1386">For example, you use this overload to filter by a queue's last-modified time.</span></span> <span data-ttu-id="7aa34-1387">只需创建的新实例<xref:System.Messaging.MessageQueueCriteria>类，请在实例中，设置适当的属性并将实例作为传递`criteria`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1387">Simply create a new instance of the <xref:System.Messaging.MessageQueueCriteria> class, set the appropriate properties in the instance, and pass the instance as the `criteria` parameter.</span></span>  
  
 <span data-ttu-id="7aa34-1388"><xref:System.Messaging.MessageQueue.GetPublicQueues%2A> 检索队列的静态快照。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1388"><xref:System.Messaging.MessageQueue.GetPublicQueues%2A> retrieves a static snapshot of the queues.</span></span> <span data-ttu-id="7aa34-1389">若要与队列的动态列表进行交互，使用<xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1389">To interact with a dynamic list of the queues, use <xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>.</span></span>  
  
 <span data-ttu-id="7aa34-1390">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1390">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1391">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1391">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1392">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1392">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1393">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1393">Local computer</span></span>|<span data-ttu-id="7aa34-1394">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1394">No</span></span>|  
|<span data-ttu-id="7aa34-1395">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1395">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1396">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1396">No</span></span>|  
|<span data-ttu-id="7aa34-1397">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1397">Remote computer</span></span>|<span data-ttu-id="7aa34-1398">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1398">No</span></span>|  
|<span data-ttu-id="7aa34-1399">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1399">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1400">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1400">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-1401">下面的代码示例检索队列的列表。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1401">The following code example retrieves lists of queues.</span></span>  
  
 [!code-cpp[MessageQueue.GetQueueLists#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CPP/mqgetqueuelists.cpp#1)]
 [!code-csharp[MessageQueue.GetQueueLists#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CS/mqgetqueuelists.cs#1)]
 [!code-vb[MessageQueue.GetQueueLists#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetQueueLists/VB/mqgetqueuelists.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-1402">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1402">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.MessageQueueCriteria" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetPublicQueuesByCategory">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueue[] GetPublicQueuesByCategory (Guid category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueue[] GetPublicQueuesByCategory(valuetype System.Guid category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPublicQueuesByCategory (category As Guid) As MessageQueue()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Messaging::MessageQueue ^&gt; ^ GetPublicQueuesByCategory(Guid category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="category">
          <span data-ttu-id="7aa34-1403">一个 <see cref="T:System.Guid" />，它将要检索的队列集分组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1403">A <see cref="T:System.Guid" /> that groups the set of queues to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-1404">检索网络上所有属于指定类别的公共队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1404">Retrieves all the public queues on the network that belong to the specified category.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-1405">引用检索的公共队列的 <see cref="T:System.Messaging.MessageQueue" /> 对象数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1405">An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the retrieved public queues.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1406">使用此方法以按类别筛选公用队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1406">Use this method to filter the public queues by category.</span></span> <span data-ttu-id="7aa34-1407"><xref:System.Messaging.MessageQueue.Category%2A>属性提供访问权限的消息队列类型 ID 属性 （这是读/写） 的特定队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1407">The <xref:System.Messaging.MessageQueue.Category%2A> property provides access to the Message Queuing type ID property (which is read/write) of a particular queue.</span></span> <span data-ttu-id="7aa34-1408">尽管可以使用<xref:System.Guid.NewGuid%2A>来创建跨所有都是唯一的类别值<xref:System.Guid>值，则没有必要。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1408">Although you can use <xref:System.Guid.NewGuid%2A> to create a category value that is unique across all <xref:System.Guid> values, it is not necessary.</span></span> <span data-ttu-id="7aa34-1409">类别值必须是不同于其他类别，不是从所有其他仅<xref:System.Guid>值。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1409">The category value needs to be distinct only from other categories, not from all other <xref:System.Guid> values.</span></span> <span data-ttu-id="7aa34-1410">例如，你可作为分配 {00000000-0000-0000-0000-000000000001}<xref:System.Messaging.MessageQueue.Category%2A>为一组队列而 {将 00000000-0000-0000-0000-000000000002} 作为<xref:System.Messaging.MessageQueue.Category%2A>为另一组。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1410">For example, you can assign {00000000-0000-0000-0000-000000000001} as the <xref:System.Messaging.MessageQueue.Category%2A> for one set of queues and {00000000-0000-0000-0000-000000000002} as the <xref:System.Messaging.MessageQueue.Category%2A> for another set.</span></span>  
  
 <span data-ttu-id="7aa34-1411"><xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29> 检索队列的静态快照。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1411"><xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29> retrieves a static snapshot of the queues.</span></span> <span data-ttu-id="7aa34-1412">若要与队列的动态列表进行交互，使用<xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1412">To interact with a dynamic list of the queues, use <xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>.</span></span> <span data-ttu-id="7aa34-1413">你可以作为的一部分指定类别<xref:System.Messaging.MessageQueueCriteria>传递到方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1413">You can specify the category as part of the <xref:System.Messaging.MessageQueueCriteria> you pass into the method.</span></span>  
  
 <span data-ttu-id="7aa34-1414">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1414">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1415">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1415">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1416">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1416">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1417">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1417">Local computer</span></span>|<span data-ttu-id="7aa34-1418">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1418">No</span></span>|  
|<span data-ttu-id="7aa34-1419">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1419">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1420">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1420">No</span></span>|  
|<span data-ttu-id="7aa34-1421">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1421">Remote computer</span></span>|<span data-ttu-id="7aa34-1422">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1422">No</span></span>|  
|<span data-ttu-id="7aa34-1423">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1423">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1424">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1424">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-1425">下面的代码示例检索队列的列表。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1425">The following code example retrieves lists of queues.</span></span>  
  
 [!code-cpp[MessageQueue.GetQueueLists#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CPP/mqgetqueuelists.cpp#1)]
 [!code-csharp[MessageQueue.GetQueueLists#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CS/mqgetqueuelists.cs#1)]
 [!code-vb[MessageQueue.GetQueueLists#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetQueueLists/VB/mqgetqueuelists.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-1426">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1426">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.Category" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetPublicQueuesByLabel">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueue[] GetPublicQueuesByLabel (string label);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueue[] GetPublicQueuesByLabel(string label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPublicQueuesByLabel (label As String) As MessageQueue()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Messaging::MessageQueue ^&gt; ^ GetPublicQueuesByLabel(System::String ^ label);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="label">
          <span data-ttu-id="7aa34-1427">一个标签，它将要检索的队列集分组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1427">A label that groups the set of queues to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-1428">检索网络上带有指定标签的所有公共队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1428">Retrieves all the public queues on the network that carry the specified label.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-1429">引用检索的公共队列的 <see cref="T:System.Messaging.MessageQueue" /> 对象数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1429">An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the retrieved public queues.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1430">使用此方法以按标签筛选公用队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1430">Use this method to filter the public queues by label.</span></span>  
  
 <span data-ttu-id="7aa34-1431"><xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29> 检索队列的静态快照。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1431"><xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29> retrieves a static snapshot of the queues.</span></span> <span data-ttu-id="7aa34-1432">若要与队列的动态列表进行交互，使用<xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1432">To interact with a dynamic list of the queues, use <xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>.</span></span> <span data-ttu-id="7aa34-1433">你可以作为的一部分指定的标签<xref:System.Messaging.MessageQueueCriteria>传递到方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1433">You can specify the label as part of the <xref:System.Messaging.MessageQueueCriteria> you pass into the method.</span></span>  
  
 <span data-ttu-id="7aa34-1434">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1434">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1435">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1435">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1436">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1436">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1437">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1437">Local computer</span></span>|<span data-ttu-id="7aa34-1438">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1438">No</span></span>|  
|<span data-ttu-id="7aa34-1439">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1439">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1440">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1440">No</span></span>|  
|<span data-ttu-id="7aa34-1441">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1441">Remote computer</span></span>|<span data-ttu-id="7aa34-1442">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1442">No</span></span>|  
|<span data-ttu-id="7aa34-1443">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1443">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1444">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1444">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-1445">下面的代码示例检索队列的列表。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1445">The following code example retrieves lists of queues.</span></span>  
  
 [!code-cpp[MessageQueue.GetQueueLists#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CPP/mqgetqueuelists.cpp#1)]
 [!code-csharp[MessageQueue.GetQueueLists#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CS/mqgetqueuelists.cs#1)]
 [!code-vb[MessageQueue.GetQueueLists#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetQueueLists/VB/mqgetqueuelists.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-1446">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1446">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7aa34-1447">
            <paramref name="label" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1447">The <paramref name="label" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetPublicQueuesByMachine">
      <MemberSignature Language="C#" Value="public static System.Messaging.MessageQueue[] GetPublicQueuesByMachine (string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.MessageQueue[] GetPublicQueuesByMachine(string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPublicQueuesByMachine (machineName As String) As MessageQueue()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Messaging::MessageQueue ^&gt; ^ GetPublicQueuesByMachine(System::String ^ machineName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueue[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="machineName">
          <span data-ttu-id="7aa34-1448">计算机的名称，该计算机包含要检索的公共队列集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1448">The name of the computer that contains the set of public queues to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-1449">检索驻留在指定计算机上的所有公共队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1449">Retrieves all the public queues that reside on the specified computer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-1450">
            <see cref="T:System.Messaging.MessageQueue" /> 对象数组，这些对象引用该计算机上的公共队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1450">An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference the public queues on the computer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1451">使用此方法以按计算机筛选公用队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1451">Use this method to filter the public queues by computer.</span></span>  
  
 <span data-ttu-id="7aa34-1452"><xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29> 检索队列的静态快照。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1452"><xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29> retrieves a static snapshot of the queues.</span></span> <span data-ttu-id="7aa34-1453">若要与队列的动态列表进行交互，使用<xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1453">To interact with a dynamic list of the queues, use <xref:System.Messaging.MessageQueue.GetMessageQueueEnumerator%2A>.</span></span> <span data-ttu-id="7aa34-1454">你可以指定计算机名称作为的一部分<xref:System.Messaging.MessageQueueCriteria>传递到方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1454">You can specify the computer name as part of the <xref:System.Messaging.MessageQueueCriteria> you pass into the method.</span></span>  
  
 <span data-ttu-id="7aa34-1455">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1455">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1456">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1456">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1457">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1457">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1458">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1458">Local computer</span></span>|<span data-ttu-id="7aa34-1459">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1459">No</span></span>|  
|<span data-ttu-id="7aa34-1460">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1460">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1461">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1461">No</span></span>|  
|<span data-ttu-id="7aa34-1462">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1462">Remote computer</span></span>|<span data-ttu-id="7aa34-1463">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1463">No</span></span>|  
|<span data-ttu-id="7aa34-1464">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1464">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1465">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1465">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-1466">下面的代码示例检索队列的列表。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1466">The following code example retrieves lists of queues.</span></span>  
  
 [!code-cpp[MessageQueue.GetQueueLists#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CPP/mqgetqueuelists.cpp#1)]
 [!code-csharp[MessageQueue.GetQueueLists#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.GetQueueLists/CS/mqgetqueuelists.cs#1)]
 [!code-vb[MessageQueue.GetQueueLists#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.GetQueueLists/VB/mqgetqueuelists.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-1467">
            <paramref name="machineName" /> 参数的语法不正确。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1467">The <paramref name="machineName" /> parameter has incorrect syntax.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-1468">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1468">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.MachineName" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetSecurityContext">
      <MemberSignature Language="C#" Value="public static System.Messaging.SecurityContext GetSecurityContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Messaging.SecurityContext GetSecurityContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.GetSecurityContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSecurityContext () As SecurityContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Messaging::SecurityContext ^ GetSecurityContext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.SecurityContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-1469">检索进行此调用时 MSMQ 将当前用户（线程标识）关联到的安全上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1469">Retrieves the security context that MSMQ associates with the current user (thread identity) at the time of this call.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-1470">包含安全上下文的 <see cref="T:System.Messaging.SecurityContext" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1470">A <see cref="T:System.Messaging.SecurityContext" /> object that contains the security context.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Messaging.Message.SecurityContext" />
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public Guid Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Id" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Id { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_GuidId")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-1471">获取队列的唯一“消息队列”标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1471">Gets the unique Message Queuing identifier of the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7aa34-1472">
            <see cref="P:System.Messaging.MessageQueue.Id" />，表示由“消息队列”应用程序生成的消息标识符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1472">A <see cref="P:System.Messaging.MessageQueue.Id" /> that represents the message identifier generated by the Message Queuing application.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1473">消息队列集<xref:System.Messaging.MessageQueue.Id%2A>属性在创建队列时。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1473">Message Queuing sets the <xref:System.Messaging.MessageQueue.Id%2A> property when it creates the queue.</span></span> <span data-ttu-id="7aa34-1474">此属性才可用于公用队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1474">This property is only available for public queues.</span></span>  
  
 <span data-ttu-id="7aa34-1475">下表显示此属性是在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1475">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1476">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1476">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1477">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1477">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1478">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1478">Local computer</span></span>|<span data-ttu-id="7aa34-1479">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1479">Yes</span></span>|  
|<span data-ttu-id="7aa34-1480">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1480">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1481">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1481">Yes</span></span>|  
|<span data-ttu-id="7aa34-1482">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1482">Remote computer</span></span>|<span data-ttu-id="7aa34-1483">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1483">No</span></span>|  
|<span data-ttu-id="7aa34-1484">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1484">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1485">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1485">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-1486">下面的代码示例显示的消息队列的值<xref:System.Messaging.MessageQueue.Id%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1486">The following code example displays the value of a message queue's <xref:System.Messaging.MessageQueue.Id%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#15](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-1487">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1487">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.Category" />
      </Docs>
    </Member>
    <Member MemberName="InfiniteQueueSize">
      <MemberSignature Language="C#" Value="public static readonly long InfiniteQueueSize;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int64 InfiniteQueueSize" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueue.InfiniteQueueSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InfiniteQueueSize As Long " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly long InfiniteQueueSize;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-1488">指定对某队列不存在大小限制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1488">Specifies that no size restriction exists for a queue.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1489">此成员常用设置时<xref:System.Messaging.MessageQueue.MaximumJournalSize%2A>或<xref:System.Messaging.MessageQueue.MaximumQueueSize%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1489">This member is frequently used when setting <xref:System.Messaging.MessageQueue.MaximumJournalSize%2A> or <xref:System.Messaging.MessageQueue.MaximumQueueSize%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-1490">下面的代码示例演示如何将<xref:System.Messaging.MessageQueue.InfiniteQueueSize>成员。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1490">The following code example demonstrates the use of the <xref:System.Messaging.MessageQueue.InfiniteQueueSize> member.</span></span>  
  
 [!code-csharp[MessageQueue#16](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.MessageQueue.MaximumJournalSize" />
        <altmember cref="P:System.Messaging.MessageQueue.MaximumQueueSize" />
      </Docs>
    </Member>
    <Member MemberName="InfiniteTimeout">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan InfiniteTimeout;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan InfiniteTimeout" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueue.InfiniteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InfiniteTimeout As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan InfiniteTimeout;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-1491">指定对查看或接收消息的方法不存在超时设定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1491">Specifies that no time-out exists for methods that peek or receive messages.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1492"><xref:System.Messaging.MessageQueue> 支持两种类型的消息检索： 同步和异步。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1492"><xref:System.Messaging.MessageQueue> supports two types of message retrieval: synchronous and asynchronous.</span></span> <span data-ttu-id="7aa34-1493">同步方法，<xref:System.Messaging.MessageQueue.Peek%2A>和<xref:System.Messaging.MessageQueue.Receive%2A>，会导致进程线程等待新消息到达队列中指定的时间间隔。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1493">The synchronous methods, <xref:System.Messaging.MessageQueue.Peek%2A> and <xref:System.Messaging.MessageQueue.Receive%2A>, cause the process thread to wait a specified time interval for a new message to arrive in the queue.</span></span> <span data-ttu-id="7aa34-1494">如果指定的时间间隔是<xref:System.Messaging.MessageQueue.InfiniteTimeout>，进程线程保持被阻止，直到有可用的新消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1494">If the specified time interval is <xref:System.Messaging.MessageQueue.InfiniteTimeout>, the process thread remains blocked until a new message is available.</span></span> <span data-ttu-id="7aa34-1495">另一方面，<xref:System.Messaging.MessageQueue.BeginPeek%2A>和<xref:System.Messaging.MessageQueue.BeginReceive%2A>（异步方法），允许以继续在一个单独的线程，直到消息到达队列中的主应用程序任务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1495">On the other hand, <xref:System.Messaging.MessageQueue.BeginPeek%2A> and <xref:System.Messaging.MessageQueue.BeginReceive%2A> (the asynchronous methods), allow the main application tasks to continue in a separate thread until a message arrives in the queue.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-1496">下面的代码示例演示如何将<xref:System.Messaging.MessageQueue.InfiniteTimeout>成员。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1496">The following code example demonstrates the use of the <xref:System.Messaging.MessageQueue.InfiniteTimeout> member.</span></span>  
  
 [!code-csharp[MessageQueue#17](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_Label")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-1497">获取或设置队列说明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1497">Gets or sets the queue description.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7aa34-1498">消息队列的标签。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1498">The label for the message queue.</span>
          </span>
          <span data-ttu-id="7aa34-1499">默认值为空字符串("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1499">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1500">消息队列标签的最大长度为 124 个字符。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1500">The maximum length of a message queue label is 124 characters.</span></span>  
  
 <span data-ttu-id="7aa34-1501"><xref:System.Messaging.MessageQueue.Label%2A>属性不需要是唯一的跨所有队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1501">The <xref:System.Messaging.MessageQueue.Label%2A> property does not need to be unique across all queues.</span></span> <span data-ttu-id="7aa34-1502">但是，如果多个队列共用同一个<xref:System.Messaging.MessageQueue.Label%2A>，不能使用<xref:System.Messaging.MessageQueue.Send%28System.Object%29>方法来广播到所有这些消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1502">However, if multiple queues share the same <xref:System.Messaging.MessageQueue.Label%2A>, you cannot use the <xref:System.Messaging.MessageQueue.Send%28System.Object%29> method to broadcast a message to all of them.</span></span> <span data-ttu-id="7aa34-1503">如果你使用的标签语法<xref:System.Messaging.MessageQueue.Path%2A>属性在发送消息时，将引发异常，如果<xref:System.Messaging.MessageQueue.Label%2A>不是唯一的。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1503">If you use the label syntax for the <xref:System.Messaging.MessageQueue.Path%2A> property when you send the message, an exception will be thrown if the <xref:System.Messaging.MessageQueue.Label%2A> is not unique.</span></span>  
  
 <span data-ttu-id="7aa34-1504">下表显示此属性是在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1504">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1505">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1505">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1506">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1506">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1507">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1507">Local computer</span></span>|<span data-ttu-id="7aa34-1508">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1508">Yes</span></span>|  
|<span data-ttu-id="7aa34-1509">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1509">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1510">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1510">Yes</span></span>|  
|<span data-ttu-id="7aa34-1511">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1511">Remote computer</span></span>|<span data-ttu-id="7aa34-1512">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1512">No</span></span>|  
|<span data-ttu-id="7aa34-1513">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1513">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1514">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1514">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-1515">下面的代码示例获取和设置的消息队列的值<xref:System.Messaging.MessageQueue.Label%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1515">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.Label%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#18](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-1516">标签被设置为无效值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1516">The label was set to an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-1517">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1517">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
        <altmember cref="P:System.Messaging.MessageQueue.FormatName" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="LastModifyTime">
      <MemberSignature Language="C#" Value="public DateTime LastModifyTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastModifyTime" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.LastModifyTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastModifyTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime LastModifyTime { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_LastModifyTime")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-1518">获取队列属性的最近修改时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1518">Gets the last time the properties of a queue were modified.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7aa34-1519">指示队列属性最近修改时间的 <see cref="T:System.DateTime" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1519">A <see cref="T:System.DateTime" /> that indicates when the queue properties were last modified.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1520">上次修改时间包括创建队列和任何<xref:System.Messaging.MessageQueue>属性，修改消息队列队列中，如<xref:System.Messaging.MessageQueue.BasePriority%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1520">The last modification time includes when the queue was created and any <xref:System.Messaging.MessageQueue> property that modifies the Message Queuing queue, such as <xref:System.Messaging.MessageQueue.BasePriority%2A>.</span></span> <span data-ttu-id="7aa34-1521">值<xref:System.Messaging.MessageQueue.LastModifyTime%2A>属性表示本地计算机的系统时间。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1521">The value of the <xref:System.Messaging.MessageQueue.LastModifyTime%2A> property represents the system time of the local computer.</span></span>  
  
 <span data-ttu-id="7aa34-1522">必须调用<xref:System.Messaging.MessageQueue.Refresh%2A>之前获取<xref:System.Messaging.MessageQueue.LastModifyTime%2A>属性; 否则，修改时间关联与此<xref:System.Messaging.MessageQueue>可能不是最新。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1522">You must call <xref:System.Messaging.MessageQueue.Refresh%2A> before getting the <xref:System.Messaging.MessageQueue.LastModifyTime%2A> property; otherwise, the modification time associated with this <xref:System.Messaging.MessageQueue> might not be current.</span></span>  
  
 <span data-ttu-id="7aa34-1523">下表显示此属性是在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1523">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1524">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1524">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1525">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1525">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1526">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1526">Local computer</span></span>|<span data-ttu-id="7aa34-1527">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1527">Yes</span></span>|  
|<span data-ttu-id="7aa34-1528">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1528">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1529">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1529">Yes</span></span>|  
|<span data-ttu-id="7aa34-1530">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1530">Remote computer</span></span>|<span data-ttu-id="7aa34-1531">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1531">No</span></span>|  
|<span data-ttu-id="7aa34-1532">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1532">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1533">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1533">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-1534">下面的代码示例显示的消息队列的值<xref:System.Messaging.MessageQueue.LastModifyTime%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1534">The following code example displays the value of a message queue's <xref:System.Messaging.MessageQueue.LastModifyTime%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#19](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-1535">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1535">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.CreateTime" />
        <altmember cref="P:System.Messaging.MessageQueue.DenySharedReceive" />
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_MachineName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-1536">获取或设置“消息队列”队列所在的计算机的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1536">Gets or sets the name of the computer where the Message Queuing queue is located.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7aa34-1537">队列所在的计算机的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1537">The name of the computer where the queue is located.</span>
          </span>
          <span data-ttu-id="7aa34-1538">“消息队列”默认值为“.”，即本地计算机。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1538">The Message Queuing default is ".", the local computer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1539"><xref:System.Messaging.MessageQueue.MachineName%2A>是必不可少的组成部分的队列的友好名称语法<xref:System.Messaging.MessageQueue.Path%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1539">The <xref:System.Messaging.MessageQueue.MachineName%2A> is an integral component of the friendly name syntax of the queue <xref:System.Messaging.MessageQueue.Path%2A>.</span></span> <span data-ttu-id="7aa34-1540">下表显示当你想要确定使用其友好名称的队列路径时应使用具有指定类型的队列的语法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1540">The following table shows the syntax you should use for a queue of a specified type when you want to identify the queue path using its friendly name.</span></span>  
  
|<span data-ttu-id="7aa34-1541">队列类型</span><span class="sxs-lookup"><span data-stu-id="7aa34-1541">Queue type</span></span>|<span data-ttu-id="7aa34-1542">语法</span><span class="sxs-lookup"><span data-stu-id="7aa34-1542">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="7aa34-1543">公用队列</span><span class="sxs-lookup"><span data-stu-id="7aa34-1543">Public queue</span></span>|`MachineName`\\`QueueName`|  
|<span data-ttu-id="7aa34-1544">专用队列</span><span class="sxs-lookup"><span data-stu-id="7aa34-1544">Private queue</span></span>|`MachineName`\\`Private$`\\`QueueName`|  
|<span data-ttu-id="7aa34-1545">日记队列</span><span class="sxs-lookup"><span data-stu-id="7aa34-1545">Journal queue</span></span>|`MachineName`\\`QueueName`\\`Journal$`|  
|<span data-ttu-id="7aa34-1546">计算机日记队列</span><span class="sxs-lookup"><span data-stu-id="7aa34-1546">Machine journal queue</span></span>|`MachineName`\\`Journal$`|  
|<span data-ttu-id="7aa34-1547">机死信队列</span><span class="sxs-lookup"><span data-stu-id="7aa34-1547">Machine dead-letter queue</span></span>|`MachineName`\\`Deadletter$`|  
|<span data-ttu-id="7aa34-1548">计算机事务性死信队列</span><span class="sxs-lookup"><span data-stu-id="7aa34-1548">Machine transactional dead-letter queue</span></span>|`MachineName`\\`XactDeadletter$`|  
  
 <span data-ttu-id="7aa34-1549">使用"。"本地计算机时指定<xref:System.Messaging.MessageQueue.MachineName%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1549">Use "." for the local computer when specifying the <xref:System.Messaging.MessageQueue.MachineName%2A>.</span></span> <span data-ttu-id="7aa34-1550">例如，对于此属性，识别仅的计算机名称`Server0`。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1550">Only the computer name is recognized for this property, for example, `Server0`.</span></span> <span data-ttu-id="7aa34-1551"><xref:System.Messaging.MessageQueue.MachineName%2A>属性不支持 IP 地址格式。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1551">The <xref:System.Messaging.MessageQueue.MachineName%2A> property does not support the IP address format.</span></span>  
  
 <span data-ttu-id="7aa34-1552">如果你定义<xref:System.Messaging.MessageQueue.Path%2A>方面<xref:System.Messaging.MessageQueue.MachineName%2A>，应用程序会引发异常，因为域控制器是路径翻译需要脱机工作时。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1552">If you define the <xref:System.Messaging.MessageQueue.Path%2A> in terms of the <xref:System.Messaging.MessageQueue.MachineName%2A>, the application throws an exception when working offline because the domain controller is required for path translation.</span></span> <span data-ttu-id="7aa34-1553">因此，你必须使用<xref:System.Messaging.MessageQueue.FormatName%2A>为<xref:System.Messaging.MessageQueue.Path%2A>脱机工作时的语法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1553">Therefore, you must use the <xref:System.Messaging.MessageQueue.FormatName%2A> for the <xref:System.Messaging.MessageQueue.Path%2A> syntax when working offline.</span></span>  
  
 <span data-ttu-id="7aa34-1554"><xref:System.Messaging.MessageQueue.MachineName%2A>， <xref:System.Messaging.MessageQueue.Path%2A>，和<xref:System.Messaging.MessageQueue.QueueName%2A>相关属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1554">The <xref:System.Messaging.MessageQueue.MachineName%2A>, <xref:System.Messaging.MessageQueue.Path%2A>, and <xref:System.Messaging.MessageQueue.QueueName%2A> properties are related.</span></span> <span data-ttu-id="7aa34-1555">更改<xref:System.Messaging.MessageQueue.MachineName%2A>属性会导致<xref:System.Messaging.MessageQueue.Path%2A>属性可以更改。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1555">Changing the <xref:System.Messaging.MessageQueue.MachineName%2A> property causes the <xref:System.Messaging.MessageQueue.Path%2A> property to change.</span></span> <span data-ttu-id="7aa34-1556">从新生成<xref:System.Messaging.MessageQueue.MachineName%2A>和<xref:System.Messaging.MessageQueue.QueueName%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1556">It is built from the new <xref:System.Messaging.MessageQueue.MachineName%2A> and the <xref:System.Messaging.MessageQueue.QueueName%2A>.</span></span> <span data-ttu-id="7aa34-1557">更改<xref:System.Messaging.MessageQueue.Path%2A>（例如，若要使用的格式名称语法） 将重置<xref:System.Messaging.MessageQueue.MachineName%2A>和<xref:System.Messaging.MessageQueue.QueueName%2A>属性来引用新队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1557">Changing the <xref:System.Messaging.MessageQueue.Path%2A> (for example, to use the format name syntax) resets the <xref:System.Messaging.MessageQueue.MachineName%2A> and <xref:System.Messaging.MessageQueue.QueueName%2A> properties to refer to the new queue.</span></span> <span data-ttu-id="7aa34-1558">如果<xref:System.Messaging.MessageQueue.QueueName%2A>属性为空，<xref:System.Messaging.MessageQueue.Path%2A>设置为指定的计算机日记队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1558">If the <xref:System.Messaging.MessageQueue.QueueName%2A> property is empty, the <xref:System.Messaging.MessageQueue.Path%2A> is set to the Journal queue of the computer you specify.</span></span>  
  
 <span data-ttu-id="7aa34-1559">下表显示此属性是在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1559">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1560">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1560">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1561">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1561">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1562">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1562">Local computer</span></span>|<span data-ttu-id="7aa34-1563">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1563">Yes</span></span>|  
|<span data-ttu-id="7aa34-1564">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1564">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1565">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1565">Yes</span></span>|  
|<span data-ttu-id="7aa34-1566">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1566">Remote computer</span></span>|<span data-ttu-id="7aa34-1567">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1567">Yes</span></span>|  
|<span data-ttu-id="7aa34-1568">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1568">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1569">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1569">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-1570">下面的代码示例获取和设置的消息队列的值<xref:System.Messaging.MessageQueue.MachineName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1570">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.MachineName%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#20](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-1571">计算机名称无效，可能是因为语法不正确。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1571">The name of the computer is not valid, possibly because the syntax is incorrect.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-1572">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1572">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.QueueName" />
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
        <altmember cref="P:System.Messaging.MessageQueue.FormatName" />
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
        <altmember cref="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="MaximumJournalSize">
      <MemberSignature Language="C#" Value="public long MaximumJournalSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumJournalSize" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.MaximumJournalSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumJournalSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumJournalSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_MaximumJournalSize")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-1573">获取或设置日记队列的最大大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1573">Gets or sets the maximum size of the journal queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7aa34-1574">日记队列的最大大小，以千字节为单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1574">The maximum size, in kilobytes, of the journal queue.</span>
          </span>
          <span data-ttu-id="7aa34-1575">“消息队列”默认设置指定：不存在任何限制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1575">The Message Queuing default specifies that no limit exists.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1576"><xref:System.Messaging.MessageQueue.MaximumJournalSize%2A> 提供对消息队列的日志存储限制访问。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1576"><xref:System.Messaging.MessageQueue.MaximumJournalSize%2A> provides access to the Message Queuing journal storage limit.</span></span> <span data-ttu-id="7aa34-1577">它是唯一时才可用<xref:System.Messaging.MessageQueue.UseJournalQueue%2A>是`true`。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1577">It is relevant only when <xref:System.Messaging.MessageQueue.UseJournalQueue%2A> is `true`.</span></span> <span data-ttu-id="7aa34-1578">将此属性设置修改消息队列队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1578">Setting this property modifies the Message Queuing queue.</span></span> <span data-ttu-id="7aa34-1579">因此，任何其他<xref:System.Messaging.MessageQueue>的更改会影响实例</span><span class="sxs-lookup"><span data-stu-id="7aa34-1579">Therefore, any other <xref:System.Messaging.MessageQueue> instances are affected by the change</span></span>  
  
 <span data-ttu-id="7aa34-1580">如果在日志或死信队列中存储消息，则应该定期清除要删除不再需要的消息的队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1580">If you store messages in a journal or dead-letter queue, you should periodically clear the queue to remove messages that are no longer needed.</span></span> <span data-ttu-id="7aa34-1581">此类队列中的消息计入队列所驻留的计算机的消息配额。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1581">Messages in such a queue count toward the message quota for the computer where the queue resides.</span></span> <span data-ttu-id="7aa34-1582">（管理员设置的计算机配额。）</span><span class="sxs-lookup"><span data-stu-id="7aa34-1582">(The administrator sets the computer quota.)</span></span>  
  
 <span data-ttu-id="7aa34-1583">下表显示此属性是在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1583">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1584">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1584">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1585">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1585">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1586">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1586">Local computer</span></span>|<span data-ttu-id="7aa34-1587">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1587">Yes</span></span>|  
|<span data-ttu-id="7aa34-1588">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1588">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1589">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1589">Yes</span></span>|  
|<span data-ttu-id="7aa34-1590">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1590">Remote computer</span></span>|<span data-ttu-id="7aa34-1591">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1591">No</span></span>|  
|<span data-ttu-id="7aa34-1592">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1592">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1593">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1593">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-1594">下面的代码示例获取和设置的消息队列的值<xref:System.Messaging.MessageQueue.MaximumJournalSize%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1594">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.MaximumJournalSize%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#21](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-1595">日记队列的最大大小被设置为无效值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1595">The maximum journal queue size was set to an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-1596">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1596">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.UseJournalQueue" />
        <altmember cref="P:System.Messaging.MessageQueue.MaximumQueueSize" />
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteQueueSize" />
      </Docs>
    </Member>
    <Member MemberName="MaximumQueueSize">
      <MemberSignature Language="C#" Value="public long MaximumQueueSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumQueueSize" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.MaximumQueueSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumQueueSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumQueueSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_MaximumQueueSize")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-1597">获取或设置队列的最大大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1597">Gets or sets the maximum size of the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7aa34-1598">队列的最大大小，以千字节为单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1598">The maximum size, in kilobytes, of the queue.</span>
          </span>
          <span data-ttu-id="7aa34-1599">“消息队列”默认设置指定：不存在任何限制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1599">The Message Queuing default specifies that no limit exists.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1600"><xref:System.Messaging.MessageQueue.MaximumQueueSize%2A>提供对消息队列消息的存储限制，这不同于管理员定义的计算机的消息配额的访问。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1600">The <xref:System.Messaging.MessageQueue.MaximumQueueSize%2A> provides access to the Message Queuing message storage limit, which is separate from the computer's message quota that the administrator defines.</span></span> <span data-ttu-id="7aa34-1601">有关消息配额的详细信息，请参阅<xref:System.Messaging.MessageQueue.MaximumJournalSize%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1601">For more information about the message quota, see <xref:System.Messaging.MessageQueue.MaximumJournalSize%2A>.</span></span>  
  
 <span data-ttu-id="7aa34-1602">将此属性设置修改消息队列队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1602">Setting this property modifies the Message Queuing queue.</span></span> <span data-ttu-id="7aa34-1603">因此，任何其他<xref:System.Messaging.MessageQueue>的更改会影响实例</span><span class="sxs-lookup"><span data-stu-id="7aa34-1603">Therefore, any other <xref:System.Messaging.MessageQueue> instances are affected by the change</span></span>  
  
 <span data-ttu-id="7aa34-1604">如果尝试超过最大队列大小或计算机消息配额，消息可能会丢失。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1604">If an attempt is made to exceed either the maximum queue size or the computer message quota, messages might be lost.</span></span> <span data-ttu-id="7aa34-1605">当达到队列配额时，消息队列通知发送的应用程序，以指示，队列已满，通过返回否定确认消息的管理队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1605">When the queue quota is reached, Message Queuing notifies the administration queue of the sending application to indicate that the queue is full, by returning a negative acknowledgment message.</span></span> <span data-ttu-id="7aa34-1606">消息队列将继续发送否定确认，直到在队列中消息的总大小低于该限制。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1606">Message Queuing continues to send negative acknowledgments until the total size of the messages in the queue drops below the limit.</span></span>  
  
 <span data-ttu-id="7aa34-1607">下表显示此属性是在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1607">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1608">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1608">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1609">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1609">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1610">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1610">Local computer</span></span>|<span data-ttu-id="7aa34-1611">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1611">Yes</span></span>|  
|<span data-ttu-id="7aa34-1612">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1612">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1613">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1613">Yes</span></span>|  
|<span data-ttu-id="7aa34-1614">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1614">Remote computer</span></span>|<span data-ttu-id="7aa34-1615">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1615">No</span></span>|  
|<span data-ttu-id="7aa34-1616">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1616">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1617">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1617">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-1618">下面的代码示例获取和设置的消息队列的值<xref:System.Messaging.MessageQueue.MaximumQueueSize%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1618">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.MaximumQueueSize%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#22](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-1619">队列最大大小包含负值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1619">The maximum queue size contains a negative value.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-1620">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1620">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.MaximumJournalSize" />
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteQueueSize" />
      </Docs>
    </Member>
    <Member MemberName="MessageReadPropertyFilter">
      <MemberSignature Language="C#" Value="public System.Messaging.MessagePropertyFilter MessageReadPropertyFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.MessagePropertyFilter MessageReadPropertyFilter" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.MessageReadPropertyFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageReadPropertyFilter As MessagePropertyFilter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessagePropertyFilter ^ MessageReadPropertyFilter { System::Messaging::MessagePropertyFilter ^ get(); void set(System::Messaging::MessagePropertyFilter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_MessageReadPropertyFilter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.MessagePropertyFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-1621">获取或设置接收或查看消息的属性筛选器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1621">Gets or sets the property filter for receiving or peeking messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7aa34-1622">由队列使用的 <see cref="T:System.Messaging.MessagePropertyFilter" />，用来筛选队列所接收或查看的每个消息的属性集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1622">The <see cref="T:System.Messaging.MessagePropertyFilter" /> used by the queue to filter the set of properties it receives or peeks for each message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1623">此筛选器是一套限制的消息属性的布尔值，<xref:System.Messaging.MessageQueue>接收或查看。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1623">This filter is a set of Boolean values restricting the message properties that the <xref:System.Messaging.MessageQueue> receives or peeks.</span></span> <span data-ttu-id="7aa34-1624">当<xref:System.Messaging.MessageQueue>接收或查看消息从服务器队列中，它仅检索那些为其<xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A>值是`true`。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1624">When the <xref:System.Messaging.MessageQueue> receives or peeks a message from the server queue, it retrieves only those properties for which the <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> value is `true`.</span></span>  
  
 <span data-ttu-id="7aa34-1625">下面显示的初始属性值<xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1625">The following shows initial property values for the <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> property.</span></span> <span data-ttu-id="7aa34-1626">这些设置是相当于调用<xref:System.Messaging.MessagePropertyFilter.SetDefaults%2A>上<xref:System.Messaging.MessagePropertyFilter>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1626">These settings are identical to calling <xref:System.Messaging.MessagePropertyFilter.SetDefaults%2A> on a <xref:System.Messaging.MessagePropertyFilter>.</span></span>  
  
|<span data-ttu-id="7aa34-1627">Property</span><span class="sxs-lookup"><span data-stu-id="7aa34-1627">Property</span></span>|<span data-ttu-id="7aa34-1628">默认值</span><span class="sxs-lookup"><span data-stu-id="7aa34-1628">Default value</span></span>|  
|--------------|-------------------|  
|<xref:System.Messaging.MessagePropertyFilter.Acknowledgment%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.AcknowledgeType%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.AdministrationQueue%2A>|`true`|  
|<xref:System.Messaging.MessagePropertyFilter.AppSpecific%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.ArrivedTime%2A>|`true`|  
|<xref:System.Messaging.MessagePropertyFilter.AttachSenderId%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.Authenticated%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.AuthenticationProviderName%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.AuthenticationProviderType%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.Body%2A>|`true`|  
|<xref:System.Messaging.MessagePropertyFilter.ConnectorType%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.CorrelationId%2A>|`true`|  
|<xref:System.Messaging.MessagePropertyFilter.DefaultBodySize%2A>|<span data-ttu-id="7aa34-1629">1024 个字节</span><span class="sxs-lookup"><span data-stu-id="7aa34-1629">1024 bytes</span></span>|  
|<xref:System.Messaging.MessagePropertyFilter.DefaultExtensionSize%2A>|<span data-ttu-id="7aa34-1630">255 个字节</span><span class="sxs-lookup"><span data-stu-id="7aa34-1630">255 bytes</span></span>|  
|<xref:System.Messaging.MessagePropertyFilter.DefaultLabelSize%2A>|<span data-ttu-id="7aa34-1631">255 个字节</span><span class="sxs-lookup"><span data-stu-id="7aa34-1631">255 bytes</span></span>|  
|<xref:System.Messaging.MessagePropertyFilter.DestinationQueue%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.DestinationSymmetricKey%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.DigitalSignature%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.EncryptionAlgorithm%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.Extension%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.HashAlgorithm%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.Id%2A>|`true`|  
|<xref:System.Messaging.MessagePropertyFilter.IsFirstInTransaction%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.IsLastInTransaction%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.Label%2A>|`true`|  
|<xref:System.Messaging.MessagePropertyFilter.MessageType%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.Priority%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.Recoverable%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.ResponseQueue%2A>|`true`|  
|<xref:System.Messaging.MessagePropertyFilter.SenderCertificate%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.SenderId%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.SenderVersion%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.SentTime%2A>|`true`|  
|<xref:System.Messaging.MessagePropertyFilter.SourceMachine%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.TimeToBeReceived%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.TimeToReachQueue%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.TransactionId%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.TransactionStatusQueue%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.UseAuthentication%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.UseDeadLetterQueue%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.UseEncryption%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.UseJournalQueue%2A>|`false`|  
|<xref:System.Messaging.MessagePropertyFilter.UseTracing%2A>|`false`|  
  
 <span data-ttu-id="7aa34-1632">下表显示此属性是在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1632">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1633">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1633">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1634">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1634">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1635">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1635">Local computer</span></span>|<span data-ttu-id="7aa34-1636">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1636">Yes</span></span>|  
|<span data-ttu-id="7aa34-1637">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1637">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1638">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1638">Yes</span></span>|  
|<span data-ttu-id="7aa34-1639">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1639">Remote computer</span></span>|<span data-ttu-id="7aa34-1640">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1640">Yes</span></span>|  
|<span data-ttu-id="7aa34-1641">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1641">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1642">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1642">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-1643">下面的代码示例使用<xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A>限制收到的消息属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1643">The following code example uses the <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A> to restrict the message properties received.</span></span>  
  
 [!code-cpp[MessageQueue.MessageReadPropertyFilter#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.MessageReadPropertyFilter/CPP/mqmessagereadpropertyfilter.cpp#1)]
 [!code-csharp[MessageQueue.MessageReadPropertyFilter#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.MessageReadPropertyFilter/CS/mqmessagereadpropertyfilter.cs#1)]
 [!code-vb[MessageQueue.MessageReadPropertyFilter#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.MessageReadPropertyFilter/VB/mqmessagereadpropertyfilter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-1644">筛选器为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1644">The filter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="MulticastAddress">
      <MemberSignature Language="C#" Value="public string MulticastAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MulticastAddress" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.MulticastAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MulticastAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_MulticastAddress")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-1645">在 MSMQ 3.0 中引入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1645">Introduced in MSMQ 3.0.</span>
          </span>
          <span data-ttu-id="7aa34-1646">获取或设置与队列关联的多路广播地址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1646">Gets or sets the multicast address associated with the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7aa34-1647">包含有效的多路广播地址（格式如下）的 <see cref="T:System.String" />，或者为 <see langword="null" />，这表示队列与多路广播地址不关联。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1647">A <see cref="T:System.String" /> that contains a valid multicast address (in the form shown below) or <see langword="null" />, which indicates that the queue is not associated with a multicast address.</span>
          </span>  
  
```  
&lt;address&gt;:&lt;port&gt;  
```</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1648"><xref:System.Messaging.MessageQueue.MulticastAddress%2A>属性用于将非事务性队列发送消息时可以使用的多播地址与相关联。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1648">The <xref:System.Messaging.MessageQueue.MulticastAddress%2A> property is used to associate a non-transactional queue with a multicast address that can be used when sending messages.</span></span> <span data-ttu-id="7aa34-1649">无法将事务性队列与多播地址相关联。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1649">You cannot associate a transactional queue with a multicast address.</span></span> <span data-ttu-id="7aa34-1650">当发送应用程序将消息发送到多播地址时，则消息队列都会向与该地址关联的每个队列发送消息的副本。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1650">When the sending application sends messages to a multicast address, Message Queuing sends a copy of the message to every queue associated with that address.</span></span>  
  
 <span data-ttu-id="7aa34-1651">IP 多播地址必须是从 224.0.0.0 到 239.255.255.255，与设置前四个高序位等于 1110年相对应的类 D 范围内。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1651">IP multicast addresses must be in the class D range from 224.0.0.0 to 239.255.255.255, which corresponds to setting the first four high-order bits equal to 1110.</span></span> <span data-ttu-id="7aa34-1652">但是，只有某些范围的在此范围内的地址是保留的可用于发送多播的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1652">However, only certain ranges of addresses in this range are unreserved and available for sending multicast messages.</span></span> <span data-ttu-id="7aa34-1653">保留的多播地址的最新列表，请参阅[Internet 分配号机构 (IANA) Internet 多播地址](http://go.microsoft.com/fwlink/?linkid=3859)网页。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1653">For the latest list of reserved multicast addresses, see the [Internet Assigned Number Authority (IANA) Internet Multicast Addresses](http://go.microsoft.com/fwlink/?linkid=3859) Web page.</span></span> <span data-ttu-id="7aa34-1654">没有任何限制上的端口号。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1654">There are no restrictions on the port number.</span></span>  
  
 <span data-ttu-id="7aa34-1655">如果多个源计算机发送多播的消息，并且你想要从只有一个源计算机接收消息的特定队列，则每台源计算机必须向不同的 IP 地址和端口号组合发送消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1655">If several source computers are sending multicast messages and you want a specific queue to receive messages from only one source computer, each source computer must send messages to a different combination of IP address and port number.</span></span>  
  
 <span data-ttu-id="7aa34-1656">若要取消关联的多播地址从队列，将设置<xref:System.Messaging.MessageQueue.MulticastAddress%2A>属性设置为零长度字符串。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1656">To dissociate a queue from a multicast address, set the <xref:System.Messaging.MessageQueue.MulticastAddress%2A> property to a zero-length string.</span></span> <span data-ttu-id="7aa34-1657">不将其设置为`null`，因为这将导致<xref:System.ArgumentNullException>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1657">Do not set it to `null`, as this will result in a <xref:System.ArgumentNullException>.</span></span>  
  
 <span data-ttu-id="7aa34-1658">下表显示此属性是在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1658">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1659">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1659">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1660">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1660">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1661">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1661">Local computer</span></span>|<span data-ttu-id="7aa34-1662">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1662">Yes</span></span>|  
|<span data-ttu-id="7aa34-1663">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1663">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1664">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1664">Yes</span></span>|  
|<span data-ttu-id="7aa34-1665">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1665">Remote computer</span></span>|<span data-ttu-id="7aa34-1666">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1666">No</span></span>|  
|<span data-ttu-id="7aa34-1667">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1667">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1668">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1668">No</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="7aa34-1669">未安装 MSMQ 3.0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1669">MSMQ 3.0 is not installed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_Path")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-1670">获取或设置队列的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1670">Gets or sets the queue's path.</span>
          </span>
          <span data-ttu-id="7aa34-1671">设置 <see cref="P:System.Messaging.MessageQueue.Path" /> 会导致 <see cref="T:System.Messaging.MessageQueue" /> 指向新队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1671">Setting the <see cref="P:System.Messaging.MessageQueue.Path" /> causes the <see cref="T:System.Messaging.MessageQueue" /> to point to a new queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7aa34-1672">由 <see cref="T:System.Messaging.MessageQueue" /> 引用的队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1672">The queue that is referenced by the <see cref="T:System.Messaging.MessageQueue" />.</span>
          </span>
          <span data-ttu-id="7aa34-1673">默认值取决于所使用的 <see cref="M:System.Messaging.MessageQueue.#ctor" /> 构造函数；它或者是 <see langword="null" />，或者是由构造函数的 <paramref name="path" /> 参数指定的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1673">The default depends on which <see cref="M:System.Messaging.MessageQueue.#ctor" /> constructor you use; it is either <see langword="null" /> or is specified by the constructor's <paramref name="path" /> parameter.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1674">语法<xref:System.Messaging.MessageQueue.Path%2A>属性取决于队列的类型它点为下表中所示。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1674">The syntax for the <xref:System.Messaging.MessageQueue.Path%2A> property depends on the type of queue it points to, as shown in the following table.</span></span>  
  
|<span data-ttu-id="7aa34-1675">队列类型</span><span class="sxs-lookup"><span data-stu-id="7aa34-1675">Queue type</span></span>|<span data-ttu-id="7aa34-1676">语法</span><span class="sxs-lookup"><span data-stu-id="7aa34-1676">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="7aa34-1677">公用队列</span><span class="sxs-lookup"><span data-stu-id="7aa34-1677">Public queue</span></span>|`MachineName`\\`QueueName`|  
|<span data-ttu-id="7aa34-1678">专用队列</span><span class="sxs-lookup"><span data-stu-id="7aa34-1678">Private queue</span></span>|`MachineName`\\`Private$`\\`QueueName`|  
|<span data-ttu-id="7aa34-1679">日记队列</span><span class="sxs-lookup"><span data-stu-id="7aa34-1679">Journal queue</span></span>|`MachineName`\\`QueueName`\\`Journal$`|  
|<span data-ttu-id="7aa34-1680">计算机日记队列</span><span class="sxs-lookup"><span data-stu-id="7aa34-1680">Machine journal queue</span></span>|`MachineName`\\`Journal$`|  
|<span data-ttu-id="7aa34-1681">机死信队列</span><span class="sxs-lookup"><span data-stu-id="7aa34-1681">Machine dead-letter queue</span></span>|`MachineName`\\`Deadletter$`|  
|<span data-ttu-id="7aa34-1682">计算机事务性死信队列</span><span class="sxs-lookup"><span data-stu-id="7aa34-1682">Machine transactional dead-letter queue</span></span>|`MachineName`\\`XactDeadletter$`|  
  
 <span data-ttu-id="7aa34-1683">使用"。"来表示本地计算机。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1683">Use "." to represent the local computer.</span></span>  
  
 <span data-ttu-id="7aa34-1684"><xref:System.Messaging.MessageQueue.MachineName%2A>， <xref:System.Messaging.MessageQueue.Path%2A>，和<xref:System.Messaging.MessageQueue.QueueName%2A>相关属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1684">The <xref:System.Messaging.MessageQueue.MachineName%2A>, <xref:System.Messaging.MessageQueue.Path%2A>, and <xref:System.Messaging.MessageQueue.QueueName%2A> properties are related.</span></span> <span data-ttu-id="7aa34-1685">更改<xref:System.Messaging.MessageQueue.MachineName%2A>属性会导致<xref:System.Messaging.MessageQueue.Path%2A>属性可以更改。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1685">Changing the <xref:System.Messaging.MessageQueue.MachineName%2A> property causes the <xref:System.Messaging.MessageQueue.Path%2A> property to change.</span></span> <span data-ttu-id="7aa34-1686">从新生成<xref:System.Messaging.MessageQueue.MachineName%2A>和<xref:System.Messaging.MessageQueue.QueueName%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1686">It is built from the new <xref:System.Messaging.MessageQueue.MachineName%2A> and the <xref:System.Messaging.MessageQueue.QueueName%2A>.</span></span> <span data-ttu-id="7aa34-1687">更改<xref:System.Messaging.MessageQueue.Path%2A>（例如，若要使用的格式名称语法） 将重置<xref:System.Messaging.MessageQueue.MachineName%2A>和<xref:System.Messaging.MessageQueue.QueueName%2A>属性来引用新队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1687">Changing the <xref:System.Messaging.MessageQueue.Path%2A> (for example, to use the format name syntax) resets the <xref:System.Messaging.MessageQueue.MachineName%2A> and <xref:System.Messaging.MessageQueue.QueueName%2A> properties to refer to the new queue.</span></span>  
  
 <span data-ttu-id="7aa34-1688">或者，可以使用<xref:System.Messaging.MessageQueue.FormatName%2A>或<xref:System.Messaging.MessageQueue.Label%2A>来描述队列路径中下, 表中所示。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1688">Alternatively, you can use the <xref:System.Messaging.MessageQueue.FormatName%2A> or <xref:System.Messaging.MessageQueue.Label%2A> to describe the queue path, as shown in the following table.</span></span>  
  
|<span data-ttu-id="7aa34-1689">参考</span><span class="sxs-lookup"><span data-stu-id="7aa34-1689">Reference</span></span>|<span data-ttu-id="7aa34-1690">语法</span><span class="sxs-lookup"><span data-stu-id="7aa34-1690">Syntax</span></span>|<span data-ttu-id="7aa34-1691">示例</span><span class="sxs-lookup"><span data-stu-id="7aa34-1691">Example</span></span>|  
|---------------|------------|-------------|  
|<span data-ttu-id="7aa34-1692">格式名称</span><span class="sxs-lookup"><span data-stu-id="7aa34-1692">Format name</span></span>|<span data-ttu-id="7aa34-1693">`FormatName:` [*格式名*]</span><span class="sxs-lookup"><span data-stu-id="7aa34-1693">`FormatName:` [ *format name* ]</span></span>|<span data-ttu-id="7aa34-1694">`FormatName:Public=` 5A5F7535-AE9A-41d4-935C-845C2AFF7112</span><span class="sxs-lookup"><span data-stu-id="7aa34-1694">`FormatName:Public=` 5A5F7535-AE9A-41d4-935C-845C2AFF7112</span></span>|  
|<span data-ttu-id="7aa34-1695">Label</span><span class="sxs-lookup"><span data-stu-id="7aa34-1695">Label</span></span>|<span data-ttu-id="7aa34-1696">`Label:` [*标签*]</span><span class="sxs-lookup"><span data-stu-id="7aa34-1696">`Label:` [ *label* ]</span></span>|<span data-ttu-id="7aa34-1697">`Label:` 标签</span><span class="sxs-lookup"><span data-stu-id="7aa34-1697">`Label:` TheLabel</span></span>|  
  
 <span data-ttu-id="7aa34-1698">如果你使用的标签语法<xref:System.Messaging.MessageQueue.Path%2A>属性在发送消息时，将引发异常，如果<xref:System.Messaging.MessageQueue.Label%2A>不是唯一的。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1698">If you use the label syntax for the <xref:System.Messaging.MessageQueue.Path%2A> property when you send the message, an exception will be thrown if the <xref:System.Messaging.MessageQueue.Label%2A> is not unique.</span></span>  
  
 <span data-ttu-id="7aa34-1699">若要脱机工作，必须在第一个表中使用格式名语法，而不是友好名称语法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1699">To work offline, you must use the format name syntax, rather than the friendly name syntax in the first table.</span></span> <span data-ttu-id="7aa34-1700">否则，因为该域的主域控制器 （在其 Active Directory 处于） 不是可用于为格式名称解析的路径，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1700">Otherwise, an exception is thrown because the primary domain controller (on which Active Directory resides) is not available to resolve the path to the format name.</span></span>  
  
 <span data-ttu-id="7aa34-1701">设置新路径关闭的消息队列，并释放所有句柄。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1701">Setting a new path closes the message queue and releases all handles.</span></span>  
  
 <span data-ttu-id="7aa34-1702">下表显示此属性是在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1702">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1703">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1703">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1704">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1704">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1705">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1705">Local computer</span></span>|<span data-ttu-id="7aa34-1706">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1706">Yes</span></span>|  
|<span data-ttu-id="7aa34-1707">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1707">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1708">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1708">Yes</span></span>|  
|<span data-ttu-id="7aa34-1709">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1709">Remote computer</span></span>|<span data-ttu-id="7aa34-1710">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1710">Yes</span></span>|  
|<span data-ttu-id="7aa34-1711">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1711">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1712">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1712">Yes</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="7aa34-1713">在工作组模式下只能使用专用队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1713">In workgroup mode you can only use private queues.</span></span> <span data-ttu-id="7aa34-1714">指定路径中使用的专用队列语法`MachineName` \\ `Private$` \\ `QueueName`。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1714">You specify the path using the private queue syntax `MachineName`\\`Private$`\\`QueueName`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-1715">下面的代码示例创建新<xref:System.Messaging.MessageQueue>对象使用各种路径名称语法类型。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1715">The following code example creates new <xref:System.Messaging.MessageQueue> objects using various path name syntax types.</span></span> <span data-ttu-id="7aa34-1716">在每个情况下，它将消息发送到其路径定义构造函数中的队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1716">In each case, it sends a message to the queue whose path is defined in the constructor.</span></span>  
  
 [!code-cpp[MessageQueue.Path#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Path/CPP/mqpath.cpp#1)]
 [!code-csharp[MessageQueue.Path#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Path/CS/mqpath.cs#1)]
 [!code-vb[MessageQueue.Path#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Path/VB/mqpath.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-1717">路径无效，可能是因为语法无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1717">The path is not valid, possibly because the syntax is not valid.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.QueueName" />
        <altmember cref="P:System.Messaging.MessageQueue.MachineName" />
        <altmember cref="P:System.Messaging.MessageQueue.FormatName" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
        <altmember cref="M:System.Messaging.MessageQueue.#ctor" />
        <altmember cref="M:System.Messaging.MessageQueue.Close" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Peek">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <threadsafe>
          <span data-ttu-id="7aa34-1718">该方法不是线程安全。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1718">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <summary>
          <span data-ttu-id="7aa34-1719">返回队列中第一条消息的副本，而不从队列中移除该消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1719">Returns a copy of the first message in the queue without removing the message from the queue.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Function Peek () As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Peek();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-1720">返回但不移除（查看）此 <see cref="T:System.Messaging.MessageQueue" /> 所引用的队列中的第一条消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1720">Returns without removing (peeks) the first message in the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</span>
          </span>
          <span data-ttu-id="7aa34-1721">
            <see cref="M:System.Messaging.MessageQueue.Peek" /> 方法是同步的，所以在有可用消息前，该方法阻塞当前线程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1721">The <see cref="M:System.Messaging.MessageQueue.Peek" /> method is synchronous, so it blocks the current thread until a message becomes available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-1722">该 <see cref="T:System.Messaging.Message" /> 表示队列中第一条消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1722">The <see cref="T:System.Messaging.Message" /> that represents the first message in the queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1723">若要查看队列，或等待，直到在队列中存在一条消息，请使用此重载。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1723">Use this overload to peek a queue, or to wait until a message exists in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-1724"><xref:System.Messaging.MessageQueue.Peek%2A>方法读取，但不会删除从队列第一条消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1724">The <xref:System.Messaging.MessageQueue.Peek%2A> method reads, but does not remove, the first message from the queue.</span></span> <span data-ttu-id="7aa34-1725">因此，重复调用<xref:System.Messaging.MessageQueue.Peek%2A>返回同一条消息，除非较高优先级的消息到达队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1725">Therefore, repeated calls to <xref:System.Messaging.MessageQueue.Peek%2A> return the same message, unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="7aa34-1726"><xref:System.Messaging.MessageQueue.Receive%2A>方法，另一方面，同时读取和从队列中移除第一条消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1726">The <xref:System.Messaging.MessageQueue.Receive%2A> method, on the other hand, both reads and removes the first message from the queue.</span></span> <span data-ttu-id="7aa34-1727">重复调用<xref:System.Messaging.MessageQueue.Receive%2A>，因此，返回不同的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1727">Repeated calls to <xref:System.Messaging.MessageQueue.Receive%2A>, therefore, return different messages.</span></span>  
  
 <span data-ttu-id="7aa34-1728">消息队列消息优先级和到达时间根据队列中进行排序。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1728">Message Queuing orders messages in the queue according to priority and arrival time.</span></span> <span data-ttu-id="7aa34-1729">仅当它为较高优先级的较新的消息放置在旧版本之前。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1729">A newer message is placed before an older one only if it is of a higher priority.</span></span>  
  
 <span data-ttu-id="7aa34-1730">如果当前线程在等待消息到达队列时可以被阻塞，则使用 <xref:System.Messaging.MessageQueue.Peek%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1730">Use <xref:System.Messaging.MessageQueue.Peek%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="7aa34-1731">由于此重载不指定超时，则应用程序可能会无限期地等待。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1731">Because this overload does not specify a time-out, the application might wait indefinitely.</span></span> <span data-ttu-id="7aa34-1732">如果需要应用程序处理继续进行而不等待，则使用异步 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1732">If you need the application processing to continue without waiting, use the asynchronous <xref:System.Messaging.MessageQueue.BeginPeek%2A> method.</span></span> <span data-ttu-id="7aa34-1733">或者，您可以指定对消息到达队列中使用的重载使用超时<xref:System.Messaging.MessageQueue.Peek%2A>，指定超时。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1733">Alternatively, you can specify a time-out for a message to arrive in the queue by using the overload of <xref:System.Messaging.MessageQueue.Peek%2A> that specifies a time-out.</span></span>  
  
 <span data-ttu-id="7aa34-1734">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1734">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1735">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1735">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1736">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1736">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1737">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1737">Local computer</span></span>|<span data-ttu-id="7aa34-1738">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1738">Yes</span></span>|  
|<span data-ttu-id="7aa34-1739">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1739">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1740">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1740">Yes</span></span>|  
|<span data-ttu-id="7aa34-1741">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1741">Remote computer</span></span>|<span data-ttu-id="7aa34-1742">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1742">No</span></span>|  
|<span data-ttu-id="7aa34-1743">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1743">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1744">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1744">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-1745">下面的示例使用<xref:System.Messaging.MessageQueue.Peek%2A>队列上的方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1745">The following examples use the <xref:System.Messaging.MessageQueue.Peek%2A> method on a queue.</span></span>  
  
 <span data-ttu-id="7aa34-1746">在第一个示例中，应用程序等待，直到的消息变得在队列中可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1746">In the first example, the application waits until a message becomes available in the queue.</span></span> <span data-ttu-id="7aa34-1747">请注意第一个示例不会访问消息到达;它只是将暂停处理，直到到达的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1747">Note that the first example does not access the message that arrives; it merely pauses processing until a message arrives.</span></span> <span data-ttu-id="7aa34-1748">如果队列中已存在一条消息，它将立即返回。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1748">If a message already exists in the queue, it will return immediately.</span></span>  
  
 <span data-ttu-id="7aa34-1749">在第二个示例中，包含应用程序定义的消息`Order`类是发送到队列，，然后从队列中查看它。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1749">In the second example, a message that contains an application-defined `Order` class is sent to the queue, and then peeked from the queue.</span></span>  
  
 [!code-cpp[MessageQueue.Peek_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Peek_noparms/CPP/mqpeek_noparms.cpp#1)]
 [!code-csharp[MessageQueue.Peek_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Peek_noparms/CS/mqpeek_noparms.cs#1)]
 [!code-vb[MessageQueue.Peek_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Peek_noparms/VB/mqpeek_noparms.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-1750">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1750">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="7aa34-1751">该方法不是线程安全。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1751">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Peek (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Peek(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Peek (timeout As TimeSpan) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Peek(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="7aa34-1752">一个 <see cref="T:System.TimeSpan" /> 指示等待队列包含消息所用的最长时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1752">A <see cref="T:System.TimeSpan" /> that indicates the maximum time to wait for the queue to contain a message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-1753">返回但不移除（查看）此 <see cref="T:System.Messaging.MessageQueue" /> 所引用的队列中的第一条消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1753">Returns without removing (peeks) the first message in the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</span>
          </span>
          <span data-ttu-id="7aa34-1754">
            <see cref="M:System.Messaging.MessageQueue.Peek" /> 方法是同步的，因此在有可用消息或发生指定的超时之前，它一直阻止当前线程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1754">The <see cref="M:System.Messaging.MessageQueue.Peek" /> method is synchronous, so it blocks the current thread until a message becomes available or the specified time-out occurs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-1755">该 <see cref="T:System.Messaging.Message" /> 表示队列中第一条消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1755">The <see cref="T:System.Messaging.Message" /> that represents the first message in the queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1756">若要查看队列，或等待一段指定时间，直到在队列中存在一条消息，请使用此重载。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1756">Use this overload to peek a queue, or to wait a specified period of time until a message exists in the queue.</span></span> <span data-ttu-id="7aa34-1757">如果消息在队列中已存在，方法将立即返回。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1757">The method returns immediately if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-1758"><xref:System.Messaging.MessageQueue.Peek%2A>方法读取，但不会删除从队列第一条消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1758">The <xref:System.Messaging.MessageQueue.Peek%2A> method reads, but does not remove, the first message from the queue.</span></span> <span data-ttu-id="7aa34-1759">因此，重复调用<xref:System.Messaging.MessageQueue.Peek%2A>返回同一条消息，除非较高优先级的消息到达队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1759">Therefore, repeated calls to <xref:System.Messaging.MessageQueue.Peek%2A> return the same message, unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="7aa34-1760"><xref:System.Messaging.MessageQueue.Receive%2A>方法，另一方面，同时读取和从队列中移除第一条消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1760">The <xref:System.Messaging.MessageQueue.Receive%2A> method, on the other hand, both reads and removes the first message from the queue.</span></span> <span data-ttu-id="7aa34-1761">重复调用<xref:System.Messaging.MessageQueue.Receive%2A>，因此，返回不同的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1761">Repeated calls to <xref:System.Messaging.MessageQueue.Receive%2A>, therefore, return different messages.</span></span>  
  
 <span data-ttu-id="7aa34-1762">消息队列消息优先级和到达时间根据队列中进行排序。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1762">Message Queuing orders messages in the queue according to priority and arrival time.</span></span> <span data-ttu-id="7aa34-1763">仅当它为较高优先级的较新的消息放置在旧版本之前。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1763">A newer message is placed before an older one only if it is of a higher priority.</span></span>  
  
 <span data-ttu-id="7aa34-1764">如果当前线程在等待消息到达队列时可以被阻塞，则使用 <xref:System.Messaging.MessageQueue.Peek%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1764">Use <xref:System.Messaging.MessageQueue.Peek%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="7aa34-1765">线程将被阻塞段指定的时间，或者如果你表明<xref:System.Messaging.MessageQueue.InfiniteTimeout>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1765">The thread will be blocked up to the specified period of time, or indefinitely if you indicated <xref:System.Messaging.MessageQueue.InfiniteTimeout>.</span></span> <span data-ttu-id="7aa34-1766">如果需要应用程序处理继续进行而不等待，则使用异步 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1766">If you need the application processing to continue without waiting, use the asynchronous <xref:System.Messaging.MessageQueue.BeginPeek%2A> method.</span></span>  
  
 <span data-ttu-id="7aa34-1767">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1767">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1768">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1768">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1769">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1769">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1770">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1770">Local computer</span></span>|<span data-ttu-id="7aa34-1771">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1771">Yes</span></span>|  
|<span data-ttu-id="7aa34-1772">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1772">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1773">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1773">Yes</span></span>|  
|<span data-ttu-id="7aa34-1774">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1774">Remote computer</span></span>|<span data-ttu-id="7aa34-1775">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1775">No</span></span>|  
|<span data-ttu-id="7aa34-1776">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1776">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1777">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1777">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-1778">下面的代码示例使用<xref:System.Messaging.MessageQueue.Peek%2A>方法的超时值为零，以检查队列是否为空。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1778">The following code example uses the <xref:System.Messaging.MessageQueue.Peek%2A> method with a time-out of zero to check whether the queue is empty.</span></span>  
  
 [!code-cpp[MessageQueue.Peek_timeout#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Peek_timeout/CPP/mqpeek_timeout.cpp#1)]
 [!code-csharp[MessageQueue.Peek_timeout#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Peek_timeout/CS/mqpeek_timeout.cs#1)]
 [!code-vb[MessageQueue.Peek_timeout#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Peek_timeout/VB/mqpeek_timeout.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-1779">为 <paramref name="timeout" /> 参数指定的值无效，可能是 <paramref name="timeout" /> 小于 <see cref="F:System.TimeSpan.Zero" /> 或大于 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1779">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-1780">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1780">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="7aa34-1781">该方法不是线程安全。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1781">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Peek (TimeSpan timeout, System.Messaging.Cursor cursor, System.Messaging.PeekAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Peek(valuetype System.TimeSpan timeout, class System.Messaging.Cursor cursor, valuetype System.Messaging.PeekAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Peek(System.TimeSpan,System.Messaging.Cursor,System.Messaging.PeekAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Peek(TimeSpan timeout, System::Messaging::Cursor ^ cursor, System::Messaging::PeekAction action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cursor" Type="System.Messaging.Cursor" />
        <Parameter Name="action" Type="System.Messaging.PeekAction" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="7aa34-1782">一个 <see cref="T:System.TimeSpan" /> 指示等待队列包含消息所用的最长时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1782">A <see cref="T:System.TimeSpan" /> that indicates the maximum time to wait for the queue to contain a message.</span>
          </span>
        </param>
        <param name="cursor">
          <span data-ttu-id="7aa34-1783">维持消息队列中特定位置的 <see cref="T:System.Messaging.Cursor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1783">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</span>
          </span>
        </param>
        <param name="action">
          <span data-ttu-id="7aa34-1784">
            <see cref="T:System.Messaging.PeekAction" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1784">One of the <see cref="T:System.Messaging.PeekAction" /> values.</span>
          </span>
          <span data-ttu-id="7aa34-1785">指示是查看队列中的当前消息还是下一条消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1785">Indicates whether to peek at the current message in the queue, or the next message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-1786">使用指定的游标返回但不移除（查看）队列中的当前消息或下一条消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1786">Returns without removing (peeks) the current or next message in the queue, using the specified cursor.</span>
          </span>
          <span data-ttu-id="7aa34-1787">
            <see cref="M:System.Messaging.MessageQueue.Peek" /> 方法是同步的，因此在有可用消息或发生指定的超时之前，它一直阻止当前线程。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1787">The <see cref="M:System.Messaging.MessageQueue.Peek" /> method is synchronous, so it blocks the current thread until a message becomes available or the specified time-out occurs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-1788">一个 <see cref="T:System.Messaging.Message" />，表示队列中的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1788">A <see cref="T:System.Messaging.Message" /> that represents a message in the queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1789">若要查看队列，或等待一段指定时间，直到在队列中存在一条消息，请使用此重载。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1789">Use this overload to peek a queue, or to wait a specified period of time until a message exists in the queue.</span></span> <span data-ttu-id="7aa34-1790">如果消息在队列中已存在，方法将立即返回。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1790">The method returns immediately if a message already exists in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-1791"><xref:System.Messaging.MessageQueue.Peek%2A>方法读取，但不会删除队列的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1791">The <xref:System.Messaging.MessageQueue.Peek%2A> method reads, but does not remove, a message from the queue.</span></span> <span data-ttu-id="7aa34-1792"><xref:System.Messaging.MessageQueue.Receive%2A>方法，另一方面，同时读取和从队列中移除消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1792">The <xref:System.Messaging.MessageQueue.Receive%2A> method, on the other hand, both reads and removes a message from the queue.</span></span>  
  
 <span data-ttu-id="7aa34-1793">如果当前线程在等待消息到达队列时可以被阻塞，则使用 <xref:System.Messaging.MessageQueue.Peek%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1793">Use <xref:System.Messaging.MessageQueue.Peek%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="7aa34-1794">线程阻塞段指定的时间，或者如果你表明<xref:System.Messaging.MessageQueue.InfiniteTimeout>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1794">The thread is blocked up to the specified period of time, or indefinitely if you indicated <xref:System.Messaging.MessageQueue.InfiniteTimeout>.</span></span> <span data-ttu-id="7aa34-1795">如果需要应用程序处理继续进行而不等待，则使用异步 <xref:System.Messaging.MessageQueue.BeginPeek%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1795">If you need the application processing to continue without waiting, use the asynchronous <xref:System.Messaging.MessageQueue.BeginPeek%2A> method.</span></span>  
  
 <span data-ttu-id="7aa34-1796">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1796">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1797">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1797">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1798">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1798">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1799">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1799">Local computer</span></span>|<span data-ttu-id="7aa34-1800">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1800">Yes</span></span>|  
|<span data-ttu-id="7aa34-1801">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1801">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1802">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1802">Yes</span></span>|  
|<span data-ttu-id="7aa34-1803">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1803">Remote computer</span></span>|<span data-ttu-id="7aa34-1804">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1804">No</span></span>|  
|<span data-ttu-id="7aa34-1805">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1805">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1806">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1806">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7aa34-1807">为 <paramref name="action" /> 参数指定的值不是 <see langword="PeekAction.Current" /> 和 <see langword="PeekAction.Next" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1807">A value other than <see langword="PeekAction.Current" /> or <see langword="PeekAction.Next" /> was specified for the <paramref name="action" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7aa34-1808">
            <paramref name="cursor" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1808">The <paramref name="cursor" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-1809">为 <paramref name="timeout" /> 参数指定的值无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1809">The value specified for the <paramref name="timeout" /> parameter is not valid.</span>
          </span>
          <span data-ttu-id="7aa34-1810">
            <paramref name="timeout" /> 可能小于 <see cref="F:System.TimeSpan.Zero" /> 或大于 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1810">Possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-1811">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1811">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="7aa34-1812">该方法不是线程安全。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1812">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="T:System.Messaging.Cursor" />
        <altmember cref="T:System.Messaging.PeekAction" />
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PeekByCorrelationId">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-1813">查看匹配给定相关标识符的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1813">Peeks a message that matches a given correlation identifier.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PeekByCorrelationId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message PeekByCorrelationId (string correlationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message PeekByCorrelationId(string correlationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekByCorrelationId (correlationId As String) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ PeekByCorrelationId(System::String ^ correlationId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="correlationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="correlationId">
          <span data-ttu-id="7aa34-1814">要查看的消息的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1814">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to peek.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-1815">查看匹配给定相关标识符的消息，而且在队列中当前不存在具有指定相关标识符的消息时，立即引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1815">Peeks the message that matches the given correlation identifier and immediately raises an exception if no message with the specified correlation identifier currently exists in the queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-1816">其 <see cref="T:System.Messaging.Message" /> 匹配传入的 <paramref name="correlationId" /> 参数的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1816">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1817">此方法引用的队列中查找<xref:System.Messaging.MessageQueue>的消息其<xref:System.Messaging.Message.CorrelationId%2A>匹配所指定`correlationId`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1817">This method looks in the queue referenced by the <xref:System.Messaging.MessageQueue> for a message whose <xref:System.Messaging.Message.CorrelationId%2A> matches the specified `correlationId` parameter.</span></span> <span data-ttu-id="7aa34-1818">如果不找到任何消息匹配`correlationID`参数，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1818">If no message is found that matches the `correlationID` parameter, an exception is thrown.</span></span>  
  
 <span data-ttu-id="7aa34-1819"><xref:System.Messaging.Message.CorrelationId%2A>属性用于将发送到队列相关联的响应、 报表或确认消息发送到的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1819">The <xref:System.Messaging.Message.CorrelationId%2A> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</span></span>  
  
 <span data-ttu-id="7aa34-1820">其他两种方法，可以查看队列中的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1820">Two other methods allow you to peek messages in a queue.</span></span> <span data-ttu-id="7aa34-1821"><xref:System.Messaging.MessageQueue.Peek%2A>方法返回第一条消息在队列中，与<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法用于检索一条消息，通过指定其唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1821">The <xref:System.Messaging.MessageQueue.Peek%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method is used to retrieve a message by specifying its unique identifier.</span></span>  
  
 <span data-ttu-id="7aa34-1822">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1822">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1823">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1823">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1824">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1824">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1825">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1825">Local computer</span></span>|<span data-ttu-id="7aa34-1826">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1826">Yes</span></span>|  
|<span data-ttu-id="7aa34-1827">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1827">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1828">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1828">Yes</span></span>|  
|<span data-ttu-id="7aa34-1829">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1829">Remote computer</span></span>|<span data-ttu-id="7aa34-1830">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1830">No</span></span>|  
|<span data-ttu-id="7aa34-1831">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1831">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1832">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1832">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-1833">下面的代码示例发送和接收包含订单与队列的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1833">The following code example sends and receives a message that contains an order to and from a queue.</span></span> <span data-ttu-id="7aa34-1834">它特别请求肯定确认当原始消息到达或已从队列中检索。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1834">It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.</span></span>  
  
 [!code-cpp[Message.Acknowledgment#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Acknowledgment/CPP/message_acknowledgment.cpp#1)]
 [!code-csharp[Message.Acknowledgment#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Acknowledgment/CS/message_acknowledgment.cs#1)]
 [!code-vb[Message.Acknowledgment#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Acknowledgment/VB/message_acknowledgment.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7aa34-1835">
            <paramref name="correlationId" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1835">The <paramref name="correlationId" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7aa34-1836">未能找到具有指定 <paramref name="correlationId" /> 的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1836">The message with the specified <paramref name="correlationId" /> could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-1837">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1837">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.CorrelationId" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
      </Docs>
    </Member>
    <Member MemberName="PeekByCorrelationId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message PeekByCorrelationId (string correlationId, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message PeekByCorrelationId(string correlationId, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekByCorrelationId (correlationId As String, timeout As TimeSpan) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ PeekByCorrelationId(System::String ^ correlationId, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="correlationId">
          <span data-ttu-id="7aa34-1838">要查看的消息的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1838">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to peek.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="7aa34-1839">一个 <see cref="T:System.TimeSpan" /> 指示有新消息可用于检查之前等待的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1839">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-1840">查看匹配给定相关标识符的消息，并且一直等到队列中出现具有指定相关标识符的消息或超时过期时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1840">Peeks the message that matches the given correlation identifier and waits until either a message with the specified correlation identifier is available in the queue, or the time-out expires.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-1841">其 <see cref="T:System.Messaging.Message" /> 匹配传入的 <paramref name="correlationId" /> 参数的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1841">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1842">此方法引用的队列中查找<xref:System.Messaging.MessageQueue>的消息其<xref:System.Messaging.Message.CorrelationId%2A>匹配所指定`correlationId`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1842">This method looks in the queue referenced by the <xref:System.Messaging.MessageQueue> for a message whose <xref:System.Messaging.Message.CorrelationId%2A> matches the specified `correlationId` parameter.</span></span> <span data-ttu-id="7aa34-1843">如果不找到任何消息匹配`correlationID`参数，并且没有新消息到达队列中通过指定的时间内`timeout`参数，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1843">If no message is found that matches the `correlationID` parameter, and no new message arrives in the queue within the period specified by the `timeout` parameter, an exception is thrown.</span></span>  
  
 <span data-ttu-id="7aa34-1844">`timeout`参数未指定的总运行时间为此方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1844">The `timeout` parameter does not specify the total running time for this method.</span></span> <span data-ttu-id="7aa34-1845">相反，它指定为新消息到达队列中等待的时间。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1845">Rather, it specifies the time to wait for a new message to arrive in the queue.</span></span> <span data-ttu-id="7aa34-1846">每次有新消息到达时，此方法检查<xref:System.Messaging.Message.CorrelationId%2A>的新消息，以查看其是否符合`correlationId`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1846">Each time a new message arrives, this method examines the <xref:System.Messaging.Message.CorrelationId%2A> of the new message to see if it matches the `correlationId` parameter.</span></span> <span data-ttu-id="7aa34-1847">如果没有，此方法通过启动超时期限，等待另一个新消息到达。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1847">If not, this method starts the time-out period over and waits for another new message to arrive.</span></span> <span data-ttu-id="7aa34-1848">因此，如果新消息继续到达超时时间内，则可能为此方法继续运行; 如果无限期，直到在超时期限过期并且没有任何新的消息到达，或者直到消息到达其<xref:System.Messaging.Message.CorrelationId%2A>匹配`correlationId`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1848">Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <xref:System.Messaging.Message.CorrelationId%2A> matches the `correlationId` parameter.</span></span>  
  
 <span data-ttu-id="7aa34-1849"><xref:System.Messaging.Message.CorrelationId%2A>属性用于将发送到队列相关联的响应、 报表或确认消息发送到的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1849">The <xref:System.Messaging.Message.CorrelationId%2A> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</span></span>  
  
 <span data-ttu-id="7aa34-1850">其他两种方法，可以查看队列中的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1850">Two other methods allow you to peek messages in a queue.</span></span> <span data-ttu-id="7aa34-1851"><xref:System.Messaging.MessageQueue.Peek%2A>方法返回第一条消息在队列中，与<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法用于检索一条消息，通过指定其唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1851">The <xref:System.Messaging.MessageQueue.Peek%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method is used to retrieve a message by specifying its unique identifier.</span></span>  
  
 <span data-ttu-id="7aa34-1852">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1852">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1853">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1853">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1854">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1854">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1855">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1855">Local computer</span></span>|<span data-ttu-id="7aa34-1856">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1856">Yes</span></span>|  
|<span data-ttu-id="7aa34-1857">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1857">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1858">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1858">Yes</span></span>|  
|<span data-ttu-id="7aa34-1859">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1859">Remote computer</span></span>|<span data-ttu-id="7aa34-1860">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1860">No</span></span>|  
|<span data-ttu-id="7aa34-1861">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1861">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1862">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1862">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-1863">以下代码示例演示了 <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%2CSystem.TimeSpan%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1863">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%2CSystem.TimeSpan%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#5](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#5)]
 [!code-csharp[MessageQueue2#5](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7aa34-1864">
            <paramref name="correlationId" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1864">The <paramref name="correlationId" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-1865">为 <paramref name="timeout" /> 参数指定的值无效，可能是 <paramref name="timeout" /> 小于 <see cref="F:System.TimeSpan.Zero" /> 或大于 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1865">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7aa34-1866">具有指定 <paramref name="correlationId" /> 的消息不在队列中，而且在超时过期之前没有到达。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1866">The message with the specified <paramref name="correlationId" /> does not exist in the queue and did not arrive before the time-out expired.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-1867">消息在超时过期前没有到达。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1867">A message did not arrive before the time-out expired.</span>
          </span>
          <span data-ttu-id="7aa34-1868">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1868">-or-</span>
          </span>
          <span data-ttu-id="7aa34-1869">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1869">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="P:System.Messaging.Message.CorrelationId" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PeekById">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-1870">返回具有指定消息标识符的消息的副本，但不从队列中移除消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1870">Returns a copy of the message that has the specified message identifier without removing the message from the queue.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PeekById">
      <MemberSignature Language="C#" Value="public System.Messaging.Message PeekById (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message PeekById(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.PeekById(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekById (id As String) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ PeekById(System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="7aa34-1871">要查看的消息的 <see cref="P:System.Messaging.Message.Id" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1871">The <see cref="P:System.Messaging.Message.Id" /> of the message to peek.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-1872">查看其消息标识符匹配 <paramref name="id" /> 参数的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1872">Peeks the message whose message identifier matches the <paramref name="id" /> parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-1873">
            <see cref="T:System.Messaging.Message" />，其 <see cref="P:System.Messaging.Message.Id" /> 属性匹配 <paramref name="id" /> 参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1873">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1874">使用<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>若要读取，而不必从队列中，删除一条消息，都有一个已知的消息标识符。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1874">Use <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> to read, without removing from the queue, a message that has a known message identifier.</span></span> <span data-ttu-id="7aa34-1875">一条消息的标识符是消息队列企业中，唯一的因此将最多一条消息匹配的队列中给定`id`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1875">The identifier of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given `id` parameter.</span></span> <span data-ttu-id="7aa34-1876">如果队列中当前不包含消息，此重载将引发异常。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1876">This overload throws an exception if the queue does not currently contain the message.</span></span>  
  
 <span data-ttu-id="7aa34-1877">两个其他方法使您得以队列中扫视消息：<xref:System.Messaging.MessageQueue.Peek%2A>和<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1877">Two additional methods allow you to peek messages in a queue: <xref:System.Messaging.MessageQueue.Peek%2A> and <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>.</span></span> <span data-ttu-id="7aa34-1878"><xref:System.Messaging.MessageQueue.Peek%2A>方法返回的第一个消息队列; 中<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>返回确认、 报表或创建第一条消息发送到队列的应用程序生成的响应消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1878">The <xref:System.Messaging.MessageQueue.Peek%2A> method returns the first message in the queue; <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> returns an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</span></span>  
  
 <span data-ttu-id="7aa34-1879">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1879">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1880">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1880">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1881">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1881">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1882">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1882">Local computer</span></span>|<span data-ttu-id="7aa34-1883">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1883">Yes</span></span>|  
|<span data-ttu-id="7aa34-1884">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1884">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1885">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1885">Yes</span></span>|  
|<span data-ttu-id="7aa34-1886">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1886">Remote computer</span></span>|<span data-ttu-id="7aa34-1887">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1887">No</span></span>|  
|<span data-ttu-id="7aa34-1888">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1888">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1889">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1889">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-1890">以下代码示例演示了 <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1890">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.PeekById%28System.String%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#6](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#6)]
 [!code-csharp[MessageQueue2#6](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7aa34-1891">
            <paramref name="id" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1891">The <paramref name="id" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7aa34-1892">不存在具有指定 <paramref name="id" /> 的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1892">No message with the specified <paramref name="id" /> exists.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-1893">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1893">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.Id" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
      </Docs>
    </Member>
    <Member MemberName="PeekById">
      <MemberSignature Language="C#" Value="public System.Messaging.Message PeekById (string id, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message PeekById(string id, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekById (id As String, timeout As TimeSpan) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ PeekById(System::String ^ id, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="7aa34-1894">要查看的消息的 <see cref="P:System.Messaging.Message.Id" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1894">The <see cref="P:System.Messaging.Message.Id" /> of the message to peek.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="7aa34-1895">一个 <see cref="T:System.TimeSpan" /> 指示有新消息可用于检查之前等待的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1895">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-1896">查看其消息标识符匹配 <paramref name="id" /> 参数的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1896">Peeks the message whose message identifier matches the <paramref name="id" /> parameter.</span>
          </span>
          <span data-ttu-id="7aa34-1897">一直等到队列中出现该消息或发生超时。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1897">Waits until the message appears in the queue or a time-out occurs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-1898">
            <see cref="T:System.Messaging.Message" />，其 <see cref="P:System.Messaging.Message.Id" /> 属性匹配 <paramref name="id" /> 参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1898">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1899">使用<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>若要读取，而不必从队列中，删除一条消息，都有一个已知的消息标识符。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1899">Use <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> to read, without removing from the queue, a message that has a known message identifier.</span></span> <span data-ttu-id="7aa34-1900">一条消息的标识符是消息队列企业中，唯一的因此将最多一条消息匹配的队列中给定`id`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1900">The identifier of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given `id` parameter.</span></span> <span data-ttu-id="7aa34-1901">如果队列中当前不包含消息和一条新消息没有到达之前发生超时的时候，此重载将引发异常。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1901">This overload throws an exception if the queue does not currently contain the message and a new message does not arrive before the time-out occurs.</span></span>  
  
 <span data-ttu-id="7aa34-1902">`timeout`参数未指定的总运行时间为此方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1902">The `timeout` parameter does not specify the total running time for this method.</span></span> <span data-ttu-id="7aa34-1903">相反，它指定为新消息到达队列中等待的时间。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1903">Rather, it specifies the time to wait for a new message to arrive in the queue.</span></span> <span data-ttu-id="7aa34-1904">每次有新消息到达时，此方法检查<xref:System.Messaging.Message.Id%2A>的新消息，以查看其是否符合`id`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1904">Each time a new message arrives, this method examines the <xref:System.Messaging.Message.Id%2A> of the new message to see if it matches the `id` parameter.</span></span> <span data-ttu-id="7aa34-1905">如果没有，此方法通过启动超时期限，等待另一个新消息到达。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1905">If not, this method starts the time-out period over and waits for another new message to arrive.</span></span> <span data-ttu-id="7aa34-1906">因此，如果新消息继续到达超时时间内，则可能为此方法继续运行; 如果无限期，直到在超时期限过期并且没有任何新的消息到达，或者直到消息到达其<xref:System.Messaging.Message.Id%2A>匹配`id`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1906">Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <xref:System.Messaging.Message.Id%2A> matches the `id` parameter.</span></span>  
  
 <span data-ttu-id="7aa34-1907">两个其他方法使您得以队列中扫视消息：<xref:System.Messaging.MessageQueue.Peek%2A>和<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1907">Two additional methods allow you to peek messages in a queue: <xref:System.Messaging.MessageQueue.Peek%2A> and <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>.</span></span> <span data-ttu-id="7aa34-1908"><xref:System.Messaging.MessageQueue.Peek%2A>方法返回的第一个消息队列; 中<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>返回确认、 报表或创建第一条消息发送到队列的应用程序生成的响应消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1908">The <xref:System.Messaging.MessageQueue.Peek%2A> method returns the first message in the queue; <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> returns an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</span></span>  
  
 <span data-ttu-id="7aa34-1909">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1909">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1910">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1910">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1911">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1911">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1912">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1912">Local computer</span></span>|<span data-ttu-id="7aa34-1913">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1913">Yes</span></span>|  
|<span data-ttu-id="7aa34-1914">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1914">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1915">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1915">Yes</span></span>|  
|<span data-ttu-id="7aa34-1916">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1916">Remote computer</span></span>|<span data-ttu-id="7aa34-1917">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1917">No</span></span>|  
|<span data-ttu-id="7aa34-1918">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1918">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1919">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1919">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-1920">以下代码示例演示了 <xref:System.Messaging.MessageQueue.PeekById%28System.String%2CSystem.TimeSpan%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1920">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.PeekById%28System.String%2CSystem.TimeSpan%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#7](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#7)]
 [!code-csharp[MessageQueue2#7](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7aa34-1921">
            <paramref name="id" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1921">The <paramref name="id" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-1922">为 <paramref name="timeout" /> 参数指定的值无效，可能是 <paramref name="timeout" /> 小于 <see cref="F:System.TimeSpan.Zero" /> 或大于 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1922">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7aa34-1923">队列中不存在具有指定 <paramref name="id" /> 的消息，并且在 <paramref name="timeout" /> 参数指定的时间段过期之前该消息仍未到达。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1923">The message with the specified <paramref name="id" /> does not exist in the queue and did not arrive before the period specified by the <paramref name="timeout" /> parameter expired.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-1924">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1924">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="P:System.Messaging.Message.Id" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PeekByLookupId">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-1925">在 MSMQ 3.0 中引入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1925">Introduced in MSMQ 3.0.</span>
          </span>
          <span data-ttu-id="7aa34-1926">查看队列中特定的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1926">Peeks at a specific message from the queue.</span>
          </span>
          <span data-ttu-id="7aa34-1927">消息可通过查询标识符来指定，也可以通过其相对于队首或队尾的位置来指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1927">The message can be specified by a lookup identifier or by its position at the front or end of the queue.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PeekByLookupId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message PeekByLookupId (long lookupId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message PeekByLookupId(int64 lookupId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.PeekByLookupId(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekByLookupId (lookupId As Long) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ PeekByLookupId(long lookupId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lookupId" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="lookupId">
          <span data-ttu-id="7aa34-1928">要查看的消息的 <see cref="P:System.Messaging.Message.LookupId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1928">The <see cref="P:System.Messaging.Message.LookupId" /> of the message to peek at.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-1929">在 MSMQ 3.0 中引入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1929">Introduced in MSMQ 3.0.</span>
          </span>
          <span data-ttu-id="7aa34-1930">从非事务性队列中查看与给定查找标识符匹配的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1930">Peeks at the message that matches the given lookup identifier from a non-transactional queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-1931">
            <see cref="T:System.Messaging.Message" />，其 <see cref="P:System.Messaging.Message.LookupId" /> 属性匹配传入的 <paramref name="lookupId" /> 参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1931">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.LookupId" /> property matches the <paramref name="lookupId" /> parameter passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1932">使用此方法读取具有已知的查找标识符的消息，而不必从队列中将其删除。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1932">Use this method to read a message with a known lookup identifier without removing it from the queue.</span></span> <span data-ttu-id="7aa34-1933">如果消息也不会在队列中，此方法将立即引发异常。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1933">This method throws an exception immediately if the message is not in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-1934"><xref:System.Messaging.Message.LookupId%2A>属性的消息是唯一的队列消息所在的位置，因此将最多一条消息匹配的队列中给定`lookupId`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1934">The <xref:System.Messaging.Message.LookupId%2A> property of a message is unique to the queue where the message resides, so there will be at most one message in the queue that matches the given `lookupId` parameter.</span></span>  
  
 <span data-ttu-id="7aa34-1935">读取具有指定的查找标识符的消息并将其从队列删除，请使用<xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1935">To read a message with a specified lookup identifier and remove it from the queue, use the <xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A> method.</span></span>  
  
 <span data-ttu-id="7aa34-1936">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1936">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1937">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1937">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1938">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1938">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1939">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1939">Local computer</span></span>|<span data-ttu-id="7aa34-1940">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1940">Yes</span></span>|  
|<span data-ttu-id="7aa34-1941">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1941">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1942">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1942">Yes</span></span>|  
|<span data-ttu-id="7aa34-1943">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1943">Remote computer</span></span>|<span data-ttu-id="7aa34-1944">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1944">No</span></span>|  
|<span data-ttu-id="7aa34-1945">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1945">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1946">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1946">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="7aa34-1947">未安装 MSMQ 3.0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1947">MSMQ 3.0 is not installed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7aa34-1948">未能找到具有指定 <paramref name="lookupId" /> 的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1948">The message with the specified <paramref name="lookupId" /> could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-1949">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1949">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.LookupId" />
        <altmember cref="M:System.Messaging.MessageQueue.ReceiveByLookupId" />
      </Docs>
    </Member>
    <Member MemberName="PeekByLookupId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message PeekByLookupId (System.Messaging.MessageLookupAction action, long lookupId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message PeekByLookupId(valuetype System.Messaging.MessageLookupAction action, int64 lookupId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.PeekByLookupId(System.Messaging.MessageLookupAction,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekByLookupId (action As MessageLookupAction, lookupId As Long) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ PeekByLookupId(System::Messaging::MessageLookupAction action, long lookupId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Messaging.MessageLookupAction" />
        <Parameter Name="lookupId" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="7aa34-1950">一个 <see cref="T:System.Messaging.MessageLookupAction" /> 值，指定读取队列中消息的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1950">One of the <see cref="T:System.Messaging.MessageLookupAction" /> values, specifying how the message is read in the queue.</span>
          </span>
          <span data-ttu-id="7aa34-1951">指定以下值之一：</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1951">Specify one of the following:</span>
          </span>
          <span data-ttu-id="7aa34-1952">
            <see langword="MessageLookupAction.Current" />：查看由 <c>lookupId</c> 指定的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1952">
              <see langword="MessageLookupAction.Current" />: Peeks at the message specified by <c>lookupId</c>.</span>
          </span>
          <span data-ttu-id="7aa34-1953">
            <see langword="MessageLookupAction.Next" />：查看由 <c>lookupId</c> 指定消息的下一条消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1953">
              <see langword="MessageLookupAction.Next" />: Peeks at the message following the message specified by <c>lookupId</c>.</span>
          </span>
          <span data-ttu-id="7aa34-1954">
            <see langword="MessageLookupAction.Previous" />：查看由 <c>lookupId</c> 指定消息的上一条消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1954">
              <see langword="MessageLookupAction.Previous" />: Peeks at the message preceding the message specified by <c>lookupId</c>.</span>
          </span>
          <span data-ttu-id="7aa34-1955">
            <see langword="MessageLookupAction.First" />：查看队列中的第一条消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1955">
              <see langword="MessageLookupAction.First" />: Peeks at the first message in the queue.</span>
          </span>
          <span data-ttu-id="7aa34-1956">
            <c>lookupId</c> 参数必须设置为 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1956">The <c>lookupId</c> parameter must be set to 0.</span>
          </span>
          <span data-ttu-id="7aa34-1957">
            <see langword="MessageLookupAction.Last" />：查看队列中的最后一条消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1957">
              <see langword="MessageLookupAction.Last" />: Peeks at the last message in the queue.</span>
          </span>
          <span data-ttu-id="7aa34-1958">
            <c>lookupId</c> 参数必须设置为 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1958">The <c>lookupId</c> parameter must be set to 0.</span>
          </span>
        </param>
        <param name="lookupId">
          <span data-ttu-id="7aa34-1959">要查看的消息的 <see cref="P:System.Messaging.Message.LookupId" /> 或者为 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1959">The <see cref="P:System.Messaging.Message.LookupId" /> of the message to peek at, or 0.</span>
          </span>
          <span data-ttu-id="7aa34-1960">访问队列中的第一条和最后一条消息时使用 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1960">0 is used when accessing the first or last message in the queue.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-1961">在 MSMQ 3.0 中引入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1961">Introduced in MSMQ 3.0.</span>
          </span>
          <span data-ttu-id="7aa34-1962">查看队列中特定的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1962">Peeks at a specific message from the queue.</span>
          </span>
          <span data-ttu-id="7aa34-1963">消息可通过查询标识符来指定，也可以通过其相对于队首或队尾的位置来指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1963">The message can be specified by a lookup identifier or by its position at the front or end of the queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-1964">由传入的 <paramref name="action" /> 和 <paramref name="lookupId" /> 参数指定的 <see cref="T:System.Messaging.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1964">The <see cref="T:System.Messaging.Message" /> specified by the <paramref name="action" /> and <paramref name="lookupId" /> parameters passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1965">使用此方法读取具有已知的查找标识符的消息，而不必从队列中将其删除。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1965">Use this method to read a message with a known lookup identifier without removing it from the queue.</span></span> <span data-ttu-id="7aa34-1966">如果消息也不会在队列中，此方法将立即引发异常。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1966">This method throws an exception immediately if the message is not in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-1967"><xref:System.Messaging.Message.LookupId%2A>属性的消息是唯一的队列消息所在的位置，因此将最多一条消息匹配的队列中给定`lookupId`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1967">The <xref:System.Messaging.Message.LookupId%2A> property of a message is unique to the queue where the message resides, so there will be at most one message in the queue that matches the given `lookupId` parameter.</span></span>  
  
 <span data-ttu-id="7aa34-1968">读取具有指定标识符的消息并将其从队列删除，请使用<xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1968">To read a message with a specified identifier and remove it from the queue, use the <xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A> method.</span></span>  
  
 <span data-ttu-id="7aa34-1969">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1969">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1970">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1970">Workgroup mode</span></span>|<span data-ttu-id="7aa34-1971">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-1971">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-1972">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1972">Local computer</span></span>|<span data-ttu-id="7aa34-1973">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1973">Yes</span></span>|  
|<span data-ttu-id="7aa34-1974">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1974">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-1975">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1975">Yes</span></span>|  
|<span data-ttu-id="7aa34-1976">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-1976">Remote computer</span></span>|<span data-ttu-id="7aa34-1977">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-1977">No</span></span>|  
|<span data-ttu-id="7aa34-1978">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-1978">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-1979">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-1979">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="7aa34-1980">未安装 MSMQ 3.0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1980">MSMQ 3.0 is not installed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7aa34-1981">未能找到具有指定 <paramref name="lookupId" /> 的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1981">The message with the specified <paramref name="lookupId" /> could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-1982">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1982">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="7aa34-1983">
            <paramref name="action" /> 参数不是 <see cref="T:System.Messaging.MessageLookupAction" /> 成员之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1983">The <paramref name="action" /> parameter is not one of the <see cref="T:System.Messaging.MessageLookupAction" /> members.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.LookupId" />
        <altmember cref="M:System.Messaging.MessageQueue.ReceiveByLookupId" />
      </Docs>
    </Member>
    <Member MemberName="PeekCompleted">
      <MemberSignature Language="C#" Value="public event System.Messaging.PeekCompletedEventHandler PeekCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Messaging.PeekCompletedEventHandler PeekCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Messaging.MessageQueue.PeekCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PeekCompleted As PeekCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Messaging::PeekCompletedEventHandler ^ PeekCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_PeekCompleted")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.PeekCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-1984">在消息未从队列移除的情况下读取该消息时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1984">Occurs when a message is read without being removed from the queue.</span>
          </span>
          <span data-ttu-id="7aa34-1985">这是异步操作 <see cref="M:System.Messaging.MessageQueue.BeginPeek" /> 的结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1985">This is a result of the asynchronous operation, <see cref="M:System.Messaging.MessageQueue.BeginPeek" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1986"><xref:System.Messaging.MessageQueue.BeginPeek%2A> 在异步处理中用于引发<xref:System.Messaging.MessageQueue.PeekCompleted>事件队列中出现一条消息时。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1986"><xref:System.Messaging.MessageQueue.BeginPeek%2A> is used in asynchronous processing to raise the <xref:System.Messaging.MessageQueue.PeekCompleted> event when a message is available in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-1987"><xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> 用于完成通过调用启动的操作<xref:System.Messaging.MessageQueue.BeginPeek%2A>和扫视消息时<xref:System.Messaging.MessageQueue.PeekCompleted>引发事件。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1987"><xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29> is used to complete the operation initiated by a call to <xref:System.Messaging.MessageQueue.BeginPeek%2A> and peek the message when the <xref:System.Messaging.MessageQueue.PeekCompleted> event is raised.</span></span>  
  
 <span data-ttu-id="7aa34-1988">创建 <xref:System.Messaging.PeekCompletedEventHandler> 委托时，需要标识将处理该事件的方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1988">When you create a <xref:System.Messaging.PeekCompletedEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="7aa34-1989">若要将事件与事件处理程序关联，请将该委托的一个实例添加到事件中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1989">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="7aa34-1990">除非移除了该委托，否则每当发生该事件时就会调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1990">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="7aa34-1991">有关事件处理程序委托的详细信息，请参阅[NIB： 事件和委托](http://msdn.microsoft.com/library/d98fd58b-fa4f-4598-8378-addf4355a115)。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1991">For more information about event handler delegates, see [NIB: Events and Delegates](http://msdn.microsoft.com/library/d98fd58b-fa4f-4598-8378-addf4355a115).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-1992">下面的代码示例创建名为一个事件处理程序`MyPeekCompleted`，将其附加到<xref:System.Messaging.MessageQueue.PeekCompleted>事件处理程序委托，然后调用<xref:System.Messaging.MessageQueue.BeginPeek%2A>启动位于路径的队列上的异步查看操作"。 \myQueue"。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1992">The following code example creates an event handler named `MyPeekCompleted`, attaches it to the <xref:System.Messaging.MessageQueue.PeekCompleted> event handler delegate, and calls <xref:System.Messaging.MessageQueue.BeginPeek%2A> to initiate an asynchronous peek operation on the queue that is located at the path ".\myQueue".</span></span> <span data-ttu-id="7aa34-1993">当<xref:System.Messaging.MessageQueue.PeekCompleted>引发事件，该示例扫视消息，并将其正文写入到屏幕。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1993">When a <xref:System.Messaging.MessageQueue.PeekCompleted> event is raised, the example peeks the message and writes its body to the screen.</span></span> <span data-ttu-id="7aa34-1994">该示例然后调用<xref:System.Messaging.MessageQueue.BeginPeek%2A>以启动新的异步扫视操作</span><span class="sxs-lookup"><span data-stu-id="7aa34-1994">The example then calls <xref:System.Messaging.MessageQueue.BeginPeek%2A> again to initiate a new asynchronous peek operation</span></span>  
  
 [!code-cpp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CPP/mqbeginpeek_noparms.cpp#1)]
 [!code-csharp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CS/mqbeginpeek_noparms.cs#1)]
 [!code-vb[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/VB/mqbeginpeek_noparms.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="T:System.IAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="Purge">
      <MemberSignature Language="C#" Value="public void Purge ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Purge() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Purge" />
      <MemberSignature Language="VB.NET" Value="Public Sub Purge ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Purge();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-1995">删除队列中包含的所有消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-1995">Deletes all the messages contained in the queue.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-1996">清除队列导致消息队列设置队列修改标志，这会影响<xref:System.Messaging.MessageQueue.LastModifyTime%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1996">Purging the queue causes Message Queuing to set the queue modification flag, which affects the <xref:System.Messaging.MessageQueue.LastModifyTime%2A> property.</span></span> <span data-ttu-id="7aa34-1997">从队列中清除的消息都将丢失;它们不发送到死信队列或日志队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1997">Messages that are purged from the queue are lost; they are not sent to the dead-letter queue or the journal queue.</span></span>  
  
 <span data-ttu-id="7aa34-1998">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-1998">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-1999">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-1999">Workgroup mode</span></span>|<span data-ttu-id="7aa34-2000">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-2000">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-2001">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2001">Local computer</span></span>|<span data-ttu-id="7aa34-2002">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2002">Yes</span></span>|  
|<span data-ttu-id="7aa34-2003">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2003">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-2004">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2004">Yes</span></span>|  
|<span data-ttu-id="7aa34-2005">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2005">Remote computer</span></span>|<span data-ttu-id="7aa34-2006">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-2006">No</span></span>|  
|<span data-ttu-id="7aa34-2007">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2007">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-2008">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2008">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-2009">以下代码示例演示了 <xref:System.Messaging.MessageQueue.Purge%2A> 的用法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2009">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.Purge%2A>.</span></span>  
  
 [!code-cpp[MessageQueue2#29](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#29)]
 [!code-csharp[MessageQueue2#29](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-2010">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2010">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageQueue.Close" />
        <altmember cref="M:System.Messaging.MessageQueue.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="QueueName">
      <MemberSignature Language="C#" Value="public string QueueName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QueueName" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.QueueName" />
      <MemberSignature Language="VB.NET" Value="Public Property QueueName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ QueueName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_QueueName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-2011">获取或设置标识队列的友好名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2011">Gets or sets the friendly name that identifies the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7aa34-2012">名称，该名称标识由此 <see cref="T:System.Messaging.MessageQueue" /> 引用的队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2012">The name that identifies the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</span>
          </span>
          <span data-ttu-id="7aa34-2013">该值不能为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2013">The value cannot be <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-2014">你可以组合<xref:System.Messaging.MessageQueue.QueueName%2A>与<xref:System.Messaging.MessageQueue.MachineName%2A>创建一个友好<xref:System.Messaging.MessageQueue.Path%2A>队列的名称。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2014">You can combine the <xref:System.Messaging.MessageQueue.QueueName%2A> with the <xref:System.Messaging.MessageQueue.MachineName%2A> to create a friendly <xref:System.Messaging.MessageQueue.Path%2A> name for the queue.</span></span> <span data-ttu-id="7aa34-2015">友好名称变体的语法<xref:System.Messaging.MessageQueue.Path%2A>属性取决于队列的类型下表中所示。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2015">The syntax for the friendly name variation of the <xref:System.Messaging.MessageQueue.Path%2A> property depends on the type of queue, as shown in the following table.</span></span>  
  
|<span data-ttu-id="7aa34-2016">队列类型</span><span class="sxs-lookup"><span data-stu-id="7aa34-2016">Queue type</span></span>|<span data-ttu-id="7aa34-2017">语法</span><span class="sxs-lookup"><span data-stu-id="7aa34-2017">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="7aa34-2018">公用队列</span><span class="sxs-lookup"><span data-stu-id="7aa34-2018">Public queue</span></span>|`MachineName`\\`QueueName`|  
|<span data-ttu-id="7aa34-2019">专用队列</span><span class="sxs-lookup"><span data-stu-id="7aa34-2019">Private queue</span></span>|`MachineName`\\`Private$`\\`QueueName`|  
|<span data-ttu-id="7aa34-2020">日记队列</span><span class="sxs-lookup"><span data-stu-id="7aa34-2020">Journal queue</span></span>|`MachineName`\\`QueueName`\\`Journal$`|  
  
 <span data-ttu-id="7aa34-2021">使用"。"来表示本地计算机。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2021">Use "." to represent the local computer.</span></span>  
  
 <span data-ttu-id="7aa34-2022">更改<xref:System.Messaging.MessageQueue.QueueName%2A>属性将影响<xref:System.Messaging.MessageQueue.Path%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2022">Changing the <xref:System.Messaging.MessageQueue.QueueName%2A> property affects the <xref:System.Messaging.MessageQueue.Path%2A> property.</span></span> <span data-ttu-id="7aa34-2023">如果你设置<xref:System.Messaging.MessageQueue.QueueName%2A>但不包括设置<xref:System.Messaging.MessageQueue.MachineName%2A>属性，<xref:System.Messaging.MessageQueue.Path%2A>属性变为。\\`QueueName`.</span><span class="sxs-lookup"><span data-stu-id="7aa34-2023">If you set the <xref:System.Messaging.MessageQueue.QueueName%2A> without setting the <xref:System.Messaging.MessageQueue.MachineName%2A> property, the <xref:System.Messaging.MessageQueue.Path%2A> property becomes .\\`QueueName`.</span></span> <span data-ttu-id="7aa34-2024">否则为<xref:System.Messaging.MessageQueue.Path%2A>变得`MachineName` \\ `QueueName`。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2024">Otherwise, the <xref:System.Messaging.MessageQueue.Path%2A> becomes `MachineName`\\`QueueName`.</span></span>  
  
 <span data-ttu-id="7aa34-2025">下表显示此属性是在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2025">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-2026">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-2026">Workgroup mode</span></span>|<span data-ttu-id="7aa34-2027">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-2027">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-2028">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2028">Local computer</span></span>|<span data-ttu-id="7aa34-2029">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2029">Yes</span></span>|  
|<span data-ttu-id="7aa34-2030">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2030">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-2031">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2031">Yes</span></span>|  
|<span data-ttu-id="7aa34-2032">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2032">Remote computer</span></span>|<span data-ttu-id="7aa34-2033">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2033">Yes</span></span>|  
|<span data-ttu-id="7aa34-2034">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2034">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-2035">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-2035">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-2036">下面的代码示例获取和设置的消息队列的值<xref:System.Messaging.MessageQueue.QueueName%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2036">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.QueueName%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#24](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-2037">队列名称为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2037">The queue name is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
        <altmember cref="P:System.Messaging.MessageQueue.MachineName" />
      </Docs>
    </Member>
    <Member MemberName="ReadHandle">
      <MemberSignature Language="C#" Value="public IntPtr ReadHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ReadHandle" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.ReadHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReadHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr ReadHandle { IntPtr get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_ReadHandle")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-2038">获取用于从消息队列读取消息的本机句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2038">Gets the native handle used to read messages from the message queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7aa34-2039">用于查看和接收来自队列的消息的本机队列对象的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2039">A handle to the native queue object that you use for peeking and receiving messages from the queue.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-2040"><xref:System.Messaging.MessageQueue.ReadHandle%2A>提供用于查看和从队列接收消息的消息队列对象的本机 Windows 句柄。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2040">The <xref:System.Messaging.MessageQueue.ReadHandle%2A> provides a native Windows handle to the message queue object that is used for peeking and receiving messages from the queue.</span></span> <span data-ttu-id="7aa34-2041">如果你更改队列的路径，该句柄关闭，并使用新值重新打开。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2041">If you change the path of the queue, the handle is closed and reopened with a new value.</span></span>  
  
 <span data-ttu-id="7aa34-2042">下表显示此属性是在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2042">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-2043">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-2043">Workgroup mode</span></span>|<span data-ttu-id="7aa34-2044">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-2044">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-2045">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2045">Local computer</span></span>|<span data-ttu-id="7aa34-2046">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2046">Yes</span></span>|  
|<span data-ttu-id="7aa34-2047">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2047">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-2048">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2048">Yes</span></span>|  
|<span data-ttu-id="7aa34-2049">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2049">Remote computer</span></span>|<span data-ttu-id="7aa34-2050">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-2050">No</span></span>|  
|<span data-ttu-id="7aa34-2051">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2051">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-2052">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2052">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-2053">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2053">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.CanRead" />
        <altmember cref="P:System.Messaging.MessageQueue.WriteHandle" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Receive">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <threadsafe>
          <span data-ttu-id="7aa34-2054">该方法不是线程安全。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2054">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <summary>
          <span data-ttu-id="7aa34-2055">接收队列中的第一条消息，但不将它从队列中移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2055">Receives the first message in the queue, removing it from the queue.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Receive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Receive() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Receive" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive () As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Receive();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-2056">接收 <see cref="T:System.Messaging.MessageQueue" /> 引用的队列中可用的第一条消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2056">Receives the first message available in the queue referenced by the <see cref="T:System.Messaging.MessageQueue" />.</span>
          </span>
          <span data-ttu-id="7aa34-2057">此调用是同步的，在有可用消息前，它将一直阻止当前线程的执行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2057">This call is synchronous, and blocks the current thread of execution until a message is available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-2058">
            <see cref="T:System.Messaging.Message" />，它引用队列中可用的第一条消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2058">A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-2059">此重载用于接收来自队列的消息或等待，直到在队列中消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2059">Use this overload to receive a message from a queue, or wait until there are messages in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-2060"><xref:System.Messaging.MessageQueue.Receive%2A>方法允许同步读取一条消息，从而它从队列中删除。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2060">The <xref:System.Messaging.MessageQueue.Receive%2A> method allows for the synchronous reading of a message, thereby removing it from the queue.</span></span> <span data-ttu-id="7aa34-2061">后续调用<xref:System.Messaging.MessageQueue.Receive%2A>将返回后面在队列中，或新，优先级高的消息的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2061">Subsequent calls to <xref:System.Messaging.MessageQueue.Receive%2A> will return the messages that follow in the queue, or new, higher priority messages.</span></span>  
  
 <span data-ttu-id="7aa34-2062">若要读取队列中的第一个消息，而不必从队列中删除它，使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2062">To read the first message in a queue without removing it from the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span> <span data-ttu-id="7aa34-2063"><xref:System.Messaging.MessageQueue.Peek%2A>方法始终返回第一条消息在队列中，因此对方法的后续调用将返回相同的消息，除非较高优先级的消息到达队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2063">The <xref:System.Messaging.MessageQueue.Peek%2A> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-2064">使用调用<xref:System.Messaging.MessageQueue.Receive%2A>它是当前线程在等待消息到达队列时可以被阻塞。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2064">Use a call to <xref:System.Messaging.MessageQueue.Receive%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="7aa34-2065">因为此重载<xref:System.Messaging.MessageQueue.Receive%2A>方法指定无限期超时，则应用程序可能会无限期地等待。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2065">Because this overload of the <xref:System.Messaging.MessageQueue.Receive%2A> method specifies an infinite time-out, the application might wait indefinitely.</span></span> <span data-ttu-id="7aa34-2066">如果应用程序处理应继续而不等待消息，请考虑使用异步方法， <xref:System.Messaging.MessageQueue.BeginReceive%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2066">If the application processing should continue without waiting for the message, consider using the asynchronous method, <xref:System.Messaging.MessageQueue.BeginReceive%2A>.</span></span>  
  
 <span data-ttu-id="7aa34-2067">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2067">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-2068">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-2068">Workgroup mode</span></span>|<span data-ttu-id="7aa34-2069">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-2069">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-2070">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2070">Local computer</span></span>|<span data-ttu-id="7aa34-2071">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2071">Yes</span></span>|  
|<span data-ttu-id="7aa34-2072">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2072">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-2073">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2073">Yes</span></span>|  
|<span data-ttu-id="7aa34-2074">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2074">Remote computer</span></span>|<span data-ttu-id="7aa34-2075">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-2075">No</span></span>|  
|<span data-ttu-id="7aa34-2076">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2076">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-2077">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2077">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-2078">下面的代码示例从队列接收消息，并输出到屏幕该消息有关的信息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2078">The following code example receives a message from a queue and outputs information about that message to the screen.</span></span>  
  
 [!code-cpp[MessageQueue.Receive_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Receive_noparms/CPP/mqreceive_noparms.cpp#1)]
 [!code-csharp[MessageQueue.Receive_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Receive_noparms/CS/mqreceive_noparms.cs#1)]
 [!code-vb[MessageQueue.Receive_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Receive_noparms/VB/mqreceive_noparms.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-2079">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2079">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Receive (System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Receive(class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (transaction As MessageQueueTransaction) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Receive(System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="transaction">
          <span data-ttu-id="7aa34-2080">
            <see cref="T:System.Messaging.MessageQueueTransaction" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2080">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-2081">接收 <see cref="T:System.Messaging.MessageQueue" /> 引用的事务性队列中可用的第一条消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2081">Receives the first message available in the transactional queue referenced by the <see cref="T:System.Messaging.MessageQueue" />.</span>
          </span>
          <span data-ttu-id="7aa34-2082">此调用是同步的，在有可用消息前，它将一直阻止当前线程的执行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2082">This call is synchronous, and blocks the current thread of execution until a message is available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-2083">
            <see cref="T:System.Messaging.Message" />，它引用队列中可用的第一条消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2083">A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-2084">使用此重载用于从使用由定义的内部事务上下文的事务性队列接收消息`transaction`参数或等待队列中没有消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2084">Use this overload to receive a message from a transactional queue using the internal transaction context defined by the `transaction` parameter, or wait until there are messages in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-2085"><xref:System.Messaging.MessageQueue.Receive%2A>方法允许同步读取一条消息，从而它从队列中删除。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2085">The <xref:System.Messaging.MessageQueue.Receive%2A> method allows for the synchronous reading of a message, thereby removing it from the queue.</span></span> <span data-ttu-id="7aa34-2086">后续调用<xref:System.Messaging.MessageQueue.Receive%2A>将返回后面的消息队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2086">Subsequent calls to <xref:System.Messaging.MessageQueue.Receive%2A> will return the messages that follow in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-2087">因为此方法调用事务性队列，接收的消息将返回到队列如果则中止此事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2087">Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="7aa34-2088">消息永久性不删除从队列直到提交事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2088">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="7aa34-2089">若要读取队列中的第一个消息，而不必从队列中删除它，使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2089">To read the first message in a queue without removing it from the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span> <span data-ttu-id="7aa34-2090"><xref:System.Messaging.MessageQueue.Peek%2A>方法始终返回第一条消息在队列中，因此对方法的后续调用将返回相同的消息，除非较高优先级的消息到达队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2090">The <xref:System.Messaging.MessageQueue.Peek%2A> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="7aa34-2091">没有与通过调用返回的消息关联事务上下文<xref:System.Messaging.MessageQueue.Peek%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2091">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.Peek%2A>.</span></span> <span data-ttu-id="7aa34-2092">因为<xref:System.Messaging.MessageQueue.Peek%2A>不会的删除队列中的任何消息，将通过调用回滚任何内容<xref:System.Messaging.MessageQueueTransaction.Abort%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2092">Because <xref:System.Messaging.MessageQueue.Peek%2A> does not remove any messages in the queue, there would be nothing to roll back by a call to <xref:System.Messaging.MessageQueueTransaction.Abort%2A>.</span></span>  
  
 <span data-ttu-id="7aa34-2093">使用调用<xref:System.Messaging.MessageQueue.Receive%2A>它是当前线程在等待消息到达队列时可以被阻塞。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2093">Use a call to <xref:System.Messaging.MessageQueue.Receive%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="7aa34-2094">因为此重载<xref:System.Messaging.MessageQueue.Receive%2A>方法指定无限期超时，则应用程序可能会无限期地等待。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2094">Because this overload of the <xref:System.Messaging.MessageQueue.Receive%2A> method specifies an infinite time-out, the application might wait indefinitely.</span></span> <span data-ttu-id="7aa34-2095">如果应用程序处理应继续而不等待消息，请考虑使用异步方法， <xref:System.Messaging.MessageQueue.BeginReceive%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2095">If the application processing should continue without waiting for the message, consider using the asynchronous method, <xref:System.Messaging.MessageQueue.BeginReceive%2A>.</span></span>  
  
 <span data-ttu-id="7aa34-2096">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2096">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-2097">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-2097">Workgroup mode</span></span>|<span data-ttu-id="7aa34-2098">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-2098">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-2099">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2099">Local computer</span></span>|<span data-ttu-id="7aa34-2100">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2100">Yes</span></span>|  
|<span data-ttu-id="7aa34-2101">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2101">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-2102">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2102">Yes</span></span>|  
|<span data-ttu-id="7aa34-2103">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2103">Remote computer</span></span>|<span data-ttu-id="7aa34-2104">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-2104">No</span></span>|  
|<span data-ttu-id="7aa34-2105">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2105">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-2106">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2106">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-2107">下面的代码示例连接到本地计算机上的事务性队列并向队列发送消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2107">The following code example connects to a transactional queue on the local computer and sends a message to the queue.</span></span> <span data-ttu-id="7aa34-2108">然后，它接收包含订单的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2108">It then receives the message that contains an order.</span></span> <span data-ttu-id="7aa34-2109">如果遇到非事务性队列，则会引发异常并回滚事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2109">If it encounters a non-transactional queue, it will throw and exception and rollback the transaction.</span></span>  
  
 [!code-cpp[MessageQueue.Receive_transaction#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Receive_transaction/CPP/mqreceive_transaction.cpp#1)]
 [!code-csharp[MessageQueue.Receive_transaction#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Receive_transaction/CS/mqreceive_transaction.cs#1)]
 [!code-vb[MessageQueue.Receive_transaction#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Receive_transaction/VB/mqreceive_transaction.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-2110">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2110">An error occurred when accessing a Message Queuing method.</span>
          </span>
          <span data-ttu-id="7aa34-2111">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2111">-or-</span>
          </span>
          <span data-ttu-id="7aa34-2112">该队列为非事务性队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2112">The queue is non-transactional.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="7aa34-2113">该方法不是线程安全。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2113">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Receive (System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Receive(valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (transactionType As MessageQueueTransactionType) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Receive(System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="transactionType">
          <span data-ttu-id="7aa34-2114">
            <see cref="T:System.Messaging.MessageQueueTransactionType" /> 值之一，它描述与消息关联的事务上下文的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2114">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-2115">接收 <see cref="T:System.Messaging.MessageQueue" /> 引用的队列中可用的第一条消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2115">Receives the first message available in the queue referenced by the <see cref="T:System.Messaging.MessageQueue" />.</span>
          </span>
          <span data-ttu-id="7aa34-2116">此调用是同步的，在有可用消息前，它将一直阻止当前线程的执行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2116">This call is synchronous, and blocks the current thread of execution until a message is available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-2117">
            <see cref="T:System.Messaging.Message" />，它引用队列中可用的第一条消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2117">A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-2118">使用此重载用于使用定义的事务上下文从队列接收消息`transactionType`参数或等待队列中没有消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2118">Use this overload to receive a message from a queue using a transaction context defined by the `transactionType` parameter, or wait until there are messages in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-2119">指定`Automatic`为`transactionType`参数，如果已存在外部事务上下文附加到你想要用于接收消息的线程。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2119">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</span></span> <span data-ttu-id="7aa34-2120">指定`Single`如果你想要接收的消息作为单个内部事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2120">Specify `Single` if you want to receive the message as a single internal transaction.</span></span> <span data-ttu-id="7aa34-2121">你可以指定`None`如果你想要接收来自外部事务上下文事务性队列的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2121">You can specify `None` if you want to receive a message from a transactional queue outside of a transaction context.</span></span>  
  
 <span data-ttu-id="7aa34-2122"><xref:System.Messaging.MessageQueue.Receive%2A>方法允许同步读取一条消息，从而它从队列中删除。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2122">The <xref:System.Messaging.MessageQueue.Receive%2A> method allows for the synchronous reading of a message, thereby removing it from the queue.</span></span> <span data-ttu-id="7aa34-2123">后续调用<xref:System.Messaging.MessageQueue.Receive%2A>将返回后面的消息队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2123">Subsequent calls to <xref:System.Messaging.MessageQueue.Receive%2A> will return the messages that follow in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-2124">如果调用此方法用于从事务性队列接收消息，接收的消息将返回到队列如果则中止此事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2124">If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="7aa34-2125">消息永久性不删除从队列直到提交事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2125">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="7aa34-2126">若要读取队列中的第一个消息，而不必从队列中删除它，使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2126">To read the first message in a queue without removing it from the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span> <span data-ttu-id="7aa34-2127"><xref:System.Messaging.MessageQueue.Peek%2A>方法始终返回第一条消息在队列中，因此对方法的后续调用将返回相同的消息，除非较高优先级的消息到达队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2127">The <xref:System.Messaging.MessageQueue.Peek%2A> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="7aa34-2128">没有与通过调用返回的消息关联事务上下文<xref:System.Messaging.MessageQueue.Peek%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2128">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.Peek%2A>.</span></span> <span data-ttu-id="7aa34-2129">因为<xref:System.Messaging.MessageQueue.Peek%2A>不会的删除队列中的任何消息，将通过调用回滚任何内容<xref:System.Messaging.MessageQueueTransaction.Abort%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2129">Because <xref:System.Messaging.MessageQueue.Peek%2A> does not remove any messages in the queue, there would be nothing to roll back by a call to <xref:System.Messaging.MessageQueueTransaction.Abort%2A>.</span></span>  
  
 <span data-ttu-id="7aa34-2130">使用调用<xref:System.Messaging.MessageQueue.Receive%2A>它是当前线程在等待消息到达队列时可以被阻塞。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2130">Use a call to <xref:System.Messaging.MessageQueue.Receive%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="7aa34-2131">因为此重载<xref:System.Messaging.MessageQueue.Receive%2A>方法指定无限期超时，则应用程序可能会无限期地等待。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2131">Because this overload of the <xref:System.Messaging.MessageQueue.Receive%2A> method specifies an infinite time-out, the application might wait indefinitely.</span></span> <span data-ttu-id="7aa34-2132">如果应用程序处理应继续而不等待消息，请考虑使用异步方法， <xref:System.Messaging.MessageQueue.BeginReceive%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2132">If the application processing should continue without waiting for the message, consider using the asynchronous method, <xref:System.Messaging.MessageQueue.BeginReceive%2A>.</span></span>  
  
 <span data-ttu-id="7aa34-2133">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2133">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-2134">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-2134">Workgroup mode</span></span>|<span data-ttu-id="7aa34-2135">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-2135">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-2136">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2136">Local computer</span></span>|<span data-ttu-id="7aa34-2137">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2137">Yes</span></span>|  
|<span data-ttu-id="7aa34-2138">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2138">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-2139">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2139">Yes</span></span>|  
|<span data-ttu-id="7aa34-2140">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2140">Remote computer</span></span>|<span data-ttu-id="7aa34-2141">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-2141">No</span></span>|  
|<span data-ttu-id="7aa34-2142">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2142">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-2143">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2143">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-2144">以下代码示例演示了 <xref:System.Messaging.MessageQueue.Receive%28System.Messaging.MessageQueueTransactionType%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2144">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.Receive%28System.Messaging.MessageQueueTransactionType%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#9](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#9)]
 [!code-csharp[MessageQueue2#9](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-2145">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2145">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="7aa34-2146">
            <paramref name="transactionType" /> 参数不是 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成员之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2146">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="7aa34-2147">该方法不是线程安全。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2147">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Receive (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Receive(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (timeout As TimeSpan) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Receive(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="7aa34-2148">一个 <see cref="T:System.TimeSpan" /> 指示有新消息可用于检查之前等待的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2148">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-2149">接收由 <see cref="T:System.Messaging.MessageQueue" /> 引用的队列中的第一条可用消息，并且一直等到队列中有可用消息或超时过期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2149">Receives the first message available in the queue referenced by the <see cref="T:System.Messaging.MessageQueue" /> and waits until either a message is available in the queue, or the time-out expires.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-2150">
            <see cref="T:System.Messaging.Message" />，它引用队列中可用的第一条消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2150">A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-2151">使用此重载接收消息并在队列中没有消息时在指定的时间段内返回。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2151">Use this overload to receive a message and return in a specified period of time if there are no messages in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-2152"><xref:System.Messaging.MessageQueue.Receive%2A>方法允许一条消息，同步读取从队列中删除它。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2152">The <xref:System.Messaging.MessageQueue.Receive%2A> method allows for the synchronous reading of a message, removing it from the queue.</span></span> <span data-ttu-id="7aa34-2153">后续调用<xref:System.Messaging.MessageQueue.Receive%2A>将返回后面在队列中，或新，优先级高的消息的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2153">Subsequent calls to <xref:System.Messaging.MessageQueue.Receive%2A> will return the messages that follow in the queue, or new, higher priority messages.</span></span>  
  
 <span data-ttu-id="7aa34-2154">若要读取队列中的第一个消息，而不必从队列中删除它，使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2154">To read the first message in a queue without removing it from the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span> <span data-ttu-id="7aa34-2155"><xref:System.Messaging.MessageQueue.Peek%2A>方法始终返回第一条消息在队列中，因此对方法的后续调用将返回相同的消息，除非较高优先级的消息到达队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2155">The <xref:System.Messaging.MessageQueue.Peek%2A> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-2156">使用调用<xref:System.Messaging.MessageQueue.Receive%2A>它是当前线程在等待消息到达队列时可以被阻塞。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2156">Use a call to <xref:System.Messaging.MessageQueue.Receive%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="7aa34-2157">线程将被阻止给定的时间段的时间，或者如果你指定的值<xref:System.Messaging.MessageQueue.InfiniteTimeout>为`timeout`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2157">The thread will be blocked for the given period of time, or indefinitely if you specified the value <xref:System.Messaging.MessageQueue.InfiniteTimeout> for the `timeout` parameter.</span></span> <span data-ttu-id="7aa34-2158">如果应用程序处理应继续而不等待一条消息，请考虑使用异步方法， <xref:System.Messaging.MessageQueue.BeginReceive%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2158">If the application processing should continue without waiting for a message, consider using the asynchronous method, <xref:System.Messaging.MessageQueue.BeginReceive%2A>.</span></span>  
  
 <span data-ttu-id="7aa34-2159">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2159">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-2160">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-2160">Workgroup mode</span></span>|<span data-ttu-id="7aa34-2161">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-2161">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-2162">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2162">Local computer</span></span>|<span data-ttu-id="7aa34-2163">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2163">Yes</span></span>|  
|<span data-ttu-id="7aa34-2164">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2164">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-2165">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2165">Yes</span></span>|  
|<span data-ttu-id="7aa34-2166">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2166">Remote computer</span></span>|<span data-ttu-id="7aa34-2167">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-2167">No</span></span>|  
|<span data-ttu-id="7aa34-2168">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2168">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-2169">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2169">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-2170">下面的代码示例从队列接收消息，并输出到屏幕该消息有关的信息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2170">The following code example receives a message from a queue and outputs information about that message to the screen.</span></span> <span data-ttu-id="7aa34-2171">示例暂停执行时等待消息到达队列中最多为 5 秒。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2171">The example pauses execution for up to five seconds while waiting for a message to arrive in the queue.</span></span>  
  
 [!code-cpp[MessageQueue.Receive_timeout#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Receive_timeout/CPP/mqreceive_timeout.cpp#1)]
 [!code-csharp[MessageQueue.Receive_timeout#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Receive_timeout/CS/mqreceive_timeout.cs#1)]
 [!code-vb[MessageQueue.Receive_timeout#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Receive_timeout/VB/mqreceive_timeout.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-2172">为 <paramref name="timeout" /> 参数指定的值无效，可能是 <paramref name="timeout" /> 小于 <see cref="F:System.TimeSpan.Zero" /> 或大于 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2172">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-2173">在超时过期之前消息没有到达队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2173">A message did not arrive in the queue before the time-out expired.</span>
          </span>
          <span data-ttu-id="7aa34-2174">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2174">-or-</span>
          </span>
          <span data-ttu-id="7aa34-2175">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2175">An error occurred when accessing a Message Queuing method</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="7aa34-2176">该方法不是线程安全。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2176">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Receive (TimeSpan timeout, System.Messaging.Cursor cursor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Receive(valuetype System.TimeSpan timeout, class System.Messaging.Cursor cursor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Receive(TimeSpan timeout, System::Messaging::Cursor ^ cursor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cursor" Type="System.Messaging.Cursor" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="7aa34-2177">一个 <see cref="T:System.TimeSpan" /> 指示有新消息可用于检查之前等待的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2177">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span>
          </span>
        </param>
        <param name="cursor">
          <span data-ttu-id="7aa34-2178">维持消息队列中特定位置的 <see cref="T:System.Messaging.Cursor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2178">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-2179">使用指定的游标接收队列中的当前消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2179">Receives the current message in the queue, using a specified cursor.</span>
          </span>
          <span data-ttu-id="7aa34-2180">如果没有可用的消息，此方法将等待，直到有可用的消息或超时到期为止。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2180">If no message is available, this method waits until either a message is available, or the time-out expires.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-2181">
            <see cref="T:System.Messaging.Message" />，它引用队列中可用的第一条消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2181">A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-2182">为 <paramref name="timeout" /> 参数指定的值无效，可能是 <paramref name="timeout" /> 小于 <see cref="F:System.TimeSpan.Zero" /> 或大于 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2182">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-2183">在超时过期之前消息没有到达队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2183">A message did not arrive in the queue before the time-out expired.</span>
          </span>
          <span data-ttu-id="7aa34-2184">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2184">-or-</span>
          </span>
          <span data-ttu-id="7aa34-2185">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2185">An error occurred when accessing a Message Queuing method</span>
          </span>
          <span data-ttu-id="7aa34-2186">使用此重载接收消息并在队列中没有消息时在指定的时间段内返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2186">Use this overload to receive a message and return in a specified period of time if there are no messages in the queue.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="7aa34-2187">该方法不是线程安全。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2187">The method is not thread safe.</span>
          </span>
        </threadsafe>
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Receive (TimeSpan timeout, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Receive(valuetype System.TimeSpan timeout, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (timeout As TimeSpan, transaction As MessageQueueTransaction) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Receive(TimeSpan timeout, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="7aa34-2188">一个 <see cref="T:System.TimeSpan" /> 指示有新消息可用于检查之前等待的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2188">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span>
          </span>
        </param>
        <param name="transaction">
          <span data-ttu-id="7aa34-2189">
            <see cref="T:System.Messaging.MessageQueueTransaction" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2189">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-2190">接收由 <see cref="T:System.Messaging.MessageQueue" /> 引用的事务性队列中的第一条可用消息，并且一直等到队列中有可用消息或超时过期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2190">Receives the first message available in the transactional queue referenced by the <see cref="T:System.Messaging.MessageQueue" /> and waits until either a message is available in the queue, or the time-out expires.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-2191">
            <see cref="T:System.Messaging.Message" />，它引用队列中可用的第一条消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2191">A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-2192">使用此重载用于从使用由定义的内部事务上下文的事务性队列接收消息`transaction`参数，并返回在指定时间段内是否存在任何消息队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2192">Use this overload to receive a message from a transactional queue using the internal transaction context defined by the `transaction` parameter, and return within a specified period of time if there are no messages in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-2193"><xref:System.Messaging.MessageQueue.Receive%2A>方法允许同步读取一条消息，从而它从队列中删除。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2193">The <xref:System.Messaging.MessageQueue.Receive%2A> method allows for the synchronous reading of a message, thereby removing it from the queue.</span></span> <span data-ttu-id="7aa34-2194">后续调用<xref:System.Messaging.MessageQueue.Receive%2A>将返回后面的消息队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2194">Subsequent calls to <xref:System.Messaging.MessageQueue.Receive%2A> will return the messages that follow in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-2195">因为此方法调用事务性队列，接收的消息将返回到队列如果则中止此事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2195">Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="7aa34-2196">消息永久性不删除从队列直到提交事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2196">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="7aa34-2197">若要读取队列中的第一个消息，而不必从队列中删除它，使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2197">To read the first message in a queue without removing it from the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span> <span data-ttu-id="7aa34-2198"><xref:System.Messaging.MessageQueue.Peek%2A>方法始终返回第一条消息在队列中，因此对方法的后续调用将返回相同的消息，除非较高优先级的消息到达队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2198">The <xref:System.Messaging.MessageQueue.Peek%2A> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="7aa34-2199">没有与通过调用返回的消息关联事务上下文<xref:System.Messaging.MessageQueue.Peek%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2199">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.Peek%2A>.</span></span> <span data-ttu-id="7aa34-2200">因为<xref:System.Messaging.MessageQueue.Peek%2A>不会的删除队列中的任何消息，将通过调用回滚任何内容<xref:System.Messaging.MessageQueueTransaction.Abort%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2200">Because <xref:System.Messaging.MessageQueue.Peek%2A> does not remove any messages in the queue, there would be nothing to roll back by a call to <xref:System.Messaging.MessageQueueTransaction.Abort%2A>.</span></span>  
  
 <span data-ttu-id="7aa34-2201">使用调用<xref:System.Messaging.MessageQueue.Receive%2A>它是当前线程在等待消息到达队列时可以被阻塞。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2201">Use a call to <xref:System.Messaging.MessageQueue.Receive%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="7aa34-2202">线程将被阻止给定的时间段的时间，或者如果你指定的值<xref:System.Messaging.MessageQueue.InfiniteTimeout>为`timeout`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2202">The thread will be blocked for the given period of time, or indefinitely if you specified the value <xref:System.Messaging.MessageQueue.InfiniteTimeout> for the `timeout` parameter.</span></span> <span data-ttu-id="7aa34-2203">如果应用程序处理应继续而不等待一条消息，请考虑使用异步方法， <xref:System.Messaging.MessageQueue.BeginReceive%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2203">If the application processing should continue without waiting for a message, consider using the asynchronous method, <xref:System.Messaging.MessageQueue.BeginReceive%2A>.</span></span>  
  
 <span data-ttu-id="7aa34-2204">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2204">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-2205">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-2205">Workgroup mode</span></span>|<span data-ttu-id="7aa34-2206">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-2206">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-2207">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2207">Local computer</span></span>|<span data-ttu-id="7aa34-2208">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2208">Yes</span></span>|  
|<span data-ttu-id="7aa34-2209">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2209">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-2210">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2210">Yes</span></span>|  
|<span data-ttu-id="7aa34-2211">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2211">Remote computer</span></span>|<span data-ttu-id="7aa34-2212">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-2212">No</span></span>|  
|<span data-ttu-id="7aa34-2213">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2213">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-2214">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2214">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-2215">下面的代码示例演示如何使用此方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2215">The following code example demonstrates the use of this method.</span></span>  
  
 [!code-cpp[MessageQueue.Receive_TimeoutTransaction#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Receive_TimeoutTransaction/CPP/mqreceive_timeouttransaction.cpp#1)]
 [!code-csharp[MessageQueue.Receive_TimeoutTransaction#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Receive_TimeoutTransaction/CS/mqreceive_timeouttransaction.cs#1)]
 [!code-vb[MessageQueue.Receive_TimeoutTransaction#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Receive_TimeoutTransaction/VB/mqreceive_timeouttransaction.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-2216">为 <paramref name="timeout" /> 参数指定的值无效，可能是 <paramref name="timeout" /> 小于 <see cref="F:System.TimeSpan.Zero" /> 或大于 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2216">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-2217">在超时过期之前消息没有到达队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2217">A message did not arrive in the queue before the time-out expired.</span>
          </span>
          <span data-ttu-id="7aa34-2218">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2218">-or-</span>
          </span>
          <span data-ttu-id="7aa34-2219">该队列为非事务性队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2219">The queue is non-transactional.</span>
          </span>
          <span data-ttu-id="7aa34-2220">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2220">-or-</span>
          </span>
          <span data-ttu-id="7aa34-2221">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2221">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="7aa34-2222">该方法不是线程安全。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2222">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Receive (TimeSpan timeout, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Receive(valuetype System.TimeSpan timeout, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (timeout As TimeSpan, transactionType As MessageQueueTransactionType) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Receive(TimeSpan timeout, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="7aa34-2223">一个 <see cref="T:System.TimeSpan" /> 指示有新消息可用于检查之前等待的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2223">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span>
          </span>
        </param>
        <param name="transactionType">
          <span data-ttu-id="7aa34-2224">
            <see cref="T:System.Messaging.MessageQueueTransactionType" /> 值之一，它描述与消息关联的事务上下文的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2224">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-2225">接收 <see cref="T:System.Messaging.MessageQueue" /> 引用的队列中可用的第一条消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2225">Receives the first message available in the queue referenced by the <see cref="T:System.Messaging.MessageQueue" />.</span>
          </span>
          <span data-ttu-id="7aa34-2226">此调用是同步的，并且一直等到队列中有可用的消息或超时到期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2226">This call is synchronous, and waits until either a message is available in the queue, or the time-out expires.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-2227">
            <see cref="T:System.Messaging.Message" />，它引用队列中可用的第一条消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2227">A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-2228">使用此重载用于使用定义的事务上下文从队列接收消息`transactionType`参数，并返回在指定时间段内是否存在任何消息队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2228">Use this overload to receive a message from a queue using a transaction context defined by the `transactionType` parameter, and return in a specified period of time if there are no messages in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-2229">指定`Automatic`为`transactionType`参数，如果已存在外部事务上下文附加到你想要用于接收消息的线程。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2229">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</span></span> <span data-ttu-id="7aa34-2230">指定`Single`如果你想要接收的消息作为单个内部事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2230">Specify `Single` if you want to receive the message as a single internal transaction.</span></span> <span data-ttu-id="7aa34-2231">你可以指定`None`如果你想要接收来自外部事务上下文事务性队列的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2231">You can specify `None` if you want to receive a message from a transactional queue outside of a transaction context.</span></span>  
  
 <span data-ttu-id="7aa34-2232"><xref:System.Messaging.MessageQueue.Receive%2A>方法允许同步读取一条消息，从而它从队列中删除。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2232">The <xref:System.Messaging.MessageQueue.Receive%2A> method allows for the synchronous reading of a message, thereby removing it from the queue.</span></span> <span data-ttu-id="7aa34-2233">后续调用<xref:System.Messaging.MessageQueue.Receive%2A>将返回后面的消息队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2233">Subsequent calls to <xref:System.Messaging.MessageQueue.Receive%2A> will return the messages that follow in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-2234">如果调用此方法用于从事务性队列接收消息，接收的消息将返回到队列如果则中止此事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2234">If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="7aa34-2235">消息永久性不删除从队列直到提交事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2235">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="7aa34-2236">若要读取队列中的第一个消息，而不必从队列中删除它，使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2236">To read the first message in a queue without removing it from the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span> <span data-ttu-id="7aa34-2237"><xref:System.Messaging.MessageQueue.Peek%2A>方法始终返回第一条消息在队列中，因此对方法的后续调用将返回相同的消息，除非较高优先级的消息到达队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2237">The <xref:System.Messaging.MessageQueue.Peek%2A> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="7aa34-2238">没有与通过调用返回的消息关联事务上下文<xref:System.Messaging.MessageQueue.Peek%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2238">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.Peek%2A>.</span></span> <span data-ttu-id="7aa34-2239">因为<xref:System.Messaging.MessageQueue.Peek%2A>不会的删除队列中的任何消息，将通过调用回滚任何内容<xref:System.Messaging.MessageQueueTransaction.Abort%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2239">Because <xref:System.Messaging.MessageQueue.Peek%2A> does not remove any messages in the queue, there would be nothing to roll back by a call to <xref:System.Messaging.MessageQueueTransaction.Abort%2A>.</span></span>  
  
 <span data-ttu-id="7aa34-2240">使用调用<xref:System.Messaging.MessageQueue.Receive%2A>它是当前线程在等待消息到达队列时可以被阻塞。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2240">Use a call to <xref:System.Messaging.MessageQueue.Receive%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="7aa34-2241">线程将被阻止给定的时间段的时间，或者如果你指定的值<xref:System.Messaging.MessageQueue.InfiniteTimeout>为`timeout`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2241">The thread will be blocked for the given period of time, or indefinitely if you specified the value <xref:System.Messaging.MessageQueue.InfiniteTimeout> for the `timeout` parameter.</span></span> <span data-ttu-id="7aa34-2242">如果应用程序处理应继续而不等待一条消息，请考虑使用异步方法， <xref:System.Messaging.MessageQueue.BeginReceive%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2242">If the application processing should continue without waiting for a message, consider using the asynchronous method, <xref:System.Messaging.MessageQueue.BeginReceive%2A>.</span></span>  
  
 <span data-ttu-id="7aa34-2243">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2243">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-2244">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-2244">Workgroup mode</span></span>|<span data-ttu-id="7aa34-2245">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-2245">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-2246">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2246">Local computer</span></span>|<span data-ttu-id="7aa34-2247">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2247">Yes</span></span>|  
|<span data-ttu-id="7aa34-2248">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2248">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-2249">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2249">Yes</span></span>|  
|<span data-ttu-id="7aa34-2250">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2250">Remote computer</span></span>|<span data-ttu-id="7aa34-2251">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-2251">No</span></span>|  
|<span data-ttu-id="7aa34-2252">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2252">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-2253">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2253">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-2254">下面的代码示例演示如何使用此方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2254">The following code example demonstrates the use of this method.</span></span>  
  
 [!code-cpp[MessageQueue2#8](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#8)]
 [!code-csharp[MessageQueue2#8](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-2255">为 <paramref name="timeout" /> 参数指定的值无效，可能是 <paramref name="timeout" /> 小于 <see cref="F:System.TimeSpan.Zero" /> 或大于 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2255">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="7aa34-2256">
            <paramref name="transactionType" /> 参数不是 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成员之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2256">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-2257">在超时过期之前消息没有到达队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2257">A message did not arrive in the queue before the time-out expired.</span>
          </span>
          <span data-ttu-id="7aa34-2258">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2258">-or-</span>
          </span>
          <span data-ttu-id="7aa34-2259">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2259">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="7aa34-2260">该方法不是线程安全。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2260">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Receive (TimeSpan timeout, System.Messaging.Cursor cursor, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Receive(valuetype System.TimeSpan timeout, class System.Messaging.Cursor cursor, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Receive(TimeSpan timeout, System::Messaging::Cursor ^ cursor, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cursor" Type="System.Messaging.Cursor" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="7aa34-2261">一个 <see cref="T:System.TimeSpan" /> 指示有新消息可用于检查之前等待的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2261">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span>
          </span>
        </param>
        <param name="cursor">
          <span data-ttu-id="7aa34-2262">维持消息队列中特定位置的 <see cref="T:System.Messaging.Cursor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2262">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</span>
          </span>
        </param>
        <param name="transaction">
          <span data-ttu-id="7aa34-2263">
            <see cref="T:System.Messaging.MessageQueueTransaction" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2263">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-2264">使用指定的游标接收队列中的当前消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2264">Receives the current message in the queue, using a specified cursor.</span>
          </span>
          <span data-ttu-id="7aa34-2265">如果没有可用的消息，此方法将等待，直到有可用的消息或超时到期为止。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2265">If no message is available, this method waits until either a message is available, or the time-out expires.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-2266">一个 <see cref="T:System.Messaging.Message" />，它引用队列中的一条消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2266">A <see cref="T:System.Messaging.Message" /> that references a message in the queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-2267">使用此重载用于从使用由定义的内部事务上下文的事务性队列接收消息`transaction`参数，并返回在指定时间段内是否存在任何消息队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2267">Use this overload to receive a message from a transactional queue using the internal transaction context defined by the `transaction` parameter, and return within a specified period of time if there are no messages in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-2268"><xref:System.Messaging.MessageQueue.Receive%2A>方法允许同步读取一条消息，从而它从队列中删除。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2268">The <xref:System.Messaging.MessageQueue.Receive%2A> method allows for the synchronous reading of a message, thereby removing it from the queue.</span></span> <span data-ttu-id="7aa34-2269">后续调用<xref:System.Messaging.MessageQueue.Receive%2A>返回后面的消息队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2269">Subsequent calls to <xref:System.Messaging.MessageQueue.Receive%2A> return the messages that follow in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-2270">因为事务性队列上调用此方法，则中止此事务如果收到的消息则返回到队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2270">Because this method is called on a transactional queue, the message that is received is returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="7aa34-2271">消息永久性不删除从队列直到提交事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2271">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="7aa34-2272">若要读取队列中的邮件，而不必从队列中删除它，使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2272">To read a message in a queue without removing it from the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span> <span data-ttu-id="7aa34-2273">没有与通过调用返回的消息关联事务上下文<xref:System.Messaging.MessageQueue.Peek%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2273">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.Peek%2A>.</span></span> <span data-ttu-id="7aa34-2274">因为<xref:System.Messaging.MessageQueue.Peek%2A>不会的删除队列中的任何消息，不需要通过调用回滚<xref:System.Messaging.MessageQueueTransaction.Abort%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2274">Because <xref:System.Messaging.MessageQueue.Peek%2A> does not remove any messages in the queue, there is nothing to roll back by a call to <xref:System.Messaging.MessageQueueTransaction.Abort%2A>.</span></span>  
  
 <span data-ttu-id="7aa34-2275">使用调用<xref:System.Messaging.MessageQueue.Receive%2A>它是当前线程在等待消息到达队列时可以被阻塞。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2275">Use a call to <xref:System.Messaging.MessageQueue.Receive%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="7aa34-2276">线程被阻止给定期间的时间，或者如果你指定的值<xref:System.Messaging.MessageQueue.InfiniteTimeout>为`timeout`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2276">The thread is blocked for the given period of time, or indefinitely if you specified the value <xref:System.Messaging.MessageQueue.InfiniteTimeout> for the `timeout` parameter.</span></span> <span data-ttu-id="7aa34-2277">如果应用程序处理应继续而不等待一条消息，请考虑使用异步方法， <xref:System.Messaging.MessageQueue.BeginReceive%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2277">If the application processing should continue without waiting for a message, consider using the asynchronous method, <xref:System.Messaging.MessageQueue.BeginReceive%2A>.</span></span>  
  
 <span data-ttu-id="7aa34-2278">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2278">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-2279">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-2279">Workgroup mode</span></span>|<span data-ttu-id="7aa34-2280">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-2280">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-2281">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2281">Local computer</span></span>|<span data-ttu-id="7aa34-2282">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2282">Yes</span></span>|  
|<span data-ttu-id="7aa34-2283">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2283">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-2284">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2284">Yes</span></span>|  
|<span data-ttu-id="7aa34-2285">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2285">Remote computer</span></span>|<span data-ttu-id="7aa34-2286">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-2286">No</span></span>|  
|<span data-ttu-id="7aa34-2287">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2287">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-2288">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2288">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7aa34-2289">
            <paramref name="cursor" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2289">The <paramref name="cursor" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="7aa34-2290">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2290">-or-</span>
          </span>
          <span data-ttu-id="7aa34-2291">
            <paramref name="transaction" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2291">The <paramref name="transaction" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-2292">为 <paramref name="timeout" /> 参数指定的值无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2292">The value specified for the <paramref name="timeout" /> parameter is not valid.</span>
          </span>
          <span data-ttu-id="7aa34-2293">
            <paramref name="timeout" /> 可能小于 <see cref="F:System.TimeSpan.Zero" /> 或大于 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2293">Possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-2294">在超时过期之前消息没有到达队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2294">A message did not arrive in the queue before the time-out expired.</span>
          </span>
          <span data-ttu-id="7aa34-2295">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2295">-or-</span>
          </span>
          <span data-ttu-id="7aa34-2296">该队列为非事务性队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2296">The queue is non-transactional.</span>
          </span>
          <span data-ttu-id="7aa34-2297">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2297">-or-</span>
          </span>
          <span data-ttu-id="7aa34-2298">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2298">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="7aa34-2299">该方法不是线程安全。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2299">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="T:System.Messaging.Cursor" />
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Receive (TimeSpan timeout, System.Messaging.Cursor cursor, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message Receive(valuetype System.TimeSpan timeout, class System.Messaging.Cursor cursor, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.Cursor,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ Receive(TimeSpan timeout, System::Messaging::Cursor ^ cursor, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cursor" Type="System.Messaging.Cursor" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="7aa34-2300">一个 <see cref="T:System.TimeSpan" /> 指示有新消息可用于检查之前等待的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2300">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span>
          </span>
        </param>
        <param name="cursor">
          <span data-ttu-id="7aa34-2301">维持消息队列中特定位置的 <see cref="T:System.Messaging.Cursor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2301">A <see cref="T:System.Messaging.Cursor" /> that maintains a specific position in the message queue.</span>
          </span>
        </param>
        <param name="transactionType">
          <span data-ttu-id="7aa34-2302">
            <see cref="T:System.Messaging.MessageQueueTransactionType" /> 值之一，它描述与消息关联的事务上下文类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2302">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values that describes the type of transaction context to associate with the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-2303">使用指定的游标接收队列中的当前消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2303">Receives the current message in the queue, using a specified cursor.</span>
          </span>
          <span data-ttu-id="7aa34-2304">如果没有可用的消息，此方法将等待，直到有可用的消息或超时到期为止。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2304">If no message is available, this method waits until either a message is available, or the time-out expires.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-2305">一个 <see cref="T:System.Messaging.Message" />，它引用队列中的一条消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2305">A <see cref="T:System.Messaging.Message" /> that references a message in the queue.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-2306">使用此重载用于使用定义的事务上下文从队列接收消息`transactionType`参数，并返回在指定时间段内是否存在任何消息队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2306">Use this overload to receive a message from a queue using a transaction context defined by the `transactionType` parameter, and return in a specified period of time if there are no messages in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-2307">指定`Automatic`为`transactionType`参数，如果已存在外部事务上下文附加到你想要用于接收消息的线程。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2307">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</span></span> <span data-ttu-id="7aa34-2308">指定`Single`如果你想要接收的消息作为单个内部事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2308">Specify `Single` if you want to receive the message as a single internal transaction.</span></span> <span data-ttu-id="7aa34-2309">你可以指定`None`如果你想要接收来自外部事务上下文事务性队列的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2309">You can specify `None` if you want to receive a message from a transactional queue outside of a transaction context.</span></span>  
  
 <span data-ttu-id="7aa34-2310"><xref:System.Messaging.MessageQueue.Receive%2A>方法允许同步读取一条消息，从而它从队列中删除。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2310">The <xref:System.Messaging.MessageQueue.Receive%2A> method allows for the synchronous reading of a message, thereby removing it from the queue.</span></span> <span data-ttu-id="7aa34-2311">后续调用<xref:System.Messaging.MessageQueue.Receive%2A>返回后面的消息队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2311">Subsequent calls to <xref:System.Messaging.MessageQueue.Receive%2A> return the messages that follow in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-2312">如果调用此方法用于从事务性队列接收消息，则中止此事务如果收到的消息则返回到队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2312">If this method is called to receive a message from a transactional queue, the message that is received is returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="7aa34-2313">消息永久性不删除从队列直到提交事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2313">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="7aa34-2314">若要读取队列中的邮件，而不必从队列中删除它，使用<xref:System.Messaging.MessageQueue.Peek%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2314">To read a message in a queue without removing it from the queue, use the <xref:System.Messaging.MessageQueue.Peek%2A> method.</span></span> <span data-ttu-id="7aa34-2315">没有与通过调用返回的消息关联事务上下文<xref:System.Messaging.MessageQueue.Peek%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2315">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.Peek%2A>.</span></span> <span data-ttu-id="7aa34-2316">因为<xref:System.Messaging.MessageQueue.Peek%2A>不会的删除队列中的任何消息，不需要通过调用回滚<xref:System.Messaging.MessageQueueTransaction.Abort%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2316">Because <xref:System.Messaging.MessageQueue.Peek%2A> does not remove any messages in the queue, there is nothing to roll back by a call to <xref:System.Messaging.MessageQueueTransaction.Abort%2A>.</span></span>  
  
 <span data-ttu-id="7aa34-2317">使用调用<xref:System.Messaging.MessageQueue.Receive%2A>它是当前线程在等待消息到达队列时可以被阻塞。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2317">Use a call to <xref:System.Messaging.MessageQueue.Receive%2A> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</span></span> <span data-ttu-id="7aa34-2318">线程被阻止给定期间的时间，或者如果你指定的值<xref:System.Messaging.MessageQueue.InfiniteTimeout>为`timeout`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2318">The thread is blocked for the given period of time, or indefinitely if you specified the value <xref:System.Messaging.MessageQueue.InfiniteTimeout> for the `timeout` parameter.</span></span> <span data-ttu-id="7aa34-2319">如果应用程序处理应继续而不等待一条消息，请考虑使用异步方法， <xref:System.Messaging.MessageQueue.BeginReceive%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2319">If the application processing should continue without waiting for a message, consider using the asynchronous method, <xref:System.Messaging.MessageQueue.BeginReceive%2A>.</span></span>  
  
 <span data-ttu-id="7aa34-2320">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2320">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-2321">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-2321">Workgroup mode</span></span>|<span data-ttu-id="7aa34-2322">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-2322">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-2323">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2323">Local computer</span></span>|<span data-ttu-id="7aa34-2324">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2324">Yes</span></span>|  
|<span data-ttu-id="7aa34-2325">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2325">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-2326">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2326">Yes</span></span>|  
|<span data-ttu-id="7aa34-2327">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2327">Remote computer</span></span>|<span data-ttu-id="7aa34-2328">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-2328">No</span></span>|  
|<span data-ttu-id="7aa34-2329">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2329">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-2330">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2330">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7aa34-2331">
            <paramref name="cursor" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2331">The <paramref name="cursor" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-2332">为 <paramref name="timeout" /> 参数指定的值无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2332">The value specified for the <paramref name="timeout" /> parameter is not valid.</span>
          </span>
          <span data-ttu-id="7aa34-2333">
            <paramref name="timeout" /> 可能小于 <see cref="F:System.TimeSpan.Zero" /> 或大于 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2333">Possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="7aa34-2334">
            <paramref name="transactionType" /> 参数不是 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成员之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2334">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-2335">在超时过期之前消息没有到达队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2335">A message did not arrive in the queue before the time-out expired.</span>
          </span>
          <span data-ttu-id="7aa34-2336">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2336">-or-</span>
          </span>
          <span data-ttu-id="7aa34-2337">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2337">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <threadsafe>
          <span data-ttu-id="7aa34-2338">该方法不是线程安全。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2338">The method is not thread safe.</span>
          </span>
        </threadsafe>
        <altmember cref="T:System.Messaging.Cursor" />
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReceiveByCorrelationId">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-2339">接收匹配给定相关标识符的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2339">Receives a message that matches a given correlation identifier.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReceiveByCorrelationId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveByCorrelationId (string correlationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveByCorrelationId(string correlationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveByCorrelationId (correlationId As String) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveByCorrelationId(System::String ^ correlationId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="correlationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="correlationId">
          <span data-ttu-id="7aa34-2340">要接收的消息的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2340">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-2341">从非事务性队列中接收与给定的相关标识符匹配的消息，而且在队列中当前不存在具有指定相关标识符的消息时立即引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2341">Receives the message that matches the given correlation identifier (from a non-transactional queue) and immediately raises an exception if no message with the specified correlation identifier currently exists in the queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-2342">其 <see cref="T:System.Messaging.Message" /> 匹配传入的 <paramref name="correlationId" /> 参数的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2342">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-2343">此方法引用的非事务性队列中查找<xref:System.Messaging.MessageQueue>的消息其<xref:System.Messaging.Message.CorrelationId%2A>匹配所指定`correlationId`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2343">This method looks in the non-transactional queue referenced by the <xref:System.Messaging.MessageQueue> for a message whose <xref:System.Messaging.Message.CorrelationId%2A> matches the specified `correlationId` parameter.</span></span> <span data-ttu-id="7aa34-2344">如果不找到任何消息匹配`correlationID`参数，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2344">If no message is found that matches the `correlationID` parameter, an exception is thrown.</span></span> <span data-ttu-id="7aa34-2345">否则为消息是从队列中移除并返回到应用程序。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2345">Otherwise, the message is removed from the queue and returned to the application.</span></span>  
  
 <span data-ttu-id="7aa34-2346"><xref:System.Messaging.Message.CorrelationId%2A>属性用于将发送到队列相关联的响应、 报表或确认消息发送到的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2346">The <xref:System.Messaging.Message.CorrelationId%2A> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</span></span>  
  
 <span data-ttu-id="7aa34-2347">其他两种方法可用于从队列接收消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2347">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="7aa34-2348"><xref:System.Messaging.MessageQueue.Receive%2A>方法返回第一条消息在队列中，与<xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29>方法通过指定其唯一标识符来检索一条消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2348">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> method retrieves a message by specifying its unique identifier.</span></span>  
  
 <span data-ttu-id="7aa34-2349">若要读取具有指定的相关标识符的消息，而不必从队列中删除它，使用<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2349">To read a message with a specified correlation identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method.</span></span> <span data-ttu-id="7aa34-2350"><xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>方法始终返回第一条消息在队列中，因此对方法的后续调用将返回相同的消息，除非较高优先级的消息到达队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2350">The <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-2351">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2351">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-2352">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-2352">Workgroup mode</span></span>|<span data-ttu-id="7aa34-2353">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-2353">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-2354">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2354">Local computer</span></span>|<span data-ttu-id="7aa34-2355">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2355">Yes</span></span>|  
|<span data-ttu-id="7aa34-2356">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2356">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-2357">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2357">Yes</span></span>|  
|<span data-ttu-id="7aa34-2358">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2358">Remote computer</span></span>|<span data-ttu-id="7aa34-2359">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-2359">No</span></span>|  
|<span data-ttu-id="7aa34-2360">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2360">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-2361">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2361">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-2362">下面的代码示例发送和接收包含订单与队列的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2362">The following code example sends and receives a message that contains an order to and from a queue.</span></span> <span data-ttu-id="7aa34-2363">它特别请求肯定确认当原始消息到达或已从队列中检索。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2363">It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.</span></span>  
  
 [!code-cpp[Message.Acknowledgment#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Acknowledgment/CPP/message_acknowledgment.cpp#1)]
 [!code-csharp[Message.Acknowledgment#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Acknowledgment/CS/message_acknowledgment.cs#1)]
 [!code-vb[Message.Acknowledgment#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Acknowledgment/VB/message_acknowledgment.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7aa34-2364">
            <paramref name="correlationId" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2364">The <paramref name="correlationId" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7aa34-2365">未能找到具有指定 <paramref name="correlationId" /> 的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2365">The message with the specified <paramref name="correlationId" /> could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-2366">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2366">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveByCorrelationId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveByCorrelationId (string correlationId, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveByCorrelationId(string correlationId, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveByCorrelationId (correlationId As String, transaction As MessageQueueTransaction) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveByCorrelationId(System::String ^ correlationId, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="correlationId">
          <span data-ttu-id="7aa34-2367">要接收的消息的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2367">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive.</span>
          </span>
        </param>
        <param name="transaction">
          <span data-ttu-id="7aa34-2368">
            <see cref="T:System.Messaging.MessageQueueTransaction" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2368">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-2369">从事务性队列中接收与给定的相关标识符匹配的消息，而且在队列中当前不存在具有指定相关标识符的消息时立即引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2369">Receives the message that matches the given correlation identifier (from a transactional queue) and immediately raises an exception if no message with the specified correlation identifier currently exists in the queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-2370">其 <see cref="T:System.Messaging.Message" /> 匹配传入的 <paramref name="correlationId" /> 参数的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2370">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-2371">此方法引用的事务性队列中查找<xref:System.Messaging.MessageQueue>的消息其<xref:System.Messaging.Message.CorrelationId%2A>匹配所指定`correlationId`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2371">This method looks in the transactional queue referenced by the <xref:System.Messaging.MessageQueue> for a message whose <xref:System.Messaging.Message.CorrelationId%2A> matches the specified `correlationId` parameter.</span></span> <span data-ttu-id="7aa34-2372">如果不找到任何消息匹配`correlationID`参数，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2372">If no message is found that matches the `correlationID` parameter, an exception is thrown.</span></span> <span data-ttu-id="7aa34-2373">否则为消息从队列中删除，并且返回到应用程序使用由定义的内部事务上下文`transaction`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2373">Otherwise, the message is removed from the queue and returned to the application using the internal transaction context defined by the `transaction` parameter.</span></span>  
  
 <span data-ttu-id="7aa34-2374">因为此方法调用事务性队列，接收的消息将返回到队列如果则中止此事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2374">Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="7aa34-2375">消息永久性不删除从队列直到提交事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2375">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="7aa34-2376"><xref:System.Messaging.Message.CorrelationId%2A>属性用于将发送到队列相关联的响应、 报表或确认消息发送到的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2376">The <xref:System.Messaging.Message.CorrelationId%2A> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</span></span>  
  
 <span data-ttu-id="7aa34-2377">其他两种方法可用于从队列接收消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2377">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="7aa34-2378"><xref:System.Messaging.MessageQueue.Receive%2A>方法返回第一条消息在队列中，与<xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29>方法用于检索一条消息，通过指定其唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2378">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> method is used to retrieve a message by specifying its unique identifier.</span></span>  
  
 <span data-ttu-id="7aa34-2379">若要读取具有指定的相关标识符的消息，而不必从队列中删除它，使用<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2379">To read a message with a specified correlation identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method.</span></span> <span data-ttu-id="7aa34-2380"><xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>方法始终返回第一条消息在队列中，因此对方法的后续调用将返回相同的消息，除非较高优先级的消息到达队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2380">The <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="7aa34-2381">没有与通过调用返回的消息关联事务上下文<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2381">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>.</span></span> <span data-ttu-id="7aa34-2382">因为<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>不会的删除队列中的任何消息，将无法回滚事务被中止。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2382">Because <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="7aa34-2383">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2383">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-2384">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-2384">Workgroup mode</span></span>|<span data-ttu-id="7aa34-2385">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-2385">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-2386">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2386">Local computer</span></span>|<span data-ttu-id="7aa34-2387">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2387">Yes</span></span>|  
|<span data-ttu-id="7aa34-2388">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2388">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-2389">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2389">Yes</span></span>|  
|<span data-ttu-id="7aa34-2390">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2390">Remote computer</span></span>|<span data-ttu-id="7aa34-2391">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-2391">No</span></span>|  
|<span data-ttu-id="7aa34-2392">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2392">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-2393">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2393">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-2394">以下代码示例演示了 <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.Messaging.MessageQueueTransaction%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2394">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.Messaging.MessageQueueTransaction%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#14](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#14)]
 [!code-csharp[MessageQueue2#14](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7aa34-2395">
            <paramref name="correlationId" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2395">The <paramref name="correlationId" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="7aa34-2396">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2396">-or-</span>
          </span>
          <span data-ttu-id="7aa34-2397">
            <paramref name="transaction" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2397">The <paramref name="transaction" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7aa34-2398">未能找到具有指定 <paramref name="correlationId" /> 的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2398">The message with the specified <paramref name="correlationId" /> could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-2399">该队列为非事务性队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2399">The queue is non-transactional.</span>
          </span>
          <span data-ttu-id="7aa34-2400">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2400">-or-</span>
          </span>
          <span data-ttu-id="7aa34-2401">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2401">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveByCorrelationId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveByCorrelationId (string correlationId, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveByCorrelationId(string correlationId, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveByCorrelationId (correlationId As String, transactionType As MessageQueueTransactionType) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveByCorrelationId(System::String ^ correlationId, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="correlationId">
          <span data-ttu-id="7aa34-2402">要接收的消息的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2402">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive.</span>
          </span>
        </param>
        <param name="transactionType">
          <span data-ttu-id="7aa34-2403">
            <see cref="T:System.Messaging.MessageQueueTransactionType" /> 值之一，它描述与消息关联的事务上下文的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2403">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-2404">接收匹配给定相关标识符的消息，而且在队列中当前不存在具有指定相关标识符的消息时立即引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2404">Receives the message that matches the given correlation identifier and immediately raises an exception if no message with the specified correlation identifier currently exists in the queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-2405">其 <see cref="T:System.Messaging.Message" /> 匹配传入的 <paramref name="correlationId" /> 参数的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2405">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-2406">此方法引用的队列中查找<xref:System.Messaging.MessageQueue>的消息其<xref:System.Messaging.Message.CorrelationId%2A>匹配所指定`correlationId`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2406">This method looks in the queue referenced by the <xref:System.Messaging.MessageQueue> for a message whose <xref:System.Messaging.Message.CorrelationId%2A> matches the specified `correlationId` parameter.</span></span> <span data-ttu-id="7aa34-2407">如果不找到任何消息匹配`correlationID`参数，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2407">If no message is found that matches the `correlationID` parameter, an exception is thrown.</span></span> <span data-ttu-id="7aa34-2408">否则为消息从队列中删除，并且返回到应用程序使用定义的事务上下文`transactionType`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2408">Otherwise, the message is removed from the queue and returned to the application using a transaction context defined by the `transactionType` parameter.</span></span>  
  
 <span data-ttu-id="7aa34-2409">指定`Automatic`为`transactionType`参数，如果已存在外部事务上下文附加到你想要用于接收消息的线程。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2409">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</span></span> <span data-ttu-id="7aa34-2410">指定`Single`如果你想要接收的消息作为单个内部事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2410">Specify `Single` if you want to receive the message as a single internal transaction.</span></span> <span data-ttu-id="7aa34-2411">你可以指定`None`如果你想要接收来自外部事务上下文事务性队列的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2411">You can specify `None` if you want to receive a message from a transactional queue outside of a transaction context.</span></span>  
  
 <span data-ttu-id="7aa34-2412">如果调用此方法用于从事务性队列接收消息，接收的消息将返回到队列如果则中止此事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2412">If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="7aa34-2413">消息永久性不删除从队列直到提交事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2413">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="7aa34-2414"><xref:System.Messaging.Message.CorrelationId%2A>属性用于将发送到队列相关联的响应、 报表或确认消息发送到的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2414">The <xref:System.Messaging.Message.CorrelationId%2A> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</span></span>  
  
 <span data-ttu-id="7aa34-2415">其他两种方法可用于从队列接收消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2415">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="7aa34-2416"><xref:System.Messaging.MessageQueue.Receive%2A>方法返回第一条消息在队列中，与<xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29>方法用于检索一条消息，通过指定其唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2416">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> method is used to retrieve a message by specifying its unique identifier.</span></span>  
  
 <span data-ttu-id="7aa34-2417">若要读取具有指定的相关标识符的消息，而不必从队列中删除它，使用<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2417">To read a message with a specified correlation identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method.</span></span> <span data-ttu-id="7aa34-2418"><xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>方法始终返回第一条消息在队列中，因此对方法的后续调用将返回相同的消息，除非较高优先级的消息到达队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2418">The <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="7aa34-2419">没有与通过调用返回的消息关联事务上下文<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2419">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>.</span></span> <span data-ttu-id="7aa34-2420">因为<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>不会的删除队列中的任何消息，将无法回滚事务被中止。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2420">Because <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="7aa34-2421">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2421">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-2422">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-2422">Workgroup mode</span></span>|<span data-ttu-id="7aa34-2423">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-2423">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-2424">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2424">Local computer</span></span>|<span data-ttu-id="7aa34-2425">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2425">Yes</span></span>|  
|<span data-ttu-id="7aa34-2426">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2426">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-2427">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2427">Yes</span></span>|  
|<span data-ttu-id="7aa34-2428">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2428">Remote computer</span></span>|<span data-ttu-id="7aa34-2429">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-2429">No</span></span>|  
|<span data-ttu-id="7aa34-2430">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2430">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-2431">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2431">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-2432">以下代码示例演示了 <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.Messaging.MessageQueueTransactionType%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2432">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.Messaging.MessageQueueTransactionType%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#11](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#11)]
 [!code-csharp[MessageQueue2#11](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7aa34-2433">
            <paramref name="correlationId" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2433">The <paramref name="correlationId" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7aa34-2434">未能找到具有指定 <paramref name="correlationId" /> 的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2434">The message with the specified <paramref name="correlationId" /> could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="7aa34-2435">
            <paramref name="transactionType" /> 参数不是 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成员之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2435">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-2436">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2436">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveByCorrelationId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveByCorrelationId (string correlationId, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveByCorrelationId(string correlationId, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveByCorrelationId (correlationId As String, timeout As TimeSpan) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveByCorrelationId(System::String ^ correlationId, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="correlationId">
          <span data-ttu-id="7aa34-2437">要接收的消息的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2437">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="7aa34-2438">一个 <see cref="T:System.TimeSpan" /> 指示有新消息可用于检查之前等待的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2438">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-2439">从非事务性队列中接收与给定的相关标识符匹配的消息，并且一直等到队列中出现具有指定相关标识符的消息或者超时过期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2439">Receives the message that matches the given correlation identifier (from a non-transactional queue) and waits until either a message with the specified correlation identifier is available in the queue, or the time-out expires.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-2440">其 <see cref="T:System.Messaging.Message" /> 匹配传入的 <paramref name="correlationId" /> 参数的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2440">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-2441">此方法引用的非事务性队列中查找<xref:System.Messaging.MessageQueue>的消息其<xref:System.Messaging.Message.CorrelationId%2A>匹配所指定`correlationId`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2441">This method looks in the non-transactional queue referenced by the <xref:System.Messaging.MessageQueue> for a message whose <xref:System.Messaging.Message.CorrelationId%2A> matches the specified `correlationId` parameter.</span></span> <span data-ttu-id="7aa34-2442">此方法将立即返回指定的相关标识符的消息如果`correlationId`参数是在队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2442">This method returns immediately if the message with the correlation identifier specified by the `correlationId` parameter is in the queue.</span></span> <span data-ttu-id="7aa34-2443">否则，该方法将等待给定的时间段内的新消息到达。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2443">Otherwise, the method waits the given period of time for a new message to arrive.</span></span> <span data-ttu-id="7aa34-2444">如果超时过期之前，不会到达一条新消息，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2444">If a new message does not arrive before the time-out expires, an exception is thrown.</span></span>  
  
 <span data-ttu-id="7aa34-2445">`timeout`参数未指定的总运行时间为此方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2445">The `timeout` parameter does not specify the total running time for this method.</span></span> <span data-ttu-id="7aa34-2446">相反，它指定为新消息到达队列中等待的时间。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2446">Rather, it specifies the time to wait for a new message to arrive in the queue.</span></span> <span data-ttu-id="7aa34-2447">每次有新消息到达时，此方法检查<xref:System.Messaging.Message.CorrelationId%2A>的新消息，以查看其是否符合`correlationId`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2447">Each time a new message arrives, this method examines the <xref:System.Messaging.Message.CorrelationId%2A> of the new message to see if it matches the `correlationId` parameter.</span></span> <span data-ttu-id="7aa34-2448">如果没有，此方法通过启动超时期限，等待另一个新消息到达。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2448">If not, this method starts the time-out period over and waits for another new message to arrive.</span></span> <span data-ttu-id="7aa34-2449">因此，如果新消息继续到达超时时间内，则可能为此方法继续运行; 如果无限期，直到在超时期限过期并且没有任何新的消息到达，或者直到消息到达其<xref:System.Messaging.Message.CorrelationId%2A>匹配`correlationId`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2449">Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <xref:System.Messaging.Message.CorrelationId%2A> matches the `correlationId` parameter.</span></span>  
  
 <span data-ttu-id="7aa34-2450"><xref:System.Messaging.Message.CorrelationId%2A>属性用于将发送到队列相关联的响应、 报表或确认消息发送到的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2450">The <xref:System.Messaging.Message.CorrelationId%2A> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</span></span>  
  
 <span data-ttu-id="7aa34-2451">其他两种方法可用于从队列接收消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2451">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="7aa34-2452"><xref:System.Messaging.MessageQueue.Receive%2A>方法返回第一条消息在队列中，与<xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29>方法用于检索一条消息，通过指定其唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2452">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> method is used to retrieve a message by specifying its unique identifier.</span></span>  
  
 <span data-ttu-id="7aa34-2453">若要读取具有指定的相关标识符的消息，而不必从队列中删除它，使用<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2453">To read a message with a specified correlation identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method.</span></span> <span data-ttu-id="7aa34-2454"><xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>方法始终返回第一条消息在队列中，因此对方法的后续调用将返回相同的消息，除非较高优先级的消息到达队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2454">The <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-2455">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2455">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-2456">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-2456">Workgroup mode</span></span>|<span data-ttu-id="7aa34-2457">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-2457">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-2458">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2458">Local computer</span></span>|<span data-ttu-id="7aa34-2459">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2459">Yes</span></span>|  
|<span data-ttu-id="7aa34-2460">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2460">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-2461">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2461">Yes</span></span>|  
|<span data-ttu-id="7aa34-2462">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2462">Remote computer</span></span>|<span data-ttu-id="7aa34-2463">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-2463">No</span></span>|  
|<span data-ttu-id="7aa34-2464">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2464">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-2465">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2465">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-2466">以下代码示例演示了 <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.TimeSpan%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2466">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.TimeSpan%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#10](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#10)]
 [!code-csharp[MessageQueue2#10](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7aa34-2467">
            <paramref name="correlationId" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2467">The <paramref name="correlationId" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-2468">为 <paramref name="timeout" /> 参数指定的值无效，可能是 <paramref name="timeout" /> 小于 <see cref="F:System.TimeSpan.Zero" /> 或大于 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2468">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-2469">具有指定 <paramref name="correlationId" /> 的消息不在队列中，而且在超时过期之前没有到达。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2469">The message with the specified <paramref name="correlationId" /> does not exist in the queue and did not arrive before the time-out expired.</span>
          </span>
          <span data-ttu-id="7aa34-2470">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2470">-or-</span>
          </span>
          <span data-ttu-id="7aa34-2471">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2471">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveByCorrelationId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveByCorrelationId (string correlationId, TimeSpan timeout, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveByCorrelationId(string correlationId, valuetype System.TimeSpan timeout, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveByCorrelationId (correlationId As String, timeout As TimeSpan, transaction As MessageQueueTransaction) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveByCorrelationId(System::String ^ correlationId, TimeSpan timeout, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="correlationId">
          <span data-ttu-id="7aa34-2472">要接收的消息的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2472">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="7aa34-2473">一个 <see cref="T:System.TimeSpan" /> 指示有新消息可用于检查之前等待的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2473">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span>
          </span>
        </param>
        <param name="transaction">
          <span data-ttu-id="7aa34-2474">
            <see cref="T:System.Messaging.MessageQueueTransaction" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2474">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-2475">从事务性队列中接收与给定的相关标识符匹配的消息，并且一直等到队列中出现具有指定相关标识符的消息或者超时过期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2475">Receives the message that matches the given correlation identifier (from a transactional queue) and waits until either a message with the specified correlation identifier is available in the queue, or the time-out expires.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-2476">其 <see cref="T:System.Messaging.Message" /> 匹配传入的 <paramref name="correlationId" /> 参数的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2476">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-2477">此方法引用的事务性队列中查找<xref:System.Messaging.MessageQueue>的消息其<xref:System.Messaging.Message.CorrelationId%2A>匹配所指定`correlationId`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2477">This method looks in the transactional queue referenced by the <xref:System.Messaging.MessageQueue> for a message whose <xref:System.Messaging.Message.CorrelationId%2A> matches the specified `correlationId` parameter.</span></span> <span data-ttu-id="7aa34-2478">此方法将立即返回指定的相关标识符的消息如果`correlationId`参数是在队列中，使用由定义的内部事务上下文`transaction`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2478">This method returns immediately if the message with the correlation identifier specified by the `correlationId` parameter is in the queue, using the internal transaction context defined by the `transaction` parameter.</span></span> <span data-ttu-id="7aa34-2479">否则，该方法将等待给定的时间段内的新消息到达。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2479">Otherwise, the method waits the given period of time for a new message to arrive.</span></span> <span data-ttu-id="7aa34-2480">如果超时过期之前，不会到达一条新消息，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2480">If a new message does not arrive before the time-out expires, an exception is thrown.</span></span>  
  
 <span data-ttu-id="7aa34-2481">`timeout`参数未指定的总运行时间为此方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2481">The `timeout` parameter does not specify the total running time for this method.</span></span> <span data-ttu-id="7aa34-2482">相反，它指定为新消息到达队列中等待的时间。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2482">Rather, it specifies the time to wait for a new message to arrive in the queue.</span></span> <span data-ttu-id="7aa34-2483">每次有新消息到达时，此方法检查<xref:System.Messaging.Message.CorrelationId%2A>的新消息，以查看其是否符合`correlationId`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2483">Each time a new message arrives, this method examines the <xref:System.Messaging.Message.CorrelationId%2A> of the new message to see if it matches the `correlationId` parameter.</span></span> <span data-ttu-id="7aa34-2484">如果没有，此方法通过启动超时期限，等待另一个新消息到达。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2484">If not, this method starts the time-out period over and waits for another new message to arrive.</span></span> <span data-ttu-id="7aa34-2485">因此，如果新消息继续到达超时时间内，则可能为此方法继续运行; 如果无限期，直到在超时期限过期并且没有任何新的消息到达，或者直到消息到达其<xref:System.Messaging.Message.CorrelationId%2A>匹配`correlationId`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2485">Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <xref:System.Messaging.Message.CorrelationId%2A> matches the `correlationId` parameter.</span></span>  
  
 <span data-ttu-id="7aa34-2486">因为此方法调用事务性队列，接收的消息将返回到队列如果则中止此事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2486">Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="7aa34-2487">消息永久性不删除从队列直到提交事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2487">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="7aa34-2488"><xref:System.Messaging.Message.CorrelationId%2A>属性用于将发送到队列相关联的响应、 报表或确认消息发送到的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2488">The <xref:System.Messaging.Message.CorrelationId%2A> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</span></span>  
  
 <span data-ttu-id="7aa34-2489">其他两种方法可用于从队列接收消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2489">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="7aa34-2490"><xref:System.Messaging.MessageQueue.Receive%2A>方法返回第一条消息在队列中，与<xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29>方法用于检索一条消息，通过指定其唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2490">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> method is used to retrieve a message by specifying its unique identifier.</span></span>  
  
 <span data-ttu-id="7aa34-2491">若要读取具有指定的相关标识符的消息，而不必从队列中删除它，使用<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2491">To read a message with a specified correlation identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method.</span></span> <span data-ttu-id="7aa34-2492"><xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>方法始终返回第一条消息在队列中，因此对方法的后续调用将返回相同的消息，除非较高优先级的消息到达队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2492">The <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="7aa34-2493">没有与通过调用返回的消息关联事务上下文<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2493">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>.</span></span> <span data-ttu-id="7aa34-2494">因为<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>不会的删除队列中的任何消息，将无法回滚事务被中止。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2494">Because <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="7aa34-2495">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2495">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-2496">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-2496">Workgroup mode</span></span>|<span data-ttu-id="7aa34-2497">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-2497">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-2498">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2498">Local computer</span></span>|<span data-ttu-id="7aa34-2499">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2499">Yes</span></span>|  
|<span data-ttu-id="7aa34-2500">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2500">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-2501">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2501">Yes</span></span>|  
|<span data-ttu-id="7aa34-2502">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2502">Remote computer</span></span>|<span data-ttu-id="7aa34-2503">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-2503">No</span></span>|  
|<span data-ttu-id="7aa34-2504">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2504">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-2505">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2505">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-2506">以下代码示例演示了 <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransaction%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2506">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransaction%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#13](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#13)]
 [!code-csharp[MessageQueue2#13](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7aa34-2507">
            <paramref name="correlationId" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2507">The <paramref name="correlationId" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="7aa34-2508">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2508">-or-</span>
          </span>
          <span data-ttu-id="7aa34-2509">
            <paramref name="transaction" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2509">The <paramref name="transaction" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-2510">为 <paramref name="timeout" /> 参数指定的值无效，可能是 <paramref name="timeout" /> 小于 <see cref="F:System.TimeSpan.Zero" /> 或大于 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2510">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-2511">具有指定 <paramref name="correlationId" /> 的消息不在队列中，而且在超时过期之前没有到达。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2511">The message with the specified <paramref name="correlationId" /> does not exist in the queue and did not arrive before the time-out expired.</span>
          </span>
          <span data-ttu-id="7aa34-2512">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2512">-or-</span>
          </span>
          <span data-ttu-id="7aa34-2513">该队列为非事务性队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2513">The queue is non-transactional.</span>
          </span>
          <span data-ttu-id="7aa34-2514">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2514">-or-</span>
          </span>
          <span data-ttu-id="7aa34-2515">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2515">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveByCorrelationId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveByCorrelationId (string correlationId, TimeSpan timeout, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveByCorrelationId(string correlationId, valuetype System.TimeSpan timeout, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveByCorrelationId (correlationId As String, timeout As TimeSpan, transactionType As MessageQueueTransactionType) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveByCorrelationId(System::String ^ correlationId, TimeSpan timeout, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="correlationId" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="correlationId">
          <span data-ttu-id="7aa34-2516">要接收的消息的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2516">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="7aa34-2517">一个 <see cref="T:System.TimeSpan" /> 指示有新消息可用于检查之前等待的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2517">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span>
          </span>
        </param>
        <param name="transactionType">
          <span data-ttu-id="7aa34-2518">
            <see cref="T:System.Messaging.MessageQueueTransactionType" /> 值之一，它描述与消息关联的事务上下文的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2518">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-2519">接收与给定的相关标识符匹配的消息，并且一直等到队列中出现具有指定相关标识符的消息或超时过期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2519">Receives the message that matches the given correlation identifier and waits until either a message with the specified correlation identifier is available in the queue, or the time-out expires.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-2520">其 <see cref="T:System.Messaging.Message" /> 匹配传入的 <paramref name="correlationId" /> 参数的 <see cref="P:System.Messaging.Message.CorrelationId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2520">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-2521">此方法引用的队列中查找<xref:System.Messaging.MessageQueue>的消息其<xref:System.Messaging.Message.CorrelationId%2A>匹配所指定`correlationId`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2521">This method looks in the queue referenced by the <xref:System.Messaging.MessageQueue> for a message whose <xref:System.Messaging.Message.CorrelationId%2A> matches the specified `correlationId` parameter.</span></span> <span data-ttu-id="7aa34-2522">此方法将立即返回指定的相关标识符的消息如果`correlationId`参数是在队列中，使用定义的事务上下文`transactionType`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2522">This method returns immediately if the message with the correlation identifier specified by the `correlationId` parameter is in the queue, using a transaction context defined by the `transactionType` parameter.</span></span> <span data-ttu-id="7aa34-2523">否则，该方法将等待给定的时间段内的新消息到达。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2523">Otherwise, the method waits the given period of time for a new message to arrive.</span></span> <span data-ttu-id="7aa34-2524">如果超时过期之前，不会到达一条新消息，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2524">If a new message does not arrive before the time-out expires, an exception is thrown.</span></span>  
  
 <span data-ttu-id="7aa34-2525">`timeout`参数未指定的总运行时间为此方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2525">The `timeout` parameter does not specify the total running time for this method.</span></span> <span data-ttu-id="7aa34-2526">相反，它指定为新消息到达队列中等待的时间。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2526">Rather, it specifies the time to wait for a new message to arrive in the queue.</span></span> <span data-ttu-id="7aa34-2527">每次有新消息到达时，此方法检查<xref:System.Messaging.Message.CorrelationId%2A>的新消息，以查看其是否符合`correlationId`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2527">Each time a new message arrives, this method examines the <xref:System.Messaging.Message.CorrelationId%2A> of the new message to see if it matches the `correlationId` parameter.</span></span> <span data-ttu-id="7aa34-2528">如果没有，此方法通过启动超时期限，等待另一个新消息到达。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2528">If not, this method starts the time-out period over and waits for another new message to arrive.</span></span> <span data-ttu-id="7aa34-2529">因此，如果新消息继续到达超时时间内，则可能为此方法继续运行; 如果无限期，直到在超时期限过期并且没有任何新的消息到达，或者直到消息到达其<xref:System.Messaging.Message.CorrelationId%2A>匹配`correlationId`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2529">Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <xref:System.Messaging.Message.CorrelationId%2A> matches the `correlationId` parameter.</span></span> <span data-ttu-id="7aa34-2530">指定`Automatic`为`transactionType`参数，如果已存在外部事务上下文附加到你想要用于接收消息的线程。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2530">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</span></span> <span data-ttu-id="7aa34-2531">指定`Single`如果你想要接收的消息作为单个内部事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2531">Specify `Single` if you want to receive the message as a single internal transaction.</span></span> <span data-ttu-id="7aa34-2532">你可以指定`None`如果你想要接收来自外部事务上下文事务性队列的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2532">You can specify `None` if you want to receive a message from a transactional queue outside of a transaction context.</span></span>  
  
 <span data-ttu-id="7aa34-2533">如果调用此方法用于从事务性队列接收消息，接收的消息将返回到队列如果则中止此事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2533">If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="7aa34-2534">消息永久性不删除从队列直到提交事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2534">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="7aa34-2535"><xref:System.Messaging.Message.CorrelationId%2A>属性用于将发送到队列相关联的响应、 报表或确认消息发送到的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2535">The <xref:System.Messaging.Message.CorrelationId%2A> property is used to tie a message sent to the queue to associated response, report, or acknowledgment messages.</span></span>  
  
 <span data-ttu-id="7aa34-2536">其他两种方法可用于从队列接收消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2536">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="7aa34-2537"><xref:System.Messaging.MessageQueue.Receive%2A>方法返回第一条消息在队列中，与<xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29>方法用于检索一条消息，通过指定其唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2537">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> method is used to retrieve a message by specifying its unique identifier.</span></span>  
  
 <span data-ttu-id="7aa34-2538">若要读取具有指定的相关标识符的消息，而不必从队列中删除它，使用<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2538">To read a message with a specified correlation identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method.</span></span> <span data-ttu-id="7aa34-2539"><xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>方法始终返回第一条消息在队列中，因此对方法的后续调用将返回相同的消息，除非较高优先级的消息到达队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2539">The <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="7aa34-2540">没有与通过调用返回的消息关联事务上下文<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2540">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>.</span></span> <span data-ttu-id="7aa34-2541">因为<xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29>不会的删除队列中的任何消息，将无法回滚事务被中止。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2541">Because <xref:System.Messaging.MessageQueue.PeekByCorrelationId%28System.String%29> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="7aa34-2542">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2542">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-2543">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-2543">Workgroup mode</span></span>|<span data-ttu-id="7aa34-2544">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-2544">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-2545">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2545">Local computer</span></span>|<span data-ttu-id="7aa34-2546">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2546">Yes</span></span>|  
|<span data-ttu-id="7aa34-2547">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2547">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-2548">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2548">Yes</span></span>|  
|<span data-ttu-id="7aa34-2549">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2549">Remote computer</span></span>|<span data-ttu-id="7aa34-2550">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-2550">No</span></span>|  
|<span data-ttu-id="7aa34-2551">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2551">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-2552">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2552">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-2553">以下代码示例演示了 <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransactionType%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2553">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransactionType%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#12](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#12)]
 [!code-csharp[MessageQueue2#12](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7aa34-2554">
            <paramref name="correlationId" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2554">The <paramref name="correlationId" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7aa34-2555">未能找到具有指定 <paramref name="correlationId" /> 的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2555">The message with the specified <paramref name="correlationId" /> could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-2556">为 <paramref name="timeout" /> 参数指定的值无效，可能是 <paramref name="timeout" /> 小于 <see cref="F:System.TimeSpan.Zero" /> 或大于 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2556">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="7aa34-2557">
            <paramref name="transactionType" /> 参数不是 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成员之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2557">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-2558">具有指定 <paramref name="correlationId" /> 的消息不在队列中，而且在超时过期之前没有到达。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2558">The message with the specified <paramref name="correlationId" /> does not exist in the queue and did not arrive before the time-out expired.</span>
          </span>
          <span data-ttu-id="7aa34-2559">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2559">-or-</span>
          </span>
          <span data-ttu-id="7aa34-2560">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2560">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReceiveById">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-2561">接收匹配给定标识符的消息，并将其从队列中移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2561">Receives the message that matches the given identifier, removing it from the queue.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReceiveById">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveById (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveById(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveById(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveById (id As String) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveById(System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="7aa34-2562">要接收的消息的 <see cref="P:System.Messaging.Message.Id" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2562">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-2563">从非事务性队列中接收与给定的标识符匹配的消息，而且在队列中当前不存在具有指定标识符的消息时立即引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2563">Receives the message that matches the given identifier from a non-transactional queue and immediately raises an exception if no message with the specified identifier currently exists in the queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-2564">
            <see cref="T:System.Messaging.Message" />，其 <see cref="P:System.Messaging.Message.Id" /> 属性匹配传入的 <paramref name="id" /> 参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2564">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-2565">使用此方法读取具有已知标识符的消息和从队列中删除它。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2565">Use this method to read a message with a known identifier and remove it from the queue.</span></span> <span data-ttu-id="7aa34-2566">如果消息也不会在队列中，此方法将立即引发异常。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2566">This method throws an exception immediately if the message is not in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-2567"><xref:System.Messaging.Message.Id%2A>消息的属性是消息队列企业中，唯一的因此将最多一条消息匹配的队列中给定`id`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2567">The <xref:System.Messaging.Message.Id%2A> property of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given `id` parameter.</span></span>  
  
 <span data-ttu-id="7aa34-2568">其他两种方法可用于从队列接收消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2568">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="7aa34-2569"><xref:System.Messaging.MessageQueue.Receive%2A>方法返回第一条消息在队列中，与<xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29>方法用于检索确认、 报表或创建第一条消息发送到队列的应用程序生成的响应消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2569">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29> method is used to retrieve an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</span></span>  
  
 <span data-ttu-id="7aa34-2570">若要读取具有指定标识符的消息，而不必从队列中删除它，使用<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2570">To read a message with a specified identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method.</span></span> <span data-ttu-id="7aa34-2571"><xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法始终返回第一条消息在队列中，因此对方法的后续调用将返回相同的消息，除非较高优先级的消息到达队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2571">The <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-2572">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2572">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-2573">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-2573">Workgroup mode</span></span>|<span data-ttu-id="7aa34-2574">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-2574">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-2575">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2575">Local computer</span></span>|<span data-ttu-id="7aa34-2576">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2576">Yes</span></span>|  
|<span data-ttu-id="7aa34-2577">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2577">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-2578">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2578">Yes</span></span>|  
|<span data-ttu-id="7aa34-2579">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2579">Remote computer</span></span>|<span data-ttu-id="7aa34-2580">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-2580">No</span></span>|  
|<span data-ttu-id="7aa34-2581">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2581">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-2582">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2582">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-2583">以下代码示例演示了 <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2583">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#16](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#16)]
 [!code-csharp[MessageQueue2#16](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7aa34-2584">
            <paramref name="id" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2584">The <paramref name="id" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7aa34-2585">未能找到具有指定 <paramref name="id" /> 的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2585">The message with the specified <paramref name="id" /> could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-2586">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2586">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveById">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveById (string id, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveById(string id, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveById (id As String, transaction As MessageQueueTransaction) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveById(System::String ^ id, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="7aa34-2587">要接收的消息的 <see cref="P:System.Messaging.Message.Id" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2587">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive.</span>
          </span>
        </param>
        <param name="transaction">
          <span data-ttu-id="7aa34-2588">
            <see cref="T:System.Messaging.MessageQueueTransaction" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2588">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-2589">从事务性队列中接收与给定的标识符匹配的消息，而且在队列中当前不存在具有指定标识符的消息时立即引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2589">Receives the message that matches the given identifier (from a transactional queue) and immediately raises an exception if no message with the specified identifier currently exists in the queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-2590">
            <see cref="T:System.Messaging.Message" />，其 <see cref="P:System.Messaging.Message.Id" /> 属性匹配传入的 <paramref name="id" /> 参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2590">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-2591">使用此方法读取具有已知标识符的消息并从队列中，使用由定义的内部事务上下文中移除`transaction`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2591">Use this method to read a message with a known identifier and remove it from the queue, using the internal transaction context defined by the `transaction` parameter.</span></span> <span data-ttu-id="7aa34-2592">此方法时引发异常立即消息也不会在队列中</span><span class="sxs-lookup"><span data-stu-id="7aa34-2592">This method throws an exception immediately if the message is not in the queue</span></span>  
  
 <span data-ttu-id="7aa34-2593"><xref:System.Messaging.Message.Id%2A>消息的属性是消息队列企业中，唯一的因此将最多一条消息匹配的队列中给定`id`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2593">The <xref:System.Messaging.Message.Id%2A> property of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given `id` parameter.</span></span>  
  
 <span data-ttu-id="7aa34-2594">因为此方法调用事务性队列，接收的消息将返回到队列如果则中止此事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2594">Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="7aa34-2595">消息永久性不删除从队列直到提交事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2595">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="7aa34-2596">其他两种方法可用于从队列接收消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2596">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="7aa34-2597"><xref:System.Messaging.MessageQueue.Receive%2A>方法返回第一条消息在队列中，与<xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29>方法用于检索确认、 报表或创建第一条消息发送到队列的应用程序生成的响应消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2597">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29> method is used to retrieve an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</span></span>  
  
 <span data-ttu-id="7aa34-2598">若要读取具有指定标识符的消息，而不必从队列中删除它，使用<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2598">To read a message with a specified identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method.</span></span> <span data-ttu-id="7aa34-2599"><xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法始终返回第一条消息在队列中，因此对方法的后续调用将返回相同的消息，除非较高优先级的消息到达队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2599">The <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="7aa34-2600">没有与通过调用返回的消息关联事务上下文<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2600">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekById%28System.String%29>.</span></span> <span data-ttu-id="7aa34-2601">因为<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>不会的删除队列中的任何消息，将无法回滚事务被中止。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2601">Because <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="7aa34-2602">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2602">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-2603">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-2603">Workgroup mode</span></span>|<span data-ttu-id="7aa34-2604">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-2604">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-2605">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2605">Local computer</span></span>|<span data-ttu-id="7aa34-2606">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2606">Yes</span></span>|  
|<span data-ttu-id="7aa34-2607">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2607">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-2608">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2608">Yes</span></span>|  
|<span data-ttu-id="7aa34-2609">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2609">Remote computer</span></span>|<span data-ttu-id="7aa34-2610">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-2610">No</span></span>|  
|<span data-ttu-id="7aa34-2611">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2611">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-2612">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2612">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-2613">以下代码示例演示了 <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.Messaging.MessageQueueTransaction%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2613">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.Messaging.MessageQueueTransaction%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#17](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#17)]
 [!code-csharp[MessageQueue2#17](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7aa34-2614">
            <paramref name="id" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2614">The <paramref name="id" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="7aa34-2615">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2615">-or-</span>
          </span>
          <span data-ttu-id="7aa34-2616">
            <paramref name="transaction" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2616">The <paramref name="transaction" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7aa34-2617">未能找到具有指定 <paramref name="id" /> 的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2617">The message with the specified <paramref name="id" /> could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-2618">该队列为非事务性队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2618">The queue is non-transactional.</span>
          </span>
          <span data-ttu-id="7aa34-2619">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2619">-or-</span>
          </span>
          <span data-ttu-id="7aa34-2620">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2620">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveById">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveById (string id, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveById(string id, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveById (id As String, transactionType As MessageQueueTransactionType) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveById(System::String ^ id, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="7aa34-2621">要接收的消息的 <see cref="P:System.Messaging.Message.Id" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2621">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive.</span>
          </span>
        </param>
        <param name="transactionType">
          <span data-ttu-id="7aa34-2622">
            <see cref="T:System.Messaging.MessageQueueTransactionType" /> 值之一，它描述与消息关联的事务上下文的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2622">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-2623">接收与给定的标识符匹配的消息，而且在队列中当前不存在具有指定标识符的消息时立即引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2623">Receives the message that matches the given identifier and immediately raises an exception if no message with the specified identifier currently exists in the queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-2624">
            <see cref="T:System.Messaging.Message" />，其 <see cref="P:System.Messaging.Message.Id" /> 属性匹配传入的 <paramref name="id" /> 参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2624">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-2625">使用此方法读取具有已知标识符的消息和从队列中删除它。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2625">Use this method to read a message with a known identifier and remove it from the queue.</span></span> <span data-ttu-id="7aa34-2626">如果消息也不会在队列中，此方法将立即引发异常。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2626">This method throws an exception immediately if the message is not in the queue.</span></span> <span data-ttu-id="7aa34-2627">否则为消息从队列中删除，并且返回到应用程序使用定义的事务上下文`transactionType`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2627">Otherwise, the message is removed from the queue and returned to the application using a transaction context defined by the `transactionType` parameter.</span></span>  
  
 <span data-ttu-id="7aa34-2628">指定`Automatic`为`transactionType`参数，如果已存在外部事务上下文附加到你想要用于接收消息的线程。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2628">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</span></span> <span data-ttu-id="7aa34-2629">指定`Single`如果你想要接收的消息作为单个内部事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2629">Specify `Single` if you want to receive the message as a single internal transaction.</span></span> <span data-ttu-id="7aa34-2630">你可以指定`None`如果你想要接收来自外部事务上下文事务性队列的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2630">You can specify `None` if you want to receive a message from a transactional queue outside of a transaction context.</span></span>  
  
 <span data-ttu-id="7aa34-2631"><xref:System.Messaging.Message.Id%2A>消息的属性是消息队列企业中，唯一的因此将最多一条消息匹配的队列中给定`id`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2631">The <xref:System.Messaging.Message.Id%2A> property of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given `id` parameter.</span></span> <span data-ttu-id="7aa34-2632">如果具有指定标识符消息在队列中与此关联以外<xref:System.Messaging.MessageQueue>实例，该消息将不会找到。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2632">If the message with the specified identifier is in a queue other than the one associated with this <xref:System.Messaging.MessageQueue> instance, the message will not be found.</span></span>  
  
 <span data-ttu-id="7aa34-2633">如果调用此方法用于从事务性队列接收消息，接收的消息将返回到队列如果则中止此事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2633">If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="7aa34-2634">消息永久性不删除从队列直到提交事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2634">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="7aa34-2635">其他两种方法可用于从队列接收消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2635">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="7aa34-2636"><xref:System.Messaging.MessageQueue.Receive%2A>方法返回第一条消息在队列中，与<xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29>方法用于检索确认、 报表或创建第一条消息发送到队列的应用程序生成的响应消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2636">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29> method is used to retrieve an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</span></span>  
  
 <span data-ttu-id="7aa34-2637">若要读取具有指定标识符的消息，而不必从队列中删除它，使用<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2637">To read a message with a specified identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method.</span></span> <span data-ttu-id="7aa34-2638"><xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法始终返回第一条消息在队列中，因此对方法的后续调用将返回相同的消息，除非较高优先级的消息到达队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2638">The <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="7aa34-2639">没有与通过调用返回的消息关联事务上下文<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2639">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekById%28System.String%29>.</span></span> <span data-ttu-id="7aa34-2640">因为<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>不会的删除队列中的任何消息，将无法回滚事务被中止。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2640">Because <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="7aa34-2641">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2641">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-2642">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-2642">Workgroup mode</span></span>|<span data-ttu-id="7aa34-2643">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-2643">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-2644">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2644">Local computer</span></span>|<span data-ttu-id="7aa34-2645">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2645">Yes</span></span>|  
|<span data-ttu-id="7aa34-2646">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2646">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-2647">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2647">Yes</span></span>|  
|<span data-ttu-id="7aa34-2648">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2648">Remote computer</span></span>|<span data-ttu-id="7aa34-2649">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-2649">No</span></span>|  
|<span data-ttu-id="7aa34-2650">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2650">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-2651">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2651">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-2652">以下代码示例演示了 <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.Messaging.MessageQueueTransactionType%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2652">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.Messaging.MessageQueueTransactionType%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#15](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#15)]
 [!code-csharp[MessageQueue2#15](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7aa34-2653">
            <paramref name="id" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2653">The <paramref name="id" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7aa34-2654">未能找到具有指定 <paramref name="id" /> 的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2654">The message with the specified <paramref name="id" /> could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="7aa34-2655">
            <paramref name="transactionType" /> 参数不是 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成员之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2655">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-2656">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2656">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveById">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveById (string id, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveById(string id, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveById (id As String, timeout As TimeSpan) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveById(System::String ^ id, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="7aa34-2657">要接收的消息的 <see cref="P:System.Messaging.Message.Id" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2657">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="7aa34-2658">一个 <see cref="T:System.TimeSpan" /> 指示有新消息可用于检查之前等待的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2658">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-2659">从非事务性队列接收与给定的标识符匹配的消息，并且一直等到队列中出现具有指定标识符的消息或超时过期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2659">Receives the message that matches the given identifier (from a non-transactional queue) and waits until either a message with the specified identifier is available in the queue or the time-out expires.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-2660">
            <see cref="T:System.Messaging.Message" />，其 <see cref="P:System.Messaging.Message.Id" /> 属性匹配传入的 <paramref name="id" /> 参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2660">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-2661">使用此方法读取具有已知标识符的消息和从队列中删除它。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2661">Use this method to read a message with a known identifier and remove it from the queue.</span></span> <span data-ttu-id="7aa34-2662">此方法将立即返回指定标识符的消息如果`id`参数是在队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2662">This method returns immediately if the message with the identifier specified by the `id` parameter is in the queue.</span></span> <span data-ttu-id="7aa34-2663">否则，该方法将等待给定的时间段内的新消息到达。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2663">Otherwise, the method waits the given period of time for a new message to arrive.</span></span> <span data-ttu-id="7aa34-2664">如果超时过期之前，不会到达一条新消息，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2664">If a new message does not arrive before the time-out expires, an exception is thrown.</span></span>  
  
 <span data-ttu-id="7aa34-2665">`timeout`参数未指定的总运行时间为此方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2665">The `timeout` parameter does not specify the total running time for this method.</span></span> <span data-ttu-id="7aa34-2666">相反，它指定为新消息到达队列中等待的时间。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2666">Rather, it specifies the time to wait for a new message to arrive in the queue.</span></span> <span data-ttu-id="7aa34-2667">每次有新消息到达时，此方法检查<xref:System.Messaging.Message.Id%2A>的新消息，以查看其是否符合`id`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2667">Each time a new message arrives, this method examines the <xref:System.Messaging.Message.Id%2A> of the new message to see if it matches the `id` parameter.</span></span> <span data-ttu-id="7aa34-2668">如果没有，此方法通过启动超时期限，等待另一个新消息到达。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2668">If not, this method starts the time-out period over and waits for another new message to arrive.</span></span> <span data-ttu-id="7aa34-2669">因此，如果新消息继续到达超时时间内，则可能为此方法继续运行; 如果无限期，直到在超时期限过期并且没有任何新的消息到达，或者直到消息到达其<xref:System.Messaging.Message.Id%2A>匹配`id`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2669">Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <xref:System.Messaging.Message.Id%2A> matches the `id` parameter.</span></span>  
  
 <span data-ttu-id="7aa34-2670"><xref:System.Messaging.Message.Id%2A>消息的属性是消息队列企业中，唯一的因此将最多一条消息匹配的队列中给定`id`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2670">The <xref:System.Messaging.Message.Id%2A> property of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given `id` parameter.</span></span>  
  
 <span data-ttu-id="7aa34-2671">请使用此重载<xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29>时可接受的当前线程，可以被阻塞，只要新消息继续到达队列所指定的超时时间内`timeout`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2671">Use this overload of <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> when it is acceptable for the current thread to be blocked as long as new messages continue to arrive in the queue within the time-out period specified by the `timeout` parameter.</span></span> <span data-ttu-id="7aa34-2672">该线程将被阻止至少给定期间的时间，或者如果你指定的值<xref:System.Messaging.MessageQueue.InfiniteTimeout>为`timeout`参数，或如果新消息继续到达队列所指定的超时时间内`timeout`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2672">The thread will be blocked for at least the given period of time, or indefinitely if you specified the value <xref:System.Messaging.MessageQueue.InfiniteTimeout> for the `timeout` parameter, or if new messages continue to arrive in the queue within the time-out period specified by the `timeout` parameter.</span></span>  
  
 <span data-ttu-id="7aa34-2673">其他两种方法可用于从队列接收消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2673">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="7aa34-2674"><xref:System.Messaging.MessageQueue.Receive%2A>方法返回第一条消息在队列中，与<xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29>方法用于检索确认、 报表或创建第一条消息发送到队列的应用程序生成的响应消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2674">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29> method is used to retrieve an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</span></span>  
  
 <span data-ttu-id="7aa34-2675">若要读取具有指定标识符的消息，而不必从队列中删除它，使用<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2675">To read a message with a specified identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method.</span></span> <span data-ttu-id="7aa34-2676"><xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法始终返回第一条消息在队列中，因此对方法的后续调用将返回相同的消息，除非较高优先级的消息到达队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2676">The <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-2677">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2677">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-2678">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-2678">Workgroup mode</span></span>|<span data-ttu-id="7aa34-2679">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-2679">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-2680">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2680">Local computer</span></span>|<span data-ttu-id="7aa34-2681">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2681">Yes</span></span>|  
|<span data-ttu-id="7aa34-2682">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2682">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-2683">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2683">Yes</span></span>|  
|<span data-ttu-id="7aa34-2684">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2684">Remote computer</span></span>|<span data-ttu-id="7aa34-2685">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-2685">No</span></span>|  
|<span data-ttu-id="7aa34-2686">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2686">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-2687">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2687">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-2688">以下代码示例演示了 <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.TimeSpan%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2688">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.TimeSpan%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#20](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#20)]
 [!code-csharp[MessageQueue2#20](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7aa34-2689">
            <paramref name="id" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2689">The <paramref name="id" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-2690">为 <paramref name="timeout" /> 参数指定的值无效，可能是 <paramref name="timeout" /> 小于 <see cref="F:System.TimeSpan.Zero" /> 或大于 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2690">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-2691">在时间超时之前，带有指定 <paramref name="id" /> 的消息没有到达队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2691">A message with the specified <paramref name="id" /> did not arrive in the queue before the time-out expired.</span>
          </span>
          <span data-ttu-id="7aa34-2692">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2692">-or-</span>
          </span>
          <span data-ttu-id="7aa34-2693">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2693">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveById">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveById (string id, TimeSpan timeout, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveById(string id, valuetype System.TimeSpan timeout, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveById (id As String, timeout As TimeSpan, transaction As MessageQueueTransaction) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveById(System::String ^ id, TimeSpan timeout, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="7aa34-2694">要接收的消息的 <see cref="P:System.Messaging.Message.Id" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2694">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="7aa34-2695">一个 <see cref="T:System.TimeSpan" /> 指示有新消息可用于检查之前等待的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2695">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span>
          </span>
        </param>
        <param name="transaction">
          <span data-ttu-id="7aa34-2696">
            <see cref="T:System.Messaging.MessageQueueTransaction" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2696">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-2697">从事务性队列接收与给定的标识符匹配的消息，并且一直等到队列中出现具有指定标识符的消息或超时过期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2697">Receives the message that matches the given identifier (from a transactional queue) and waits until either a message with the specified identifier is available in the queue or the time-out expires.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-2698">
            <see cref="T:System.Messaging.Message" />，其 <see cref="P:System.Messaging.Message.Id" /> 属性匹配传入的 <paramref name="id" /> 参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2698">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-2699">使用此方法读取具有已知标识符的消息并从队列中，使用由定义的内部事务上下文中移除`transaction`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2699">Use this method to read a message with a known identifier and remove it from the queue, using the internal transaction context defined by the `transaction` parameter.</span></span> <span data-ttu-id="7aa34-2700">此方法将立即返回指定标识符的消息如果`id`参数是在队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2700">This method returns immediately if the message with the identifier specified by the `id` parameter is in the queue.</span></span> <span data-ttu-id="7aa34-2701">否则，该方法将等待给定的时间段内的新消息到达。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2701">Otherwise, the method waits the given period of time for a new message to arrive.</span></span> <span data-ttu-id="7aa34-2702">如果超时过期之前，不会到达一条新消息，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2702">If a new message does not arrive before the time-out expires, an exception is thrown.</span></span>  
  
 <span data-ttu-id="7aa34-2703">`timeout`参数未指定的总运行时间为此方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2703">The `timeout` parameter does not specify the total running time for this method.</span></span> <span data-ttu-id="7aa34-2704">相反，它指定为新消息到达队列中等待的时间。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2704">Rather, it specifies the time to wait for a new message to arrive in the queue.</span></span> <span data-ttu-id="7aa34-2705">每次有新消息到达时，此方法检查<xref:System.Messaging.Message.Id%2A>的新消息，以查看其是否符合`id`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2705">Each time a new message arrives, this method examines the <xref:System.Messaging.Message.Id%2A> of the new message to see if it matches the `id` parameter.</span></span> <span data-ttu-id="7aa34-2706">如果没有，此方法通过启动超时期限，等待另一个新消息到达。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2706">If not, this method starts the time-out period over and waits for another new message to arrive.</span></span> <span data-ttu-id="7aa34-2707">因此，如果新消息继续到达超时时间内，则可能为此方法继续运行; 如果无限期，直到在超时期限过期并且没有任何新的消息到达，或者直到消息到达其<xref:System.Messaging.Message.Id%2A>匹配`id`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2707">Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <xref:System.Messaging.Message.Id%2A> matches the `id` parameter.</span></span>  
  
 <span data-ttu-id="7aa34-2708"><xref:System.Messaging.Message.Id%2A>消息的属性是消息队列企业中，唯一的因此将最多一条消息匹配的队列中给定`id`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2708">The <xref:System.Messaging.Message.Id%2A> property of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given `id` parameter.</span></span>  
  
 <span data-ttu-id="7aa34-2709">请使用此重载<xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29>时可接受的当前线程，可以被阻塞，只要新消息继续到达队列所指定的超时时间内`timeout`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2709">Use this overload of <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> when it is acceptable for the current thread to be blocked as long as new messages continue to arrive in the queue within the time-out period specified by the `timeout` parameter.</span></span> <span data-ttu-id="7aa34-2710">该线程将被阻止至少给定期间的时间，或者如果你指定的值<xref:System.Messaging.MessageQueue.InfiniteTimeout>为`timeout`参数，或如果新消息继续到达队列所指定的超时期限内`timeout`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2710">The thread will be blocked for at least the given period of time, or indefinitely if you specified the value <xref:System.Messaging.MessageQueue.InfiniteTimeout> for the `timeout` parameter, or if new messages continue to arrive in the queue within the timeout period specified by the `timeout` parameter.</span></span>  
  
 <span data-ttu-id="7aa34-2711">因为此方法调用事务性队列，接收的消息将返回到队列如果则中止此事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2711">Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="7aa34-2712">消息永久性不删除从队列直到提交事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2712">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="7aa34-2713">其他两种方法可用于从队列接收消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2713">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="7aa34-2714"><xref:System.Messaging.MessageQueue.Receive%2A>方法返回第一条消息在队列中，与<xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29>方法用于检索确认、 报表或创建第一条消息发送到队列的应用程序生成的响应消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2714">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29> method is used to retrieve an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</span></span>  
  
 <span data-ttu-id="7aa34-2715">若要读取具有指定标识符的消息，而不必从队列中删除它，使用<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2715">To read a message with a specified identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method.</span></span> <span data-ttu-id="7aa34-2716"><xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法始终返回第一条消息在队列中，因此对方法的后续调用返回相同的消息，除非较高优先级的消息到达队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2716">The <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message, unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="7aa34-2717">没有与通过调用返回的消息关联事务上下文<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2717">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekById%28System.String%29>.</span></span> <span data-ttu-id="7aa34-2718">因为<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>不会的删除队列中的任何消息，将无法回滚事务被中止。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2718">Because <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="7aa34-2719">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2719">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-2720">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-2720">Workgroup mode</span></span>|<span data-ttu-id="7aa34-2721">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-2721">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-2722">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2722">Local computer</span></span>|<span data-ttu-id="7aa34-2723">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2723">Yes</span></span>|  
|<span data-ttu-id="7aa34-2724">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2724">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-2725">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2725">Yes</span></span>|  
|<span data-ttu-id="7aa34-2726">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2726">Remote computer</span></span>|<span data-ttu-id="7aa34-2727">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-2727">No</span></span>|  
|<span data-ttu-id="7aa34-2728">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2728">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-2729">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2729">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-2730">以下代码示例演示了 <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransaction%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2730">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransaction%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#18](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#18)]
 [!code-csharp[MessageQueue2#18](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7aa34-2731">
            <paramref name="id" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2731">The <paramref name="id" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="7aa34-2732">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2732">-or-</span>
          </span>
          <span data-ttu-id="7aa34-2733">
            <paramref name="transaction" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2733">The <paramref name="transaction" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-2734">为 <paramref name="timeout" /> 参数指定的值无效，可能是 <paramref name="timeout" /> 小于 <see cref="F:System.TimeSpan.Zero" /> 或大于 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2734">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-2735">在时间超时之前，带有指定 <paramref name="id" /> 的消息没有到达队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2735">A message with the specified <paramref name="id" /> did not arrive in the queue before the time-out expired.</span>
          </span>
          <span data-ttu-id="7aa34-2736">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2736">-or-</span>
          </span>
          <span data-ttu-id="7aa34-2737">该队列为非事务性队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2737">The queue is non-transactional.</span>
          </span>
          <span data-ttu-id="7aa34-2738">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2738">-or-</span>
          </span>
          <span data-ttu-id="7aa34-2739">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2739">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveById">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveById (string id, TimeSpan timeout, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveById(string id, valuetype System.TimeSpan timeout, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveById (id As String, timeout As TimeSpan, transactionType As MessageQueueTransactionType) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveById(System::String ^ id, TimeSpan timeout, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="7aa34-2740">要接收的消息的 <see cref="P:System.Messaging.Message.Id" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2740">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="7aa34-2741">一个 <see cref="T:System.TimeSpan" /> 指示有新消息可用于检查之前等待的时间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2741">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</span>
          </span>
        </param>
        <param name="transactionType">
          <span data-ttu-id="7aa34-2742">
            <see cref="T:System.Messaging.MessageQueueTransactionType" /> 值之一，它描述与消息关联的事务上下文的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2742">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-2743">接收与给定的标识符匹配的消息，并且一直等到队列中出现具有指定标识符的消息或超时过期。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2743">Receives the message that matches the given identifier and waits until either a message with the specified identifier is available in the queue or the time-out expires.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-2744">
            <see cref="T:System.Messaging.Message" />，其 <see cref="P:System.Messaging.Message.Id" /> 属性匹配传入的 <paramref name="id" /> 参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2744">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the <paramref name="id" /> parameter passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-2745">使用此方法读取具有已知标识符的消息和从队列中删除它。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2745">Use this method to read a message with a known identifier and remove it from the queue.</span></span> <span data-ttu-id="7aa34-2746">此方法将立即返回指定标识符的消息如果`id`参数是在队列中，使用定义的事务上下文`transactionType`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2746">This method returns immediately if the message with the identifier specified by the `id` parameter is in the queue, using a transaction context defined by the `transactionType` parameter.</span></span> <span data-ttu-id="7aa34-2747">否则，该方法将等待给定的时间段内的新消息到达。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2747">Otherwise, the method waits the given period of time for a new message to arrive.</span></span> <span data-ttu-id="7aa34-2748">如果超时过期之前，不会到达一条新消息，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2748">If a new message does not arrive before the time-out expires, an exception is thrown.</span></span>  
  
 <span data-ttu-id="7aa34-2749">`timeout`参数未指定的总运行时间为此方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2749">The `timeout` parameter does not specify the total running time for this method.</span></span> <span data-ttu-id="7aa34-2750">相反，它指定为新消息到达队列中等待的时间。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2750">Rather, it specifies the time to wait for a new message to arrive in the queue.</span></span> <span data-ttu-id="7aa34-2751">每次有新消息到达时，此方法检查<xref:System.Messaging.Message.Id%2A>的新消息，以查看其是否符合`id`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2751">Each time a new message arrives, this method examines the <xref:System.Messaging.Message.Id%2A> of the new message to see if it matches the `id` parameter.</span></span> <span data-ttu-id="7aa34-2752">如果没有，此方法通过启动超时期限，等待另一个新消息到达。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2752">If not, this method starts the time-out period over and waits for another new message to arrive.</span></span> <span data-ttu-id="7aa34-2753">因此，如果新消息继续到达超时时间内，则可能为此方法继续运行; 如果无限期，直到在超时期限过期并且没有任何新的消息到达，或者直到消息到达其<xref:System.Messaging.Message.Id%2A>匹配`id`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2753">Therefore, if new messages continue to arrive within the time-out period, it is possible for this method to continue running indefinitely, either until the time-out period expires without any new messages arriving, or until a message arrives whose <xref:System.Messaging.Message.Id%2A> matches the `id` parameter.</span></span>  
  
 <span data-ttu-id="7aa34-2754">指定`Automatic`为`transactionType`参数，如果已存在外部事务上下文附加到你想要用于接收消息的线程。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2754">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</span></span> <span data-ttu-id="7aa34-2755">指定`Single`如果你想要接收的消息作为单个内部事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2755">Specify `Single` if you want to receive the message as a single internal transaction.</span></span> <span data-ttu-id="7aa34-2756">你可以指定`None`如果你想要接收来自外部事务上下文事务性队列的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2756">You can specify `None` if you want to receive a message from a transactional queue outside of a transaction context.</span></span>  
  
 <span data-ttu-id="7aa34-2757"><xref:System.Messaging.Message.Id%2A>消息的属性是消息队列企业中，唯一的因此将最多一条消息匹配的队列中给定`id`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2757">The <xref:System.Messaging.Message.Id%2A> property of a message is unique across the Message Queuing enterprise, so there will be at most one message in the queue that matches the given `id` parameter.</span></span> <span data-ttu-id="7aa34-2758">如果具有指定标识符消息在队列中与此关联以外<xref:System.Messaging.MessageQueue>实例，该消息将不会找到。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2758">If the message with the specified identifier is in a queue other than the one associated with this <xref:System.Messaging.MessageQueue> instance, the message will not be found.</span></span>  
  
 <span data-ttu-id="7aa34-2759">请使用此重载<xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29>时可接受的当前线程，可以被阻塞，只要新消息继续到达队列所指定的超时时间内`timeout`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2759">Use this overload of <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%29> when it is acceptable for the current thread to be blocked as long as new messages continue to arrive in the queue within the time-out period specified by the `timeout` parameter.</span></span> <span data-ttu-id="7aa34-2760">该线程将被阻止至少给定期间的时间，或者如果你指定的值<xref:System.Messaging.MessageQueue.InfiniteTimeout>为`timeout`参数，或如果新消息继续到达队列所指定的超时时间内`timeout`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2760">The thread will be blocked for at least the given period of time, or indefinitely if you specified the value <xref:System.Messaging.MessageQueue.InfiniteTimeout> for the `timeout` parameter, or if new messages continue to arrive in the queue within the time-out period specified by the `timeout` parameter.</span></span>  
  
 <span data-ttu-id="7aa34-2761">如果调用此方法用于从事务性队列接收消息，接收的消息将返回到队列如果则中止此事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2761">If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="7aa34-2762">消息永久性不删除从队列直到提交事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2762">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="7aa34-2763">其他两种方法可用于从队列接收消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2763">Two other methods allow you to receive messages from a queue.</span></span> <span data-ttu-id="7aa34-2764"><xref:System.Messaging.MessageQueue.Receive%2A>方法返回第一条消息在队列中，与<xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29>方法用于检索确认、 报表或创建第一条消息发送到队列的应用程序生成的响应消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2764">The <xref:System.Messaging.MessageQueue.Receive%2A> method returns the first message in the queue, and the <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%28System.String%29> method is used to retrieve an acknowledgment, report, or application-generated response message that was created as a result of a message sent to the queue.</span></span>  
  
 <span data-ttu-id="7aa34-2765">若要读取具有指定标识符的消息，而不必从队列中删除它，使用<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2765">To read a message with a specified identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method.</span></span> <span data-ttu-id="7aa34-2766"><xref:System.Messaging.MessageQueue.PeekById%28System.String%29>方法始终返回第一条消息在队列中，因此对方法的后续调用将返回相同的消息，除非较高优先级的消息到达队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2766">The <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> method always returns the first message in the queue, so subsequent calls to the method return the same message unless a higher priority message arrives in the queue.</span></span> <span data-ttu-id="7aa34-2767">没有与通过调用返回的消息关联事务上下文<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2767">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekById%28System.String%29>.</span></span> <span data-ttu-id="7aa34-2768">因为<xref:System.Messaging.MessageQueue.PeekById%28System.String%29>不会的删除队列中的任何消息，将无法回滚事务被中止。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2768">Because <xref:System.Messaging.MessageQueue.PeekById%28System.String%29> does not remove any messages in the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="7aa34-2769">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2769">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-2770">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-2770">Workgroup mode</span></span>|<span data-ttu-id="7aa34-2771">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-2771">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-2772">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2772">Local computer</span></span>|<span data-ttu-id="7aa34-2773">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2773">Yes</span></span>|  
|<span data-ttu-id="7aa34-2774">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2774">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-2775">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2775">Yes</span></span>|  
|<span data-ttu-id="7aa34-2776">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2776">Remote computer</span></span>|<span data-ttu-id="7aa34-2777">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-2777">No</span></span>|  
|<span data-ttu-id="7aa34-2778">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2778">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-2779">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2779">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-2780">以下代码示例演示了 <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransactionType%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2780">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ReceiveById%28System.String%2CSystem.TimeSpan%2CSystem.Messaging.MessageQueueTransactionType%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#19](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#19)]
 [!code-csharp[MessageQueue2#19](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7aa34-2781">
            <paramref name="id" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2781">The <paramref name="id" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-2782">为 <paramref name="timeout" /> 参数指定的值无效，可能是 <paramref name="timeout" /> 小于 <see cref="F:System.TimeSpan.Zero" /> 或大于 <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2782">The value specified for the <paramref name="timeout" /> parameter is not valid, possibly <paramref name="timeout" /> is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.Messaging.MessageQueue.InfiniteTimeout" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-2783">在时间超时之前，带有指定 <paramref name="id" /> 的消息没有到达队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2783">A message with the specified <paramref name="id" /> did not arrive in the queue before the time-out expired.</span>
          </span>
          <span data-ttu-id="7aa34-2784">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2784">-or-</span>
          </span>
          <span data-ttu-id="7aa34-2785">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2785">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="7aa34-2786">
            <paramref name="transactionType" /> 参数不是 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成员之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2786">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReceiveByLookupId">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-2787">在 MSMQ 3.0 中引入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2787">Introduced in MSMQ 3.0.</span>
          </span>
          <span data-ttu-id="7aa34-2788">接收队列中特定的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2788">Receives a specific message from the queue.</span>
          </span>
          <span data-ttu-id="7aa34-2789">消息可通过查询标识符来指定，也可以通过其相对于队首或队尾的位置来指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2789">The message can be specified by a lookup identifier or by its position at the front or end of the queue.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReceiveByLookupId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveByLookupId (long lookupId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveByLookupId(int64 lookupId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveByLookupId (lookupId As Long) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveByLookupId(long lookupId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lookupId" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="lookupId">
          <span data-ttu-id="7aa34-2790">要接收的消息的 <see cref="P:System.Messaging.Message.LookupId" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2790">The <see cref="P:System.Messaging.Message.LookupId" /> of the message to receive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-2791">在 MSMQ 3.0 中引入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2791">Introduced in MSMQ 3.0.</span>
          </span>
          <span data-ttu-id="7aa34-2792">从非事务性队列中接收与给定的查找标识符匹配的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2792">Receives the message that matches the given lookup identifier from a non-transactional queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-2793">
            <see cref="T:System.Messaging.Message" />，其 <see cref="P:System.Messaging.Message.LookupId" /> 属性匹配传入的 <paramref name="lookupId" /> 参数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2793">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.LookupId" /> property matches the <paramref name="lookupId" /> parameter passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-2794">使用此方法读取具有已知的查找标识符的消息并从队列中删除它。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2794">Use this method to read a message with a known lookup identifier and remove it from the queue.</span></span> <span data-ttu-id="7aa34-2795">如果消息也不会在队列中，此方法将立即引发异常。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2795">This method throws an exception immediately if the message is not in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-2796"><xref:System.Messaging.Message.LookupId%2A>属性的消息是唯一的队列消息所在的位置，因此将最多一条消息匹配的队列中给定`lookupId`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2796">The <xref:System.Messaging.Message.LookupId%2A> property of a message is unique to the queue where the message resides, so there will be at most one message in the queue that matches the given `lookupId` parameter.</span></span>  
  
 <span data-ttu-id="7aa34-2797">若要读取具有指定的查找标识符的消息，而不必从队列中删除它，使用<xref:System.Messaging.MessageQueue.PeekByLookupId%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2797">To read a message with a specified lookup identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> method.</span></span>  
  
 <span data-ttu-id="7aa34-2798">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2798">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-2799">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-2799">Workgroup mode</span></span>|<span data-ttu-id="7aa34-2800">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-2800">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-2801">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2801">Local computer</span></span>|<span data-ttu-id="7aa34-2802">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2802">Yes</span></span>|  
|<span data-ttu-id="7aa34-2803">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2803">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-2804">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2804">Yes</span></span>|  
|<span data-ttu-id="7aa34-2805">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2805">Remote computer</span></span>|<span data-ttu-id="7aa34-2806">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-2806">No</span></span>|  
|<span data-ttu-id="7aa34-2807">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2807">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-2808">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2808">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="7aa34-2809">未安装 MSMQ 3.0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2809">MSMQ 3.0 is not installed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7aa34-2810">未能找到具有指定 <paramref name="lookupId" /> 的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2810">The message with the specified <paramref name="lookupId" /> could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-2811">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2811">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.LookupId" />
        <altmember cref="M:System.Messaging.MessageQueue.PeekByLookupId" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveByLookupId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveByLookupId (System.Messaging.MessageLookupAction action, long lookupId, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveByLookupId(valuetype System.Messaging.MessageLookupAction action, int64 lookupId, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveByLookupId (action As MessageLookupAction, lookupId As Long, transaction As MessageQueueTransaction) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveByLookupId(System::Messaging::MessageLookupAction action, long lookupId, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Messaging.MessageLookupAction" />
        <Parameter Name="lookupId" Type="System.Int64" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="7aa34-2812">一个 <see cref="T:System.Messaging.MessageLookupAction" /> 值，指定读取队列中消息的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2812">One of the <see cref="T:System.Messaging.MessageLookupAction" /> values, specifying how the message is read in the queue.</span>
          </span>
          <span data-ttu-id="7aa34-2813">指定以下值之一：</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2813">Specify one of the following:</span>
          </span>
          <span data-ttu-id="7aa34-2814">
            <see langword="MessageLookupAction.Current" />：接收由 <c>lookupId</c> 指定的消息，然后将其从队列中移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2814">
              <see langword="MessageLookupAction.Current" />: Receives the message specified by <c>lookupId</c> and removes it from the queue.</span>
          </span>
          <span data-ttu-id="7aa34-2815">
            <see langword="MessageLookupAction.Next" />：接收由 <c>lookupId</c> 指定消息的下一条消息，然后将其从队列中移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2815">
              <see langword="MessageLookupAction.Next" />: Receives the message following the message specified by <c>lookupId</c> and removes it from the queue.</span>
          </span>
          <span data-ttu-id="7aa34-2816">
            <see langword="MessageLookupAction.Previous" />：接收由 <c>lookupId</c> 指定消息的上一条消息，然后将其从队列中移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2816">
              <see langword="MessageLookupAction.Previous" />: Receives the message preceding the message specified by <c>lookupId</c> and removes it from the queue.</span>
          </span>
          <span data-ttu-id="7aa34-2817">
            <see langword="MessageLookupAction.First" />：接收队列中的第一条消息并将它从队列中移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2817">
              <see langword="MessageLookupAction.First" />: Receives the first message in the queue and removes it from the queue.</span>
          </span>
          <span data-ttu-id="7aa34-2818">
            <c>lookupId</c> 参数必须设置为 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2818">The <c>lookupId</c> parameter must be set to 0.</span>
          </span>
          <span data-ttu-id="7aa34-2819">
            <see langword="MessageLookupAction.Last" />：接收队列中的最后一条消息并将它从队列中移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2819">
              <see langword="MessageLookupAction.Last" />: Receives the last message in the queue and removes it from the queue.</span>
          </span>
          <span data-ttu-id="7aa34-2820">
            <c>lookupId</c> 参数必须设置为 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2820">The <c>lookupId</c> parameter must be set to 0.</span>
          </span>
        </param>
        <param name="lookupId">
          <span data-ttu-id="7aa34-2821">要接收的消息的 <see cref="P:System.Messaging.Message.LookupId" />，或者为 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2821">The <see cref="P:System.Messaging.Message.LookupId" /> of the message to receive, or 0.</span>
          </span>
          <span data-ttu-id="7aa34-2822">访问队列中的第一条和最后一条消息时使用 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2822">0 is used when accessing the first or last message in the queue.</span>
          </span>
        </param>
        <param name="transaction">
          <span data-ttu-id="7aa34-2823">
            <see cref="T:System.Messaging.MessageQueueTransaction" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2823">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-2824">在 MSMQ 3.0 中引入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2824">Introduced in MSMQ 3.0.</span>
          </span>
          <span data-ttu-id="7aa34-2825">从事务性队列中接收特定的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2825">Receives a specific message from a transactional queue.</span>
          </span>
          <span data-ttu-id="7aa34-2826">消息可通过查询标识符来指定，也可以通过其相对于队首或队尾的位置来指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2826">The message can be specified by a lookup identifier or by its position at the front or end of the queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-2827">由传入的 <paramref name="lookupId" /> 和 <paramref name="action" /> 参数指定的 <see cref="T:System.Messaging.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2827">The <see cref="T:System.Messaging.Message" /> specified by the <paramref name="lookupId" /> and <paramref name="action" /> parameters passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-2828">使用此方法读取具有已知的查找标识符的消息并从队列中，使用定义的事务上下文中移除`transaction`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2828">Use this method to read a message with a known lookup identifier and remove it from the queue, using a transaction context defined by the `transaction` parameter.</span></span> <span data-ttu-id="7aa34-2829">如果消息也不会在队列中，此方法将立即引发异常。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2829">This method throws an exception immediately if the message is not in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-2830"><xref:System.Messaging.Message.LookupId%2A>属性的消息是唯一的队列消息所在的位置，因此将最多一条消息匹配的队列中给定`lookupId`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2830">The <xref:System.Messaging.Message.LookupId%2A> property of a message is unique to the queue where the message resides, so there will be at most one message in the queue that matches the given `lookupId` parameter.</span></span>  
  
 <span data-ttu-id="7aa34-2831">因为此方法调用事务性队列，接收的消息将返回到队列如果则中止此事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2831">Because this method is called on a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="7aa34-2832">消息永久性不删除从队列直到提交事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2832">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="7aa34-2833">若要读取具有指定标识符的消息，而不必从队列中删除它，使用<xref:System.Messaging.MessageQueue.PeekByLookupId%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2833">To read a message with a specified identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> method.</span></span> <span data-ttu-id="7aa34-2834">没有与通过调用返回的消息关联事务上下文<xref:System.Messaging.MessageQueue.PeekByLookupId%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2834">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekByLookupId%2A>.</span></span> <span data-ttu-id="7aa34-2835">因为<xref:System.Messaging.MessageQueue.PeekByLookupId%2A>不会的删除队列中的任何消息，将无法回滚事务被中止。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2835">Because <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> does not remove any messages from the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="7aa34-2836">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2836">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-2837">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-2837">Workgroup mode</span></span>|<span data-ttu-id="7aa34-2838">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-2838">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-2839">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2839">Local computer</span></span>|<span data-ttu-id="7aa34-2840">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2840">Yes</span></span>|  
|<span data-ttu-id="7aa34-2841">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2841">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-2842">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2842">Yes</span></span>|  
|<span data-ttu-id="7aa34-2843">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2843">Remote computer</span></span>|<span data-ttu-id="7aa34-2844">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-2844">No</span></span>|  
|<span data-ttu-id="7aa34-2845">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2845">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-2846">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2846">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="7aa34-2847">未安装 MSMQ 3.0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2847">MSMQ 3.0 is not installed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7aa34-2848">未能找到具有指定 <paramref name="lookupId" /> 的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2848">The message with the specified <paramref name="lookupId" /> could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-2849">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2849">An error occurred when accessing a Message Queuing method.</span>
          </span>
          <span data-ttu-id="7aa34-2850">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2850">-or-</span>
          </span>
          <span data-ttu-id="7aa34-2851">该队列为非事务性队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2851">The queue is non-transactional.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="7aa34-2852">
            <paramref name="action" /> 参数不是 <see cref="T:System.Messaging.MessageLookupAction" /> 成员之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2852">The <paramref name="action" /> parameter is not one of the <see cref="T:System.Messaging.MessageLookupAction" /> members.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.LookupId" />
        <altmember cref="M:System.Messaging.MessageQueue.PeekByLookupId" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveByLookupId">
      <MemberSignature Language="C#" Value="public System.Messaging.Message ReceiveByLookupId (System.Messaging.MessageLookupAction action, long lookupId, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Messaging.Message ReceiveByLookupId(valuetype System.Messaging.MessageLookupAction action, int64 lookupId, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ReceiveByLookupId(System.Messaging.MessageLookupAction,System.Int64,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveByLookupId (action As MessageLookupAction, lookupId As Long, transactionType As MessageQueueTransactionType) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Messaging::Message ^ ReceiveByLookupId(System::Messaging::MessageLookupAction action, long lookupId, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Messaging.MessageLookupAction" />
        <Parameter Name="lookupId" Type="System.Int64" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="7aa34-2853">一个 <see cref="T:System.Messaging.MessageLookupAction" /> 值，指定读取队列中消息的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2853">One of the <see cref="T:System.Messaging.MessageLookupAction" /> values, specifying how the message is read in the queue.</span>
          </span>
          <span data-ttu-id="7aa34-2854">指定以下值之一：</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2854">Specify one of the following:</span>
          </span>
          <span data-ttu-id="7aa34-2855">
            <see langword="MessageLookupAction.Current" />：接收由 <c>lookupId</c> 指定的消息，然后将其从队列中移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2855">
              <see langword="MessageLookupAction.Current" />: Receives the message specified by <c>lookupId</c> and removes it from the queue.</span>
          </span>
          <span data-ttu-id="7aa34-2856">
            <see langword="MessageLookupAction.Next" />：接收由 <c>lookupId</c> 指定消息的下一条消息，然后将其从队列中移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2856">
              <see langword="MessageLookupAction.Next" />: Receives the message following the message specified by <c>lookupId</c> and removes it from the queue.</span>
          </span>
          <span data-ttu-id="7aa34-2857">
            <see langword="MessageLookupAction.Previous" />：接收由 <c>lookupId</c> 指定消息的上一条消息，然后将其从队列中移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2857">
              <see langword="MessageLookupAction.Previous" />: Receives the message preceding the message specified by <c>lookupId</c> and removes it from the queue.</span>
          </span>
          <span data-ttu-id="7aa34-2858">
            <see langword="MessageLookupAction.First" />：接收队列中的第一条消息并将它从队列中移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2858">
              <see langword="MessageLookupAction.First" />: Receives the first message in the queue and removes it from the queue.</span>
          </span>
          <span data-ttu-id="7aa34-2859">
            <c>lookupId</c> 参数必须设置为 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2859">The <c>lookupId</c> parameter must be set to 0.</span>
          </span>
          <span data-ttu-id="7aa34-2860">
            <see langword="MessageLookupAction.Last" />：接收队列中的最后一条消息并将它从队列中移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2860">
              <see langword="MessageLookupAction.Last" />: Receives the last message in the queue and removes it from the queue.</span>
          </span>
          <span data-ttu-id="7aa34-2861">
            <c>lookupId</c> 参数必须设置为 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2861">The <c>lookupId</c> parameter must be set to 0.</span>
          </span>
        </param>
        <param name="lookupId">
          <span data-ttu-id="7aa34-2862">要接收的消息的 <see cref="P:System.Messaging.Message.LookupId" />，或者为 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2862">The <see cref="P:System.Messaging.Message.LookupId" /> of the message to receive, or 0.</span>
          </span>
          <span data-ttu-id="7aa34-2863">访问队列中的第一条和最后一条消息时使用 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2863">0 is used when accessing the first or last message in the queue.</span>
          </span>
        </param>
        <param name="transactionType">
          <span data-ttu-id="7aa34-2864">
            <see cref="T:System.Messaging.MessageQueueTransactionType" /> 值之一，它描述与消息关联的事务上下文的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2864">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-2865">在 MSMQ 3.0 中引入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2865">Introduced in MSMQ 3.0.</span>
          </span>
          <span data-ttu-id="7aa34-2866">使用指定的事务上下文从队列中接收特定的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2866">Receives a specific message from the queue, using the specified transaction context.</span>
          </span>
          <span data-ttu-id="7aa34-2867">消息可通过查询标识符来指定，也可以通过其相对于队首或队尾的位置来指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2867">The message can be specified by a lookup identifier or by its position at the front or end of the queue.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7aa34-2868">由传入的 <paramref name="action" /> 和 <paramref name="lookupId" /> 参数指定的 <see cref="T:System.Messaging.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2868">The <see cref="T:System.Messaging.Message" /> specified by the <paramref name="action" /> and <paramref name="lookupId" /> parameters passed in.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-2869">使用此方法读取具有已知的查找标识符的消息并从队列中，使用定义的事务上下文中移除`transactionType`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2869">Use this method to read a message with a known lookup identifier and remove it from the queue, using a transaction context defined by the `transactionType` parameter.</span></span> <span data-ttu-id="7aa34-2870">如果消息也不会在队列中，此方法将立即引发异常。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2870">This method throws an exception immediately if the message is not in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-2871"><xref:System.Messaging.Message.LookupId%2A>属性的消息是唯一的队列消息所在的位置，因此将最多一条消息匹配的队列中给定`lookupId`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2871">The <xref:System.Messaging.Message.LookupId%2A> property of a message is unique to the queue where the message resides, so there will be at most one message in the queue that matches the given `lookupId` parameter.</span></span>  
  
 <span data-ttu-id="7aa34-2872">若要读取具有指定标识符的消息，而不必从队列中删除它，使用<xref:System.Messaging.MessageQueue.PeekByLookupId%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2872">To read a message with a specified identifier without removing it from the queue, use the <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> method.</span></span> <span data-ttu-id="7aa34-2873">没有与通过调用返回的消息关联事务上下文<xref:System.Messaging.MessageQueue.PeekByLookupId%2A>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2873">There is no transaction context associated with a message returned by a call to <xref:System.Messaging.MessageQueue.PeekByLookupId%2A>.</span></span> <span data-ttu-id="7aa34-2874">因为<xref:System.Messaging.MessageQueue.PeekByLookupId%2A>不会的删除队列中的任何消息，将无法回滚事务被中止。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2874">Because <xref:System.Messaging.MessageQueue.PeekByLookupId%2A> does not remove any messages from the queue, there would be nothing to roll back if the transaction were aborted.</span></span>  
  
 <span data-ttu-id="7aa34-2875">指定`Automatic`为`transactionType`参数，如果已存在外部事务上下文附加到你想要用于接收消息的线程。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2875">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to receive the message.</span></span> <span data-ttu-id="7aa34-2876">指定`Single`如果你想要接收的消息作为单个内部事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2876">Specify `Single` if you want to receive the message as a single internal transaction.</span></span> <span data-ttu-id="7aa34-2877">你可以指定`None`如果你想要接收来自外部事务上下文事务性队列的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2877">You can specify `None` if you want to receive a message from a transactional queue outside of a transaction context.</span></span>  
  
 <span data-ttu-id="7aa34-2878">如果调用此方法用于从事务性队列接收消息，接收的消息将返回到队列如果则中止此事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2878">If this method is called to receive a message from a transactional queue, the message that is received would be returned to the queue if the transaction is aborted.</span></span> <span data-ttu-id="7aa34-2879">消息永久性不删除从队列直到提交事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2879">The message is not permanently removed from the queue until the transaction is committed.</span></span>  
  
 <span data-ttu-id="7aa34-2880">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2880">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-2881">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-2881">Workgroup mode</span></span>|<span data-ttu-id="7aa34-2882">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-2882">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-2883">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2883">Local computer</span></span>|<span data-ttu-id="7aa34-2884">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2884">Yes</span></span>|  
|<span data-ttu-id="7aa34-2885">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2885">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-2886">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2886">Yes</span></span>|  
|<span data-ttu-id="7aa34-2887">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2887">Remote computer</span></span>|<span data-ttu-id="7aa34-2888">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-2888">No</span></span>|  
|<span data-ttu-id="7aa34-2889">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2889">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-2890">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2890">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="7aa34-2891">未安装 MSMQ 3.0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2891">MSMQ 3.0 is not installed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7aa34-2892">未能找到具有指定 <paramref name="lookupId" /> 的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2892">The message with the specified <paramref name="lookupId" /> could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-2893">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2893">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="7aa34-2894">
            <paramref name="action" /> 参数不是 <see cref="T:System.Messaging.MessageLookupAction" /> 成员之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2894">The <paramref name="action" /> parameter is not one of the <see cref="T:System.Messaging.MessageLookupAction" /> members.</span>
          </span>
          <span data-ttu-id="7aa34-2895">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2895">-or-</span>
          </span>
          <span data-ttu-id="7aa34-2896">
            <paramref name="transactionType" /> 参数不是 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成员之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2896">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.Message.LookupId" />
        <altmember cref="M:System.Messaging.MessageQueue.PeekByLookupId" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveCompleted">
      <MemberSignature Language="C#" Value="public event System.Messaging.ReceiveCompletedEventHandler ReceiveCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Messaging.ReceiveCompletedEventHandler ReceiveCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Messaging.MessageQueue.ReceiveCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ReceiveCompleted As ReceiveCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Messaging::ReceiveCompletedEventHandler ^ ReceiveCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_ReceiveCompleted")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.ReceiveCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-2897">在从队列移除某条消息后发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2897">Occurs when a message has been removed from the queue.</span>
          </span>
          <span data-ttu-id="7aa34-2898">此事件由异步操作 <see cref="M:System.Messaging.MessageQueue.BeginReceive" /> 引发。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2898">This event is raised by the asynchronous operation, <see cref="M:System.Messaging.MessageQueue.BeginReceive" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-2899"><xref:System.Messaging.MessageQueue.BeginReceive%2A> 在异步处理中用于引发<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件队列中出现一条消息时。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2899"><xref:System.Messaging.MessageQueue.BeginReceive%2A> is used in asynchronous processing to raise the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event when a message is available in the queue.</span></span>  
  
 <span data-ttu-id="7aa34-2900"><xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> 用于完成通过调用启动的操作<xref:System.Messaging.MessageQueue.BeginReceive%2A>和扫视消息时<xref:System.Messaging.MessageQueue.ReceiveCompleted>引发事件。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2900"><xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> is used to complete the operation initiated by a call to <xref:System.Messaging.MessageQueue.BeginReceive%2A> and peek the message when the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event is raised.</span></span>  
  
 <span data-ttu-id="7aa34-2901">创建 <xref:System.Messaging.ReceiveCompletedEventHandler> 委托时，需要标识将处理该事件的方法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2901">When you create a <xref:System.Messaging.ReceiveCompletedEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="7aa34-2902">若要将事件与事件处理程序关联，请将该委托的一个实例添加到事件中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2902">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="7aa34-2903">除非移除了该委托，否则每当发生该事件时就会调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2903">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="7aa34-2904">有关事件处理程序委托的详细信息，请参阅[NIB： 事件和委托](http://msdn.microsoft.com/library/d98fd58b-fa4f-4598-8378-addf4355a115)。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2904">For more information about event handler delegates, see [NIB: Events and Delegates](http://msdn.microsoft.com/library/d98fd58b-fa4f-4598-8378-addf4355a115).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-2905">下面的代码示例创建名为一个事件处理程序`MyReceiveCompleted`，将其附加到<xref:System.Messaging.MessageQueue.ReceiveCompleted>事件处理程序委托，然后调用<xref:System.Messaging.MessageQueue.BeginReceive%2A>启动异步接收操作位于路径的队列上"。 \myQueue"。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2905">The following code example creates an event handler named `MyReceiveCompleted`, attaches it to the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event handler delegate, and calls <xref:System.Messaging.MessageQueue.BeginReceive%2A> to initiate an asynchronous receive operation on the queue that is located at the path ".\myQueue".</span></span> <span data-ttu-id="7aa34-2906">当<xref:System.Messaging.MessageQueue.ReceiveCompleted>引发事件，该示例中接收的消息，并将其正文写入到屏幕。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2906">When a <xref:System.Messaging.MessageQueue.ReceiveCompleted> event is raised, the example receives the message and writes its body to the screen.</span></span> <span data-ttu-id="7aa34-2907">该示例然后调用<xref:System.Messaging.MessageQueue.BeginReceive%2A>再次以启动一个新异步接收操作。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2907">The example then calls <xref:System.Messaging.MessageQueue.BeginReceive%2A> again to initiate a new asynchronous receive operation.</span></span>  
  
 [!code-cpp[MessageQueue.ReceiveCompleted#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/CPP/mqreceivecompletedeventhandler.cpp#1)]
 [!code-csharp[MessageQueue.ReceiveCompleted#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/CS/mqreceivecompletedeventhandler.cs#1)]
 [!code-vb[MessageQueue.ReceiveCompleted#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/VB/mqreceivecompletedeventhandler.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
        <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="T:System.IAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-2908">刷新 <see cref="T:System.Messaging.MessageQueue" /> 所显示的属性以反映资源的当前状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2908">Refreshes the properties presented by the <see cref="T:System.Messaging.MessageQueue" /> to reflect the current state of the resource.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-2909"><xref:System.Messaging.MessageQueue.Refresh%2A> 同步的属性<xref:System.Messaging.MessageQueue>与其关联的消息队列服务器资源。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2909"><xref:System.Messaging.MessageQueue.Refresh%2A> synchronizes the properties of a <xref:System.Messaging.MessageQueue> with its associated Message Queuing server resource.</span></span> <span data-ttu-id="7aa34-2910">如果任何属性，如<xref:System.Messaging.MessageQueue.Label%2A>或<xref:System.Messaging.MessageQueue.Category%2A>，以来已更改服务器上<xref:System.Messaging.MessageQueue>已创建，<xref:System.Messaging.MessageQueue.Refresh%2A>更新<xref:System.Messaging.MessageQueue>使用新信息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2910">If any property, such as <xref:System.Messaging.MessageQueue.Label%2A> or <xref:System.Messaging.MessageQueue.Category%2A>, has changed on the server since the time the <xref:System.Messaging.MessageQueue> was created, <xref:System.Messaging.MessageQueue.Refresh%2A> updates the <xref:System.Messaging.MessageQueue> with the new information.</span></span>  
  
 <span data-ttu-id="7aa34-2911">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2911">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-2912">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-2912">Workgroup mode</span></span>|<span data-ttu-id="7aa34-2913">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-2913">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-2914">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2914">Local computer</span></span>|<span data-ttu-id="7aa34-2915">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2915">Yes</span></span>|  
|<span data-ttu-id="7aa34-2916">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2916">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-2917">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2917">Yes</span></span>|  
|<span data-ttu-id="7aa34-2918">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2918">Remote computer</span></span>|<span data-ttu-id="7aa34-2919">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-2919">No</span></span>|  
|<span data-ttu-id="7aa34-2920">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2920">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-2921">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2921">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-2922">以下代码示例演示了 <xref:System.Messaging.MessageQueue.Refresh%2A> 的用法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2922">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.Refresh%2A>.</span></span>  
  
 [!code-cpp[MessageQueue2#28](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#28)]
 [!code-csharp[MessageQueue2#28](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#28)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
      </Docs>
    </Member>
    <Member MemberName="ResetPermissions">
      <MemberSignature Language="C#" Value="public void ResetPermissions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetPermissions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.ResetPermissions" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetPermissions ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetPermissions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-2923">将权限列表重置为操作系统的默认值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2923">Resets the permission list to the operating system's default values.</span>
          </span>
          <span data-ttu-id="7aa34-2924">移除已追加到默认列表中的所有队列权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2924">Removes any queue permissions you have appended to the default list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-2925">当调用<xref:System.Messaging.MessageQueue.ResetPermissions%2A>，为其默认值返回权限列表。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2925">When you call <xref:System.Messaging.MessageQueue.ResetPermissions%2A>, you return the permission list to its default values.</span></span> <span data-ttu-id="7aa34-2926">通常，这授予队列创建者的所有权限，并给予每个人对组的以下权限：</span><span class="sxs-lookup"><span data-stu-id="7aa34-2926">Generally, this grants the queue creator all permissions, and gives the group Everyone the following rights:</span></span>  
  
-   <span data-ttu-id="7aa34-2927">获取队列的属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2927">Get the properties of the queue.</span></span>  
  
-   <span data-ttu-id="7aa34-2928">获取队列的权限。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2928">Get queue permissions.</span></span>  
  
-   <span data-ttu-id="7aa34-2929">写入队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2929">Write to the queue.</span></span>  
  
 <span data-ttu-id="7aa34-2930">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2930">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-2931">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-2931">Workgroup mode</span></span>|<span data-ttu-id="7aa34-2932">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-2932">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-2933">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2933">Local computer</span></span>|<span data-ttu-id="7aa34-2934">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2934">Yes</span></span>|  
|<span data-ttu-id="7aa34-2935">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2935">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-2936">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2936">Yes</span></span>|  
|<span data-ttu-id="7aa34-2937">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2937">Remote computer</span></span>|<span data-ttu-id="7aa34-2938">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-2938">No</span></span>|  
|<span data-ttu-id="7aa34-2939">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2939">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-2940">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-2940">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-2941">以下代码示例演示了 <xref:System.Messaging.MessageQueue.ResetPermissions%2A> 的用法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2941">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.ResetPermissions%2A>.</span></span>  
  
 [!code-cpp[MessageQueue2#27](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#27)]
 [!code-csharp[MessageQueue2#27](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-2942">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2942">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-2943">向队列发送对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2943">Sends an object to a queue.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Send(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="7aa34-2944">要发送到队列的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2944">The object to send to the queue.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-2945">将对象发送到此 <see cref="T:System.Messaging.MessageQueue" /> 引用的非事务性队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2945">Sends an object to non-transactional queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-2946">使用此重载将发送一条消息，包含`obj`参数所引用的队列<xref:System.Messaging.MessageQueue>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2946">Use this overload to send a message that contains the `obj` parameter to the queue referenced by the <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="7aa34-2947">向队列发送该对象可以为<xref:System.Messaging.Message>或任何托管的对象。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2947">The object you send to the queue can be a <xref:System.Messaging.Message> or any managed object.</span></span> <span data-ttu-id="7aa34-2948">如果不发送任何对象<xref:System.Messaging.Message>，序列化对象并将其插入到消息的正文。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2948">If you send any object other than a <xref:System.Messaging.Message>, the object is serialized and inserted into the body of the message.</span></span>  
  
 <span data-ttu-id="7aa34-2949">如果使用此重载以将消息发送到事务性队列，消息将发送到死信队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2949">If you use this overload to send a message to a transactional queue, the message will be sent to the dead-letter queue.</span></span> <span data-ttu-id="7aa34-2950">如果你想要是包含其他消息的事务的一部分的消息，请使用采用重载<xref:System.Messaging.MessageQueueTransaction>或<xref:System.Messaging.MessageQueueTransactionType>作为参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2950">If you want the message to be part of a transaction that contains other messages, use an overload that takes a <xref:System.Messaging.MessageQueueTransaction> or <xref:System.Messaging.MessageQueueTransactionType> as a parameter.</span></span>  
  
 <span data-ttu-id="7aa34-2951">如果你未设置<xref:System.Messaging.MessageQueue.Formatter%2A>属性之前调用<xref:System.Messaging.MessageQueue.Send%28System.Object%29>，格式化程序将默认为<xref:System.Messaging.XmlMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2951">If you do not set the <xref:System.Messaging.MessageQueue.Formatter%2A> property before calling <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, the formatter defaults to the <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 <span data-ttu-id="7aa34-2952"><xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>属性而不应用于任何对象<xref:System.Messaging.Message>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2952">The <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property applies to any object other than a <xref:System.Messaging.Message>.</span></span> <span data-ttu-id="7aa34-2953">如果指定，例如，标签或优先级使用<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>成员，这些值将应用于包含的类型不是对象的任何消息<xref:System.Messaging.Message>时你的应用程序将其发送到队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2953">If you specify, for example, a label or a priority using the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> member, these values apply to any message that contains an object that is not of type <xref:System.Messaging.Message> when your application sends it to the queue.</span></span> <span data-ttu-id="7aa34-2954">发送时<xref:System.Messaging.Message>，属性值设置为<xref:System.Messaging.Message>优先于<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>和消息的<xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType>属性优先于队列的<xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2954">When sending a <xref:System.Messaging.Message>, the property values set for the <xref:System.Messaging.Message> take precedence over <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> and the message's <xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType> property takes precedence over the queue's <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="7aa34-2955">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2955">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-2956">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-2956">Workgroup mode</span></span>|<span data-ttu-id="7aa34-2957">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-2957">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-2958">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2958">Local computer</span></span>|<span data-ttu-id="7aa34-2959">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2959">Yes</span></span>|  
|<span data-ttu-id="7aa34-2960">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2960">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-2961">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2961">Yes</span></span>|  
|<span data-ttu-id="7aa34-2962">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2962">Remote computer</span></span>|<span data-ttu-id="7aa34-2963">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-2963">No</span></span>|  
|<span data-ttu-id="7aa34-2964">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2964">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-2965">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2965">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-2966">下面的代码示例连接到消息队列，并向队列发送消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2966">The following code example connects to a message queue and sends a message to the queue.</span></span>  
  
 [!code-cpp[MessageQueue.Send_obj#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Send_obj/CPP/mqsend_generic.cpp#1)]
 [!code-csharp[MessageQueue.Send_obj#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Send_obj/CS/mqsend_generic.cs#1)]
 [!code-vb[MessageQueue.Send_obj#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Send_obj/VB/mqsend_generic.vb#1)]  
  
 <span data-ttu-id="7aa34-2967">下面的代码示例将发送应用程序定义`Order`类到队列，然后从该队列接收消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2967">The following code example sends an application-defined `Order` class to a queue and then receives a message from that queue.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-2968">尚未设置 <see cref="P:System.Messaging.MessageQueue.Path" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2968">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.</span>
          </span>
          <span data-ttu-id="7aa34-2969">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2969">-or-</span>
          </span>
          <span data-ttu-id="7aa34-2970">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2970">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="P:System.Messaging.MessageQueue.Path" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (object obj, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(object obj, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (obj As Object, transaction As MessageQueueTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Object ^ obj, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="7aa34-2971">要发送到队列的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2971">The object to send to the queue.</span>
          </span>
        </param>
        <param name="transaction">
          <span data-ttu-id="7aa34-2972">
            <see cref="T:System.Messaging.MessageQueueTransaction" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2972">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-2973">将对象发送到此 <see cref="T:System.Messaging.MessageQueue" /> 所引用的事务性队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2973">Sends an object to the transactional queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-2974">使用此重载将发送一条消息，包含`obj`为事务性队列的引用参数<xref:System.Messaging.MessageQueue>，使用所定义的内部事务上下文`transaction`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2974">Use this overload to send a message that contains the `obj` parameter to the transactional queue referenced by the <xref:System.Messaging.MessageQueue>, using an internal transaction context defined by the `transaction` parameter.</span></span> <span data-ttu-id="7aa34-2975">向队列发送该对象可以为<xref:System.Messaging.Message>或任何托管的对象。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2975">The object you send to the queue can be a <xref:System.Messaging.Message> or any managed object.</span></span> <span data-ttu-id="7aa34-2976">如果不发送任何对象<xref:System.Messaging.Message>，序列化对象并将其插入到消息的正文。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2976">If you send any object other than a <xref:System.Messaging.Message>, the object is serialized and inserted into the body of the message.</span></span>  
  
 <span data-ttu-id="7aa34-2977">如果使用此重载以将消息发送到非事务性队列，则消息可能会发送到死信队列中而不引发异常。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2977">If you use this overload to send a message to a non-transactional queue, the message might be sent to the dead-letter queue without throwing an exception.</span></span>  
  
 <span data-ttu-id="7aa34-2978">如果你未设置<xref:System.Messaging.MessageQueue.Formatter%2A>属性之前调用<xref:System.Messaging.MessageQueue.Send%28System.Object%29>，格式化程序将默认为<xref:System.Messaging.XmlMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2978">If you do not set the <xref:System.Messaging.MessageQueue.Formatter%2A> property before calling <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, the formatter defaults to the <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 <span data-ttu-id="7aa34-2979"><xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>属性而不应用于任何对象<xref:System.Messaging.Message>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2979">The <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property applies to any object other than a <xref:System.Messaging.Message>.</span></span> <span data-ttu-id="7aa34-2980">如果指定，例如，标签或优先级使用<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>成员，这些值将应用于包含的类型不是对象的任何消息<xref:System.Messaging.Message>时你的应用程序将其发送到队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2980">If you specify, for example, a label or a priority using the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> member, these values apply to any message that contains an object that is not of type <xref:System.Messaging.Message> when your application sends it to the queue.</span></span> <span data-ttu-id="7aa34-2981">发送时<xref:System.Messaging.Message>，属性值设置为<xref:System.Messaging.Message>优先于<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>和消息的<xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType>属性优先于队列的<xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2981">When sending a <xref:System.Messaging.Message>, the property values set for the <xref:System.Messaging.Message> take precedence over <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> and the message's <xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType> property takes precedence over the queue's <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="7aa34-2982"><xref:System.Messaging.MessageQueueTransaction> 线程处理单元感知，因此，如果你的单元状态`STA`，不能在多个线程中使用的事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2982"><xref:System.Messaging.MessageQueueTransaction> is threading apartment aware, so if your apartment state is `STA`, you cannot use the transaction in multiple threads.</span></span> <span data-ttu-id="7aa34-2983">Visual Basic 将设置到的主线程的状态`STA`，因此您必须首先应用<xref:System.MTAThreadAttribute>中`Main`子例程。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2983">Visual Basic sets the state of the main thread to `STA`, so you must apply the <xref:System.MTAThreadAttribute> in the `Main` subroutine.</span></span> <span data-ttu-id="7aa34-2984">否则，利用另一个线程发送事务性消息将引发 <xref:System.Messaging.MessageQueueException> 异常。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2984">Otherwise, sending a transactional message using another thread throws a <xref:System.Messaging.MessageQueueException> exception.</span></span> <span data-ttu-id="7aa34-2985">你将应用<xref:System.MTAThreadAttribute>通过使用下面的片段。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2985">You apply the <xref:System.MTAThreadAttribute> by using the following fragment.</span></span>  
  
```vb  
<System.MTAThreadAttribute>  
 public sub Main()  
```  
  
 <span data-ttu-id="7aa34-2986">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2986">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-2987">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-2987">Workgroup mode</span></span>|<span data-ttu-id="7aa34-2988">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-2988">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-2989">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2989">Local computer</span></span>|<span data-ttu-id="7aa34-2990">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2990">Yes</span></span>|  
|<span data-ttu-id="7aa34-2991">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2991">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-2992">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2992">Yes</span></span>|  
|<span data-ttu-id="7aa34-2993">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-2993">Remote computer</span></span>|<span data-ttu-id="7aa34-2994">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-2994">No</span></span>|  
|<span data-ttu-id="7aa34-2995">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-2995">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-2996">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-2996">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-2997">下面的代码示例将字符串发送到事务性队列，，然后从该队列接收消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-2997">The following code example sends a string to a transactional queue and then receives a message from that queue.</span></span>  
  
 [!code-cpp[MessageQueue.Send_ObjectTransaction#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.Send_ObjectTransaction/CPP/mqsend_objtransaction.cpp#1)]
 [!code-csharp[MessageQueue.Send_ObjectTransaction#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.Send_ObjectTransaction/CS/mqsend_objtransaction.cs#1)]
 [!code-vb[MessageQueue.Send_ObjectTransaction#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.Send_ObjectTransaction/VB/mqsend_objtransaction.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7aa34-2998">
            <paramref name="transaction" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2998">The <paramref name="transaction" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-2999">尚未设置 <see cref="P:System.Messaging.MessageQueue.Path" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-2999">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.</span>
          </span>
          <span data-ttu-id="7aa34-3000">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3000">-or-</span>
          </span>
          <span data-ttu-id="7aa34-3001">“消息队列”应用程序指示事务用法不正确。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3001">The Message Queuing application indicated an incorrect transaction use.</span>
          </span>
          <span data-ttu-id="7aa34-3002">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3002">-or-</span>
          </span>
          <span data-ttu-id="7aa34-3003">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3003">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (object obj, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(object obj, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (obj As Object, transactionType As MessageQueueTransactionType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Object ^ obj, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="7aa34-3004">要发送到队列的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3004">The object to send to the queue.</span>
          </span>
        </param>
        <param name="transactionType">
          <span data-ttu-id="7aa34-3005">
            <see cref="T:System.Messaging.MessageQueueTransactionType" /> 值之一，它描述与消息关联的事务上下文的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3005">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-3006">将对象发送到此 <see cref="T:System.Messaging.MessageQueue" /> 所引用的队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3006">Sends an object to the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-3007">使用此重载将发送一条消息，包含`obj`参数所引用的队列<xref:System.Messaging.MessageQueue>，使用定义的事务上下文`transactionType`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3007">Use this overload to send a message that contains the `obj` parameter to the queue referenced by the <xref:System.Messaging.MessageQueue>, using a transaction context defined by the `transactionType` parameter.</span></span> <span data-ttu-id="7aa34-3008">指定`Automatic`为`transactionType`参数，如果已存在外部事务上下文附加到你想要用于发送消息的线程。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3008">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to send the message.</span></span> <span data-ttu-id="7aa34-3009">指定`Single`如果你想要将消息发送作为单个内部事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3009">Specify `Single` if you want to send the message as a single internal transaction.</span></span> <span data-ttu-id="7aa34-3010">你可以指定`None`如果你想要将事务性消息发送到非事务性的线程。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3010">You can specify `None` if you want to send a transactional message to a non-transactional thread.</span></span>  
  
 <span data-ttu-id="7aa34-3011">向队列发送该对象可以为<xref:System.Messaging.Message>或任何托管的对象。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3011">The object you send to the queue can be a <xref:System.Messaging.Message> or any managed object.</span></span> <span data-ttu-id="7aa34-3012">如果不发送任何对象<xref:System.Messaging.Message>，序列化对象并将其插入到消息的正文。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3012">If you send any object other than a <xref:System.Messaging.Message>, the object is serialized and inserted into the body of the message.</span></span>  
  
 <span data-ttu-id="7aa34-3013">如果你未设置<xref:System.Messaging.MessageQueue.Formatter%2A>属性之前调用<xref:System.Messaging.MessageQueue.Send%28System.Object%29>，格式化程序将默认为<xref:System.Messaging.XmlMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3013">If you do not set the <xref:System.Messaging.MessageQueue.Formatter%2A> property before calling <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, the formatter defaults to the <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 <span data-ttu-id="7aa34-3014"><xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>属性而不应用于任何对象<xref:System.Messaging.Message>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3014">The <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property applies to any object other than a <xref:System.Messaging.Message>.</span></span> <span data-ttu-id="7aa34-3015">如果指定，例如，标签或优先级使用<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>成员，这些值将应用于包含的类型不是对象的任何消息<xref:System.Messaging.Message>时你的应用程序将其发送到队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3015">If you specify, for example, a label or a priority using the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> member, these values apply to any message that contains an object that is not of type <xref:System.Messaging.Message> when your application sends it to the queue.</span></span> <span data-ttu-id="7aa34-3016">发送时<xref:System.Messaging.Message>，属性值设置为<xref:System.Messaging.Message>优先于<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>和消息的<xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType>属性优先于队列的<xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3016">When sending a <xref:System.Messaging.Message>, the property values set for the <xref:System.Messaging.Message> take precedence over <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> and the message's <xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType> property takes precedence over the queue's <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="7aa34-3017">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3017">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-3018">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-3018">Workgroup mode</span></span>|<span data-ttu-id="7aa34-3019">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-3019">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-3020">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-3020">Local computer</span></span>|<span data-ttu-id="7aa34-3021">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-3021">Yes</span></span>|  
|<span data-ttu-id="7aa34-3022">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-3022">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-3023">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-3023">Yes</span></span>|  
|<span data-ttu-id="7aa34-3024">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-3024">Remote computer</span></span>|<span data-ttu-id="7aa34-3025">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-3025">No</span></span>|  
|<span data-ttu-id="7aa34-3026">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-3026">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-3027">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-3027">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-3028">以下代码示例演示了 <xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.Messaging.MessageQueueTransactionType%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3028">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.Messaging.MessageQueueTransactionType%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#2](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#2)]
 [!code-csharp[MessageQueue2#2](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="7aa34-3029">
            <paramref name="transactionType" /> 参数不是 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成员之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3029">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-3030">尚未设置 <see cref="P:System.Messaging.MessageQueue.Path" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3030">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.</span>
          </span>
          <span data-ttu-id="7aa34-3031">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3031">-or-</span>
          </span>
          <span data-ttu-id="7aa34-3032">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3032">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
        <altmember cref="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (object obj, string label);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(object obj, string label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Send(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (obj As Object, label As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Object ^ obj, System::String ^ label);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="label" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="7aa34-3033">要发送到队列的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3033">The object to send to the queue.</span>
          </span>
        </param>
        <param name="label">
          <span data-ttu-id="7aa34-3034">消息的标签。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3034">The label of the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-3035">将对象发送到此 <see cref="T:System.Messaging.MessageQueue" /> 引用的非事务性队列，并指定消息的标签。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3035">Sends an object to the non-transactional queue referenced by this <see cref="T:System.Messaging.MessageQueue" /> and specifies a label for the message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-3036">使用此重载将发送一条消息，包含`obj`参数所引用的队列<xref:System.Messaging.MessageQueue>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3036">Use this overload to send a message that contains the `obj` parameter to the queue referenced by the <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="7aa34-3037">使用此重载，你可以指定用于标识消息的字符串为标签。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3037">With this overload, you can specify the string label that identifies the message.</span></span> <span data-ttu-id="7aa34-3038">向队列发送该对象可以为<xref:System.Messaging.Message>，结构、 数据对象或任何托管的对象。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3038">The object you send to the queue can be a <xref:System.Messaging.Message>, a structure, a data object, or any managed object.</span></span> <span data-ttu-id="7aa34-3039">如果不发送任何对象<xref:System.Messaging.Message>，序列化对象并将其插入到消息的正文。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3039">If you send any object other than a <xref:System.Messaging.Message>, the object is serialized and inserted into the body of the message.</span></span>  
  
 <span data-ttu-id="7aa34-3040">消息标签是不同于消息队列标签，但又彼此是与应用程序相关的和没有继承到消息队列的含义。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3040">The message label is distinct from the message queue label, but both are application-dependent and have no inherit meaning to Message Queuing.</span></span>  
  
 <span data-ttu-id="7aa34-3041">如果使用此重载以将消息发送到事务性队列，消息将发送到死信队列中。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3041">If you use this overload to send a message to a transactional queue, the message will be sent to the dead-letter queue.</span></span> <span data-ttu-id="7aa34-3042">如果你想要是包含其他消息的事务的一部分的消息，请使用采用重载<xref:System.Messaging.MessageQueueTransaction>或<xref:System.Messaging.MessageQueueTransactionType>作为参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3042">If you want the message to be part of a transaction that contains other messages, use an overload that takes a <xref:System.Messaging.MessageQueueTransaction> or <xref:System.Messaging.MessageQueueTransactionType> as a parameter.</span></span>  
  
 <span data-ttu-id="7aa34-3043"><xref:System.Messaging.MessageQueue.Path%2A>此属性<xref:System.Messaging.MessageQueue>发送消息之前，必须指定实例。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3043">The <xref:System.Messaging.MessageQueue.Path%2A> property for this <xref:System.Messaging.MessageQueue> instance must be specified before you send the message.</span></span> <span data-ttu-id="7aa34-3044">如果你未设置<xref:System.Messaging.MessageQueue.Formatter%2A>属性之前调用<xref:System.Messaging.MessageQueue.Send%28System.Object%29>，格式化程序将默认为<xref:System.Messaging.XmlMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3044">If you do not set the <xref:System.Messaging.MessageQueue.Formatter%2A> property before calling <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, the formatter defaults to the <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 <span data-ttu-id="7aa34-3045"><xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>属性而不应用于任何对象<xref:System.Messaging.Message>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3045">The <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property applies to any object other than a <xref:System.Messaging.Message>.</span></span> <span data-ttu-id="7aa34-3046">如果指定，例如，标签或优先级使用<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>成员，这些值将应用于包含的类型不是对象的任何消息<xref:System.Messaging.Message>时你的应用程序将其发送到队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3046">If you specify, for example, a label or a priority using the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> member, these values apply to any message that contains an object that is not of type <xref:System.Messaging.Message> when your application sends it to the queue.</span></span> <span data-ttu-id="7aa34-3047">发送时<xref:System.Messaging.Message>，属性值设置为<xref:System.Messaging.Message>优先于<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>和消息的<xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType>属性优先于队列的<xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3047">When sending a <xref:System.Messaging.Message>, the property values set for the <xref:System.Messaging.Message> take precedence over <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> and the message's <xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType> property takes precedence over the queue's <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="7aa34-3048">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3048">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-3049">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-3049">Workgroup mode</span></span>|<span data-ttu-id="7aa34-3050">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-3050">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-3051">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-3051">Local computer</span></span>|<span data-ttu-id="7aa34-3052">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-3052">Yes</span></span>|  
|<span data-ttu-id="7aa34-3053">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-3053">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-3054">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-3054">Yes</span></span>|  
|<span data-ttu-id="7aa34-3055">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-3055">Remote computer</span></span>|<span data-ttu-id="7aa34-3056">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-3056">No</span></span>|  
|<span data-ttu-id="7aa34-3057">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-3057">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-3058">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-3058">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-3059">以下代码示例演示了 <xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.String%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3059">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.String%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#1)]
 [!code-csharp[MessageQueue2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7aa34-3060">
            <paramref name="label" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3060">The <paramref name="label" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-3061">尚未设置 <see cref="P:System.Messaging.MessageQueue.Path" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3061">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.</span>
          </span>
          <span data-ttu-id="7aa34-3062">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3062">-or-</span>
          </span>
          <span data-ttu-id="7aa34-3063">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3063">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (object obj, string label, System.Messaging.MessageQueueTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(object obj, string label, class System.Messaging.MessageQueueTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (obj As Object, label As String, transaction As MessageQueueTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Object ^ obj, System::String ^ label, System::Messaging::MessageQueueTransaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="transaction" Type="System.Messaging.MessageQueueTransaction" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="7aa34-3064">要发送到队列的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3064">The object to send to the queue.</span>
          </span>
        </param>
        <param name="label">
          <span data-ttu-id="7aa34-3065">消息的标签。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3065">The label of the message.</span>
          </span>
        </param>
        <param name="transaction">
          <span data-ttu-id="7aa34-3066">
            <see cref="T:System.Messaging.MessageQueueTransaction" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3066">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-3067">将对象发送到此 <see cref="T:System.Messaging.MessageQueue" /> 引用的事务性队列中，并指定该消息的标签。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3067">Sends an object to the transactional queue referenced by this <see cref="T:System.Messaging.MessageQueue" /> and specifies a label for the message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-3068">使用此重载将发送一条消息，包含`obj`为事务性队列的引用参数<xref:System.Messaging.MessageQueue>，使用所定义的内部事务上下文`transaction`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3068">Use this overload to send a message that contains the `obj` parameter to the transactional queue referenced by the <xref:System.Messaging.MessageQueue>, using an internal transaction context defined by the `transaction` parameter.</span></span> <span data-ttu-id="7aa34-3069">使用此重载，你可以指定用于标识消息的字符串为标签。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3069">With this overload, you can specify the string label that identifies the message.</span></span> <span data-ttu-id="7aa34-3070">向队列发送该对象可以为<xref:System.Messaging.Message>，结构、 数据对象或任何托管的对象。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3070">The object you send to the queue can be a <xref:System.Messaging.Message>, a structure, a data object, or any managed object.</span></span> <span data-ttu-id="7aa34-3071">如果不发送任何对象<xref:System.Messaging.Message>，序列化对象并将其插入到消息的正文。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3071">If you send any object other than a <xref:System.Messaging.Message>, the object is serialized and inserted into the body of the message.</span></span>  
  
 <span data-ttu-id="7aa34-3072">消息标签是不同于消息队列标签，但又彼此是与应用程序相关的和没有继承到消息队列的含义。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3072">The message label is distinct from the message queue label, but both are application-dependent and have no inherit meaning to Message Queuing.</span></span>  
  
 <span data-ttu-id="7aa34-3073">如果使用此重载以将消息发送到非事务性队列，则消息可能会发送到死信队列中而不引发异常。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3073">If you use this overload to send a message to a non-transactional queue, the message might be sent to the dead-letter queue without throwing an exception.</span></span>  
  
 <span data-ttu-id="7aa34-3074">如果你未设置<xref:System.Messaging.MessageQueue.Formatter%2A>属性之前调用<xref:System.Messaging.MessageQueue.Send%28System.Object%29>，格式化程序将默认为<xref:System.Messaging.XmlMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3074">If you do not set the <xref:System.Messaging.MessageQueue.Formatter%2A> property before calling <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, the formatter defaults to the <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 <span data-ttu-id="7aa34-3075"><xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>属性而不应用于任何对象<xref:System.Messaging.Message>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3075">The <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property applies to any object other than a <xref:System.Messaging.Message>.</span></span> <span data-ttu-id="7aa34-3076">如果指定，例如，标签或优先级使用<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>成员，这些值将应用于包含的类型不是对象的任何消息<xref:System.Messaging.Message>时你的应用程序将其发送到队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3076">If you specify, for example, a label or a priority using the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> member, these values apply to any message that contains an object that is not of type <xref:System.Messaging.Message> when your application sends it to the queue.</span></span> <span data-ttu-id="7aa34-3077">发送时<xref:System.Messaging.Message>，属性值设置为<xref:System.Messaging.Message>优先于<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>和消息的<xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType>属性优先于队列的<xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType>属性</span><span class="sxs-lookup"><span data-stu-id="7aa34-3077">When sending a <xref:System.Messaging.Message>, the property values set for the <xref:System.Messaging.Message> take precedence over <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> and the message's <xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType> property takes precedence over the queue's <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> property</span></span>  
  
 <span data-ttu-id="7aa34-3078"><xref:System.Messaging.MessageQueueTransaction> 线程处理单元感知，因此，如果你的单元状态`STA`，不能在多个线程中使用的事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3078"><xref:System.Messaging.MessageQueueTransaction> is threading apartment aware, so if your apartment state is `STA`, you cannot use the transaction in multiple threads.</span></span> <span data-ttu-id="7aa34-3079">Visual Basic 将设置到的主线程的状态`STA`，因此您必须首先应用<xref:System.MTAThreadAttribute>中`Main`子例程。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3079">Visual Basic sets the state of the main thread to `STA`, so you must apply the <xref:System.MTAThreadAttribute> in the `Main` subroutine.</span></span> <span data-ttu-id="7aa34-3080">否则，利用另一个线程发送事务性消息将引发 <xref:System.Messaging.MessageQueueException> 异常。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3080">Otherwise, sending a transactional message using another thread throws a <xref:System.Messaging.MessageQueueException> exception.</span></span> <span data-ttu-id="7aa34-3081">你将应用<xref:System.MTAThreadAttribute>通过使用下面的片段。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3081">You apply the <xref:System.MTAThreadAttribute> by using the following fragment.</span></span>  
  
```vb  
<System.MTAThreadAttribute>  
 public sub Main()  
```  
  
 <span data-ttu-id="7aa34-3082">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3082">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-3083">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-3083">Workgroup mode</span></span>|<span data-ttu-id="7aa34-3084">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-3084">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-3085">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-3085">Local computer</span></span>|<span data-ttu-id="7aa34-3086">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-3086">Yes</span></span>|  
|<span data-ttu-id="7aa34-3087">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-3087">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-3088">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-3088">Yes</span></span>|  
|<span data-ttu-id="7aa34-3089">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-3089">Remote computer</span></span>|<span data-ttu-id="7aa34-3090">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-3090">No</span></span>|  
|<span data-ttu-id="7aa34-3091">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-3091">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-3092">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-3092">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-3093">以下代码示例演示了 <xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.String%2CSystem.Messaging.MessageQueueTransaction%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3093">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.String%2CSystem.Messaging.MessageQueueTransaction%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#4](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#4)]
 [!code-csharp[MessageQueue2#4](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7aa34-3094">
            <paramref name="label" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3094">The <paramref name="label" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="7aa34-3095">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3095">-or-</span>
          </span>
          <span data-ttu-id="7aa34-3096">
            <paramref name="transaction" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3096">The <paramref name="transaction" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-3097">尚未设置 <see cref="P:System.Messaging.MessageQueue.Path" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3097">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.</span>
          </span>
          <span data-ttu-id="7aa34-3098">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3098">-or-</span>
          </span>
          <span data-ttu-id="7aa34-3099">“消息队列”应用程序指示了不正确的事务用法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3099">The Message Queuing application indicated an incorrect transaction usage.</span>
          </span>
          <span data-ttu-id="7aa34-3100">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3100">-or-</span>
          </span>
          <span data-ttu-id="7aa34-3101">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3101">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="T:System.Messaging.MessageQueueTransaction" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (object obj, string label, System.Messaging.MessageQueueTransactionType transactionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(object obj, string label, valuetype System.Messaging.MessageQueueTransactionType transactionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (obj As Object, label As String, transactionType As MessageQueueTransactionType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Object ^ obj, System::String ^ label, System::Messaging::MessageQueueTransactionType transactionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="transactionType" Type="System.Messaging.MessageQueueTransactionType" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="7aa34-3102">要发送到队列的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3102">The object to send to the queue.</span>
          </span>
        </param>
        <param name="label">
          <span data-ttu-id="7aa34-3103">消息的标签。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3103">The label of the message.</span>
          </span>
        </param>
        <param name="transactionType">
          <span data-ttu-id="7aa34-3104">
            <see cref="T:System.Messaging.MessageQueueTransactionType" /> 值之一，它描述与消息关联的事务上下文的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3104">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-3105">将对象发送到此 <see cref="T:System.Messaging.MessageQueue" /> 引用的队列中，并指定该消息的标签。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3105">Sends an object to the queue referenced by this <see cref="T:System.Messaging.MessageQueue" /> and specifies a label for the message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-3106">使用此重载将发送一条消息，包含`obj`参数所引用的队列<xref:System.Messaging.MessageQueue>，使用定义的事务上下文`transactionType`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3106">Use this overload to send a message that contains the `obj` parameter to the queue referenced by the <xref:System.Messaging.MessageQueue>, using a transaction context defined by the `transactionType` parameter.</span></span> <span data-ttu-id="7aa34-3107">指定`Automatic`为`transactionType`参数，如果已存在外部事务上下文附加到你想要用于发送消息的线程。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3107">Specify `Automatic` for the `transactionType` parameter if there is already an external transaction context attached to the thread that you want to use to send the message.</span></span> <span data-ttu-id="7aa34-3108">指定`Single`如果你想要将消息发送作为单个内部事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3108">Specify `Single` if you want to send the message as a single internal transaction.</span></span> <span data-ttu-id="7aa34-3109">你可以指定`None`如果你想要将事务性消息发送到非事务性的线程。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3109">You can specify `None` if you want to send a transactional message to a non-transactional thread.</span></span>  
  
 <span data-ttu-id="7aa34-3110">向队列发送该对象可以为<xref:System.Messaging.Message>或任何托管的对象。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3110">The object you send to the queue can be a <xref:System.Messaging.Message> or any managed object.</span></span> <span data-ttu-id="7aa34-3111">如果不发送任何对象<xref:System.Messaging.Message>，序列化对象并将其插入到消息的正文。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3111">If you send any object other than a <xref:System.Messaging.Message>, the object is serialized and inserted into the body of the message.</span></span> <span data-ttu-id="7aa34-3112">使用此重载，你可以指定用于标识消息的字符串为标签。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3112">With this overload, you can specify the string label that identifies the message.</span></span>  
  
 <span data-ttu-id="7aa34-3113">消息标签是不同于消息队列标签，但又彼此是与应用程序相关的和没有继承到消息队列的含义。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3113">The message label is distinct from the message queue label, but both are application-dependent and have no inherit meaning to Message Queuing.</span></span>  
  
 <span data-ttu-id="7aa34-3114">如果你未设置<xref:System.Messaging.MessageQueue.Formatter%2A>属性之前调用<xref:System.Messaging.MessageQueue.Send%28System.Object%29>，格式化程序将默认为<xref:System.Messaging.XmlMessageFormatter>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3114">If you do not set the <xref:System.Messaging.MessageQueue.Formatter%2A> property before calling <xref:System.Messaging.MessageQueue.Send%28System.Object%29>, the formatter defaults to the <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
 <span data-ttu-id="7aa34-3115"><xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>属性而不应用于任何对象<xref:System.Messaging.Message>。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3115">The <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> property applies to any object other than a <xref:System.Messaging.Message>.</span></span> <span data-ttu-id="7aa34-3116">如果指定，例如，标签或优先级使用<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>成员，这些值将应用于包含的类型不是对象的任何消息<xref:System.Messaging.Message>时你的应用程序将其发送到队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3116">If you specify, for example, a label or a priority using the <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A> member, these values apply to any message that contains an object that is not of type <xref:System.Messaging.Message> when your application sends it to the queue.</span></span> <span data-ttu-id="7aa34-3117">发送时<xref:System.Messaging.Message>，属性值设置为<xref:System.Messaging.Message>优先于<xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>，和消息的<xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType>属性优先于队列的<xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3117">When sending a <xref:System.Messaging.Message>, the property values set for the <xref:System.Messaging.Message> take precedence over <xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A>, and the message's <xref:System.Messaging.Message.Formatter%2A?displayProperty=nameWithType> property takes precedence over the queue's <xref:System.Messaging.MessageQueue.Formatter%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="7aa34-3118">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3118">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-3119">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-3119">Workgroup mode</span></span>|<span data-ttu-id="7aa34-3120">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-3120">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-3121">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-3121">Local computer</span></span>|<span data-ttu-id="7aa34-3122">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-3122">Yes</span></span>|  
|<span data-ttu-id="7aa34-3123">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-3123">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-3124">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-3124">Yes</span></span>|  
|<span data-ttu-id="7aa34-3125">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-3125">Remote computer</span></span>|<span data-ttu-id="7aa34-3126">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-3126">No</span></span>|  
|<span data-ttu-id="7aa34-3127">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-3127">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-3128">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-3128">Yes</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-3129">以下代码示例演示了 <xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.String%2CSystem.Messaging.MessageQueueTransactionType%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3129">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.Send%28System.Object%2CSystem.String%2CSystem.Messaging.MessageQueueTransactionType%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#3](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#3)]
 [!code-csharp[MessageQueue2#3](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7aa34-3130">
            <paramref name="label" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3130">The <paramref name="label" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueTransaction">
          <span data-ttu-id="7aa34-3131">“消息队列”应用程序指示了不正确的事务用法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3131">The Message Queuing application indicated an incorrect transaction usage.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="7aa34-3132">
            <paramref name="transactionType" /> 参数不是 <see cref="T:System.Messaging.MessageQueueTransactionType" /> 成员之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3132">The <paramref name="transactionType" /> parameter is not one of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> members.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-3133">尚未设置 <see cref="P:System.Messaging.MessageQueue.Path" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3133">The <see cref="P:System.Messaging.MessageQueue.Path" /> property has not been set.</span>
          </span>
          <span data-ttu-id="7aa34-3134">或</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3134">-or-</span>
          </span>
          <span data-ttu-id="7aa34-3135">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3135">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.MessageQueueTransactionType" />
        <altmember cref="P:System.Messaging.MessageQueue.DefaultPropertiesToSend" />
        <altmember cref="T:System.Messaging.Message" />
        <altmember cref="P:System.Messaging.MessageQueue.Transactional" />
        <altmember cref="P:System.Messaging.MessageQueue.Label" />
        <altmember cref="M:System.Messaging.MessageQueue.Peek" />
        <altmember cref="M:System.Messaging.MessageQueue.Receive" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetPermissions">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-3136">将权限添加到当前集合中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3136">Adds permissions to the current set.</span>
          </span>
          <span data-ttu-id="7aa34-3137">这样可控制谁对队列中的队列属性和消息具有访问权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3137">This controls who has access rights to queue properties and messages in the queue.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetPermissions">
      <MemberSignature Language="C#" Value="public void SetPermissions (System.Messaging.AccessControlList dacl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPermissions(class System.Messaging.AccessControlList dacl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPermissions (dacl As AccessControlList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPermissions(System::Messaging::AccessControlList ^ dacl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dacl" Type="System.Messaging.AccessControlList" />
      </Parameters>
      <Docs>
        <param name="dacl">
          <span data-ttu-id="7aa34-3138">
            <see cref="T:System.Messaging.AccessControlList" />，包含一个或多个指定受信者和要授予的权限的访问控制项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3138">A <see cref="T:System.Messaging.AccessControlList" /> that contains one or more access control entries that specify the trustees and the permissions to grant.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-3139">基于访问控制列表的内容将访问权限分配给队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3139">Assigns access rights to the queue based on the contents of an access control list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-3140">使用此重载以授予、 拒绝或撤消权限，通过使用访问控制项的集合来指定受信者和权限的信息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3140">Use this overload to grant, deny, or revoke rights by using a collection of access control entries to specify trustee and permissions information.</span></span> <span data-ttu-id="7aa34-3141">这用于，例如，同时向多个用户授予权限。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3141">This is used, for example, to grant permissions to multiple users at the same time.</span></span>  
  
 <span data-ttu-id="7aa34-3142">构造时指定的受信者`ace`参数可以为单个用户、 一组用户或计算机。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3142">The trustee you specify when you construct the `ace` parameter can be an individual user, a group of users, or a computer.</span></span> <span data-ttu-id="7aa34-3143">如果受信者个人，请使用格式`DOMAIN` \\ `user`。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3143">If the trustee is an individual, use the format `DOMAIN`\\`user`.</span></span> <span data-ttu-id="7aa34-3144">你可以指定"。"受信者以指示本地计算机。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3144">You can specify "." for the trustee to indicate the local computer.</span></span>  
  
 <span data-ttu-id="7aa34-3145">通过分配的权限<xref:System.Messaging.MessageQueue.SetPermissions%2A>将权限添加到现有列表。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3145">The permissions you assign through <xref:System.Messaging.MessageQueue.SetPermissions%2A> add rights to the existing list.</span></span> <span data-ttu-id="7aa34-3146">默认情况下，公用或专用队列的创建者具有完全控制和域组的每个人都获取队列属性，获取权限，并向队列中写入的权限。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3146">By default, the creator of a public or private queue has full control, and the domain group Everyone has permission to get queue properties, get permissions, and write to the queue.</span></span> <span data-ttu-id="7aa34-3147">当调用<xref:System.Messaging.MessageQueue.SetPermissions%2A>，用户和权限的信息都会追加到现有列表的底部。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3147">When you call <xref:System.Messaging.MessageQueue.SetPermissions%2A>, the user and permissions information is appended to the bottom of the existing list.</span></span>  
  
 <span data-ttu-id="7aa34-3148">系统将检查每个<xref:System.Messaging.AccessControlEntry>顺序，直到发生以下事件之一：</span><span class="sxs-lookup"><span data-stu-id="7aa34-3148">The system examines each <xref:System.Messaging.AccessControlEntry> in sequence until one of the following events occurs:</span></span>  
  
-   <span data-ttu-id="7aa34-3149">访问拒绝<xref:System.Messaging.AccessControlEntry>显式拒绝任何对一个线程的访问令牌中列出的受信者的请求的访问权限。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3149">An access-denied <xref:System.Messaging.AccessControlEntry> explicitly denies any of the requested access rights to one of the trustees listed in the thread's access token.</span></span>  
  
-   <span data-ttu-id="7aa34-3150">一个或多个访问允许<xref:System.Messaging.AccessControlEntry>项的线程的访问令牌中显式列出的受信者授予所有请求的访问权限。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3150">One or more access-allowed <xref:System.Messaging.AccessControlEntry> items for trustees listed in the thread's access token explicitly grant all the requested access rights.</span></span>  
  
-   <span data-ttu-id="7aa34-3151">所有<xref:System.Messaging.AccessControlEntry>已检查项，并且没有仍在至少一个请求的访问权限，没有已明确允许，在这种情况下，访问被隐式拒绝。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3151">All <xref:System.Messaging.AccessControlEntry> items have been checked and there is still at least one requested access right that has not been explicitly allowed, in which case, access is implicitly denied.</span></span>  
  
 <span data-ttu-id="7aa34-3152">构造时`dacl`参数，你将添加<xref:System.Messaging.AccessControlEntry>实例到你<xref:System.Messaging.AccessControlList>集合。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3152">When you construct the `dacl` parameter, you add <xref:System.Messaging.AccessControlEntry> instances to your <xref:System.Messaging.AccessControlList> collection.</span></span> <span data-ttu-id="7aa34-3153">在构造每个访问控制项时，你可以指定泛型或标准访问权限。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3153">When you construct each access control entry, you can specify generic or standard access rights.</span></span> <span data-ttu-id="7aa34-3154">对队列的权限可以是以下任意组合：</span><span class="sxs-lookup"><span data-stu-id="7aa34-3154">The rights to a queue can be any combination of the following:</span></span>  
  
-   <span data-ttu-id="7aa34-3155">删除</span><span class="sxs-lookup"><span data-stu-id="7aa34-3155">Delete</span></span>  
  
-   <span data-ttu-id="7aa34-3156">读取安全设置</span><span class="sxs-lookup"><span data-stu-id="7aa34-3156">Read Security</span></span>  
  
-   <span data-ttu-id="7aa34-3157">编写安全</span><span class="sxs-lookup"><span data-stu-id="7aa34-3157">Write Security</span></span>  
  
-   <span data-ttu-id="7aa34-3158">同步</span><span class="sxs-lookup"><span data-stu-id="7aa34-3158">Synchronize</span></span>  
  
-   <span data-ttu-id="7aa34-3159">修改所有者</span><span class="sxs-lookup"><span data-stu-id="7aa34-3159">Modify Owner</span></span>  
  
-   <span data-ttu-id="7aa34-3160">读取</span><span class="sxs-lookup"><span data-stu-id="7aa34-3160">Read</span></span>  
  
-   <span data-ttu-id="7aa34-3161">Write</span><span class="sxs-lookup"><span data-stu-id="7aa34-3161">Write</span></span>  
  
-   <span data-ttu-id="7aa34-3162">执行</span><span class="sxs-lookup"><span data-stu-id="7aa34-3162">Execute</span></span>  
  
-   <span data-ttu-id="7aa34-3163">必需</span><span class="sxs-lookup"><span data-stu-id="7aa34-3163">Required</span></span>  
  
-   <span data-ttu-id="7aa34-3164">全部</span><span class="sxs-lookup"><span data-stu-id="7aa34-3164">All</span></span>  
  
-   <span data-ttu-id="7aa34-3165">无</span><span class="sxs-lookup"><span data-stu-id="7aa34-3165">None</span></span>  
  
 <span data-ttu-id="7aa34-3166">这些权限是一组可使用或按位运算符进行组合的位标志。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3166">These rights are a set of bit flags that you can combine using the OR bitwise operator.</span></span>  
  
-   <span data-ttu-id="7aa34-3167">完全控制</span><span class="sxs-lookup"><span data-stu-id="7aa34-3167">Full Control</span></span>  
  
-   <span data-ttu-id="7aa34-3168">删除消息</span><span class="sxs-lookup"><span data-stu-id="7aa34-3168">Delete Message</span></span>  
  
-   <span data-ttu-id="7aa34-3169">接收消息</span><span class="sxs-lookup"><span data-stu-id="7aa34-3169">Receive Message</span></span>  
  
-   <span data-ttu-id="7aa34-3170">扫视消息</span><span class="sxs-lookup"><span data-stu-id="7aa34-3170">Peek Message</span></span>  
  
-   <span data-ttu-id="7aa34-3171">接收日志消息</span><span class="sxs-lookup"><span data-stu-id="7aa34-3171">Receive Journal Message</span></span>  
  
-   <span data-ttu-id="7aa34-3172">获取队列属性</span><span class="sxs-lookup"><span data-stu-id="7aa34-3172">Get Queue Properties</span></span>  
  
-   <span data-ttu-id="7aa34-3173">设置队列属性</span><span class="sxs-lookup"><span data-stu-id="7aa34-3173">Set Queue Properties</span></span>  
  
-   <span data-ttu-id="7aa34-3174">获取权限</span><span class="sxs-lookup"><span data-stu-id="7aa34-3174">Get Permissions</span></span>  
  
-   <span data-ttu-id="7aa34-3175">设置权限</span><span class="sxs-lookup"><span data-stu-id="7aa34-3175">Set Permissions</span></span>  
  
-   <span data-ttu-id="7aa34-3176">获取队列所属权</span><span class="sxs-lookup"><span data-stu-id="7aa34-3176">Take Queue Ownership</span></span>  
  
-   <span data-ttu-id="7aa34-3177">写入消息</span><span class="sxs-lookup"><span data-stu-id="7aa34-3177">Write Message</span></span>  
  
 <span data-ttu-id="7aa34-3178">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3178">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-3179">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-3179">Workgroup mode</span></span>|<span data-ttu-id="7aa34-3180">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-3180">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-3181">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-3181">Local computer</span></span>|<span data-ttu-id="7aa34-3182">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-3182">Yes</span></span>|  
|<span data-ttu-id="7aa34-3183">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-3183">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-3184">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-3184">Yes</span></span>|  
|<span data-ttu-id="7aa34-3185">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-3185">Remote computer</span></span>|<span data-ttu-id="7aa34-3186">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-3186">No</span></span>|  
|<span data-ttu-id="7aa34-3187">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-3187">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-3188">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-3188">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-3189">以下代码示例演示了 <xref:System.Messaging.MessageQueue.SetPermissions%28System.Messaging.AccessControlList%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3189">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.SetPermissions%28System.Messaging.AccessControlList%29>.</span></span>      
  
 [!code-cpp[MessageQueue2#26](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#26)]
 [!code-csharp[MessageQueue2#26](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-3190">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3190">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageQueue.ResetPermissions" />
        <altmember cref="T:System.Messaging.Trustee" />
        <altmember cref="T:System.Messaging.AccessControlList" />
      </Docs>
    </Member>
    <Member MemberName="SetPermissions">
      <MemberSignature Language="C#" Value="public void SetPermissions (System.Messaging.MessageQueueAccessControlEntry ace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPermissions(class System.Messaging.MessageQueueAccessControlEntry ace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPermissions (ace As MessageQueueAccessControlEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPermissions(System::Messaging::MessageQueueAccessControlEntry ^ ace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ace" Type="System.Messaging.MessageQueueAccessControlEntry" />
      </Parameters>
      <Docs>
        <param name="ace">
          <span data-ttu-id="7aa34-3191">指定用户、访问类型和权限类型的 <see cref="T:System.Messaging.MessageQueueAccessControlEntry" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3191">A <see cref="T:System.Messaging.MessageQueueAccessControlEntry" /> that specifies a user, an access type, and a permission type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-3192">基于访问控制项的内容将访问权限分配给队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3192">Assigns access rights to the queue based on the contents of an access control entry.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-3193">使用此重载以授予、 拒绝或撤消权限，通过使用访问控制项指定受信者和权限信息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3193">Use this overload to grant, deny, or revoke rights by using an access control entry to specify trustee and rights information.</span></span>  
  
 <span data-ttu-id="7aa34-3194">构造时指定的受信者`ace`参数可以为单个用户、 一组用户或计算机。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3194">The trustee you specify when you construct the `ace` parameter can be an individual user, a group of users, or a computer.</span></span> <span data-ttu-id="7aa34-3195">如果受信者个人，请使用格式`DOMAIN` \\ `user`。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3195">If the trustee is an individual, use the format `DOMAIN`\\`user`.</span></span> <span data-ttu-id="7aa34-3196">你可以指定"。"受信者以指示本地计算机。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3196">You can specify "." for the trustee to indicate the local computer.</span></span>  
  
 <span data-ttu-id="7aa34-3197">通过分配的权限<xref:System.Messaging.MessageQueue.SetPermissions%2A>将权限添加到现有列表。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3197">The permissions you assign through <xref:System.Messaging.MessageQueue.SetPermissions%2A> add rights to the existing list.</span></span> <span data-ttu-id="7aa34-3198">默认情况下，公用或专用队列的创建者具有完全控制和域组的每个人都获取队列属性，获取权限，并向队列中写入的权限。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3198">By default, the creator of a public or private queue has full control, and the domain group Everyone has permission to get queue properties, get permissions, and write to the queue.</span></span> <span data-ttu-id="7aa34-3199">当调用<xref:System.Messaging.MessageQueue.SetPermissions%2A>，用户和权限的信息都会追加到现有列表的底部。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3199">When you call <xref:System.Messaging.MessageQueue.SetPermissions%2A>, the user and permissions information is appended to the bottom of the existing list.</span></span>  
  
 <span data-ttu-id="7aa34-3200">系统将检查每个<xref:System.Messaging.AccessControlEntry>顺序，直到发生以下事件之一：</span><span class="sxs-lookup"><span data-stu-id="7aa34-3200">The system examines each <xref:System.Messaging.AccessControlEntry> in sequence until one of the following events occurs:</span></span>  
  
-   <span data-ttu-id="7aa34-3201">访问拒绝<xref:System.Messaging.AccessControlEntry>显式拒绝任何对一个线程的访问令牌中列出的受信者的请求的访问权限。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3201">An access-denied <xref:System.Messaging.AccessControlEntry> explicitly denies any of the requested access rights to one of the trustees listed in the thread's access token.</span></span>  
  
-   <span data-ttu-id="7aa34-3202">一个或多个访问允许<xref:System.Messaging.AccessControlEntry>项的线程的访问令牌中显式列出的受信者授予所有请求的访问权限。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3202">One or more access-allowed <xref:System.Messaging.AccessControlEntry> items for trustees listed in the thread's access token explicitly grant all the requested access rights.</span></span>  
  
-   <span data-ttu-id="7aa34-3203">所有<xref:System.Messaging.AccessControlEntry>已检查项，并且没有仍在至少一个请求的访问权限，没有已明确允许，在这种情况下，访问被隐式拒绝。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3203">All <xref:System.Messaging.AccessControlEntry> items have been checked and there is still at least one requested access right that has not been explicitly allowed, in which case, access is implicitly denied.</span></span>  
  
 <span data-ttu-id="7aa34-3204">对在指定的队列的权限`rights`参数在构造时你<xref:System.Messaging.MessageQueueAccessControlEntry>，可以是以下任意组合：</span><span class="sxs-lookup"><span data-stu-id="7aa34-3204">The rights to a queue, which you specify in the `rights` parameter when you construct your <xref:System.Messaging.MessageQueueAccessControlEntry>, can be any combination of the following:</span></span>  
  
-   <span data-ttu-id="7aa34-3205">完全控制</span><span class="sxs-lookup"><span data-stu-id="7aa34-3205">Full Control</span></span>  
  
-   <span data-ttu-id="7aa34-3206">删除消息</span><span class="sxs-lookup"><span data-stu-id="7aa34-3206">Delete Message</span></span>  
  
-   <span data-ttu-id="7aa34-3207">接收消息</span><span class="sxs-lookup"><span data-stu-id="7aa34-3207">Receive Message</span></span>  
  
-   <span data-ttu-id="7aa34-3208">扫视消息</span><span class="sxs-lookup"><span data-stu-id="7aa34-3208">Peek Message</span></span>  
  
-   <span data-ttu-id="7aa34-3209">接收日志消息</span><span class="sxs-lookup"><span data-stu-id="7aa34-3209">Receive Journal Message</span></span>  
  
-   <span data-ttu-id="7aa34-3210">获取队列属性</span><span class="sxs-lookup"><span data-stu-id="7aa34-3210">Get Queue Properties</span></span>  
  
-   <span data-ttu-id="7aa34-3211">设置队列属性</span><span class="sxs-lookup"><span data-stu-id="7aa34-3211">Set Queue Properties</span></span>  
  
-   <span data-ttu-id="7aa34-3212">获取权限</span><span class="sxs-lookup"><span data-stu-id="7aa34-3212">Get Permissions</span></span>  
  
-   <span data-ttu-id="7aa34-3213">设置权限</span><span class="sxs-lookup"><span data-stu-id="7aa34-3213">Set Permissions</span></span>  
  
-   <span data-ttu-id="7aa34-3214">获取队列所属权</span><span class="sxs-lookup"><span data-stu-id="7aa34-3214">Take Queue Ownership</span></span>  
  
-   <span data-ttu-id="7aa34-3215">写入消息</span><span class="sxs-lookup"><span data-stu-id="7aa34-3215">Write Message</span></span>  
  
 <span data-ttu-id="7aa34-3216">`rights`参数的构造函数中指定`ace`参数是一个标志的<xref:System.Messaging.MessageQueueAccessRights>枚举。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3216">The `rights` parameter you specify in the constructor for the `ace` parameter is a flag of the <xref:System.Messaging.MessageQueueAccessRights> enumeration.</span></span> <span data-ttu-id="7aa34-3217">它表示一组位标志，你可以组合使用按位运算符或生成时`rights`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3217">It represents a set of bit flags that you can combine using the bitwise operator OR when you build the `rights` parameter.</span></span>  
  
 <span data-ttu-id="7aa34-3218">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3218">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-3219">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-3219">Workgroup mode</span></span>|<span data-ttu-id="7aa34-3220">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-3220">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-3221">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-3221">Local computer</span></span>|<span data-ttu-id="7aa34-3222">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-3222">Yes</span></span>|  
|<span data-ttu-id="7aa34-3223">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-3223">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-3224">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-3224">Yes</span></span>|  
|<span data-ttu-id="7aa34-3225">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-3225">Remote computer</span></span>|<span data-ttu-id="7aa34-3226">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-3226">No</span></span>|  
|<span data-ttu-id="7aa34-3227">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-3227">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-3228">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-3228">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-3229">以下代码示例演示了 <xref:System.Messaging.MessageQueue.SetPermissions%28System.Messaging.MessageQueueAccessControlEntry%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3229">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.SetPermissions%28System.Messaging.MessageQueueAccessControlEntry%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#24](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#24)]
 [!code-csharp[MessageQueue2#24](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-3230">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3230">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageQueue.ResetPermissions" />
        <altmember cref="T:System.Messaging.Trustee" />
        <altmember cref="T:System.Messaging.MessageQueueAccessRights" />
        <altmember cref="T:System.Messaging.MessageQueueAccessControlEntry" />
      </Docs>
    </Member>
    <Member MemberName="SetPermissions">
      <MemberSignature Language="C#" Value="public void SetPermissions (string user, System.Messaging.MessageQueueAccessRights rights);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPermissions(string user, valuetype System.Messaging.MessageQueueAccessRights rights) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPermissions (user As String, rights As MessageQueueAccessRights)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPermissions(System::String ^ user, System::Messaging::MessageQueueAccessRights rights);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.String" />
        <Parameter Name="rights" Type="System.Messaging.MessageQueueAccessRights" />
      </Parameters>
      <Docs>
        <param name="user">
          <span data-ttu-id="7aa34-3231">获取对队列的附加权限的个人、组或计算机。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3231">The individual, group, or computer that gets additional rights to the queue.</span>
          </span>
        </param>
        <param name="rights">
          <span data-ttu-id="7aa34-3232">
            <see cref="T:System.Messaging.MessageQueueAccessRights" />，指示对消息队列分配给传入的 <c>user</c> 的队列权限集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3232">A <see cref="T:System.Messaging.MessageQueueAccessRights" /> that indicates the set of rights to the queue that Message Queuing assigns to the <c>user</c> passed in.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-3233">给予计算机、组或用户指定的访问权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3233">Gives a computer, group, or user the specified access rights.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-3234">此重载用于授予对单个用户的指定的权限。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3234">Use this overload to grant specified rights to an individual user.</span></span> <span data-ttu-id="7aa34-3235">用户可以是任何有效受信者，包括各个用户、 用户、 组或计算机。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3235">The user can be any valid trustee, which includes individual users, groups of users, or a computer.</span></span> <span data-ttu-id="7aa34-3236">如果用户是个人，使用格式`DOMAIN` \\ `user`为`user`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3236">If the user is an individual, use the format `DOMAIN`\\`user` for the `user` parameter.</span></span> <span data-ttu-id="7aa34-3237">你可以指定"。"有关`user`参数以指示本地计算机。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3237">You can specify "." for the `user` parameter to indicate the local computer.</span></span>  
  
 <span data-ttu-id="7aa34-3238">通过分配的权限<xref:System.Messaging.MessageQueue.SetPermissions%2A>将权限添加到现有列表。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3238">The permissions you assign through <xref:System.Messaging.MessageQueue.SetPermissions%2A> add rights to the existing list.</span></span> <span data-ttu-id="7aa34-3239">默认情况下，公用或专用队列的创建者具有完全控制和域组的每个人都获取队列属性，获取权限，并向队列中写入的权限。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3239">By default, the creator of a public or private queue has full control, and the domain group Everyone has permission to get queue properties, get permissions, and write to the queue.</span></span> <span data-ttu-id="7aa34-3240">当调用<xref:System.Messaging.MessageQueue.SetPermissions%2A>，用户和权限的信息都会追加到现有列表的底部。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3240">When you call <xref:System.Messaging.MessageQueue.SetPermissions%2A>, the user and permissions information is appended to the bottom of the existing list.</span></span>  
  
 <span data-ttu-id="7aa34-3241">系统将检查每个<xref:System.Messaging.AccessControlEntry>顺序，直到发生以下事件之一：</span><span class="sxs-lookup"><span data-stu-id="7aa34-3241">The system examines each <xref:System.Messaging.AccessControlEntry> in sequence until one of the following events occurs:</span></span>  
  
-   <span data-ttu-id="7aa34-3242">访问拒绝<xref:System.Messaging.AccessControlEntry>显式拒绝任何对一个线程的访问令牌中列出的受信者的请求的访问权限。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3242">An access-denied <xref:System.Messaging.AccessControlEntry> explicitly denies any of the requested access rights to one of the trustees listed in the thread's access token.</span></span>  
  
-   <span data-ttu-id="7aa34-3243">一个或多个访问允许<xref:System.Messaging.AccessControlEntry>项的线程的访问令牌中显式列出的受信者授予所有请求的访问权限。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3243">One or more access-allowed <xref:System.Messaging.AccessControlEntry> items for trustees listed in the thread's access token explicitly grant all the requested access rights.</span></span>  
  
-   <span data-ttu-id="7aa34-3244">所有<xref:System.Messaging.AccessControlEntry>已检查项，并且没有仍在至少一个请求的访问权限，没有已明确允许，在这种情况下，访问被隐式拒绝。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3244">All <xref:System.Messaging.AccessControlEntry> items have been checked and there is still at least one requested access right that has not been explicitly allowed, in which case, access is implicitly denied.</span></span>  
  
 <span data-ttu-id="7aa34-3245">对队列中指定的权限`rights`参数，可以是以下任意组合：</span><span class="sxs-lookup"><span data-stu-id="7aa34-3245">The rights to a queue, specified in the `rights` parameter, can be any combination of the following:</span></span>  
  
-   <span data-ttu-id="7aa34-3246">完全控制</span><span class="sxs-lookup"><span data-stu-id="7aa34-3246">Full Control</span></span>  
  
-   <span data-ttu-id="7aa34-3247">删除消息</span><span class="sxs-lookup"><span data-stu-id="7aa34-3247">Delete Message</span></span>  
  
-   <span data-ttu-id="7aa34-3248">接收消息</span><span class="sxs-lookup"><span data-stu-id="7aa34-3248">Receive Message</span></span>  
  
-   <span data-ttu-id="7aa34-3249">扫视消息</span><span class="sxs-lookup"><span data-stu-id="7aa34-3249">Peek Message</span></span>  
  
-   <span data-ttu-id="7aa34-3250">接收日志消息</span><span class="sxs-lookup"><span data-stu-id="7aa34-3250">Receive Journal Message</span></span>  
  
-   <span data-ttu-id="7aa34-3251">获取队列属性</span><span class="sxs-lookup"><span data-stu-id="7aa34-3251">Get Queue Properties</span></span>  
  
-   <span data-ttu-id="7aa34-3252">设置队列属性</span><span class="sxs-lookup"><span data-stu-id="7aa34-3252">Set Queue Properties</span></span>  
  
-   <span data-ttu-id="7aa34-3253">获取权限</span><span class="sxs-lookup"><span data-stu-id="7aa34-3253">Get Permissions</span></span>  
  
-   <span data-ttu-id="7aa34-3254">设置权限</span><span class="sxs-lookup"><span data-stu-id="7aa34-3254">Set Permissions</span></span>  
  
-   <span data-ttu-id="7aa34-3255">获取队列所属权</span><span class="sxs-lookup"><span data-stu-id="7aa34-3255">Take Queue Ownership</span></span>  
  
-   <span data-ttu-id="7aa34-3256">写入消息</span><span class="sxs-lookup"><span data-stu-id="7aa34-3256">Write Message</span></span>  
  
 <span data-ttu-id="7aa34-3257"><xref:System.Messaging.MessageQueueAccessRights>枚举表示一组位标志，你可以组合使用按位运算符，或要生成`rights`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3257">The <xref:System.Messaging.MessageQueueAccessRights> enumeration represents a set of bit flags that you can combine using the bitwise operator OR to build the `rights` parameter.</span></span>  
  
 <span data-ttu-id="7aa34-3258">使用此重载，您可以仅授予权限;不能撤消或拒绝它们。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3258">With this overload, you can only grant permissions; you cannot revoke or deny them.</span></span> <span data-ttu-id="7aa34-3259">必须使用不同的重载来显式授予任何<xref:System.Messaging.AccessControlEntryType>以外`Allow`。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3259">You must use a different overload to explicitly grant any <xref:System.Messaging.AccessControlEntryType> other than `Allow`.</span></span>  
  
 <span data-ttu-id="7aa34-3260">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3260">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-3261">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-3261">Workgroup mode</span></span>|<span data-ttu-id="7aa34-3262">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-3262">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-3263">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-3263">Local computer</span></span>|<span data-ttu-id="7aa34-3264">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-3264">Yes</span></span>|  
|<span data-ttu-id="7aa34-3265">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-3265">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-3266">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-3266">Yes</span></span>|  
|<span data-ttu-id="7aa34-3267">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-3267">Remote computer</span></span>|<span data-ttu-id="7aa34-3268">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-3268">No</span></span>|  
|<span data-ttu-id="7aa34-3269">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-3269">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-3270">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-3270">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-3271">以下代码示例演示了 <xref:System.Messaging.MessageQueue.SetPermissions%28System.String%2CSystem.Messaging.MessageQueueAccessRights%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3271">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.SetPermissions%28System.String%2CSystem.Messaging.MessageQueueAccessRights%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#23](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#23)]
 [!code-csharp[MessageQueue2#23](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7aa34-3272">
            <paramref name="user" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3272">The <paramref name="user" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-3273">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3273">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageQueue.ResetPermissions" />
        <altmember cref="T:System.Messaging.Trustee" />
        <altmember cref="T:System.Messaging.MessageQueueAccessRights" />
      </Docs>
    </Member>
    <Member MemberName="SetPermissions">
      <MemberSignature Language="C#" Value="public void SetPermissions (string user, System.Messaging.MessageQueueAccessRights rights, System.Messaging.AccessControlEntryType entryType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPermissions(string user, valuetype System.Messaging.MessageQueueAccessRights rights, valuetype System.Messaging.AccessControlEntryType entryType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPermissions (user As String, rights As MessageQueueAccessRights, entryType As AccessControlEntryType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPermissions(System::String ^ user, System::Messaging::MessageQueueAccessRights rights, System::Messaging::AccessControlEntryType entryType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.String" />
        <Parameter Name="rights" Type="System.Messaging.MessageQueueAccessRights" />
        <Parameter Name="entryType" Type="System.Messaging.AccessControlEntryType" />
      </Parameters>
      <Docs>
        <param name="user">
          <span data-ttu-id="7aa34-3274">获取对队列的附加权限的个人、组或计算机。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3274">The individual, group, or computer that gets additional rights to the queue.</span>
          </span>
        </param>
        <param name="rights">
          <span data-ttu-id="7aa34-3275">
            <see cref="T:System.Messaging.MessageQueueAccessRights" />，指示对消息队列分配给传入的 <c>user</c> 的队列权限集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3275">A <see cref="T:System.Messaging.MessageQueueAccessRights" /> that indicates the set of rights to the queue that Message Queuing assigns to the <c>user</c> passed in.</span>
          </span>
        </param>
        <param name="entryType">
          <span data-ttu-id="7aa34-3276">
            <see cref="T:System.Messaging.AccessControlEntryType" />，指定授予、拒绝还是撤销 <c>rights</c> 参数指定的权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3276">A <see cref="T:System.Messaging.AccessControlEntryType" /> that specifies whether to grant, deny, or revoke the permissions specified by the <c>rights</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7aa34-3277">利用指定的访问控制类型（允许、拒绝、撤消或设置），给予计算机、组或用户指定的访问权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3277">Gives a computer, group, or user the specified access rights, with the specified access control type (allow, deny, revoke, or set).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-3278">使用此重载以授予、 拒绝或撤消为单独用户指定的权限。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3278">Use this overload to grant, deny, or revoke specified rights for an individual user.</span></span> <span data-ttu-id="7aa34-3279">用户可以是任何有效受信者，包括各个用户、 用户、 组或计算机。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3279">The user can be any valid trustee, which includes individual users, groups of users, or a computer.</span></span> <span data-ttu-id="7aa34-3280">如果用户是个人，使用格式`DOMAIN` \\ `user`为`user`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3280">If the user is an individual, use the format `DOMAIN`\\`user` for the `user` parameter.</span></span> <span data-ttu-id="7aa34-3281">你可以指定"。"有关`user`参数以指示本地计算机。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3281">You can specify "." for the `user` parameter to indicate the local computer.</span></span>  
  
 <span data-ttu-id="7aa34-3282">通过分配的权限<xref:System.Messaging.MessageQueue.SetPermissions%2A>将权限添加到现有列表。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3282">The permissions you assign through <xref:System.Messaging.MessageQueue.SetPermissions%2A> add rights to the existing list.</span></span> <span data-ttu-id="7aa34-3283">默认情况下，公用或专用队列的创建者具有完全控制和域组的每个人都获取队列属性，获取权限，并向队列中写入的权限。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3283">By default, the creator of a public or private queue has full control, and the domain group Everyone has permission to get queue properties, get permissions, and write to the queue.</span></span> <span data-ttu-id="7aa34-3284">当调用<xref:System.Messaging.MessageQueue.SetPermissions%2A>，用户和权限的信息都会追加到现有列表的底部。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3284">When you call <xref:System.Messaging.MessageQueue.SetPermissions%2A>, the user and permissions information is appended to the bottom of the existing list.</span></span>  
  
 <span data-ttu-id="7aa34-3285">系统将检查每个<xref:System.Messaging.AccessControlEntry>顺序，直到发生以下事件之一：</span><span class="sxs-lookup"><span data-stu-id="7aa34-3285">The system examines each <xref:System.Messaging.AccessControlEntry> in sequence until one of the following events occurs:</span></span>  
  
-   <span data-ttu-id="7aa34-3286">访问拒绝<xref:System.Messaging.AccessControlEntry>显式拒绝任何对一个线程的访问令牌中列出的受信者的请求的访问权限。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3286">An access-denied <xref:System.Messaging.AccessControlEntry> explicitly denies any of the requested access rights to one of the trustees listed in the thread's access token.</span></span>  
  
-   <span data-ttu-id="7aa34-3287">一个或多个访问允许<xref:System.Messaging.AccessControlEntry>项的线程的访问令牌中显式列出的受信者授予所有请求的访问权限。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3287">One or more access-allowed <xref:System.Messaging.AccessControlEntry> items for trustees listed in the thread's access token explicitly grant all the requested access rights.</span></span>  
  
-   <span data-ttu-id="7aa34-3288">所有<xref:System.Messaging.AccessControlEntry>已检查项，并且没有仍在至少一个请求的访问权限，没有已明确允许，在这种情况下，访问被隐式拒绝。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3288">All <xref:System.Messaging.AccessControlEntry> items have been checked and there is still at least one requested access right that has not been explicitly allowed, in which case, access is implicitly denied.</span></span>  
  
 <span data-ttu-id="7aa34-3289">对队列中指定的权限`rights`参数，可以是以下任意组合：</span><span class="sxs-lookup"><span data-stu-id="7aa34-3289">The rights to a queue, specified in the `rights` parameter, can be any combination of the following:</span></span>  
  
-   <span data-ttu-id="7aa34-3290">完全控制</span><span class="sxs-lookup"><span data-stu-id="7aa34-3290">Full Control</span></span>  
  
-   <span data-ttu-id="7aa34-3291">删除消息</span><span class="sxs-lookup"><span data-stu-id="7aa34-3291">Delete Message</span></span>  
  
-   <span data-ttu-id="7aa34-3292">接收消息</span><span class="sxs-lookup"><span data-stu-id="7aa34-3292">Receive Message</span></span>  
  
-   <span data-ttu-id="7aa34-3293">扫视消息</span><span class="sxs-lookup"><span data-stu-id="7aa34-3293">Peek Message</span></span>  
  
-   <span data-ttu-id="7aa34-3294">接收日志消息</span><span class="sxs-lookup"><span data-stu-id="7aa34-3294">Receive Journal Message</span></span>  
  
-   <span data-ttu-id="7aa34-3295">获取队列属性</span><span class="sxs-lookup"><span data-stu-id="7aa34-3295">Get Queue Properties</span></span>  
  
-   <span data-ttu-id="7aa34-3296">设置队列属性</span><span class="sxs-lookup"><span data-stu-id="7aa34-3296">Set Queue Properties</span></span>  
  
-   <span data-ttu-id="7aa34-3297">获取权限</span><span class="sxs-lookup"><span data-stu-id="7aa34-3297">Get Permissions</span></span>  
  
-   <span data-ttu-id="7aa34-3298">设置权限</span><span class="sxs-lookup"><span data-stu-id="7aa34-3298">Set Permissions</span></span>  
  
-   <span data-ttu-id="7aa34-3299">获取队列所属权</span><span class="sxs-lookup"><span data-stu-id="7aa34-3299">Take Queue Ownership</span></span>  
  
-   <span data-ttu-id="7aa34-3300">写入消息</span><span class="sxs-lookup"><span data-stu-id="7aa34-3300">Write Message</span></span>  
  
 <span data-ttu-id="7aa34-3301"><xref:System.Messaging.MessageQueueAccessRights>枚举表示一组位标志，你可以组合使用按位运算符，或要生成`rights`参数。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3301">The <xref:System.Messaging.MessageQueueAccessRights> enumeration represents a set of bit flags that you can combine using the bitwise operator OR to build the `rights` parameter.</span></span>  
  
 <span data-ttu-id="7aa34-3302">下表显示了此方法是否在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3302">The following table shows whether this method is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-3303">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-3303">Workgroup mode</span></span>|<span data-ttu-id="7aa34-3304">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-3304">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-3305">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-3305">Local computer</span></span>|<span data-ttu-id="7aa34-3306">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-3306">Yes</span></span>|  
|<span data-ttu-id="7aa34-3307">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-3307">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-3308">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-3308">Yes</span></span>|  
|<span data-ttu-id="7aa34-3309">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-3309">Remote computer</span></span>|<span data-ttu-id="7aa34-3310">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-3310">No</span></span>|  
|<span data-ttu-id="7aa34-3311">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-3311">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-3312">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-3312">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-3313">以下代码示例演示了 <xref:System.Messaging.MessageQueue.SetPermissions%28System.String%2CSystem.Messaging.MessageQueueAccessRights%2CSystem.Messaging.AccessControlEntryType%29> 的用法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3313">The following code example demonstrates the use of <xref:System.Messaging.MessageQueue.SetPermissions%28System.String%2CSystem.Messaging.MessageQueueAccessRights%2CSystem.Messaging.AccessControlEntryType%29>.</span></span>  
  
 [!code-cpp[MessageQueue2#25](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue2/cpp/class1.cpp#25)]
 [!code-csharp[MessageQueue2#25](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue2/CS/class1.cs#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-3314">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3314">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageQueue.ResetPermissions" />
        <altmember cref="T:System.Messaging.Trustee" />
        <altmember cref="T:System.Messaging.MessageQueueAccessRights" />
        <altmember cref="T:System.Messaging.AccessControlEntry" />
      </Docs>
    </Member>
    <Member MemberName="SynchronizingObject">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISynchronizeInvoke SynchronizingObject" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.SynchronizingObject" />
      <MemberSignature Language="VB.NET" Value="Public Property SynchronizingObject As ISynchronizeInvoke" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISynchronizeInvoke ^ SynchronizingObject { System::ComponentModel::ISynchronizeInvoke ^ get(); void set(System::ComponentModel::ISynchronizeInvoke ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_SynchronizingObject")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISynchronizeInvoke</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-3315">获取或设置由 <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> 或 <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> 事件产生封送事件处理程序调用的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3315">Gets or sets the object that marshals the event-handler call resulting from a <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> or <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7aa34-3316">
            <see cref="T:System.ComponentModel.ISynchronizeInvoke" />，表示封送由 <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> 或 <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> 事件产生的事件处理程序调用的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3316">A <see cref="T:System.ComponentModel.ISynchronizeInvoke" />, which represents the object that marshals the event-handler call resulting from a <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> or <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> event.</span>
          </span>
          <span data-ttu-id="7aa34-3317">默认值为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3317">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-3318">A<xref:System.Messaging.MessageQueue.ReceiveCompleted>或<xref:System.Messaging.MessageQueue.PeekCompleted>事件源于<xref:System.Messaging.MessageQueue.BeginReceive%2A>或<xref:System.Messaging.MessageQueue.BeginPeek%2A>请求，分别为特定线程。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3318">A <xref:System.Messaging.MessageQueue.ReceiveCompleted> or <xref:System.Messaging.MessageQueue.PeekCompleted> event results from a <xref:System.Messaging.MessageQueue.BeginReceive%2A> or <xref:System.Messaging.MessageQueue.BeginPeek%2A> request, respectively, to a specific thread.</span></span> <span data-ttu-id="7aa34-3319">通常情况下，<xref:System.Messaging.MessageQueue.SynchronizingObject%2A>时设置其相关的组件放在控件或窗体，因为这些组件绑定到特定线程。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3319">Typically, the <xref:System.Messaging.MessageQueue.SynchronizingObject%2A> is set when its related component is placed inside a control or a form, because those components are bound to a specific thread.</span></span>  
  
 <span data-ttu-id="7aa34-3320">通常情况下，同步的对象封送到单个线程的方法调用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3320">Typically, the synchronizing object marshals a method call into a single thread.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
        <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
      </Docs>
    </Member>
    <Member MemberName="Transactional">
      <MemberSignature Language="C#" Value="public bool Transactional { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Transactional" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.Transactional" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Transactional As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Transactional { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_Transactional")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-3321">获取一个值，该值指示队列是否只接受事务。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3321">Gets a value that indicates whether the queue accepts only transactions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7aa34-3322">如果队列只接受作为事务的一部分发送的消息，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3322">
              <see langword="true" /> if the queue accepts only messages sent as part of a transaction; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-3323">事务性消息处理是指成单个事务的多个相关邮件耦合。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3323">Transactional messaging refers to the coupling of several related messages into a single transaction.</span></span> <span data-ttu-id="7aa34-3324">发送消息，因为事务的一部分可确保消息都会传递顺序情况下，只传递一次，以及从其目标队列中成功检索。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3324">Sending messages as part of a transaction ensures that the messages are delivered in order, delivered only once, and successfully retrieved from their destination queue.</span></span>  
  
 <span data-ttu-id="7aa34-3325">如果队列是事务性的它接受作为事务一部分发送的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3325">If a queue is transactional, it accepts only messages that are sent as part of a transaction.</span></span> <span data-ttu-id="7aa34-3326">但是，非事务性消息将要发送或接收从本地事务队列，而无需使用显式事务<xref:System.Messaging.MessageQueueTransaction.Begin%2A>， <xref:System.Messaging.MessageQueueTransaction.Commit%2A>，和<xref:System.Messaging.MessageQueueTransaction.Abort%2A>语法。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3326">However, a non-transactional message can be sent or received from a local transaction queue without explicitly using transactional <xref:System.Messaging.MessageQueueTransaction.Begin%2A>, <xref:System.Messaging.MessageQueueTransaction.Commit%2A>, and <xref:System.Messaging.MessageQueueTransaction.Abort%2A> syntax.</span></span> <span data-ttu-id="7aa34-3327">如果非事务性消息发送到事务性队列，此组件创建一个单个消息事务，除非在引用使用直接格式名的远程计算机上的队列的情况下。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3327">If a non-transactional message is sent to a transactional queue, this component creates a single-message transaction for it, except in the case of referencing a queue on a remote computer using a direct format name.</span></span> <span data-ttu-id="7aa34-3328">在此情况下，如果发送消息时未指定事务上下文，其中一个不会为你创建，并且消息将发送到死信队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3328">In this situation, if you do not specify a transaction context when sending a message, one is not created for you and the message will be sent to the dead-letter queue.</span></span>  
  
 <span data-ttu-id="7aa34-3329">如果将非事务性消息发送到事务性队列中时，你将不能回滚发生异常时消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3329">If you send a non-transactional message to a transactional queue, you will not be able to roll back the message in the event of an exception.</span></span>  
  
 <span data-ttu-id="7aa34-3330"><xref:System.Messaging.MessageQueueTransaction> 线程处理单元感知，因此，如果你的单元状态`STA`，不能在多个线程中使用的事务。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3330"><xref:System.Messaging.MessageQueueTransaction> is threading apartment aware, so if your apartment state is `STA`, you cannot use the transaction in multiple threads.</span></span> <span data-ttu-id="7aa34-3331">Visual Basic 将设置到的主线程的状态`STA`，因此您必须首先应用<xref:System.MTAThreadAttribute>中`Main`子例程。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3331">Visual Basic sets the state of the main thread to `STA`, so you must apply the <xref:System.MTAThreadAttribute> in the `Main` subroutine.</span></span> <span data-ttu-id="7aa34-3332">否则，利用另一个线程发送事务性消息将引发 <xref:System.Messaging.MessageQueueException> 异常。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3332">Otherwise, sending a transactional message using another thread throws a <xref:System.Messaging.MessageQueueException> exception.</span></span> <span data-ttu-id="7aa34-3333">你将应用<xref:System.MTAThreadAttribute>通过使用下面的片段。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3333">You apply the <xref:System.MTAThreadAttribute> by using the following fragment.</span></span>  
  
```vb  
<System.MTAThreadAttribute>  
 public sub Main()  
```  
  
 <span data-ttu-id="7aa34-3334">下表显示此属性是在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3334">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-3335">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-3335">Workgroup mode</span></span>|<span data-ttu-id="7aa34-3336">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-3336">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-3337">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-3337">Local computer</span></span>|<span data-ttu-id="7aa34-3338">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-3338">Yes</span></span>|  
|<span data-ttu-id="7aa34-3339">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-3339">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-3340">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-3340">Yes</span></span>|  
|<span data-ttu-id="7aa34-3341">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-3341">Remote computer</span></span>|<span data-ttu-id="7aa34-3342">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-3342">No</span></span>|  
|<span data-ttu-id="7aa34-3343">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-3343">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-3344">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-3344">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-3345">下面的代码示例显示的消息队列的值<xref:System.Messaging.MessageQueue.Transactional%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3345">The following code example displays the value of a message queue's <xref:System.Messaging.MessageQueue.Transactional%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#27](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-3346">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3346">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.MessageQueueTransaction.Begin" />
        <altmember cref="M:System.Messaging.MessageQueueTransaction.Commit" />
        <altmember cref="M:System.Messaging.MessageQueueTransaction.Abort" />
        <altmember cref="P:System.Messaging.Message.TransactionId" />
        <altmember cref="P:System.Messaging.Message.IsFirstInTransaction" />
        <altmember cref="P:System.Messaging.Message.IsLastInTransaction" />
      </Docs>
    </Member>
    <Member MemberName="UseJournalQueue">
      <MemberSignature Language="C#" Value="public bool UseJournalQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseJournalQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.UseJournalQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property UseJournalQueue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseJournalQueue { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_WriteHandle")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-3347">获取或设置一个值，该值指示接收的消息是否复制到日记队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3347">Gets or sets a value that indicates whether received messages are copied to the journal queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7aa34-3348">如果从队列接收到的消息复制到其日记队列，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3348">
              <see langword="true" /> if messages received from the queue are copied to its journal queue; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-3349">当消息队列应用程序创建一个新的应用程序队列时，它将自动在同一位置创建关联的日记队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3349">When the Message Queuing application creates a new application queue, it automatically creates an associated journal queue in the same location.</span></span> <span data-ttu-id="7aa34-3350">日记队列用于跟踪从队列中移除的消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3350">The journal queue is used to track the messages removed from a queue.</span></span> <span data-ttu-id="7aa34-3351">将此属性设置修改消息队列队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3351">Setting this property modifies the Message Queuing queue.</span></span> <span data-ttu-id="7aa34-3352">因此，任何其他<xref:System.Messaging.MessageQueue>的更改会影响实例。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3352">Therefore, any other <xref:System.Messaging.MessageQueue> instances are affected by the change.</span></span>  
  
 <span data-ttu-id="7aa34-3353">日记队列不跟踪消息从队列删除，因为其接收时间计时器已过期，也不会跟踪消息从队列中清除通过使用消息队列目录服务 （信息存储或 Active Directory）。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3353">The journal queue does not track messages removed from the queue because their time-to-be-received timer expired, nor does it track messages purged from the queue by using a Message Queuing directory service (Information Store or Active Directory).</span></span>  
  
 <span data-ttu-id="7aa34-3354">应用程序不能将消息发送到日志队列;它们仅限于只读访问权限的这些队列。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3354">Applications cannot send messages to journal queues; they are limited to read-only access of these queues.</span></span> <span data-ttu-id="7aa34-3355">此外，消息队列永远不会消息从队列中删除日志。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3355">Furthermore, Message Queuing never removes messages from journal queues.</span></span> <span data-ttu-id="7aa34-3356">通过接收它们或清除队列，使用队列的应用程序必须清除这些消息。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3356">The application using the queue must clear these messages either by receiving them or by purging the queue.</span></span>  
  
 <span data-ttu-id="7aa34-3357">下表显示此属性是在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3357">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-3358">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-3358">Workgroup mode</span></span>|<span data-ttu-id="7aa34-3359">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-3359">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-3360">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-3360">Local computer</span></span>|<span data-ttu-id="7aa34-3361">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-3361">Yes</span></span>|  
|<span data-ttu-id="7aa34-3362">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-3362">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-3363">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-3363">Yes</span></span>|  
|<span data-ttu-id="7aa34-3364">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-3364">Remote computer</span></span>|<span data-ttu-id="7aa34-3365">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-3365">No</span></span>|  
|<span data-ttu-id="7aa34-3366">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-3366">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-3367">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-3367">No</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7aa34-3368">下面的代码示例获取和设置的消息队列的值<xref:System.Messaging.MessageQueue.UseJournalQueue%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3368">The following code example gets and sets the value of a message queue's <xref:System.Messaging.MessageQueue.UseJournalQueue%2A> property.</span></span>  
  
 [!code-csharp[MessageQueue#28](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue/CS/class1.cs#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-3369">访问“消息队列”方法时出错。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3369">An error occurred when accessing a Message Queuing method.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.MaximumJournalSize" />
      </Docs>
    </Member>
    <Member MemberName="WriteHandle">
      <MemberSignature Language="C#" Value="public IntPtr WriteHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int WriteHandle" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueue.WriteHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WriteHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr WriteHandle { IntPtr get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MQ_WriteHandle")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7aa34-3370">获取用于将消息发送到消息队列的本机句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3370">Gets the native handle used to send messages to the message queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7aa34-3371">用于将消息发送到队列的本机队列对象的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3371">A handle to the native queue object that you use for sending messages to the queue.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7aa34-3372"><xref:System.Messaging.MessageQueue.WriteHandle%2A>提供用于将消息发送到队列的消息队列对象的本机 Windows 句柄。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3372">The <xref:System.Messaging.MessageQueue.WriteHandle%2A> provides a native Windows handle to the message queue object that is used for sending messages to the queue.</span></span> <span data-ttu-id="7aa34-3373">如果你更改队列的路径，该句柄关闭，并使用新值重新打开。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3373">If you change the path of the queue, the handle is closed and reopened with a new value.</span></span>  
  
 <span data-ttu-id="7aa34-3374">下表显示此属性是在各种工作组模式下可用。</span><span class="sxs-lookup"><span data-stu-id="7aa34-3374">The following table shows whether this property is available in various Workgroup modes.</span></span>  
  
|<span data-ttu-id="7aa34-3375">工作组模式下</span><span class="sxs-lookup"><span data-stu-id="7aa34-3375">Workgroup mode</span></span>|<span data-ttu-id="7aa34-3376">可用</span><span class="sxs-lookup"><span data-stu-id="7aa34-3376">Available</span></span>|  
|--------------------|---------------|  
|<span data-ttu-id="7aa34-3377">本地计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-3377">Local computer</span></span>|<span data-ttu-id="7aa34-3378">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-3378">Yes</span></span>|  
|<span data-ttu-id="7aa34-3379">本地计算机和直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-3379">Local computer and direct format name</span></span>|<span data-ttu-id="7aa34-3380">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-3380">Yes</span></span>|  
|<span data-ttu-id="7aa34-3381">远程计算机</span><span class="sxs-lookup"><span data-stu-id="7aa34-3381">Remote computer</span></span>|<span data-ttu-id="7aa34-3382">否</span><span class="sxs-lookup"><span data-stu-id="7aa34-3382">No</span></span>|  
|<span data-ttu-id="7aa34-3383">远程计算机并直接格式名</span><span class="sxs-lookup"><span data-stu-id="7aa34-3383">Remote computer and direct format name</span></span>|<span data-ttu-id="7aa34-3384">是</span><span class="sxs-lookup"><span data-stu-id="7aa34-3384">Yes</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="7aa34-3385">消息队列无法用于写入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7aa34-3385">The message queue is not available for writing.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.CanWrite" />
        <altmember cref="P:System.Messaging.MessageQueue.ReadHandle" />
      </Docs>
    </Member>
  </Members>
</Type>