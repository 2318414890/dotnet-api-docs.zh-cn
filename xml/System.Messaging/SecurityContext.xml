<Type Name="SecurityContext" FullName="System.Messaging.SecurityContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="07eceb3c5ff786756a2f704065e19d2f93499602" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52598481" /></Metadata><TypeSignature Language="C#" Value="public sealed class SecurityContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SecurityContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.SecurityContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecurityContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityContext sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type SecurityContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="30e90-101">表示队列消息的安全上下文。</span><span class="sxs-lookup"><span data-stu-id="30e90-101">Represents the security context for a message in a queue.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30e90-102">安全上下文包含如内部证书，相应的私钥，用户的 SID，将证书和发送方标识符附加到一条消息，请求身份验证时所需的缓存的安全信息。</span><span class="sxs-lookup"><span data-stu-id="30e90-102">The security context contains cached security information such as an internal certificate, the corresponding private key, the user's SID, needed to attach a certificate and the sender identifier to a message when requesting authentication.</span></span>  
  
 <span data-ttu-id="30e90-103">如果为客户端，例如 ASP.NET 应用程序，模拟某个用户将向队列发送一条消息，用户的标识用于访问队列。</span><span class="sxs-lookup"><span data-stu-id="30e90-103">If a client, such as an ASP.NET application, impersonates a user to send a message to a queue, the identity of the user is used to access the queue.</span></span> <span data-ttu-id="30e90-104">如果队列是远程的这些凭据是缓存，用于随后发送到队列的消息。</span><span class="sxs-lookup"><span data-stu-id="30e90-104">If the queue is remote, these credentials are cached and used for messages that are subsequently sent to the queue.</span></span> <span data-ttu-id="30e90-105">因此，在随后的消息中的 SID 将消息发送到队列的第一个用户的缓存的标识。</span><span class="sxs-lookup"><span data-stu-id="30e90-105">Therefore, the SID in subsequent messages will be the cached identity of the first user that sent a message to the queue.</span></span> <span data-ttu-id="30e90-106">将消息发送到队列的第一个用户的缓存的标识将用于后续用户。</span><span class="sxs-lookup"><span data-stu-id="30e90-106">The cached identity of the first user that sent a message to the queue will be used for subsequent users.</span></span>  
  
 <span data-ttu-id="30e90-107">若要解决此问题，设置安全上下文中使用<xref:System.Messaging.Message.SecurityContext%2A>之前将一条消息发送到远程队列以确保当前用户的凭据用于获取队列的访问权限。</span><span class="sxs-lookup"><span data-stu-id="30e90-107">To overcome this problem, set the security context using <xref:System.Messaging.Message.SecurityContext%2A> before sending a message to a remote queue to ensure that the current user's credentials are used to gain access to the queue.</span></span> <span data-ttu-id="30e90-108">但是，建议的最佳做法是：</span><span class="sxs-lookup"><span data-stu-id="30e90-108">However, the suggested best practice is to:</span></span>  
  
1.  <span data-ttu-id="30e90-109">使队列已经过身份验证的队列。</span><span class="sxs-lookup"><span data-stu-id="30e90-109">Make the queue an authenticated queue.</span></span>  
  
2.  <span data-ttu-id="30e90-110">运行 ASP.NET 应用程序域标识和授权该应用程序可以写入队列。</span><span class="sxs-lookup"><span data-stu-id="30e90-110">Run the ASP.NET application as a domain identity and authorize that application to write to the queue.</span></span>  
  
3.  <span data-ttu-id="30e90-111">使用队列时，则不模拟用户。</span><span class="sxs-lookup"><span data-stu-id="30e90-111">Do not impersonate the user when using the queue.</span></span> <span data-ttu-id="30e90-112">相反，获取调用方的标识，以及执行授权检查 ASP.NET 应用程序中或在消息中包含调用方的标识和执行授权检查在接收方应用程序中。</span><span class="sxs-lookup"><span data-stu-id="30e90-112">Instead, get the caller's identity and either perform authorization checking in the ASP.NET application or include the caller's identity as part of the message and perform authorization checking in the receiver application.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.SecurityContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="securityContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="30e90-113">释放由 <see cref="T:System.Messaging.SecurityContext" /> 使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="30e90-113">Releases all resources used by the <see cref="T:System.Messaging.SecurityContext" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SecurityContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.SecurityContext.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SecurityContext ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="securityContext.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>