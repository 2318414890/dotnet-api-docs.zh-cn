<Type Name="Cursor" FullName="System.Messaging.Cursor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3229898682b853b3e471f90feae68e1ac6922200" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30425561" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Cursor : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Cursor extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.Cursor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Cursor&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Cursor sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <see cref="T:System.Messaging.Cursor" /> 用于在读取队列的消息时保持 <see cref="T:System.Messaging.MessageQueue" /> 中的特定位置。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要获取光标<xref:System.Messaging.MessageQueue>，调用<xref:System.Messaging.MessageQueue.CreateCursor%2A>该队列的方法。  
  
 A<xref:System.Messaging.Cursor>等方法一起使用<xref:System.Messaging.MessageQueue.Peek%28System.TimeSpan%2CSystem.Messaging.Cursor%2CSystem.Messaging.PeekAction%29>和<xref:System.Messaging.MessageQueue.Receive%28System.TimeSpan%2CSystem.Messaging.Cursor%29>何时需要读取不位于队列开头的消息。 这包括同步或异步读取消息。 游标不需要可用于读取队列中的，第一条消息仅。  
  
 在读取事务中的消息，消息队列不会回滚光标移动如果则中止此事务。 例如，假定有具有 A1 和 A2 的两个消息的队列。 如果你删除消息在事务中的 A1，消息队列将光标移到消息 A2。 但是，如果出于任何原因，则中止此事务，仍然指向消息 A2 A1 插入回队列中，但光标的消息。  
  
 若要关闭游标，调用<xref:System.Messaging.Cursor.Close%2A>。  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Messaging.MessageQueue.CreateCursor" />
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.Cursor.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>关闭游标，允许“消息队列”释放关联的资源。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Messaging.Cursor" />
        <altmember cref="M:System.Messaging.MessageQueue.CreateCursor" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.Cursor.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>释放由 <see cref="T:System.Messaging.Cursor" /> 使用的所有资源。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Messaging.Cursor" />
        <altmember cref="M:System.Messaging.MessageQueue.CreateCursor" />
      </Docs>
    </Member>
  </Members>
</Type>