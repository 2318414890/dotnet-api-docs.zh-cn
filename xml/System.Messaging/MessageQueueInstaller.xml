<Type Name="MessageQueueInstaller" FullName="System.Messaging.MessageQueueInstaller">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="97d380d9422c7887de13022ae54f79d1e93a9142" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37646781" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MessageQueueInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageQueueInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.MessageQueueInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageQueueInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageQueueInstaller : System::Configuration::Install::ComponentInstaller" />
  <TypeSignature Language="F#" Value="type MessageQueueInstaller = class&#xA;    inherit ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="29a61-101">Allows you to install and configure a queue that your application needs in order to run.</span>
      <span class="sxs-lookup">
        <span data-stu-id="29a61-101">Allows you to install and configure a queue that your application needs in order to run.</span>
      </span>
      <span data-ttu-id="29a61-102">This class is called by the installation utility, for example, InstallUtil.exe, when installing a <see cref="T:System.Messaging.MessageQueue" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="29a61-102">This class is called by the installation utility, for example, InstallUtil.exe, when installing a <see cref="T:System.Messaging.MessageQueue" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29a61-103"><xref:System.Messaging.MessageQueueInstaller>安装实用程序用于编写与队列相关联的注册表值。</span><span class="sxs-lookup"><span data-stu-id="29a61-103">The <xref:System.Messaging.MessageQueueInstaller> is used by the installation utility to write registry values that are associated with the queue.</span></span> <span data-ttu-id="29a61-104">有关安装实用工具的详细信息，请参阅[Installutil.exe （安装程序工具）](~/docs/framework/tools/installutil-exe-installer-tool.md)。</span><span class="sxs-lookup"><span data-stu-id="29a61-104">For more information about installation utilities, see [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md).</span></span>  
  
 <span data-ttu-id="29a61-105">若要安装一个队列，请创建继承的项目安装程序类<xref:System.Configuration.Install.Installer>，并设置<xref:System.ComponentModel.RunInstallerAttribute>到类`true`。</span><span class="sxs-lookup"><span data-stu-id="29a61-105">To install a queue, create a project installer class that inherits from the <xref:System.Configuration.Install.Installer>, and set the <xref:System.ComponentModel.RunInstallerAttribute> for the class to `true`.</span></span> <span data-ttu-id="29a61-106">您的项目内创建<xref:System.Messaging.MessageQueueInstaller>实例中安装每个队列，并将实例添加到你的项目安装程序类。</span><span class="sxs-lookup"><span data-stu-id="29a61-106">Within your project, create a <xref:System.Messaging.MessageQueueInstaller> instance for each queue in the installation and add the instance to your project installer class.</span></span>  
  
 <span data-ttu-id="29a61-107">创建时<xref:System.Messaging.MessageQueueInstaller>实例，您可以选择性地传递的现有<xref:System.Messaging.MessageQueue>（例如，从测试服务器） 到<xref:System.Messaging.MessageQueueInstaller.%23ctor%2A>构造函数。</span><span class="sxs-lookup"><span data-stu-id="29a61-107">When creating a <xref:System.Messaging.MessageQueueInstaller> instance, you can optionally pass an existing <xref:System.Messaging.MessageQueue> (for example, from a test server) to the <xref:System.Messaging.MessageQueueInstaller.%23ctor%2A> constructor.</span></span> <span data-ttu-id="29a61-108">此方法自动提供通过镜像传入队列的设置的新队列的配置设置。</span><span class="sxs-lookup"><span data-stu-id="29a61-108">This approach automatically provides the configuration settings for the new queue by mirroring the settings of the queue passed in.</span></span> <span data-ttu-id="29a61-109">或者，您可以手动设置属性<xref:System.Messaging.MessageQueueInstaller>想和调用默认构造函数的状态的实例。</span><span class="sxs-lookup"><span data-stu-id="29a61-109">Alternatively, you can manually set the properties in the <xref:System.Messaging.MessageQueueInstaller> instance to the states you want and call the default constructor.</span></span>  
  
 <span data-ttu-id="29a61-110">调用安装实用工具时，它会寻找<xref:System.ComponentModel.RunInstallerAttribute>。</span><span class="sxs-lookup"><span data-stu-id="29a61-110">When the install utility is called, it looks for the <xref:System.ComponentModel.RunInstallerAttribute>.</span></span> <span data-ttu-id="29a61-111">如果它是`true`，该实用工具安装中的所有队列<xref:System.Configuration.Install.Installer.Installers%2A>项目安装程序与关联的集合。</span><span class="sxs-lookup"><span data-stu-id="29a61-111">If it is `true`, the utility installs all the queues in the <xref:System.Configuration.Install.Installer.Installers%2A> collection associated with your project installer.</span></span> <span data-ttu-id="29a61-112">如果<xref:System.ComponentModel.RunInstallerAttribute>是`false`，实用工具会忽略项目安装程序。</span><span class="sxs-lookup"><span data-stu-id="29a61-112">If <xref:System.ComponentModel.RunInstallerAttribute> is `false`, the utility ignores the project installer.</span></span>  
  
 <span data-ttu-id="29a61-113">修改的其他属性<xref:System.Messaging.MessageQueueInstaller>实例之前或之后添加到实例<xref:System.Configuration.Install.Installer.Installers%2A>项目安装程序的集合。</span><span class="sxs-lookup"><span data-stu-id="29a61-113">You modify other properties of a <xref:System.Messaging.MessageQueueInstaller> instance either before or after adding the instance to the <xref:System.Configuration.Install.Installer.Installers%2A> collection of your project installer.</span></span> <span data-ttu-id="29a61-114">例如，队列的<xref:System.Messaging.MessageQueue.Path%2A>安装实用程序在执行之前必须设置。</span><span class="sxs-lookup"><span data-stu-id="29a61-114">For example, a queue's <xref:System.Messaging.MessageQueue.Path%2A> must be set before the install utility executes.</span></span>  
  
 <span data-ttu-id="29a61-115">通常情况下，不调用的方法<xref:System.Messaging.MessageQueueInstaller>从在代码中; 它们通常仅由调用 installutil.exe 安装实用程序。</span><span class="sxs-lookup"><span data-stu-id="29a61-115">Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility.</span></span> <span data-ttu-id="29a61-116">该实用工具会自动调用<xref:System.Messaging.MessageQueueInstaller.Install%2A>在安装过程和调用方法<xref:System.Messaging.MessageQueueInstaller.Commit%2A>如果安装未引发异常。</span><span class="sxs-lookup"><span data-stu-id="29a61-116">The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method during the installation process and calls <xref:System.Messaging.MessageQueueInstaller.Commit%2A> if the installation did not throw an exception.</span></span> <span data-ttu-id="29a61-117">如有必要，它退出故障，通过调用<xref:System.Messaging.MessageQueueInstaller.Rollback%2A>生成了异常的对象。</span><span class="sxs-lookup"><span data-stu-id="29a61-117">It backs out failures, if necessary, by calling <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> for the object that generated the exception.</span></span>  
  
 <span data-ttu-id="29a61-118">应用程序的安装例程使用的项目安装程序<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>自动维护有关已安装的组件的信息。</span><span class="sxs-lookup"><span data-stu-id="29a61-118">An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> to automatically maintain information about the components that have already been installed.</span></span> <span data-ttu-id="29a61-119">此状态信息将持续更新每个<xref:System.Messaging.MessageQueueInstaller>实用工具安装实例。</span><span class="sxs-lookup"><span data-stu-id="29a61-119">This state information is continuously updated as each <xref:System.Messaging.MessageQueueInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="29a61-120">它通常没有必要为你的代码可以显式修改状态信息。</span><span class="sxs-lookup"><span data-stu-id="29a61-120">It is not usually necessary for your code to explicitly modify the state information.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="29a61-121">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueInstaller" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-121">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueInstaller" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueueInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueueInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="29a61-122">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueInstaller" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-122">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueInstaller" /> class.</span>
          </span>
          <span data-ttu-id="29a61-123">Does not set any instance properties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-123">Does not set any instance properties.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueueInstaller (System.Messaging.MessageQueue componentToCopy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Messaging.MessageQueue componentToCopy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.#ctor(System.Messaging.MessageQueue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (componentToCopy As MessageQueue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueueInstaller(System::Messaging::MessageQueue ^ componentToCopy);" />
      <MemberSignature Language="F#" Value="new System.Messaging.MessageQueueInstaller : System.Messaging.MessageQueue -&gt; System.Messaging.MessageQueueInstaller" Usage="new System.Messaging.MessageQueueInstaller componentToCopy" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="componentToCopy" Type="System.Messaging.MessageQueue" />
      </Parameters>
      <Docs>
        <param name="componentToCopy">
          <span data-ttu-id="29a61-124">The <see cref="T:System.Messaging.MessageQueue" /> component whose settings determine the property settings of the new queue installed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-124">The <see cref="T:System.Messaging.MessageQueue" /> component whose settings determine the property settings of the new queue installed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29a61-125">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueInstaller" /> class, initializing the installation settings to those of an existing <see cref="T:System.Messaging.MessageQueue" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-125">Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueInstaller" /> class, initializing the installation settings to those of an existing <see cref="T:System.Messaging.MessageQueue" /> instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public bool Authenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Authenticate" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Authenticate" />
      <MemberSignature Language="VB.NET" Value="Public Property Authenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Authenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Authenticate : bool with get, set" Usage="System.Messaging.MessageQueueInstaller.Authenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29a61-126">Gets or sets a value that indicates whether the queue to be installed accepts only authenticated messages.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-126">Gets or sets a value that indicates whether the queue to be installed accepts only authenticated messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29a61-127">
            <see langword="true" /> 如果队列只接受经过身份验证的消息;否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-127">
              <see langword="true" /> if the queue accepts only authenticated messages; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="29a61-128">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-128">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29a61-129">未经身份验证的消息发送到队列只接受经过身份验证的消息，消息被拒绝。</span><span class="sxs-lookup"><span data-stu-id="29a61-129">When a non-authenticated message is sent to a queue that accepts only authenticated messages, the message is rejected.</span></span> <span data-ttu-id="29a61-130">发送应用程序可以通过设置请求消息遭到拒绝的通知<xref:System.Messaging.Message.AcknowledgeType%2A>的消息。</span><span class="sxs-lookup"><span data-stu-id="29a61-130">The sending application can request notification of a message rejection by setting the <xref:System.Messaging.Message.AcknowledgeType%2A> for the message.</span></span> <span data-ttu-id="29a61-131">否则，将不会指示，该消息被拒绝，因此该消息可能会丢失，除非将其发送到死信队列。</span><span class="sxs-lookup"><span data-stu-id="29a61-131">Otherwise, there is no indication that the message was rejected, so the message can be lost unless you send it to the dead-letter queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BasePriority">
      <MemberSignature Language="C#" Value="public short BasePriority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 BasePriority" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.BasePriority" />
      <MemberSignature Language="VB.NET" Value="Public Property BasePriority As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short BasePriority { short get(); void set(short value); };" />
      <MemberSignature Language="F#" Value="member this.BasePriority : int16 with get, set" Usage="System.Messaging.MessageQueueInstaller.BasePriority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29a61-132">Gets or sets the base priority that is used to route a public queue's messages over the network.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-132">Gets or sets the base priority that is used to route a public queue's messages over the network.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29a61-133">发送到公用队列的所有消息的单个基本优先级。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-133">The single base priority for all messages sent to the public queue.</span>
          </span>
          <span data-ttu-id="29a61-134">默认值为零 (0)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-134">The default is zero (0).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29a61-135"><xref:System.Messaging.MessageQueueInstaller.BasePriority%2A>用于通过网络路由队列的消息。</span><span class="sxs-lookup"><span data-stu-id="29a61-135">The <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> is used for routing the queue's messages over the network.</span></span> <span data-ttu-id="29a61-136">使用<xref:System.Messaging.MessageQueueInstaller.BasePriority%2A>以便发送到队列以更高或较低的优先级高于，对于发送到其他队列的消息的消息。</span><span class="sxs-lookup"><span data-stu-id="29a61-136">Use the <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> to give the messages sent to the queue a higher or lower priority than that for messages sent to other queues.</span></span> <span data-ttu-id="29a61-137">设置队列的基本优先级时，发送给它的所有消息都更高的优先级比发送到具有较低的基本优先级的队列的消息。</span><span class="sxs-lookup"><span data-stu-id="29a61-137">When a queue's base priority is set, all the messages sent to it are given a higher priority than that of the messages sent to queues with a lower base priority.</span></span> <span data-ttu-id="29a61-138">队列的基本优先级的消息顺序无效，在队列中或在从队列读取消息的方式。</span><span class="sxs-lookup"><span data-stu-id="29a61-138">The queue's base priority has no effect on the order of the messages in the queue or on how messages are read from the queue.</span></span>  
  
 <span data-ttu-id="29a61-139"><xref:System.Messaging.MessageQueueInstaller.BasePriority%2A>应用仅为公共队列的访问通过域控制器 （即，使用 public 格式名称）。</span><span class="sxs-lookup"><span data-stu-id="29a61-139">The <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> applies only to public queues that are accessed through the domain controller (in other words, using the public format name).</span></span> <span data-ttu-id="29a61-140">基本优先级的专用队列和直接访问公用队列的值始终为零。</span><span class="sxs-lookup"><span data-stu-id="29a61-140">The base priority of private queues and of directly accessed public queues is always zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public Guid Category { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Category" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Category" />
      <MemberSignature Language="VB.NET" Value="Public Property Category As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Category { Guid get(); void set(Guid value); };" />
      <MemberSignature Language="F#" Value="member this.Category : Guid with get, set" Usage="System.Messaging.MessageQueueInstaller.Category" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.GuidConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29a61-141">Gets or sets an implementation-specific queue type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-141">Gets or sets an implementation-specific queue type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29a61-142">一个<see cref="T:System.Guid" />，表示队列类别 （或消息队列类型标识符），它允许应用程序将根据如何使用其队列分类。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-142">A <see cref="T:System.Guid" /> that represents the queue category (or Message Queuing type identifier), which allows applications to categorize their queues according to how they are used.</span>
          </span>
          <span data-ttu-id="29a61-143">默认值为 <see langword="Guid.empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-143">The default is <see langword="Guid.empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29a61-144">队列类别使应用程序能够根据它们的使用的方式的关联的队列分类。</span><span class="sxs-lookup"><span data-stu-id="29a61-144">The queue category enables an application to categorize associated queues according to the way they are used.</span></span> <span data-ttu-id="29a61-145"><xref:System.Messaging.MessageQueue.Category%2A>可以为 null 引用。</span><span class="sxs-lookup"><span data-stu-id="29a61-145">The <xref:System.Messaging.MessageQueue.Category%2A> can be a null reference.</span></span> <span data-ttu-id="29a61-146">此外可以定义新类别。</span><span class="sxs-lookup"><span data-stu-id="29a61-146">You can also define a new category.</span></span>  
  
 <span data-ttu-id="29a61-147"><xref:System.Messaging.MessageQueue.Category%2A>属性提供对消息队列类型标识符属性以与特定的队列相关联，为读/写访问。</span><span class="sxs-lookup"><span data-stu-id="29a61-147">The <xref:System.Messaging.MessageQueue.Category%2A> property provides access to the Message Queuing type identifier property, which is associated with a particular queue and is read/write.</span></span> <span data-ttu-id="29a61-148">可以使用<xref:System.Guid.NewGuid%2A>方法来创建保证是唯一的所有类别值<xref:System.Guid>值。</span><span class="sxs-lookup"><span data-stu-id="29a61-148">You can use the <xref:System.Guid.NewGuid%2A> method to create a category value that is guaranteed to be unique across all <xref:System.Guid> values.</span></span> <span data-ttu-id="29a61-149">但是，有必要仅针对类别值使其有别于其他类别，不能从所有其他<xref:System.Guid>值。</span><span class="sxs-lookup"><span data-stu-id="29a61-149">However, it is necessary only for the category value to be distinct from other categories, not from all other <xref:System.Guid> values.</span></span> <span data-ttu-id="29a61-150">例如，可以设置<xref:System.Messaging.MessageQueue.Category%2A>的队列的一组{00000000-0000-0000-0000-000000000001}并<xref:System.Messaging.MessageQueue.Category%2A>到另一个组{00000000-0000-0000-0000-000000000002}。</span><span class="sxs-lookup"><span data-stu-id="29a61-150">For example, you can set the <xref:System.Messaging.MessageQueue.Category%2A> for one group of queues to {00000000-0000-0000-0000-000000000001} and the <xref:System.Messaging.MessageQueue.Category%2A> for another group to {00000000-0000-0000-0000-000000000002}.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public override void Commit (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Commit(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Commit (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Commit(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Commit : System.Collections.IDictionary -&gt; unit" Usage="messageQueueInstaller.Commit savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <span data-ttu-id="29a61-151">A <see cref="T:System.Collections.IDictionary" /> that contains the post-installation state of the computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-151">A <see cref="T:System.Collections.IDictionary" /> that contains the post-installation state of the computer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29a61-152">Completes the installation process by committing the <see cref="T:System.Messaging.MessageQueue" /> installation information that the <see cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" /> method wrote to the registry.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-152">Completes the installation process by committing the <see cref="T:System.Messaging.MessageQueue" /> installation information that the <see cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" /> method wrote to the registry.</span>
          </span>
          <span data-ttu-id="29a61-153">This method is meant to be used by installation tools, which automatically call the appropriate methods.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-153">This method is meant to be used by installation tools, which automatically call the appropriate methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29a61-154">通常情况下，不调用的方法<xref:System.Messaging.MessageQueueInstaller>从在代码中; 它们通常仅由调用 installutil.exe 安装实用程序。</span><span class="sxs-lookup"><span data-stu-id="29a61-154">Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility.</span></span> <span data-ttu-id="29a61-155">该实用工具会自动调用<xref:System.Messaging.MessageQueueInstaller.Install%2A>在安装过程中的方法。</span><span class="sxs-lookup"><span data-stu-id="29a61-155">The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method during the installation process.</span></span> <span data-ttu-id="29a61-156">安装是事务性的因此如果在安装期间安装项目的任何组件的故障，则所有以前安装的组件将回滚到安装前的状态。</span><span class="sxs-lookup"><span data-stu-id="29a61-156">Installation is transactional, so if there is a failure of any installation project component during the installation, all the previously installed components are rolled back to their pre-installation states.</span></span> <span data-ttu-id="29a61-157">这通过调用每个组件实现<xref:System.Messaging.MessageQueueInstaller.Rollback%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="29a61-157">This is accomplished by calling each component's <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method.</span></span>  
  
 <span data-ttu-id="29a61-158">成功与安装项目相关联的所有组件的安装后发生，安装实用程序提交该安装。</span><span class="sxs-lookup"><span data-stu-id="29a61-158">After a successful installation of all the components that are associated with the installation project has occurred, the installation utility commits the installations.</span></span> <span data-ttu-id="29a61-159"><xref:System.Messaging.MessageQueueInstaller.Commit%2A> 完成的安装<xref:System.Messaging.MessageQueue>通过将队列设置为适当的初始状态。</span><span class="sxs-lookup"><span data-stu-id="29a61-159"><xref:System.Messaging.MessageQueueInstaller.Commit%2A> completes the installation of the <xref:System.Messaging.MessageQueue> by setting the queue to the appropriate initial state.</span></span> <span data-ttu-id="29a61-160">如果指定的队列<xref:System.Messaging.MessageQueueInstaller.Path%2A>属性已存在且包含消息，<xref:System.Messaging.MessageQueueInstaller.Commit%2A>清除这些消息。</span><span class="sxs-lookup"><span data-stu-id="29a61-160">If the queue specified by the <xref:System.Messaging.MessageQueueInstaller.Path%2A> property already exists and contains messages, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> clears the messages.</span></span> <span data-ttu-id="29a61-161"><xref:System.Messaging.MessageQueueInstaller.Commit%2A>而非<xref:System.Messaging.MessageQueueInstaller.Install%2A>，清除这些消息，因为无法回滚清除消息的操作。</span><span class="sxs-lookup"><span data-stu-id="29a61-161"><xref:System.Messaging.MessageQueueInstaller.Commit%2A>, rather than <xref:System.Messaging.MessageQueueInstaller.Install%2A>, clears the messages because the act of purging the messages cannot be rolled back.</span></span>  
  
 <span data-ttu-id="29a61-162">应用程序的安装例程使用的项目安装程序<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>自动维护有关已安装的组件的信息。</span><span class="sxs-lookup"><span data-stu-id="29a61-162">An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> to automatically maintain information about the components that have already been installed.</span></span> <span data-ttu-id="29a61-163">此状态信息，传递给<xref:System.Messaging.MessageQueueInstaller.Commit%2A>作为`savedState`由于该实用工具提交每个参数，将持续更新<xref:System.Messaging.MessageQueueInstaller>实例。</span><span class="sxs-lookup"><span data-stu-id="29a61-163">This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Commit%2A> as the `savedState` parameter, is continuously updated as the utility commits each <xref:System.Messaging.MessageQueueInstaller> instance.</span></span> <span data-ttu-id="29a61-164">通常情况下，不需要为你的代码可以显式修改此状态信息。</span><span class="sxs-lookup"><span data-stu-id="29a61-164">Usually, it is not necessary for your code to explicitly modify this state information.</span></span> <span data-ttu-id="29a61-165">当清除队列<xref:System.Messaging.MessageQueueInstaller.Commit%2A>到日志条目发布`savedState`与安装相关联。</span><span class="sxs-lookup"><span data-stu-id="29a61-165">When the queue has been cleared, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> posts a log entry to the `savedState` that is associated with the installation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="override this.CopyFromComponent : System.ComponentModel.IComponent -&gt; unit" Usage="messageQueueInstaller.CopyFromComponent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="29a61-166">A <see cref="T:System.ComponentModel.IComponent" /> to use as a template for the <see cref="T:System.Messaging.MessageQueueInstaller" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-166">A <see cref="T:System.ComponentModel.IComponent" /> to use as a template for the <see cref="T:System.Messaging.MessageQueueInstaller" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29a61-167">Copies the property values of a <see cref="T:System.Messaging.MessageQueue" /> component that are required at install time for a message queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-167">Copies the property values of a <see cref="T:System.Messaging.MessageQueue" /> component that are required at install time for a message queue.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29a61-168">通常情况下，不调用的方法<xref:System.Messaging.MessageQueueInstaller>从在代码中; 它们通常仅由调用 installutil.exe 安装实用程序。</span><span class="sxs-lookup"><span data-stu-id="29a61-168">Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility.</span></span> <span data-ttu-id="29a61-169"><xref:System.Messaging.MessageQueueInstaller.CopyFromComponent%2A> 安装实用程序使用它来设置的属性值<xref:System.Messaging.MessageQueueInstaller>对的值的现有<xref:System.Messaging.MessageQueue>。</span><span class="sxs-lookup"><span data-stu-id="29a61-169"><xref:System.Messaging.MessageQueueInstaller.CopyFromComponent%2A> is used by the installation utility to set the property values for the <xref:System.Messaging.MessageQueueInstaller> to the values of an existing <xref:System.Messaging.MessageQueue>.</span></span>  
  
 <span data-ttu-id="29a61-170">如果<xref:System.Messaging.MessageQueue.Path%2A>的<xref:System.Messaging.MessageQueue>，它是传递中为空字符串 ("")，必须设置<xref:System.Messaging.MessageQueue.Path%2A>属性安装程序在执行之前的非空值。</span><span class="sxs-lookup"><span data-stu-id="29a61-170">If the <xref:System.Messaging.MessageQueue.Path%2A> of the <xref:System.Messaging.MessageQueue> that is passed in is an empty string (""), you must set the <xref:System.Messaging.MessageQueue.Path%2A> property to a non-empty value before the installer executes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="29a61-171">The component associated with this <see cref="T:System.Messaging.MessageQueueInstaller" /> is not a <see cref="T:System.Messaging.MessageQueue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-171">The component associated with this <see cref="T:System.Messaging.MessageQueueInstaller" /> is not a <see cref="T:System.Messaging.MessageQueue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptionRequired">
      <MemberSignature Language="C#" Value="public System.Messaging.EncryptionRequired EncryptionRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.EncryptionRequired EncryptionRequired" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.EncryptionRequired" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptionRequired As EncryptionRequired" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::EncryptionRequired EncryptionRequired { System::Messaging::EncryptionRequired get(); void set(System::Messaging::EncryptionRequired value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionRequired : System.Messaging.EncryptionRequired with get, set" Usage="System.Messaging.MessageQueueInstaller.EncryptionRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.EncryptionRequired</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29a61-172">Gets or sets a value that indicates whether the queue accepts only private, or encrypted, messages.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-172">Gets or sets a value that indicates whether the queue accepts only private, or encrypted, messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29a61-173">其中一个<see cref="T:System.Messaging.EncryptionRequired" />值，该值指示发送到队列的消息级别所需的加密。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-173">One of the <see cref="T:System.Messaging.EncryptionRequired" /> values that indicates the encryption level required on messages sent to the queue.</span>
          </span>
          <span data-ttu-id="29a61-174">默认值为 <see langword="Optional" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-174">The default is <see langword="Optional" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29a61-175">指定加密时，仅<xref:System.Messaging.Message.Body%2A>的一条消息进行加密。</span><span class="sxs-lookup"><span data-stu-id="29a61-175">When encryption is specified, only the <xref:System.Messaging.Message.Body%2A> of a message is encrypted.</span></span> <span data-ttu-id="29a61-176">其他属性，如<xref:System.Messaging.Message.Label%2A>，未加密。</span><span class="sxs-lookup"><span data-stu-id="29a61-176">Other properties, such as the <xref:System.Messaging.Message.Label%2A>, are not encrypted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberSignature Language="F#" Value="override this.Install : System.Collections.IDictionary -&gt; unit" Usage="messageQueueInstaller.Install stateSaver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver">
          <span data-ttu-id="29a61-177">A <see cref="T:System.Collections.IDictionary" /> used to save information needed to perform a commit, rollback, or uninstall operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-177">A <see cref="T:System.Collections.IDictionary" /> used to save information needed to perform a commit, rollback, or uninstall operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29a61-178">Performs the installation and writes message queue information to the registry.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-178">Performs the installation and writes message queue information to the registry.</span>
          </span>
          <span data-ttu-id="29a61-179">This method is meant to be used by installation tools, which automatically call the appropriate methods.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-179">This method is meant to be used by installation tools, which automatically call the appropriate methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29a61-180"><xref:System.Messaging.MessageQueueInstaller.Install%2A>方法将消息队列信息写入到注册表中，并将关联<xref:System.Messaging.MessageQueue>实例与指定的路径处的队列<xref:System.Messaging.MessageQueueInstaller.Path%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="29a61-180">The <xref:System.Messaging.MessageQueueInstaller.Install%2A> method writes message queue information to the registry, and associates the <xref:System.Messaging.MessageQueue> instance with a queue that is located at the path specified by the <xref:System.Messaging.MessageQueueInstaller.Path%2A> property.</span></span> <span data-ttu-id="29a61-181">如果队列尚不存在，<xref:System.Messaging.MessageQueueInstaller.Install%2A>创建事务性队列。</span><span class="sxs-lookup"><span data-stu-id="29a61-181">If the queue does not already exist, <xref:System.Messaging.MessageQueueInstaller.Install%2A> creates a transactional queue.</span></span> <span data-ttu-id="29a61-182"><xref:System.Messaging.MessageQueueInstaller.Install%2A> 将新的或现有的队列属性设置为具有在指定的<xref:System.Messaging.MessageQueueInstaller>。</span><span class="sxs-lookup"><span data-stu-id="29a61-182"><xref:System.Messaging.MessageQueueInstaller.Install%2A> sets the new or existing queue properties to those that you have specified in the <xref:System.Messaging.MessageQueueInstaller>.</span></span> <span data-ttu-id="29a61-183">如果队列已存在，其属性将重置与<xref:System.Messaging.MessageQueueInstaller>。</span><span class="sxs-lookup"><span data-stu-id="29a61-183">If the queue already exists, its properties are reset to those of the <xref:System.Messaging.MessageQueueInstaller>.</span></span> <span data-ttu-id="29a61-184">如果现有的队列不是事务性的它是删除，然后重新创建为事务性队列。</span><span class="sxs-lookup"><span data-stu-id="29a61-184">If the existing queue is not transactional, it is deleted and then recreated as a transactional queue.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="29a61-185">如果需要重新创建队列，队列中的消息将丢失。</span><span class="sxs-lookup"><span data-stu-id="29a61-185">If it is necessary to recreate the queue, messages in the queue will be lost.</span></span>  
  
 <span data-ttu-id="29a61-186">通常情况下，不调用的方法<xref:System.Messaging.MessageQueueInstaller>从在代码中; 它们通常仅由调用 installutil.exe 安装实用程序。</span><span class="sxs-lookup"><span data-stu-id="29a61-186">Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the installutil.exe installation utility.</span></span> <span data-ttu-id="29a61-187">该实用工具会自动调用<xref:System.Messaging.MessageQueueInstaller.Install%2A>方法在安装过程中要写入与正在安装消息队列相关联的注册表信息。</span><span class="sxs-lookup"><span data-stu-id="29a61-187">The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method during the installation process to write registry information that is associated with the message queue being installed.</span></span> <span data-ttu-id="29a61-188">安装是事务性的因此如果在安装期间安装项目的任何组件的故障，则所有以前安装的组件将回滚到安装前的状态。</span><span class="sxs-lookup"><span data-stu-id="29a61-188">Installation is transactional, so if there is a failure of any installation project component during the installation, all the previously installed components are rolled back to their pre-installation states.</span></span> <span data-ttu-id="29a61-189">这通过调用每个组件实现<xref:System.Messaging.MessageQueueInstaller.Rollback%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="29a61-189">This is accomplished by calling each component's <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method.</span></span>  
  
 <span data-ttu-id="29a61-190">成功与安装项目相关联的所有组件的安装后发生，安装实用程序提交该安装。</span><span class="sxs-lookup"><span data-stu-id="29a61-190">After a successful installation of all the components that are associated with the installation project has occurred, the installation utility commits the installations.</span></span> <span data-ttu-id="29a61-191"><xref:System.Messaging.MessageQueueInstaller.Commit%2A> 完成的安装<xref:System.Messaging.MessageQueue>通过将队列设置为适当的初始状态。</span><span class="sxs-lookup"><span data-stu-id="29a61-191"><xref:System.Messaging.MessageQueueInstaller.Commit%2A> completes the installation of the <xref:System.Messaging.MessageQueue> by setting the queue to the appropriate initial state.</span></span> <span data-ttu-id="29a61-192">如果指定的队列<xref:System.Messaging.MessageQueueInstaller.Path%2A>属性已存在且包含消息，<xref:System.Messaging.MessageQueueInstaller.Commit%2A>清除这些消息。</span><span class="sxs-lookup"><span data-stu-id="29a61-192">If the queue specified by the <xref:System.Messaging.MessageQueueInstaller.Path%2A> property already exists and contains messages, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> clears the messages.</span></span> <span data-ttu-id="29a61-193"><xref:System.Messaging.MessageQueueInstaller.Commit%2A>而非<xref:System.Messaging.MessageQueueInstaller.Install%2A>，清除这些消息，因为无法回滚清除消息的操作。</span><span class="sxs-lookup"><span data-stu-id="29a61-193"><xref:System.Messaging.MessageQueueInstaller.Commit%2A>, rather than <xref:System.Messaging.MessageQueueInstaller.Install%2A>, clears the messages because the act of purging the messages cannot be rolled back.</span></span>  
  
 <span data-ttu-id="29a61-194">应用程序的安装例程使用的项目安装程序<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>自动维护有关已安装的组件的信息。</span><span class="sxs-lookup"><span data-stu-id="29a61-194">An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> to automatically maintain information about the components that have already been installed.</span></span> <span data-ttu-id="29a61-195">此状态信息，传递给<xref:System.Messaging.MessageQueueInstaller.Install%2A>作为`stateSaver`实用工具安装每个参数，将持续更新<xref:System.Messaging.MessageQueueInstaller>实例。</span><span class="sxs-lookup"><span data-stu-id="29a61-195">This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Install%2A> as the `stateSaver` parameter, is continuously updated as the utility installs each <xref:System.Messaging.MessageQueueInstaller> instance.</span></span> <span data-ttu-id="29a61-196">通常情况下，不需要为你的代码可以显式修改此状态信息。</span><span class="sxs-lookup"><span data-stu-id="29a61-196">Usually, it is not necessary for your code to explicitly modify this state information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="IsEquivalentInstaller">
      <MemberSignature Language="C#" Value="public override bool IsEquivalentInstaller (System.Configuration.Install.ComponentInstaller otherInstaller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsEquivalentInstaller(class System.Configuration.Install.ComponentInstaller otherInstaller) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsEquivalentInstaller (otherInstaller As ComponentInstaller) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsEquivalentInstaller(System::Configuration::Install::ComponentInstaller ^ otherInstaller);" />
      <MemberSignature Language="F#" Value="override this.IsEquivalentInstaller : System.Configuration.Install.ComponentInstaller -&gt; bool" Usage="messageQueueInstaller.IsEquivalentInstaller otherInstaller" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherInstaller" Type="System.Configuration.Install.ComponentInstaller" />
      </Parameters>
      <Docs>
        <param name="otherInstaller">
          <span data-ttu-id="29a61-197">The installer to compare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-197">The installer to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29a61-198">Determines whether the specified installer can handle the same kind of installation as this installer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-198">Determines whether the specified installer can handle the same kind of installation as this installer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="29a61-199">
            <see langword="true" /> if this installer and the installer specified by the <paramref name="otherInstaller" /> parameter can handle the same kind of installation; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-199">
              <see langword="true" /> if this installer and the installer specified by the <paramref name="otherInstaller" /> parameter can handle the same kind of installation; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29a61-200">通常情况下，<xref:System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller%2A>将返回`true`仅在此安装程序和安装程序指定`otherInstaller`参数属于同一类型。</span><span class="sxs-lookup"><span data-stu-id="29a61-200">Typically, <xref:System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller%2A> returns `true` only if this installer and the installer specified by the `otherInstaller` parameter are of the same type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Label : string with get, set" Usage="System.Messaging.MessageQueueInstaller.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29a61-201">Gets or sets a description of the queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-201">Gets or sets a description of the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29a61-202">描述消息队列的标签。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-202">The label that describes the message queue.</span>
          </span>
          <span data-ttu-id="29a61-203">默认值为空字符串("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-203">The default is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29a61-204"><xref:System.Messaging.MessageQueue.Label%2A>属性不必是唯一的队列。</span><span class="sxs-lookup"><span data-stu-id="29a61-204">The <xref:System.Messaging.MessageQueue.Label%2A> property does not need to be unique across queues.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="29a61-205">The <see cref="P:System.Messaging.MessageQueueInstaller.Label" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-205">The <see cref="P:System.Messaging.MessageQueueInstaller.Label" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MaximumJournalSize">
      <MemberSignature Language="C#" Value="public long MaximumJournalSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumJournalSize" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MaximumJournalSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumJournalSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumJournalSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumJournalSize : int64 with get, set" Usage="System.Messaging.MessageQueueInstaller.MaximumJournalSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29a61-206">Gets or sets the maximum size of the journal that is associated with the queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-206">Gets or sets the maximum size of the journal that is associated with the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29a61-207">最大大小，以千字节为单位的日记队列记录从队列中删除的消息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-207">The maximum size, in kilobytes, of the journal queue, which records messages that are removed from the queue.</span>
          </span>
          <span data-ttu-id="29a61-208">消息队列默认为无限制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-208">The Message Queuing default is no limit.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29a61-209">创建队列时，消息队列自动队列日志中创建新队列所在的同一位置。</span><span class="sxs-lookup"><span data-stu-id="29a61-209">When a queue is created, Message Queuing automatically creates a queue journal in the same location as the new queue.</span></span> <span data-ttu-id="29a61-210">队列日志用于跟踪从队列中删除的消息。</span><span class="sxs-lookup"><span data-stu-id="29a61-210">The queue journal is used to track the messages that are removed from the queue.</span></span>  
  
 <span data-ttu-id="29a61-211">两种类型的消息不跟踪： 将从队列删除，因为其接收时间计时器过期，以及从队列中清除。</span><span class="sxs-lookup"><span data-stu-id="29a61-211">Two types of messages remain untracked: those that are removed from the queue because their time-to-be-received timer expired, and those that are purged from the queue.</span></span>  
  
 <span data-ttu-id="29a61-212">应用程序不能将消息发送到日记队列。</span><span class="sxs-lookup"><span data-stu-id="29a61-212">Applications cannot send messages to the journal queue.</span></span> <span data-ttu-id="29a61-213">但是，您必须定期清除要删除不再需要的消息的队列。</span><span class="sxs-lookup"><span data-stu-id="29a61-213">However, you must periodically clear the queue to remove the messages that are no longer needed.</span></span> <span data-ttu-id="29a61-214">日记队列计入队列所在的计算机配额中存储的消息。</span><span class="sxs-lookup"><span data-stu-id="29a61-214">Messages stored in journal queues count toward the quota for the computer where the queues reside.</span></span> <span data-ttu-id="29a61-215">（计算机配额设置管理员。）</span><span class="sxs-lookup"><span data-stu-id="29a61-215">(The computer quota is set by the administrator.)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumQueueSize">
      <MemberSignature Language="C#" Value="public long MaximumQueueSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumQueueSize" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MaximumQueueSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumQueueSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumQueueSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumQueueSize : int64 with get, set" Usage="System.Messaging.MessageQueueInstaller.MaximumQueueSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29a61-216">Gets or sets the maximum size of the queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-216">Gets or sets the maximum size of the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29a61-217">最大大小，以千字节为单位的队列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-217">The maximum size, in kilobytes, of the queue.</span>
          </span>
          <span data-ttu-id="29a61-218">消息队列默认为无限制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-218">The Message Queuing default is no limit.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29a61-219">尽管可以更高版本重置在队列创建时通常设置的最大队列大小。</span><span class="sxs-lookup"><span data-stu-id="29a61-219">The maximum queue size is typically set at the time of queue creation, although it can be reset later.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MulticastAddress">
      <MemberSignature Language="C#" Value="public string MulticastAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MulticastAddress" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MulticastAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MulticastAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MulticastAddress : string with get, set" Usage="System.Messaging.MessageQueueInstaller.MulticastAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29a61-220">Introduced in MSMQ 3.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-220">Introduced in MSMQ 3.0.</span>
          </span>
          <span data-ttu-id="29a61-221">Gets or sets the multicast address associated with the queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-221">Gets or sets the multicast address associated with the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29a61-222">一个<see cref="T:System.String" />，其中包含有效的多播的地址 （在窗体，如下所示） 或<see langword="null" />，指示该队列不是多播地址相关联。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-222">A <see cref="T:System.String" /> that contains a valid multicast address (in the form shown below) or <see langword="null" />, which indicates that the queue is not associated with a multicast address.</span>
          </span>
          <span data-ttu-id="29a61-223">  
  
```  
&lt;地址&gt;:&lt;端口&gt;  
```</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-223">  
  
```  
&lt;address&gt;:&lt;port&gt;  
```</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="29a61-224">MSMQ 3.0 is not installed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-224">MSMQ 3.0 is not installed.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.MessageQueue.MulticastAddress" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Messaging.MessageQueueInstaller.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29a61-225">Gets or sets the location of the queue that is referenced by this object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-225">Gets or sets the location of the queue that is referenced by this object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29a61-226">表示网络中队列的位置的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-226">The path that represents the location of the queue in the network.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29a61-227">语法<xref:System.Messaging.MessageQueue.Path%2A>属性依赖它的引用的队列的类型。</span><span class="sxs-lookup"><span data-stu-id="29a61-227">The syntax for the <xref:System.Messaging.MessageQueue.Path%2A> property depends on the type of queue it references.</span></span> <span data-ttu-id="29a61-228">下表显示了语法应使用的各种类型的队列。</span><span class="sxs-lookup"><span data-stu-id="29a61-228">The following table shows the syntax you should use for queues of various types.</span></span>  
  
|<span data-ttu-id="29a61-229">队列类型</span><span class="sxs-lookup"><span data-stu-id="29a61-229">Queue type</span></span>|<span data-ttu-id="29a61-230">语法</span><span class="sxs-lookup"><span data-stu-id="29a61-230">Syntax</span></span>|  
|----------------|------------|  
|<span data-ttu-id="29a61-231">公用队列</span><span class="sxs-lookup"><span data-stu-id="29a61-231">Public queue</span></span>|`machineName`\\`queueName`|  
|<span data-ttu-id="29a61-232">专用队列</span><span class="sxs-lookup"><span data-stu-id="29a61-232">Private queue</span></span>|`machineName`\\`Private$`\\`queueName`|  
|<span data-ttu-id="29a61-233">日记队列</span><span class="sxs-lookup"><span data-stu-id="29a61-233">Journal queue</span></span>|`machineName`\\`queueName`\\`Journal$`|  
|<span data-ttu-id="29a61-234">计算机日志队列</span><span class="sxs-lookup"><span data-stu-id="29a61-234">Machine journal queue</span></span>|`machineName`\\`Journal$`|  
|<span data-ttu-id="29a61-235">计算机死信队列</span><span class="sxs-lookup"><span data-stu-id="29a61-235">Machine dead-letter queue</span></span>|`machineName`\\`Deadletter$`|  
|<span data-ttu-id="29a61-236">计算机事务性死信队列</span><span class="sxs-lookup"><span data-stu-id="29a61-236">Machine transactional dead-letter queue</span></span>|`machineName`\\`XactDeadletter$`|  
  
 <span data-ttu-id="29a61-237">使用"。"本地计算机。</span><span class="sxs-lookup"><span data-stu-id="29a61-237">Use "." for the local computer.</span></span>  
  
 <span data-ttu-id="29a61-238">此外可以使用<xref:System.Messaging.MessageQueue.FormatName%2A>或<xref:System.Messaging.MessageQueue.Label%2A>的消息队列应用程序对象来描述的队列路径。</span><span class="sxs-lookup"><span data-stu-id="29a61-238">You can also use the <xref:System.Messaging.MessageQueue.FormatName%2A> or <xref:System.Messaging.MessageQueue.Label%2A> of a Message Queuing application object to describe the queue path.</span></span> <span data-ttu-id="29a61-239">下表显示了有关每种类型的引用的正确语法。</span><span class="sxs-lookup"><span data-stu-id="29a61-239">The following table shows the proper syntax for each type of reference.</span></span>  
  
|<span data-ttu-id="29a61-240">参考</span><span class="sxs-lookup"><span data-stu-id="29a61-240">Reference</span></span>|<span data-ttu-id="29a61-241">语法</span><span class="sxs-lookup"><span data-stu-id="29a61-241">Syntax</span></span>|  
|---------------|------------|  
|<span data-ttu-id="29a61-242">格式名称</span><span class="sxs-lookup"><span data-stu-id="29a61-242">Format name</span></span>|<span data-ttu-id="29a61-243">格式名称: [*格式名称*]</span><span class="sxs-lookup"><span data-stu-id="29a61-243">FormatName:[ *format name* ]</span></span>|  
|<span data-ttu-id="29a61-244">Label</span><span class="sxs-lookup"><span data-stu-id="29a61-244">Label</span></span>|<span data-ttu-id="29a61-245">标签: [*标签*]</span><span class="sxs-lookup"><span data-stu-id="29a61-245">Label:[ *label* ]</span></span>|  
  
 <span data-ttu-id="29a61-246">如果正在脱机工作，则必须使用格式名称定义的队列<xref:System.Messaging.MessageQueue.Path%2A>。</span><span class="sxs-lookup"><span data-stu-id="29a61-246">If you are working offline, you must use the format name to define the queue <xref:System.Messaging.MessageQueue.Path%2A>.</span></span> <span data-ttu-id="29a61-247">如果不这样做，应用程序将引发异常，因为主域控制器不可用，若要解决<xref:System.Messaging.MessageQueue.Path%2A>到<xref:System.Messaging.MessageQueue.FormatName%2A>。</span><span class="sxs-lookup"><span data-stu-id="29a61-247">If you do not, the application will throw an exception, because the primary domain controller is unavailable to resolve the <xref:System.Messaging.MessageQueue.Path%2A> into the <xref:System.Messaging.MessageQueue.FormatName%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="29a61-248">The <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> was set to an invalid value, possibly because the syntax is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-248">The <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> was set to an invalid value, possibly because the syntax is not valid.</span>
          </span>
          <span data-ttu-id="29a61-249">-or-  The <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-249">-or-  The <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Permissions">
      <MemberSignature Language="C#" Value="public System.Messaging.AccessControlList Permissions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.AccessControlList Permissions" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Permissions" />
      <MemberSignature Language="VB.NET" Value="Public Property Permissions As AccessControlList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::AccessControlList ^ Permissions { System::Messaging::AccessControlList ^ get(); void set(System::Messaging::AccessControlList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Permissions : System.Messaging.AccessControlList with get, set" Usage="System.Messaging.MessageQueueInstaller.Permissions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.AccessControlList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29a61-250">Gets or sets permissions associated with the queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-250">Gets or sets permissions associated with the queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29a61-251">一个<see cref="T:System.Messaging.AccessControlList" />，其中包含一个或多个指定受信者和为队列授予的权限的访问控制项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-251">A <see cref="T:System.Messaging.AccessControlList" /> that contains one or more access control entries that specify the trustees and permissions to grant for the queue.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29a61-252">默认情况下，公用或专用队列的创建者具有完全控制，并且每个人都有获取队列属性，获取权限，并写入队列的权限的域组。</span><span class="sxs-lookup"><span data-stu-id="29a61-252">By default, the creator of a public or private queue has full control, and the domain group Everyone has permission to get queue properties, get permissions, and write to the queue.</span></span> <span data-ttu-id="29a61-253">消息队列访问每个权限列表项反过来直到它找到一个适用于当前用户和当前尝试的操作。</span><span class="sxs-lookup"><span data-stu-id="29a61-253">Message Queuing accesses each permission list entry in turn until it finds one that applies to the current user and the current attempted action.</span></span> <span data-ttu-id="29a61-254">根据使用操作系统的权限，特别是拒绝对用户的权限优先于允许。</span><span class="sxs-lookup"><span data-stu-id="29a61-254">As with the operating system permissions, the rights that you specifically deny to a user take precedence over those you allow.</span></span>  
  
 <span data-ttu-id="29a61-255">构造时<xref:System.Messaging.MessageQueueInstaller.Permissions%2A>属性，添加<xref:System.Messaging.AccessControlEntry>实例向您<xref:System.Messaging.AccessControlList>集合。</span><span class="sxs-lookup"><span data-stu-id="29a61-255">When you construct the <xref:System.Messaging.MessageQueueInstaller.Permissions%2A> property, add <xref:System.Messaging.AccessControlEntry> instances to your <xref:System.Messaging.AccessControlList> collection.</span></span> <span data-ttu-id="29a61-256">在构造每个访问控制项时，可以指定泛型类型或者标准访问权限。</span><span class="sxs-lookup"><span data-stu-id="29a61-256">When you construct each access control entry, you can specify generic or standard access rights.</span></span> <span data-ttu-id="29a61-257">对队列的权限可以是以下任意组合：</span><span class="sxs-lookup"><span data-stu-id="29a61-257">The rights to a queue can be any combination of the following:</span></span>  
  
-   <span data-ttu-id="29a61-258">删除</span><span class="sxs-lookup"><span data-stu-id="29a61-258">Delete</span></span>  
  
-   <span data-ttu-id="29a61-259">读取安全</span><span class="sxs-lookup"><span data-stu-id="29a61-259">Read Security</span></span>  
  
-   <span data-ttu-id="29a61-260">编写安全</span><span class="sxs-lookup"><span data-stu-id="29a61-260">Write Security</span></span>  
  
-   <span data-ttu-id="29a61-261">同步</span><span class="sxs-lookup"><span data-stu-id="29a61-261">Synchronize</span></span>  
  
-   <span data-ttu-id="29a61-262">修改所有者</span><span class="sxs-lookup"><span data-stu-id="29a61-262">Modify Owner</span></span>  
  
-   <span data-ttu-id="29a61-263">读取</span><span class="sxs-lookup"><span data-stu-id="29a61-263">Read</span></span>  
  
-   <span data-ttu-id="29a61-264">Write</span><span class="sxs-lookup"><span data-stu-id="29a61-264">Write</span></span>  
  
-   <span data-ttu-id="29a61-265">执行</span><span class="sxs-lookup"><span data-stu-id="29a61-265">Execute</span></span>  
  
-   <span data-ttu-id="29a61-266">必需</span><span class="sxs-lookup"><span data-stu-id="29a61-266">Required</span></span>  
  
-   <span data-ttu-id="29a61-267">全部</span><span class="sxs-lookup"><span data-stu-id="29a61-267">All</span></span>  
  
-   <span data-ttu-id="29a61-268">无</span><span class="sxs-lookup"><span data-stu-id="29a61-268">None</span></span>  
  
 <span data-ttu-id="29a61-269">这些权限是一组位标志，用于可使用按位 OR 组合：</span><span class="sxs-lookup"><span data-stu-id="29a61-269">These rights are a set of bit flags that you can combine using the bitwise OR:</span></span>  
  
-   <span data-ttu-id="29a61-270">完全控制</span><span class="sxs-lookup"><span data-stu-id="29a61-270">Full Control</span></span>  
  
-   <span data-ttu-id="29a61-271">删除消息</span><span class="sxs-lookup"><span data-stu-id="29a61-271">Delete Message</span></span>  
  
-   <span data-ttu-id="29a61-272">接收消息</span><span class="sxs-lookup"><span data-stu-id="29a61-272">Receive Message</span></span>  
  
-   <span data-ttu-id="29a61-273">速览消息</span><span class="sxs-lookup"><span data-stu-id="29a61-273">Peek Message</span></span>  
  
-   <span data-ttu-id="29a61-274">接收日志消息</span><span class="sxs-lookup"><span data-stu-id="29a61-274">Receive Journal Message</span></span>  
  
-   <span data-ttu-id="29a61-275">获取队列属性</span><span class="sxs-lookup"><span data-stu-id="29a61-275">Get Queue Properties</span></span>  
  
-   <span data-ttu-id="29a61-276">设置队列属性</span><span class="sxs-lookup"><span data-stu-id="29a61-276">Set Queue Properties</span></span>  
  
-   <span data-ttu-id="29a61-277">获取权限</span><span class="sxs-lookup"><span data-stu-id="29a61-277">Get Permissions</span></span>  
  
-   <span data-ttu-id="29a61-278">设置权限</span><span class="sxs-lookup"><span data-stu-id="29a61-278">Set Permissions</span></span>  
  
-   <span data-ttu-id="29a61-279">取得队列所有权</span><span class="sxs-lookup"><span data-stu-id="29a61-279">Take Queue Ownership</span></span>  
  
-   <span data-ttu-id="29a61-280">编写消息</span><span class="sxs-lookup"><span data-stu-id="29a61-280">Write Message</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Rollback : System.Collections.IDictionary -&gt; unit" Usage="messageQueueInstaller.Rollback savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <span data-ttu-id="29a61-281">A <see cref="T:System.Collections.IDictionary" /> that contains the pre-installation state of the computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-281">A <see cref="T:System.Collections.IDictionary" /> that contains the pre-installation state of the computer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29a61-282">Restores the computer to the state it was in before the installation, by rolling back the queue information that the installation procedure wrote to the registry.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-282">Restores the computer to the state it was in before the installation, by rolling back the queue information that the installation procedure wrote to the registry.</span>
          </span>
          <span data-ttu-id="29a61-283">This method is meant to be used by installation tools, which automatically call the appropriate methods.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-283">This method is meant to be used by installation tools, which automatically call the appropriate methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29a61-284"><xref:System.Messaging.MessageQueueInstaller.Rollback%2A>方法撤消的影响<xref:System.Messaging.MessageQueueInstaller.Install%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="29a61-284">The <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method undoes the effects of the <xref:System.Messaging.MessageQueueInstaller.Install%2A> method.</span></span> <span data-ttu-id="29a61-285"><xref:System.Messaging.MessageQueueInstaller.Rollback%2A> 安装项目中的任何组件的安装失败时调用。</span><span class="sxs-lookup"><span data-stu-id="29a61-285"><xref:System.Messaging.MessageQueueInstaller.Rollback%2A> is called if the installation of any component in the installation project fails.</span></span> <span data-ttu-id="29a61-286"><xref:System.Messaging.MessageQueueInstaller.Install%2A>方法创建或设置队列的属性。</span><span class="sxs-lookup"><span data-stu-id="29a61-286">The <xref:System.Messaging.MessageQueueInstaller.Install%2A> method creates or sets the properties for a queue.</span></span> <span data-ttu-id="29a61-287"><xref:System.Messaging.MessageQueueInstaller.Rollback%2A> 删除队列，或者将预先存在的队列的属性重置为其安装前的值。</span><span class="sxs-lookup"><span data-stu-id="29a61-287"><xref:System.Messaging.MessageQueueInstaller.Rollback%2A> either deletes the queue or resets the properties of a pre-existing queue to their pre-installation values.</span></span>  
  
 <span data-ttu-id="29a61-288">通常情况下，不调用的方法<xref:System.Messaging.MessageQueueInstaller>从在代码中; 它们通常仅由调用 InstallUtil.exe 安装实用程序。</span><span class="sxs-lookup"><span data-stu-id="29a61-288">Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the InstallUtil.exe installation utility.</span></span> <span data-ttu-id="29a61-289">该实用工具会自动调用<xref:System.Messaging.MessageQueueInstaller.Rollback%2A>方法安装故障来撤消任何更改之后安装过程已完成。</span><span class="sxs-lookup"><span data-stu-id="29a61-289">The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> method after an installation failure to undo any changes that the installation process has already made.</span></span>  
  
 <span data-ttu-id="29a61-290">应用程序的安装例程使用的项目安装程序<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>自动维护有关已安装的组件的信息。</span><span class="sxs-lookup"><span data-stu-id="29a61-290">An application's install routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> to automatically maintain information about the components that have already been installed.</span></span> <span data-ttu-id="29a61-291">此状态信息，传递给<xref:System.Messaging.MessageQueueInstaller.Rollback%2A>作为`savedState`参数，将持续更新，因为该实用工具将返回每个<xref:System.Messaging.MessageQueueInstaller>实例。</span><span class="sxs-lookup"><span data-stu-id="29a61-291">This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> as the `savedState` parameter, is continuously updated as the utility rolls back each <xref:System.Messaging.MessageQueueInstaller> instance.</span></span> <span data-ttu-id="29a61-292">通常情况下，不需要为你的代码可以显式修改此状态信息。</span><span class="sxs-lookup"><span data-stu-id="29a61-292">Usually, it is not necessary for your code to explicitly modify this state information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="Transactional">
      <MemberSignature Language="C#" Value="public bool Transactional { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Transactional" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Transactional" />
      <MemberSignature Language="VB.NET" Value="Public Property Transactional As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Transactional { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Transactional : bool with get, set" Usage="System.Messaging.MessageQueueInstaller.Transactional" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29a61-293">Gets or sets a value that indicates whether the queue accepts only messages sent as part of a transaction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-293">Gets or sets a value that indicates whether the queue accepts only messages sent as part of a transaction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29a61-294">
            <see langword="true" /> 如果队列仅接受作为事务; 的一部分发送的消息否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-294">
              <see langword="true" /> if the queue can only accept messages sent as part of a transaction; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="29a61-295">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-295">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29a61-296">可以从使用或不使用事务的本地事务队列检索消息。</span><span class="sxs-lookup"><span data-stu-id="29a61-296">Messages can be retrieved from a local transaction queue with or without using a transaction.</span></span> <span data-ttu-id="29a61-297">如果未指定事务上下文，消息队列会为你创建单个内部事务。</span><span class="sxs-lookup"><span data-stu-id="29a61-297">If you do not specify a transaction context, Message Queuing creates a single internal transaction for you.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public override void Uninstall (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Uninstall(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Uninstall (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Uninstall(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Uninstall : System.Collections.IDictionary -&gt; unit" Usage="messageQueueInstaller.Uninstall savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <span data-ttu-id="29a61-298">A <see cref="T:System.Collections.IDictionary" /> that contains the post-installation state of the computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-298">A <see cref="T:System.Collections.IDictionary" /> that contains the post-installation state of the computer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="29a61-299">Removes an installation by removing queue information from the registry.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-299">Removes an installation by removing queue information from the registry.</span>
          </span>
          <span data-ttu-id="29a61-300">This method is meant to be used by uninstallation tools, which automatically call the appropriate methods.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-300">This method is meant to be used by uninstallation tools, which automatically call the appropriate methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29a61-301">如果<xref:System.Messaging.MessageQueueInstaller.UninstallAction%2A>是`Remove`，<xref:System.Messaging.MessageQueueInstaller.Uninstall%2A>也会删除与关联的队列<xref:System.Messaging.MessageQueue>。</span><span class="sxs-lookup"><span data-stu-id="29a61-301">If the <xref:System.Messaging.MessageQueueInstaller.UninstallAction%2A> is `Remove`, <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> also deletes the queue associated with the <xref:System.Messaging.MessageQueue>.</span></span>  
  
 <span data-ttu-id="29a61-302">通常情况下，不调用的方法<xref:System.Messaging.MessageQueueInstaller>从在代码中; 它们通常仅由调用 InstallUtil.exe 安装实用程序 （在卸载模式下）。</span><span class="sxs-lookup"><span data-stu-id="29a61-302">Typically, you do not call the methods of the <xref:System.Messaging.MessageQueueInstaller> from within your code; they are generally called only by the InstallUtil.exe installation utility (in uninstall mode).</span></span> <span data-ttu-id="29a61-303">该实用工具会自动调用<xref:System.Messaging.MessageQueueInstaller.Uninstall%2A>方法还原受影响的在安装程序安装前的状态系统的部分。</span><span class="sxs-lookup"><span data-stu-id="29a61-303">The utility automatically calls the <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> method to restore the parts of the system that were affected by the installation to their pre-installation states.</span></span> <span data-ttu-id="29a61-304">这包括删除与正在卸载消息队列相关联的注册表信息。</span><span class="sxs-lookup"><span data-stu-id="29a61-304">This includes deleting registry information that is associated with the MessageQueue being uninstalled.</span></span>  
  
 <span data-ttu-id="29a61-305">应用程序的项目安装程序卸载例程使用<xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>自动维护有关已卸载的组件的信息。</span><span class="sxs-lookup"><span data-stu-id="29a61-305">An application's uninstall routine uses the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> to automatically maintain information about the components that have already been uninstalled.</span></span> <span data-ttu-id="29a61-306">此状态信息，传递给<xref:System.Messaging.MessageQueueInstaller.Uninstall%2A>作为`savedState`实用程序卸载每个参数，将持续更新<xref:System.Messaging.MessageQueueInstaller>实例。</span><span class="sxs-lookup"><span data-stu-id="29a61-306">This state information, which is passed to <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> as the `savedState` parameter, is continuously updated as the utility uninstalls each <xref:System.Messaging.MessageQueueInstaller> instance.</span></span> <span data-ttu-id="29a61-307">通常情况下，不需要为你的代码可以显式修改此状态信息。</span><span class="sxs-lookup"><span data-stu-id="29a61-307">Usually, it is not necessary for your code to explicitly modify this state information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="UninstallAction">
      <MemberSignature Language="C#" Value="public System.Configuration.Install.UninstallAction UninstallAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.Install.UninstallAction UninstallAction" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.UninstallAction" />
      <MemberSignature Language="VB.NET" Value="Public Property UninstallAction As UninstallAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::Install::UninstallAction UninstallAction { System::Configuration::Install::UninstallAction get(); void set(System::Configuration::Install::UninstallAction value); };" />
      <MemberSignature Language="F#" Value="member this.UninstallAction : System.Configuration.Install.UninstallAction with get, set" Usage="System.Messaging.MessageQueueInstaller.UninstallAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.Install.UninstallAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29a61-308">Gets or sets a value that indicates what the installer does with the queue at uninstall time: remove it, restore it to its pre-installation state, or leave it in its current installed state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-308">Gets or sets a value that indicates what the installer does with the queue at uninstall time: remove it, restore it to its pre-installation state, or leave it in its current installed state.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29a61-309">之一<see cref="T:System.Configuration.Install.UninstallAction" />值，该值指示用于队列保留在时的状态<see cref="T:System.Messaging.MessageQueue" />卸载。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-309">One of the <see cref="T:System.Configuration.Install.UninstallAction" /> values that indicates what state to leave the queue in when the <see cref="T:System.Messaging.MessageQueue" /> is uninstalled.</span>
          </span>
          <span data-ttu-id="29a61-310">默认值为 <see langword="Remove" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-310">The default is <see langword="Remove" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29a61-311">在安装队列时，可以选择使用现有队列。</span><span class="sxs-lookup"><span data-stu-id="29a61-311">When you install a queue, you can optionally use an existing queue.</span></span> <span data-ttu-id="29a61-312">如果这样做，则必须确定队列是否应返回到安装前的状态，或保留在其当前的安装后状态。</span><span class="sxs-lookup"><span data-stu-id="29a61-312">If you do so, you must decide whether the queue should return to its pre-installation state, or remain in its current, post-installation state.</span></span> <span data-ttu-id="29a61-313">如果您选择将队列返回到安装前的状态，则不会还原已从队列中删除在安装时的消息。</span><span class="sxs-lookup"><span data-stu-id="29a61-313">If you elect to return the queue to its pre-installation state, messages that were deleted from the queue at install time are not restored.</span></span> <span data-ttu-id="29a61-314">你可以重置仅与关联的队列属性<xref:System.Messaging.MessageQueueInstaller>到安装前的值。</span><span class="sxs-lookup"><span data-stu-id="29a61-314">You can reset only queue properties that are associated with the <xref:System.Messaging.MessageQueueInstaller> to their pre-installation values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.Install.UninstallAction" />
      </Docs>
    </Member>
    <Member MemberName="UseJournalQueue">
      <MemberSignature Language="C#" Value="public bool UseJournalQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseJournalQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.UseJournalQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property UseJournalQueue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseJournalQueue { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseJournalQueue : bool with get, set" Usage="System.Messaging.MessageQueueInstaller.UseJournalQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="29a61-315">Gets or sets a value that indicates whether messages that are retrieved from the queue are also copied to the associated journal queue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-315">Gets or sets a value that indicates whether messages that are retrieved from the queue are also copied to the associated journal queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="29a61-316">
            <see langword="true" /> 若要复制到日记队列中; 从队列检索的消息否则为<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-316">
              <see langword="true" /> to copy messages that are retrieved from the queue to the journal queue; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="29a61-317">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="29a61-317">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29a61-318">日记队列，可以保持跟踪的消息，即使已经从队列中检索它们。</span><span class="sxs-lookup"><span data-stu-id="29a61-318">A journal queue lets you keep track of messages even after they have been retrieved from the queue.</span></span> <span data-ttu-id="29a61-319">但是，两种类型的消息将保持未跟踪： 其接收时间计时器过期时，会从队列中删除和从队列中清除。</span><span class="sxs-lookup"><span data-stu-id="29a61-319">However, two types of messages remain untracked: those that are removed from the queue when their time-to-be-received timer expires, and those that are purged from the queue.</span></span>  
  
 <span data-ttu-id="29a61-320">应定期清除日志队列，若要删除不再需要的消息。</span><span class="sxs-lookup"><span data-stu-id="29a61-320">A journal queue should be cleared periodically to remove messages that are no longer needed.</span></span> <span data-ttu-id="29a61-321">日记队列计入配额的日志所在的计算机中存储的消息。</span><span class="sxs-lookup"><span data-stu-id="29a61-321">Messages stored in the journal queue count toward the quota for the computer on which the journal is located.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>