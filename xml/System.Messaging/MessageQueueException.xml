<Type Name="MessageQueueException" FullName="System.Messaging.MessageQueueException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="22cf0facdb1707c54958b123310d8d09a5801de4" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39746966" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MessageQueueException : System.Runtime.InteropServices.ExternalException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit MessageQueueException extends System.Runtime.InteropServices.ExternalException" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.MessageQueueException" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageQueueException&#xA;Inherits ExternalException" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageQueueException : System::Runtime::InteropServices::ExternalException" />
  <TypeSignature Language="F#" Value="type MessageQueueException = class&#xA;    inherit ExternalException" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.InteropServices.ExternalException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>发生 Microsoft 消息队列内部错误时引发的异常。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 与关联的异常<xref:System.Messaging.MessageQueueException>类生成的内部消息队列，应通过你的代码在处理内部错误。  
  
 每个异常包含一个错误代码和描述错误的源的文本字符串。 请参阅<xref:System.Messaging.MessageQueueErrorCode>这些错误代码及其说明的列表类。  
  
 如果 <xref:System.Messaging.MessageQueue> 在 `sharedModeDenyReceive` 参数设置为 true 的情况下打开一个队列，则随后尝试从该队列中进行读取的任何 <xref:System.Messaging.MessageQueue> 都会由于共享冲突而生成 <xref:System.Messaging.MessageQueueException> 异常。 如果一个 <xref:System.Messaging.MessageQueue> 尝试以独占模式访问队列，而此时另一个 <xref:System.Messaging.MessageQueue> 已经以非独占方式访问该队列，则引发与此相同的异常。  
  
> **不支持警报标记!!!**  
> <xref:System.Messaging.MessageQueueTransaction> 是可识别线程单元的。 Visual Basic 设置到主线程的状态`STA`，因此你必须应用<xref:System.MTAThreadAttribute>中`Main`子例程。 否则，利用另一个线程发送事务性消息将引发 <xref:System.Messaging.MessageQueueException> 异常。  
  
   
  
## Examples  
 [!code-cpp[MessageQueue.ExistsDelete#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.ExistsDelete/CPP/mqexistsdelete.cpp#1)]
 [!code-csharp[MessageQueue.ExistsDelete#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.ExistsDelete/CS/mqexistsdelete.cs#1)]
 [!code-vb[MessageQueue.ExistsDelete#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.ExistsDelete/VB/mqexistsdelete.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueueErrorCode" />
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.Message" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MessageQueueException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MessageQueueException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Messaging.MessageQueueException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Messaging.MessageQueueException" Usage="new System.Messaging.MessageQueueException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">一个 <see cref="T:System.Runtime.Serialization.SerializationInfo" />，它保存与 <see cref="T:System.Messaging.MessageQueueException" /> 关联的序列化数据。</param>
        <param name="context">一个 <see cref="T:System.Runtime.Serialization.StreamingContext" />，它包含与 <see cref="T:System.Messaging.MessageQueueException" /> 关联的序列化流的源和目标。</param>
        <summary>用序列化数据初始化 <see cref="T:System.Messaging.MessageQueueException" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="messageQueueException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">一个 <see cref="T:System.Runtime.Serialization.SerializationInfo" />，它保存与 <see cref="T:System.Messaging.MessageQueueException" /> 关联的序列化数据。</param>
        <param name="context">一个 <see cref="T:System.Runtime.Serialization.StreamingContext" />，它包含与 <see cref="T:System.Messaging.MessageQueueException" /> 关联的序列化流的源和目标。</param>
        <summary>使用序列化 <see cref="T:System.Messaging.MessageQueueException" /> 时所需的数据填充序列化信息对象。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="info" /> 参数为 <see langword="null" />。</exception>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public override string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueException.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.Messaging.MessageQueueException.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取描述消息队列错误的值。</summary>
        <value>生成此 <see cref="T:System.Messaging.MessageQueueException" /> 的消息队列内部错误的说明。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法时获取此属性，请尝试检索与关联的文本字符串<xref:System.Messaging.MessageQueueException.MessageQueueErrorCode%2A>属性。 如果该方法无法解释消息队列生成的错误代码<xref:System.Messaging.MessageQueueException.Message%2A>属性获取的值`UnknownError`。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.MessageQueueException.MessageQueueErrorCode" />
      </Docs>
    </Member>
    <Member MemberName="MessageQueueErrorCode">
      <MemberSignature Language="C#" Value="public System.Messaging.MessageQueueErrorCode MessageQueueErrorCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.MessageQueueErrorCode MessageQueueErrorCode" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueException.MessageQueueErrorCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MessageQueueErrorCode As MessageQueueErrorCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::MessageQueueErrorCode MessageQueueErrorCode { System::Messaging::MessageQueueErrorCode get(); };" />
      <MemberSignature Language="F#" Value="member this.MessageQueueErrorCode : System.Messaging.MessageQueueErrorCode" Usage="System.Messaging.MessageQueueException.MessageQueueErrorCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueErrorCode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示与此异常关联的错误代码。</summary>
        <value>一个 <see cref="T:System.Messaging.MessageQueueErrorCode" />，它标识生成的错误信息队列的类型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.MessageQueueException.Message%2A>属性包含与此相关联的字符串<xref:System.Messaging.MessageQueueException.MessageQueueErrorCode%2A>的更详细地描述错误的源。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.MessageQueueErrorCode" />
        <altmember cref="P:System.Messaging.MessageQueueException.Message" />
      </Docs>
    </Member>
  </Members>
</Type>