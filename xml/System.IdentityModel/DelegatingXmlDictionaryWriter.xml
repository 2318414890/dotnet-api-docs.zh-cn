<Type Name="DelegatingXmlDictionaryWriter" FullName="System.IdentityModel.DelegatingXmlDictionaryWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7d1a54218c81dc24439a73bf89dbf4d2a8274180" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30419271" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DelegatingXmlDictionaryWriter : System.Xml.XmlDictionaryWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DelegatingXmlDictionaryWriter extends System.Xml.XmlDictionaryWriter" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.DelegatingXmlDictionaryWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class DelegatingXmlDictionaryWriter&#xA;Inherits XmlDictionaryWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DelegatingXmlDictionaryWriter : System::Xml::XmlDictionaryWriter" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlDictionaryWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="4ab9e-101">包装一个指定的编写器和向该包装后的编写器委托所有 <see cref="T:System.Xml.XmlDictionaryWriter" /> 调用的类。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4ab9e-101">A class that wraps a specified writer and delegates all <see cref="T:System.Xml.XmlDictionaryWriter" /> calls to the wrapped writer.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ab9e-102">可以通过访问包装的编写器<xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InnerWriter%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="4ab9e-102">The writer that is wrapped can be accessed through the <xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InnerWriter%2A> property.</span></span> <span data-ttu-id="4ab9e-103">调用<xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeInnerWriter%2A>方法以设置已包装的编写器并初始化属性。</span><span class="sxs-lookup"><span data-stu-id="4ab9e-103">Call the <xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeInnerWriter%2A> method to set the wrapped writer and initialize the property.</span></span> <span data-ttu-id="4ab9e-104">你可以调用<xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeTracingWriter%2A>方法以设置<xref:System.Xml.XmlWriter>将回显到的不规范的 XML。</span><span class="sxs-lookup"><span data-stu-id="4ab9e-104">You can call the <xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeTracingWriter%2A> method to set an <xref:System.Xml.XmlWriter> to which non-canonical XML will be echoed.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DelegatingXmlDictionaryWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.DelegatingXmlDictionaryWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DelegatingXmlDictionaryWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ab9e-105">初始化 <see cref="T:System.IdentityModel.DelegatingXmlDictionaryWriter" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-105">Initializes a new instance of the <see cref="T:System.IdentityModel.DelegatingXmlDictionaryWriter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCanonicalize">
      <MemberSignature Language="C#" Value="public override bool CanCanonicalize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanCanonicalize" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.DelegatingXmlDictionaryWriter.CanCanonicalize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanCanonicalize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanCanonicalize { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ab9e-106">返回指示读取器是否能够规范化的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-106">Returns a value indicating if the reader is capable of Canonicalization.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ab9e-107">如果可以规范读取器，则为 true；否则为 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-107">true if the reader is capable of Canonicalization; otherwise, false.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.DelegatingXmlDictionaryWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ab9e-108">关闭基础流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-108">Closes the underlying stream.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCanonicalization">
      <MemberSignature Language="C#" Value="public override void EndCanonicalization ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndCanonicalization() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.DelegatingXmlDictionaryWriter.EndCanonicalization" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndCanonicalization ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndCanonicalization();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ab9e-109">停止由匹配 <see cref="M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])" /> 调用启动的规范化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-109">Stops the canonicalization started by the matching <see cref="M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])" /> call.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.DelegatingXmlDictionaryWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ab9e-110">刷新基础流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-110">Flushes the underlying stream.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeInnerWriter">
      <MemberSignature Language="C#" Value="protected void InitializeInnerWriter (System.Xml.XmlDictionaryWriter innerWriter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InitializeInnerWriter(class System.Xml.XmlDictionaryWriter innerWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeInnerWriter(System.Xml.XmlDictionaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InitializeInnerWriter (innerWriter As XmlDictionaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InitializeInnerWriter(System::Xml::XmlDictionaryWriter ^ innerWriter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="innerWriter" Type="System.Xml.XmlDictionaryWriter" />
      </Parameters>
      <Docs>
        <param name="innerWriter">
          <span data-ttu-id="4ab9e-111">被实例包装的编写器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-111">The writer that is to be wrapped by this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ab9e-112">用指定的内部编辑器初始化此实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-112">Initializes this instance with the specified inner writer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ab9e-113">集<xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InnerWriter%2A>属性写入指定的编写器`innerWriter`参数。</span><span class="sxs-lookup"><span data-stu-id="4ab9e-113">Sets the <xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InnerWriter%2A> property to the writer specified by the `innerWriter` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeTracingWriter">
      <MemberSignature Language="C#" Value="protected void InitializeTracingWriter (System.Xml.XmlWriter tracingWriter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InitializeTracingWriter(class System.Xml.XmlWriter tracingWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeTracingWriter(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InitializeTracingWriter (tracingWriter As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InitializeTracingWriter(System::Xml::XmlWriter ^ tracingWriter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tracingWriter" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="tracingWriter">
          <span data-ttu-id="4ab9e-114">编写器将回显所有调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-114">A writer to which all calls will be echoed.</span>
          </span>
          <span data-ttu-id="4ab9e-115">如果为 <see langword="null" />，则将不回显调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-115">If <see langword="null" />, calls are not echoed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ab9e-116">用所有调用将回显和将写入非规范化 XML 的编辑器初始化此实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-116">Initializes this instance with a writer to which all calls will be echoed and that will write non-canonical XML.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerWriter">
      <MemberSignature Language="C#" Value="protected System.Xml.XmlDictionaryWriter InnerWriter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDictionaryWriter InnerWriter" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.DelegatingXmlDictionaryWriter.InnerWriter" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InnerWriter As XmlDictionaryWriter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Xml::XmlDictionaryWriter ^ InnerWriter { System::Xml::XmlDictionaryWriter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ab9e-117">获取包装的编写器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-117">Get the wrapped writer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ab9e-118">返回 <see cref="T:System.Xml.XmlDictionaryWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-118">Returns a <see cref="T:System.Xml.XmlDictionaryWriter" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupPrefix">
      <MemberSignature Language="C#" Value="public override string LookupPrefix (string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string LookupPrefix(string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.DelegatingXmlDictionaryWriter.LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LookupPrefix (ns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ LookupPrefix(System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns">
          <span data-ttu-id="4ab9e-119">要查找其前缀的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-119">The namespace URI whose prefix you want to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ab9e-120">返回在当前命名空间范围中为该命名空间 URI 定义的最近的前缀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-120">Returns the closest prefix defined in the current namespace scope for the namespace URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ab9e-121">匹配的前缀或为 Null（如果当前范围内未找到匹配的命名空间 URI）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-121">The matching prefix or null if no matching namespace URI is found in the current scope.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCanonicalization">
      <MemberSignature Language="C#" Value="public override void StartCanonicalization (System.IO.Stream stream, bool includeComments, string[] inclusivePrefixes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void StartCanonicalization(class System.IO.Stream stream, bool includeComments, string[] inclusivePrefixes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.DelegatingXmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void StartCanonicalization(System::IO::Stream ^ stream, bool includeComments, cli::array &lt;System::String ^&gt; ^ inclusivePrefixes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="includeComments" Type="System.Boolean" />
        <Parameter Name="inclusivePrefixes" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="4ab9e-122">应写入规范流的流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-122">Stream to which the canonical stream should be written.</span>
          </span>
        </param>
        <param name="includeComments">
          <span data-ttu-id="4ab9e-123">该值表示是否还应规范化写入的注释。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-123">The value indicates if comments written should be canonicalized as well.</span>
          </span>
        </param>
        <param name="inclusivePrefixes">
          <span data-ttu-id="4ab9e-124">需要包含到规范流的前缀集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-124">Set of prefixes that needs to be included into the canonical stream.</span>
          </span>
          <span data-ttu-id="4ab9e-125">在写入规范流的第一个元素中定义前缀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-125">The prefixes are defined at the first element that is written to the canonical stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ab9e-126">表示规范化的启动。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-126">Indicates the start of canonicalization.</span>
          </span>
          <span data-ttu-id="4ab9e-127">遵循此规范的任何写入操作将规范化数据，并写入指定流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-127">Any write operation following this will canonicalize the data          and will write it to the given stream.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64">
      <MemberSignature Language="C#" Value="public override void WriteBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBase64 (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="4ab9e-128">要进行编码的字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-128">Byte array to encode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4ab9e-129">缓冲区中指示要写入字节的起始位置的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-129">The position in the buffer indicating the start of the bytes to write.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="4ab9e-130">要写入的字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-130">The number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ab9e-131">将指定的二进制字节编码为 Base64 并写出结果文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-131">Encodes the specified binary bytes as Base64 and writes out the resulting text.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteCData">
      <MemberSignature Language="C#" Value="public override void WriteCData (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteCData(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteCData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteCData (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteCData(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="4ab9e-132">要放置在 CDATA 块中的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-132">The text to place inside the CDATA block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ab9e-133">写入包含指定文本的 CDATA 块。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-133">writes out a CDATA block containing the specified text.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteCharEntity">
      <MemberSignature Language="C#" Value="public override void WriteCharEntity (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteCharEntity(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteCharEntity(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteCharEntity (ch As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteCharEntity(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">
          <span data-ttu-id="4ab9e-134">为其生成字符实体的 Unicode 字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-134">The Unicode character for which to generate a character entity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ab9e-135">为指定的 Unicode 字符值强制生成字符实体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-135">Forces the generation of a character entity for the specified Unicode character value.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteChars">
      <MemberSignature Language="C#" Value="public override void WriteChars (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteChars(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteChars(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteChars (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteChars(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="4ab9e-136">包含要写入的文本的字符数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-136">Character array containing the text to write.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4ab9e-137">缓冲区中指示要写入文本的起始位置的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-137">The position in the buffer indicating the start of the text to write.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="4ab9e-138">要写入的字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-138">The number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ab9e-139">当在派生类中被重写时，以每次一个缓冲区的方式写入文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-139">When overridden in a derived class, writes text one buffer at a time.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteComment">
      <MemberSignature Language="C#" Value="public override void WriteComment (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteComment(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteComment(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteComment (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteComment(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="4ab9e-140">要放在注释内的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-140">Text to place inside the comment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ab9e-141">写出包含指定文本的注释。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-141">Writes out a comment containing the specified text.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteDocType">
      <MemberSignature Language="C#" Value="public override void WriteDocType (string name, string pubid, string sysid, string subset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteDocType(string name, string pubid, string sysid, string subset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteDocType(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteDocType (name As String, pubid As String, sysid As String, subset As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteDocType(System::String ^ name, System::String ^ pubid, System::String ^ sysid, System::String ^ subset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="pubid" Type="System.String" />
        <Parameter Name="sysid" Type="System.String" />
        <Parameter Name="subset" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="4ab9e-142">DOCTYPE 的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-142">The name of the DOCTYPE.</span>
          </span>
          <span data-ttu-id="4ab9e-143">它必须是非空的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-143">This must be non-empty.</span>
          </span>
        </param>
        <param name="pubid">
          <span data-ttu-id="4ab9e-144">如果非 null，则它还写入 PUBLIC "pubid" "sysid"，这里的 pubid 和 sysid 用给定参数的值替换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-144">If non-null it also writes PUBLIC "pubid" "sysid" where pubid and sysid are replaced with the value of the given arguments.</span>
          </span>
        </param>
        <param name="sysid">
          <span data-ttu-id="4ab9e-145">如果 pubid 为 null 而 sysid 非 null，则它编写 SYSTEM "sysid"，这里的 sysid 用此参数的值替换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-145">If pubid is null and sysid is non-null it writes SYSTEM "sysid" where sysid is replaced with the value of this argument.</span>
          </span>
        </param>
        <param name="subset">
          <span data-ttu-id="4ab9e-146">如果非 null，则它写入 [subset]，其中 subset 替换为此自变量的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-146">If non-null it writes [subset] where subset is replaced with the value of this argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ab9e-147">写出具有指定名称和可选属性的 DOCTYPE 声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-147">Writes the DOCTYPE declaration with the specified name and optional attributes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndAttribute">
      <MemberSignature Language="C#" Value="public override void WriteEndAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteEndAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndAttribute ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndAttribute();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ab9e-148">关闭先前的 System.Xml.XmlWriter.WriteStartAttribute（System.String、System.String）调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-148">Closes the previous System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String) call.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocument">
      <MemberSignature Language="C#" Value="public override void WriteEndDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteEndDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndDocument();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ab9e-149">关闭任何打开的元素或特性并将写入器重新设置为起始状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-149">Closes any open elements or attributes and puts the writer back in the Start state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndElement">
      <MemberSignature Language="C#" Value="public override void WriteEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndElement();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ab9e-150">关闭一个元素并弹出相应的命名空间范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-150">Closes one element and pops the corresponding namespace scope.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEntityRef">
      <MemberSignature Language="C#" Value="public override void WriteEntityRef (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEntityRef(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteEntityRef(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEntityRef (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEntityRef(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="4ab9e-151">实体引用的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-151">The name of the entity reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ab9e-152">按名称写出实体引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-152">Writes out an entity reference as name.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteFullEndElement">
      <MemberSignature Language="C#" Value="public override void WriteFullEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteFullEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteFullEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteFullEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteFullEndElement();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ab9e-153">关闭一个元素并弹出相应的命名空间范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-153">Closes one element and pops the corresponding namespace scope.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteProcessingInstruction">
      <MemberSignature Language="C#" Value="public override void WriteProcessingInstruction (string name, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteProcessingInstruction(string name, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteProcessingInstruction(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteProcessingInstruction (name As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteProcessingInstruction(System::String ^ name, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="4ab9e-154">处理指令的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-154">The name of the processing instruction.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="4ab9e-155">要包括在处理指令中的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-155">The text to include in the processing instruction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ab9e-156">写出在名称和文本之间有空格的处理指令，如下所示：&amp;lt;?name text?&amp;gt;。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-156">Writes out a processing instruction with a space between the name and text as follows: &amp;lt;?name text?&amp;gt;.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public override void WriteRaw (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteRaw(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteRaw(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteRaw (data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteRaw(System::String ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="4ab9e-157">包含要写入的文本的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-157">String containing the text to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ab9e-158">从字符串手动写入原始标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-158">Writes raw markup manually from a string.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public override void WriteRaw (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteRaw(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteRaw(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteRaw (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteRaw(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="4ab9e-159">包含要写入的文本的字符数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-159">Character array containing the text to write.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="4ab9e-160">缓冲区中的位置，指示要写入文本的起始位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-160">The position within the buffer indicating the start of the text to write.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="4ab9e-161">要写入的字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-161">The number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ab9e-162">当在派生类中被重写时，从字符缓冲区手动写入原始标记。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-162">When overridden in a derived class, writes raw markup manually from a character buffer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public override void WriteStartAttribute (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartAttribute(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartAttribute (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartAttribute(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="4ab9e-163">属性的命名空间前缀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-163">The namespace prefix of the attribute.</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="4ab9e-164">属性的本地名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-164">The local name of the attribute.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="4ab9e-165">属性的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-165">The namespace URI for the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ab9e-166">写入具有指定本地名称和命名空间 URI 的属性的开头。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-166">Writes the start of an attribute with the specified local name and namespace URI.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public override void WriteStartDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartDocument();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ab9e-167">当在派生类中被重写时，写入版本为“1.0”的 XML 声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-167">When overridden in a derived class, writes the XML declaration with the version "1.0".</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public override void WriteStartDocument (bool standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartDocument(bool standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartDocument(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartDocument (standalone As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartDocument(bool standalone);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standalone" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="standalone">
          <span data-ttu-id="4ab9e-168">如果为 True，则它将写入"standalone=yes"；如果为 False，则它将写入 "standalone=no"。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-168">If true, it writes "standalone=yes"; if false, it writes "standalone=no".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ab9e-169">当在派生类中被重写时，写入版本为“1.0”的 XML 声明和独立的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-169">When overridden in a derived class, writes the XML declaration with the version "1.0" and the standalone attribute.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public override void WriteStartElement (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartElement(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartElement(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartElement (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartElement(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="4ab9e-170">元素的命名空间前缀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-170">The namespace prefix of the element.</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="4ab9e-171">元素的本地名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-171">The local name of the element.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="4ab9e-172">与元素关联的命名空间 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-172">The namespace URI to associate with the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ab9e-173">当在派生类中被重写时，写入指定的开始标记并将其与给定的命名空间和前缀关联起来。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-173">When overridden in a derived class, writes the specified start tag and associates it with the given namespace and prefix.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteState">
      <MemberSignature Language="C#" Value="public override System.Xml.WriteState WriteState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.WriteState WriteState" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property WriteState As WriteState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::WriteState WriteState { System::Xml::WriteState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.WriteState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ab9e-174">当在派生类中被重写时，获取写入器的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-174">When overridden in a derived class, gets the state of the writer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ab9e-175">返回 <see cref="T:System.Xml.WriteState" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-175">Returns an <see cref="T:System.Xml.WriteState" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public override void WriteString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteString (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteString(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="4ab9e-176">要写入的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-176">The text to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ab9e-177">写入给定的文本内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-177">Writes the given text content.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteSurrogateCharEntity">
      <MemberSignature Language="C#" Value="public override void WriteSurrogateCharEntity (char lowChar, char highChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteSurrogateCharEntity(char lowChar, char highChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteSurrogateCharEntity(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteSurrogateCharEntity (lowChar As Char, highChar As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteSurrogateCharEntity(char lowChar, char highChar);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowChar" Type="System.Char" />
        <Parameter Name="highChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="lowChar">
          <span data-ttu-id="4ab9e-178">低代理项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-178">The low surrogate.</span>
          </span>
          <span data-ttu-id="4ab9e-179">它必须是介于 0xDC00 和 0xDFFF 之间的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-179">This must be a value between 0xDC00 and 0xDFFF.</span>
          </span>
        </param>
        <param name="highChar">
          <span data-ttu-id="4ab9e-180">高代理项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-180">The high surrogate.</span>
          </span>
          <span data-ttu-id="4ab9e-181">它必须是介于 0xD800 和 0xDBFF 之间的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-181">This must be a value between 0xD800 and 0xDBFF.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ab9e-182">为代理项字符对生成并写入代理项字符实体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-182">Generates and writes the surrogate character entity for the surrogate character pair.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteWhitespace">
      <MemberSignature Language="C#" Value="public override void WriteWhitespace (string ws);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteWhitespace(string ws) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteWhitespace (ws As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteWhitespace(System::String ^ ws);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ws" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ws">
          <span data-ttu-id="4ab9e-183">空格字符的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-183">The string of white space characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ab9e-184">写出给定的空白区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-184">Writes out the given white space.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlAttribute">
      <MemberSignature Language="C#" Value="public override void WriteXmlAttribute (string localName, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteXmlAttribute(string localName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteXmlAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteXmlAttribute (localName As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteXmlAttribute(System::String ^ localName, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="4ab9e-185">属性的本地名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-185">Localname of the attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4ab9e-186">特性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-186">Attribute value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ab9e-187">以带有前缀“xml:”的 xml 特性写入特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-187">Writes an attribute as a xml attribute with the prefix 'xml:'.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlnsAttribute">
      <MemberSignature Language="C#" Value="public override void WriteXmlnsAttribute (string prefix, string namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteXmlnsAttribute(string prefix, string namespaceUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteXmlnsAttribute (prefix As String, namespaceUri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteXmlnsAttribute(System::String ^ prefix, System::String ^ namespaceUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="4ab9e-188">命名空间声明的前缀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-188">The prefix of the namespace declaration.</span>
          </span>
        </param>
        <param name="namespaceUri">
          <span data-ttu-id="4ab9e-189">命名空间 URI 自身。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-189">The namespace Uri itself.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ab9e-190">写入 xmlns 命名空间声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab9e-190">Writes an xmlns namespace declaration.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>