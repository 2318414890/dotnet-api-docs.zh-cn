<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DelegatingXmlDictionaryWriter.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57d1a54218c81dc24439a73bf89dbf4d2a8274180.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7d1a54218c81dc24439a73bf89dbf4d2a8274180</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.DelegatingXmlDictionaryWriter">
          <source>A class that wraps a specified writer and delegates all <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> calls to the wrapped writer.</source>
          <target state="translated">包装一个指定的编写器和向该包装后的编写器委托所有 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> 调用的类。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.DelegatingXmlDictionaryWriter">
          <source>The writer that is wrapped can be accessed through the <ph id="ph1">&lt;xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InnerWriter%2A&gt;</ph> property.</source>
          <target state="translated">可以通过访问包装的编写器<ph id="ph1">&lt;xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InnerWriter%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.DelegatingXmlDictionaryWriter">
          <source>Call the <ph id="ph1">&lt;xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeInnerWriter%2A&gt;</ph> method to set the wrapped writer and initialize the property.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeInnerWriter%2A&gt;</ph>方法以设置已包装的编写器并初始化属性。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.DelegatingXmlDictionaryWriter">
          <source>You can call the <ph id="ph1">&lt;xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeTracingWriter%2A&gt;</ph> method to set an <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph> to which non-canonical XML will be echoed.</source>
          <target state="translated">你可以调用<ph id="ph1">&lt;xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeTracingWriter%2A&gt;</ph>方法以设置<ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>将回显到的不规范的 XML。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.DelegatingXmlDictionaryWriter" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.IdentityModel.DelegatingXmlDictionaryWriter" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.DelegatingXmlDictionaryWriter.CanCanonicalize">
          <source>Returns a value indicating if the reader is capable of Canonicalization.</source>
          <target state="translated">返回指示读取器是否能够规范化的值。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.DelegatingXmlDictionaryWriter.CanCanonicalize">
          <source>true if the reader is capable of Canonicalization; otherwise, false.</source>
          <target state="translated">如果可以规范读取器，则为 true；否则为 false。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.Close">
          <source>Closes the underlying stream.</source>
          <target state="translated">关闭基础流。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.EndCanonicalization">
          <source>Stops the canonicalization started by the matching <ph id="ph1">&lt;see cref="M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])" /&gt;</ph> call.</source>
          <target state="translated">停止由匹配 <ph id="ph1">&lt;see cref="M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])" /&gt;</ph> 调用启动的规范化。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.Flush">
          <source>Flushes the underlying stream.</source>
          <target state="translated">刷新基础流。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeInnerWriter(System.Xml.XmlDictionaryWriter)">
          <source>The writer that is to be wrapped by this instance.</source>
          <target state="translated">被实例包装的编写器。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeInnerWriter(System.Xml.XmlDictionaryWriter)">
          <source>Initializes this instance with the specified inner writer.</source>
          <target state="translated">用指定的内部编辑器初始化此实例。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeInnerWriter(System.Xml.XmlDictionaryWriter)">
          <source>Sets the <ph id="ph1">&lt;xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InnerWriter%2A&gt;</ph> property to the writer specified by the <ph id="ph2">`innerWriter`</ph> parameter.</source>
          <target state="translated">集<ph id="ph1">&lt;xref:System.IdentityModel.DelegatingXmlDictionaryWriter.InnerWriter%2A&gt;</ph>属性写入指定的编写器<ph id="ph2">`innerWriter`</ph>参数。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeTracingWriter(System.Xml.XmlWriter)">
          <source>A writer to which all calls will be echoed.</source>
          <target state="translated">编写器将回显所有调用。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeTracingWriter(System.Xml.XmlWriter)">
          <source>If <ph id="ph1">&lt;see langword="null" /&gt;</ph>, calls are not echoed.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，则将不回显调用。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.InitializeTracingWriter(System.Xml.XmlWriter)">
          <source>Initializes this instance with a writer to which all calls will be echoed and that will write non-canonical XML.</source>
          <target state="translated">用所有调用将回显和将写入非规范化 XML 的编辑器初始化此实例。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.DelegatingXmlDictionaryWriter.InnerWriter">
          <source>Get the wrapped writer.</source>
          <target state="translated">获取包装的编写器。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.DelegatingXmlDictionaryWriter.InnerWriter">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>.</source>
          <target state="translated">返回 <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.LookupPrefix(System.String)">
          <source>The namespace URI whose prefix you want to find.</source>
          <target state="translated">要查找其前缀的命名空间 URI。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.LookupPrefix(System.String)">
          <source>Returns the closest prefix defined in the current namespace scope for the namespace URI.</source>
          <target state="translated">返回在当前命名空间范围中为该命名空间 URI 定义的最近的前缀。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.LookupPrefix(System.String)">
          <source>The matching prefix or null if no matching namespace URI is found in the current scope.</source>
          <target state="translated">匹配的前缀或为 Null（如果当前范围内未找到匹配的命名空间 URI）。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
          <source>Stream to which the canonical stream should be written.</source>
          <target state="translated">应写入规范流的流。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
          <source>The value indicates if comments written should be canonicalized as well.</source>
          <target state="translated">该值表示是否还应规范化写入的注释。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
          <source>Set of prefixes that needs to be included into the canonical stream.</source>
          <target state="translated">需要包含到规范流的前缀集。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
          <source>The prefixes are defined at the first element that is written to the canonical stream.</source>
          <target state="translated">在写入规范流的第一个元素中定义前缀。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
          <source>Indicates the start of canonicalization.</source>
          <target state="translated">表示规范化的启动。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
          <source>Any write operation following this will canonicalize the data          and will write it to the given stream.</source>
          <target state="translated">遵循此规范的任何写入操作将规范化数据，并写入指定流。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>Byte array to encode.</source>
          <target state="translated">要进行编码的字节数组。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The position in the buffer indicating the start of the bytes to write.</source>
          <target state="translated">缓冲区中指示要写入字节的起始位置的位置。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to write.</source>
          <target state="translated">要写入的字节数。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <source>Encodes the specified binary bytes as Base64 and writes out the resulting text.</source>
          <target state="translated">将指定的二进制字节编码为 Base64 并写出结果文本。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteCData(System.String)">
          <source>The text to place inside the CDATA block.</source>
          <target state="translated">要放置在 CDATA 块中的文本。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteCData(System.String)">
          <source>writes out a CDATA block containing the specified text.</source>
          <target state="translated">写入包含指定文本的 CDATA 块。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteCharEntity(System.Char)">
          <source>The Unicode character for which to generate a character entity.</source>
          <target state="translated">为其生成字符实体的 Unicode 字符。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteCharEntity(System.Char)">
          <source>Forces the generation of a character entity for the specified Unicode character value.</source>
          <target state="translated">为指定的 Unicode 字符值强制生成字符实体。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>Character array containing the text to write.</source>
          <target state="translated">包含要写入的文本的字符数组。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>The position in the buffer indicating the start of the text to write.</source>
          <target state="translated">缓冲区中指示要写入文本的起始位置的位置。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write.</source>
          <target state="translated">要写入的字符数。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <source>When overridden in a derived class, writes text one buffer at a time.</source>
          <target state="translated">当在派生类中被重写时，以每次一个缓冲区的方式写入文本。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteComment(System.String)">
          <source>Text to place inside the comment.</source>
          <target state="translated">要放在注释内的文本。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteComment(System.String)">
          <source>Writes out a comment containing the specified text.</source>
          <target state="translated">写出包含指定文本的注释。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>The name of the DOCTYPE.</source>
          <target state="translated">DOCTYPE 的名称。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>This must be non-empty.</source>
          <target state="translated">它必须是非空的。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>If non-null it also writes PUBLIC "pubid" "sysid" where pubid and sysid are replaced with the value of the given arguments.</source>
          <target state="translated">如果非 null，则它还写入 PUBLIC "pubid" "sysid"，这里的 pubid 和 sysid 用给定参数的值替换。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>If pubid is null and sysid is non-null it writes SYSTEM "sysid" where sysid is replaced with the value of this argument.</source>
          <target state="translated">如果 pubid 为 null 而 sysid 非 null，则它编写 SYSTEM "sysid"，这里的 sysid 用此参数的值替换。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>If non-null it writes [subset] where subset is replaced with the value of this argument.</source>
          <target state="translated">如果非 null，则它写入 [subset]，其中 subset 替换为此自变量的值。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <source>Writes the DOCTYPE declaration with the specified name and optional attributes.</source>
          <target state="translated">写出具有指定名称和可选属性的 DOCTYPE 声明。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteEndAttribute">
          <source>Closes the previous System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String) call.</source>
          <target state="translated">关闭先前的 System.Xml.XmlWriter.WriteStartAttribute（System.String、System.String）调用。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteEndDocument">
          <source>Closes any open elements or attributes and puts the writer back in the Start state.</source>
          <target state="translated">关闭任何打开的元素或特性并将写入器重新设置为起始状态。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteEndElement">
          <source>Closes one element and pops the corresponding namespace scope.</source>
          <target state="translated">关闭一个元素并弹出相应的命名空间范围。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteEntityRef(System.String)">
          <source>The name of the entity reference.</source>
          <target state="translated">实体引用的名称。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteEntityRef(System.String)">
          <source>Writes out an entity reference as name.</source>
          <target state="translated">按名称写出实体引用。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteFullEndElement">
          <source>Closes one element and pops the corresponding namespace scope.</source>
          <target state="translated">关闭一个元素并弹出相应的命名空间范围。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>The name of the processing instruction.</source>
          <target state="translated">处理指令的名称。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>The text to include in the processing instruction.</source>
          <target state="translated">要包括在处理指令中的文本。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteProcessingInstruction(System.String,System.String)">
          <source>Writes out a processing instruction with a space between the name and text as follows: <ph id="ph1">&amp;amp;</ph>lt;?name text?<ph id="ph2">&amp;amp;</ph>gt;.</source>
          <target state="translated">写出在名称和文本之间有空格的处理指令，如下所示：<ph id="ph1">&amp;amp;</ph>lt;?name text?<ph id="ph2">&amp;amp;</ph>gt;。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteRaw(System.String)">
          <source>String containing the text to write.</source>
          <target state="translated">包含要写入的文本的字符串。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteRaw(System.String)">
          <source>Writes raw markup manually from a string.</source>
          <target state="translated">从字符串手动写入原始标记。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>Character array containing the text to write.</source>
          <target state="translated">包含要写入的文本的字符数组。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>The position within the buffer indicating the start of the text to write.</source>
          <target state="translated">缓冲区中的位置，指示要写入文本的起始位置。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write.</source>
          <target state="translated">要写入的字符数。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <source>When overridden in a derived class, writes raw markup manually from a character buffer.</source>
          <target state="translated">当在派生类中被重写时，从字符缓冲区手动写入原始标记。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>The namespace prefix of the attribute.</source>
          <target state="translated">属性的命名空间前缀。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>The local name of the attribute.</source>
          <target state="translated">属性的本地名称。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>The namespace URI for the attribute.</source>
          <target state="translated">属性的命名空间 URI。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <source>Writes the start of an attribute with the specified local name and namespace URI.</source>
          <target state="translated">写入具有指定本地名称和命名空间 URI 的属性的开头。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartDocument">
          <source>When overridden in a derived class, writes the XML declaration with the version "1.0".</source>
          <target state="translated">当在派生类中被重写时，写入版本为“1.0”的 XML 声明。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartDocument(System.Boolean)">
          <source>If true, it writes "standalone=yes"; if false, it writes "standalone=no".</source>
          <target state="translated">如果为 True，则它将写入"standalone=yes"；如果为 False，则它将写入 "standalone=no"。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartDocument(System.Boolean)">
          <source>When overridden in a derived class, writes the XML declaration with the version "1.0" and the standalone attribute.</source>
          <target state="translated">当在派生类中被重写时，写入版本为“1.0”的 XML 声明和独立的属性。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>The namespace prefix of the element.</source>
          <target state="translated">元素的命名空间前缀。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>The local name of the element.</source>
          <target state="translated">元素的本地名称。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>The namespace URI to associate with the element.</source>
          <target state="translated">与元素关联的命名空间 URI。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteStartElement(System.String,System.String,System.String)">
          <source>When overridden in a derived class, writes the specified start tag and associates it with the given namespace and prefix.</source>
          <target state="translated">当在派生类中被重写时，写入指定的开始标记并将其与给定的命名空间和前缀关联起来。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteState">
          <source>When overridden in a derived class, gets the state of the writer.</source>
          <target state="translated">当在派生类中被重写时，获取写入器的状态。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteState">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Xml.WriteState" /&gt;</ph>.</source>
          <target state="translated">返回 <ph id="ph1">&lt;see cref="T:System.Xml.WriteState" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteString(System.String)">
          <source>The text to write.</source>
          <target state="translated">要写入的文本。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteString(System.String)">
          <source>Writes the given text content.</source>
          <target state="translated">写入给定的文本内容。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>The low surrogate.</source>
          <target state="translated">低代理项。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>This must be a value between 0xDC00 and 0xDFFF.</source>
          <target state="translated">它必须是介于 0xDC00 和 0xDFFF 之间的值。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>The high surrogate.</source>
          <target state="translated">高代理项。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>This must be a value between 0xD800 and 0xDBFF.</source>
          <target state="translated">它必须是介于 0xD800 和 0xDBFF 之间的值。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <source>Generates and writes the surrogate character entity for the surrogate character pair.</source>
          <target state="translated">为代理项字符对生成并写入代理项字符实体。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteWhitespace(System.String)">
          <source>The string of white space characters.</source>
          <target state="translated">空格字符的字符串。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteWhitespace(System.String)">
          <source>Writes out the given white space.</source>
          <target state="translated">写出给定的空白区域。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteXmlAttribute(System.String,System.String)">
          <source>Localname of the attribute.</source>
          <target state="translated">属性的本地名称。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteXmlAttribute(System.String,System.String)">
          <source>Attribute value.</source>
          <target state="translated">特性值。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteXmlAttribute(System.String,System.String)">
          <source>Writes an attribute as a xml attribute with the prefix 'xml:'.</source>
          <target state="translated">以带有前缀“xml:”的 xml 特性写入特性。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.String)">
          <source>The prefix of the namespace declaration.</source>
          <target state="translated">命名空间声明的前缀。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.String)">
          <source>The namespace Uri itself.</source>
          <target state="translated">命名空间 URI 自身。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.DelegatingXmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.String)">
          <source>Writes an xmlns namespace declaration.</source>
          <target state="translated">写入 xmlns 命名空间声明。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>