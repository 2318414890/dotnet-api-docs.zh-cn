<Type Name="SecurityTokenService" FullName="System.IdentityModel.SecurityTokenService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b5c8d93b898d628b70967d33278c8cd9f33a66bf" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36479603" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SecurityTokenService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityTokenService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.SecurityTokenService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityTokenService" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityTokenService abstract" />
  <TypeSignature Language="F#" Value="type SecurityTokenService = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c82c4-101">The abstract base class that defines the properties and methods of a security token service (STS).</span>
      <span class="sxs-lookup">
        <span data-stu-id="c82c4-101">The abstract base class that defines the properties and methods of a security token service (STS).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c82c4-102">若要创建的 STS 必须派生自<xref:System.IdentityModel.SecurityTokenService>类。</span><span class="sxs-lookup"><span data-stu-id="c82c4-102">To create an STS you must derive from the <xref:System.IdentityModel.SecurityTokenService> class.</span></span> <span data-ttu-id="c82c4-103">在你自定义类必须在最低限度上，重写<xref:System.IdentityModel.SecurityTokenService.GetScope%2A>和<xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c82c4-103">In your custom class you must, at a minimum, override the <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> and <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> methods.</span></span> <span data-ttu-id="c82c4-104">通过这些重写，使用的类中定义的所有其他方法的默认实现创建 STS 是能够颁发安全令牌来响应安全令牌请求 (RST)。</span><span class="sxs-lookup"><span data-stu-id="c82c4-104">With these overrides, the STS created using the default implementation of all the other methods defined in the class is capable of issuing security tokens in response to security token requests (RST).</span></span> <span data-ttu-id="c82c4-105">即，实现 Ws-trust 规范中定义的问题绑定。</span><span class="sxs-lookup"><span data-stu-id="c82c4-105">That is, the Issue binding defined in the WS-Trust specification is implemented.</span></span> <span data-ttu-id="c82c4-106">在中实现此绑定<xref:System.IdentityModel.SecurityTokenService.Issue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c82c4-106">This binding is implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span> <span data-ttu-id="c82c4-107">默认情况下实现的任何其他 WS 信任绑定 （续订、 取消和验证） 和相应的错误返回给调用方，如果遇到 RST 对应的这些绑定之一。</span><span class="sxs-lookup"><span data-stu-id="c82c4-107">None of the other WS-Trust bindings (Renew, Cancel, and Validate) are implemented in the default case and an appropriate fault is returned to the caller if an RST that corresponds to one of these bindings is encountered.</span></span> <span data-ttu-id="c82c4-108">当然，可以重写适当的方法 (<xref:System.IdentityModel.SecurityTokenService.Renew%2A>， <xref:System.IdentityModel.SecurityTokenService.Cancel%2A>，和<xref:System.IdentityModel.SecurityTokenService.Validate%2A>) 在 STS 中实施这些绑定。</span><span class="sxs-lookup"><span data-stu-id="c82c4-108">You can, of course, override the appropriate methods (<xref:System.IdentityModel.SecurityTokenService.Renew%2A>, <xref:System.IdentityModel.SecurityTokenService.Cancel%2A>, and <xref:System.IdentityModel.SecurityTokenService.Validate%2A>) to implement these bindings in your STS.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c82c4-109">实现生产就绪 STS 需要仔细的规划和相当多的资源来缓解潜在的安全风险固有在公开此类服务。</span><span class="sxs-lookup"><span data-stu-id="c82c4-109">Implementing a production-ready STS entails careful planning and considerable resources to mitigate the potential security risks inherent in exposing such a service.</span></span> <span data-ttu-id="c82c4-110">使用 Windows Identity Foundation (WIF) 的大多数开发人员将开发外包到 STS，标识管理的应用程序而不是本身开发 STS。</span><span class="sxs-lookup"><span data-stu-id="c82c4-110">Most developers using Windows Identity Foundation (WIF) will be developing applications that outsource identity management to an STS, rather than developing an STS itself.</span></span> <span data-ttu-id="c82c4-111">WIF 提供了一个 Visual Studio 扩展，标识和访问工具对于 Visual Studio 2012，以帮助开发人员在开发环境中测试解决方案。</span><span class="sxs-lookup"><span data-stu-id="c82c4-111">WIF provides a Visual Studio extension, the Identity and Access Tool for Visual Studio 2012, to help developers test solutions in the development environment.</span></span> <span data-ttu-id="c82c4-112">此工具包含 STS， `LocalSTS`，你可以对其进行配置以提供到你正在开发的应用程序的特定声明。</span><span class="sxs-lookup"><span data-stu-id="c82c4-112">This tool includes an STS, `LocalSTS`, that you can configure to serve specific claims to the application that you are developing.</span></span> <span data-ttu-id="c82c4-113">有关标识和访问工具的详细信息，请参阅[标识和访问工具用于 Visual Studio 2012](~/docs/framework/security/identity-and-access-tool-for-vs.md)。</span><span class="sxs-lookup"><span data-stu-id="c82c4-113">For more information about the Identity and Access tool, see [Identity and Access Tool for Visual Studio 2012](~/docs/framework/security/identity-and-access-tool-for-vs.md).</span></span> <span data-ttu-id="c82c4-114">在某些情况下，`LocalSTS`可能无法提供充分测试你的应用程序所必需的功能; 例如，在涉及的方案中开发应用程序使用的自定义令牌处理程序。</span><span class="sxs-lookup"><span data-stu-id="c82c4-114">In some scenarios, `LocalSTS` may not provide the functionality necessary to adequately test your application; for example, in a scenario that involves developing a custom token handler for use by an application.</span></span> <span data-ttu-id="c82c4-115">在这些情况下，你可以派生自<xref:System.IdentityModel.SecurityTokenService>创建一个或多个简单 Sts，可以在开发环境中部署并可用来在你的应用程序中测试此类功能。</span><span class="sxs-lookup"><span data-stu-id="c82c4-115">In these cases, you can derive from <xref:System.IdentityModel.SecurityTokenService> to create one or more simple STSs that can be deployed in your development environment and that can be used to test such features in your application.</span></span> <span data-ttu-id="c82c4-116">本部分的其余部分侧重于通过公开的方法<xref:System.IdentityModel.SecurityTokenService>可用于实现简单的 STS 和扩展令牌颁发管道的类。</span><span class="sxs-lookup"><span data-stu-id="c82c4-116">The rest of this section focuses on the methods exposed by the <xref:System.IdentityModel.SecurityTokenService> class that enable you to implement a simple STS and extend the token issuance pipeline.</span></span>  
  
 <span data-ttu-id="c82c4-117">以下列表提供最为重要的方法的简要概述向开发人员在测试或开发环境中使用。</span><span class="sxs-lookup"><span data-stu-id="c82c4-117">The following list provides a brief overview of the methods of primary importance to the developer for use in a test or development environment.</span></span>  
  
-   <span data-ttu-id="c82c4-118"><xref:System.IdentityModel.SecurityTokenService.GetScope%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c82c4-118">The <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method.</span></span> <span data-ttu-id="c82c4-119">此方法返回<xref:System.IdentityModel.Scope>包含 RP 有关的信息的对象。</span><span class="sxs-lookup"><span data-stu-id="c82c4-119">This method returns a <xref:System.IdentityModel.Scope> object that contains information about the RP.</span></span> <span data-ttu-id="c82c4-120">此对象使用的令牌发出管道的其余部分中，并包含有关签名和加密凭据以在响应中，使用信息以及`AppliesTo`和`ReplyTo`（如果需要） 地址。</span><span class="sxs-lookup"><span data-stu-id="c82c4-120">This object is used in the rest of the token issuance pipeline and includes information about the signing and encrypting credentials to use in the response, as well as the `AppliesTo` and `ReplyTo` (if required) addresses.</span></span> <span data-ttu-id="c82c4-121">你必须重写此方法。</span><span class="sxs-lookup"><span data-stu-id="c82c4-121">You must override this method.</span></span>  
  
-   <span data-ttu-id="c82c4-122"><xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c82c4-122">The <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> method.</span></span> <span data-ttu-id="c82c4-123">此方法返回<xref:System.Security.Claims.ClaimsIdentity>包含要返回到 RP 的声明的对象。</span><span class="sxs-lookup"><span data-stu-id="c82c4-123">This method returns an <xref:System.Security.Claims.ClaimsIdentity> object that contains the claims to return to the RP.</span></span> <span data-ttu-id="c82c4-124">你必须重写此方法。</span><span class="sxs-lookup"><span data-stu-id="c82c4-124">You must override this method.</span></span>  
  
-   <span data-ttu-id="c82c4-125"><xref:System.IdentityModel.SecurityTokenService.Issue%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c82c4-125">The <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span> <span data-ttu-id="c82c4-126">此方法实现令牌请求管道，后者处理传入安全令牌请求 (RST) 并返回包含一个令牌，可用于使用 RP 进行身份验证调用方的响应 (RSTR)。</span><span class="sxs-lookup"><span data-stu-id="c82c4-126">This method implements the token request pipeline, which processes an incoming security token request (RST) and returns a response (RSTR) to the caller that contains a token that can be used to authenticate with an RP.</span></span> <span data-ttu-id="c82c4-127">其他方法中定义的许多<xref:System.IdentityModel.SecurityTokenService>类调用此方法，包括<xref:System.IdentityModel.SecurityTokenService.GetScope%2A>和<xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c82c4-127">Many of the other methods defined in the <xref:System.IdentityModel.SecurityTokenService> class are called from this method, including the <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> and <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> methods.</span></span> <span data-ttu-id="c82c4-128">无需重写此方法，但它实现令牌请求管道了解可能很有帮助。</span><span class="sxs-lookup"><span data-stu-id="c82c4-128">You do not have to override this method, but an understanding of the token request pipeline it implements may be helpful.</span></span>  
  
 <span data-ttu-id="c82c4-129">通过配置 STS<xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration>类。</span><span class="sxs-lookup"><span data-stu-id="c82c4-129">An STS is configured through the <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c82c4-130">在中使用的代码示例<xref:System.IdentityModel.SecurityTokenService>主题，将从`Custom Token`示例。</span><span class="sxs-lookup"><span data-stu-id="c82c4-130">The code examples that are used in the <xref:System.IdentityModel.SecurityTokenService> topics are taken from the `Custom Token` sample.</span></span> <span data-ttu-id="c82c4-131">此示例提供使处理的简单 Web 令牌 (SWT) 的自定义类，并包括一个实现被动 STS，能够为提供服务的 SWT 令牌。</span><span class="sxs-lookup"><span data-stu-id="c82c4-131">This sample provides custom classes that enable processing of Simple Web Tokens (SWT) and it includes an implementation of a passive STS that is capable of serving an SWT token.</span></span> <span data-ttu-id="c82c4-132">有关如何实现活动 STS 的示例，你可以参阅`Federation Metadata`示例。</span><span class="sxs-lookup"><span data-stu-id="c82c4-132">For an example of how to implement an active STS, you can see the `Federation Metadata` sample.</span></span> <span data-ttu-id="c82c4-133">有关这些示例和信息提供其他示例的 WIF 和有关从哪里下载它们，请参阅[WIF 代码示例索引](~/docs/framework/security/wif-code-sample-index.md)。</span><span class="sxs-lookup"><span data-stu-id="c82c4-133">For information about these samples and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span> <span data-ttu-id="c82c4-134">下面的代码演示被动 STS 的实现使用<xref:System.IdentityModel.SecurityTokenService>类。</span><span class="sxs-lookup"><span data-stu-id="c82c4-134">The following code shows the implementation of a passive STS using the <xref:System.IdentityModel.SecurityTokenService> class.</span></span>  
  
 [!code-csharp[WIFCustomTokenSTS#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#3)]  
  
 <span data-ttu-id="c82c4-135">下面的代码演示如何调用自定义的被动 STS 处理 WS 联合身份验证请求，通过调用<xref:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest%28System.Web.HttpRequest%2CSystem.Security.Claims.ClaimsPrincipal%2CSystem.IdentityModel.SecurityTokenService%2CSystem.Web.HttpResponse%29?displayProperty=nameWithType>方法中的代码后面`default.aspx.cs`文件。</span><span class="sxs-lookup"><span data-stu-id="c82c4-135">The following code shows how to invoke a custom passive STS to process a WS-Federation request by calling the <xref:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest%28System.Web.HttpRequest%2CSystem.Security.Claims.ClaimsPrincipal%2CSystem.IdentityModel.SecurityTokenService%2CSystem.Web.HttpResponse%29?displayProperty=nameWithType> method from the code behind in the `default.aspx.cs` file.</span></span>  
  
 [!code-csharp[WIFCustomTokenSTS#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/default.aspx.cs#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="c82c4-136">
        <para>你必须重写二者<see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />和<see cref="M:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" />方法。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="c82c4-136">
          <para>You must override both the <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" /> and the <see cref="M:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" /> methods.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.IdentityModel.Scope" />
    <altmember cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" />
    <altmember cref="T:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityTokenService (System.IdentityModel.Configuration.SecurityTokenServiceConfiguration securityTokenServiceConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Configuration.SecurityTokenServiceConfiguration securityTokenServiceConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.#ctor(System.IdentityModel.Configuration.SecurityTokenServiceConfiguration)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityTokenService(System::IdentityModel::Configuration::SecurityTokenServiceConfiguration ^ securityTokenServiceConfiguration);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.SecurityTokenService : System.IdentityModel.Configuration.SecurityTokenServiceConfiguration -&gt; System.IdentityModel.SecurityTokenService" Usage="new System.IdentityModel.SecurityTokenService securityTokenServiceConfiguration" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityTokenServiceConfiguration" Type="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" />
      </Parameters>
      <Docs>
        <param name="securityTokenServiceConfiguration">
          <span data-ttu-id="c82c4-137">A <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> that contains the settings for the STS.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-137">A <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> that contains the settings for the STS.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c82c4-138">Called from derived classes to initialize the <see cref="T:System.IdentityModel.SecurityTokenService" /> class using the specified configuration settings.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-138">Called from derived classes to initialize the <see cref="T:System.IdentityModel.SecurityTokenService" /> class using the specified configuration settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c82c4-139">使用此构造函数初始化范围提供程序和令牌颁发者证书。</span><span class="sxs-lookup"><span data-stu-id="c82c4-139">Use this constructor to initialize scope provider and token issuer certificate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c82c4-140">
            <paramref name="securityTokenServiceConfiguration" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-140">
              <paramref name="securityTokenServiceConfiguration" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginCancel">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginCancel (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCancel(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.BeginCancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginCancel (principal As ClaimsPrincipal, request As RequestSecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginCancel(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginCancel : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginCancel : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenService.BeginCancel (principal, request, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="c82c4-141">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-141">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="c82c4-142">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-142">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          </span>
          <span data-ttu-id="c82c4-143">This includes the request message as well as other client related information such as authorization context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-143">This includes the request message as well as other client related information such as authorization context.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="c82c4-144">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous cancel operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-144">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous cancel operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="c82c4-145">An object that contains state information associated with the asynchronous cancel operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-145">An object that contains state information associated with the asynchronous cancel operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c82c4-146">When overridden in a derived class, begins an asynchronous WS-Trust Cancel request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-146">When overridden in a derived class, begins an asynchronous WS-Trust Cancel request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c82c4-147">The <see cref="T:System.IAsyncResult" /> that references the asynchronous cancel operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-147">The <see cref="T:System.IAsyncResult" /> that references the asynchronous cancel operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c82c4-148">此方法的默认实现将引发<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>。</span><span class="sxs-lookup"><span data-stu-id="c82c4-148">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetOutputClaimsIdentity">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginGetOutputClaimsIdentity (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginGetOutputClaimsIdentity(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.IdentityModel.Scope scope, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginGetOutputClaimsIdentity(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, System::IdentityModel::Scope ^ scope, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginGetOutputClaimsIdentity : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Scope * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginGetOutputClaimsIdentity : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Scope * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenService.BeginGetOutputClaimsIdentity (principal, request, scope, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="scope" Type="System.IdentityModel.Scope" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="c82c4-149">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-149">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="c82c4-150">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-150">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          </span>
          <span data-ttu-id="c82c4-151">This includes the request message as well as other client related information such as authorization context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-151">This includes the request message as well as other client related information such as authorization context.</span>
          </span>
        </param>
        <param name="scope">
          <span data-ttu-id="c82c4-152">The <see cref="T:System.IdentityModel.Scope" /> that contains information about the relying party associated with the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-152">The <see cref="T:System.IdentityModel.Scope" /> that contains information about the relying party associated with the request.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="c82c4-153">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-153">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="c82c4-154">An object that contains state information associated with the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-154">An object that contains state information associated with the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c82c4-155">When overridden in a derived class, begins an asynchronous call to the <see cref="M:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-155">When overridden in a derived class, begins an asynchronous call to the <see cref="M:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c82c4-156">The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-156">The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c82c4-157">此方法的默认实现将引发<xref:System.NotImplementedException>。</span><span class="sxs-lookup"><span data-stu-id="c82c4-157">The default implementation of this method throws a <xref:System.NotImplementedException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetScope">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginGetScope (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginGetScope(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BeginGetScope (principal As ClaimsPrincipal, request As RequestSecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginGetScope(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginGetScope : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginGetScope : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenService.BeginGetScope (principal, request, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="c82c4-158">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-158">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="c82c4-159">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-159">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          </span>
          <span data-ttu-id="c82c4-160">This includes the request message as well as other client related information such as authorization context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-160">This includes the request message as well as other client related information such as authorization context.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="c82c4-161">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-161">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="c82c4-162">An object that contains state information associated with the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-162">An object that contains state information associated with the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c82c4-163">When overridden in a derived class, begins an asynchronous call for the <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-163">When overridden in a derived class, begins an asynchronous call for the <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c82c4-164">The <see cref="T:System.IAsyncResult" /> that references the asynchronous cancel operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-164">The <see cref="T:System.IAsyncResult" /> that references the asynchronous cancel operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c82c4-165">此方法的默认实现将引发<xref:System.NotImplementedException>。</span><span class="sxs-lookup"><span data-stu-id="c82c4-165">The default implementation of this method throws a <xref:System.NotImplementedException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginIssue">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginIssue (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginIssue(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.BeginIssue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginIssue (principal As ClaimsPrincipal, request As RequestSecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginIssue(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginIssue : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginIssue : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenService.BeginIssue (principal, request, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="c82c4-166">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-166">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="c82c4-167">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-167">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          </span>
          <span data-ttu-id="c82c4-168">This includes the request message as well as other client related information such as authorization context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-168">This includes the request message as well as other client related information such as authorization context.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="c82c4-169">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous issue operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-169">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous issue operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="c82c4-170">An object that contains state information associated with the asynchronous issue operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-170">An object that contains state information associated with the asynchronous issue operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c82c4-171">When overridden in a derived class, begins an asynchronous WS-Trust Issue request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-171">When overridden in a derived class, begins an asynchronous WS-Trust Issue request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c82c4-172">The <see cref="T:System.IAsyncResult" /> that references the asynchronous issue operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-172">The <see cref="T:System.IAsyncResult" /> that references the asynchronous issue operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c82c4-173">此方法的默认实现将引发<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>。</span><span class="sxs-lookup"><span data-stu-id="c82c4-173">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRenew">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginRenew (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginRenew(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.BeginRenew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginRenew (principal As ClaimsPrincipal, request As RequestSecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginRenew(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginRenew : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginRenew : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenService.BeginRenew (principal, request, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="c82c4-174">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-174">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="c82c4-175">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-175">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          </span>
          <span data-ttu-id="c82c4-176">This includes the request message as well as other client related information such as authorization context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-176">This includes the request message as well as other client related information such as authorization context.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="c82c4-177">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous renew operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-177">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous renew operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="c82c4-178">An object that contains state information associated with the asynchronous renew operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-178">An object that contains state information associated with the asynchronous renew operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c82c4-179">When overridden in a derived class, begins an asynchronous WS-Trust Renew request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-179">When overridden in a derived class, begins an asynchronous WS-Trust Renew request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c82c4-180">The <see cref="T:System.IAsyncResult" /> that references the asynchronous renew operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-180">The <see cref="T:System.IAsyncResult" /> that references the asynchronous renew operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c82c4-181">此方法的默认实现将引发<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>。</span><span class="sxs-lookup"><span data-stu-id="c82c4-181">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginValidate">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginValidate (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginValidate(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.BeginValidate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginValidate (principal As ClaimsPrincipal, request As RequestSecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginValidate(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginValidate : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginValidate : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenService.BeginValidate (principal, request, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="c82c4-182">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-182">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="c82c4-183">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-183">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          </span>
          <span data-ttu-id="c82c4-184">This includes the request message as well as other client related information such as authorization context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-184">This includes the request message as well as other client related information such as authorization context.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="c82c4-185">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous validate operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-185">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous validate operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="c82c4-186">An object that contains state information associated with the asynchronous validate operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-186">An object that contains state information associated with the asynchronous validate operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c82c4-187">When overridden in a derived class, begins an asynchronous WS-Trust Validate request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-187">When overridden in a derived class, begins an asynchronous WS-Trust Validate request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c82c4-188">The <see cref="T:System.IAsyncResult" /> that references the asynchronous validate operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-188">The <see cref="T:System.IAsyncResult" /> that references the asynchronous validate operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c82c4-189">此方法的默认实现将引发<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>。</span><span class="sxs-lookup"><span data-stu-id="c82c4-189">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Cancel (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Cancel(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.Cancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Cancel (principal As ClaimsPrincipal, request As RequestSecurityToken) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ Cancel(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberSignature Language="F#" Value="abstract member Cancel : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.Cancel : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="securityTokenService.Cancel (principal, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="c82c4-190">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-190">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="c82c4-191">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-191">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          </span>
          <span data-ttu-id="c82c4-192">This includes the request message as well as other client related information such as authorization context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-192">This includes the request message as well as other client related information such as authorization context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c82c4-193">When overridden in a derived class, processes a WS-Trust Cancel request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-193">When overridden in a derived class, processes a WS-Trust Cancel request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c82c4-194">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-194">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c82c4-195">此方法的默认实现将引发<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>。</span><span class="sxs-lookup"><span data-stu-id="c82c4-195">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenDescriptor">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityTokenDescriptor CreateSecurityTokenDescriptor (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityTokenDescriptor CreateSecurityTokenDescriptor(class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.IdentityModel.Scope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SecurityTokenDescriptor ^ CreateSecurityTokenDescriptor(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, System::IdentityModel::Scope ^ scope);" />
      <MemberSignature Language="F#" Value="abstract member CreateSecurityTokenDescriptor : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Scope -&gt; System.IdentityModel.Tokens.SecurityTokenDescriptor&#xA;override this.CreateSecurityTokenDescriptor : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Scope -&gt; System.IdentityModel.Tokens.SecurityTokenDescriptor" Usage="securityTokenService.CreateSecurityTokenDescriptor (request, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="scope" Type="System.IdentityModel.Scope" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="c82c4-196">The incoming token request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-196">The incoming token request.</span>
          </span>
        </param>
        <param name="scope">
          <span data-ttu-id="c82c4-197">The <see cref="P:System.IdentityModel.SecurityTokenService.Scope" /> object returned from <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-197">The <see cref="P:System.IdentityModel.SecurityTokenService.Scope" /> object returned from <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c82c4-198">Creates an instance of a <see cref="P:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-198">Creates an instance of a <see cref="P:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c82c4-199">The <see cref="P:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-199">The <see cref="P:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c82c4-200">在后的令牌颁发过程中调用<xref:System.IdentityModel.SecurityTokenService.GetScope%2A>。</span><span class="sxs-lookup"><span data-stu-id="c82c4-200">Invoked during token issuance after <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c82c4-201">
            <paramref name="request" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-201">
              <paramref name="request" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c82c4-202">-or-  <paramref name="scope" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-202">-or-  <paramref name="scope" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndCancel">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndCancel (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndCancel(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.EndCancel(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndCancel (result As IAsyncResult) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ EndCancel(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndCancel : IAsyncResult -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.EndCancel : IAsyncResult -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="securityTokenService.EndCancel result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="c82c4-203">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginCancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-203">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginCancel(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c82c4-204">When overridden in a derived class, completes the asynchronous WS-Trust Cancel request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-204">When overridden in a derived class, completes the asynchronous WS-Trust Cancel request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c82c4-205">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-205">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c82c4-206">此方法的默认实现将引发<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>。</span><span class="sxs-lookup"><span data-stu-id="c82c4-206">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetOutputClaimsIdentity">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Claims.ClaimsIdentity EndGetOutputClaimsIdentity (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.Claims.ClaimsIdentity EndGetOutputClaimsIdentity(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.EndGetOutputClaimsIdentity(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EndGetOutputClaimsIdentity (result As IAsyncResult) As ClaimsIdentity" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::Claims::ClaimsIdentity ^ EndGetOutputClaimsIdentity(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndGetOutputClaimsIdentity : IAsyncResult -&gt; System.Security.Claims.ClaimsIdentity&#xA;override this.EndGetOutputClaimsIdentity : IAsyncResult -&gt; System.Security.Claims.ClaimsIdentity" Usage="securityTokenService.EndGetOutputClaimsIdentity result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="c82c4-207">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-207">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c82c4-208">When overridden in a derived class, completes the asynchronous call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-208">When overridden in a derived class, completes the asynchronous call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c82c4-209">A <see cref="T:System.Security.Claims.ClaimsIdentity" /> that contains the collection of claims that will be placed in the issued security token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-209">A <see cref="T:System.Security.Claims.ClaimsIdentity" /> that contains the collection of claims that will be placed in the issued security token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c82c4-210">此方法的默认实现将引发<xref:System.NotImplementedException>。</span><span class="sxs-lookup"><span data-stu-id="c82c4-210">The default implementation of this method throws a <xref:System.NotImplementedException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetScope">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Scope EndGetScope (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Scope EndGetScope(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.EndGetScope(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EndGetScope (result As IAsyncResult) As Scope" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Scope ^ EndGetScope(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndGetScope : IAsyncResult -&gt; System.IdentityModel.Scope&#xA;override this.EndGetScope : IAsyncResult -&gt; System.IdentityModel.Scope" Usage="securityTokenService.EndGetScope result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Scope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="c82c4-211">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-211">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c82c4-212">When overridden in a derived class, completes the asynchronous call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-212">When overridden in a derived class, completes the asynchronous call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c82c4-213">A <see cref="T:System.IdentityModel.Scope" /> that encapsulates the relying party (RP) information associated with the request (RST) specified in the call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-213">A <see cref="T:System.IdentityModel.Scope" /> that encapsulates the relying party (RP) information associated with the request (RST) specified in the call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginGetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c82c4-214">此方法的默认实现将引发<xref:System.NotImplementedException>。</span><span class="sxs-lookup"><span data-stu-id="c82c4-214">The default implementation of this method throws a <xref:System.NotImplementedException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndIssue">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndIssue (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndIssue(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.EndIssue(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndIssue (result As IAsyncResult) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ EndIssue(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndIssue : IAsyncResult -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.EndIssue : IAsyncResult -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="securityTokenService.EndIssue result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="c82c4-215">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginIssue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-215">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginIssue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c82c4-216">When overridden in a derived class, completes the asynchronous WS-Trust Issue request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-216">When overridden in a derived class, completes the asynchronous WS-Trust Issue request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c82c4-217">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-217">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c82c4-218">此方法的默认实现将引发<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>。</span><span class="sxs-lookup"><span data-stu-id="c82c4-218">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRenew">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndRenew (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndRenew(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.EndRenew(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndRenew (result As IAsyncResult) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ EndRenew(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndRenew : IAsyncResult -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.EndRenew : IAsyncResult -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="securityTokenService.EndRenew result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="c82c4-219">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginRenew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-219">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginRenew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c82c4-220">When overridden in a derived class, completes the asynchronous WS-Trust Renew request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-220">When overridden in a derived class, completes the asynchronous WS-Trust Renew request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c82c4-221">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-221">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c82c4-222">此方法的默认实现将引发<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>。</span><span class="sxs-lookup"><span data-stu-id="c82c4-222">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndValidate">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndValidate (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse EndValidate(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.EndValidate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndValidate (result As IAsyncResult) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ EndValidate(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndValidate : IAsyncResult -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.EndValidate : IAsyncResult -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="securityTokenService.EndValidate result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="c82c4-223">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginValidate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-223">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.IdentityModel.SecurityTokenService.BeginValidate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c82c4-224">When overridden in a derived class, completes the asynchronous WS-Trust Validate request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-224">When overridden in a derived class, completes the asynchronous WS-Trust Validate request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c82c4-225">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-225">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c82c4-226">此方法的默认实现将引发<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>。</span><span class="sxs-lookup"><span data-stu-id="c82c4-226">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIssuerName">
      <MemberSignature Language="C#" Value="protected virtual string GetIssuerName ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetIssuerName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetIssuerName" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetIssuerName () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetIssuerName();" />
      <MemberSignature Language="F#" Value="abstract member GetIssuerName : unit -&gt; string&#xA;override this.GetIssuerName : unit -&gt; string" Usage="securityTokenService.GetIssuerName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c82c4-227">Gets the name of the security token service (STS).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-227">Gets the name of the security token service (STS).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c82c4-228">The issuer name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-228">The issuer name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c82c4-229">从默认的令牌颁发管道实现中调用此方法<xref:System.IdentityModel.SecurityTokenService.Issue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c82c4-229">This method is called from the default token issuance pipeline implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span>  
  
 <span data-ttu-id="c82c4-230">默认实现返回<xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A>从通过访问的配置属性<xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="c82c4-230">The default implementation returns the <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> property from configuration accessed through the <xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetOutputClaimsIdentity">
      <MemberSignature Language="C#" Value="protected abstract System.Security.Claims.ClaimsIdentity GetOutputClaimsIdentity (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.Claims.ClaimsIdentity GetOutputClaimsIdentity(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.IdentityModel.Scope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Security::Claims::ClaimsIdentity ^ GetOutputClaimsIdentity(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, System::IdentityModel::Scope ^ scope);" />
      <MemberSignature Language="F#" Value="abstract member GetOutputClaimsIdentity : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Scope -&gt; System.Security.Claims.ClaimsIdentity" Usage="securityTokenService.GetOutputClaimsIdentity (principal, request, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="scope" Type="System.IdentityModel.Scope" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="c82c4-231">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-231">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="c82c4-232">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-232">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          </span>
          <span data-ttu-id="c82c4-233">This includes the request message as well as other client related information such as authorization context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-233">This includes the request message as well as other client related information such as authorization context.</span>
          </span>
        </param>
        <param name="scope">
          <span data-ttu-id="c82c4-234">The <see cref="T:System.IdentityModel.Scope" /> that contains information about the relying party associated with the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-234">The <see cref="T:System.IdentityModel.Scope" /> that contains information about the relying party associated with the request.</span>
          </span>
          <span data-ttu-id="c82c4-235">This is the <see cref="T:System.IdentityModel.Scope" /> object that was returned by the <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-235">This is the <see cref="T:System.IdentityModel.Scope" /> object that was returned by the <see cref="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c82c4-236">When overridden in a derived class, this method returns a collection of output subjects to be included in the issued token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-236">When overridden in a derived class, this method returns a collection of output subjects to be included in the issued token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c82c4-237">A <see cref="T:System.Security.Claims.ClaimsIdentity" /> that contains the collection of claims that will be placed in the issued security token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-237">A <see cref="T:System.Security.Claims.ClaimsIdentity" /> that contains the collection of claims that will be placed in the issued security token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c82c4-238"><xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A>方法调用从令牌颁发管道，由实现<xref:System.IdentityModel.SecurityTokenService.Issue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c82c4-238">The <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> method is called from the token issuance pipeline, which is implemented by the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span> <span data-ttu-id="c82c4-239">它将返回<xref:System.Security.Claims.ClaimsIdentity>，包含要包含在基于令牌请求者颁发的安全令牌中的声明 (`principal`参数)，传入的 RST (`request`参数)，并且该标记是为其信赖方应 （`scope`参数)。</span><span class="sxs-lookup"><span data-stu-id="c82c4-239">It returns an <xref:System.Security.Claims.ClaimsIdentity> that contains the claims to include in the issued security token based on the requestor of the token (the `principal` parameter), the incoming RST (the `request` parameter), and the relying party for which the token is intended (the `scope` parameter).</span></span> <span data-ttu-id="c82c4-240">此方法中的逻辑主要关心的回答以下问题：</span><span class="sxs-lookup"><span data-stu-id="c82c4-240">The logic in this method is primarily concerned with answering the following questions:</span></span>  
  
-   <span data-ttu-id="c82c4-241">**哪种声明类型应包含在基于所针对的 RP 响应？**</span><span class="sxs-lookup"><span data-stu-id="c82c4-241">**Which claim types should be included in the response based on the RP for which it is intended?**</span></span> <span data-ttu-id="c82c4-242">这通常通过检查决定每个 RP 根据从列表中的所需的每个 RP 的声明类型或基于每个请求<xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Claims%2A>的请求的属性。</span><span class="sxs-lookup"><span data-stu-id="c82c4-242">Typically this is decided on a per-RP basis from lists of claim types required for each RP or on a per-request basis by examining the <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Claims%2A> property of the request.</span></span> <span data-ttu-id="c82c4-243">但是的逻辑和用于确定要在响应中包含的声明的详细信息负责完全实现。</span><span class="sxs-lookup"><span data-stu-id="c82c4-243">However, the logic and details for determining the claims to include in the response is completely up to your implementation.</span></span>  
  
-   <span data-ttu-id="c82c4-244">**哪种声明值应分配到响应中的声明？**</span><span class="sxs-lookup"><span data-stu-id="c82c4-244">**Which claim values should be assigned to the claims in the response?**</span></span> <span data-ttu-id="c82c4-245">对于标识提供程序 (IP STS)，这通常意味着在请求者的使用一个或多个声明<xref:System.Security.Claims.ClaimsPrincipal>(由`principal`参数) 来访问应用商店 （或其他实体） 以返回所需的声明类型的值。</span><span class="sxs-lookup"><span data-stu-id="c82c4-245">For an Identity Provider (IP-STS) this typically means using one or more claims in the requestor’s <xref:System.Security.Claims.ClaimsPrincipal> (provided by the `principal` parameter) to access a store (or other entity) to return values for the required claim types.</span></span> <span data-ttu-id="c82c4-246">对于联合身份验证提供程序 (R STS)，这通常意味着对请求者的传入声明，从而满足请求; 执行某种类型的处理可能对提供者，同时传递其他通过未修改某些声明执行筛选或转换。</span><span class="sxs-lookup"><span data-stu-id="c82c4-246">For a Federation Provider (R-STS) this typically means performing some kind of processing on the requestor’s incoming claims to fulfill the request; perhaps performing filtering or transformation on some claims presented by the requestor, while passing others through unmodified.</span></span> <span data-ttu-id="c82c4-247">当然，如下所示决定要在响应中包含的声明的情况下，在详细信息和如何确定这些声明的值的逻辑负责你的实现。</span><span class="sxs-lookup"><span data-stu-id="c82c4-247">Of course, as in the case of deciding which claims to include in the response, the details and logic of how to determine the values of these claims is up to your implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c82c4-248">本主题中使用的代码示例摘自`Custom Token`示例。</span><span class="sxs-lookup"><span data-stu-id="c82c4-248">The code example that is used in this topic is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="c82c4-249">此示例提供使处理的简单 Web 令牌 (SWT) 的自定义类，并包括一个实现被动 STS，能够为提供服务的 SWT 令牌。</span><span class="sxs-lookup"><span data-stu-id="c82c4-249">This sample provides custom classes that enable processing of Simple Web Tokens (SWT) and it includes an implementation of a passive STS that is capable of serving an SWT token.</span></span> <span data-ttu-id="c82c4-250">有关如何实现活动 STS 的示例，你可以参阅`Federation Metadata`示例。</span><span class="sxs-lookup"><span data-stu-id="c82c4-250">For an example of how to implement an active STS, you can see the `Federation Metadata` sample.</span></span> <span data-ttu-id="c82c4-251">有关这些示例和信息提供其他示例的 WIF 和有关从哪里下载它们，请参阅[WIF 代码示例索引](~/docs/framework/security/wif-code-sample-index.md)。</span><span class="sxs-lookup"><span data-stu-id="c82c4-251">For information about these samples and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span> <span data-ttu-id="c82c4-252">下面的代码演示如何重写<xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A>方法以返回声明的 STS。</span><span class="sxs-lookup"><span data-stu-id="c82c4-252">The following code shows how to override the <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> method to return claims for your STS.</span></span> <span data-ttu-id="c82c4-253">在此示例中，则忽略此请求安全令牌 (RST) 消息和返回的基于用户，在 STS 进行身份验证的声明的集合。</span><span class="sxs-lookup"><span data-stu-id="c82c4-253">In this example, the Request Security Token (RST) message is ignored and a collection of claims based on the user as authenticated at the STS is returned.</span></span>  
  
 [!code-csharp[WIFCustomTokenSTS#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c82c4-254">
            <para>必须实现中重写此方法<see cref="T:System.IdentityModel.SecurityTokenService" />类。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-254">
              <para>You must override this method in your implementation of the <see cref="T:System.IdentityModel.SecurityTokenService" /> class.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IdentityModel.Scope" />
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetProofToken">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.ProofDescriptor GetProofToken (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Scope scope);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.ProofDescriptor GetProofToken(class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.IdentityModel.Scope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetProofToken(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Scope)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::ProofDescriptor ^ GetProofToken(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, System::IdentityModel::Scope ^ scope);" />
      <MemberSignature Language="F#" Value="abstract member GetProofToken : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Scope -&gt; System.IdentityModel.Tokens.ProofDescriptor&#xA;override this.GetProofToken : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Scope -&gt; System.IdentityModel.Tokens.ProofDescriptor" Usage="securityTokenService.GetProofToken (request, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.ProofDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="scope" Type="System.IdentityModel.Scope" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="c82c4-255">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the incoming token request (RST).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-255">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the incoming token request (RST).</span>
          </span>
        </param>
        <param name="scope">
          <span data-ttu-id="c82c4-256">The <see cref="T:System.IdentityModel.Scope" /> instance that encapsulates information about the relying party.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-256">The <see cref="T:System.IdentityModel.Scope" /> instance that encapsulates information about the relying party.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c82c4-257">Gets the proof token to be included in the response (RSTR).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-257">Gets the proof token to be included in the response (RSTR).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c82c4-258">A <see cref="T:System.IdentityModel.Tokens.ProofDescriptor" /> that represents the newly created proof descriptor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-258">A <see cref="T:System.IdentityModel.Tokens.ProofDescriptor" /> that represents the newly created proof descriptor.</span>
          </span>
          <span data-ttu-id="c82c4-259">The proof descriptor can be an asymmetric proof descriptor, a symmetric proof descriptor, or <see langword="null" /> in the bearer token case.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-259">The proof descriptor can be an asymmetric proof descriptor, a symmetric proof descriptor, or <see langword="null" /> in the bearer token case.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c82c4-260">从默认的令牌颁发管道实现中调用此方法<xref:System.IdentityModel.SecurityTokenService.Issue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c82c4-260">This method is called from the default token issuance pipeline implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span>  
  
 <span data-ttu-id="c82c4-261">默认实现返回校验描述符或引发适当的异常。</span><span class="sxs-lookup"><span data-stu-id="c82c4-261">The default implementation returns a proof descriptor or throws an appropriate exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c82c4-262">
            <paramref name="request" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-262">
              <paramref name="request" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c82c4-263">-or-  <paramref name="scope" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-263">-or-  <paramref name="scope" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetRequestorProofEncryptingCredentials">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.EncryptingCredentials GetRequestorProofEncryptingCredentials (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.EncryptingCredentials GetRequestorProofEncryptingCredentials(class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetRequestorProofEncryptingCredentials(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetRequestorProofEncryptingCredentials (request As RequestSecurityToken) As EncryptingCredentials" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::EncryptingCredentials ^ GetRequestorProofEncryptingCredentials(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetRequestorProofEncryptingCredentials : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Tokens.EncryptingCredentials&#xA;override this.GetRequestorProofEncryptingCredentials : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Tokens.EncryptingCredentials" Usage="securityTokenService.GetRequestorProofEncryptingCredentials request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.EncryptingCredentials</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="c82c4-264">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the incoming token request (RST).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-264">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the incoming token request (RST).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c82c4-265">Gets the requestor's proof encrypting credentials.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-265">Gets the requestor's proof encrypting credentials.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c82c4-266">An <see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" /> object that represents the requestor’s encrypting credentials.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-266">An <see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" /> object that represents the requestor’s encrypting credentials.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c82c4-267">此方法调用从<xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c82c4-267">This method is called from the <xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A> method.</span></span>  
  
 <span data-ttu-id="c82c4-268">默认实现执行以下操作。</span><span class="sxs-lookup"><span data-stu-id="c82c4-268">The default implementation does the following.</span></span> <span data-ttu-id="c82c4-269">返回`null`不是否有任何请求中指定的加密令牌 (<xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ProofEncryption%2A?displayProperty=nameWithType>属性是`null`)。</span><span class="sxs-lookup"><span data-stu-id="c82c4-269">Returns `null` if there is no encryption token specified in the request (the <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ProofEncryption%2A?displayProperty=nameWithType> property is `null`).</span></span> <span data-ttu-id="c82c4-270">否则为如果它可以获取作为令牌<xref:System.IdentityModel.Tokens.X509SecurityToken>，它将返回基于该令牌的凭据。</span><span class="sxs-lookup"><span data-stu-id="c82c4-270">Otherwise, if it can get the token as an <xref:System.IdentityModel.Tokens.X509SecurityToken>, it returns credentials based on that token.</span></span> <span data-ttu-id="c82c4-271">如果无法解析作为令牌<xref:System.IdentityModel.Tokens.X509SecurityToken>、<xref:System.IdentityModel.RequestFailedException>引发。</span><span class="sxs-lookup"><span data-stu-id="c82c4-271">If it cannot resolve the token as an <xref:System.IdentityModel.Tokens.X509SecurityToken>, a <xref:System.IdentityModel.RequestFailedException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c82c4-272">
            <paramref name="request" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-272">
              <paramref name="request" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResponse">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse GetResponse (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse GetResponse(class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request, class System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetResponse(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken,System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetResponse (request As RequestSecurityToken, tokenDescriptor As SecurityTokenDescriptor) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ GetResponse(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request, System::IdentityModel::Tokens::SecurityTokenDescriptor ^ tokenDescriptor);" />
      <MemberSignature Language="F#" Value="abstract member GetResponse : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.GetResponse : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken * System.IdentityModel.Tokens.SecurityTokenDescriptor -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="securityTokenService.GetResponse (request, tokenDescriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
        <Parameter Name="tokenDescriptor" Type="System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="c82c4-273">The RST that contains the token request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-273">The RST that contains the token request.</span>
          </span>
        </param>
        <param name="tokenDescriptor">
          <span data-ttu-id="c82c4-274">The token descriptor that contains the information to use for the issued token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-274">The token descriptor that contains the information to use for the issued token.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c82c4-275">Creates the response (RSTR) that contains the issued token by using the specified request (RST) and security token descriptor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-275">Creates the response (RSTR) that contains the issued token by using the specified request (RST) and security token descriptor.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c82c4-276">The response (RSTR) or <see langword="null" /> if a response cannot be created from the specified request and token descriptor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-276">The response (RSTR) or <see langword="null" /> if a response cannot be created from the specified request and token descriptor.</span>
          </span>
          <span data-ttu-id="c82c4-277">The default implementation returns <see langword="null" /> if the <paramref name="tokenDescriptor" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-277">The default implementation returns <see langword="null" /> if the <paramref name="tokenDescriptor" /> parameter is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c82c4-278"><xref:System.IdentityModel.SecurityTokenService.GetResponse%2A>从令牌颁发管道，由实现，最后一步调用方法，则<xref:System.IdentityModel.SecurityTokenService.Issue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c82c4-278">The <xref:System.IdentityModel.SecurityTokenService.GetResponse%2A> method is called as the last step from the token issuance pipeline, which is implemented by the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span> <span data-ttu-id="c82c4-279">它创建，并通过使用原始的传入请求 (RST) 和令牌颁发管道中的上一个步骤期间建立的令牌描述符返回响应 (RSTR)。</span><span class="sxs-lookup"><span data-stu-id="c82c4-279">It creates and returns the response (RSTR) by using the original incoming request (RST) and the token descriptor that was built up during previous steps in the token issuance pipeline.</span></span>  
  
 <span data-ttu-id="c82c4-280">默认实现将通过将传入的请求参数中指定 RST 创建 RSTR<xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.%23ctor%28System.IdentityModel.Protocols.WSTrust.WSTrustMessage%29?displayProperty=nameWithType>构造函数中，调用<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo%2A?displayProperty=nameWithType>方法令牌描述符传递给<xref:System.IdentityModel.SecurityTokenService.GetResponse%2A>将其属性设置为新创建 RSTR，设置<xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo%2A>属性使用 RSTR<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A>令牌描述符，属性和最后设置<xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A>上按下表 RSTR 属性：</span><span class="sxs-lookup"><span data-stu-id="c82c4-280">The default implementation creates the RSTR by passing the RST specified in the request parameter to the <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse.%23ctor%28System.IdentityModel.Protocols.WSTrust.WSTrustMessage%29?displayProperty=nameWithType> constructor, invoking the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo%2A?displayProperty=nameWithType> method on the token descriptor passed into <xref:System.IdentityModel.SecurityTokenService.GetResponse%2A> to apply its properties to the newly created RSTR, setting the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.AppliesTo%2A> property on the RSTR by using the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A> property on the token descriptor, and finally setting the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A> property on the RSTR according to the following table:</span></span>  
  
|<span data-ttu-id="c82c4-281">`RST.ReplyTo` 属性</span><span class="sxs-lookup"><span data-stu-id="c82c4-281">`RST.ReplyTo` property</span></span>|<span data-ttu-id="c82c4-282"><xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=nameWithType> 属性。</span><span class="sxs-lookup"><span data-stu-id="c82c4-282"><xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=nameWithType> property.</span></span>|<span data-ttu-id="c82c4-283">`RSTR.ReplyTo` 属性</span><span class="sxs-lookup"><span data-stu-id="c82c4-283">`RSTR.ReplyTo` property</span></span>|  
|----------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------|  
|<span data-ttu-id="c82c4-284">Set</span><span class="sxs-lookup"><span data-stu-id="c82c4-284">Set</span></span>|<span data-ttu-id="c82c4-285">未设置</span><span class="sxs-lookup"><span data-stu-id="c82c4-285">Not Set</span></span>|<span data-ttu-id="c82c4-286">未设置</span><span class="sxs-lookup"><span data-stu-id="c82c4-286">Not Set</span></span>|  
|<span data-ttu-id="c82c4-287">Set</span><span class="sxs-lookup"><span data-stu-id="c82c4-287">Set</span></span>|<span data-ttu-id="c82c4-288">Set</span><span class="sxs-lookup"><span data-stu-id="c82c4-288">Set</span></span>|<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="c82c4-289">未设置</span><span class="sxs-lookup"><span data-stu-id="c82c4-289">Not Set</span></span>|<span data-ttu-id="c82c4-290">Set</span><span class="sxs-lookup"><span data-stu-id="c82c4-290">Set</span></span>|<span data-ttu-id="c82c4-291">未设置</span><span class="sxs-lookup"><span data-stu-id="c82c4-291">Not Set</span></span>|  
|<span data-ttu-id="c82c4-292">未设置</span><span class="sxs-lookup"><span data-stu-id="c82c4-292">Not Set</span></span>|<span data-ttu-id="c82c4-293">未设置</span><span class="sxs-lookup"><span data-stu-id="c82c4-293">Not Set</span></span>|<span data-ttu-id="c82c4-294">未设置</span><span class="sxs-lookup"><span data-stu-id="c82c4-294">Not Set</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetScope">
      <MemberSignature Language="C#" Value="protected abstract System.IdentityModel.Scope GetScope (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Scope GetScope(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetScope(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetScope (principal As ClaimsPrincipal, request As RequestSecurityToken) As Scope" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IdentityModel::Scope ^ GetScope(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetScope : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Scope" Usage="securityTokenService.GetScope (principal, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Scope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="c82c4-295">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the client making the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-295">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the client making the request.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="c82c4-296">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the incoming request (RST).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-296">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the incoming request (RST).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c82c4-297">Gets a <see cref="T:System.IdentityModel.Scope" /> object that contains information about the relying party (RP) associated with the specified request (RST).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-297">Gets a <see cref="T:System.IdentityModel.Scope" /> object that contains information about the relying party (RP) associated with the specified request (RST).</span>
          </span>
          <span data-ttu-id="c82c4-298">You must override this method in your implementation of the <see cref="T:System.IdentityModel.SecurityTokenService" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-298">You must override this method in your implementation of the <see cref="T:System.IdentityModel.SecurityTokenService" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c82c4-299">A <see cref="T:System.IdentityModel.Scope" /> that encapsulates the RP information associated with the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-299">A <see cref="T:System.IdentityModel.Scope" /> that encapsulates the RP information associated with the request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c82c4-300"><xref:System.IdentityModel.SecurityTokenService.GetScope%2A>从令牌颁发管道后调用方法<xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A>方法，应返回<xref:System.IdentityModel.Scope>为传入的请求配置的对象。</span><span class="sxs-lookup"><span data-stu-id="c82c4-300">The <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method is called from the token issuance pipeline after the <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> method and should return a <xref:System.IdentityModel.Scope> object configured for the incoming request.</span></span> <span data-ttu-id="c82c4-301">(在中实现令牌颁发管道<xref:System.IdentityModel.SecurityTokenService.Issue%2A>方法。)<xref:System.IdentityModel.Scope>对象封装有关 RP 与安全令牌请求 (RST) 相关联的信息。</span><span class="sxs-lookup"><span data-stu-id="c82c4-301">(The token issuance pipeline is implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.) The <xref:System.IdentityModel.Scope> object encapsulates information about the RP associated with the security token request (RST).</span></span> <span data-ttu-id="c82c4-302">这包括有关要用于 RP 和加密任何已颁发的令牌和/或响应中的对称密钥的加密和签名凭据的信息。</span><span class="sxs-lookup"><span data-stu-id="c82c4-302">This includes information about the encrypting and signing credentials to be used with the RP and whether or not to encrypt any issued tokens and/or symmetric keys in the response.</span></span> <span data-ttu-id="c82c4-303">在中执行一些典型任务<xref:System.IdentityModel.SecurityTokenService.GetScope%2A>方法是：</span><span class="sxs-lookup"><span data-stu-id="c82c4-303">Some typical tasks performed in the <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method are:</span></span>  
  
-   <span data-ttu-id="c82c4-304">确定令牌所针对的 RP 是否识别的 RP。</span><span class="sxs-lookup"><span data-stu-id="c82c4-304">Determine whether the RP for which the token is intended is a recognized RP.</span></span> <span data-ttu-id="c82c4-305">如何完成此操作取决于您的实现。</span><span class="sxs-lookup"><span data-stu-id="c82c4-305">How this is accomplished depends on your implementation.</span></span> <span data-ttu-id="c82c4-306">如果预期的 RP 不是此 STS 有效 RP，则该方法应引发<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>。</span><span class="sxs-lookup"><span data-stu-id="c82c4-306">If the intended RP is not a valid RP for this STS, then the method should throw an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
-   <span data-ttu-id="c82c4-307">确定要用于响应 (RSTR) 和设置的签名凭据<xref:System.IdentityModel.Scope.SigningCredentials%2A>属性相应地。</span><span class="sxs-lookup"><span data-stu-id="c82c4-307">Determine the signing credentials to be used in the response (RSTR) and set the <xref:System.IdentityModel.Scope.SigningCredentials%2A> property accordingly.</span></span>  
  
-   <span data-ttu-id="c82c4-308">确定是否应加密响应和/或任何包含的对称密钥以及要用于加密的凭据。</span><span class="sxs-lookup"><span data-stu-id="c82c4-308">Determine whether the response and/or any included symmetrical keys should be encrypted and the credentials to be used for encryption.</span></span> <span data-ttu-id="c82c4-309">设置<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>， <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>，和<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>属性相应地。</span><span class="sxs-lookup"><span data-stu-id="c82c4-309">Set the <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>, <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>, and <xref:System.IdentityModel.Scope.EncryptingCredentials%2A> properties accordingly.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="c82c4-310">默认情况下，<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>和<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>属性设置`true`以防止 STS 颁发是不安全的令牌。</span><span class="sxs-lookup"><span data-stu-id="c82c4-310">By default, the <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> and <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> properties are set `true` to prevent the STS from issuing tokens that are not secure.</span></span> <span data-ttu-id="c82c4-311">建议永远不会设置这些属性`false`在生产环境中。</span><span class="sxs-lookup"><span data-stu-id="c82c4-311">It is recommended that these properties never be set to `false` in a production environment.</span></span>  
  
-   <span data-ttu-id="c82c4-312">确定应返回响应的地址。</span><span class="sxs-lookup"><span data-stu-id="c82c4-312">Determine the address to which the response should be returned.</span></span> <span data-ttu-id="c82c4-313">设置<xref:System.IdentityModel.Scope.AppliesToAddress%2A>或<xref:System.IdentityModel.Scope.ReplyToAddress%2A>属性相应地。</span><span class="sxs-lookup"><span data-stu-id="c82c4-313">Set either the <xref:System.IdentityModel.Scope.AppliesToAddress%2A> or <xref:System.IdentityModel.Scope.ReplyToAddress%2A> property accordingly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c82c4-314">本主题中使用的代码示例摘自`Custom Token`示例。</span><span class="sxs-lookup"><span data-stu-id="c82c4-314">The code example that is used in this topic is taken from the `Custom Token` sample.</span></span> <span data-ttu-id="c82c4-315">此示例提供使处理的简单 Web 令牌 (SWT) 的自定义类，并包括一个实现被动 STS，能够为提供服务的 SWT 令牌。</span><span class="sxs-lookup"><span data-stu-id="c82c4-315">This sample provides custom classes that enable processing of Simple Web Tokens (SWT) and it includes an implementation of a passive STS that is capable of serving an SWT token.</span></span> <span data-ttu-id="c82c4-316">有关如何实现活动 STS 的示例，你可以参阅`Federation Metadata`示例。</span><span class="sxs-lookup"><span data-stu-id="c82c4-316">For an example of how to implement an active STS, you can see the `Federation Metadata` sample.</span></span> <span data-ttu-id="c82c4-317">有关这些示例和信息提供其他示例的 WIF 和有关从哪里下载它们，请参阅[WIF 代码示例索引](~/docs/framework/security/wif-code-sample-index.md)。</span><span class="sxs-lookup"><span data-stu-id="c82c4-317">For information about these samples and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md).</span></span>  
  
 <span data-ttu-id="c82c4-318">下面的代码示例演示 <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> 方法的实现。</span><span class="sxs-lookup"><span data-stu-id="c82c4-318">The following code example shows an implementation of the <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method.</span></span> <span data-ttu-id="c82c4-319">此实现验证，RP 识别的 STS，验证<xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A>地址中的请求和集<xref:System.IdentityModel.Scope.ReplyToAddress%2A?displayProperty=nameWithType>属性相应地，并设置进行签名和加密凭据将用于 RP 根据证书在文件中采用硬编码。</span><span class="sxs-lookup"><span data-stu-id="c82c4-319">This implementation verifies that the RP is recognized by the STS, validates the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.ReplyTo%2A> address in the request and sets the <xref:System.IdentityModel.Scope.ReplyToAddress%2A?displayProperty=nameWithType> property accordingly, and sets the signing and encrypting credentials to use with the RP based on certificates that are hard-coded in the file.</span></span>  
  
 [!code-csharp[WIFCustomTokenSTS#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#4)]  
[!code-csharp[WIFCustomTokenSTS#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#5)]  
[!code-csharp[WIFCustomTokenSTS#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#7)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c82c4-320">
            <para>必须实现中重写此方法<see cref="T:System.IdentityModel.SecurityTokenService" />类。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-320">
              <para>You must override this method in your implementation of the <see cref="T:System.IdentityModel.SecurityTokenService" /> class.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IdentityModel.Scope" />
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetSecurityTokenHandler">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityTokenHandler GetSecurityTokenHandler (string requestedTokenType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityTokenHandler GetSecurityTokenHandler(string requestedTokenType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSecurityTokenHandler (requestedTokenType As String) As SecurityTokenHandler" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SecurityTokenHandler ^ GetSecurityTokenHandler(System::String ^ requestedTokenType);" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityTokenHandler : string -&gt; System.IdentityModel.Tokens.SecurityTokenHandler&#xA;override this.GetSecurityTokenHandler : string -&gt; System.IdentityModel.Tokens.SecurityTokenHandler" Usage="securityTokenService.GetSecurityTokenHandler requestedTokenType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestedTokenType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestedTokenType">
          <span data-ttu-id="c82c4-321">A string that contains the requested token type URI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-321">A string that contains the requested token type URI.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c82c4-322">Gets the appropriate security token handler for issuing a security token of the specified type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-322">Gets the appropriate security token handler for issuing a security token of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c82c4-323">A <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> that represents the token handler to be used for creating the issued security token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-323">A <see cref="T:System.IdentityModel.Tokens.SecurityTokenHandler" /> that represents the token handler to be used for creating the issued security token.</span>
          </span>
          <span data-ttu-id="c82c4-324">Returns <see langword="null" /> if the requested token type is not supported (there is no handler configured for the specified token type).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-324">Returns <see langword="null" /> if the requested token type is not supported (there is no handler configured for the specified token type).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c82c4-325">默认实现中如果`requestedTokenType`是`null`或空字符串，使用从配置的令牌类型的默认值。</span><span class="sxs-lookup"><span data-stu-id="c82c4-325">In the default implementation if `requestedTokenType` is `null` or an empty string, the default token type from configuration is used.</span></span> <span data-ttu-id="c82c4-326">这通过指定<xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenType%2A>通过访问 STS 配置对象的属性<xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="c82c4-326">This is specified by the <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenType%2A> property of the STS configuration object accessed through the <xref:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration%2A> property.</span></span>  
  
 <span data-ttu-id="c82c4-327">从默认的令牌颁发管道实现中调用此方法<xref:System.IdentityModel.SecurityTokenService.Issue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c82c4-327">This method is called from the default token issuance pipeline implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="GetTokenLifetime">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Protocols.WSTrust.Lifetime GetTokenLifetime (System.IdentityModel.Protocols.WSTrust.Lifetime requestLifetime);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.Lifetime GetTokenLifetime(class System.IdentityModel.Protocols.WSTrust.Lifetime requestLifetime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.GetTokenLifetime(System.IdentityModel.Protocols.WSTrust.Lifetime)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTokenLifetime (requestLifetime As Lifetime) As Lifetime" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Protocols::WSTrust::Lifetime ^ GetTokenLifetime(System::IdentityModel::Protocols::WSTrust::Lifetime ^ requestLifetime);" />
      <MemberSignature Language="F#" Value="abstract member GetTokenLifetime : System.IdentityModel.Protocols.WSTrust.Lifetime -&gt; System.IdentityModel.Protocols.WSTrust.Lifetime&#xA;override this.GetTokenLifetime : System.IdentityModel.Protocols.WSTrust.Lifetime -&gt; System.IdentityModel.Protocols.WSTrust.Lifetime" Usage="securityTokenService.GetTokenLifetime requestLifetime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.Lifetime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestLifetime" Type="System.IdentityModel.Protocols.WSTrust.Lifetime" />
      </Parameters>
      <Docs>
        <param name="requestLifetime">
          <span data-ttu-id="c82c4-328">A <see cref="T:System.IdentityModel.Protocols.WSTrust.Lifetime" /> that represents the requested lifetime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-328">A <see cref="T:System.IdentityModel.Protocols.WSTrust.Lifetime" /> that represents the requested lifetime.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c82c4-329">Gets the lifetime for the issued token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-329">Gets the lifetime for the issued token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c82c4-330">A <see cref="T:System.IdentityModel.Protocols.WSTrust.Lifetime" /> that represents the granted lifetime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-330">A <see cref="T:System.IdentityModel.Protocols.WSTrust.Lifetime" /> that represents the granted lifetime.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c82c4-331">与在 RST 中，传入的生存期通常调用此方法。</span><span class="sxs-lookup"><span data-stu-id="c82c4-331">This method is normally called with the lifetime that arrived in the RST.</span></span> <span data-ttu-id="c82c4-332">在默认实现中，令牌生存期是下表根据计算的。</span><span class="sxs-lookup"><span data-stu-id="c82c4-332">In the default implementation, the token lifetime is calculated according to the following table.</span></span>  
  
|<span data-ttu-id="c82c4-333">创建 （中）</span><span class="sxs-lookup"><span data-stu-id="c82c4-333">Created (in)</span></span>|<span data-ttu-id="c82c4-334">过期 （中）</span><span class="sxs-lookup"><span data-stu-id="c82c4-334">Expires (in)</span></span>|<span data-ttu-id="c82c4-335">创建 （中）</span><span class="sxs-lookup"><span data-stu-id="c82c4-335">Created (in)</span></span>|<span data-ttu-id="c82c4-336">过期 （出）</span><span class="sxs-lookup"><span data-stu-id="c82c4-336">Expires (out)</span></span>|  
|--------------------|--------------------|--------------------|---------------------|  
|`null`|`null`|<xref:System.DateTime.UtcNow%2A?displayProperty=nameWithType>|<xref:System.DateTime.UtcNow%2A?displayProperty=nameWithType> + <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="c82c4-337">C</span><span class="sxs-lookup"><span data-stu-id="c82c4-337">C</span></span>|`null`|<span data-ttu-id="c82c4-338">C</span><span class="sxs-lookup"><span data-stu-id="c82c4-338">C</span></span>|<span data-ttu-id="c82c4-339">C + <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c82c4-339">C + <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime%2A?displayProperty=nameWithType></span></span>|  
|`null`|<span data-ttu-id="c82c4-340">E</span><span class="sxs-lookup"><span data-stu-id="c82c4-340">E</span></span>|<xref:System.DateTime.UtcNow%2A?displayProperty=nameWithType>|<span data-ttu-id="c82c4-341">E</span><span class="sxs-lookup"><span data-stu-id="c82c4-341">E</span></span>|  
|<span data-ttu-id="c82c4-342">C</span><span class="sxs-lookup"><span data-stu-id="c82c4-342">C</span></span>|<span data-ttu-id="c82c4-343">E</span><span class="sxs-lookup"><span data-stu-id="c82c4-343">E</span></span>|<span data-ttu-id="c82c4-344">C</span><span class="sxs-lookup"><span data-stu-id="c82c4-344">C</span></span>|<span data-ttu-id="c82c4-345">E</span><span class="sxs-lookup"><span data-stu-id="c82c4-345">E</span></span>|  
  
 <span data-ttu-id="c82c4-346">从默认的令牌颁发管道实现中调用此方法<xref:System.IdentityModel.SecurityTokenService.Issue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c82c4-346">This method is called from the default token issuance pipeline implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
    <Member MemberName="Issue">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Issue (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Issue(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Issue (principal As ClaimsPrincipal, request As RequestSecurityToken) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ Issue(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberSignature Language="F#" Value="abstract member Issue : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.Issue : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="securityTokenService.Issue (principal, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="c82c4-347">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-347">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="c82c4-348">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-348">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          </span>
          <span data-ttu-id="c82c4-349">This includes the request message as well as other client related information such as authorization context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-349">This includes the request message as well as other client related information such as authorization context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c82c4-350">Issues a security token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-350">Issues a security token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c82c4-351">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that contains the issued security token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-351">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that contains the issued security token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c82c4-352">此方法实现 Ws-trust 规范中定义的问题绑定。</span><span class="sxs-lookup"><span data-stu-id="c82c4-352">This method implements the Issue binding defined in the WS-Trust specification.</span></span> <span data-ttu-id="c82c4-353">默认实现<xref:System.IdentityModel.SecurityTokenService.Issue%2A>方法处理传入请求 (RST) 通过令牌颁发 （声明发出） 管道并返回任一响应 (RSTR)，其中包含具有相应声明进行身份验证的安全令牌请求者 RP 或相应的异常。</span><span class="sxs-lookup"><span data-stu-id="c82c4-353">The default implementation of the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method processes the incoming request (RST) through a token issuance (claims issuance) pipeline and returns either a response (RSTR) that contains a security token with the appropriate claims to authenticate the requestor with the RP or an appropriate exception.</span></span> <span data-ttu-id="c82c4-354">令牌颁发管道中的默认实现包含对以下方法的调用 (的<xref:System.IdentityModel.SecurityTokenService>类)。</span><span class="sxs-lookup"><span data-stu-id="c82c4-354">The token issuance pipeline in the default implementation consists of calls to the following methods (of the <xref:System.IdentityModel.SecurityTokenService> class).</span></span>  
  
1.  <span data-ttu-id="c82c4-355"><xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A>方法验证请求 (RST)。</span><span class="sxs-lookup"><span data-stu-id="c82c4-355">The <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> method to validate the request (RST).</span></span>  
  
2.  <span data-ttu-id="c82c4-356"><xref:System.IdentityModel.SecurityTokenService.GetScope%2A>方法以获取<xref:System.IdentityModel.Scope>包含与请求关联的信赖方 (RP) 有关的信息的对象。</span><span class="sxs-lookup"><span data-stu-id="c82c4-356">The <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method to get a <xref:System.IdentityModel.Scope> object that contains information about the relying party (RP) associated with the request.</span></span> <span data-ttu-id="c82c4-357">你必须重写此方法。</span><span class="sxs-lookup"><span data-stu-id="c82c4-357">You must override this method.</span></span> <span data-ttu-id="c82c4-358">如果<xref:System.IdentityModel.SecurityTokenService.GetScope%2A>返回`null`、<xref:System.InvalidOperationException>引发。</span><span class="sxs-lookup"><span data-stu-id="c82c4-358">If <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> returns `null`, a <xref:System.InvalidOperationException> is thrown.</span></span>  
  
3.  <span data-ttu-id="c82c4-359"><xref:System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor%2A>方法以返回安全令牌描述符基于 RST 和<xref:System.IdentityModel.Scope>上一步中返回的对象。</span><span class="sxs-lookup"><span data-stu-id="c82c4-359">The <xref:System.IdentityModel.SecurityTokenService.CreateSecurityTokenDescriptor%2A> method to return a security token descriptor based on the RST and the <xref:System.IdentityModel.Scope> object returned in the previous step.</span></span> <span data-ttu-id="c82c4-360">安全令牌描述符 (<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor>) 包含有关可由标记处理程序的窗体中的请求的信息。</span><span class="sxs-lookup"><span data-stu-id="c82c4-360">The security token descriptor (<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor>) contains information about the request in a form that can be used by a token handler.</span></span> <span data-ttu-id="c82c4-361"><xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor%2A?displayProperty=nameWithType>属性设置为调用所返回的描述符。</span><span class="sxs-lookup"><span data-stu-id="c82c4-361">The <xref:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor%2A?displayProperty=nameWithType> property is set to the descriptor returned by the call.</span></span> <span data-ttu-id="c82c4-362">如果`null`返回或如果<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A>属性的描述符是`null`、<xref:System.InvalidOperationException>引发。</span><span class="sxs-lookup"><span data-stu-id="c82c4-362">If `null` is returned or if the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A> property of the descriptor is `null`, an <xref:System.InvalidOperationException> is thrown.</span></span> <span data-ttu-id="c82c4-363">如果也会引发异常<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A?displayProperty=nameWithType>属性是`true`但<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A>属性返回的描述符`null`。</span><span class="sxs-lookup"><span data-stu-id="c82c4-363">The exception is also thrown if the <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A?displayProperty=nameWithType> property is `true` but the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A> property on the returned descriptor is `null`.</span></span>  
  
4.  <span data-ttu-id="c82c4-364"><xref:System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler%2A>方法以获取适当的令牌处理程序根据请求标记的类型。</span><span class="sxs-lookup"><span data-stu-id="c82c4-364">The <xref:System.IdentityModel.SecurityTokenService.GetSecurityTokenHandler%2A> method to get the appropriate token handler based on the kind of token requested.</span></span> <span data-ttu-id="c82c4-365">如果`null`返回，<xref:System.NotImplementedException>引发。</span><span class="sxs-lookup"><span data-stu-id="c82c4-365">If `null` is returned, a <xref:System.NotImplementedException> is thrown.</span></span>  
  
5.  <span data-ttu-id="c82c4-366"><xref:System.IdentityModel.SecurityTokenService.GetIssuerName%2A>方法以获取令牌的颁发者名称。</span><span class="sxs-lookup"><span data-stu-id="c82c4-366">The <xref:System.IdentityModel.SecurityTokenService.GetIssuerName%2A> method to get the issuer name for the token.</span></span> <span data-ttu-id="c82c4-367">引发<xref:System.InvalidOperationException>如果名称是`null`或为空; 否则，将设置<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName%2A>有关描述符的属性。</span><span class="sxs-lookup"><span data-stu-id="c82c4-367">Throws an <xref:System.InvalidOperationException> if the name is `null` or empty; otherwise sets the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName%2A> property on the descriptor.</span></span>  
  
6.  <span data-ttu-id="c82c4-368"><xref:System.IdentityModel.SecurityTokenService.GetTokenLifetime%2A>方法以获取的令牌和集的生存期<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A>有关描述符的属性。</span><span class="sxs-lookup"><span data-stu-id="c82c4-368">The <xref:System.IdentityModel.SecurityTokenService.GetTokenLifetime%2A> method to get the lifetime for the token and sets the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A> property on the descriptor.</span></span>  
  
7.  <span data-ttu-id="c82c4-369"><xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A>方法以获取证明令牌包含在已颁发的令牌以及集<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof%2A>有关描述符的属性。</span><span class="sxs-lookup"><span data-stu-id="c82c4-369">The <xref:System.IdentityModel.SecurityTokenService.GetProofToken%2A> method to get the proof token to include in the issued token and sets the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof%2A> property on the descriptor.</span></span>  
  
8.  <span data-ttu-id="c82c4-370"><xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A>方法以获取要包括在颁发的令牌和集的声明<xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A>有关描述符的属性。</span><span class="sxs-lookup"><span data-stu-id="c82c4-370">The <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> method to get the claims to include in the issued token and sets the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject%2A> property on the descriptor.</span></span> <span data-ttu-id="c82c4-371">你必须重写此方法。</span><span class="sxs-lookup"><span data-stu-id="c82c4-371">You must override this method.</span></span>  
  
9. <span data-ttu-id="c82c4-372"><xref:System.IdentityModel.SecurityTokenService.GetResponse%2A>方法来创建包含已颁发的令牌的响应 (RSTR)。</span><span class="sxs-lookup"><span data-stu-id="c82c4-372">The <xref:System.IdentityModel.SecurityTokenService.GetResponse%2A> method to create a response (RSTR) that contains the issued token.</span></span>  
  
 <span data-ttu-id="c82c4-373">您可以重写<xref:System.IdentityModel.SecurityTokenService.Issue%2A>方法来实现一个自定义令牌颁发管道; 但是它通常不需要在开发和测试环境中的哪些最自定义实现<xref:System.IdentityModel.SecurityTokenService>类旨在。</span><span class="sxs-lookup"><span data-stu-id="c82c4-373">You can override the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method to implement a custom token issuance pipeline; however this is typically not necessary in the development and test environments for which most custom implementations of the <xref:System.IdentityModel.SecurityTokenService> class are intended.</span></span> <span data-ttu-id="c82c4-374">在许多这类情况你重写<xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A>和<xref:System.IdentityModel.SecurityTokenService.GetScope%2A>方法和选择重写<xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A>方法来为你的环境提供可维修 STS。</span><span class="sxs-lookup"><span data-stu-id="c82c4-374">In many of these cases you override the <xref:System.IdentityModel.SecurityTokenService.GetOutputClaimsIdentity%2A> and <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> methods and optionally override the <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> method  to provide a serviceable STS for your environment.</span></span> <span data-ttu-id="c82c4-375">是否需要进一步执行自定义你通常可以通过重写实现令牌颁发管道上面列出的默认值的每个阶段的方法提供它。</span><span class="sxs-lookup"><span data-stu-id="c82c4-375">If further customization is necessary you can often provide it by overriding the methods that implement each stage of the default token issuance pipeline listed above.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Principal">
      <MemberSignature Language="C#" Value="public System.Security.Claims.ClaimsPrincipal Principal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Claims.ClaimsPrincipal Principal" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.SecurityTokenService.Principal" />
      <MemberSignature Language="VB.NET" Value="Public Property Principal As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Claims::ClaimsPrincipal ^ Principal { System::Security::Claims::ClaimsPrincipal ^ get(); void set(System::Security::Claims::ClaimsPrincipal ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Principal : System.Security.Claims.ClaimsPrincipal with get, set" Usage="System.IdentityModel.SecurityTokenService.Principal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c82c4-376">Gets or sets the principal associated with the current instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-376">Gets or sets the principal associated with the current instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c82c4-377">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> ，它表示当前的主体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-377">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the current principal.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Renew">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Renew (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Renew(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.Renew(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Renew (principal As ClaimsPrincipal, request As RequestSecurityToken) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ Renew(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberSignature Language="F#" Value="abstract member Renew : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.Renew : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="securityTokenService.Renew (principal, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="c82c4-378">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-378">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="c82c4-379">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-379">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          </span>
          <span data-ttu-id="c82c4-380">This includes the request message as well as other client related information such as authorization context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-380">This includes the request message as well as other client related information such as authorization context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c82c4-381">When overridden in a derived class, processes a WS-Trust Renew request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-381">When overridden in a derived class, processes a WS-Trust Renew request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c82c4-382">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-382">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c82c4-383">此方法的默认实现将引发<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>。</span><span class="sxs-lookup"><span data-stu-id="c82c4-383">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.RequestSecurityToken Request { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken Request" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.SecurityTokenService.Request" />
      <MemberSignature Language="VB.NET" Value="Public Property Request As RequestSecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ Request { System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ get(); void set(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Request : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken with get, set" Usage="System.IdentityModel.SecurityTokenService.Request" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c82c4-384">Gets or sets the security token request (RST) associated with the current instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-384">Gets or sets the security token request (RST) associated with the current instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c82c4-385">A<see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />包含请求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-385">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that contains the request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Scope Scope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Scope Scope" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.SecurityTokenService.Scope" />
      <MemberSignature Language="VB.NET" Value="Public Property Scope As Scope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Scope ^ Scope { System::IdentityModel::Scope ^ get(); void set(System::IdentityModel::Scope ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Scope : System.IdentityModel.Scope with get, set" Usage="System.IdentityModel.SecurityTokenService.Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Scope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c82c4-386">Gets or sets the scope associated with the current instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-386">Gets or sets the scope associated with the current instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c82c4-387">A <see cref="T:System.IdentityModel.Scope" /> ，表示令牌颁发请求的配置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-387">A <see cref="T:System.IdentityModel.Scope" /> that represents the configuration for the token issuance request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenDescriptor">
      <MemberSignature Language="C#" Value="protected System.IdentityModel.Tokens.SecurityTokenDescriptor SecurityTokenDescriptor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenDescriptor SecurityTokenDescriptor" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor" />
      <MemberSignature Language="VB.NET" Value="Protected Property SecurityTokenDescriptor As SecurityTokenDescriptor" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::IdentityModel::Tokens::SecurityTokenDescriptor ^ SecurityTokenDescriptor { System::IdentityModel::Tokens::SecurityTokenDescriptor ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenDescriptor ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecurityTokenDescriptor : System.IdentityModel.Tokens.SecurityTokenDescriptor with get, set" Usage="System.IdentityModel.SecurityTokenService.SecurityTokenDescriptor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c82c4-388">Gets or sets the <see cref="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" /> associated with the current instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-388">Gets or sets the <see cref="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" /> associated with the current instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c82c4-389">当前实例相关联的安全令牌描述符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-389">The security token descriptor that is associated with the current instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c82c4-390">An attempt to set the property to <see langword="null" /> occurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-390">An attempt to set the property to <see langword="null" /> occurs.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenServiceConfiguration">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Configuration.SecurityTokenServiceConfiguration SecurityTokenServiceConfiguration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Configuration.SecurityTokenServiceConfiguration SecurityTokenServiceConfiguration" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SecurityTokenServiceConfiguration As SecurityTokenServiceConfiguration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Configuration::SecurityTokenServiceConfiguration ^ SecurityTokenServiceConfiguration { System::IdentityModel::Configuration::SecurityTokenServiceConfiguration ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityTokenServiceConfiguration : System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" Usage="System.IdentityModel.SecurityTokenService.SecurityTokenServiceConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Configuration.SecurityTokenServiceConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c82c4-391">Gets the owner configuration instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-391">Gets the owner configuration instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c82c4-392">A <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> ，其中包含当前实例的配置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-392">A <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> that contains the configuration for the current instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Validate (System.Security.Claims.ClaimsPrincipal principal, System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse Validate(class System.Security.Claims.ClaimsPrincipal principal, class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.Validate(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Validate (principal As ClaimsPrincipal, request As RequestSecurityToken) As RequestSecurityTokenResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Protocols::WSTrust::RequestSecurityTokenResponse ^ Validate(System::Security::Claims::ClaimsPrincipal ^ principal, System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberSignature Language="F#" Value="abstract member Validate : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse&#xA;override this.Validate : System.Security.Claims.ClaimsPrincipal * System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" Usage="securityTokenService.Validate (principal, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="principal">
          <span data-ttu-id="c82c4-393">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-393">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> that represents the identity of the token requestor.</span>
          </span>
        </param>
        <param name="request">
          <span data-ttu-id="c82c4-394">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-394">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the security token request.</span>
          </span>
          <span data-ttu-id="c82c4-395">This includes the request message as well as other client related information such as authorization context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-395">This includes the request message as well as other client related information such as authorization context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c82c4-396">When overridden in a derived class, processes a WS-Trust Validate request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-396">When overridden in a derived class, processes a WS-Trust Validate request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c82c4-397">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-397">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" /> that represents the RSTR to return to the caller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c82c4-398">此方法的默认实现将引发<xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>。</span><span class="sxs-lookup"><span data-stu-id="c82c4-398">The default implementation of this method throws an <xref:System.IdentityModel.Protocols.WSTrust.InvalidRequestException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateRequest">
      <MemberSignature Language="C#" Value="protected virtual void ValidateRequest (System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateRequest(class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.SecurityTokenService.ValidateRequest(System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateRequest (request As RequestSecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateRequest(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ request);" />
      <MemberSignature Language="F#" Value="abstract member ValidateRequest : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; unit&#xA;override this.ValidateRequest : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken -&gt; unit" Usage="securityTokenService.ValidateRequest request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="c82c4-399">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-399">A <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" /> that represents the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c82c4-400">Validates the security token request (RST) encapsulated by this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-400">Validates the security token request (RST) encapsulated by this instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c82c4-401"><xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A>从令牌颁发管道调用方法 (<xref:System.IdentityModel.SecurityTokenService.Issue%2A>方法) 来验证传入的 RST。</span><span class="sxs-lookup"><span data-stu-id="c82c4-401">The <xref:System.IdentityModel.SecurityTokenService.ValidateRequest%2A> method is called from the token issuance pipeline (the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method) to validate the incoming RST.</span></span> <span data-ttu-id="c82c4-402">RST 验证对 STS 的要求 （策略），并且如果它不是有效引发相应的异常。</span><span class="sxs-lookup"><span data-stu-id="c82c4-402">The RST is validated against the requirements (policy) of the STS and an appropriate exception is thrown if it is not valid.</span></span>  
  
 <span data-ttu-id="c82c4-403">默认实现<xref:System.IdentityModel.SecurityTokenService>类支持仅 RST RSTR 模式和 Ws-trust 规范的问题绑定 (<xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType%2A>的请求的属性必须设置为<xref:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="c82c4-403">The default implementation of the <xref:System.IdentityModel.SecurityTokenService> class supports only the RST-RSTR pattern and only the Issue binding of the WS-Trust specification (the <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType%2A> property of the request must be set to <xref:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue?displayProperty=nameWithType>).</span></span> <span data-ttu-id="c82c4-404">此方法的默认实现强制执行这些需求 （和其他异常部分中所述）。</span><span class="sxs-lookup"><span data-stu-id="c82c4-404">The default implementation of this method enforces these requirements (and others noted in the exceptions section).</span></span> <span data-ttu-id="c82c4-405">如果必须强制实施不同的验证要求你自定义 STS，您可以重写此方法。</span><span class="sxs-lookup"><span data-stu-id="c82c4-405">You can override this method if you must enforce different validation requirements for your custom STS.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IdentityModel.Protocols.WSTrust.InvalidRequestException">
          <span data-ttu-id="c82c4-406">
            <paramref name="request" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-406">
              <paramref name="request" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c82c4-407">-or-  The <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType" /> property of the request is not set to <see cref="F:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-407">-or-  The <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType" /> property of the request is not set to <see cref="F:System.IdentityModel.Protocols.WSTrust.RequestTypes.Issue" />.</span>
          </span>
          <span data-ttu-id="c82c4-408">-or-  The <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType" /> property of the request is not <see langword="null" /> or one of the constants defined in the <see cref="T:System.IdentityModel.Protocols.WSTrust.KeyTypes" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-408">-or-  The <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType" /> property of the request is not <see langword="null" /> or one of the constants defined in the <see cref="T:System.IdentityModel.Protocols.WSTrust.KeyTypes" /> class.</span>
          </span>
          <span data-ttu-id="c82c4-409">-or-  The <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType" /> of the request is <see cref="F:System.IdentityModel.Protocols.WSTrust.KeyTypes.Bearer" /> and the <see langword="KeySize" /> element is present, but its value is not equal to zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-409">-or-  The <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType" /> of the request is <see cref="F:System.IdentityModel.Protocols.WSTrust.KeyTypes.Bearer" /> and the <see langword="KeySize" /> element is present, but its value is not equal to zero.</span>
          </span>
        </exception>
        <exception cref="T:System.IdentityModel.UnsupportedTokenTypeBadRequestException">
          <span data-ttu-id="c82c4-410">The STS does not support the request token type (based on the value of the <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType" /> property of the request).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c82c4-410">The STS does not support the request token type (based on the value of the <see cref="P:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.TokenType" /> property of the request).</span>
          </span>
        </exception>
        <altmember cref="M:System.IdentityModel.SecurityTokenService.Issue(System.Security.Claims.ClaimsPrincipal,System.IdentityModel.Protocols.WSTrust.RequestSecurityToken)" />
      </Docs>
    </Member>
  </Members>
</Type>