<Type Name="AuthenticatingEventArgs" FullName="System.Web.ApplicationServices.AuthenticatingEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c59b711077df3c6faa583ef13f14d05a0e5696c4" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36604708" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AuthenticatingEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthenticatingEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.ApplicationServices.AuthenticatingEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthenticatingEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthenticatingEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type AuthenticatingEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 <see cref="E:System.Web.ApplicationServices.AuthenticationService.Authenticating" /> 事件提供数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 创建的处理程序<xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>时想要自定义如何用户的凭据进行身份验证在运行时的事件。 <xref:System.Web.ApplicationServices.AuthenticatingEventArgs>类提供了到任何值<xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>事件处理程序。 通过使用此类中可用的属性，可以检索用于自定义身份验证的用户凭据。  
  
 <xref:System.Web.ApplicationServices.AuthenticationService>类所引发<xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>之前验证用户凭据的事件。 <xref:System.Web.ApplicationServices.AuthenticationService>类构造的实例<xref:System.Web.ApplicationServices.AuthenticatingEventArgs>对象，并将其传递给任何<xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>事件处理程序。  
  
 你可以使用<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.UserName%2A>，<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Password%2A>和<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A>要检索的用户凭据的属性。 <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A>属性可以包含其他值所需的身份验证，如一个标识号。  
  
 <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A>属性指示的用户凭据是否有效。 你设置<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A>到您的自定义身份验证的结果的属性。 此外，设置<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A>属性`true`如果签入的用户凭据且不希望<xref:System.Web.ApplicationServices.AuthenticationService>类检查通过默认成员资格提供程序的用户凭据。  
  
   
  
## Examples  
 下面的示例演示的事件处理程序将传递<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.UserName%2A>和<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Password%2A>到自定义成员资格提供程序来验证用户凭据的值。 事件处理程序将设置<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A>到的返回值<xref:System.Web.Security.MembershipProvider.ValidateUser%2A>方法和集<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A>到`true`以便<xref:System.Web.ApplicationServices.AuthenticationService>类不会验证凭据。  
  
 [!code-csharp[System.Web.Security.LoginService_NonDefaultProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService_NonDefaultProvider/cs/Global.asax#2)]
 [!code-vb[System.Web.Security.LoginService_NonDefaultProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService_NonDefaultProvider/vb/Global.asax#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Authenticated">
      <MemberSignature Language="C#" Value="public bool Authenticated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Authenticated" />
      <MemberSignature Language="DocId" Value="P:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated" />
      <MemberSignature Language="VB.NET" Value="Public Property Authenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Authenticated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Authenticated : bool with get, set" Usage="System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示用户凭据是否有效。</summary>
        <value>如果用户凭据有效，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果你进行身份验证的事件处理程序中的用户凭据<xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>事件中，设置<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A>属性以指示用户凭据是否有效。 如果用户凭据是否有效，并且需要进行任何其他验证设置<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A>到`true`和<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A>到`true`。 你设置<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A>属性以指示身份验证服务应跳过了默认值对用户进行身份验证的步骤。 中的值<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A>由<xref:System.Web.ApplicationServices.AuthenticationService>类才<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A>设置为`true`。 如果<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A>是`false`、<xref:System.Web.ApplicationServices.AuthenticationService>类调用默认成员资格提供程序来验证用户凭据，并将中的值然后覆盖<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A>。  
  
   
  
## Examples  
 下面的示例演示的事件处理程序将传递<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.UserName%2A>和<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Password%2A>到自定义成员资格提供程序来验证用户凭据的值。 事件处理程序将设置<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A>到的返回值<xref:System.Web.Security.MembershipProvider.ValidateUser%2A>方法和集<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A>到`true`以便<xref:System.Web.ApplicationServices.AuthenticationService>类不会验证凭据。  
  
 [!code-csharp[System.Web.Security.LoginService_NonDefaultProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService_NonDefaultProvider/cs/Global.asax#2)]
 [!code-vb[System.Web.Security.LoginService_NonDefaultProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService_NonDefaultProvider/vb/Global.asax#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationIsComplete">
      <MemberSignature Language="C#" Value="public bool AuthenticationIsComplete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AuthenticationIsComplete" />
      <MemberSignature Language="DocId" Value="P:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationIsComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AuthenticationIsComplete { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationIsComplete : bool with get, set" Usage="System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示用户凭据是否已经过身份验证。</summary>
        <value>如果执行了验证用户凭据的所有步骤，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以设置<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A>属性以指示是否<xref:System.Web.ApplicationServices.AuthenticationService>类必须进行身份验证的用户凭据。 如果<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A>是`true`、<xref:System.Web.ApplicationServices.AuthenticationService>类不会验证通过默认成员资格提供程序的用户凭据。 相反，它使用中的值<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A>来确定是否创建身份验证 cookie。  
  
 如果<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A>是`false`、<xref:System.Web.ApplicationServices.AuthenticationService>类验证通过默认成员资格提供程序的用户凭据，并覆盖中的值<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A>属性。  
  
   
  
## Examples  
 下面的示例演示的事件处理程序将传递<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.UserName%2A>和<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Password%2A>到自定义成员资格提供程序来验证用户凭据的值。 事件处理程序将设置<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A>到的返回值<xref:System.Web.Security.MembershipProvider.ValidateUser%2A>方法和集<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A>到`true`以便<xref:System.Web.ApplicationServices.AuthenticationService>类不会验证凭据。  
  
 [!code-csharp[System.Web.Security.LoginService_NonDefaultProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService_NonDefaultProvider/cs/Global.asax#2)]
 [!code-vb[System.Web.Security.LoginService_NonDefaultProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService_NonDefaultProvider/vb/Global.asax#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomCredential">
      <MemberSignature Language="C#" Value="public string CustomCredential { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CustomCredential" />
      <MemberSignature Language="DocId" Value="P:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomCredential As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CustomCredential { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CustomCredential : string" Usage="System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于身份验证的其他用户值。</summary>
        <value>进行身份验证所需的除用户名和密码以外的其他值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你可以使用<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A>要检索用户名和密码期间之外的身份验证值属性<xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>事件。 例如，应用程序可能配置为验证的用户名和密码一起标识号。 在这种情况下，将传入的标识号`CustomCredential`参数<xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>方法。 然后可以检索通过自定义值<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A>属性。  
  
 <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A>属性包含相同的格式中的自定义的值，因为它们传递给<xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>方法。 在<xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>事件处理程序，如果多个值存储在属性中，必须分析值<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A>属性检索值。  
  
   
  
## Examples  
 下面的示例演示的事件处理程序<xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>分析从两个身份验证值的事件<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A>属性。 将两个值的用户名和密码传递到一个名为的自定义身份验证类`StudentAuthentication`。  
  
 [!code-csharp[System.Web.Security.LoginService_MultipleCredentials#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/cs/Global.asax#2)]
 [!code-vb[System.Web.Security.LoginService_MultipleCredentials#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/vb/Global.asax#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:System.Web.ApplicationServices.AuthenticatingEventArgs.Password" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Password As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Password { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Password : string" Usage="System.Web.ApplicationServices.AuthenticatingEventArgs.Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用户的密码。</summary>
        <value>要验证的密码。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你使用<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Password%2A>属性来检索期间密码<xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>事件。  
  
   
  
## Examples  
 下面的示例演示的事件处理程序将传递<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.UserName%2A>和<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Password%2A>到自定义成员资格提供程序来验证用户凭据的值。 事件处理程序将设置<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A>到的返回值<xref:System.Web.Security.MembershipProvider.ValidateUser%2A>方法和集<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A>到`true`以便<xref:System.Web.ApplicationServices.AuthenticationService>类不会验证凭据。  
  
 [!code-csharp[System.Web.Security.LoginService_NonDefaultProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService_NonDefaultProvider/cs/Global.asax#2)]
 [!code-vb[System.Web.Security.LoginService_NonDefaultProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService_NonDefaultProvider/vb/Global.asax#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:System.Web.ApplicationServices.AuthenticatingEventArgs.UserName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserName : string" Usage="System.Web.ApplicationServices.AuthenticatingEventArgs.UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>为用户获取身份验证名称。</summary>
        <value>要验证的用户名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你使用<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.UserName%2A>属性，以检索期间的身份验证名称<xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>事件。  
  
   
  
## Examples  
 下面的示例演示一个事件处理程序，选择要使用成员资格提供程序基于值<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.UserName%2A>属性。 处理程序传递<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.UserName%2A>和<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Password%2A>到自定义成员资格提供程序来验证用户凭据的值。 它将设置<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A>到的返回值<xref:System.Web.Security.MembershipProvider.ValidateUser%2A>方法和集<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A>到`true`以便<xref:System.Web.ApplicationServices.AuthenticationService>类不会验证凭据。  
  
 [!code-csharp[System.Web.Security.LoginService_NonDefaultProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService_NonDefaultProvider/cs/Global.asax#2)]
 [!code-vb[System.Web.Security.LoginService_NonDefaultProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService_NonDefaultProvider/vb/Global.asax#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>