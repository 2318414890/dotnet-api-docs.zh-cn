<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="GCSettings.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50baf797ee3c7130da2de1bdbad1affd3838bdcef.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0baf797ee3c7130da2de1bdbad1affd3838bdcef</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.GCSettings">
          <source>Specifies the garbage collection settings for the current process.</source>
          <target state="translated">指定当前进程的垃圾回收设置。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.GCSettings">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.GCSettings.IsServerGC%2A&gt;</ph> property to determine whether server garbage collection is enabled for the current process.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Runtime.GCSettings.IsServerGC%2A&gt;</ph>属性来确定是否为当前进程启用服务器垃圾回收。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="P:System.Runtime.GCSettings.IsServerGC">
          <source>Gets a value that indicates whether server garbage collection is enabled.</source>
          <target state="translated">获取一个值，该值指示是否启用了服务器垃圾回收。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.IsServerGC">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if server garbage collection is enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果启用了服务器垃圾回收，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.IsServerGC">
          <source>For information about server garbage collection, see the "Workstation and Server Garbage Collection" section in <bpt id="p1">[</bpt>Fundamentals of Garbage Collection<ept id="p1">](~/docs/standard/garbage-collection/fundamentals.md)</ept>.</source>
          <target state="translated">有关服务器垃圾回收的信息，请参阅"工作站和服务器垃圾回收"一节中的<bpt id="p1">[</bpt>垃圾回收的基础<ept id="p1">](~/docs/standard/garbage-collection/fundamentals.md)</ept>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.IsServerGC">
          <source>If server garbage collection is not enabled, workstation garbage collection is in effect (with or without concurrent collection).</source>
          <target state="translated">如果未启用服务器垃圾回收，工作站垃圾回收实际上是 （带有或不带并发回收）。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.IsServerGC">
          <source>Server garbage collection is available only on multiprocessor computers.</source>
          <target state="translated">服务器垃圾回收是仅在多处理器计算机上可用。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.IsServerGC">
          <source>An unmanaged host can request server garbage collection, and the host request overrides configuration file settings.</source>
          <target state="translated">非托管的宿主可以请求服务器垃圾回收，而主机请求覆盖配置文件设置。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.IsServerGC">
          <source>If the host does not specify the type of garbage collection, you can use a configuration file setting to specify server garbage collection.</source>
          <target state="translated">如果主机未指定垃圾回收的类型，你可以使用配置文件设置来指定服务器垃圾回收。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.IsServerGC">
          <source>This setting is valid only in the application configuration file, not in the machine configuration file (see <bpt id="p1">[</bpt>Configuring Apps<ept id="p1">](http://msdn.microsoft.com/library/86bd26d3-737e-4484-9782-19b17f34cd1f)</ept>).</source>
          <target state="translated">此设置仅在应用程序配置文件中，不在计算机配置文件是否有效 (请参阅<bpt id="p1">[</bpt>配置应用<ept id="p1">](http://msdn.microsoft.com/library/86bd26d3-737e-4484-9782-19b17f34cd1f)</ept>)。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.IsServerGC">
          <source>The following example shows the contents of a sample application configuration file that enables server garbage collection.</source>
          <target state="translated">在以下示例启用服务器垃圾回收的示例应用程序配置文件的内容。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.IsServerGC">
          <source>The following example indicates whether the host computer is using server or workstation garbage collection.</source>
          <target state="translated">下面的示例指示主机计算机是否正在使用服务器或工作站垃圾回收。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[在 .NET Framework 4.5.1 和更高版本中受支持]</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode">
          <source>Gets or sets a value that indicates whether a full blocking garbage collection compacts the large object heap (LOH).</source>
          <target state="translated">获取或设置指示完全阻止垃圾回收是否压缩大型对象堆 (LOH) 的值。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode">
          <source>One of the enumeration values that indicates whether a full blocking garbage collection compacts the LOH.</source>
          <target state="translated">指示完全阻止垃圾回收是否压缩 LOH 的枚举值之一。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode">
          <source>The LOH is used for allocating memory for large objects (such as arrays) that require more than 85,000 bytes.</source>
          <target state="translated">LOH 用于分配需要多个 85,000 字节的大型对象 （如数组） 的内存。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode">
          <source>Because of the performance impact of copying large blocks of memory, the garbage collector ordinarily sweeps the   LOH, which involves creating a list of the memory locations that were occupied by dead objects and that can be reused to satisfy future requests for allocation of memory for large objects.</source>
          <target state="translated">由于复制较大的内存块的性能影响，垃圾回收器通常扫描 LOH，涉及到创建的已由死对象占用和可重用以满足将来请求的内存位置的列表大型对象的内存分配。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode">
          <source>However, in apps that make extensive use of the LOH to store transient objects, memory fragmentation can also adversely impact performance.</source>
          <target state="translated">但是，广泛的应用中使用的 LOH 存储临时对象，内存碎片可能会也可能反过来会影响性能。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode">
          <source>In this case, it is possible to use the <ph id="ph1">&lt;xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A&gt;</ph> property to compact rather than simply sweep the LOH during a garbage collection.</source>
          <target state="translated">在这种情况下，它是可以使用<ph id="ph1">&lt;xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A&gt;</ph>属性而不是只需扫描 LOH 在过程中压缩垃圾回收。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode">
          <source>The default value of the <ph id="ph1">&lt;xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A&gt;</ph> property is <ph id="ph2">&lt;xref:System.Runtime.GCLargeObjectHeapCompactionMode.Default?displayProperty=nameWithType&gt;</ph>, which indicates that the LOH is not compacted during garbage collections.</source>
          <target state="translated">默认值<ph id="ph1">&lt;xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A&gt;</ph>属性是<ph id="ph2">&lt;xref:System.Runtime.GCLargeObjectHeapCompactionMode.Default?displayProperty=nameWithType&gt;</ph>，指示在垃圾回收期间不会压缩 LOH。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode">
          <source>If you assign the property a value of <ph id="ph1">&lt;xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType&gt;</ph>, the LOH is compacted during the next full blocking garbage collection, and the property value is reset to <ph id="ph2">&lt;xref:System.Runtime.GCLargeObjectHeapCompactionMode.Default?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果将属性分配值为<ph id="ph1">&lt;xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType&gt;</ph>、 期间下一步完全阻止垃圾回收，压缩 LOH 和属性值将重置为<ph id="ph2">&lt;xref:System.Runtime.GCLargeObjectHeapCompactionMode.Default?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode">
          <source>Background garbage collections are not blocking.</source>
          <target state="translated">未阻止后台垃圾回收。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode">
          <source>This means that, if you set the <ph id="ph1">&lt;xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType&gt;</ph>, any background generation 2 collections that occur subsequently do not compact the LOH.</source>
          <target state="translated">这意味着，如果你设置<ph id="ph1">&lt;xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType&gt;</ph>、 生成任何随后出现的 2 集合不压缩 LOH 的背景。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode">
          <source>Only the first blocking generation 2 collection compacts the LOH.</source>
          <target state="translated">仅在第一个阻塞生成 2 回收压缩 LOH。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode">
          <source>After the <ph id="ph1">&lt;xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType&gt;</ph>, the next full blocking garbage collection (and compaction of the LOH) occurs at an indeterminate future time.</source>
          <target state="translated">后<ph id="ph1">&lt;xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A&gt;</ph>属性设置为<ph id="ph2">&lt;xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType&gt;</ph>下, 一个完整的阻碍性垃圾回收 （和压缩 LOH） 发生在不确定的未来时间。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode">
          <source>You can compact the LOH immediately by using code like the following:</source>
          <target state="translated">您可以立即压缩 LOH，通过使用代码如下所示：</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Runtime.GCSettings.LatencyMode">
          <source>Gets or sets the current latency mode for garbage collection.</source>
          <target state="translated">获取或设置垃圾回收的当前滞后时间模式。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LatencyMode">
          <source>One of the enumeration values that specifies the latency mode.</source>
          <target state="translated">指定滞后时间模式的枚举值之一。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LatencyMode">
          <source>You can reduce the level of intrusiveness of garbage collection in your application by setting the <ph id="ph1">&lt;xref:System.Runtime.GCLatencyMode&gt;</ph> to <ph id="ph2">&lt;xref:System.Runtime.GCLatencyMode.LowLatency&gt;</ph> during critical operations.</source>
          <target state="translated">你可以通过设置减少你的应用程序中垃圾回收的侵入性的级别<ph id="ph1">&lt;xref:System.Runtime.GCLatencyMode&gt;</ph>到<ph id="ph2">&lt;xref:System.Runtime.GCLatencyMode.LowLatency&gt;</ph>期间关键操作。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LatencyMode">
          <source>After such operations are completed, return to a higher latency mode so that more objects can be reclaimed to increase memory.</source>
          <target state="translated">此类操作完成后，返回到更高的延迟模式，以便可以回收更多对象以增加内存。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LatencyMode">
          <source>Ordinarily, you set the value of the <ph id="ph1">&lt;xref:System.Runtime.GCSettings.LatencyMode%2A&gt;</ph> property to define the garbage collector's latency mode.</source>
          <target state="translated">通常，你设置的值<ph id="ph1">&lt;xref:System.Runtime.GCSettings.LatencyMode%2A&gt;</ph>属性来定义垃圾回收器的滞后时间模式。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LatencyMode">
          <source>However, you cannot set the no GC region latency mode by assigning the <ph id="ph1">&lt;xref:System.Runtime.GCLatencyMode.NoGCRegion?displayProperty=nameWithType&gt;</ph> enumeration value to the <ph id="ph2">&lt;xref:System.Runtime.GCSettings.LatencyMode%2A&gt;</ph> property.</source>
          <target state="translated">但是，不能通过将分配设置无 GC 区域延迟模式<ph id="ph1">&lt;xref:System.Runtime.GCLatencyMode.NoGCRegion?displayProperty=nameWithType&gt;</ph>枚举值到<ph id="ph2">&lt;xref:System.Runtime.GCSettings.LatencyMode%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LatencyMode">
          <source>Instead, you call the <ph id="ph1">&lt;xref:System.GC.TryStartNoGCRegion%2A?displayProperty=nameWithType&gt;</ph> method to begin the no GC region latency mode, and you call the <ph id="ph2">&lt;xref:System.GC.EndNoGCRegion%2A?displayProperty=nameWithType&gt;</ph> to end it.</source>
          <target state="translated">而应调用<ph id="ph1">&lt;xref:System.GC.TryStartNoGCRegion%2A?displayProperty=nameWithType&gt;</ph>方法，以开始无 GC 区域延迟模式，并且你调用<ph id="ph2">&lt;xref:System.GC.EndNoGCRegion%2A?displayProperty=nameWithType&gt;</ph>结束它。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LatencyMode">
          <source>See <bpt id="p1">[</bpt>Latency Modes<ept id="p1">](~/docs/standard/garbage-collection/latency.md)</ept> for a discussion of how the runtime configuration settings for garbage collection affect the default value of the <ph id="ph1">&lt;xref:System.Runtime.GCLatencyMode&gt;</ph> enumeration.</source>
          <target state="translated">请参阅<bpt id="p1">[</bpt>滞后时间模式<ept id="p1">](~/docs/standard/garbage-collection/latency.md)</ept>有关垃圾回收的运行时配置设置如何影响的默认值的讨论<ph id="ph1">&lt;xref:System.Runtime.GCLatencyMode&gt;</ph>枚举。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Runtime.GCSettings.LatencyMode">
          <source>The <ph id="ph1">&lt;see cref="P:System.Runtime.GCSettings.LatencyMode" /&gt;</ph> property is being set to an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Runtime.GCSettings.LatencyMode" /&gt;</ph> 属性被设置为无效值。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Runtime.GCSettings.LatencyMode">
          <source>-or-</source>
          <target state="translated">或</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Runtime.GCSettings.LatencyMode">
          <source>The <ph id="ph1">&lt;see cref="P:System.Runtime.GCSettings.LatencyMode" /&gt;</ph> property cannot be set to <ph id="ph2">&lt;see cref="F:System.Runtime.GCLatencyMode.NoGCRegion" /&gt;</ph>.</source>
          <target state="translated">不能将 <ph id="ph1">&lt;see cref="P:System.Runtime.GCSettings.LatencyMode" /&gt;</ph> 属性设置为 <ph id="ph2">&lt;see cref="F:System.Runtime.GCLatencyMode.NoGCRegion" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LatencyMode">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任直接调用方。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LatencyMode">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">此成员不能由部分受信任或不透明的代码。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>