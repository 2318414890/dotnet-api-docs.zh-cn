<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ProfileOptimization.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5bd86c9e8585771817dff9c403cde415163613389.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bd86c9e8585771817dff9c403cde415163613389</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.ProfileOptimization">
          <source>Improves the startup performance of application domains in applications that require the just-in-time (JIT) compiler by performing background compilation of methods that are likely to be executed, based on profiles created during previous compilations.</source>
          <target state="translated">通过基于以前编译中创建的配置文件，执行可能执行的方法的后台编译，提高了需要实时 (JIT) 编译器的应用程序中应用程序域的启动性能。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ProfileOptimization">
          <source>Profile optimization requires a multicore computer.</source>
          <target state="translated">配置文件优化需要多核计算机。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ProfileOptimization">
          <source>The methods are ignored on other computers.</source>
          <target state="translated">方法将忽略在其他计算机上。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ProfileOptimization">
          <source>Each time you initiate profile optimization in an application domain, the profile that was created during the previous use is read.</source>
          <target state="translated">每次启动应用程序域中的配置文件优化读取已在以前的使用过程中创建的配置文件。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ProfileOptimization">
          <source>The information in the profile is used to guide background compilation by identifying the methods that are most likely to be executed during startup.</source>
          <target state="translated">配置文件中的信息用于标识最有可能在启动期间会执行的方法来指引后台编译。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ProfileOptimization">
          <source>On multicore computers, this increases the chances that a method is already compiled by the time it is needed so that the main application thread does not have to call the JIT compiler.</source>
          <target state="translated">在多核计算机上这样增加了一种方法已的可能性编译的以便不需要调用 JIT 编译器的主应用程序线程，它就所需的时间。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ProfileOptimization">
          <source>The profile file is overwritten on each use, so it always contains the most recent information about which methods are used during startup.</source>
          <target state="translated">每次使用的配置文件会覆盖，因此它始终包含有关哪些可以在启动过程中使用方法的最新信息。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ProfileOptimization">
          <source>Optimization profiles are not restricted to application domain startup.</source>
          <target state="translated">优化配置文件并不限于应用程序域启动。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ProfileOptimization">
          <source>They can be used for any activity that will require heavy use of the JIT compiler.</source>
          <target state="translated">它们可以用于将需要使用大量的 JIT 编译器的任何活动。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ProfileOptimization">
          <source>You can maintain multiple profiles for an application domain so that each such activity has its own profile.</source>
          <target state="translated">你可以维护应用程序域的多个配置文件，以便每个此类活动具有自己的配置文件。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ProfileOptimization">
          <source>To use optimization profiles in an application domain, you must call the <ph id="ph1">&lt;xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A&gt;</ph> method and specify the folder where profiles are stored.</source>
          <target state="translated">若要使用应用程序域中的优化配置文件，必须调用<ph id="ph1">&lt;xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A&gt;</ph>方法并指定存储配置文件的文件夹。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ProfileOptimization">
          <source>The folder must already exist.</source>
          <target state="translated">文件夹必须已存在。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ProfileOptimization">
          <source>To begin using a profile, call the <ph id="ph1">&lt;xref:System.Runtime.ProfileOptimization.StartProfile%2A&gt;</ph> method and specify the file name of the profile.</source>
          <target state="translated">若要开始使用配置文件，调用<ph id="ph1">&lt;xref:System.Runtime.ProfileOptimization.StartProfile%2A&gt;</ph>方法并指定配置文件的文件名称。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ProfileOptimization">
          <source>If the file was not recorded previously, it is created on first use.</source>
          <target state="translated">如果不以前记录的文件，则创建第一次使用它。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ProfileOptimization">
          <source>There is no performance benefit the first time a profile is created.</source>
          <target state="translated">创建一个配置文件没有性能优势第一个时间。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ProfileOptimization">
          <source>Profile optimization does not change the order in which methods are executed.</source>
          <target state="translated">配置文件优化不会更改方法的执行顺序。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ProfileOptimization">
          <source>Methods are not executed on the background thread; if a method is compiled but never called, it is simply not used.</source>
          <target state="translated">在后台线程，则不执行方法如果方法是编译，但永远不会调用，它是只是不使用。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ProfileOptimization">
          <source>If a profile file is corrupt or cannot be written to the specified folder (for example, because the folder does not exist), program execution continues without optimization profiling.</source>
          <target state="translated">如果配置文件已损坏或无法写入指定的文件夹 （例如，因为文件夹不存在），程序继续执行不含优化分析。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Runtime.ProfileOptimization.SetProfileRoot(System.String)">
          <source>The full path to the folder where profile files are stored for the current application domain.</source>
          <target state="translated">指向某个文件夹的完整路径，其中存储了用于当前应用程序域的配置文件。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Runtime.ProfileOptimization.SetProfileRoot(System.String)">
          <source>Enables optimization profiling for the current application domain, and sets the folder where the optimization profile files are stored.</source>
          <target state="translated">启用当前应用程序域的优化配置，并设置存储优化配置文件的文件夹。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Runtime.ProfileOptimization.SetProfileRoot(System.String)">
          <source>On a single-core computer, the method is ignored.</source>
          <target state="translated">在单核计算机上，此方法被忽略。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ProfileOptimization.SetProfileRoot(System.String)">
          <source>You must call this method before you call the <ph id="ph1">&lt;xref:System.Runtime.ProfileOptimization.StartProfile%2A&gt;</ph> method for the first time in the current application domain.</source>
          <target state="translated">你在调用之前，必须调用此方法<ph id="ph1">&lt;xref:System.Runtime.ProfileOptimization.StartProfile%2A&gt;</ph>第一次当前的应用程序域中的方法。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ProfileOptimization.SetProfileRoot(System.String)">
          <source>If you call <ph id="ph1">&lt;xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A&gt;</ph> more than once in the same application domain, all calls after the first are ignored.</source>
          <target state="translated">如果调用<ph id="ph1">&lt;xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A&gt;</ph>不止一次在相同的应用程序域中，第一个之后的所有调用将被都忽略。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ProfileOptimization.SetProfileRoot(System.String)">
          <source>The specified folder must already exist.</source>
          <target state="translated">指定的文件夹必须已存在。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ProfileOptimization.SetProfileRoot(System.String)">
          <source>If it does not exist, calling this method does not create it, and no profiling occurs.</source>
          <target state="translated">如果不存在，调用此方法不会创建它，也没有分析。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ProfileOptimization.SetProfileRoot(System.String)">
          <source>On computers that do not have multiple cores, this method is ignored.</source>
          <target state="translated">在计算机上不具有多个内核，此方法将被忽略。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ProfileOptimization.SetProfileRoot(System.String)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任直接调用方。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ProfileOptimization.SetProfileRoot(System.String)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">此成员不能由部分受信任或不透明的代码。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Runtime.ProfileOptimization.StartProfile(System.String)">
          <source>The file name of the profile to use.</source>
          <target state="translated">要使用的配置文件的文件名。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Runtime.ProfileOptimization.StartProfile(System.String)">
          <source>Starts just-in-time (JIT) compilation of the methods that were previously recorded in the specified profile file, on a background thread.</source>
          <target state="translated">启动方法的实时 (JIT) 编译，这些方法记录在后台线程上的指定配置文件中。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Runtime.ProfileOptimization.StartProfile(System.String)">
          <source>Starts the process of recording current method use, which later overwrites the specified profile file.</source>
          <target state="translated">开始记录当前方法的使用，此记录过程之后将覆盖指定的配置文件。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ProfileOptimization.StartProfile(System.String)">
          <source>If the specified profile exists in the folder specified by the <ph id="ph1">&lt;xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A&gt;</ph> method, the information it contains is used to determine the order in which methods are compiled on the background thread.</source>
          <target state="translated">如果指定的配置文件中指定的文件夹存在<ph id="ph1">&lt;xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A&gt;</ph>方法，它包含的信息用于确定方法在后台线程将编译的顺序。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ProfileOptimization.StartProfile(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.ProfileOptimization.StartProfile%2A&gt;</ph> method creates the profile if it does not already exist, and initiates the recording of method use.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.ProfileOptimization.StartProfile%2A&gt;</ph>方法创建配置文件，如果它尚不存在，并启动方法使用该录制。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ProfileOptimization.StartProfile(System.String)">
          <source>Only methods that are actually called are recorded, regardless of whether they were compiled on the background thread or on the main application thread.</source>
          <target state="translated">实际调用的方法将记录，而不考虑它们是否已编译的后台线程上或在主应用程序的线程。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ProfileOptimization.StartProfile(System.String)">
          <source>A method is compiled on the main application thread if the application needs to call it before the background thread has compiled it.</source>
          <target state="translated">如果应用程序需要调用它之前的后台线程已编译它，方法已编译的主应用程序线程上。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ProfileOptimization.StartProfile(System.String)">
          <source>The code that performs the recording tracks the rate at which methods are compiled, including methods that are compiled on both the background thread and on the main thread.</source>
          <target state="translated">执行该录制的代码跟踪从该处进行编译的方法，包括这两个的后台线程上和主线程上进行编译的方法的速率。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ProfileOptimization.StartProfile(System.String)">
          <source>When the rate falls below a predetermined level, recording stops.</source>
          <target state="translated">当速率低于预先确定的级别，记录将停止。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ProfileOptimization.StartProfile(System.String)">
          <source>Recording also stops if the rate of JIT compilation exceeds a predetermined upper limit.</source>
          <target state="translated">如果 JIT 编译的比率超过预先确定的上限，还将停止录制。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ProfileOptimization.StartProfile(System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A&gt;</ph> method has not been called for the current application domain, or if the computer does not have multiple cores, the <ph id="ph2">&lt;xref:System.Runtime.ProfileOptimization.StartProfile%2A&gt;</ph> method has no effect.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A&gt;</ph>不针对当前的应用程序域中，调用方法或如果计算机不具有多个核心，<ph id="ph2">&lt;xref:System.Runtime.ProfileOptimization.StartProfile%2A&gt;</ph>方法不起作用。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ProfileOptimization.StartProfile(System.String)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任直接调用方。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ProfileOptimization.StartProfile(System.String)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">此成员不能由部分受信任或不透明的代码。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>