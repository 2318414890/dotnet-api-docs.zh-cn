<Type Name="GCLatencyMode" FullName="System.Runtime.GCLatencyMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="def87dcaf8f4311f25295d30ba2dc3ff2ebcabce" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30487381" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum GCLatencyMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed GCLatencyMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.GCLatencyMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum GCLatencyMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class GCLatencyMode" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="4a114-101">调整垃圾收集器侵入应用程序的时间。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4a114-101">Adjusts the time that the garbage collector intrudes in your application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a114-102">可以通过设置应用程序中调整垃圾回收的侵入<xref:System.Runtime.GCSettings.LatencyMode%2A>属性设置为任何<xref:System.Runtime.GCLatencyMode>NoGCRegion 以外的枚举值。</span><span class="sxs-lookup"><span data-stu-id="4a114-102">You can adjust the intrusiveness of garbage collection in your application by setting the <xref:System.Runtime.GCSettings.LatencyMode%2A> property to any <xref:System.Runtime.GCLatencyMode> enumeration value except NoGCRegion.</span></span> <span data-ttu-id="4a114-103">您还可以通过以下方式确定垃圾回收器的当前滞后时间模式通过检索<xref:System.Runtime.GCSettings.LatencyMode%2A?displayProperty=nameWithType>属性值。</span><span class="sxs-lookup"><span data-stu-id="4a114-103">You can also determine the garbage collector's current latency mode by retrieving the <xref:System.Runtime.GCSettings.LatencyMode%2A?displayProperty=nameWithType> property value.</span></span>  
  
 <span data-ttu-id="4a114-104">请参阅[滞后时间模式](~/docs/standard/garbage-collection/latency.md)有关垃圾回收的运行时配置设置如何影响此枚举的默认值的讨论。</span><span class="sxs-lookup"><span data-stu-id="4a114-104">See [Latency Modes](~/docs/standard/garbage-collection/latency.md) for a discussion of how the runtime configuration settings for garbage collection affect the default value for this enumeration.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Batch">
      <MemberSignature Language="C#" Value="Batch" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.GCLatencyMode Batch = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.GCLatencyMode.Batch" />
      <MemberSignature Language="VB.NET" Value="Batch" />
      <MemberSignature Language="C++ CLI" Value="Batch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.GCLatencyMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a114-105">在批调用中禁用垃圾回收并发，并回收对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a114-105">Disables garbage collection concurrency and reclaims objects in a batch call.</span>
          </span>
          <span data-ttu-id="4a114-106">这是最高级别的侵入模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a114-106">This is the most intrusive mode.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a114-107">此模式下的适用的代价是牺牲响应能力的最大吞吐量。</span><span class="sxs-lookup"><span data-stu-id="4a114-107">This mode is designed for maximum throughput at the expense of responsiveness.</span></span>  
  
 <span data-ttu-id="4a114-108">此模式下将重写运行时配置设置。</span><span class="sxs-lookup"><span data-stu-id="4a114-108">This mode overrides the  runtime configuration setting.</span></span> <span data-ttu-id="4a114-109">如果启用，则切换到批处理模式下将阻止任何进一步的并发回收。</span><span class="sxs-lookup"><span data-stu-id="4a114-109">If  is enabled, switching to Batch mode prevents any further concurrent collections.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interactive">
      <MemberSignature Language="C#" Value="Interactive" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.GCLatencyMode Interactive = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.GCLatencyMode.Interactive" />
      <MemberSignature Language="VB.NET" Value="Interactive" />
      <MemberSignature Language="C++ CLI" Value="Interactive" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.GCLatencyMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a114-110">在应用程序运行时启用垃圾回收并发，并回收对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a114-110">Enables garbage collection concurrency and reclaims objects while the application is running.</span>
          </span>
          <span data-ttu-id="4a114-111">这是工作站上垃圾回收的默认模式，并且较 <see cref="F:System.Runtime.GCLatencyMode.Batch" /> 少受侵入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a114-111">This is the default mode for garbage collection on a workstation and is less intrusive than <see cref="F:System.Runtime.GCLatencyMode.Batch" />.</span>
          </span>
          <span data-ttu-id="4a114-112">它可以平衡响应性和吞吐量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a114-112">It balances responsiveness with throughput.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a114-113">此模式相当于就是并发的工作站上垃圾回收。</span><span class="sxs-lookup"><span data-stu-id="4a114-113">This mode is equivalent to garbage collection on a workstation that is concurrent.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LowLatency">
      <MemberSignature Language="C#" Value="LowLatency" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.GCLatencyMode LowLatency = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.GCLatencyMode.LowLatency" />
      <MemberSignature Language="VB.NET" Value="LowLatency" />
      <MemberSignature Language="C++ CLI" Value="LowLatency" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.GCLatencyMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a114-114">启用回收对象时比较保守的垃圾回收。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a114-114">Enables garbage collection that is more conservative in reclaiming objects.</span>
          </span>
          <span data-ttu-id="4a114-115">仅在系统遇到内存压力时才发生完全回收，而通常情况下发生 0 代和 1 代回收</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a114-115">Full collections occur only if the system is under memory pressure, whereas generation 0 and generation 1 collections might occur more frequently</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a114-116">此模式下不可用的服务器垃圾回收器。</span><span class="sxs-lookup"><span data-stu-id="4a114-116">This mode is not available for the server garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoGCRegion">
      <MemberSignature Language="C#" Value="NoGCRegion" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.GCLatencyMode NoGCRegion = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.GCLatencyMode.NoGCRegion" />
      <MemberSignature Language="VB.NET" Value="NoGCRegion" />
      <MemberSignature Language="C++ CLI" Value="NoGCRegion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.GCLatencyMode</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a114-117">指示当应用程序正在执行关键路径时挂起垃圾回收。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a114-117">Indicates that garbage collection is suspended while the app is executing a critical path.</span>
          </span>
          <span data-ttu-id="4a114-118">
            <see cref="F:System.Runtime.GCLatencyMode.NoGCRegion" /> 是一个只读值；也就是说，您不能将 <see cref="F:System.Runtime.GCLatencyMode.NoGCRegion" /> 值分配给 <see cref="P:System.Runtime.GCSettings.LatencyMode" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a114-118">
              <see cref="F:System.Runtime.GCLatencyMode.NoGCRegion" /> is a read-only value; that is, you cannot assign the <see cref="F:System.Runtime.GCLatencyMode.NoGCRegion" /> value to the <see cref="P:System.Runtime.GCSettings.LatencyMode" /> property.</span>
          </span>
          <span data-ttu-id="4a114-119">通过调用 <see cref="Overload:System.GC.TryStartNoGCRegion" /> 方法指定无 GC 区域延迟模式，并通过调用 <see cref="M:System.GC.EndNoGCRegion" /> 方法终止该模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a114-119">You specify the no GC region latency mode by calling the <see cref="Overload:System.GC.TryStartNoGCRegion" /> method and terminate it by calling the <see cref="M:System.GC.EndNoGCRegion" /> method.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SustainedLowLatency">
      <MemberSignature Language="C#" Value="SustainedLowLatency" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.GCLatencyMode SustainedLowLatency = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.GCLatencyMode.SustainedLowLatency" />
      <MemberSignature Language="VB.NET" Value="SustainedLowLatency" />
      <MemberSignature Language="C++ CLI" Value="SustainedLowLatency" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.GCLatencyMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a114-120">启用尝试减少延长时期的延迟的垃圾回收。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a114-120">Enables garbage collection that tries to minimize latency over an extended period.</span>
          </span>
          <span data-ttu-id="4a114-121">回收器尝试只执行生成 0、生成 1，以及并发只生成 2 个集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a114-121">The collector tries to perform only generation 0, generation 1, and concurrent generation 2 collections.</span>
          </span>
          <span data-ttu-id="4a114-122">如果系统处于内存压力之下，则完整的阻碍性回收还是会出现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a114-122">Full blocking collections may still occur if the system is under memory pressure.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>