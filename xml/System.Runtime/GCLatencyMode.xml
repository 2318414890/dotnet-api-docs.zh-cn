<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="GCLatencyMode.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5def87dcaf8f4311f25295d30ba2dc3ff2ebcabce.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">def87dcaf8f4311f25295d30ba2dc3ff2ebcabce</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.GCLatencyMode">
          <source>Adjusts the time that the garbage collector intrudes in your application.</source>
          <target state="translated">调整垃圾收集器侵入应用程序的时间。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.GCLatencyMode">
          <source>You can adjust the intrusiveness of garbage collection in your application by setting the <ph id="ph1">&lt;xref:System.Runtime.GCSettings.LatencyMode%2A&gt;</ph> property to any <ph id="ph2">&lt;xref:System.Runtime.GCLatencyMode&gt;</ph> enumeration value except NoGCRegion.</source>
          <target state="translated">可以通过设置应用程序中调整垃圾回收的侵入<ph id="ph1">&lt;xref:System.Runtime.GCSettings.LatencyMode%2A&gt;</ph>属性设置为任何<ph id="ph2">&lt;xref:System.Runtime.GCLatencyMode&gt;</ph>NoGCRegion 以外的枚举值。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.GCLatencyMode">
          <source>You can also determine the garbage collector's current latency mode by retrieving the <ph id="ph1">&lt;xref:System.Runtime.GCSettings.LatencyMode%2A?displayProperty=nameWithType&gt;</ph> property value.</source>
          <target state="translated">您还可以通过以下方式确定垃圾回收器的当前滞后时间模式通过检索<ph id="ph1">&lt;xref:System.Runtime.GCSettings.LatencyMode%2A?displayProperty=nameWithType&gt;</ph>属性值。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.GCLatencyMode">
          <source>See <bpt id="p1">[</bpt>Latency Modes<ept id="p1">](~/docs/standard/garbage-collection/latency.md)</ept> for a discussion of how the runtime configuration settings for garbage collection affect the default value for this enumeration.</source>
          <target state="translated">请参阅<bpt id="p1">[</bpt>滞后时间模式<ept id="p1">](~/docs/standard/garbage-collection/latency.md)</ept>有关垃圾回收的运行时配置设置如何影响此枚举的默认值的讨论。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="F:System.Runtime.GCLatencyMode.Batch">
          <source>Disables garbage collection concurrency and reclaims objects in a batch call.</source>
          <target state="translated">在批调用中禁用垃圾回收并发，并回收对象。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="F:System.Runtime.GCLatencyMode.Batch">
          <source>This is the most intrusive mode.</source>
          <target state="translated">这是最高级别的侵入模式。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.GCLatencyMode.Batch">
          <source>This mode is designed for maximum throughput at the expense of responsiveness.</source>
          <target state="translated">此模式下的适用的代价是牺牲响应能力的最大吞吐量。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.GCLatencyMode.Batch">
          <source>This mode overrides the  runtime configuration setting.</source>
          <target state="translated">此模式下将重写运行时配置设置。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.GCLatencyMode.Batch">
          <source>If  is enabled, switching to Batch mode prevents any further concurrent collections.</source>
          <target state="translated">如果启用，则切换到批处理模式下将阻止任何进一步的并发回收。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="F:System.Runtime.GCLatencyMode.Interactive">
          <source>Enables garbage collection concurrency and reclaims objects while the application is running.</source>
          <target state="translated">在应用程序运行时启用垃圾回收并发，并回收对象。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="F:System.Runtime.GCLatencyMode.Interactive">
          <source>This is the default mode for garbage collection on a workstation and is less intrusive than <ph id="ph1">&lt;see cref="F:System.Runtime.GCLatencyMode.Batch" /&gt;</ph>.</source>
          <target state="translated">这是工作站上垃圾回收的默认模式，并且较 <ph id="ph1">&lt;see cref="F:System.Runtime.GCLatencyMode.Batch" /&gt;</ph> 少受侵入。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="F:System.Runtime.GCLatencyMode.Interactive">
          <source>It balances responsiveness with throughput.</source>
          <target state="translated">它可以平衡响应性和吞吐量。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.GCLatencyMode.Interactive">
          <source>This mode is equivalent to garbage collection on a workstation that is concurrent.</source>
          <target state="translated">此模式相当于就是并发的工作站上垃圾回收。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="F:System.Runtime.GCLatencyMode.LowLatency">
          <source>Enables garbage collection that is more conservative in reclaiming objects.</source>
          <target state="translated">启用回收对象时比较保守的垃圾回收。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="F:System.Runtime.GCLatencyMode.LowLatency">
          <source>Full collections occur only if the system is under memory pressure, whereas generation 0 and generation 1 collections might occur more frequently</source>
          <target state="translated">仅在系统遇到内存压力时才发生完全回收，而通常情况下发生 0 代和 1 代回收</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.GCLatencyMode.LowLatency">
          <source>This mode is not available for the server garbage collector.</source>
          <target state="translated">此模式下不可用的服务器垃圾回收器。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="F:System.Runtime.GCLatencyMode.NoGCRegion">
          <source>Indicates that garbage collection is suspended while the app is executing a critical path.</source>
          <target state="translated">指示当应用程序正在执行关键路径时挂起垃圾回收。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="F:System.Runtime.GCLatencyMode.NoGCRegion">
          <source><ph id="ph1">&lt;see cref="F:System.Runtime.GCLatencyMode.NoGCRegion" /&gt;</ph> is a read-only value; that is, you cannot assign the <ph id="ph2">&lt;see cref="F:System.Runtime.GCLatencyMode.NoGCRegion" /&gt;</ph> value to the <ph id="ph3">&lt;see cref="P:System.Runtime.GCSettings.LatencyMode" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Runtime.GCLatencyMode.NoGCRegion" /&gt;</ph> 是一个只读值；也就是说，您不能将 <ph id="ph2">&lt;see cref="F:System.Runtime.GCLatencyMode.NoGCRegion" /&gt;</ph> 值分配给 <ph id="ph3">&lt;see cref="P:System.Runtime.GCSettings.LatencyMode" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="F:System.Runtime.GCLatencyMode.NoGCRegion">
          <source>You specify the no GC region latency mode by calling the <ph id="ph1">&lt;see cref="Overload:System.GC.TryStartNoGCRegion" /&gt;</ph> method and terminate it by calling the <ph id="ph2">&lt;see cref="M:System.GC.EndNoGCRegion" /&gt;</ph> method.</source>
          <target state="translated">通过调用 <ph id="ph1">&lt;see cref="Overload:System.GC.TryStartNoGCRegion" /&gt;</ph> 方法指定无 GC 区域延迟模式，并通过调用 <ph id="ph2">&lt;see cref="M:System.GC.EndNoGCRegion" /&gt;</ph> 方法终止该模式。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="F:System.Runtime.GCLatencyMode.SustainedLowLatency">
          <source>Enables garbage collection that tries to minimize latency over an extended period.</source>
          <target state="translated">启用尝试减少延长时期的延迟的垃圾回收。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="F:System.Runtime.GCLatencyMode.SustainedLowLatency">
          <source>The collector tries to perform only generation 0, generation 1, and concurrent generation 2 collections.</source>
          <target state="translated">回收器尝试只执行生成 0、生成 1，以及并发只生成 2 个集合。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="F:System.Runtime.GCLatencyMode.SustainedLowLatency">
          <source>Full blocking collections may still occur if the system is under memory pressure.</source>
          <target state="translated">如果系统处于内存压力之下，则完整的阻碍性回收还是会出现。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>