<Type Name="IDbDataAdapter" FullName="System.Data.IDbDataAdapter">
  <TypeSignature Language="C#" Value="public interface IDbDataAdapter : System.Data.IDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbDataAdapter implements class System.Data.IDataAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDbDataAdapter&#xA;Implements IDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDbDataAdapter : System::Data::IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="7e17b-101">表示一组与命令有关的属性，用于填充 <see cref="T:System.Data.DataSet" /> 和更新数据源，由访问关系数据库的 .NET Framework 数据提供程序实现。</span><span class="sxs-lookup"><span data-stu-id="7e17b-101">Represents a set of command-related properties that are used to fill the <see cref="T:System.Data.DataSet" /> and update a data source, and is implemented by .NET Framework data providers that access relational databases.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e17b-102"><xref:System.Data.IDbDataAdapter>接口继承自<xref:System.Data.IDataAdapter>接口，并允许创建 DataAdapter 专用于关系数据库对象。</span><span class="sxs-lookup"><span data-stu-id="7e17b-102">The <xref:System.Data.IDbDataAdapter> interface inherits from the <xref:System.Data.IDataAdapter> interface and allows an object to create a DataAdapter designed for use with a relational database.</span></span> <span data-ttu-id="7e17b-103"><xref:System.Data.IDbDataAdapter>接口和实用程序类，（可选） <xref:System.Data.Common.DbDataAdapter>，允许继承类实现 DataAdapter 类，该类表示的数据源之间的桥梁和<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="7e17b-103">The <xref:System.Data.IDbDataAdapter> interface and, optionally, the utility class, <xref:System.Data.Common.DbDataAdapter>, allow an inheriting class to implement a DataAdapter class, which represents the bridge between a data source and a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="7e17b-104">有关 DataAdapter 类的详细信息，请参阅[填充数据集从 DataAdapter](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md)。</span><span class="sxs-lookup"><span data-stu-id="7e17b-104">For more information about DataAdapter classes, see [Populating a DataSet from a DataAdapter](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md).</span></span> <span data-ttu-id="7e17b-105">有关实现.NET Framework 数据提供程序的详细信息，请参阅[ &#91; \<topic://cpconimplementingnetdataprovider >&#93;](http://msdn.microsoft.com/library/a9fa1926-071b-4c6f-997d-a16bac633852)。</span><span class="sxs-lookup"><span data-stu-id="7e17b-105">For more information about implementing .NET Framework data providers, see [&#91;\<topic://cpconimplementingnetdataprovider>&#93;](http://msdn.microsoft.com/library/a9fa1926-071b-4c6f-997d-a16bac633852).</span></span>  
  
 <span data-ttu-id="7e17b-106">应用程序不会创建的实例<xref:System.Data.IDbDataAdapter>接口直接，但创建继承的类的实例<xref:System.Data.IDbDataAdapter>和<xref:System.Data.Common.DbDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="7e17b-106">An application does not create an instance of the <xref:System.Data.IDbDataAdapter> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDbDataAdapter> and <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="7e17b-107">继承的类<xref:System.Data.IDbDataAdapter>必须实现继承的成员，且通常定义其他成员来添加提供程序特定的功能。</span><span class="sxs-lookup"><span data-stu-id="7e17b-107">Classes that inherit <xref:System.Data.IDbDataAdapter> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="7e17b-108">例如，<xref:System.Data.IDbDataAdapter>接口定义<xref:System.Data.IDbDataAdapter.SelectCommand%2A>属性，与<xref:System.Data.Common.DbDataAdapter>接口定义<xref:System.Data.IDataAdapter.Fill%2A>采用的方法<xref:System.Data.DataTable>作为参数。</span><span class="sxs-lookup"><span data-stu-id="7e17b-108">For example, the <xref:System.Data.IDbDataAdapter> interface defines the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property, and the <xref:System.Data.Common.DbDataAdapter> interface defines a <xref:System.Data.IDataAdapter.Fill%2A> method that takes a <xref:System.Data.DataTable> as a parameter.</span></span> <span data-ttu-id="7e17b-109">反过来，<xref:System.Data.OleDb.OleDbDataAdapter>类继承<xref:System.Data.IDbDataAdapter.SelectCommand%2A>属性和<xref:System.Data.Common.DbDataAdapter.Fill%2A>方法，并还定义了两个其他重载<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>作为参数的 ADO 记录集对象的方法。</span><span class="sxs-lookup"><span data-stu-id="7e17b-109">In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property and the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method, and also defines two additional overloads of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method that take an ADO Recordset object as a parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7e17b-110">下面的示例使用派生的类中， <xref:System.Data.SqlClient.SqlCommand>，<xref:System.Data.SqlClient.SqlDataAdapter>和<xref:System.Data.SqlClient.SqlConnection>、 从数据源选择记录。</span><span class="sxs-lookup"><span data-stu-id="7e17b-110">The following example uses the derived classes, <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter> and <xref:System.Data.SqlClient.SqlConnection>, to select records from a data source.</span></span> <span data-ttu-id="7e17b-111">实心<xref:System.Data.DataSet>随后会返回。</span><span class="sxs-lookup"><span data-stu-id="7e17b-111">The filled <xref:System.Data.DataSet> is then returned.</span></span> <span data-ttu-id="7e17b-112">若要完成此操作，该方法传递初始化<xref:System.Data.DataSet>，连接字符串和是 TRANSACT-SQL SELECT 语句的查询字符串。</span><span class="sxs-lookup"><span data-stu-id="7e17b-112">To accomplish this, the method is passed an initialized <xref:System.Data.DataSet>, a connection string, and a query string that is a Transact-SQL SELECT statement.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="7e17b-113">若要提升.NET Framework 数据提供程序之间的一致性，将窗体中的继承类<paramref name="Prv" />DataAdapter 其中<paramref name="Prv" />是为特定的.NET Framework 数据提供程序命名空间中的所有类提供的统一前缀。</span><span class="sxs-lookup"><span data-stu-id="7e17b-113">To promote consistency among .NET Framework data providers, name the inheriting class in the form <paramref name="Prv" /> DataAdapter where <paramref name="Prv" /> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</span></span> <span data-ttu-id="7e17b-114">例如，<paramref name="Sql" />的前缀<see cref="T:System.Data.SqlClient.SqlDataAdapter" />类<see langword="System.Data.SqlClient" />命名空间。</span><span class="sxs-lookup"><span data-stu-id="7e17b-114">For example, <paramref name="Sql" /> is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the <see langword="System.Data.SqlClient" /> namespace.</span></span>  
  
 <span data-ttu-id="7e17b-115">继承自<see cref="T:System.Data.IDbDataAdapter" />接口，则应实现以下构造函数：</span><span class="sxs-lookup"><span data-stu-id="7e17b-115">When you inherit from the <see cref="T:System.Data.IDbDataAdapter" /> interface, you should implement the following constructors:</span></span>  
  
 <span data-ttu-id="7e17b-116"><list type="table"><listheader><term> 项</span><span class="sxs-lookup"><span data-stu-id="7e17b-116"><list type="table"><listheader><term> Item</span></span>  
  
 <span data-ttu-id="7e17b-117"></term><description> 描述</span><span class="sxs-lookup"><span data-stu-id="7e17b-117"></term><description> Description</span></span>  
  
 <span data-ttu-id="7e17b-118"></description></listheader><item><term> PrvDataAdapter()</span><span class="sxs-lookup"><span data-stu-id="7e17b-118"></description></listheader><item><term> PrvDataAdapter()</span></span>  
  
 <span data-ttu-id="7e17b-119"></term><description> 初始化 PrvDataAdapter 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="7e17b-119"></term><description> Initializes a new instance of the PrvDataAdapter class.</span></span>  
  
 <span data-ttu-id="7e17b-120"></description></item><item><term> PrvDataAdapter (PrvCommand selectCommand)</span><span class="sxs-lookup"><span data-stu-id="7e17b-120"></description></item><item><term> PrvDataAdapter(PrvCommand selectCommand)</span></span>  
  
 <span data-ttu-id="7e17b-121"></term><description> 初始化具有指定的 SQL SELECT 语句的 PrvDataAdapter 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="7e17b-121"></term><description> Initializes a new instance of the PrvDataAdapter class with the specified SQL SELECT statement.</span></span>  
  
 <span data-ttu-id="7e17b-122"></description></item><item><term> PrvDataAdapter （字符串 selectCommandText，字符串 selectConnectionString）</span><span class="sxs-lookup"><span data-stu-id="7e17b-122"></description></item><item><term> PrvDataAdapter(string selectCommandText, string selectConnectionString)</span></span>  
  
 <span data-ttu-id="7e17b-123"></term><description> 初始化具有 SQL SELECT 语句和连接字符串的 PrvDataAdapter 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="7e17b-123"></term><description> Initializes a new instance of the PrvDataAdapter class with an SQL SELECT statement and a connection string.</span></span>  
  
 <span data-ttu-id="7e17b-124"></description></item><item><term> PrvDataAdapter （字符串 selectCommandText，PrvConnection selectConnection）</span><span class="sxs-lookup"><span data-stu-id="7e17b-124"></description></item><item><term> PrvDataAdapter(string selectCommandText, PrvConnection selectConnection)</span></span>  
  
 <span data-ttu-id="7e17b-125"></term><description> 初始化使用的 SQL SELECT 语句和 PrvConnection 对象 PrvDataAdapter 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="7e17b-125"></term><description> Initializes a new instance of the PrvDataAdapter class with an SQL SELECT statement and a PrvConnection object.</span></span>  
  
 </description></item></list></para>
    </block>
  </Docs>
  <Members>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e17b-126">获取或设置用于从数据集中删除记录的 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="7e17b-126">Gets or sets an SQL statement for deleting records from the data set.</span></span></summary>
        <value><span data-ttu-id="7e17b-127"><see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中已删除的行删除数据源中的记录。</span><span class="sxs-lookup"><span data-stu-id="7e17b-127">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e17b-128">期间<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果未设置此属性和主键信息位于<xref:System.Data.DataSet>、<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>可以自动生成，如果你设置`SelectCommand`.NET Framework 数据提供程序的属性。</span><span class="sxs-lookup"><span data-stu-id="7e17b-128">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="7e17b-129">然后，由 CommandBuilder 生成未设置任何其他命令。</span><span class="sxs-lookup"><span data-stu-id="7e17b-129">Then, any additional commands that you do not set are generated by the CommandBuilder.</span></span> <span data-ttu-id="7e17b-130">此生成的逻辑需要要中存在的键列信息<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="7e17b-130">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="7e17b-131">有关详细信息请参阅[使用 Commandbuilder 生成命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="7e17b-131">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="7e17b-132">当<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>分配到以前创建<xref:System.Data.IDbCommand>、<xref:System.Data.IDbCommand>不克隆。</span><span class="sxs-lookup"><span data-stu-id="7e17b-132">When <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="7e17b-133"><xref:System.Data.IDbDataAdapter.DeleteCommand%2A>保留以前创建的引用<xref:System.Data.IDbCommand>对象。</span><span class="sxs-lookup"><span data-stu-id="7e17b-133">The <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7e17b-134">下面的示例创建的继承实例<xref:System.Data.OleDb.OleDbDataAdapter>类，并设置<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>和<xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7e17b-134">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> properties.</span></span> <span data-ttu-id="7e17b-135">它假定你已创建<xref:System.Data.OleDb.OleDbConnection>对象。</span><span class="sxs-lookup"><span data-stu-id="7e17b-135">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e17b-136">获取或设置用于将新记录插入到数据源中的 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="7e17b-136">Gets or sets an SQL statement used to insert new records into the data source.</span></span></summary>
        <value><span data-ttu-id="7e17b-137">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中的新行将记录插入到数据源。</span><span class="sxs-lookup"><span data-stu-id="7e17b-137">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e17b-138">期间<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果未设置此属性和主键信息位于<xref:System.Data.DataSet>、<xref:System.Data.IDbDataAdapter.InsertCommand%2A>可以自动生成，如果你设置`SelectCommand`.NET Framework 数据提供程序的属性。</span><span class="sxs-lookup"><span data-stu-id="7e17b-138">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.InsertCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="7e17b-139">然后，由 CommandBuilder 生成未设置任何其他命令。</span><span class="sxs-lookup"><span data-stu-id="7e17b-139">Then, any additional commands that you do not set are generated by the CommandBuilder.</span></span> <span data-ttu-id="7e17b-140">此生成的逻辑需要要中存在的键列信息<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="7e17b-140">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="7e17b-141">有关详细信息请参阅[使用 Commandbuilder 生成命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="7e17b-141">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="7e17b-142">当<xref:System.Data.IDbDataAdapter.InsertCommand%2A>分配到以前创建<xref:System.Data.IDbCommand>、<xref:System.Data.IDbCommand>不克隆。</span><span class="sxs-lookup"><span data-stu-id="7e17b-142">When <xref:System.Data.IDbDataAdapter.InsertCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="7e17b-143"><xref:System.Data.IDbDataAdapter.InsertCommand%2A>保留以前创建的引用<xref:System.Data.IDbCommand>对象。</span><span class="sxs-lookup"><span data-stu-id="7e17b-143">The <xref:System.Data.IDbDataAdapter.InsertCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7e17b-144">如果执行此命令返回行，这些行可能添加到<xref:System.Data.DataSet>具体取决于你如何设置<xref:System.Data.IDbCommand.UpdatedRowSource%2A>属性<xref:System.Data.IDbCommand>对象。</span><span class="sxs-lookup"><span data-stu-id="7e17b-144">If execution of this command returns rows, these rows may be added to the <xref:System.Data.DataSet> depending on how you set the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property of the <xref:System.Data.IDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7e17b-145">下面的示例创建的继承实例<xref:System.Data.OleDb.OleDbDataAdapter>类，并设置<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>和<xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7e17b-145">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="7e17b-146">它假定你已创建<xref:System.Data.OleDb.OleDbConnection>对象。</span><span class="sxs-lookup"><span data-stu-id="7e17b-146">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e17b-147">获取或设置用于在数据源中选择记录的 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="7e17b-147">Gets or sets an SQL statement used to select records in the data source.</span></span></summary>
        <value><span data-ttu-id="7e17b-148">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />，它从数据源中选择记录以便放入数据集中。</span><span class="sxs-lookup"><span data-stu-id="7e17b-148">An <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e17b-149">当<xref:System.Data.IDbDataAdapter.SelectCommand%2A>分配到以前创建<xref:System.Data.IDbCommand>、<xref:System.Data.IDbCommand>不克隆。</span><span class="sxs-lookup"><span data-stu-id="7e17b-149">When <xref:System.Data.IDbDataAdapter.SelectCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="7e17b-150"><xref:System.Data.IDbDataAdapter.SelectCommand%2A>保留以前创建的引用<xref:System.Data.IDbCommand>对象。</span><span class="sxs-lookup"><span data-stu-id="7e17b-150">The <xref:System.Data.IDbDataAdapter.SelectCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
 <span data-ttu-id="7e17b-151">如果<xref:System.Data.IDbDataAdapter.SelectCommand%2A>不返回任何行，没有表将添加到<xref:System.Data.DataSet>，并且不引发任何异常。</span><span class="sxs-lookup"><span data-stu-id="7e17b-151">If the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7e17b-152">下面的示例创建的继承实例<xref:System.Data.OleDb.OleDbDataAdapter>类，并设置<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>和<xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7e17b-152">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="7e17b-153">它假定你已创建<xref:System.Data.OleDb.OleDbConnection>对象。</span><span class="sxs-lookup"><span data-stu-id="7e17b-153">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e17b-154">获取或设置用于更新数据源中的记录的 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="7e17b-154">Gets or sets an SQL statement used to update records in the data source.</span></span></summary>
        <value><span data-ttu-id="7e17b-155">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中已修改的行更新数据源中的记录。</span><span class="sxs-lookup"><span data-stu-id="7e17b-155">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e17b-156">期间<xref:System.Data.Common.DbDataAdapter.Update%2A>，如果未设置此属性和主键信息位于<xref:System.Data.DataSet>、<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>可以自动生成，如果你设置`SelectCommand`.NET Framework 数据提供程序的属性。</span><span class="sxs-lookup"><span data-stu-id="7e17b-156">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="7e17b-157">然后，由 CommandBuilder 生成未设置任何其他命令。</span><span class="sxs-lookup"><span data-stu-id="7e17b-157">Then, any additional commands that you do not set are generated by the CommandBuilder.</span></span> <span data-ttu-id="7e17b-158">此生成的逻辑需要要中存在的键列信息<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="7e17b-158">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="7e17b-159">有关详细信息请参阅[使用 Commandbuilder 生成命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="7e17b-159">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="7e17b-160">当<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>分配到以前创建<xref:System.Data.IDbCommand>、<xref:System.Data.IDbCommand>不克隆。</span><span class="sxs-lookup"><span data-stu-id="7e17b-160">When <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="7e17b-161"><xref:System.Data.IDbDataAdapter.UpdateCommand%2A>保留以前创建的引用<xref:System.Data.IDbCommand>对象。</span><span class="sxs-lookup"><span data-stu-id="7e17b-161">The <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7e17b-162">如果执行此命令返回行，将这些行添加到<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="7e17b-162">If execution of this command returns rows, these rows are added to the <xref:System.Data.DataSet>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7e17b-163">下面的示例创建的继承实例<xref:System.Data.OleDb.OleDbDataAdapter>类，并设置<xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>和<xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="7e17b-163">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> properties.</span></span> <span data-ttu-id="7e17b-164">它假定你已创建<xref:System.Data.OleDb.OleDbConnection>对象。</span><span class="sxs-lookup"><span data-stu-id="7e17b-164">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>