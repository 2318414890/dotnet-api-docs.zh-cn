<Type Name="EnumerableRowCollectionExtensions" FullName="System.Data.EnumerableRowCollectionExtensions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6f87d7f11d8d1b3b5e5dcb2e4ac9512206187e2a" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51903315" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class EnumerableRowCollectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EnumerableRowCollectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.EnumerableRowCollectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module EnumerableRowCollectionExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class EnumerableRowCollectionExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type EnumerableRowCollectionExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="54db8-101">包含数据行集合类的扩展方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="54db8-101">Contains the extension methods for the data row collection classes.</span>
      </span>
      <span data-ttu-id="54db8-102">此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</span>
      <span class="sxs-lookup">
        <span data-stu-id="54db8-102">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54db8-103"><xref:System.Data.EnumerableRowCollectionExtensions>类包含定义的静态扩展方法<xref:System.Data.EnumerableRowCollectionExtensions.Cast%2A>方法，并为标准查询运算<xref:System.Data.EnumerableRowCollection%601>和<xref:System.Data.OrderedEnumerableRowCollection%601>类。</span><span class="sxs-lookup"><span data-stu-id="54db8-103">The <xref:System.Data.EnumerableRowCollectionExtensions> class contains static extension methods that define the <xref:System.Data.EnumerableRowCollectionExtensions.Cast%2A> method and standard query operations for the <xref:System.Data.EnumerableRowCollection%601> and <xref:System.Data.OrderedEnumerableRowCollection%601> classes.</span></span>  
  
 <span data-ttu-id="54db8-104">此类不能被继承，但不能实例化。</span><span class="sxs-lookup"><span data-stu-id="54db8-104">This class cannot be inherited and cannot be instantiated.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.EnumerableRowCollection`1" />
    <altmember cref="T:System.Data.OrderedEnumerableRowCollection`1" />
    <related type="Article" href="https://msdn.microsoft.com/library/24cda21e-8af8-4632-b519-c404a839b9b2">
      <span data-ttu-id="54db8-105">标准查询运算符概述</span>
      <span class="sxs-lookup">
        <span data-stu-id="54db8-105">Standard Query Operators Overview</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="Cast&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.EnumerableRowCollection&lt;TResult&gt; Cast&lt;TResult&gt; (this System.Data.EnumerableRowCollection source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EnumerableRowCollection`1&lt;!!TResult&gt; Cast&lt;TResult&gt;(class System.Data.EnumerableRowCollection source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Cast(Of TResult) (source As EnumerableRowCollection) As EnumerableRowCollection(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::EnumerableRowCollection&lt;TResult&gt; ^ Cast(System::Data::EnumerableRowCollection ^ source);" />
      <MemberSignature Language="F#" Value="static member Cast : System.Data.EnumerableRowCollection -&gt; System.Data.EnumerableRowCollection&lt;'Result&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.Cast source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EnumerableRowCollection&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="54db8-106">源中的元素要转换成的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-106">The type to convert the elements of source to.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="54db8-107">包含要转换的元素的 <see cref="T:System.Data.EnumerableRowCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-107">The <see cref="T:System.Data.EnumerableRowCollection" /> that contains the elements to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54db8-108">将 <see cref="T:System.Data.EnumerableRowCollection" /> 的元素转换为指定的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-108">Converts the elements of an <see cref="T:System.Data.EnumerableRowCollection" /> to the specified type.</span>
          </span>
          <span data-ttu-id="54db8-109">此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-109">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54db8-110">一个 <see cref="T:System.Data.EnumerableRowCollection" />，其中包含已转换为指定类型的源序列的每个元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-110">An <see cref="T:System.Data.EnumerableRowCollection" /> that contains each element of the source sequence converted to the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54db8-111">此方法实现通过使用延迟的执行。</span><span class="sxs-lookup"><span data-stu-id="54db8-111">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="54db8-112">即时的返回值是存储执行操作所需的所有信息的对象。</span><span class="sxs-lookup"><span data-stu-id="54db8-112">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="54db8-113">直到或者通过调用枚举的对象不执行此方法所表示的查询及其`GetEnumerator`方法直接或通过使用`foreach`在 Visual C# 或`For Each`在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="54db8-113">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="54db8-114">
            <paramref name="source" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-114">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="54db8-115">序列中的元素不能强制转换为 <paramref name="TResult" /> 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-115">An element in the sequence cannot be cast to type <paramref name="TResult" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Data.EnumerableRowCollection" />
        <altmember cref="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderBy&lt;TRow,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="54db8-116">按升序排序 <see cref="T:System.Data.EnumerableRowCollection" /> 的行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-116">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order.</span>
          </span>
          <span data-ttu-id="54db8-117">此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-117">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderBy&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; OrderBy&lt;TRow,TKey&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; OrderBy&lt;TRow, TKey&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy(Of TRow, TKey) (source As EnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ OrderBy(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member OrderBy : System.Data.EnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.OrderBy (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="54db8-118">中的行元素的类型<c>源</c>，通常<see cref="T:System.Data.DataRow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-118">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="54db8-119">返回的键的类型<c>keySelector</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-119">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="54db8-120">包含要排序的 <see cref="T:System.Data.EnumerableRowCollection" /> 元素的 <see cref="T:System.Data.DataRow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-120">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="54db8-121">用于从元素中提取键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-121">A function to extract a key from an element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54db8-122">按指定键升序排序 <see cref="T:System.Data.EnumerableRowCollection" /> 的行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-122">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order according to the specified key.</span>
          </span>
          <span data-ttu-id="54db8-123">此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-123">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54db8-124">一个 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其元素按指定键排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-124">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54db8-125">此方法实现通过使用延迟的执行。</span><span class="sxs-lookup"><span data-stu-id="54db8-125">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="54db8-126">即时的返回值是存储执行操作所需的所有信息的对象。</span><span class="sxs-lookup"><span data-stu-id="54db8-126">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="54db8-127">直到或者通过调用枚举的对象不执行此方法所表示的查询及其`GetEnumerator`方法直接或通过使用`foreach`在 Visual C# 或`For Each`在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="54db8-127">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.ThenBy" />
        <altmember cref="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <Member MemberName="OrderBy&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; OrderBy&lt;TRow,TKey&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; OrderBy&lt;TRow, TKey&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy(Of TRow, TKey) (source As EnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey), comparer As IComparer(Of TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ OrderBy(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member OrderBy : System.Data.EnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.OrderBy (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="54db8-128">中的行元素的类型<c>源</c>，通常<see cref="T:System.Data.DataRow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-128">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="54db8-129">返回的键的类型<c>keySelector</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-129">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="54db8-130">包含要排序的 <see cref="T:System.Data.EnumerableRowCollection" /> 元素的 <see cref="T:System.Data.DataRow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-130">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="54db8-131">用于从元素中提取键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-131">A function to extract a key from an element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="54db8-132">用于比较键的 <see cref="T:System.Collections.Generic.IComparer`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-132">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54db8-133">按指定键和比较器升序排序 <see cref="T:System.Data.EnumerableRowCollection" /> 的行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-133">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order according to the specified key and comparer.</span>
          </span>
          <span data-ttu-id="54db8-134">此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-134">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54db8-135">一个 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其元素按指定键和比较器排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-135">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key and comparer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54db8-136">此方法实现通过使用延迟的执行。</span><span class="sxs-lookup"><span data-stu-id="54db8-136">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="54db8-137">即时的返回值是存储执行操作所需的所有信息的对象。</span><span class="sxs-lookup"><span data-stu-id="54db8-137">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="54db8-138">直到或者通过调用枚举的对象不执行此方法所表示的查询及其`GetEnumerator`方法直接或通过使用`foreach`在 Visual C# 或`For Each`在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="54db8-138">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.ThenBy" />
        <altmember cref="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderByDescending&lt;TRow,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="54db8-139">按降序排序 <see cref="T:System.Data.EnumerableRowCollection" /> 的行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-139">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order.</span>
          </span>
          <span data-ttu-id="54db8-140">此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-140">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderByDescending&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; OrderByDescending&lt;TRow,TKey&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; OrderByDescending&lt;TRow, TKey&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending(Of TRow, TKey) (source As EnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ OrderByDescending(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member OrderByDescending : System.Data.EnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.OrderByDescending (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="54db8-141">中的行元素的类型<c>源</c>，通常<see cref="T:System.Data.DataRow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-141">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="54db8-142">返回的键的类型<c>keySelector</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-142">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="54db8-143">包含要排序的 <see cref="T:System.Data.EnumerableRowCollection" /> 元素的 <see cref="T:System.Data.DataRow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-143">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="54db8-144">用于从元素中提取键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-144">A function to extract a key from an element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54db8-145">按指定键降序排序 <see cref="T:System.Data.EnumerableRowCollection" /> 的行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-145">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order according to the specified key.</span>
          </span>
          <span data-ttu-id="54db8-146">此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-146">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54db8-147">一个 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其元素按指定键排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-147">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54db8-148">此方法实现通过使用延迟的执行。</span><span class="sxs-lookup"><span data-stu-id="54db8-148">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="54db8-149">即时的返回值是存储执行操作所需的所有信息的对象。</span><span class="sxs-lookup"><span data-stu-id="54db8-149">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="54db8-150">直到或者通过调用枚举的对象不执行此方法所表示的查询及其`GetEnumerator`方法直接或通过使用`foreach`在 Visual C# 或`For Each`在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="54db8-150">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.ThenByDescending" />
        <altmember cref="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
      </Docs>
    </Member>
    <Member MemberName="OrderByDescending&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; OrderByDescending&lt;TRow,TKey&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; OrderByDescending&lt;TRow, TKey&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending(Of TRow, TKey) (source As EnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey), comparer As IComparer(Of TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ OrderByDescending(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member OrderByDescending : System.Data.EnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.OrderByDescending (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="54db8-151">中的行元素的类型<c>源</c>，通常<see cref="T:System.Data.DataRow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-151">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="54db8-152">返回的键的类型<c>keySelector</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-152">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="54db8-153">包含要排序的 <see cref="T:System.Data.EnumerableRowCollection" /> 元素的 <see cref="T:System.Data.DataRow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-153">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="54db8-154">用于从元素中提取键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-154">A function to extract a key from an element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="54db8-155">用于比较键的 <see cref="T:System.Collections.Generic.IComparer`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-155">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54db8-156">按指定键和比较器降序排序 <see cref="T:System.Data.EnumerableRowCollection" /> 的行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-156">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order according to the specified key and comparer.</span>
          </span>
          <span data-ttu-id="54db8-157">此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-157">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54db8-158">一个 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其元素按指定键和比较器排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-158">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key and comparer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54db8-159">此方法实现通过使用延迟的执行。</span><span class="sxs-lookup"><span data-stu-id="54db8-159">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="54db8-160">即时的返回值是存储执行操作所需的所有信息的对象。</span><span class="sxs-lookup"><span data-stu-id="54db8-160">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="54db8-161">直到或者通过调用枚举的对象不执行此方法所表示的查询及其`GetEnumerator`方法直接或通过使用`foreach`在 Visual C# 或`For Each`在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="54db8-161">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.ThenByDescending" />
        <altmember cref="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <Member MemberName="Select&lt;TRow,S&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.EnumerableRowCollection&lt;S&gt; Select&lt;TRow,S&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,S&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EnumerableRowCollection`1&lt;!!S&gt; Select&lt;TRow, S&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!S&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of TRow, S) (source As EnumerableRowCollection(Of TRow), selector As Func(Of TRow, S)) As EnumerableRowCollection(Of S)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename S&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::EnumerableRowCollection&lt;S&gt; ^ Select(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, S&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Select : System.Data.EnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'S&gt; -&gt; System.Data.EnumerableRowCollection&lt;'S&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.Select (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EnumerableRowCollection&lt;S&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="S" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TRow,S&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="54db8-162">中的行元素的类型<c>源</c>，通常<see cref="T:System.Data.DataRow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-162">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="S">
          <span data-ttu-id="54db8-163">类型的<c>TRow</c>将转换为。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-163">The type that <c>TRow</c> will be transformed into.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="54db8-164">一个 <see cref="T:System.Data.EnumerableRowCollection`1" />，其中包含要对其调用转换函数的 <see cref="T:System.Data.DataRow" /> 元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-164">An <see cref="T:System.Data.EnumerableRowCollection`1" /> containing the <see cref="T:System.Data.DataRow" /> elements to invoke a transform function upon.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="54db8-165">应用于每个元素的转换函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-165">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54db8-166">将 <see cref="T:System.Data.EnumerableRowCollection`1" /> 中的每个元素投影到新窗体。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-166">Projects each element of an <see cref="T:System.Data.EnumerableRowCollection`1" /> into a new form.</span>
          </span>
          <span data-ttu-id="54db8-167">此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-167">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54db8-168">一个 <see cref="T:System.Data.EnumerableRowCollection`1" />，其元素是对 <paramref name="source" /> 的每个元素调用转换函数得到的结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-168">An <see cref="T:System.Data.EnumerableRowCollection`1" /> whose elements are the result of invoking the transform function on each element of <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54db8-169">此方法实现通过使用延迟的执行。</span><span class="sxs-lookup"><span data-stu-id="54db8-169">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="54db8-170">即时的返回值是存储执行操作所需的所有信息的对象。</span><span class="sxs-lookup"><span data-stu-id="54db8-170">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="54db8-171">直到或者通过调用枚举的对象不执行此方法所表示的查询及其`GetEnumerator`方法直接或通过使用`foreach`在 Visual C# 或`For Each`在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="54db8-171">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 <span data-ttu-id="54db8-172">此方法需要的转换函数`selector`，以便生成源序列中的每个值的一个值`source`。</span><span class="sxs-lookup"><span data-stu-id="54db8-172">This projection method requires the transform function, `selector`, to produce one value for each value in the source sequence, `source`.</span></span> <span data-ttu-id="54db8-173">如果`selector`返回一个值，是一组本身，负责使用者手动遍历子序列。</span><span class="sxs-lookup"><span data-stu-id="54db8-173">If `selector` returns a value that is itself a collection, it is up to the consumer to traverse the subsequences manually.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenBy&lt;TRow,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="54db8-174">按升序对 <see cref="T:System.Data.EnumerableRowCollection" /> 的行进行次要排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-174">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order.</span>
          </span>
          <span data-ttu-id="54db8-175">此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-175">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenBy&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; ThenBy&lt;TRow,TKey&gt; (this System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; ThenBy&lt;TRow, TKey&gt;(class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy(Of TRow, TKey) (source As OrderedEnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ ThenBy(System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ThenBy : System.Data.OrderedEnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.ThenBy (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="54db8-176">中的行元素的类型<c>源</c>，通常<see cref="T:System.Data.DataRow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-176">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="54db8-177">返回的键的类型<c>keySelector</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-177">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="54db8-178">包含要排序的 <see cref="T:System.Data.EnumerableRowCollection" /> 元素的 <see cref="T:System.Data.DataRow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-178">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="54db8-179">用于从元素中提取键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-179">A function to extract a key from an element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54db8-180">根据指定键按升序对 <see cref="T:System.Data.EnumerableRowCollection" /> 的行进行次要排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-180">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order according to the specified key.</span>
          </span>
          <span data-ttu-id="54db8-181">此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-181">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54db8-182">一个 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其元素按指定键排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-182">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54db8-183">利用<xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A>操作需要现有主排序操作使用<xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>。</span><span class="sxs-lookup"><span data-stu-id="54db8-183">The use of a <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A> operation requires an existing primary sorting operation using <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span></span>  
  
 <span data-ttu-id="54db8-184">此方法实现通过使用延迟的执行。</span><span class="sxs-lookup"><span data-stu-id="54db8-184">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="54db8-185">即时的返回值是存储执行操作所需的所有信息的对象。</span><span class="sxs-lookup"><span data-stu-id="54db8-185">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="54db8-186">直到或者通过调用枚举的对象不执行此方法所表示的查询及其`GetEnumerator`方法直接或通过使用`foreach`在 Visual C# 或`For Each`在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="54db8-186">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.OrderBy" />
        <altmember cref="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})" />
      </Docs>
    </Member>
    <Member MemberName="ThenBy&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; ThenBy&lt;TRow,TKey&gt; (this System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; ThenBy&lt;TRow, TKey&gt;(class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy(Of TRow, TKey) (source As OrderedEnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey), comparer As IComparer(Of TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ ThenBy(System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ThenBy : System.Data.OrderedEnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.ThenBy (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="54db8-187">中的行元素的类型<c>源</c>，通常<see cref="T:System.Data.DataRow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-187">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="54db8-188">返回的键的类型<c>keySelector</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-188">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="54db8-189">包含要排序的 <see cref="T:System.Data.EnumerableRowCollection" /> 元素的 <see cref="T:System.Data.DataRow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-189">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="54db8-190">用于从元素中提取键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-190">A function to extract a key from an element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="54db8-191">用于比较键的 <see cref="T:System.Collections.Generic.IComparer`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-191">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54db8-192">根据指定键和比较器按升序对 <see cref="T:System.Data.EnumerableRowCollection" /> 的行进行次要排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-192">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order according to the specified key and comparer.</span>
          </span>
          <span data-ttu-id="54db8-193">此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-193">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54db8-194">一个 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其元素按指定键和比较器排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-194">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key and comparer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54db8-195">利用<xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A>操作需要现有主排序操作使用<xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>。</span><span class="sxs-lookup"><span data-stu-id="54db8-195">The use of a <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A> operation requires an existing primary sorting operation using <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span></span>  
  
 <span data-ttu-id="54db8-196">此方法实现通过使用延迟的执行。</span><span class="sxs-lookup"><span data-stu-id="54db8-196">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="54db8-197">即时的返回值是存储执行操作所需的所有信息的对象。</span><span class="sxs-lookup"><span data-stu-id="54db8-197">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="54db8-198">直到或者通过调用枚举的对象不执行此方法所表示的查询及其`GetEnumerator`方法直接或通过使用`foreach`在 Visual C# 或`For Each`在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="54db8-198">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.OrderBy" />
        <altmember cref="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenByDescending&lt;TRow,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="54db8-199">按降序对 <see cref="T:System.Data.EnumerableRowCollection" /> 的行进行次要排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-199">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order.</span>
          </span>
          <span data-ttu-id="54db8-200">此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-200">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenByDescending&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; ThenByDescending&lt;TRow,TKey&gt; (this System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; ThenByDescending&lt;TRow, TKey&gt;(class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending(Of TRow, TKey) (source As OrderedEnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ ThenByDescending(System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ThenByDescending : System.Data.OrderedEnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.ThenByDescending (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="54db8-201">中的行元素的类型<c>源</c>，通常<see cref="T:System.Data.DataRow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-201">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="54db8-202">返回的键的类型<c>keySelector</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-202">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="54db8-203">包含要排序的 <see cref="T:System.Data.EnumerableRowCollection" /> 元素的 <see cref="T:System.Data.DataRow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-203">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="54db8-204">用于从元素中提取键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-204">A function to extract a key from an element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54db8-205">根据指定键按降序对 <see cref="T:System.Data.EnumerableRowCollection" /> 的行进行次要排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-205">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order according to the specified key.</span>
          </span>
          <span data-ttu-id="54db8-206">此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-206">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54db8-207">一个 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其元素按指定键排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-207">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54db8-208">利用<xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A>操作需要现有主排序操作使用<xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>。</span><span class="sxs-lookup"><span data-stu-id="54db8-208">The use of a <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A> operation requires an existing primary sorting operation using <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span></span>  
  
 <span data-ttu-id="54db8-209">此方法实现通过使用延迟的执行。</span><span class="sxs-lookup"><span data-stu-id="54db8-209">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="54db8-210">即时的返回值是存储执行操作所需的所有信息的对象。</span><span class="sxs-lookup"><span data-stu-id="54db8-210">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="54db8-211">直到或者通过调用枚举的对象不执行此方法所表示的查询及其`GetEnumerator`方法直接或通过使用`foreach`在 Visual C# 或`For Each`在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="54db8-211">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.OrderByDescending" />
        <altmember cref="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})" />
      </Docs>
    </Member>
    <Member MemberName="ThenByDescending&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; ThenByDescending&lt;TRow,TKey&gt; (this System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; ThenByDescending&lt;TRow, TKey&gt;(class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending(Of TRow, TKey) (source As OrderedEnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey), comparer As IComparer(Of TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ ThenByDescending(System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ThenByDescending : System.Data.OrderedEnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.ThenByDescending (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="54db8-212">中的行元素的类型<c>源</c>，通常<see cref="T:System.Data.DataRow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-212">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="54db8-213">返回的键的类型<c>keySelector</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-213">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="54db8-214">包含要排序的 <see cref="T:System.Data.EnumerableRowCollection" /> 元素的 <see cref="T:System.Data.DataRow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-214">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="54db8-215">用于从元素中提取键的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-215">A function to extract a key from an element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="54db8-216">用于比较键的 <see cref="T:System.Collections.Generic.IComparer`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-216">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54db8-217">根据指定键和比较器按降序对 <see cref="T:System.Data.EnumerableRowCollection" /> 的行进行次要排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-217">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order according to the specified key and comparer.</span>
          </span>
          <span data-ttu-id="54db8-218">此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-218">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54db8-219">一个 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其元素按指定键和比较器排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-219">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key and comparer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54db8-220">利用<xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A>操作需要现有主排序操作使用<xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>。</span><span class="sxs-lookup"><span data-stu-id="54db8-220">The use of a <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A> operation requires an existing primary sorting operation using <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span></span>  
  
 <span data-ttu-id="54db8-221">此方法实现通过使用延迟的执行。</span><span class="sxs-lookup"><span data-stu-id="54db8-221">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="54db8-222">即时的返回值是存储执行操作所需的所有信息的对象。</span><span class="sxs-lookup"><span data-stu-id="54db8-222">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="54db8-223">直到或者通过调用枚举的对象不执行此方法所表示的查询及其`GetEnumerator`方法直接或通过使用`foreach`在 Visual C# 或`For Each`在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="54db8-223">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.OrderByDescending" />
        <altmember cref="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <Member MemberName="Where&lt;TRow&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.EnumerableRowCollection&lt;TRow&gt; Where&lt;TRow&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; Where&lt;TRow&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where(Of TRow) (source As EnumerableRowCollection(Of TRow), predicate As Func(Of TRow, Boolean)) As EnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::EnumerableRowCollection&lt;TRow&gt; ^ Where(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Where : System.Data.EnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, bool&gt; -&gt; System.Data.EnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.Where (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TRow,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="54db8-224">中的行元素的类型<c>源</c>，通常<see cref="T:System.Data.DataRow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-224">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="54db8-225">包含要筛选的 <see cref="T:System.Data.EnumerableRowCollection" /> 元素的 <see cref="T:System.Data.DataRow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-225">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to filter.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="54db8-226">用于测试每个元素是否满足条件的函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-226">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54db8-227">按指定谓词筛选行序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-227">Filters a sequence of rows based on the specified predicate.</span>
          </span>
          <span data-ttu-id="54db8-228">此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-228">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54db8-229">一个 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其中包含输入序列中满足该条件的行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54db8-229">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> that contains rows from the input sequence that satisfy the condition.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54db8-230">此方法实现通过使用延迟的执行。</span><span class="sxs-lookup"><span data-stu-id="54db8-230">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="54db8-231">即时的返回值是存储执行操作所需的所有信息的对象。</span><span class="sxs-lookup"><span data-stu-id="54db8-231">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="54db8-232">直到或者通过调用枚举的对象不执行此方法所表示的查询及其`GetEnumerator`方法直接或通过使用`foreach`在 Visual C# 或`For Each`在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="54db8-232">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
      </Docs>
    </Member>
  </Members>
</Type>