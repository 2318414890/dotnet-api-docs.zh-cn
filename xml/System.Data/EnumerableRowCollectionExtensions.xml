<Type Name="EnumerableRowCollectionExtensions" FullName="System.Data.EnumerableRowCollectionExtensions">
  <TypeSignature Language="C#" Value="public static class EnumerableRowCollectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EnumerableRowCollectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.EnumerableRowCollectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module EnumerableRowCollectionExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class EnumerableRowCollectionExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1483e-101">包含数据行集合类的扩展方法。</span><span class="sxs-lookup"><span data-stu-id="1483e-101">Contains the extension methods for the data row collection classes.</span></span> <span data-ttu-id="1483e-102">此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="1483e-102">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1483e-103"><xref:System.Data.EnumerableRowCollectionExtensions>类包含静态扩展方法的定义<xref:System.Data.EnumerableRowCollectionExtensions.Cast%2A>方法和标准查询操作<xref:System.Data.EnumerableRowCollection%601>和<xref:System.Data.OrderedEnumerableRowCollection%601>类。</span><span class="sxs-lookup"><span data-stu-id="1483e-103">The <xref:System.Data.EnumerableRowCollectionExtensions> class contains static extension methods that define the <xref:System.Data.EnumerableRowCollectionExtensions.Cast%2A> method and standard query operations for the <xref:System.Data.EnumerableRowCollection%601> and <xref:System.Data.OrderedEnumerableRowCollection%601> classes.</span></span>  
  
 <span data-ttu-id="1483e-104">此类不能被继承，并不能实例化。</span><span class="sxs-lookup"><span data-stu-id="1483e-104">This class cannot be inherited and cannot be instantiated.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.EnumerableRowCollection`1" />
    <altmember cref="T:System.Data.OrderedEnumerableRowCollection`1" />
  </Docs>
  <Members>
    <Member MemberName="Cast&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.EnumerableRowCollection&lt;TResult&gt; Cast&lt;TResult&gt; (this System.Data.EnumerableRowCollection source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EnumerableRowCollection`1&lt;!!TResult&gt; Cast&lt;TResult&gt;(class System.Data.EnumerableRowCollection source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Cast(Of TResult) (source As EnumerableRowCollection) As EnumerableRowCollection(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::EnumerableRowCollection&lt;TResult&gt; ^ Cast(System::Data::EnumerableRowCollection ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EnumerableRowCollection&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="1483e-105">源中的元素要转换成的类型。</span><span class="sxs-lookup"><span data-stu-id="1483e-105">The type to convert the elements of source to.</span></span></typeparam>
        <param name="source"><span data-ttu-id="1483e-106">包含要转换的元素的 <see cref="T:System.Data.EnumerableRowCollection" />。</span><span class="sxs-lookup"><span data-stu-id="1483e-106">The <see cref="T:System.Data.EnumerableRowCollection" /> that contains the elements to be converted.</span></span></param>
        <summary><span data-ttu-id="1483e-107">将 <see cref="T:System.Data.EnumerableRowCollection" /> 的元素转换为指定的类型。</span><span class="sxs-lookup"><span data-stu-id="1483e-107">Converts the elements of an <see cref="T:System.Data.EnumerableRowCollection" /> to the specified type.</span></span> <span data-ttu-id="1483e-108">此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="1483e-108">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <returns><span data-ttu-id="1483e-109">一个 <see cref="T:System.Data.EnumerableRowCollection" />，其中包含已转换为指定类型的源序列的每个元素。</span><span class="sxs-lookup"><span data-stu-id="1483e-109">An <see cref="T:System.Data.EnumerableRowCollection" /> that contains each element of the source sequence converted to the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1483e-110">此方法使用延迟的执行实现。</span><span class="sxs-lookup"><span data-stu-id="1483e-110">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="1483e-111">最接近的返回值是存储执行操作所需的所有信息的对象。</span><span class="sxs-lookup"><span data-stu-id="1483e-111">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="1483e-112">直到或者通过调用枚举的对象不执行此方法所表示的查询其`GetEnumerator`方法直接或通过使用`foreach`在 Visual C# 或`For Each`在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="1483e-112">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1483e-113"><paramref name="source" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1483e-113"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="1483e-114">序列中的元素不能强制转换为 <paramref name="TResult" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="1483e-114">An element in the sequence cannot be cast to type <paramref name="TResult" />.</span></span></exception>
        <altmember cref="T:System.Data.EnumerableRowCollection" />
        <altmember cref="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderBy&lt;TRow,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1483e-115">按升序排序 <see cref="T:System.Data.EnumerableRowCollection" /> 的行。</span><span class="sxs-lookup"><span data-stu-id="1483e-115">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order.</span></span> <span data-ttu-id="1483e-116">此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="1483e-116">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderBy&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; OrderBy&lt;TRow,TKey&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; OrderBy&lt;TRow, TKey&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy(Of TRow, TKey) (source As EnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ OrderBy(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow"><span data-ttu-id="1483e-117">中的行元素的类型<c>源</c>，通常<see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="1483e-117">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="1483e-118">返回的键的类型<c>对</c>。</span><span class="sxs-lookup"><span data-stu-id="1483e-118">The type of the key returned by <c>keySelector</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="1483e-119">包含要排序的 <see cref="T:System.Data.EnumerableRowCollection" /> 元素的 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="1483e-119">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span></span></param>
        <param name="keySelector"><span data-ttu-id="1483e-120">用于从元素中提取键的函数。</span><span class="sxs-lookup"><span data-stu-id="1483e-120">A function to extract a key from an element.</span></span></param>
        <summary><span data-ttu-id="1483e-121">按指定键升序排序 <see cref="T:System.Data.EnumerableRowCollection" /> 的行。</span><span class="sxs-lookup"><span data-stu-id="1483e-121">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order according to the specified key.</span></span> <span data-ttu-id="1483e-122">此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="1483e-122">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <returns><span data-ttu-id="1483e-123">一个 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其元素按指定键排序。</span><span class="sxs-lookup"><span data-stu-id="1483e-123">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1483e-124">此方法使用延迟的执行实现。</span><span class="sxs-lookup"><span data-stu-id="1483e-124">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="1483e-125">最接近的返回值是存储执行操作所需的所有信息的对象。</span><span class="sxs-lookup"><span data-stu-id="1483e-125">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="1483e-126">直到或者通过调用枚举的对象不执行此方法所表示的查询其`GetEnumerator`方法直接或通过使用`foreach`在 Visual C# 或`For Each`在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="1483e-126">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.ThenBy" />
        <altmember cref="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <Member MemberName="OrderBy&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; OrderBy&lt;TRow,TKey&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; OrderBy&lt;TRow, TKey&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy(Of TRow, TKey) (source As EnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey), comparer As IComparer(Of TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ OrderBy(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow"><span data-ttu-id="1483e-127">中的行元素的类型<c>源</c>，通常<see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="1483e-127">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="1483e-128">返回的键的类型<c>对</c>。</span><span class="sxs-lookup"><span data-stu-id="1483e-128">The type of the key returned by <c>keySelector</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="1483e-129">包含要排序的 <see cref="T:System.Data.EnumerableRowCollection" /> 元素的 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="1483e-129">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span></span></param>
        <param name="keySelector"><span data-ttu-id="1483e-130">用于从元素中提取键的函数。</span><span class="sxs-lookup"><span data-stu-id="1483e-130">A function to extract a key from an element.</span></span></param>
        <param name="comparer"><span data-ttu-id="1483e-131">用于比较键的 <see cref="T:System.Collections.Generic.IComparer`1" />。</span><span class="sxs-lookup"><span data-stu-id="1483e-131">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="1483e-132">按指定键和比较器升序排序 <see cref="T:System.Data.EnumerableRowCollection" /> 的行。</span><span class="sxs-lookup"><span data-stu-id="1483e-132">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order according to the specified key and comparer.</span></span> <span data-ttu-id="1483e-133">此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="1483e-133">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <returns><span data-ttu-id="1483e-134">一个 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其元素按指定键和比较器排序。</span><span class="sxs-lookup"><span data-stu-id="1483e-134">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key and comparer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1483e-135">此方法使用延迟的执行实现。</span><span class="sxs-lookup"><span data-stu-id="1483e-135">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="1483e-136">最接近的返回值是存储执行操作所需的所有信息的对象。</span><span class="sxs-lookup"><span data-stu-id="1483e-136">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="1483e-137">直到或者通过调用枚举的对象不执行此方法所表示的查询其`GetEnumerator`方法直接或通过使用`foreach`在 Visual C# 或`For Each`在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="1483e-137">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.ThenBy" />
        <altmember cref="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderByDescending&lt;TRow,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1483e-138">按降序排序 <see cref="T:System.Data.EnumerableRowCollection" /> 的行。</span><span class="sxs-lookup"><span data-stu-id="1483e-138">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order.</span></span> <span data-ttu-id="1483e-139">此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="1483e-139">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderByDescending&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; OrderByDescending&lt;TRow,TKey&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; OrderByDescending&lt;TRow, TKey&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending(Of TRow, TKey) (source As EnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ OrderByDescending(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow"><span data-ttu-id="1483e-140">中的行元素的类型<c>源</c>，通常<see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="1483e-140">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="1483e-141">返回的键的类型<c>对</c>。</span><span class="sxs-lookup"><span data-stu-id="1483e-141">The type of the key returned by <c>keySelector</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="1483e-142">包含要排序的 <see cref="T:System.Data.EnumerableRowCollection" /> 元素的 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="1483e-142">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span></span></param>
        <param name="keySelector"><span data-ttu-id="1483e-143">用于从元素中提取键的函数。</span><span class="sxs-lookup"><span data-stu-id="1483e-143">A function to extract a key from an element.</span></span></param>
        <summary><span data-ttu-id="1483e-144">按指定键降序排序 <see cref="T:System.Data.EnumerableRowCollection" /> 的行。</span><span class="sxs-lookup"><span data-stu-id="1483e-144">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order according to the specified key.</span></span> <span data-ttu-id="1483e-145">此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="1483e-145">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <returns><span data-ttu-id="1483e-146">一个 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其元素按指定键排序。</span><span class="sxs-lookup"><span data-stu-id="1483e-146">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1483e-147">此方法使用延迟的执行实现。</span><span class="sxs-lookup"><span data-stu-id="1483e-147">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="1483e-148">最接近的返回值是存储执行操作所需的所有信息的对象。</span><span class="sxs-lookup"><span data-stu-id="1483e-148">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="1483e-149">直到或者通过调用枚举的对象不执行此方法所表示的查询其`GetEnumerator`方法直接或通过使用`foreach`在 Visual C# 或`For Each`在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="1483e-149">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.ThenByDescending" />
        <altmember cref="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
      </Docs>
    </Member>
    <Member MemberName="OrderByDescending&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; OrderByDescending&lt;TRow,TKey&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; OrderByDescending&lt;TRow, TKey&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending(Of TRow, TKey) (source As EnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey), comparer As IComparer(Of TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ OrderByDescending(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow"><span data-ttu-id="1483e-150">中的行元素的类型<c>源</c>，通常<see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="1483e-150">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="1483e-151">返回的键的类型<c>对</c>。</span><span class="sxs-lookup"><span data-stu-id="1483e-151">The type of the key returned by <c>keySelector</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="1483e-152">包含要排序的 <see cref="T:System.Data.EnumerableRowCollection" /> 元素的 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="1483e-152">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span></span></param>
        <param name="keySelector"><span data-ttu-id="1483e-153">用于从元素中提取键的函数。</span><span class="sxs-lookup"><span data-stu-id="1483e-153">A function to extract a key from an element.</span></span></param>
        <param name="comparer"><span data-ttu-id="1483e-154">用于比较键的 <see cref="T:System.Collections.Generic.IComparer`1" />。</span><span class="sxs-lookup"><span data-stu-id="1483e-154">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="1483e-155">按指定键和比较器降序排序 <see cref="T:System.Data.EnumerableRowCollection" /> 的行。</span><span class="sxs-lookup"><span data-stu-id="1483e-155">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order according to the specified key and comparer.</span></span> <span data-ttu-id="1483e-156">此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="1483e-156">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <returns><span data-ttu-id="1483e-157">一个 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其元素按指定键和比较器排序。</span><span class="sxs-lookup"><span data-stu-id="1483e-157">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key and comparer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1483e-158">此方法使用延迟的执行实现。</span><span class="sxs-lookup"><span data-stu-id="1483e-158">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="1483e-159">最接近的返回值是存储执行操作所需的所有信息的对象。</span><span class="sxs-lookup"><span data-stu-id="1483e-159">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="1483e-160">直到或者通过调用枚举的对象不执行此方法所表示的查询其`GetEnumerator`方法直接或通过使用`foreach`在 Visual C# 或`For Each`在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="1483e-160">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.ThenByDescending" />
        <altmember cref="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <Member MemberName="Select&lt;TRow,S&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.EnumerableRowCollection&lt;S&gt; Select&lt;TRow,S&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,S&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EnumerableRowCollection`1&lt;!!S&gt; Select&lt;TRow, S&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!S&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of TRow, S) (source As EnumerableRowCollection(Of TRow), selector As Func(Of TRow, S)) As EnumerableRowCollection(Of S)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename S&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::EnumerableRowCollection&lt;S&gt; ^ Select(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, S&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EnumerableRowCollection&lt;S&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="S" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TRow,S&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow"><span data-ttu-id="1483e-161">中的行元素的类型<c>源</c>，通常<see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="1483e-161">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span></span></typeparam>
        <typeparam name="S"><span data-ttu-id="1483e-162">类型的<c>TRow</c>将转换为。</span><span class="sxs-lookup"><span data-stu-id="1483e-162">The type that <c>TRow</c> will be transformed into.</span></span></typeparam>
        <param name="source"><span data-ttu-id="1483e-163">一个 <see cref="T:System.Data.EnumerableRowCollection`1" />，其中包含要对其调用转换函数的 <see cref="T:System.Data.DataRow" /> 元素。</span><span class="sxs-lookup"><span data-stu-id="1483e-163">An <see cref="T:System.Data.EnumerableRowCollection`1" /> containing the <see cref="T:System.Data.DataRow" /> elements to invoke a transform function upon.</span></span></param>
        <param name="selector"><span data-ttu-id="1483e-164">应用于每个元素的转换函数。</span><span class="sxs-lookup"><span data-stu-id="1483e-164">A transform function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="1483e-165">将 <see cref="T:System.Data.EnumerableRowCollection`1" /> 中的每个元素投影到新窗体。</span><span class="sxs-lookup"><span data-stu-id="1483e-165">Projects each element of an <see cref="T:System.Data.EnumerableRowCollection`1" /> into a new form.</span></span> <span data-ttu-id="1483e-166">此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="1483e-166">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <returns><span data-ttu-id="1483e-167">一个 <see cref="T:System.Data.EnumerableRowCollection`1" />，其元素是对 <paramref name="source" /> 的每个元素调用转换函数得到的结果。</span><span class="sxs-lookup"><span data-stu-id="1483e-167">An <see cref="T:System.Data.EnumerableRowCollection`1" /> whose elements are the result of invoking the transform function on each element of <paramref name="source" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1483e-168">此方法使用延迟的执行实现。</span><span class="sxs-lookup"><span data-stu-id="1483e-168">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="1483e-169">最接近的返回值是存储执行操作所需的所有信息的对象。</span><span class="sxs-lookup"><span data-stu-id="1483e-169">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="1483e-170">直到或者通过调用枚举的对象不执行此方法所表示的查询其`GetEnumerator`方法直接或通过使用`foreach`在 Visual C# 或`For Each`在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="1483e-170">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 <span data-ttu-id="1483e-171">此投影方法要求的转换函数`selector`，以便生成一个值，为源序列中的每个值`source`。</span><span class="sxs-lookup"><span data-stu-id="1483e-171">This projection method requires the transform function, `selector`, to produce one value for each value in the source sequence, `source`.</span></span> <span data-ttu-id="1483e-172">如果`selector`返回一个值，本身为一个集合，它负责的使用者手动遍历子序列。</span><span class="sxs-lookup"><span data-stu-id="1483e-172">If `selector` returns a value that is itself a collection, it is up to the consumer to traverse the subsequences manually.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenBy&lt;TRow,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1483e-173">按升序对 <see cref="T:System.Data.EnumerableRowCollection" /> 的行进行次要排序。</span><span class="sxs-lookup"><span data-stu-id="1483e-173">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order.</span></span> <span data-ttu-id="1483e-174">此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="1483e-174">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenBy&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; ThenBy&lt;TRow,TKey&gt; (this System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; ThenBy&lt;TRow, TKey&gt;(class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy(Of TRow, TKey) (source As OrderedEnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ ThenBy(System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow"><span data-ttu-id="1483e-175">中的行元素的类型<c>源</c>，通常<see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="1483e-175">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="1483e-176">返回的键的类型<c>对</c>。</span><span class="sxs-lookup"><span data-stu-id="1483e-176">The type of the key returned by <c>keySelector</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="1483e-177">包含要排序的 <see cref="T:System.Data.EnumerableRowCollection" /> 元素的 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="1483e-177">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span></span></param>
        <param name="keySelector"><span data-ttu-id="1483e-178">用于从元素中提取键的函数。</span><span class="sxs-lookup"><span data-stu-id="1483e-178">A function to extract a key from an element.</span></span></param>
        <summary><span data-ttu-id="1483e-179">根据指定键按升序对 <see cref="T:System.Data.EnumerableRowCollection" /> 的行进行次要排序。</span><span class="sxs-lookup"><span data-stu-id="1483e-179">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order according to the specified key.</span></span> <span data-ttu-id="1483e-180">此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="1483e-180">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <returns><span data-ttu-id="1483e-181">一个 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其元素按指定键排序。</span><span class="sxs-lookup"><span data-stu-id="1483e-181">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1483e-182">使用<xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A>操作需要现有主排序操作使用<xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>。</span><span class="sxs-lookup"><span data-stu-id="1483e-182">The use of a <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A> operation requires an existing primary sorting operation using <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span></span>  
  
 <span data-ttu-id="1483e-183">此方法使用延迟的执行实现。</span><span class="sxs-lookup"><span data-stu-id="1483e-183">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="1483e-184">最接近的返回值是存储执行操作所需的所有信息的对象。</span><span class="sxs-lookup"><span data-stu-id="1483e-184">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="1483e-185">直到或者通过调用枚举的对象不执行此方法所表示的查询其`GetEnumerator`方法直接或通过使用`foreach`在 Visual C# 或`For Each`在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="1483e-185">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.OrderBy" />
        <altmember cref="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})" />
      </Docs>
    </Member>
    <Member MemberName="ThenBy&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; ThenBy&lt;TRow,TKey&gt; (this System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; ThenBy&lt;TRow, TKey&gt;(class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy(Of TRow, TKey) (source As OrderedEnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey), comparer As IComparer(Of TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ ThenBy(System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow"><span data-ttu-id="1483e-186">中的行元素的类型<c>源</c>，通常<see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="1483e-186">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="1483e-187">返回的键的类型<c>对</c>。</span><span class="sxs-lookup"><span data-stu-id="1483e-187">The type of the key returned by <c>keySelector</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="1483e-188">包含要排序的 <see cref="T:System.Data.EnumerableRowCollection" /> 元素的 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="1483e-188">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span></span></param>
        <param name="keySelector"><span data-ttu-id="1483e-189">用于从元素中提取键的函数。</span><span class="sxs-lookup"><span data-stu-id="1483e-189">A function to extract a key from an element.</span></span></param>
        <param name="comparer"><span data-ttu-id="1483e-190">用于比较键的 <see cref="T:System.Collections.Generic.IComparer`1" />。</span><span class="sxs-lookup"><span data-stu-id="1483e-190">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="1483e-191">根据指定键和比较器按升序对 <see cref="T:System.Data.EnumerableRowCollection" /> 的行进行次要排序。</span><span class="sxs-lookup"><span data-stu-id="1483e-191">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order according to the specified key and comparer.</span></span> <span data-ttu-id="1483e-192">此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="1483e-192">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <returns><span data-ttu-id="1483e-193">一个 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其元素按指定键和比较器排序。</span><span class="sxs-lookup"><span data-stu-id="1483e-193">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key and comparer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1483e-194">使用<xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A>操作需要现有主排序操作使用<xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>。</span><span class="sxs-lookup"><span data-stu-id="1483e-194">The use of a <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A> operation requires an existing primary sorting operation using <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span></span>  
  
 <span data-ttu-id="1483e-195">此方法使用延迟的执行实现。</span><span class="sxs-lookup"><span data-stu-id="1483e-195">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="1483e-196">最接近的返回值是存储执行操作所需的所有信息的对象。</span><span class="sxs-lookup"><span data-stu-id="1483e-196">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="1483e-197">直到或者通过调用枚举的对象不执行此方法所表示的查询其`GetEnumerator`方法直接或通过使用`foreach`在 Visual C# 或`For Each`在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="1483e-197">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.OrderBy" />
        <altmember cref="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenByDescending&lt;TRow,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1483e-198">按降序对 <see cref="T:System.Data.EnumerableRowCollection" /> 的行进行次要排序。</span><span class="sxs-lookup"><span data-stu-id="1483e-198">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order.</span></span> <span data-ttu-id="1483e-199">此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="1483e-199">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenByDescending&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; ThenByDescending&lt;TRow,TKey&gt; (this System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; ThenByDescending&lt;TRow, TKey&gt;(class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending(Of TRow, TKey) (source As OrderedEnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ ThenByDescending(System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow"><span data-ttu-id="1483e-200">中的行元素的类型<c>源</c>，通常<see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="1483e-200">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="1483e-201">返回的键的类型<c>对</c>。</span><span class="sxs-lookup"><span data-stu-id="1483e-201">The type of the key returned by <c>keySelector</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="1483e-202">包含要排序的 <see cref="T:System.Data.EnumerableRowCollection" /> 元素的 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="1483e-202">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span></span></param>
        <param name="keySelector"><span data-ttu-id="1483e-203">用于从元素中提取键的函数。</span><span class="sxs-lookup"><span data-stu-id="1483e-203">A function to extract a key from an element.</span></span></param>
        <summary><span data-ttu-id="1483e-204">根据指定键按降序对 <see cref="T:System.Data.EnumerableRowCollection" /> 的行进行次要排序。</span><span class="sxs-lookup"><span data-stu-id="1483e-204">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order according to the specified key.</span></span> <span data-ttu-id="1483e-205">此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="1483e-205">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <returns><span data-ttu-id="1483e-206">一个 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其元素按指定键排序。</span><span class="sxs-lookup"><span data-stu-id="1483e-206">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1483e-207">使用<xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A>操作需要现有主排序操作使用<xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>。</span><span class="sxs-lookup"><span data-stu-id="1483e-207">The use of a <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A> operation requires an existing primary sorting operation using <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span></span>  
  
 <span data-ttu-id="1483e-208">此方法使用延迟的执行实现。</span><span class="sxs-lookup"><span data-stu-id="1483e-208">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="1483e-209">最接近的返回值是存储执行操作所需的所有信息的对象。</span><span class="sxs-lookup"><span data-stu-id="1483e-209">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="1483e-210">直到或者通过调用枚举的对象不执行此方法所表示的查询其`GetEnumerator`方法直接或通过使用`foreach`在 Visual C# 或`For Each`在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="1483e-210">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.OrderByDescending" />
        <altmember cref="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})" />
      </Docs>
    </Member>
    <Member MemberName="ThenByDescending&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; ThenByDescending&lt;TRow,TKey&gt; (this System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; ThenByDescending&lt;TRow, TKey&gt;(class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending(Of TRow, TKey) (source As OrderedEnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey), comparer As IComparer(Of TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ ThenByDescending(System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow"><span data-ttu-id="1483e-211">中的行元素的类型<c>源</c>，通常<see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="1483e-211">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="1483e-212">返回的键的类型<c>对</c>。</span><span class="sxs-lookup"><span data-stu-id="1483e-212">The type of the key returned by <c>keySelector</c>.</span></span></typeparam>
        <param name="source"><span data-ttu-id="1483e-213">包含要排序的 <see cref="T:System.Data.EnumerableRowCollection" /> 元素的 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="1483e-213">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span></span></param>
        <param name="keySelector"><span data-ttu-id="1483e-214">用于从元素中提取键的函数。</span><span class="sxs-lookup"><span data-stu-id="1483e-214">A function to extract a key from an element.</span></span></param>
        <param name="comparer"><span data-ttu-id="1483e-215">用于比较键的 <see cref="T:System.Collections.Generic.IComparer`1" />。</span><span class="sxs-lookup"><span data-stu-id="1483e-215">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="1483e-216">根据指定键和比较器按降序对 <see cref="T:System.Data.EnumerableRowCollection" /> 的行进行次要排序。</span><span class="sxs-lookup"><span data-stu-id="1483e-216">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order according to the specified key and comparer.</span></span> <span data-ttu-id="1483e-217">此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="1483e-217">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <returns><span data-ttu-id="1483e-218">一个 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其元素按指定键和比较器排序。</span><span class="sxs-lookup"><span data-stu-id="1483e-218">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key and comparer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1483e-219">使用<xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A>操作需要现有主排序操作使用<xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>。</span><span class="sxs-lookup"><span data-stu-id="1483e-219">The use of a <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A> operation requires an existing primary sorting operation using <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span></span>  
  
 <span data-ttu-id="1483e-220">此方法使用延迟的执行实现。</span><span class="sxs-lookup"><span data-stu-id="1483e-220">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="1483e-221">最接近的返回值是存储执行操作所需的所有信息的对象。</span><span class="sxs-lookup"><span data-stu-id="1483e-221">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="1483e-222">直到或者通过调用枚举的对象不执行此方法所表示的查询其`GetEnumerator`方法直接或通过使用`foreach`在 Visual C# 或`For Each`在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="1483e-222">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.OrderByDescending" />
        <altmember cref="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <Member MemberName="Where&lt;TRow&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.EnumerableRowCollection&lt;TRow&gt; Where&lt;TRow&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; Where&lt;TRow&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where(Of TRow) (source As EnumerableRowCollection(Of TRow), predicate As Func(Of TRow, Boolean)) As EnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::EnumerableRowCollection&lt;TRow&gt; ^ Where(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TRow,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow"><span data-ttu-id="1483e-223">中的行元素的类型<c>源</c>，通常<see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="1483e-223">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="1483e-224">包含要筛选的 <see cref="T:System.Data.EnumerableRowCollection" /> 元素的 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="1483e-224">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to filter.</span></span></param>
        <param name="predicate"><span data-ttu-id="1483e-225">用于测试每个元素是否满足条件的函数。</span><span class="sxs-lookup"><span data-stu-id="1483e-225">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="1483e-226">按指定谓词筛选行序列。</span><span class="sxs-lookup"><span data-stu-id="1483e-226">Filters a sequence of rows based on the specified predicate.</span></span> <span data-ttu-id="1483e-227">此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="1483e-227">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <returns><span data-ttu-id="1483e-228">一个 <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />，其中包含输入序列中满足该条件的行。</span><span class="sxs-lookup"><span data-stu-id="1483e-228">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> that contains rows from the input sequence that satisfy the condition.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1483e-229">此方法使用延迟的执行实现。</span><span class="sxs-lookup"><span data-stu-id="1483e-229">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="1483e-230">最接近的返回值是存储执行操作所需的所有信息的对象。</span><span class="sxs-lookup"><span data-stu-id="1483e-230">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="1483e-231">直到或者通过调用枚举的对象不执行此方法所表示的查询其`GetEnumerator`方法直接或通过使用`foreach`在 Visual C# 或`For Each`在 Visual Basic 中。</span><span class="sxs-lookup"><span data-stu-id="1483e-231">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
      </Docs>
    </Member>
  </Members>
</Type>