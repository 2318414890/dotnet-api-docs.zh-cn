<Type Name="DataTableReader" FullName="System.Data.DataTableReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a35db2a0ad5babd0c3ea5fb984c8d43b0fdbc6cf" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36746402" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DataTableReader : System.Data.Common.DbDataReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataTableReader extends System.Data.Common.DbDataReader" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataTableReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataTableReader&#xA;Inherits DbDataReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTableReader sealed : System::Data::Common::DbDataReader" />
  <TypeSignature Language="F#" Value="type DataTableReader = class&#xA;    inherit DbDataReader" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="3c629-101">
        <see cref="T:System.Data.DataTableReader" /> 以一个或多个只读、只进结果集的形式获取一个或多个 <see cref="T:System.Data.DataTable" /> 对象的内容。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3c629-101">The <see cref="T:System.Data.DataTableReader" /> obtains the contents of one or more <see cref="T:System.Data.DataTable" /> objects in the form of one or more read-only, forward-only result sets.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c629-102"><xref:System.Data.DataTableReader>适用非常类似于任何其他数据读取器，例如<xref:System.Data.SqlClient.SqlDataReader>，只不过<xref:System.Data.DataTableReader>提供用于循环访问中的行<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="3c629-102">The <xref:System.Data.DataTableReader> works much like any other data reader, such as the <xref:System.Data.SqlClient.SqlDataReader>, except that the <xref:System.Data.DataTableReader> provides for iterating over rows in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="3c629-103">换而言之，它提供了用于循环访问缓存中的行。</span><span class="sxs-lookup"><span data-stu-id="3c629-103">In other words, it provides for iterating over rows in a cache.</span></span> <span data-ttu-id="3c629-104">缓存的数据可被修改时<xref:System.Data.DataTableReader>处于活动状态，并读取器自动维护其位置。</span><span class="sxs-lookup"><span data-stu-id="3c629-104">The cached data can be modified while the <xref:System.Data.DataTableReader> is active, and the reader automatically maintains its position.</span></span>  
  
 <span data-ttu-id="3c629-105">当你创建<xref:System.Data.DataTableReader>从<xref:System.Data.DataTable>，生成<xref:System.Data.DataTableReader>对象包含一个结果集具有相同的数据<xref:System.Data.DataTable>从创建它，除已标记为删除任何行。</span><span class="sxs-lookup"><span data-stu-id="3c629-105">When you create a <xref:System.Data.DataTableReader> from a <xref:System.Data.DataTable>, the resulting <xref:System.Data.DataTableReader> object contains one result set with the same data as the <xref:System.Data.DataTable> from which it was created, except for any rows that have been marked as deleted.</span></span> <span data-ttu-id="3c629-106">列将显示在相同的顺序与在原始<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="3c629-106">The columns appear in the same order as in the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="3c629-107">返回的结果的结构是在架构和数据与原始相同<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="3c629-107">The structure of the returned result is identical in schema and data to the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="3c629-108">A<xref:System.Data.DataTableReader>通过调用创建<xref:System.Data.DataSet.CreateDataReader*>方法<xref:System.Data.DataSet>对象包含多个结果集，如果<xref:System.Data.DataSet>包含多个表。</span><span class="sxs-lookup"><span data-stu-id="3c629-108">A <xref:System.Data.DataTableReader> that was created by calling the <xref:System.Data.DataSet.CreateDataReader*> method of a <xref:System.Data.DataSet> object contains multiple result sets if the <xref:System.Data.DataSet> contains more than one table.</span></span> <span data-ttu-id="3c629-109">结果将为相同的序列<xref:System.Data.DataTable>中的对象<xref:System.Data.DataTableCollection>的<xref:System.Data.DataSet>对象。</span><span class="sxs-lookup"><span data-stu-id="3c629-109">The results are in the same sequence as the <xref:System.Data.DataTable> objects in the <xref:System.Data.DataTableCollection> of the <xref:System.Data.DataSet> object.</span></span>  
  
 <span data-ttu-id="3c629-110">返回的结果集包含仅当前版本的每个<xref:System.Data.DataRow>; 将跳过标记为删除的行。</span><span class="sxs-lookup"><span data-stu-id="3c629-110">The returned result set contains only the current version of each <xref:System.Data.DataRow>; rows that are marked for deletion are skipped.</span></span>  
  
 <span data-ttu-id="3c629-111">`DataTableReader`提供稳定迭代器; 即，内容`DataTableReader`如果在迭代期间修改基础集合的大小将不会失效。</span><span class="sxs-lookup"><span data-stu-id="3c629-111">The `DataTableReader` provides a stable iterator; that is, the contents of the `DataTableReader` are not invalidated if the size of the underlying collection is modified during iteration.</span></span> <span data-ttu-id="3c629-112">为示例中，如果一个或多个行中<xref:System.Data.DataTable.Rows%2A>集合被删除或在迭代中中的当前位置过程中删除`DataTableReader`适当保持并不会使迭代器失效。</span><span class="sxs-lookup"><span data-stu-id="3c629-112">For example, if one or more rows in the <xref:System.Data.DataTable.Rows%2A> collection are deleted or removed during iteration, the current position within the `DataTableReader` is maintained appropriately and it does not invalidate the iterator.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3c629-113">初始化 <see cref="T:System.Data.DataTableReader" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-113">Initializes a new instance of the <see cref="T:System.Data.DataTableReader" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTableReader (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTableReader(System::Data::DataTable ^ dataTable);" />
      <MemberSignature Language="F#" Value="new System.Data.DataTableReader : System.Data.DataTable -&gt; System.Data.DataTableReader" Usage="new System.Data.DataTableReader dataTable" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <span data-ttu-id="3c629-114">新的 <see cref="T:System.Data.DataTable" /> 从中获取其结果集的 <see cref="T:System.Data.DataTableReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-114">The <see cref="T:System.Data.DataTable" /> from which the new <see cref="T:System.Data.DataTableReader" /> obtains its result set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c629-115">通过使用提供的 <see cref="T:System.Data.DataTableReader" /> 中的数据初始化 <see cref="T:System.Data.DataTable" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-115">Initializes a new instance of the <see cref="T:System.Data.DataTableReader" /> class by using data from the supplied <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTableReader (System.Data.DataTable[] dataTables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.DataTable[] dataTables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataTables As DataTable())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTableReader(cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables);" />
      <MemberSignature Language="F#" Value="new System.Data.DataTableReader : System.Data.DataTable[] -&gt; System.Data.DataTableReader" Usage="new System.Data.DataTableReader dataTables" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataTables" Type="System.Data.DataTable[]" />
      </Parameters>
      <Docs>
        <param name="dataTables">
          <span data-ttu-id="3c629-116">用于为新的 <see cref="T:System.Data.DataTable" /> 对象提供结果的 <see cref="T:System.Data.DataTableReader" /> 对象数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-116">The array of <see cref="T:System.Data.DataTable" /> objects that supplies the results for the new <see cref="T:System.Data.DataTableReader" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c629-117">使用提供的 <see cref="T:System.Data.DataTableReader" /> 对象的数组初始化 <see cref="T:System.Data.DataTable" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-117">Initializes a new instance of the <see cref="T:System.Data.DataTableReader" /> class using the supplied array of <see cref="T:System.Data.DataTable" /> objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c629-118">如果必须创建<xref:System.Data.DataTableReader>全部或在特定的表的子集基于<xref:System.Data.DataSet>，调用`DataSet`的<xref:System.Data.DataSet.CreateDataReader*>方法。</span><span class="sxs-lookup"><span data-stu-id="3c629-118">If you must create a <xref:System.Data.DataTableReader> based on all or a subset of the tables within a specific <xref:System.Data.DataSet>, call the `DataSet`'s <xref:System.Data.DataSet.CreateDataReader*> method.</span></span> <span data-ttu-id="3c629-119">如果你想要创建一个新<xref:System.Data.DataTableReader>实例根据一组`DataTable`实例都不否则相关，使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="3c629-119">If you want to create a new <xref:System.Data.DataTableReader> instance based on a group of `DataTable` instances that are not otherwise related, use this constructor.</span></span> <span data-ttu-id="3c629-120">你还可以利用此构造函数以重新排列的顺序`DataTables`内`DataTableReader`，如果它们的顺序在其源`DataSet`并不满足你的需求。</span><span class="sxs-lookup"><span data-stu-id="3c629-120">You can also take advantage of this constructor to rearrange the ordering of the `DataTables` within the `DataTableReader`, if their ordering within their source `DataSet` does not meet your needs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c629-121">在下面的示例中，该 TestConstructor 方法将创建两个<xref:System.Data.DataTable>实例。</span><span class="sxs-lookup"><span data-stu-id="3c629-121">In the following example, the TestConstructor method creates two <xref:System.Data.DataTable> instances.</span></span> <span data-ttu-id="3c629-122">为了演示此构造函数<xref:System.Data.DataTableReader>类，示例创建一个新`DataTableReader`基于包含两个数组`DataTables`，并执行一个简单的操作，将前几列中的内容输出到控制台窗口。</span><span class="sxs-lookup"><span data-stu-id="3c629-122">In order to demonstrate this constructor for the <xref:System.Data.DataTableReader> class, the sample creates a new `DataTableReader` based on an array that contains the two `DataTables`, and performs a simple operation, printing the contents from the first few columns to the console window.</span></span> <span data-ttu-id="3c629-123">若要测试此应用程序，创建一个新的控制台应用程序，并将示例代码粘贴到刚创建的文件。</span><span class="sxs-lookup"><span data-stu-id="3c629-123">In order to test this application, create a new Console application, and paste the sample code into the newly created file.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.ctor#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.ctor/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.ctor/VB/source.vb#1)]  
  
 <span data-ttu-id="3c629-124">控制台窗口会显示以下结果：</span><span class="sxs-lookup"><span data-stu-id="3c629-124">The Console window displays the following results:</span></span>  
  
```  
1 Mary  
2 Andy  
3 Peter  
4 Russ  
1 Wireless Network Card  
2 Hard Drive  
3 Monitor  
4 CPU  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="dataTableReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3c629-125">关闭当前的 <see cref="T:System.Data.DataTableReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-125">Closes the current <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c629-126">调用`Close()`上关闭`DataTableReader`对象不会引发错误。</span><span class="sxs-lookup"><span data-stu-id="3c629-126">Calling `Close()` on a closed `DataTableReader` object does not raise an error.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Data.DataTableReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c629-127">
            <see cref="T:System.Data.DataTableReader" /> 的当前行的嵌套深度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-127">The depth of nesting for the current row of the <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c629-128">当前行的嵌套深度；始终为零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-128">The depth of nesting for the current row; always zero.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c629-129">`DataTableReader` 不支持嵌套。</span><span class="sxs-lookup"><span data-stu-id="3c629-129">`DataTableReader` does not support nesting.</span></span> <span data-ttu-id="3c629-130">`Depth`属性始终返回零。</span><span class="sxs-lookup"><span data-stu-id="3c629-130">The `Depth` property always returns zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public override int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.FieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldCount : int" Usage="System.Data.DataTableReader.FieldCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c629-131">返回当前行中的列数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-131">Returns the number of columns in the current row.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c629-132">如果未定位在有效的结果集中，则为 0；否则为当前行中的列数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-132">When not positioned in a valid result set, 0; otherwise the number of columns in the current row.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c629-133">尝试在关闭的 <see cref="T:System.Data.DataTableReader" /> 中检索字段计数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-133">An attempt was made to retrieve the field count in a closed <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public override bool GetBoolean (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetBoolean(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBoolean (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetBoolean(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetBoolean : int -&gt; bool" Usage="dataTableReader.GetBoolean ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="3c629-134">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-134">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c629-135">获取指定列的 <see cref="T:System.Boolean" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-135">Gets the value of the specified column as a <see cref="T:System.Boolean" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c629-136">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-136">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c629-137">不进行任何转换;因此检索到的数据已必须的布尔值或强制转换为一个布尔值，或生成异常。</span><span class="sxs-lookup"><span data-stu-id="3c629-137">No conversions are performed; therefore the data retrieved must either already be a Boolean or coercible to a Boolean, or an exception is generated.</span></span>  
  
 <span data-ttu-id="3c629-138">调用<xref:System.Data.DataTableReader.IsDBNull%2A>以查看是否存在 null 值调用此方法之前。</span><span class="sxs-lookup"><span data-stu-id="3c629-138">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c629-139">下面的示例显示中传入的编号为 2 的列的内容<xref:System.Data.DataTableReader>。</span><span class="sxs-lookup"><span data-stu-id="3c629-139">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="3c629-140">如果值为 null 的特定行中的列，代码将显示文本\<NULL >。</span><span class="sxs-lookup"><span data-stu-id="3c629-140">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="3c629-141">如果列中的数据不是正确的类型，此示例将显示每个行的错误消息。</span><span class="sxs-lookup"><span data-stu-id="3c629-141">If the data within the column is not the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetBoolean#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBoolean/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetBoolean#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBoolean/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c629-142">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-142">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="3c629-143">尝试从已删除的行中检索数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-143">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c629-144">尝试读取或访问已关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-144">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="3c629-145">指定的列不包含 <see langword="Boolean" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-145">The specified column does not contain a <see langword="Boolean" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public override byte GetByte (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8 GetByte(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByte (ordinal As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Byte GetByte(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetByte : int -&gt; byte" Usage="dataTableReader.GetByte ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="3c629-146">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-146">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c629-147">以字节的形式获取指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-147">Gets the value of the specified column as a byte.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c629-148">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-148">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c629-149">不进行任何转换;因此检索到的数据必须已经是一个字节或强制转换为一个字节。</span><span class="sxs-lookup"><span data-stu-id="3c629-149">No conversions are performed; therefore the data retrieved must already be a byte or coercible to a byte.</span></span>  
  
 <span data-ttu-id="3c629-150">调用<xref:System.Data.DataTableReader.IsDBNull%2A>以查看是否存在 null 值调用此方法之前。</span><span class="sxs-lookup"><span data-stu-id="3c629-150">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c629-151">下面的示例显示中传入的编号为 2 的列的内容<xref:System.Data.DataTableReader>。</span><span class="sxs-lookup"><span data-stu-id="3c629-151">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="3c629-152">如果值为 null 的特定行中的列，代码将显示文本\<NULL >。</span><span class="sxs-lookup"><span data-stu-id="3c629-152">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="3c629-153">如果列中的数据的正确的类型不是，此示例将显示每个行的错误消息。</span><span class="sxs-lookup"><span data-stu-id="3c629-153">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetByte#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetByte/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetByte#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetByte/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c629-154">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-154">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="3c629-155">尝试从已删除的行中检索数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-155">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c629-156">尝试读取或访问已关闭的 <see langword="DataTableReader" /> 中的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-156">An attempt was made to read or access a column in a closed <see langword="DataTableReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="3c629-157">指定的列不包含字节。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-157">The specified column does not contain a byte.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override long GetBytes (int ordinal, long dataIndex, byte[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetBytes(int32 ordinal, int64 dataIndex, unsigned int8[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (ordinal As Integer, dataIndex As Long, buffer As Byte(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetBytes(int ordinal, long dataIndex, cli::array &lt;System::Byte&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : int * int64 * byte[] * int * int -&gt; int64" Usage="dataTableReader.GetBytes (ordinal, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="3c629-158">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-158">The zero-based column ordinal.</span>
          </span>
        </param>
        <param name="dataIndex">
          <span data-ttu-id="3c629-159">字段中作为读取操作起始位置的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-159">The index within the field from which to start the read operation.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="3c629-160">要读入字节流的缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-160">The buffer into which to read the stream of bytes.</span>
          </span>
        </param>
        <param name="bufferIndex">
          <span data-ttu-id="3c629-161">缓冲区中的索引，从该索引处开始放置数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-161">The index within the buffer at which to start placing the data.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="3c629-162">复制到缓冲区中的最大长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-162">The maximum length to copy into the buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c629-163">将从指定列偏移量开始的字节流作为从指定缓冲区偏移量开始的数组读入缓冲区中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-163">Reads a stream of bytes starting at the specified column offset into the buffer as an array starting at the specified buffer offset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c629-164">读取的实际字节数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-164">The actual number of bytes read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c629-165">`GetBytes` 返回的字段中的可用字节数。</span><span class="sxs-lookup"><span data-stu-id="3c629-165">`GetBytes` returns the number of available bytes in the field.</span></span> <span data-ttu-id="3c629-166">大多数情况下这是字段的确切长度。</span><span class="sxs-lookup"><span data-stu-id="3c629-166">Most of the time this is the exact length of the field.</span></span> <span data-ttu-id="3c629-167">但是，返回的版本号可能会小于该字段的真实长度如果`GetBytes`具有用于从字段中获取字节。</span><span class="sxs-lookup"><span data-stu-id="3c629-167">However, the number returned may be less than the true length of the field if `GetBytes` has already been used to obtain bytes from the field.</span></span> <span data-ttu-id="3c629-168">这可能是这种情况，例如，当<xref:System.Data.DataTableReader>正在读取到缓冲区中的大型数据结构</span><span class="sxs-lookup"><span data-stu-id="3c629-168">This may be the case, for example, when the <xref:System.Data.DataTableReader> is reading a large data structure into a buffer</span></span>  
  
 <span data-ttu-id="3c629-169">如果传递的缓冲区，则`null`(`Nothing`在 Visual Basic 中)，`GetBytes`返回整个字段的长度以字节为单位，不是基于缓冲区偏移量参数的剩余大小。</span><span class="sxs-lookup"><span data-stu-id="3c629-169">If you pass a buffer that is `null` (`Nothing` in Visual Basic), `GetBytes` returns the length of the entire field in bytes, not the remaining size based on the buffer offset parameter.</span></span>  
  
 <span data-ttu-id="3c629-170">不进行任何转换;因此检索到的数据必须已经是字节数组或强制转换为字节数组。</span><span class="sxs-lookup"><span data-stu-id="3c629-170">No conversions are performed; therefore the data retrieved must already be a byte array or coercible to a byte array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c629-171">下面的示例创建<xref:System.Data.DataTableReader>基于 AdventureWorks 示例数据库，并将保存到 C:\ 文件夹中的单独文件中检索每个图像中的数据。</span><span class="sxs-lookup"><span data-stu-id="3c629-171">The following example creates a <xref:System.Data.DataTableReader> based on data in the AdventureWorks sample database, and saves each image retrieved to a separate file in the C:\ folder.</span></span> <span data-ttu-id="3c629-172">若要测试此应用程序，创建一个新的控制台应用程序、 引用 System.Drawing.dll 程序集，并将示例代码粘贴到刚创建的文件。</span><span class="sxs-lookup"><span data-stu-id="3c629-172">In order to test this application, create a new Console application, reference the System.Drawing.dll assembly, and paste the sample code into the newly created file.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetBytes#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBytes/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetBytes#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBytes/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c629-173">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-173">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="3c629-174">尝试从已删除的行中检索数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-174">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c629-175">尝试读取或访问已关闭的 <see langword="DataTableReader" /> 中的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-175">An attempt was made to read or access a column in a closed <see langword="DataTableReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="3c629-176">指定的列不包含字节数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-176">The specified column does not contain a byte array.</span>
          </span>
        </exception>
        <altmember cref="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public override char GetChar (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetChar(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChar (ordinal As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetChar(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetChar : int -&gt; char" Usage="dataTableReader.GetChar ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="3c629-177">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-177">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c629-178">获取指定列的字符形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-178">Gets the value of the specified column as a character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c629-179">列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-179">The value of the column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c629-180">不进行任何转换;因此检索到的数据必须已经是一个字符或强制转换为一个字符。</span><span class="sxs-lookup"><span data-stu-id="3c629-180">No conversions are performed; therefore the data retrieved must already be a character or coercible to a character.</span></span>  
  
 <span data-ttu-id="3c629-181">调用<xref:System.Data.DataTableReader.IsDBNull%2A>以查看是否存在 null 值调用此方法之前。</span><span class="sxs-lookup"><span data-stu-id="3c629-181">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c629-182">下面的示例显示列中传入的 DataTableReader 编号为 2 的内容。</span><span class="sxs-lookup"><span data-stu-id="3c629-182">The following example displays the contents of the column numbered 2 within the passed-in DataTableReader.</span></span> <span data-ttu-id="3c629-183">如果值为 null 的特定行中的列，代码将显示文本\<NULL >。</span><span class="sxs-lookup"><span data-stu-id="3c629-183">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="3c629-184">如果列中的数据的正确的类型不是，此示例将显示每个行的错误消息。</span><span class="sxs-lookup"><span data-stu-id="3c629-184">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetChar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChar/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetChar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChar/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c629-185">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-185">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="3c629-186">尝试从已删除的行中检索数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-186">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c629-187">尝试读取或访问已关闭的 <see langword="DataTableReader" /> 中的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-187">An attempt was made to read or access a column in a closed <see langword="DataTableReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="3c629-188">指定的字段不包含字符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-188">The specified field does not contain a character.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override long GetChars (int ordinal, long dataIndex, char[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetChars(int32 ordinal, int64 dataIndex, char[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (ordinal As Integer, dataIndex As Long, buffer As Char(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetChars(int ordinal, long dataIndex, cli::array &lt;char&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetChars : int * int64 * char[] * int * int -&gt; int64" Usage="dataTableReader.GetChars (ordinal, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="3c629-189">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-189">The zero-based column ordinal.</span>
          </span>
        </param>
        <param name="dataIndex">
          <span data-ttu-id="3c629-190">字段中作为读取操作起始位置的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-190">The index within the field from which to start the read operation.</span>
          </span>
        </param>
        <param name="buffer">
          <span data-ttu-id="3c629-191">要读入字节流的缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-191">The buffer into which to read the stream of chars.</span>
          </span>
        </param>
        <param name="bufferIndex">
          <span data-ttu-id="3c629-192">缓冲区中的索引，从该索引处开始放置数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-192">The index within the buffer at which to start placing the data.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="3c629-193">复制到缓冲区中的最大长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-193">The maximum length to copy into the buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c629-194">以字符数组的形式返回指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-194">Returns the value of the specified column as a character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c629-195">读取的实际字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-195">The actual number of characters read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c629-196">`GetChars` 返回的字段中的可用的字符数。</span><span class="sxs-lookup"><span data-stu-id="3c629-196">`GetChars` returns the number of available characters in the field.</span></span> <span data-ttu-id="3c629-197">大多数情况下这是字段的确切长度。</span><span class="sxs-lookup"><span data-stu-id="3c629-197">Most of the time this is the exact length of the field.</span></span> <span data-ttu-id="3c629-198">但是，返回的版本号可能会小于该字段的真实长度如果`GetChars`具有用于从字段中获取字符。</span><span class="sxs-lookup"><span data-stu-id="3c629-198">However, the number returned may be less than the true length of the field if `GetChars` has already been used to obtain characters from the field.</span></span>  
  
 <span data-ttu-id="3c629-199">实际读取的字符数可以小于请求的长度，如果字段的结尾为止。</span><span class="sxs-lookup"><span data-stu-id="3c629-199">The actual number of characters read can be less than the requested length, if the end of the field is reached.</span></span> <span data-ttu-id="3c629-200">如果传递的缓冲区，则为 null (`Nothing`在 Visual Basic 中)，`GetChars`以字符为单位，不是基于缓冲区偏移量参数的剩余大小返回整个字段的长度。</span><span class="sxs-lookup"><span data-stu-id="3c629-200">If you pass a buffer that is null (`Nothing` in Visual Basic), `GetChars` returns the length of the entire field in characters, not the remaining size based on the buffer offset parameter.</span></span>  
  
 <span data-ttu-id="3c629-201">不进行任何转换;因此要检索的数据必须已经是字符数组或强制转换为字符数组。</span><span class="sxs-lookup"><span data-stu-id="3c629-201">No conversions are performed; therefore the data to be retrieved must already be a character array or coercible to a character array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c629-202">下面的示例演示`GetChars`方法。</span><span class="sxs-lookup"><span data-stu-id="3c629-202">The following example demonstrates the `GetChars` method.</span></span> <span data-ttu-id="3c629-203">`TestGetChars`方法需要传入`DataTableReader`包含两个列的数据填充： 第一列，并在第二个字符的数组中的文件名。</span><span class="sxs-lookup"><span data-stu-id="3c629-203">The `TestGetChars` method expects to be passed a `DataTableReader` filled with two columns of data: a file name in the first column, and an array of characters in the second.</span></span> <span data-ttu-id="3c629-204">此外，`TestGetChars`允许您指定要用作它读取的字符数组中的数据的缓冲区大小`DataTableReader`。</span><span class="sxs-lookup"><span data-stu-id="3c629-204">In addition, `TestGetChars` lets you specify the buffer size to be used as it reads the data from the character array in the `DataTableReader`.</span></span> <span data-ttu-id="3c629-205">`TestGetChars` 创建一个对应于每个行中的数据的文件`DataTableReader`，使用所提供的数据中的第一列`DataTableReader`作为文件名。</span><span class="sxs-lookup"><span data-stu-id="3c629-205">`TestGetChars` creates a file corresponding to each row of data in the `DataTableReader`, using the supplied data in the first column of the `DataTableReader` as the file name.</span></span>  
  
 <span data-ttu-id="3c629-206">此过程演示如何使用`GetChars`方法读取数据时存储在`DataTable`字符数组的形式。</span><span class="sxs-lookup"><span data-stu-id="3c629-206">This procedure demonstrates the use of the `GetChars` method reading data that was stored in the `DataTable` as a character array.</span></span> <span data-ttu-id="3c629-207">任何其他类型的数据都会导致`GetChars`方法会引发`InvalidCastException`。</span><span class="sxs-lookup"><span data-stu-id="3c629-207">Any other type of data causes the `GetChars` method to throw an `InvalidCastException`.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetChars#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChars/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChars/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c629-208">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-208">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="3c629-209">尝试从已删除的行中检索数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-209">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c629-210">尝试读取或访问已关闭的 <see langword="DataTableReader" /> 中的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-210">An attempt was made to read or access a column in a closed <see langword="DataTableReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="3c629-211">指定的列不包含字符数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-211">The specified column does not contain a character array.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public override string GetDataTypeName (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDataTypeName(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDataTypeName (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDataTypeName(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDataTypeName : int -&gt; string" Usage="dataTableReader.GetDataTypeName ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="3c629-212">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-212">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c629-213">获取一个表示指定列的数据类型的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-213">Gets a string representing the data type of the specified column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c629-214">一个表示列的数据类型的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-214">A string representing the column's data type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c629-215"><xref:System.Data.DataTableReader.GetDataTypeName%2A>方法始终返回的一种基础<xref:System.Data.DataColumn>而不是特定于提供程序类型。</span><span class="sxs-lookup"><span data-stu-id="3c629-215">The <xref:System.Data.DataTableReader.GetDataTypeName%2A> method always returns the type of the underlying <xref:System.Data.DataColumn> instead of a provider-specific type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c629-216">以下控制台应用程序显示的字段和从一个简单类型名称列表<xref:System.Data.DataTable>:</span><span class="sxs-lookup"><span data-stu-id="3c629-216">The following console application displays a list of fields and their type names from a simple <xref:System.Data.DataTable>:</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetDataTypeName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDataTypeName/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDataTypeName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDataTypeName/VB/source.vb#1)]  
  
 <span data-ttu-id="3c629-217">控制台窗口会显示以下结果：</span><span class="sxs-lookup"><span data-stu-id="3c629-217">The Console window displays the following results:</span></span>  
  
```  
ID: Int32  
Name: String  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c629-218">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-218">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c629-219">尝试读取或访问已关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-219">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public override DateTime GetDateTime (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime GetDateTime(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDateTime (ordinal As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime GetDateTime(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDateTime : int -&gt; DateTime" Usage="dataTableReader.GetDateTime ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="3c629-220">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-220">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c629-221">以 <see cref="T:System.DateTime" /> 对象的形式获取指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-221">Gets the value of the specified column as a <see cref="T:System.DateTime" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c629-222">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-222">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c629-223">不进行任何转换;因此检索到的数据必须已经是<xref:System.DateTime>或强制转换为`DataTime`。</span><span class="sxs-lookup"><span data-stu-id="3c629-223">No conversions are performed; therefore the data retrieved must already be a <xref:System.DateTime> or coercible to a `DataTime`.</span></span>  
  
 <span data-ttu-id="3c629-224">调用<xref:System.Data.DataTableReader.IsDBNull%2A>以查看是否存在 null 值调用此方法之前。</span><span class="sxs-lookup"><span data-stu-id="3c629-224">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c629-225">下面的示例显示中传入的编号为 2 的列的内容<xref:System.Data.DataTableReader>。</span><span class="sxs-lookup"><span data-stu-id="3c629-225">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="3c629-226">如果值为 null 的特定行中的列，代码将显示文本\<NULL >。</span><span class="sxs-lookup"><span data-stu-id="3c629-226">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="3c629-227">如果列中的数据的正确的类型不是，此示例将显示每个行的错误消息。</span><span class="sxs-lookup"><span data-stu-id="3c629-227">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetDateTime#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDateTime/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDateTime#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDateTime/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c629-228">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-228">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="3c629-229">尝试从已删除的行中检索数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-229">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c629-230">尝试读取或访问已关闭的 <see langword="DataTableReader" /> 中的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-230">An attempt was made to read or access a column in a closed <see langword="DataTableReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="3c629-231">指定的列不包含 DateTime 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-231">The specified column does not contain a DateTime value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public override decimal GetDecimal (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Decimal GetDecimal(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecimal (ordinal As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Decimal GetDecimal(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDecimal : int -&gt; decimal" Usage="dataTableReader.GetDecimal ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="3c629-232">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-232">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c629-233">获取指定列的 <see cref="T:System.Decimal" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-233">Gets the value of the specified column as a <see cref="T:System.Decimal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c629-234">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-234">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c629-235">不进行任何转换;因此检索到的数据必须已经是<xref:System.Decimal>或强制转换为`Decimal`。</span><span class="sxs-lookup"><span data-stu-id="3c629-235">No conversions are performed; therefore the data retrieved must already be a <xref:System.Decimal> or coercible to a `Decimal`.</span></span>  
  
 <span data-ttu-id="3c629-236">调用<xref:System.Data.DataTableReader.IsDBNull%2A>以查看是否存在 null 值调用此方法之前。</span><span class="sxs-lookup"><span data-stu-id="3c629-236">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c629-237">下面的示例显示中传入的编号为 2 的列的内容<xref:System.Data.DataTableReader>。</span><span class="sxs-lookup"><span data-stu-id="3c629-237">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="3c629-238">如果值为 null 的特定行中的列，代码将显示文本\<NULL >。</span><span class="sxs-lookup"><span data-stu-id="3c629-238">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="3c629-239">如果列中的数据的正确的类型不是，此示例将显示每个行的错误消息。</span><span class="sxs-lookup"><span data-stu-id="3c629-239">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetDecimal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDecimal/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDecimal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDecimal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c629-240">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-240">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="3c629-241">尝试从已删除的行中检索数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-241">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c629-242">尝试读取或访问已关闭的 <see langword="DataTableReader" /> 中的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-242">An attempt was made to read or access a column in a closed <see langword="DataTableReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="3c629-243">指定的列不包含 <see langword="Decimal" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-243">The specified column does not contain a <see langword="Decimal" /> value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public override double GetDouble (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 GetDouble(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDouble (ordinal As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override double GetDouble(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDouble : int -&gt; double" Usage="dataTableReader.GetDouble ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="3c629-244">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-244">The zero-based ordinal of the column.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c629-245">获取双精度浮点数形式的列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-245">Gets the value of the column as a double-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c629-246">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-246">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c629-247">不进行任何转换;因此检索到的数据必须已经是双精度浮点数，或必须可以强制转换为双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="3c629-247">No conversions are performed; therefore the data retrieved must already be a double-precision floating point number or must be coercible to a double-precision floating point number.</span></span>  
  
 <span data-ttu-id="3c629-248">调用<xref:System.Data.DataTableReader.IsDBNull%2A>以查看是否存在 null 值调用此方法之前。</span><span class="sxs-lookup"><span data-stu-id="3c629-248">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c629-249">下面的示例显示中传入的编号为 2 的列的内容<xref:System.Data.DataTableReader>。</span><span class="sxs-lookup"><span data-stu-id="3c629-249">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="3c629-250">如果值为 null 的特定行中的列，代码将显示文本\<NULL >。</span><span class="sxs-lookup"><span data-stu-id="3c629-250">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="3c629-251">如果列中的数据的正确的类型不是，此示例将显示每个行的错误消息。</span><span class="sxs-lookup"><span data-stu-id="3c629-251">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetDouble#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDouble/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDouble#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDouble/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c629-252">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-252">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="3c629-253">尝试从已删除的行中检索数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-253">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c629-254">尝试读取或访问已关闭的 <see langword="DataTableReader" /> 中的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-254">An attempt was made to read or access a column in a closed <see langword="DataTableReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="3c629-255">指定的列不包含双精度浮点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-255">The specified column does not contain a double-precision floating point number.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="dataTableReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3c629-256">返回一个可用于循环访问项集合的枚举数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-256">Returns an enumerator that can be used to iterate through the item collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c629-257">一个 <see cref="T:System.Collections.IEnumerator" /> 对象，它代表项集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-257">An <see cref="T:System.Collections.IEnumerator" /> object that represents the item collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c629-258">枚举器只允许读取中的数据<xref:System.Data.DataTableReader>。</span><span class="sxs-lookup"><span data-stu-id="3c629-258">Enumerators only allow for reading the data in the <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="3c629-259">枚举器不能用于修改基础集合。</span><span class="sxs-lookup"><span data-stu-id="3c629-259">Enumerators cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="3c629-260">首先，枚举数定位在集合中的第一个元素之前。</span><span class="sxs-lookup"><span data-stu-id="3c629-260">At first, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="3c629-261">在此位置，调用<xref:System.Collections.IEnumerator.Current%2A>引发异常。</span><span class="sxs-lookup"><span data-stu-id="3c629-261">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="3c629-262">因此，在读取 `MoveNext` 的值之前，必须调用 `Current` 将枚举器向前移动到集合的第一个元素。</span><span class="sxs-lookup"><span data-stu-id="3c629-262">Therefore, you must call `MoveNext` to advance the enumerator to the first element of the collection before reading the value of `Current`.</span></span>  
  
 <span data-ttu-id="3c629-263">`Current` 返回<xref:System.Data.Common.DbDataRecord>，直到返回相同的对象和<xref:System.Collections.IEnumerator.MoveNext%2A>或<xref:System.Collections.IEnumerator.Reset%2A>调用。</span><span class="sxs-lookup"><span data-stu-id="3c629-263">`Current` returns a <xref:System.Data.Common.DbDataRecord>, and returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="3c629-264">`MoveNext` 将 `Current` 设置为下一个元素。</span><span class="sxs-lookup"><span data-stu-id="3c629-264">`MoveNext` sets `Current` to the next element.</span></span>  
  
 <span data-ttu-id="3c629-265">该枚举数传递到集合的末尾之后，将放在集合中，最后一个元素后面且调用`MoveNext`返回 false。</span><span class="sxs-lookup"><span data-stu-id="3c629-265">After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling `MoveNext` returns false.</span></span> <span data-ttu-id="3c629-266">如果最后一次调用到`MoveNext`返回`false`，则调用`Current`引发异常。</span><span class="sxs-lookup"><span data-stu-id="3c629-266">If the last call to `MoveNext` returned `false`, calling `Current` throws an exception.</span></span> <span data-ttu-id="3c629-267">此外，因为<xref:System.Data.DataTableReader>提供只进访问其数据，调用<xref:System.Collections.IEnumerator.Reset%2A>IEnumerator 方法将引发<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="3c629-267">In addition, because the <xref:System.Data.DataTableReader> provides forward-only access to its data, calling the <xref:System.Collections.IEnumerator.Reset%2A> method of the IEnumerator throws a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="3c629-268"><xref:System.Data.DataTableReader>提供稳定的枚举器。</span><span class="sxs-lookup"><span data-stu-id="3c629-268">The <xref:System.Data.DataTableReader> provides a stable enumerator.</span></span> <span data-ttu-id="3c629-269">这意味着，即使在基础数据中发生的行删除或添加项，通过调用返回的枚举数<xref:System.Data.DataTableReader.GetEnumerator%2A>仍然有效。</span><span class="sxs-lookup"><span data-stu-id="3c629-269">This means that even if row deletions or additions occur within the underlying data, the enumerator returned by a call to <xref:System.Data.DataTableReader.GetEnumerator%2A> is still valid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c629-270">下面的示例演示 <xref:System.Data.DataTableReader.GetEnumerator%2A> 方法的用法。</span><span class="sxs-lookup"><span data-stu-id="3c629-270">The following example demonstrates the use of the <xref:System.Data.DataTableReader.GetEnumerator%2A> method.</span></span> <span data-ttu-id="3c629-271">这包括的行为的枚举数，从基础删除行时<xref:System.Data.DataTable>枚举器处于活动状态时。</span><span class="sxs-lookup"><span data-stu-id="3c629-271">This includes the behavior of the enumerator when rows are deleted from the underlying <xref:System.Data.DataTable> while the enumerator is active.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetEnumerator/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetEnumerator/VB/source.vb#1)]  
  
 <span data-ttu-id="3c629-272">该过程在控制台窗口中显示以下文本：</span><span class="sxs-lookup"><span data-stu-id="3c629-272">The procedure displays the following text in the Console window:</span></span>  
  
```  
Peter  
Mary  
Russ  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c629-273">尝试读取或访问已关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-273">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public override Type GetFieldType (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetFieldType(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFieldType (ordinal As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetFieldType(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetFieldType : int -&gt; Type" Usage="dataTableReader.GetFieldType ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="3c629-274">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-274">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c629-275">获取作为对象的数据类型的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-275">Gets the <see cref="T:System.Type" /> that is the data type of the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c629-276">作为对象的数据类型的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-276">The <see cref="T:System.Type" /> that is the data type of the object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3c629-277">调用以下过程中，传入<xref:System.Data.DataTableReader>实例，以在控制台窗口中显示所有字段和每种类型的完整名称的列表。</span><span class="sxs-lookup"><span data-stu-id="3c629-277">Call the following procedure, passing in a <xref:System.Data.DataTableReader> instance in order to display a list of all the fields and the full name for each type in the Console window.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetFieldType#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFieldType/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetFieldType#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFieldType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c629-278">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-278">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c629-279">尝试读取或访问已关闭 <see cref="T:System.Data.DataTableReader" /> 中的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-279">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /> .</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public override float GetFloat (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 GetFloat(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetFloat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFloat (ordinal As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override float GetFloat(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetFloat : int -&gt; single" Usage="dataTableReader.GetFloat ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="3c629-280">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-280">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c629-281">以单精度浮点数字的形式获取指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-281">Gets the value of the specified column as a single-precision floating point number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c629-282">列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-282">The value of the column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c629-283">不进行任何转换;因此检索到的数据必须已经是单精度浮点数，或必须可以强制转换为单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="3c629-283">No conversions are performed; therefore the data retrieved must already be a single-precision floating point number or must be coercible to a single-precision floating point number.</span></span>  
  
 <span data-ttu-id="3c629-284">调用<xref:System.Data.DataTableReader.IsDBNull%2A>以查看是否存在 null 值调用此方法之前。</span><span class="sxs-lookup"><span data-stu-id="3c629-284">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c629-285">下面的示例显示中传入的编号为 2 的列的内容<xref:System.Data.DataTableReader>。</span><span class="sxs-lookup"><span data-stu-id="3c629-285">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="3c629-286">如果值为 null 的特定行中的列，代码将显示文本\<NULL >。</span><span class="sxs-lookup"><span data-stu-id="3c629-286">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="3c629-287">如果列中的数据的正确的类型不是，此示例将显示每个行的错误消息。</span><span class="sxs-lookup"><span data-stu-id="3c629-287">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetFloat#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFloat/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetFloat#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFloat/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c629-288">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-288">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="3c629-289">尝试从已删除的行中检索数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-289">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c629-290">尝试读取或访问已关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-290">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="3c629-291">指定的列不包含单精度浮点数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-291">The specified column does not contain a single-precision floating point number.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public override Guid GetGuid (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Guid GetGuid(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGuid (ordinal As Integer) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Guid GetGuid(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetGuid : int -&gt; Guid" Usage="dataTableReader.GetGuid ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="3c629-292">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-292">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c629-293">以全局唯一标识符 (GUID) 的形式获取指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-293">Gets the value of the specified column as a globally-unique identifier (GUID).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c629-294">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-294">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c629-295">不进行任何转换;因此检索到的数据必须已经是<xref:System.Guid>或强制转换为`Guid`。</span><span class="sxs-lookup"><span data-stu-id="3c629-295">No conversions are performed; therefore the data retrieved must already be a <xref:System.Guid> or coercible to a `Guid`.</span></span>  
  
 <span data-ttu-id="3c629-296">调用<xref:System.Data.DataTableReader.IsDBNull%2A>以查看是否存在 null 值调用此方法之前。</span><span class="sxs-lookup"><span data-stu-id="3c629-296">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c629-297">下面的示例显示列中传入的 DataTableReader 编号为 2 的内容。</span><span class="sxs-lookup"><span data-stu-id="3c629-297">The following example displays the contents of the column numbered 2 within the passed-in DataTableReader.</span></span> <span data-ttu-id="3c629-298">如果值为 null 的特定行中的列，代码将显示文本\<NULL >。</span><span class="sxs-lookup"><span data-stu-id="3c629-298">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="3c629-299">如果列中的数据的正确的类型不是，此示例将显示每个行的错误消息。</span><span class="sxs-lookup"><span data-stu-id="3c629-299">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetGuid#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetGuid/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetGuid#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetGuid/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c629-300">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-300">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="3c629-301">尝试从已删除的行中检索数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-301">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c629-302">尝试读取或访问已关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-302">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="3c629-303">指定的列不包含 GUID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-303">The specified column does not contain a GUID.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public override short GetInt16 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int16 GetInt16(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt16 (ordinal As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override short GetInt16(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt16 : int -&gt; int16" Usage="dataTableReader.GetInt16 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="3c629-304">从零开始的列序号</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-304">The zero-based column ordinal</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c629-305">获取指定列的 16 位带符号整数形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-305">Gets the value of the specified column as a 16-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c629-306">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-306">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c629-307">不进行任何转换;因此，检索的数据必须已经是<xref:System.Int16>或强制转换为`Int16`。</span><span class="sxs-lookup"><span data-stu-id="3c629-307">No conversions are performed; therefore, the data retrieved must already be an <xref:System.Int16> or coercible to an `Int16`.</span></span>  
  
 <span data-ttu-id="3c629-308">调用<xref:System.Data.DataTableReader.IsDBNull%2A>以查看是否存在 null 值调用此方法之前。</span><span class="sxs-lookup"><span data-stu-id="3c629-308">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c629-309">下面的示例显示中传入的编号为 2 的列的内容<xref:System.Data.DataTableReader>。</span><span class="sxs-lookup"><span data-stu-id="3c629-309">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="3c629-310">如果值为 null 的特定行中的列，代码将显示文本\<NULL >。</span><span class="sxs-lookup"><span data-stu-id="3c629-310">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="3c629-311">如果列中的数据的正确的类型不是，此示例将显示每个行的错误消息。</span><span class="sxs-lookup"><span data-stu-id="3c629-311">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetInt16#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt16/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetInt16#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt16/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c629-312">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-312">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="3c629-313">尝试从已删除的行中检索数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-313">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c629-314">尝试读取或访问已关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-314">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="3c629-315">指定的列不包含 16 位带符号整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-315">The specified column does not contain a 16-bit signed integer.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public override int GetInt32 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetInt32(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt32 (ordinal As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetInt32(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt32 : int -&gt; int" Usage="dataTableReader.GetInt32 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="3c629-316">从零开始的列序号</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-316">The zero-based column ordinal</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c629-317">获取指定列的 32 位带符号整数形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-317">Gets the value of the specified column as a 32-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c629-318">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-318">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c629-319">不进行任何转换;因此，检索的数据必须已经是<xref:System.Int32>或强制转换为`Int32`。</span><span class="sxs-lookup"><span data-stu-id="3c629-319">No conversions are performed; therefore, the data retrieved must already be an <xref:System.Int32> or coercible to an `Int32`.</span></span>  
  
 <span data-ttu-id="3c629-320">调用<xref:System.Data.DataTableReader.IsDBNull%2A>以查看是否存在 null 值调用此方法之前。</span><span class="sxs-lookup"><span data-stu-id="3c629-320">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c629-321">下面的示例显示中传入的编号为 2 的列的内容<xref:System.Data.DataTableReader>。</span><span class="sxs-lookup"><span data-stu-id="3c629-321">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="3c629-322">如果值为 null 的特定行中的列，代码将显示文本\<NULL >。</span><span class="sxs-lookup"><span data-stu-id="3c629-322">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="3c629-323">如果列中的数据的正确的类型不是，此示例将显示每个行的错误消息。</span><span class="sxs-lookup"><span data-stu-id="3c629-323">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetInt32#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt32/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetInt32#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt32/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c629-324">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-324">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="3c629-325">尝试从已删除的行中检索数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-325">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c629-326">尝试读取或访问已关闭 <see cref="T:System.Data.DataTableReader" /> 中的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-326">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /> .</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="3c629-327">指定的列不包含 32 位带符号整数值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-327">The specified column does not contain a 32-bit signed integer value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public override long GetInt64 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetInt64(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt64 (ordinal As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetInt64(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt64 : int -&gt; int64" Usage="dataTableReader.GetInt64 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="3c629-328">从零开始的列序号</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-328">The zero-based column ordinal</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c629-329">以 64 位有符号整数的形式获取指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-329">Gets the value of the specified column as a 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c629-330">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-330">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c629-331">不进行任何转换;因此，检索的数据必须已经是<xref:System.Int64>或强制转换为`Int64`。</span><span class="sxs-lookup"><span data-stu-id="3c629-331">No conversions are performed; therefore, the data retrieved must already be an <xref:System.Int64> or coercible to an `Int64`.</span></span>  
  
 <span data-ttu-id="3c629-332">调用<xref:System.Data.DataTableReader.IsDBNull%2A>以查看是否存在 null 值调用此方法之前。</span><span class="sxs-lookup"><span data-stu-id="3c629-332">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c629-333">下面的示例显示中传入的编号为 2 的列的内容<xref:System.Data.DataTableReader>。</span><span class="sxs-lookup"><span data-stu-id="3c629-333">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="3c629-334">如果值为 null 的特定行中的列，代码将显示文本\<NULL >。</span><span class="sxs-lookup"><span data-stu-id="3c629-334">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="3c629-335">如果列中的数据的正确的类型不是，此示例将显示每个行的错误消息。</span><span class="sxs-lookup"><span data-stu-id="3c629-335">If the data within the column is not of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetInt64#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt64/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetInt64#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt64/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c629-336">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-336">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="3c629-337">尝试从已删除的行中检索数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-337">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c629-338">尝试读取或访问已关闭 <see cref="T:System.Data.DataTableReader" /> 中的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-338">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /> .</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="3c629-339">指定的列不包含 64 位带符号整数值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-339">The specified column does not contain a 64-bit signed integer value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override string GetName (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetName(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetName(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetName : int -&gt; string" Usage="dataTableReader.GetName ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="3c629-340">从零开始的列序号</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-340">The zero-based column ordinal</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c629-341">获取指定列的 <see cref="T:System.String" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-341">Gets the value of the specified column as a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c629-342">指定列的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-342">The name of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c629-343">`GetName`和<xref:System.Data.DataTableReader.GetOrdinal%2A>方法提供反向功能。</span><span class="sxs-lookup"><span data-stu-id="3c629-343">The `GetName` and <xref:System.Data.DataTableReader.GetOrdinal%2A> methods provide inverse functionality.</span></span> <span data-ttu-id="3c629-344">也就是说，调用`GetOrdinal`上调用的返回值`GetName`应返回原始的参数传递给`GetName`; 这同样适用于以相反顺序调用过程。</span><span class="sxs-lookup"><span data-stu-id="3c629-344">That is, calling `GetOrdinal` on the return value of calling `GetName` should return the original parameter passed to `GetName`; the same applies to calling the procedures in the opposite order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c629-345">下面的简单示例包含一个过程，它列出在指定的所有列的名称`DataTableReader`，以及列的序号位置，到控制台窗口。</span><span class="sxs-lookup"><span data-stu-id="3c629-345">The following simple example includes a procedure that lists the names of all the columns within the specified `DataTableReader`, and the column's ordinal position, to the Console window.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetName/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetName/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c629-346">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-346">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c629-347">尝试读取或访问已关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-347">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public override int GetOrdinal (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetOrdinal(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetOrdinal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOrdinal (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetOrdinal(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetOrdinal : string -&gt; int" Usage="dataTableReader.GetOrdinal name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="3c629-348">列的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-348">The name of the column.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c629-349">在给定列名时获取相应的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-349">Gets the column ordinal, given the name of the column.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c629-350">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-350">The zero-based column ordinal.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c629-351">因为由提供的大多数方法<xref:System.Data.DataTableReader>类必须提供与某一序号列号，你可以使用`GetOrdinal`方法来检索列号，给定的列的名称。</span><span class="sxs-lookup"><span data-stu-id="3c629-351">Because most of the methods provided by the <xref:System.Data.DataTableReader> class must be provided with an ordinal column number, you can use the `GetOrdinal` method to retrieve the column number, given the name of the column.</span></span>  
  
 <span data-ttu-id="3c629-352">`GetOrdinal` 第一次执行区分大小写的查找。</span><span class="sxs-lookup"><span data-stu-id="3c629-352">`GetOrdinal` performs a case-sensitive lookup first.</span></span> <span data-ttu-id="3c629-353">如果失败，进行第二个的不区分大小写搜索。</span><span class="sxs-lookup"><span data-stu-id="3c629-353">If it fails, a second case-insensitive search is made.</span></span> <span data-ttu-id="3c629-354">如果找不到的列号`IndexOutOfRangeException`引发。</span><span class="sxs-lookup"><span data-stu-id="3c629-354">If the column number is not found an `IndexOutOfRangeException` is thrown.</span></span>  
  
 <span data-ttu-id="3c629-355">`GetOrdinal` 不区分假名宽度。</span><span class="sxs-lookup"><span data-stu-id="3c629-355">`GetOrdinal` is kana-width insensitive.</span></span>  
  
 <span data-ttu-id="3c629-356">由于基于序号的查找，比命名查找更为有效，它是效率不高调用`GetOrdinal`在循环中。</span><span class="sxs-lookup"><span data-stu-id="3c629-356">Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call `GetOrdinal` within a loop.</span></span> <span data-ttu-id="3c629-357">通过调用来节省时间`GetOrdinal`一次并将结果赋给整数变量以便在循环内的使用</span><span class="sxs-lookup"><span data-stu-id="3c629-357">Save time by calling `GetOrdinal` one time and assigning the results to an integer variable for use within the loop</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c629-358">如果必须仅包含列名称，列名称在这种情况下是用户提供，和必须从该列检索信息，你可以使用类似于下面的过程来提取所需的信息。</span><span class="sxs-lookup"><span data-stu-id="3c629-358">If you have only a column name, in which case the column name is user supplied, and you must retrieve information from the column, you can use a procedure like the following to extract the required information.</span></span> <span data-ttu-id="3c629-359">在此示例中，该过程接受一个列名称，并返回包含该列中当前行中的数据<xref:System.Data.DataTableReader>:</span><span class="sxs-lookup"><span data-stu-id="3c629-359">In this example, the procedure accepts a column name and returns the data that is contained within that column for the current row in the <xref:System.Data.DataTableReader> :</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetOrdinal/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c629-360">尝试读取或访问已关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-360">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3c629-361">指定的名称不是有效的列名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-361">The name specified is not a valid column name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificFieldType">
      <MemberSignature Language="C#" Value="public override Type GetProviderSpecificFieldType (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetProviderSpecificFieldType(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificFieldType (ordinal As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetProviderSpecificFieldType(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificFieldType : int -&gt; Type" Usage="dataTableReader.GetProviderSpecificFieldType ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="3c629-362">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-362">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c629-363">获取指定列特定于提供程序的格式的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-363">Gets the type of the specified column in provider-specific format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c629-364">作为对象的数据类型的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-364">The <see cref="T:System.Type" /> that is the data type of the object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c629-365">因为<xref:System.Data.DataTableReader>始终返回存储在基础类型<xref:System.Data.DataColumn>，通过调用返回的值<xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A>方法始终返回相同的类型为存储中的类型<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="3c629-365">Because the <xref:System.Data.DataTableReader> always returns the type stored within the underlying <xref:System.Data.DataColumn>, the value returned by calling the <xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A> method always returns the same type as the type stored within the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="3c629-366">当你处理的<xref:System.Data.DataTableReader>类，调用<xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A>方法返回相同的类型与调用<xref:System.Type.GetType%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3c629-366">When you work with the <xref:System.Data.DataTableReader> class, calling the <xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A> method returns the same type as calling the <xref:System.Type.GetType%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c629-367">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-367">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c629-368">尝试读取或访问已关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-368">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Data.DataTableReader.GetFieldType(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValue">
      <MemberSignature Language="C#" Value="public override object GetProviderSpecificValue (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetProviderSpecificValue(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValue (ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetProviderSpecificValue(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificValue : int -&gt; obj" Usage="dataTableReader.GetProviderSpecificValue ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="3c629-369">值被检索的列的从零开始的编号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-369">The zero-based number of the column whose value is retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c629-370">获取指定列特定于提供程序的格式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-370">Gets the value of the specified column in provider-specific format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c629-371">指定列特定于提供程序的格式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-371">The value of the specified column in provider-specific format.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c629-372">因为<xref:System.Data.DataTableReader>始终返回存储在基础类型<xref:System.Data.DataColumn>，通过调用返回的值<xref:System.Data.DataTableReader.GetProviderSpecificValue%2A>方法始终返回内存储的数据与相同类型的数据<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="3c629-372">Because the <xref:System.Data.DataTableReader> always returns the type stored within the underlying <xref:System.Data.DataColumn>, the value returned by calling the <xref:System.Data.DataTableReader.GetProviderSpecificValue%2A> method always returns data of the same type as the data stored within the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="3c629-373">当你处理的<xref:System.Data.DataTableReader>类，调用<xref:System.Data.DataTableReader.GetProviderSpecificValue%2A>方法返回相同值，然后键入作为调用<xref:System.Data.DataTableReader.GetValue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3c629-373">When you work with the <xref:System.Data.DataTableReader> class, calling the <xref:System.Data.DataTableReader.GetProviderSpecificValue%2A> method returns the same value and type as calling the <xref:System.Data.DataTableReader.GetValue%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c629-374">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-374">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="3c629-375">尝试从已删除的行中检索数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-375">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c629-376">尝试读取或访问已关闭 <see cref="T:System.Data.DataTableReader" /> 中的列</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-376">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /></span>
          </span>
        </exception>
        <altmember cref="M:System.Data.DataTableReader.GetValue(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValues">
      <MemberSignature Language="C#" Value="public override int GetProviderSpecificValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetProviderSpecificValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetProviderSpecificValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificValues : obj[] -&gt; int" Usage="dataTableReader.GetProviderSpecificValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="3c629-377">要使用 <see cref="T:System.Data.DataTableReader" /> 中列的类型信息填充的对象数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-377">An array of objects to be filled in with type information for the columns in the <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c629-378">使用 <see cref="T:System.Data.DataTableReader" /> 中所有列的特定于提供程序的类型信息填充提供的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-378">Fills the supplied array with provider-specific type information for all the columns in the <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c629-379">复制到数组中的列值个数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-379">The number of column values copied into the array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c629-380">因为<xref:System.Data.DataTableReader>始终返回存储在基础类型的数据<xref:System.Data.DataColumn>，通过调用返回的值<xref:System.Data.DataTableReader.GetProviderSpecificValues%2A>方法的相同的类型中存储的数据始终是<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="3c629-380">Because the <xref:System.Data.DataTableReader> always returns the data of the type stored within the underlying <xref:System.Data.DataColumn>, the values returned by calling the <xref:System.Data.DataTableReader.GetProviderSpecificValues%2A> method is always of the same types as the data stored within the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="3c629-381">当你处理的<xref:System.Data.DataTableReader>类，调用<xref:System.Data.DataTableReader.GetProviderSpecificValues%2A>方法与调用返回相同的值和类型<xref:System.Data.DataTableReader.GetValues%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3c629-381">When you work with the <xref:System.Data.DataTableReader> class, calling the <xref:System.Data.DataTableReader.GetProviderSpecificValues%2A> method returns the same values and types as calling the <xref:System.Data.DataTableReader.GetValues%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="3c629-382">尝试从已删除的行中检索数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-382">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c629-383">尝试读取或访问已关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-383">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Data.DataTableReader.GetValues(System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchemaTable();" />
      <MemberSignature Language="F#" Value="override this.GetSchemaTable : unit -&gt; System.Data.DataTable" Usage="dataTableReader.GetSchemaTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3c629-384">返回一个描述 <see cref="T:System.Data.DataTable" /> 的列元数据的 <see cref="T:System.Data.DataTableReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-384">Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c629-385">一个描述列元数据的 <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-385">A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c629-386">GetSchemaTable 方法按以下顺序返回关于每个列的元数据：</span><span class="sxs-lookup"><span data-stu-id="3c629-386">The GetSchemaTable method returns metadata about each column in the following order:</span></span>  
  
|<span data-ttu-id="3c629-387">DataReader 列</span><span class="sxs-lookup"><span data-stu-id="3c629-387">DataReader column</span></span>|<span data-ttu-id="3c629-388">描述</span><span class="sxs-lookup"><span data-stu-id="3c629-388">Description</span></span>|  
|-----------------------|-----------------|  
|<span data-ttu-id="3c629-389">列名</span><span class="sxs-lookup"><span data-stu-id="3c629-389">ColumnName</span></span>|<span data-ttu-id="3c629-390">如果将列作为它的名称显示在<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="3c629-390">The name of the column as it appears in the <xref:System.Data.DataTable>.</span></span>|  
|<span data-ttu-id="3c629-391">ColumnOrdinal</span><span class="sxs-lookup"><span data-stu-id="3c629-391">ColumnOrdinal</span></span>|<span data-ttu-id="3c629-392">列序号</span><span class="sxs-lookup"><span data-stu-id="3c629-392">The ordinal of the column</span></span>|  
|<span data-ttu-id="3c629-393">ColumnSize</span><span class="sxs-lookup"><span data-stu-id="3c629-393">ColumnSize</span></span>|<span data-ttu-id="3c629-394">-1 如果<xref:System.Data.Common.SchemaTableColumn.ColumnSize>(或<xref:System.Data.DataColumn.MaxLength%2A>) 属性<xref:System.Data.DataColumn>无法确定或不相关的; 否则为 0 或一个正整数，包含`MaxLength`值。</span><span class="sxs-lookup"><span data-stu-id="3c629-394">-1 if the <xref:System.Data.Common.SchemaTableColumn.ColumnSize> (or <xref:System.Data.DataColumn.MaxLength%2A>) property of the <xref:System.Data.DataColumn> cannot be determined or is not relevant; otherwise, 0 or a positive integer that contains the `MaxLength` value.</span></span>|  
|<span data-ttu-id="3c629-395">NumericPrecision</span><span class="sxs-lookup"><span data-stu-id="3c629-395">NumericPrecision</span></span>|<span data-ttu-id="3c629-396">如果列类型为数值类型，这是列的最大精度。</span><span class="sxs-lookup"><span data-stu-id="3c629-396">If the column type is a numeric type, this is the maximum precision of the column.</span></span> <span data-ttu-id="3c629-397">如果列类型不是数值数据类型，这是一个 null 值。</span><span class="sxs-lookup"><span data-stu-id="3c629-397">If the column type is not a numeric data type, this is a null value.</span></span>|  
|<span data-ttu-id="3c629-398">NumericScale</span><span class="sxs-lookup"><span data-stu-id="3c629-398">NumericScale</span></span>|<span data-ttu-id="3c629-399">如果列数据类型具有小数位数部分，返回的小数点右侧的位数。</span><span class="sxs-lookup"><span data-stu-id="3c629-399">If column data type has a scale component, return the number of digits to the right of the decimal point.</span></span> <span data-ttu-id="3c629-400">否则，返回一个 null 值。</span><span class="sxs-lookup"><span data-stu-id="3c629-400">Otherwise, return a null value.</span></span>|  
|<span data-ttu-id="3c629-401">数据类型</span><span class="sxs-lookup"><span data-stu-id="3c629-401">DataType</span></span>|<span data-ttu-id="3c629-402">列的基础类型。</span><span class="sxs-lookup"><span data-stu-id="3c629-402">The underlying type of the column.</span></span>|  
|<span data-ttu-id="3c629-403">提供程序类型</span><span class="sxs-lookup"><span data-stu-id="3c629-403">ProviderType</span></span>|<span data-ttu-id="3c629-404">列的数据类型的指示符。</span><span class="sxs-lookup"><span data-stu-id="3c629-404">The indicator of the column's data type.</span></span> <span data-ttu-id="3c629-405">如果列的数据类型会从行至行发生变化，此值是<xref:System.Object>。</span><span class="sxs-lookup"><span data-stu-id="3c629-405">If the data type of the column varies from row to row, this value is <xref:System.Object>.</span></span> <span data-ttu-id="3c629-406">此列不能包含 null 值。</span><span class="sxs-lookup"><span data-stu-id="3c629-406">This column cannot contain a null value.</span></span>|  
|<span data-ttu-id="3c629-407">IsLong</span><span class="sxs-lookup"><span data-stu-id="3c629-407">IsLong</span></span>|<span data-ttu-id="3c629-408">`true` 如果列的数据类型是<xref:System.String>及其<xref:System.Data.DataColumn.MaxLength%2A>属性为-1。</span><span class="sxs-lookup"><span data-stu-id="3c629-408">`true` if the data type of the column is <xref:System.String> and its <xref:System.Data.DataColumn.MaxLength%2A> property is -1.</span></span> <span data-ttu-id="3c629-409">否则为 `false`。</span><span class="sxs-lookup"><span data-stu-id="3c629-409">Otherwise, `false`.</span></span>|  
|<span data-ttu-id="3c629-410">AllowDBNull</span><span class="sxs-lookup"><span data-stu-id="3c629-410">AllowDBNull</span></span>|<span data-ttu-id="3c629-411">`true` 如果 AllowDbNull 约束设置为 true 的列;否则为`false`。</span><span class="sxs-lookup"><span data-stu-id="3c629-411">`true` if the AllowDbNull constraint is set to true for the column; otherwise, `false`.</span></span>|  
|<span data-ttu-id="3c629-412">为只读</span><span class="sxs-lookup"><span data-stu-id="3c629-412">IsReadOnly</span></span>|<span data-ttu-id="3c629-413">`true` 如果列不能更改;否则为`false`。</span><span class="sxs-lookup"><span data-stu-id="3c629-413">`true` if the column cannot be modified; otherwise `false`.</span></span>|  
|<span data-ttu-id="3c629-414">IsRowVersion</span><span class="sxs-lookup"><span data-stu-id="3c629-414">IsRowVersion</span></span>|<span data-ttu-id="3c629-415">`false`为每个列。</span><span class="sxs-lookup"><span data-stu-id="3c629-415">`false`, for every column.</span></span>|  
|<span data-ttu-id="3c629-416">是唯一的</span><span class="sxs-lookup"><span data-stu-id="3c629-416">IsUnique</span></span>|<span data-ttu-id="3c629-417">`true`： 任何两行都在<xref:System.Data.DataTable>可以在此列中具有相同的值。</span><span class="sxs-lookup"><span data-stu-id="3c629-417">`true`: No two rows in the <xref:System.Data.DataTable> can have the same value in this column.</span></span> <span data-ttu-id="3c629-418">`IsUnique` 为 true，如果列表示一个密钥由保证本身，或者如果没有类型仅适用于此列的 UNIQUE 约束。</span><span class="sxs-lookup"><span data-stu-id="3c629-418">`IsUnique` is guaranteed to be true if the column represents a key by itself or if there is a constraint of type UNIQUE that applies only to this column.</span></span> <span data-ttu-id="3c629-419">`false`: 列可以包含重复值`DataTable`。</span><span class="sxs-lookup"><span data-stu-id="3c629-419">`false`: The column can contain duplicate values in the `DataTable`.</span></span> <span data-ttu-id="3c629-420">此列的默认值是`false`。</span><span class="sxs-lookup"><span data-stu-id="3c629-420">The default of this column is `false`.</span></span>|  
|<span data-ttu-id="3c629-421">IsKey</span><span class="sxs-lookup"><span data-stu-id="3c629-421">IsKey</span></span>|<span data-ttu-id="3c629-422">`true`： 此列是一组列之一，合在一起，唯一地标识中的行<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="3c629-422">`true`: The column is one of a set of columns that, taken together, uniquely identify the row in the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="3c629-423">列集`IsKey`设置为`true`必须唯一地标识中的行`DataTable`。</span><span class="sxs-lookup"><span data-stu-id="3c629-423">The set of columns with `IsKey` set to `true` must uniquely identify a row in the `DataTable`.</span></span> <span data-ttu-id="3c629-424">没有任何要求此列集是列的最小集。</span><span class="sxs-lookup"><span data-stu-id="3c629-424">There is no requirement that this set of columns is a minimal set of columns.</span></span> <span data-ttu-id="3c629-425">此列集可能会生成从`DataTable`为主键、 唯一约束或唯一索引。</span><span class="sxs-lookup"><span data-stu-id="3c629-425">This set of columns may be generated from a `DataTable` primary key, a unique constraint or a unique index.</span></span> <span data-ttu-id="3c629-426">`false`: 列不需要唯一标识行。</span><span class="sxs-lookup"><span data-stu-id="3c629-426">`false`: The column is not required to uniquely identify the row.</span></span> <span data-ttu-id="3c629-427">此值是`true`如果该列参与单一或复合主键。</span><span class="sxs-lookup"><span data-stu-id="3c629-427">This value is `true` if the column participates in a single or composite primary key.</span></span> <span data-ttu-id="3c629-428">否则，其值是`false`。</span><span class="sxs-lookup"><span data-stu-id="3c629-428">Otherwise, its value is `false`.</span></span>|  
|<span data-ttu-id="3c629-429">IsAutoIncrement</span><span class="sxs-lookup"><span data-stu-id="3c629-429">IsAutoIncrement</span></span>|<span data-ttu-id="3c629-430">`true`: 列将值分配给新行以固定的增量。</span><span class="sxs-lookup"><span data-stu-id="3c629-430">`true`: The column assigns values to new rows in fixed increments.</span></span> <span data-ttu-id="3c629-431">`false`: 列不会分配到新行以固定的增量值。</span><span class="sxs-lookup"><span data-stu-id="3c629-431">`false`: The column does not assign values to new rows in fixed increments.</span></span> <span data-ttu-id="3c629-432">此列的默认值是`false`。</span><span class="sxs-lookup"><span data-stu-id="3c629-432">The default of this column is `false`.</span></span>|  
|<span data-ttu-id="3c629-433">BaseCatalogName</span><span class="sxs-lookup"><span data-stu-id="3c629-433">BaseCatalogName</span></span>|<span data-ttu-id="3c629-434">包含的列的数据存储区中目录的名称。</span><span class="sxs-lookup"><span data-stu-id="3c629-434">The name of the catalog in the data store that contains the column.</span></span> <span data-ttu-id="3c629-435">`Null` 如果无法确定基目录名称。</span><span class="sxs-lookup"><span data-stu-id="3c629-435">`Null` if the base catalog name cannot be determined.</span></span> <span data-ttu-id="3c629-436">此列的默认值是`null`值。</span><span class="sxs-lookup"><span data-stu-id="3c629-436">The default value for this column is a `null` value.</span></span>|  
|<span data-ttu-id="3c629-437">BaseSchemaName</span><span class="sxs-lookup"><span data-stu-id="3c629-437">BaseSchemaName</span></span>|<span data-ttu-id="3c629-438">此值始终为`Null`。</span><span class="sxs-lookup"><span data-stu-id="3c629-438">This value is always `Null`.</span></span>|  
|<span data-ttu-id="3c629-439">BaseTableName</span><span class="sxs-lookup"><span data-stu-id="3c629-439">BaseTableName</span></span>|<span data-ttu-id="3c629-440"><xref:System.Data.DataTable> 的名称。</span><span class="sxs-lookup"><span data-stu-id="3c629-440">The name of the <xref:System.Data.DataTable>.</span></span>|  
|<span data-ttu-id="3c629-441">BaseColumnName</span><span class="sxs-lookup"><span data-stu-id="3c629-441">BaseColumnName</span></span>|<span data-ttu-id="3c629-442">中的列的名称<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="3c629-442">The name of the column in the <xref:System.Data.DataTable>.</span></span>|  
|<span data-ttu-id="3c629-443">AutoIncrementSeed</span><span class="sxs-lookup"><span data-stu-id="3c629-443">AutoIncrementSeed</span></span>|<span data-ttu-id="3c629-444">值<xref:System.Data.DataTable>的<xref:System.Data.DataColumn.AutoIncrementSeed%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3c629-444">The value of the <xref:System.Data.DataTable>'s <xref:System.Data.DataColumn.AutoIncrementSeed%2A> property.</span></span>|  
|<span data-ttu-id="3c629-445">AutoIncrementStep</span><span class="sxs-lookup"><span data-stu-id="3c629-445">AutoIncrementStep</span></span>|<span data-ttu-id="3c629-446">值<xref:System.Data.DataTable>的<xref:System.Data.DataColumn.AutoIncrementStep%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3c629-446">The value of the <xref:System.Data.DataTable>'s <xref:System.Data.DataColumn.AutoIncrementStep%2A> property.</span></span>|  
|<span data-ttu-id="3c629-447">默认值</span><span class="sxs-lookup"><span data-stu-id="3c629-447">DefaultValue</span></span>|<span data-ttu-id="3c629-448">值<xref:System.Data.DataColumn>的<xref:System.Data.DataColumn.DefaultValue%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3c629-448">The value of the <xref:System.Data.DataColumn>'s <xref:System.Data.DataColumn.DefaultValue%2A> property.</span></span>|  
|<span data-ttu-id="3c629-449">表达式</span><span class="sxs-lookup"><span data-stu-id="3c629-449">Expression</span></span>|<span data-ttu-id="3c629-450">表达式字符串，如果当前的列是表达式列，在表达式中使用的所有列都属于同一个`T:System.Data.DataTable`包含表达式列; 否则为`null`。</span><span class="sxs-lookup"><span data-stu-id="3c629-450">The expression string, if the current column is an expression column and all columns used in the expression belong to the same `T:System.Data.DataTable` that contains the expression column; otherwise `null`.</span></span>|  
|<span data-ttu-id="3c629-451">ColumnMapping</span><span class="sxs-lookup"><span data-stu-id="3c629-451">ColumnMapping</span></span>|<span data-ttu-id="3c629-452"><xref:System.Data.MappingType>与关联的值<xref:System.Data.DataColumn>。</span><span class="sxs-lookup"><span data-stu-id="3c629-452">The <xref:System.Data.MappingType> value associated with the <xref:System.Data.DataColumn>.</span></span> <span data-ttu-id="3c629-453">类型可以是之一`Attribute`， `Element`， `Hidden`，或`SimpleContent`。</span><span class="sxs-lookup"><span data-stu-id="3c629-453">The type can be one of `Attribute`, `Element`, `Hidden`, or `SimpleContent`.</span></span> <span data-ttu-id="3c629-454">默认值为 `Element`。</span><span class="sxs-lookup"><span data-stu-id="3c629-454">The default value is `Element`.</span></span>|  
|<span data-ttu-id="3c629-455">BaseTableNamespace</span><span class="sxs-lookup"><span data-stu-id="3c629-455">BaseTableNamespace</span></span>|<span data-ttu-id="3c629-456">值<xref:System.Data.DataTable>的<xref:System.Data.DataTable.Namespace%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3c629-456">The value of the <xref:System.Data.DataTable>'s <xref:System.Data.DataTable.Namespace%2A> property.</span></span>|  
|<span data-ttu-id="3c629-457">BaseColumnNamespace</span><span class="sxs-lookup"><span data-stu-id="3c629-457">BaseColumnNamespace</span></span>|<span data-ttu-id="3c629-458">值<xref:System.Data.DataColumn>的<xref:System.Data.DataColumn.Namespace%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3c629-458">The value of the <xref:System.Data.DataColumn>'s <xref:System.Data.DataColumn.Namespace%2A> property.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3c629-459">以下控制台应用程序示例检索有关指定列的架构信息。</span><span class="sxs-lookup"><span data-stu-id="3c629-459">The following console application example retrieves schema information about the specified column.</span></span> <span data-ttu-id="3c629-460">传递`DisplaySchemaTableInfo`过程<xref:System.Data.DataTableReader>表示中的列的序号位置的整数`DataTableReader`，并按步骤输出到控制台窗口的架构信息。</span><span class="sxs-lookup"><span data-stu-id="3c629-460">Pass the `DisplaySchemaTableInfo` procedure a <xref:System.Data.DataTableReader> and an integer representing the ordinal position of a column within the `DataTableReader`, and the procedure outputs schema information to the console window.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetSchemaTable#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetSchemaTable/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetSchemaTable#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetSchemaTable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c629-461">
            <see cref="T:System.Data.DataTableReader" /> 已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-461">The <see cref="T:System.Data.DataTableReader" /> is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetString : int -&gt; string" Usage="dataTableReader.GetString ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="3c629-462">从零开始的列序号</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-462">The zero-based column ordinal</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c629-463">获取指定列的字符串形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-463">Gets the value of the specified column as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c629-464">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-464">The value of the specified column.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c629-465">调用<xref:System.Data.DataTableReader.IsDBNull%2A>以查看是否存在 null 值调用此方法之前。</span><span class="sxs-lookup"><span data-stu-id="3c629-465">Call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c629-466">下面的示例显示中传入的编号为 2 的列的内容<xref:System.Data.DataTableReader>。</span><span class="sxs-lookup"><span data-stu-id="3c629-466">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="3c629-467">如果值为 null 的特定行中的列，代码将显示文本\<NULL >。</span><span class="sxs-lookup"><span data-stu-id="3c629-467">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="3c629-468">如果正确类型，该示例的列中数据显示每个行的错误消息。</span><span class="sxs-lookup"><span data-stu-id="3c629-468">If the data within the column of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetString#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetString/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetString#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetString/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c629-469">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-469">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="3c629-470">尝试从已删除的行中检索数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-470">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c629-471">尝试读取或访问已关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-471">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="3c629-472">指定的列不包含字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-472">The specified column does not contain a string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetValue : int -&gt; obj" Usage="dataTableReader.GetValue ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="3c629-473">从零开始的列序号</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-473">The zero-based column ordinal</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c629-474">获取指定列以本机格式表示的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-474">Gets the value of the specified column in its native format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c629-475">指定列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-475">The value of the specified column.</span>
          </span>
          <span data-ttu-id="3c629-476">此方法为 null 列返回 <see langword="DBNull" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-476">This method returns <see langword="DBNull" /> for null columns.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c629-477">尽管你可以调用<xref:System.Data.DataTableReader.IsDBNull%2A>以查看是否存在 null 值调用此方法之前，则不需要执行此操作。</span><span class="sxs-lookup"><span data-stu-id="3c629-477">Although you can call <xref:System.Data.DataTableReader.IsDBNull%2A> to see if there are null values before calling this method, you do not have to do this.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c629-478">下面的示例循环访问中的当前行中的所有列<xref:System.Data.DataTableReader>，显示每个列和列名称的内容。</span><span class="sxs-lookup"><span data-stu-id="3c629-478">The following example iterates through all the columns within the current row in a <xref:System.Data.DataTableReader>, displaying the contents of each column and the column name.</span></span> <span data-ttu-id="3c629-479">通常情况下，如果你想要检索的行中的所有列使用<xref:System.Data.DataTableReader>，请考虑使用<xref:System.Data.DataTableReader.GetValues%2A>方法相反，因为它是更高效。</span><span class="sxs-lookup"><span data-stu-id="3c629-479">Generally, if your intent is to work with all the columns within a row retrieved by a <xref:System.Data.DataTableReader>, consider using the <xref:System.Data.DataTableReader.GetValues%2A> method instead, because it is more efficient.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetValue#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValue/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValue/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c629-480">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-480">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="3c629-481">尝试从已删除的行中检索数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-481">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c629-482">尝试读取或访问关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-482">An attempt was made to read or access columns in a closed <see cref="T:System.Data.DataTableReader" /> .</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public override int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetValues : obj[] -&gt; int" Usage="dataTableReader.GetValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="3c629-483">要将 <see cref="T:System.Object" /> 中的列值复制到其中的 <see cref="T:System.Data.DataTableReader" /> 数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-483">An array of <see cref="T:System.Object" /> into which to copy the column values from the <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c629-484">使用当前行的列值来填充对象数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-484">Populates an array of objects with the column values of the current row.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c629-485">复制到数组中的列值个数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-485">The number of column values copied into the array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c629-486">对于大多数应用程序，此方法用于检索所有列，而不是单独都检索每个列提供一种高效的方法。</span><span class="sxs-lookup"><span data-stu-id="3c629-486">For most applications, this method provides an efficient means for retrieving all columns, instead of retrieving each column individually.</span></span> <span data-ttu-id="3c629-487">如果你的意图是检索所有列的值中的行<xref:System.Data.DataTableReader>、`GetValues`方法提供最高效的解决方案。</span><span class="sxs-lookup"><span data-stu-id="3c629-487">If your intent is to retrieve all the column values from a row within the <xref:System.Data.DataTableReader>, the `GetValues` method provides the most efficient solution.</span></span>  
  
 <span data-ttu-id="3c629-488">你可以将传递<xref:System.Object>数组，其中包含的结果行中包含的列数少于。</span><span class="sxs-lookup"><span data-stu-id="3c629-488">You can pass an <xref:System.Object> array that contains fewer than the number of columns that are contained in the resulting row.</span></span> <span data-ttu-id="3c629-489">数据量`Object`数组可以容纳复制到数组。</span><span class="sxs-lookup"><span data-stu-id="3c629-489">Only the amount of data the `Object` array can hold is copied to the array.</span></span> <span data-ttu-id="3c629-490">你还可以传递`Object`其长度不只是包含在生成的行中，在方法调用后附加数组元素保持不变的列数的数组。</span><span class="sxs-lookup"><span data-stu-id="3c629-490">You can also pass an `Object` array whose length is more than the number of columns that are contained in the resulting row, in which case the additional array elements remains unchanged by the method call.</span></span>  
  
 <span data-ttu-id="3c629-491">此方法将`DBNull`用于 null 列的输出数组中。</span><span class="sxs-lookup"><span data-stu-id="3c629-491">This method places `DBNull` in the output array for null columns.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c629-492">下面的示例演示如何使用数组，它是要读取当前行从提供的所有值的正确大小<xref:System.Data.DataTableReader>。</span><span class="sxs-lookup"><span data-stu-id="3c629-492">The following example demonstrates using an array that is the correct size, to read all values from the current row in the supplied <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="3c629-493">此外，此示例演示如何使用可能是小于或大于可用的列数的固定大小的数组。</span><span class="sxs-lookup"><span data-stu-id="3c629-493">In addition, the sample demonstrates using a fixed-sized array that could be either smaller or larger than the number of available columns.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.GetValueObject#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValueObject/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetValueObject#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValueObject/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c629-494">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-494">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="3c629-495">尝试从已删除的行中检索数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-495">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c629-496">尝试读取或访问已关闭 <see cref="T:System.Data.DataTableReader" /> 中的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-496">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /> .</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HasRows">
      <MemberSignature Language="C#" Value="public override bool HasRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRows" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.HasRows" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasRows { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasRows : bool" Usage="System.Data.DataTableReader.HasRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c629-497">获取一个值，该值指示 <see cref="T:System.Data.DataTableReader" /> 是否包含一行还是多行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-497">Gets a value that indicates whether the <see cref="T:System.Data.DataTableReader" /> contains one or more rows.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c629-498">如果 <see cref="T:System.Data.DataTableReader" /> 包含一行或多行，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-498">
              <see langword="true" /> if the <see cref="T:System.Data.DataTableReader" /> contains one or more rows; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c629-499">`HasRows`属性返回有关当前结果集的信息。</span><span class="sxs-lookup"><span data-stu-id="3c629-499">The `HasRows` property returns information about the current result set.</span></span> <span data-ttu-id="3c629-500">如果<xref:System.Data.DataTableReader>包含多个结果集，你可以检查的值`HasRows`属性之后立即调用<xref:System.Data.DataTableReader.NextResult%2A>方法，以确定新的结果集是否包含行。</span><span class="sxs-lookup"><span data-stu-id="3c629-500">If the <xref:System.Data.DataTableReader> contains multiple result sets, you can examine the value of the `HasRows` property immediately after you call the <xref:System.Data.DataTableReader.NextResult%2A> method in order to determine whether the new result set contains rows.</span></span>  
  
 <span data-ttu-id="3c629-501">使用`HasRows`属性以避免调用的要求<xref:System.Data.DataTableReader.Read%2A>方法<xref:System.Data.DataTableReader>如果当前的结果集内没有行。</span><span class="sxs-lookup"><span data-stu-id="3c629-501">Use the `HasRows` property to avoid the requirement to call the <xref:System.Data.DataTableReader.Read%2A> method of the <xref:System.Data.DataTableReader> if there are no rows within the current result set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c629-502">下面的示例填充两个<xref:System.Data.DataTable>具有数据的实例。</span><span class="sxs-lookup"><span data-stu-id="3c629-502">The following example fills two <xref:System.Data.DataTable> instances with data.</span></span> <span data-ttu-id="3c629-503">第一个<xref:System.Data.DataTable>对应一行和第二个不包含任何行。</span><span class="sxs-lookup"><span data-stu-id="3c629-503">The first <xref:System.Data.DataTable> contains one row, and the second contains no rows.</span></span> <span data-ttu-id="3c629-504">然后，示例创建<xref:System.Data.DataTableReader>，其中同时包含<xref:System.Data.DataTable>对象，并调用 PrintData 方法来显示每个，检查的值的内容<xref:System.Data.DataTableReader.HasRows%2A>的每个在它进行到 PrintData 调用之前的属性。</span><span class="sxs-lookup"><span data-stu-id="3c629-504">The example then creates a <xref:System.Data.DataTableReader> that contains both <xref:System.Data.DataTable> objects, and calls the PrintData method to display the contents of each, checking the value of the <xref:System.Data.DataTableReader.HasRows%2A> property of each before it makes the call to PrintData.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.HasRows#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.HasRows/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.HasRows#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.HasRows/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c629-505">尝试检索有关已关闭的 <see cref="T:System.Data.DataTableReader" /> 的信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-505">An attempt was made to retrieve information about a closed <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Data.DataTableReader.NextResult" />
        <altmember cref="M:System.Data.DataTableReader.Read" />
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public override bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Data.DataTableReader.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c629-506">获取一个值，该值指示 <see cref="T:System.Data.DataTableReader" /> 是否已关闭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-506">Gets a value that indicates whether the <see cref="T:System.Data.DataTableReader" /> is closed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c629-507">如果 <see cref="T:System.Data.DataTableReader" /> 已关闭，则返回 <see langword="true" />；否则返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-507">Returns <see langword="true" /> if the <see cref="T:System.Data.DataTableReader" /> is closed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c629-508"><xref:System.Data.DataTableReader.Close%2A> 是唯一的方法和`IsClosed`和<xref:System.Data.DataTableReader.RecordsAffected%2A>是可以访问后的唯一属性<xref:System.Data.DataTableReader>已关闭。</span><span class="sxs-lookup"><span data-stu-id="3c629-508"><xref:System.Data.DataTableReader.Close%2A> is the only method and `IsClosed` and <xref:System.Data.DataTableReader.RecordsAffected%2A> are the only properties that can be accessed after the <xref:System.Data.DataTableReader> has been closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public override bool IsDBNull (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDBNull(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.IsDBNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDBNull (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDBNull(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.IsDBNull : int -&gt; bool" Usage="dataTableReader.IsDBNull ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="3c629-509">从零开始的列序号</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-509">The zero-based column ordinal</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c629-510">获取一个值，该值指示列中是否包含不存在的或缺少的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-510">Gets a value that indicates whether the column contains non-existent or missing values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c629-511">如果指定的列值与 <see cref="T:System.DBNull" /> 等效，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-511">
              <see langword="true" /> if the specified column value is equivalent to <see cref="T:System.DBNull" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c629-512">调用此方法以查看是否存在 null 列的值在调用类型化的 get 方法 (例如， <xref:System.Data.DataTableReader.GetByte%2A>， <xref:System.Data.DataTableReader.GetChar%2A>，依次类推) 以避免产生一个错误。</span><span class="sxs-lookup"><span data-stu-id="3c629-512">Call this method to see if there are null column values before calling the typed get methods (for example, <xref:System.Data.DataTableReader.GetByte%2A>, <xref:System.Data.DataTableReader.GetChar%2A>, and so on) to avoid raising an error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c629-513">下面的示例显示中传入的编号为 2 的列的内容<xref:System.Data.DataTableReader>。</span><span class="sxs-lookup"><span data-stu-id="3c629-513">The following example displays the contents of the column numbered 2 within the passed-in <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="3c629-514">如果值为 null 的特定行中的列，代码将显示文本\<NULL >。</span><span class="sxs-lookup"><span data-stu-id="3c629-514">If the value the column within a particular row is null, the code displays the text \<NULL>.</span></span> <span data-ttu-id="3c629-515">如果正确类型，该示例的列中数据显示每个行的错误消息。</span><span class="sxs-lookup"><span data-stu-id="3c629-515">If the data within the column of the correct type, the example displays an error message for each row.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.IsDbNull#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.IsDbNull/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.IsDbNull#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.IsDbNull/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c629-516">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-516">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="3c629-517">尝试从已删除的行中检索数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-517">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c629-518">尝试读取或访问已关闭 <see cref="T:System.Data.DataTableReader" /> 中的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-518">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /> .</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3c629-519">获取指定列以本机格式表示的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-519">Gets the value of the specified column in its native format.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[int ordinal] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int ordinal); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="System.Data.DataTableReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="3c629-520">从零开始的列序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-520">The zero-based column ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c629-521">在给定列序号的情况下，获取指定列的以本机格式表示的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-521">Gets the value of the specified column in its native format given the column ordinal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c629-522">指定列的以本机格式表示的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-522">The value of the specified column in its native format.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c629-523">为此重载<xref:System.Data.DataTableReader.Item%2A>的行为相同与<xref:System.Data.DataTableReader.GetValue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3c629-523">This overload for <xref:System.Data.DataTableReader.Item%2A> behaves identically to the <xref:System.Data.DataTableReader.GetValue%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c629-524">下面的示例中从提供的所有行显示所有列的内容<xref:System.Data.DataTableReader>。</span><span class="sxs-lookup"><span data-stu-id="3c629-524">The following example displays the contents of all the columns, in all the rows from the supplied <xref:System.Data.DataTableReader>.</span></span> <span data-ttu-id="3c629-525">该代码使用<xref:System.Data.DataTableReader.Item%2A>方法 （索引器，在 Microsoft C#） 来检索每个列中包含的值。</span><span class="sxs-lookup"><span data-stu-id="3c629-525">The code uses the <xref:System.Data.DataTableReader.Item%2A> method (the indexer, in Microsoft C#) to retrieve the value that is contained in each column.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.Item#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.Item/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.Item#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.Item/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="3c629-526">传递的索引超出了 0 到 <see cref="P:System.Data.DataTableReader.FieldCount" /> -1 的范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-526">The index passed was outside the range of 0 to <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</span>
          </span>
        </exception>
        <altmember cref="M:System.Data.DataTableReader.GetValue(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj" Usage="System.Data.DataTableReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="3c629-527">列的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-527">The name of the column.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c629-528">在给定列名称的情况下，获取指定列的以本机格式表示的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-528">Gets the value of the specified column in its native format given the column name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c629-529">指定列的以本机格式表示的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-529">The value of the specified column in its native format.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c629-530">第一次执行区分大小写的查找。</span><span class="sxs-lookup"><span data-stu-id="3c629-530">A case-sensitive lookup is performed first.</span></span> <span data-ttu-id="3c629-531">如果失败，进行第二个的不区分大小写搜索。</span><span class="sxs-lookup"><span data-stu-id="3c629-531">If it fails, a second case-insensitive search is made.</span></span>  
  
 <span data-ttu-id="3c629-532">此方法是不区分假名宽度。</span><span class="sxs-lookup"><span data-stu-id="3c629-532">This method is kana-width insensitive.</span></span>  
  
 <span data-ttu-id="3c629-533">此重载的版本的<xref:System.Data.DataTableReader.Item%2A>对应于调用<xref:System.Data.DataTableReader.GetOrdinal%2A>方法，并随后调用<xref:System.Data.DataTableReader.GetValue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3c629-533">This overloaded version of <xref:System.Data.DataTableReader.Item%2A> corresponds to calling the <xref:System.Data.DataTableReader.GetOrdinal%2A> method, and then subsequently calling the <xref:System.Data.DataTableReader.GetValue%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c629-534">给定<xref:System.Data.DataTableReader>和列名称，GetValueByName 过程返回指定列的值。</span><span class="sxs-lookup"><span data-stu-id="3c629-534">Given a <xref:System.Data.DataTableReader> and a column name, the GetValueByName procedure returns the value of the specified column.</span></span> <span data-ttu-id="3c629-535">之前调用此过程，必须创建一个新<xref:System.Data.DataTableReader>实例并调用其 Read 方法至少一次来将行指针放在数据行。</span><span class="sxs-lookup"><span data-stu-id="3c629-535">Before calling this procedure, you must create a new <xref:System.Data.DataTableReader> instance and call its Read method at least one time to position the row pointer on a row of data.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.ItemName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.ItemName/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.ItemName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.ItemName/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3c629-536">指定的名称不是有效的列名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-536">The name specified is not a valid column name.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <span data-ttu-id="3c629-537">尝试从已删除的行中检索数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-537">An attempt was made to retrieve data from a deleted row.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c629-538">尝试读取或访问已关闭的 <see cref="T:System.Data.DataTableReader" /> 中的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-538">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public override bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool NextResult();" />
      <MemberSignature Language="F#" Value="override this.NextResult : unit -&gt; bool" Usage="dataTableReader.NextResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3c629-539">使 <see cref="T:System.Data.DataTableReader" /> 前进到下一个结果集（如果有）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-539">Advances the <see cref="T:System.Data.DataTableReader" /> to the next result set, if any.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c629-540">如果有另一个结果集，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-540">
              <see langword="true" /> if there was another result set; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c629-541">用于处理多个结果，可以通过创建生成<xref:System.Data.DataTableReader>通过<xref:System.Data.DataSet>，其中包含两个或多个表或一个数组，包含两个或多<xref:System.Data.DataTable>实例。</span><span class="sxs-lookup"><span data-stu-id="3c629-541">Used to process multiple results that can be generated by creating a <xref:System.Data.DataTableReader> over a <xref:System.Data.DataSet> that contains two or more tables, or an array that contains two or more <xref:System.Data.DataTable> instances.</span></span>  
  
 <span data-ttu-id="3c629-542">一个新<xref:System.Data.DataTableReader>位于第一个结果。</span><span class="sxs-lookup"><span data-stu-id="3c629-542">A new <xref:System.Data.DataTableReader> is positioned on the first result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c629-543">在下面的示例中，该 TestConstructor 方法将创建两个<xref:System.Data.DataTable>实例。</span><span class="sxs-lookup"><span data-stu-id="3c629-543">In the following example, the TestConstructor method creates two <xref:System.Data.DataTable> instances.</span></span> <span data-ttu-id="3c629-544">为了演示此构造函数<xref:System.Data.DataTableReader>类，示例创建一个新`DataTableReader`基于包含两个数组`DataTables`，并执行一个简单的操作，将前几列中的内容输出到控制台窗口。</span><span class="sxs-lookup"><span data-stu-id="3c629-544">In order to demonstrate this constructor for the <xref:System.Data.DataTableReader> class, the sample creates a new `DataTableReader` based on an array that contains the two `DataTables`, and performs a simple operation, printing the contents from the first few columns to the console window.</span></span> <span data-ttu-id="3c629-545">若要测试此应用程序，创建一个新的控制台应用程序，并将示例代码粘贴到刚创建的文件。</span><span class="sxs-lookup"><span data-stu-id="3c629-545">In order to test this application, create a new Console application, and paste the sample code into the newly created file.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.NextResult#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.NextResult/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.NextResult#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.NextResult/VB/source.vb#1)]  
  
 <span data-ttu-id="3c629-546">控制台窗口会显示以下结果：</span><span class="sxs-lookup"><span data-stu-id="3c629-546">The Console window displays the following results:</span></span>  
  
```  
1 Mary  
2 Andy  
3 Peter  
4 Russ  
1 Wireless Network Card  
2 Hard Drive  
3 Monitor  
4 CPU  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c629-547">尝试在已关闭的 <see cref="T:System.Data.DataTableReader" /> 中进行导航。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-547">An attempt was made to navigate within a closed <see cref="T:System.Data.DataTableReader" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="dataTableReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3c629-548">让 <see cref="T:System.Data.DataTableReader" /> 前进到下一条记录。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-548">Advances the <see cref="T:System.Data.DataTableReader" /> to the next record.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c629-549">如果有另一行要读取，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-549">
              <see langword="true" /> if there was another row to read; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c629-550">默认位置<xref:System.Data.DataTableReader>之前第一条记录。</span><span class="sxs-lookup"><span data-stu-id="3c629-550">The default position of the <xref:System.Data.DataTableReader> is before the first record.</span></span> <span data-ttu-id="3c629-551">因此，必须调用`Read`来开始访问任何数据。</span><span class="sxs-lookup"><span data-stu-id="3c629-551">Therefore, you must call `Read` to start accessing any data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c629-552">PrintColumns 过程循环访问中的所有行<xref:System.Data.DataTableReader>，在控制台窗口中显示每个列的内容。</span><span class="sxs-lookup"><span data-stu-id="3c629-552">The PrintColumns procedure loops through all the rows in the <xref:System.Data.DataTableReader>, displaying the contents of each column in the Console window.</span></span>  
  
 [!code-csharp[DataWorks DataTableReader.Read#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.Read/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.Read#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.Read/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3c629-553">尝试读取或访问已关闭 <see cref="T:System.Data.DataTableReader" /> 中的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-553">An attempt was made to read or access a column in a closed <see cref="T:System.Data.DataTableReader" /> .</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public override int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RecordsAffected { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RecordsAffected : int" Usage="System.Data.DataTableReader.RecordsAffected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c629-554">通过执行 SQL 语句获取插入、更改或删除的行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-554">Gets the number of rows inserted, changed, or deleted by execution of the SQL statement.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c629-555">
            <see cref="T:System.Data.DataTableReader" /> 不支持此属性，并且始终返回 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c629-555">The <see cref="T:System.Data.DataTableReader" /> does not support this property and always returns 0.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>