<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IDataReader.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac519530b9c5982631504b5bf391eb258d094af3b11.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">19530b9c5982631504b5bf391eb258d094af3b11</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.IDataReader">
          <source>Provides a means of reading one or more forward-only streams of result sets obtained by executing a command at a data source, and is implemented by .NET Framework data providers that access relational databases.</source>
          <target state="translated">提供一种读取结果集（通过对数据源执行命令获取）的一个或多个只进流的方法，并由访问关系数据库的.NET Framework 数据提供程序实现。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataReader">
          <source>The <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.IDataRecord&gt;</ph> interfaces allow an inheriting class to implement a <ph id="ph3">`DataReader`</ph> class, which provides a means of reading one or more forward-only streams of result sets.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.IDataRecord&gt;</ph>接口允许继承类实现<ph id="ph3">`DataReader`</ph>类，该类提供一种读取一个或多个结果集只进流。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataReader">
          <source>For more information about <ph id="ph1">`DataReader`</ph> classes, see <bpt id="p1">[</bpt>Retrieving Data Using a DataReader<ept id="p1">](~/docs/framework/data/adonet/retrieving-data-using-a-datareader.md)</ept>.</source>
          <target state="translated">有关详细信息<ph id="ph1">`DataReader`</ph>类，请参阅<bpt id="p1">[</bpt>使用 DataReader 检索数据<ept id="p1">](~/docs/framework/data/adonet/retrieving-data-using-a-datareader.md)</ept>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataReader">
          <source>An application does not create an instance of the <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> interface directly, but creates an instance of a class that inherits <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>.</source>
          <target state="translated">应用程序不会创建的实例<ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>接口直接，但创建继承的类的实例<ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataReader">
          <source>Classes that inherit <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> must implement the inherited members, and typically define additional members to add provider-specific functionality.</source>
          <target state="translated">继承的类<ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>必须实现继承的成员，且通常定义其他成员来添加提供程序特定的功能。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataReader">
          <source>Changes made to a result set by another process or thread while data is being read may be visible to the user of a class that implements an <ph id="ph1">`IDataReader`</ph>.</source>
          <target state="translated">更改的结果集由另一个进程或线程的类实现的用户都能够看到在读取数据时<ph id="ph1">`IDataReader`</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataReader">
          <source>However, the precise behavior is both provider and timing dependent.</source>
          <target state="translated">但是，确切的行为是提供程序和取决于执行时间。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataReader">
          <source>The following example creates instances of the derived classes, <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>.</source>
          <target state="translated">下面的示例创建的派生类的实例<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>， <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph>，和<ph id="ph3">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataReader">
          <source>The example reads through the data, writing it out to the console.</source>
          <target state="translated">该示例读取到的数据，写出到控制台。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataReader">
          <source>Finally, the example closes the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>, then the <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>.</source>
          <target state="translated">最后，该示例关闭<ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>，则<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataReader">
          <source>To promote consistency among .NET Framework data providers, name the inheriting class in the form <ph id="ph1">&lt;paramref name="Prv" /&gt;</ph> Command where <ph id="ph2">&lt;paramref name="Prv" /&gt;</ph> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</source>
          <target state="translated">若要提升.NET Framework 数据提供程序之间的一致性，将窗体中的继承类<ph id="ph1">&lt;paramref name="Prv" /&gt;</ph>命令，其中<ph id="ph2">&lt;paramref name="Prv" /&gt;</ph>是为特定的.NET Framework 数据提供程序命名空间中的所有类提供的统一前缀。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataReader">
          <source>For example, <ph id="ph1">&lt;paramref name="Sql" /&gt;</ph> is the prefix of the <ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph> class in the <ph id="ph3">&lt;see langword="System.Data.SqlClient" /&gt;</ph> namespace.</source>
          <target state="translated">例如，<ph id="ph1">&lt;paramref name="Sql" /&gt;</ph>的前缀<ph id="ph2">&lt;see cref="T:System.Data.SqlClient.SqlDataAdapter" /&gt;</ph>类<ph id="ph3">&lt;see langword="System.Data.SqlClient" /&gt;</ph>命名空间。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataReader">
          <source>Users do not create an instance of a <ph id="ph1">&lt;see langword="DataReader" /&gt;</ph> class directly.</source>
          <target state="translated">用户未创建的实例<ph id="ph1">&lt;see langword="DataReader" /&gt;</ph>类直接。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataReader">
          <source>Instead, they obtain the <ph id="ph1">&lt;see langword="DataReader" /&gt;</ph> instance through the <ph id="ph2">&lt;see langword="ExecuteReader" /&gt;</ph> method of the <ph id="ph3">&lt;see langword="Command" /&gt;</ph> object.</source>
          <target state="translated">相反，它们获得<ph id="ph1">&lt;see langword="DataReader" /&gt;</ph>实例通过<ph id="ph2">&lt;see langword="ExecuteReader" /&gt;</ph>方法<ph id="ph3">&lt;see langword="Command" /&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.IDataReader">
          <source>Therefore, you should mark <ph id="ph1">&lt;see langword="DataReader" /&gt;</ph> constructors as internal.</source>
          <target state="translated">因此，你应将标记<ph id="ph1">&lt;see langword="DataReader" /&gt;</ph>为内部的构造函数。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Data.IDataReader.Close">
          <source>Closes the <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> Object.</source>
          <target state="translated">关闭 <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataReader.Close">
          <source>You must explicitly call the <ph id="ph1">&lt;xref:System.Data.IDataReader.Close%2A&gt;</ph> method when you are through using the <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> to use the associated <ph id="ph3">&lt;xref:System.Data.IDbConnection&gt;</ph> for any other purpose.</source>
          <target state="translated">你必须明确地调用<ph id="ph1">&lt;xref:System.Data.IDataReader.Close%2A&gt;</ph>方法时通过使用<ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>用于关联<ph id="ph3">&lt;xref:System.Data.IDbConnection&gt;</ph>用于任何其他用途。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.Data.IDataReader.Depth">
          <source>Gets a value indicating the depth of nesting for the current row.</source>
          <target state="translated">获取一个值，该值指示当前行的嵌套深度。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDataReader.Depth">
          <source>The level of nesting.</source>
          <target state="translated">嵌套的级别。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDataReader.Depth">
          <source>The outermost table has a depth of zero.</source>
          <target state="translated">最外面的表的深度为零。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Data.IDataReader.GetSchemaTable">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that describes the column metadata of the <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>.</source>
          <target state="translated">返回一个描述 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的列元数据的 <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Data.IDataReader.GetSchemaTable">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that describes the column metadata.</source>
          <target state="translated">一个描述列元数据的 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataReader.GetSchemaTable">
          <source>The implementation of <ph id="ph1">&lt;xref:System.Data.IDataReader.GetSchemaTable%2A&gt;</ph> method for the .NET Framework Data Provider for OLE DB maps to the OLE DB IColumnsRowset::GetColumnsRowset method, while implementations for other .NET Framework data providers do not use an OLE DB provider layer.</source>
          <target state="translated">实现<ph id="ph1">&lt;xref:System.Data.IDataReader.GetSchemaTable%2A&gt;</ph>用于 OLE DB 的.NET Framework 数据提供程序的方法将映射到 OLE DB IColumnsRowset::GetColumnsRowset 方法，实现时，对于其他.NET Framework 数据提供程序不使用 OLE DB 访问接口层。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataReader.GetSchemaTable">
          <source>The order in which <ph id="ph1">&lt;xref:System.Data.IDataReader.GetSchemaTable%2A&gt;</ph> returns metadata about each column in a table, and the DataReader columns that are returned, vary depending on which data provider you use.</source>
          <target state="translated">顺序<ph id="ph1">&lt;xref:System.Data.IDataReader.GetSchemaTable%2A&gt;</ph>返回有关在表中，每个列和返回，DataReader 列的元数据不同的数据提供程序根据你使用。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataReader.GetSchemaTable">
          <source>The following table lists data providers and members that implement <ph id="ph1">&lt;xref:System.Data.IDataReader.GetSchemaTable%2A&gt;</ph>.</source>
          <target state="translated">下表列出了数据访问接口和实现的成员<ph id="ph1">&lt;xref:System.Data.IDataReader.GetSchemaTable%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataReader.GetSchemaTable">
          <source>Data Provider</source>
          <target state="translated">数据提供程序</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataReader.GetSchemaTable">
          <source>Member</source>
          <target state="translated">成员</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataReader.GetSchemaTable">
          <source>.NET Data Provider for ODBC</source>
          <target state="translated">用于 ODBC 的.NET 数据提供程序</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataReader.GetSchemaTable">
          <source><ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataReader.GetSchemaTable">
          <source>.NET Data Provider for OLE DB</source>
          <target state="translated">用于 OLE DB 的.NET 数据提供程序</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataReader.GetSchemaTable">
          <source><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataReader.GetSchemaTable">
          <source>.NET Data Provider for Oracle</source>
          <target state="translated">适用于 Oracle 的.NET 数据提供程序</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataReader.GetSchemaTable">
          <source><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataReader.GetSchemaTable">
          <source>.NET Data Provider for SQL Server</source>
          <target state="translated">用于 SQL Server 的.NET 数据提供程序</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataReader.GetSchemaTable">
          <source><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Data.IDataReader.GetSchemaTable">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> 已关闭。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Data.IDataReader.IsClosed">
          <source>Gets a value indicating whether the data reader is closed.</source>
          <target state="translated">获取一个值，该值指示数据读取器是否已关闭。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDataReader.IsClosed">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the data reader is closed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果数据读取器已关闭，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDataReader.IsClosed">
          <source><ph id="ph1">&lt;xref:System.Data.IDataReader.IsClosed%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.IDataReader.RecordsAffected%2A&gt;</ph> are the only properties that you can call after the <ph id="ph3">&lt;xref:System.Data.IDataReader&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDataReader.IsClosed%2A&gt;</ph> 和<ph id="ph2">&lt;xref:System.Data.IDataReader.RecordsAffected%2A&gt;</ph>是可以后调用的唯一属性<ph id="ph3">&lt;xref:System.Data.IDataReader&gt;</ph>已关闭。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Data.IDataReader.NextResult">
          <source>Advances the data reader to the next result, when reading the results of batch SQL statements.</source>
          <target state="translated">在读取一批 SQL 语句的结果时，使数据读取器前进到下一个结果。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Data.IDataReader.NextResult">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if there are more rows; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果存在更多行，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataReader.NextResult">
          <source>Used to process multiple results, which can be obtained by executing batch SQL statements.</source>
          <target state="translated">用于处理多个结果，它可以获取通过执行批处理 SQL 语句。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataReader.NextResult">
          <source>By default, the data reader is positioned on the first result.</source>
          <target state="translated">默认情况下，数据读取器定位在的第一个结果中。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Data.IDataReader.Read">
          <source>Advances the <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> to the next record.</source>
          <target state="translated">让 <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> 前进到下一条记录。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Data.IDataReader.Read">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if there are more rows; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果存在更多行，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataReader.Read">
          <source>The default position of the <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> is prior to the first record.</source>
          <target state="translated">默认位置<ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>以前的第一个记录。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataReader.Read">
          <source>Therefore you must call <ph id="ph1">&lt;xref:System.Data.IDataReader.Read%2A&gt;</ph> to begin accessing any data.</source>
          <target state="translated">因此必须调用<ph id="ph1">&lt;xref:System.Data.IDataReader.Read%2A&gt;</ph>来开始访问任何数据。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataReader.Read">
          <source>While the data reader is in use, the associated connection is busy serving the <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>.</source>
          <target state="translated">在使用数据读取器时，关联的连接是忙服务<ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataReader.Read">
          <source>This is the case until <ph id="ph1">&lt;xref:System.Data.IDataReader.Close%2A&gt;</ph> is called.</source>
          <target state="translated">这是这种情况，直到<ph id="ph1">&lt;xref:System.Data.IDataReader.Close%2A&gt;</ph>调用。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataReader.Read">
          <source>The following example creates instances of three derived classes <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph>, an <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>, and an <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataReader&gt;</ph>.</source>
          <target state="translated">下面的示例创建三个派生类的实例<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph>、 <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>，和<ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataReader&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataReader.Read">
          <source>The example reads through the data, writing it out to the console.</source>
          <target state="translated">该示例读取到的数据，写出到控制台。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.IDataReader.Read">
          <source>Finally, the example closes the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataReader&gt;</ph>, then the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph>.</source>
          <target state="translated">最后，该示例关闭<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbDataReader&gt;</ph>，则<ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.Data.IDataReader.RecordsAffected">
          <source>Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</source>
          <target state="translated">获取通过执行 SQL 语句更改、插入或删除的行数。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDataReader.RecordsAffected">
          <source>The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.</source>
          <target state="translated">已更改、插入或删除的行数；如果没有受影响的行或语句失败，则为 0；对于 SELECT 语句为 -1。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDataReader.RecordsAffected">
          <source>The <ph id="ph1">&lt;xref:System.Data.IDataReader.RecordsAffected%2A&gt;</ph> property is not set until all rows are read and you close the <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDataReader.RecordsAffected%2A&gt;</ph>读取了所有行并在关闭之前，未设置属性<ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.IDataReader.RecordsAffected">
          <source><ph id="ph1">&lt;xref:System.Data.IDataReader.IsClosed%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.IDataReader.RecordsAffected%2A&gt;</ph> are the only properties that you can call after the <ph id="ph3">&lt;xref:System.Data.IDataReader&gt;</ph> is closed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.IDataReader.IsClosed%2A&gt;</ph> 和<ph id="ph2">&lt;xref:System.Data.IDataReader.RecordsAffected%2A&gt;</ph>是可以后调用的唯一属性<ph id="ph3">&lt;xref:System.Data.IDataReader&gt;</ph>已关闭。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>