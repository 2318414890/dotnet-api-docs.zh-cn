<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DBConcurrencyException.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57f7d82820c5c9a73c07e2209c1dd5555520ad3b0.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7f7d82820c5c9a73c07e2209c1dd5555520ad3b0</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.DBConcurrencyException">
          <source>The exception that is thrown by the <ph id="ph1">&lt;see cref="T:System.Data.Common.DataAdapter" /&gt;</ph> during an insert, update, or delete operation if the number of rows affected equals zero.</source>
          <target state="translated">在插入、更新或删除操作过程中当受影响的行数等于零时由 <ph id="ph1">&lt;see cref="T:System.Data.Common.DataAdapter" /&gt;</ph> 引发的异常。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DBConcurrencyException">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> examines the number of rows affected by the execution of each insert, update, or delete operation, and throws this exception if the number equals zero.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph>检查每个插入、 更新或删除操作的执行受影响的行数，并会引发此异常，如果数等于零。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DBConcurrencyException">
          <source>This exception is generally caused by a concurrency violation.</source>
          <target state="translated">通常由并发冲突导致此异常。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Data.DBConcurrencyException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DBConcurrencyException.#ctor">
          <source>The default constructor initializes any fields to their default values.</source>
          <target state="translated">默认构造函数将所有字段初始化为其默认值。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String)">
          <source>The text string describing the details of the exception.</source>
          <target state="translated">文本字符串，它描述有关异常的详细信息。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
          <source>The text string describing the details of the exception.</source>
          <target state="translated">文本字符串，它描述有关异常的详细信息。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
          <source>A reference to an inner exception.</source>
          <target state="translated">对内部异常的引用。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
          <source>You can create a new exception that catches an earlier exception.</source>
          <target state="translated">你可以创建一个新异常捕获前面的异常。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
          <source>The code that handles the second exception can use the additional information from the earlier exception, also called an inner exception, to examine the cause of the initial error.</source>
          <target state="translated">处理第二个异常的代码可以使用以前的异常，也称为内部异常的附加信息来检查初始错误的原因。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
          <source>The error message that explains the reason for this exception.</source>
          <target state="translated">说明发生此异常的原因的错误消息。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
          <source>The exception that is the cause of the current exception, or a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) if no inner exception is specified.</source>
          <target state="translated">导致当前异常的异常；如果未指定内部异常，则是一个 null 引用（在 Visual Basic 中为 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
          <source>An array containing the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects whose update failure generated this exception.</source>
          <target state="translated">一个数组，其中包含因更新失败而导致生成此异常的 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="T:System.Data.DBConcurrencyException">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects whose update failure generated this exception to the specified array.</source>
          <target state="translated">将因更新失败而导致生成此异常的 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 对象复制到指定的数组。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
          <source>The one-dimensional array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects to copy the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects into.</source>
          <target state="translated">要向其中复制 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 对象的一维的 <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 对象数组。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects whose update failure generated this exception, to the specified array of <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects.</source>
          <target state="translated">将因更新失败而导致生成此异常的 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 对象复制到指定的 <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 对象数组。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
          <source>When performing batch updates with the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> set to <ph id="ph3">`true`</ph>, this exception is thrown if all row updates fail.</source>
          <target state="translated">执行批处理更新时<ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph>设置为<ph id="ph3">`true`</ph>，如果所有行更新失败将引发此异常。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
          <source>In this case, this <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph> contains <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objects for all rows whose update failed, rather than just the one <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> object in <ph id="ph4">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph>, and the affected <ph id="ph5">&lt;xref:System.Data.DataRow&gt;</ph> objects can be retrieved by calling <ph id="ph6">&lt;xref:System.Data.DBConcurrencyException.CopyToRows%2A&gt;</ph>.</source>
          <target state="translated">在这种情况下，这<ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph>包含<ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>其更新失败，而不仅仅是一个不是所有行的对象<ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph>对象在<ph id="ph4">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph>，并在受影响<ph id="ph5">&lt;xref:System.Data.DataRow&gt;</ph>对象可通过调用检索<ph id="ph6">&lt;xref:System.Data.DBConcurrencyException.CopyToRows%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
          <source>The one-dimensional array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects to copy the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects into.</source>
          <target state="translated">要向其中复制 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 对象的一维的 <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 对象数组。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
          <source>The destination array index to start copying into.</source>
          <target state="translated">从其所在位置开始复制对象的目标数组索引。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects whose update failure generated this exception, to the specified array of <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects, starting at the specified destination array index.</source>
          <target state="translated">将因更新失败而导致生成此异常的 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 对象复制到指定的 <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 对象数组（从指定的目标数组索引开始）。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
          <source>When performing batch updates with the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> set to <ph id="ph3">`true`</ph>, this exception is thrown if all row updates fail.</source>
          <target state="translated">执行批处理更新时<ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph>设置为<ph id="ph3">`true`</ph>，如果所有行更新失败将引发此异常。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
          <source>In this case, this <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph> contains <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objects for all rows whose update failed, rather than just the one <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> object in <ph id="ph4">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph>, and the affected <ph id="ph5">&lt;xref:System.Data.DataRow&gt;</ph> objects can be retrieved by calling <ph id="ph6">&lt;xref:System.Data.DBConcurrencyException.CopyToRows%2A&gt;</ph>.</source>
          <target state="translated">在这种情况下，这<ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph>包含<ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>其更新失败，而不仅仅是一个不是所有行的对象<ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph>对象在<ph id="ph4">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph>，并在受影响<ph id="ph5">&lt;xref:System.Data.DataRow&gt;</ph>对象可通过调用检索<ph id="ph6">&lt;xref:System.Data.DBConcurrencyException.CopyToRows%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> that holds the serialized data associated with the <ph id="ph2">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>，它保存与 <ph id="ph2">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> 关联的序列化数据。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that contains the source and destination of the serialized stream associated with the <ph id="ph2">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>，它包含与 <ph id="ph2">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> 关联的序列化流的源和目标。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates the aprcified serialization information object with the data needed to serialize the <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</source>
          <target state="translated">使用序列化 <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> 所需的数据填充指定的序列化信息对象。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;paramref name="info" /&gt;</ph> parameter is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph> 参数为 null 引用（在 Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Data.DBConcurrencyException.Row">
          <source>Gets or sets the value of the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> that generated the <ph id="ph2">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</source>
          <target state="translated">获取或设置生成 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.Row">
          <source>The value of the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 的值。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.Row">
          <source>Use <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph> to retrieve the value of the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> row that generated the <ph id="ph3">&lt;xref:System.Data.DBConcurrencyException&gt;</ph>.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph>若要检索的值<ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>行生成<ph id="ph3">&lt;xref:System.Data.DBConcurrencyException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.Row">
          <source>Setting the value of the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> has no effect.</source>
          <target state="translated">值设置<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>不起作用。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.Row">
          <source>When performing batch updates with the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> set to <ph id="ph3">`true`</ph>, this exception is thrown if all row updates fail.</source>
          <target state="translated">执行批处理更新时<ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph>设置为<ph id="ph3">`true`</ph>，如果所有行更新失败将引发此异常。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.Row">
          <source>In this case, this <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph> contains <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objects for all rows whose update failed, rather than just the one <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> object in <ph id="ph4">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph>, and the affected <ph id="ph5">&lt;xref:System.Data.DataRow&gt;</ph> objects can be retrieved by calling <ph id="ph6">&lt;xref:System.Data.DBConcurrencyException.CopyToRows%2A&gt;</ph>.</source>
          <target state="translated">在这种情况下，这<ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph>包含<ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>其更新失败，而不仅仅是一个不是所有行的对象<ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph>对象在<ph id="ph4">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph>，并在受影响<ph id="ph5">&lt;xref:System.Data.DataRow&gt;</ph>对象可通过调用检索<ph id="ph6">&lt;xref:System.Data.DBConcurrencyException.CopyToRows%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.Row">
          <source>Serialization support does not exist for <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> objects.</source>
          <target state="translated">序列化支持不存在<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.Row">
          <source>Therefore, if you serialize a <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph> object, the value of the <ph id="ph2">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph> property in the serialized version of the object is set to a null value.</source>
          <target state="translated">因此，如果序列化<ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph>对象、 的值<ph id="ph2">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph>中对象的序列化版本属性是否设置为 null 值。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Data.DBConcurrencyException.RowCount">
          <source>Gets the number of rows whose update failed, generating this exception.</source>
          <target state="translated">获取更新失败（因而生成此异常）的行数。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.RowCount">
          <source>An integer containing a count of the number of rows whose update failed.</source>
          <target state="translated">一个整数，其中包含表示更新失败的行数的计数。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>