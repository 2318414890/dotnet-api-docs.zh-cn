<Type Name="EntityState" FullName="System.Data.EntityState">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="694a8ec896d16b358da7c1c95249ef8365dda1b8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30396861" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum EntityState" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed EntityState extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.EntityState" />
  <TypeSignature Language="VB.NET" Value="Public Enum EntityState" />
  <TypeSignature Language="C++ CLI" Value="public enum class EntityState" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DataAnnotations.BindableType(IsBindable=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>实体对象的状态。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 对象上下文必须了解对象的状态以便将更改保存回数据源。 <xref:System.Data.Objects.ObjectStateEntry> 对象存储 <xref:System.Data.EntityState> 信息。 `SaveChanges` 的 <xref:System.Data.Objects.ObjectContext> 方法将处理附加到上下文的实体，并根据每个对象的 <xref:System.Data.EntityState> 更新数据源。 有关详细信息，请参阅[创建、 添加、 修改，和删除对象](http://msdn.microsoft.com/library/f76f1fad-c553-4b59-820b-89b3dec2fad1)。  
  
 对象上下文中的对象状态由 <xref:System.Data.Objects.ObjectStateManager> 管理。 若要确定对象的状态，请调用以下 <xref:System.Data.Objects.ObjectStateManager> 方法之一：<xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%2A>、<xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%2A> 或 <xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntries%2A>。 <xref:System.Data.Objects.ObjectStateEntry.State%2A> 的 <xref:System.Data.Objects.ObjectStateEntry> 属性定义对象的状态。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.Objects.ObjectContext" />
  </Docs>
  <Members>
    <Member MemberName="Added">
      <MemberSignature Language="C#" Value="Added" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.EntityState Added = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Data.EntityState.Added" />
      <MemberSignature Language="VB.NET" Value="Added" />
      <MemberSignature Language="C++ CLI" Value="Added" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityState</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>该对象是已添加到对象上下文的新对象，但尚未调用 <see cref="M:System.Data.Objects.ObjectContext.SaveChanges" /> 方法。 在保存更改后，对象状态更改为 <see cref="F:System.Data.EntityState.Unchanged" />。 处于 <see cref="F:System.Data.EntityState.Added" /> 状态的对象在 <see cref="T:System.Data.Objects.ObjectStateEntry" /> 中没有原始值。</summary>
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="Deleted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.EntityState Deleted = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Data.EntityState.Deleted" />
      <MemberSignature Language="VB.NET" Value="Deleted" />
      <MemberSignature Language="C++ CLI" Value="Deleted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityState</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>已从对象上下文中删除该对象。 在保存更改后，对象状态更改为 <see cref="F:System.Data.EntityState.Detached" />。</summary>
      </Docs>
    </Member>
    <Member MemberName="Detached">
      <MemberSignature Language="C#" Value="Detached" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.EntityState Detached = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.EntityState.Detached" />
      <MemberSignature Language="VB.NET" Value="Detached" />
      <MemberSignature Language="C++ CLI" Value="Detached" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityState</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>该对象存在但未被跟踪。 实体在创建之后且添加到对象上下文之前处于此状态。 通过调用 <see cref="M:System.Data.Objects.ObjectContext.Detach(System.Object)" /> 方法从上下文中移除实体后，或者使用 <see cref="F:System.Data.Objects.MergeOption.NoTracking" /><see cref="T:System.Data.Objects.MergeOption" /> 加载实体后，该实体也会处于此状态。 没有与处于 <see cref="T:System.Data.Objects.ObjectStateEntry" /> 状态的对象关联的 <see cref="F:System.Data.EntityState.Detached" /> 实体。</summary>
      </Docs>
    </Member>
    <Member MemberName="Modified">
      <MemberSignature Language="C#" Value="Modified" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.EntityState Modified = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Data.EntityState.Modified" />
      <MemberSignature Language="VB.NET" Value="Modified" />
      <MemberSignature Language="C++ CLI" Value="Modified" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityState</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>对象上的一个标量属性已修改，但尚未调用 <see cref="M:System.Data.Objects.ObjectContext.SaveChanges" /> 方法。 在没有更改跟踪代理的 POCO 实体中，如果调用 <see cref="F:System.Data.EntityState.Modified" /> 方法，则已修改属性的状态将更改为 <see cref="M:System.Data.Objects.ObjectContext.DetectChanges" />。 在保存更改后，对象状态更改为 <see cref="F:System.Data.EntityState.Unchanged" />。</summary>
      </Docs>
    </Member>
    <Member MemberName="Unchanged">
      <MemberSignature Language="C#" Value="Unchanged" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.EntityState Unchanged = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Data.EntityState.Unchanged" />
      <MemberSignature Language="VB.NET" Value="Unchanged" />
      <MemberSignature Language="C++ CLI" Value="Unchanged" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EntityState</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>自附加到上下文中后，或自上次调用 <see cref="M:System.Data.Objects.ObjectContext.SaveChanges" /> 方法后，该对象尚未修改。</summary>
      </Docs>
    </Member>
  </Members>
</Type>