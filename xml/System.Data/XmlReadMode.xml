<Type Name="XmlReadMode" FullName="System.Data.XmlReadMode">
  <TypeSignature Language="C#" Value="public enum XmlReadMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XmlReadMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.XmlReadMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum XmlReadMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class XmlReadMode" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="05afd-101">指定如何将 XML 数据和关系架构读入 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="05afd-101">Specifies how to read XML data and a relational schema into a <see cref="T:System.Data.DataSet" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05afd-102">设置时使用此枚举的成员`ReadMode`参数<xref:System.Data.DataSet.ReadXml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="05afd-102">Use the members of this enumeration when setting the `ReadMode` parameter of the <xref:System.Data.DataSet.ReadXml%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05afd-103">`Auto` 模式可能会降低长于设置<xref:System.Data.XmlReadMode>到显式选项。</span><span class="sxs-lookup"><span data-stu-id="05afd-103">`Auto` mode may be slower than setting <xref:System.Data.XmlReadMode> to an explicit option.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Auto">
      <MemberSignature Language="C#" Value="Auto" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode Auto = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.Auto" />
      <MemberSignature Language="VB.NET" Value="Auto" />
      <MemberSignature Language="C++ CLI" Value="Auto" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="05afd-104">默认。</span><span class="sxs-lookup"><span data-stu-id="05afd-104">Default.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05afd-105">执行的最合适的这些操作：</span><span class="sxs-lookup"><span data-stu-id="05afd-105">Performs the most appropriate of these actions:</span></span>  
  
 <span data-ttu-id="05afd-106">如果数据为 DiffGram，则设置`XmlReadMode`到`DiffGram`。</span><span class="sxs-lookup"><span data-stu-id="05afd-106">If the data is a DiffGram, sets `XmlReadMode` to `DiffGram`.</span></span>  
  
 <span data-ttu-id="05afd-107">或</span><span class="sxs-lookup"><span data-stu-id="05afd-107">-or-</span></span>  
  
 <span data-ttu-id="05afd-108">如果数据集已拥有的架构，或该文档包含内联架构，设置`XmlReadMode`到`ReadSchema`。</span><span class="sxs-lookup"><span data-stu-id="05afd-108">If the dataset already has a schema, or the document contains an in-line schema, sets `XmlReadMode` to `ReadSchema`.</span></span>  
  
 <span data-ttu-id="05afd-109">或</span><span class="sxs-lookup"><span data-stu-id="05afd-109">-or-</span></span>  
  
 <span data-ttu-id="05afd-110">如果数据集尚不包含架构和文档不包含内联架构，设置`XmlReadMode`到`InferSchema`。</span><span class="sxs-lookup"><span data-stu-id="05afd-110">If the dataset does not already have a schema and the document does not contain an in-line schema, sets `XmlReadMode` to `InferSchema`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffGram">
      <MemberSignature Language="C#" Value="DiffGram" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode DiffGram = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.DiffGram" />
      <MemberSignature Language="VB.NET" Value="DiffGram" />
      <MemberSignature Language="C++ CLI" Value="DiffGram" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="05afd-111">读取 DiffGram，将 DiffGram 中的更改应用到 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="05afd-111">Reads a DiffGram, applying changes from the DiffGram to the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="05afd-112">语义与 <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> 操作的语义相同。</span><span class="sxs-lookup"><span data-stu-id="05afd-112">The semantics are identical to those of a <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> operation.</span></span> <span data-ttu-id="05afd-113">与 <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> 操作一样，保留 <see cref="P:System.Data.DataRow.RowState" /> 值。</span><span class="sxs-lookup"><span data-stu-id="05afd-113">As with the <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> operation, <see cref="P:System.Data.DataRow.RowState" /> values are preserved.</span></span> <span data-ttu-id="05afd-114">对 <see cref="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" /> 的 DiffGram 输入只能使用 <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> 中的 DiffGram 输出来获得。</span><span class="sxs-lookup"><span data-stu-id="05afd-114">Input to <see cref="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" /> with DiffGrams should only be obtained using the output from <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> as a DiffGram.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05afd-115">目标<xref:System.Data.DataSet>必须具有相同的架构<xref:System.Data.DataSet>在其上<xref:System.Data.DataSet.WriteXml%2A>如此 DiffGram 的调用。</span><span class="sxs-lookup"><span data-stu-id="05afd-115">The target <xref:System.Data.DataSet> must have the same schema as the <xref:System.Data.DataSet> on which <xref:System.Data.DataSet.WriteXml%2A> as DiffGram is called.</span></span> <span data-ttu-id="05afd-116">否则 DiffGram 合并操作失败，并且会引发异常。</span><span class="sxs-lookup"><span data-stu-id="05afd-116">Otherwise the DiffGram merge operation fails, and an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fragment">
      <MemberSignature Language="C#" Value="Fragment" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode Fragment = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.Fragment" />
      <MemberSignature Language="VB.NET" Value="Fragment" />
      <MemberSignature Language="C++ CLI" Value="Fragment" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary><span data-ttu-id="05afd-117">针对 SQL Server 的实例读取 XML 片段（例如，通过执行 FOR XML 查询生成的 XML 片段）。</span><span class="sxs-lookup"><span data-stu-id="05afd-117">Reads XML fragments, such as those generated by executing FOR XML queries, against an instance of SQL Server.</span></span> <span data-ttu-id="05afd-118">当 <see cref="T:System.Data.XmlReadMode" /> 设置为 <see langword="Fragment" /> 时，将默认命名空间作为内联架构读取。</span><span class="sxs-lookup"><span data-stu-id="05afd-118">When <see cref="T:System.Data.XmlReadMode" /> is set to <see langword="Fragment" />, the default namespace is read as the inline schema.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="IgnoreSchema">
      <MemberSignature Language="C#" Value="IgnoreSchema" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode IgnoreSchema = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.IgnoreSchema" />
      <MemberSignature Language="VB.NET" Value="IgnoreSchema" />
      <MemberSignature Language="C++ CLI" Value="IgnoreSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="05afd-119">忽略任何内联架构并将数据读入现有的 <see cref="T:System.Data.DataSet" /> 架构。</span><span class="sxs-lookup"><span data-stu-id="05afd-119">Ignores any inline schema and reads data into the existing <see cref="T:System.Data.DataSet" /> schema.</span></span> <span data-ttu-id="05afd-120">如果任何数据与现有架构不匹配，就会丢弃这些数据（包括为 <see cref="T:System.Data.DataSet" /> 定义的不同命名空间中的数据）。</span><span class="sxs-lookup"><span data-stu-id="05afd-120">If any data does not match the existing schema, it is discarded (including data from differing namespaces defined for the <see cref="T:System.Data.DataSet" />).</span></span> <span data-ttu-id="05afd-121">如果数据是 DiffGram，<see langword="IgnoreSchema" /> 与 <see langword="DiffGram" /> 具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="05afd-121">If the data is a DiffGram, <see langword="IgnoreSchema" /> has the same functionality as <see langword="DiffGram" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="InferSchema">
      <MemberSignature Language="C#" Value="InferSchema" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode InferSchema = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.InferSchema" />
      <MemberSignature Language="VB.NET" Value="InferSchema" />
      <MemberSignature Language="C++ CLI" Value="InferSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="05afd-122">忽略任何内联架构，从数据推断出架构并加载数据。</span><span class="sxs-lookup"><span data-stu-id="05afd-122">Ignores any inline schema, infers schema from the data and loads the data.</span></span> <span data-ttu-id="05afd-123">如果 <see cref="T:System.Data.DataSet" /> 已包含架构，通过添加新表或将列添加到现有表来扩展当前架构。</span><span class="sxs-lookup"><span data-stu-id="05afd-123">If the <see cref="T:System.Data.DataSet" /> already contains a schema, the current schema is extended by adding new tables or adding columns to existing tables.</span></span> <span data-ttu-id="05afd-124">如果推断表已经存在，但命名空间不同，或者任何推断列与现有列冲突，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="05afd-124">An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="InferTypedSchema">
      <MemberSignature Language="C#" Value="InferTypedSchema" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode InferTypedSchema = int32(6)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.InferTypedSchema" />
      <MemberSignature Language="VB.NET" Value="InferTypedSchema" />
      <MemberSignature Language="C++ CLI" Value="InferTypedSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary><span data-ttu-id="05afd-125">忽略任何内联架构，从数据推断出强类型架构并加载数据。</span><span class="sxs-lookup"><span data-stu-id="05afd-125">Ignores any inline schema, infers a strongly typed schema from the data, and loads the data.</span></span> <span data-ttu-id="05afd-126">如果无法从数据中推断出类型，则将其解释为字符串数据。</span><span class="sxs-lookup"><span data-stu-id="05afd-126">If the type cannot be inferred from the data, it is interpreted as string data.</span></span> <span data-ttu-id="05afd-127">如果 <see cref="T:System.Data.DataSet" /> 已包含架构，则通过添加新表或向现有表添加列来扩展当前架构。</span><span class="sxs-lookup"><span data-stu-id="05afd-127">If the <see cref="T:System.Data.DataSet" /> already contains a schema, the current schema is extended, either by adding new tables or by adding columns to existing tables.</span></span> <span data-ttu-id="05afd-128">如果推断表已经存在，但命名空间不同，或者任何推断列与现有列冲突，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="05afd-128">An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ReadSchema">
      <MemberSignature Language="C#" Value="ReadSchema" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode ReadSchema = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.ReadSchema" />
      <MemberSignature Language="VB.NET" Value="ReadSchema" />
      <MemberSignature Language="C++ CLI" Value="ReadSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="05afd-129">读取任何内联架构并加载数据。</span><span class="sxs-lookup"><span data-stu-id="05afd-129">Reads any inline schema and loads the data.</span></span> <span data-ttu-id="05afd-130">如果 <see cref="T:System.Data.DataSet" /> 已包含架构，则可将新表添加到架构中，但是如果内联架构中的任何表在 <see cref="T:System.Data.DataSet" /> 中已经存在，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="05afd-130">If the <see cref="T:System.Data.DataSet" /> already contains schema, new tables may be added to the schema, but an exception is thrown if any tables in the inline schema already exist in the <see cref="T:System.Data.DataSet" />.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>