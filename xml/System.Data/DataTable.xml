<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DataTable.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e05b5b2-d481-4262-b7b7-7de7ac2afe07ae2d2ca49781b6fbea2101bb4f63426c09bee1b1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae2d2ca49781b6fbea2101bb4f63426c09bee1b1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df6cf590aa3087f6c7c202712eee781c6a3c8f96</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/07/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>Represents one table of in-memory data.</source>
          <target state="translated">表示内存中数据的一个表。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is a central object in the ADO.NET library.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>是 ADO.NET 库中的中央对象。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Other objects that use the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> include the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> and the <ph id="ph3">&lt;xref:System.Data.DataView&gt;</ph>.</source>
          <target state="translated">其他对象使用<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>包括<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>和<ph id="ph3">&lt;xref:System.Data.DataView&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>When accessing <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects, note that they are conditionally case sensitive.</source>
          <target state="translated">在访问时<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>对象，请注意，它们是有条件地区分大小写。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>For example, if one <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is named "mydatatable" and another is named "Mydatatable", a string used to search for one of the tables is regarded as case sensitive.</source>
          <target state="translated">例如，如果一个<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>名为"mydatatable"和另一个名为"Mydatatable"，用于搜索表中的一个的字符串将被视为区分大小写。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>However, if "mydatatable" exists and "Mydatatable" does not, the search string is regarded as case insensitive.</source>
          <target state="translated">但是，如果"mydatatable"存在，并且"Mydatatable"不，搜索字符串将被视为区分。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> can contain two <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects that have the same <ph id="ph3">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> property value but different <ph id="ph4">&lt;xref:System.Data.DataTable.Namespace%2A&gt;</ph> property values.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>可以包含两个<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>具有相同的对象<ph id="ph3">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph>属性值但是具有不同<ph id="ph4">&lt;xref:System.Data.DataTable.Namespace%2A&gt;</ph>属性值。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>For more information about working with <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects, see <bpt id="p1">[</bpt>Creating a DataTable<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-a-datatable.md)</ept>.</source>
          <target state="translated">有关使用<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>对象，请参阅<bpt id="p1">[</bpt>创建数据表<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-a-datatable.md)</ept>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>If you are creating a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> programmatically, you must first define its schema by adding <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> objects to the <ph id="ph3">&lt;xref:System.Data.DataColumnCollection&gt;</ph> (accessed through the <ph id="ph4">&lt;xref:System.Data.DataTable.Columns%2A&gt;</ph> property).</source>
          <target state="translated">如果要创建<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>以编程方式，你首先必须通过添加定义其架构<ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph>对象添加到<ph id="ph3">&lt;xref:System.Data.DataColumnCollection&gt;</ph>(通过访问<ph id="ph4">&lt;xref:System.Data.DataTable.Columns%2A&gt;</ph>属性)。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>For more information about adding <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> objects, see <bpt id="p1">[</bpt>Adding Columns to a DataTable<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md)</ept>.</source>
          <target state="translated">有关添加详细信息<ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph>对象，请参阅<bpt id="p1">[</bpt>向数据表添加列<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md)</ept>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>To add rows to a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, you must first use the <ph id="ph2">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> method to return a new <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> object.</source>
          <target state="translated">若要将行添加到<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>，必须首先使用<ph id="ph2">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph>方法以返回一个新<ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> method returns a row with the schema of the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, as it is defined by the table's <ph id="ph3">&lt;xref:System.Data.DataColumnCollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph>方法返回的架构行<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>，因为它由表的定义<ph id="ph3">&lt;xref:System.Data.DataColumnCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The maximum number of rows that a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> can store is 16,777,216.</source>
          <target state="translated">行的最大数目<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>可以存储是 16777216。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>For more information, see <bpt id="p1">[</bpt>Adding Data to a DataTable<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-data-to-a-datatable.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>向数据表添加数据<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-data-to-a-datatable.md)</ept>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> also contains a collection of <ph id="ph2">&lt;xref:System.Data.Constraint&gt;</ph> objects that can be used to ensure the integrity of the data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>还包含一套<ph id="ph2">&lt;xref:System.Data.Constraint&gt;</ph>可以用于确保数据完整性的对象。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>For more information, see <bpt id="p1">[</bpt>DataTable Constraints<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>数据表约束<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md)</ept>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>There are many <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> events that can be used to determine when changes are made to a table.</source>
          <target state="translated">有许多<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>可以用于确定当对表进行更改的事件。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>These include <ph id="ph1">&lt;xref:System.Data.DataTable.RowChanged&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.DataTable.RowDeleting&gt;</ph>, and <ph id="ph4">&lt;xref:System.Data.DataTable.RowDeleted&gt;</ph>.</source>
          <target state="translated">其中包括 <ph id="ph1">&lt;xref:System.Data.DataTable.RowChanged&gt;</ph>、<ph id="ph2">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph>、<ph id="ph3">&lt;xref:System.Data.DataTable.RowDeleting&gt;</ph> 和 <ph id="ph4">&lt;xref:System.Data.DataTable.RowDeleted&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>For more information about the events that can be used with a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, see <bpt id="p1">[</bpt>Handling DataTable Events<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>.</source>
          <target state="translated">有关可与事件的详细信息<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>，请参阅<bpt id="p1">[</bpt>处理数据表事件<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>When an instance of <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is created, some of the read/write properties are set to initial values.</source>
          <target state="translated">实例时<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>创建后，某些的读/写属性设置为初始值。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>For a list of these values, see the <ph id="ph1">&lt;xref:System.Data.DataTable.%23ctor%2A?displayProperty=nameWithType&gt;</ph> constructor topic.</source>
          <target state="translated">有关这些值的列表，请参阅<ph id="ph1">&lt;xref:System.Data.DataTable.%23ctor%2A?displayProperty=nameWithType&gt;</ph>构造函数主题。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects inherit from <ph id="ph3">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph>, and support the <ph id="ph4">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface for .NET Framework remoting.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>对象继承自<ph id="ph3">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph>，并且支持<ph id="ph4">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph>.NET Framework 远程处理的接口。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>These are the only ADO.NET objects that you can use for .NET Framework remoting.</source>
          <target state="translated">这些是唯一可用于.NET Framework 远程处理的 ADO.NET 对象。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The following example creates two <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects and one <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> object, and adds the new objects to a <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">下面的示例创建两个<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>对象和一个<ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph>对象，并将添加到的新对象<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The tables are then displayed in a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
          <target state="translated">表将显示在<ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>This sample demonstrates how to create a DataTable manually with specific schema definitions:</source>
          <target state="translated">此示例演示如何使用特定的架构定义手动创建 DataTable：</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Create multiple DataTables and define the initial columns.</source>
          <target state="translated">创建多个 DataTable 并定义初始列。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Create the table constraints.</source>
          <target state="translated">创建表约束。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Insert the values and display the tables.</source>
          <target state="translated">插入值并显示表。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Create the expression columns and display the tables.</source>
          <target state="translated">创建表达式列并显示表。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>C# and Visual Basic projects with this code sample can be found on <bpt id="p1">[</bpt>Developer Code Samples<ept id="p1">](https://code.msdn.microsoft.com/How-to-create-DataTable-7abb4914)</ept>.</source>
          <target state="translated">此代码示例的 C# 和 Visual Basic 项目可以位于<bpt id="p1">[</bpt>开发人员代码示例<ept id="p1">](https://code.msdn.microsoft.com/How-to-create-DataTable-7abb4914)</ept>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>This type is safe for multithreaded read operations.</source>
          <target state="translated">此类型是安全的多线程读取操作。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>You must synchronize any write operations.</source>
          <target state="translated">你必须同步任何写入操作。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> class with no arguments.</source>
          <target state="translated">在不使用参数的情况下初始化 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source>The constructor sets initial values for all properties of the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> object.</source>
          <target state="translated">构造函数设置的所有属性的初始值<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source>The following table shows the properties and their default values.</source>
          <target state="translated">下表显示的属性和其默认值。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source>When an instance of <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is created, the following read/write properties are set to initial values.</source>
          <target state="translated">实例时<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>创建以下读/写属性设置为初始值。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source>Default value</source>
          <target state="translated">默认值</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source><bpt id="p1">**</bpt>CaseSensitive<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>CaseSensitive<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source>Same as the parent <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, if it belongs to one.</source>
          <target state="translated">与父项相同<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>，如果它属于一个。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source>Otherwise, <ph id="ph1">`false`</ph>.</source>
          <target state="translated">否则为 <ph id="ph1">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source><bpt id="p1">**</bpt>DisplayExpression<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>DisplayExpression<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source>Empty string ("")</source>
          <target state="translated">空字符串 ("")</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source><bpt id="p1">**</bpt>Locale<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>区域设置<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source>Same as the parent <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object's <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> (returned by the <ph id="ph3">&lt;xref:System.Data.DataSet.Locale%2A&gt;</ph> property); if no parent exists, the default is the current system <ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph>.</source>
          <target state="translated">与父项相同<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>对象的<ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph>(返回<ph id="ph3">&lt;xref:System.Data.DataSet.Locale%2A&gt;</ph>属性); 如果存在没有父级，默认值是当前系统<ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source><bpt id="p1">**</bpt>MinimumCapacity<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>MinimumCapacity<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source>50 rows.</source>
          <target state="translated">50 行。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source>You can change the value for any of these properties through a separate call to the property.</source>
          <target state="translated">你可以更改任何通过单独属性调用这些属性的值。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor">
          <source>The following example creates a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> with <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph>, and displays it in a <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
          <target state="translated">下面的示例创建一个新<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>与<ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph>和<ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph>，并将其显示在<ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.#ctor(System.String)">
          <source>The name to give the table.</source>
          <target state="translated">要向表提供的名称。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.#ctor(System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>tableName<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or an empty string, a default name is given when added to the <ph id="ph2">&lt;see cref="T:System.Data.DataTableCollection" /&gt;</ph>.</source>
          <target state="translated">如果 tableName 为 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 或空字符串，则添加到 <ph id="ph2">&lt;see cref="T:System.Data.DataTableCollection" /&gt;</ph> 时会提供默认名称<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> class with the specified table name.</source>
          <target state="translated">使用指定的表名初始化 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor(System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and displays it in a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
          <target state="translated">下面的示例创建<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>和将其显示在<ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>控件。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The data needed to serialize or deserialize an object.</source>
          <target state="translated">序列化或反序列化对象所需的数据。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The source and destination of a given serialized stream.</source>
          <target state="translated">给定序列化流的源和目标。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> class with the <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> and the <ph id="ph3">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>.</source>
          <target state="translated">使用 <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> 初始化 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This implementation of the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> constructor is required for <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph>.</source>
          <target state="translated">此实现的<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>构造函数，才能使用<ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.#ctor(System.String,System.String)">
          <source>The name to give the table.</source>
          <target state="translated">要向表提供的名称。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.#ctor(System.String,System.String)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>tableName<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or an empty string, a default name is given when added to the <ph id="ph2">&lt;see cref="T:System.Data.DataTableCollection" /&gt;</ph>.</source>
          <target state="translated">如果 tableName 为 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 或空字符串，则添加到 <ph id="ph2">&lt;see cref="T:System.Data.DataTableCollection" /&gt;</ph> 时会提供默认名称<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.#ctor(System.String,System.String)">
          <source>The namespace for the XML representation of the data stored in the <ph id="ph1">&lt;see langword="DataTable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="DataTable" /&gt;</ph> 中所存储数据的 XML 表示形式的命名空间。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> class using the specified table name and namespace.</source>
          <target state="translated">使用指定的表名和命名空间初始化 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.AcceptChanges">
          <source>Commits all the changes made to this table since the last time <ph id="ph1">&lt;see cref="M:System.Data.DataTable.AcceptChanges" /&gt;</ph> was called.</source>
          <target state="translated">提交自上次调用 <ph id="ph1">&lt;see cref="M:System.Data.DataTable.AcceptChanges" /&gt;</ph> 以来对该表进行的所有更改。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.AcceptChanges">
          <source>When <ph id="ph1">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> is called, any <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> object still in edit mode successfully ends its edits.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph>调用时，任何<ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>仍处于编辑模式的对象已成功结束其编辑。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.AcceptChanges">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> also changes: all <ph id="ph2">`Added`</ph> and <ph id="ph3">`Modified`</ph> rows become <ph id="ph4">`Unchanged`</ph>, and <ph id="ph5">`Deleted`</ph> rows are removed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph>也会更改： 所有<ph id="ph2">`Added`</ph>和<ph id="ph3">`Modified`</ph>行都变为<ph id="ph4">`Unchanged`</ph>，和<ph id="ph5">`Deleted`</ph>已删除的行。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.AcceptChanges">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> method is generally called on a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> after you attempt to update the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> using the <ph id="ph4">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph>方法通常称为上<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>你尝试更新后<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>使用<ph id="ph4">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.AcceptChanges">
          <source>The following example tests each table for errors.</source>
          <target state="translated">下面的示例测试有错误的每个表。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.AcceptChanges">
          <source>If the table's errors can be reconciled (by passing it to an undefined function), <ph id="ph1">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> is called; otherwise, <ph id="ph2">&lt;xref:System.Data.DataTable.RejectChanges%2A&gt;</ph> is called.</source>
          <target state="translated">如果表中的错误可以协调 （通过将其传递到未定义的函数），<ph id="ph1">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph>调用; 否则为<ph id="ph2">&lt;xref:System.Data.DataTable.RejectChanges%2A&gt;</ph>调用。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.BeginInit">
          <source>Begins the initialization of a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that is used on a form or used by another component.</source>
          <target state="translated">开始初始化在窗体上使用或由另一个组件使用的 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.BeginInit">
          <source>The initialization occurs at run time.</source>
          <target state="translated">初始化发生在运行时。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.BeginInit">
          <source>The Visual Studio .NET design environment uses this method to start the initialization of a component that is used on a form or used by another component.</source>
          <target state="translated">Visual Studio.NET 设计环境使用此方法来启动窗体上使用或由另一个组件的组件的初始化。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.BeginInit">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.EndInit%2A&gt;</ph> method ends the initialization.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.EndInit%2A&gt;</ph>方法初始化已结束。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.BeginInit">
          <source>Using the <ph id="ph1">&lt;xref:System.Data.DataTable.BeginInit%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.EndInit%2A&gt;</ph> methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.DataTable.BeginInit%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataTable.EndInit%2A&gt;</ph>方法阻止控件完全初始化之前使用。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.BeginLoadData">
          <source>Turns off notifications, index maintenance, and constraints while loading data.</source>
          <target state="translated">加载数据时，关闭通知、索引维护和约束。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.BeginLoadData">
          <source>Use <ph id="ph1">&lt;xref:System.Data.DataTable.BeginLoadData%2A&gt;</ph> in conjunction with <ph id="ph2">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataTable.EndLoadData%2A&gt;</ph>.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.DataTable.BeginLoadData%2A&gt;</ph>结合<ph id="ph2">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Data.DataTable.EndLoadData%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.CaseSensitive">
          <source>Indicates whether string comparisons within the table are case-sensitive.</source>
          <target state="translated">指示表中的字符串比较是否区分大小写。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.CaseSensitive">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the comparison is case-sensitive; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果比较区分大小写，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.CaseSensitive">
          <source>The default is set to the parent <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> object's <ph id="ph2">&lt;see cref="P:System.Data.DataSet.CaseSensitive" /&gt;</ph> property, or <ph id="ph3">&lt;see langword="false" /&gt;</ph> if the <ph id="ph4">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> was created independently of a <ph id="ph5">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">默认值被设置为父级 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 对象的 <ph id="ph2">&lt;see cref="P:System.Data.DataSet.CaseSensitive" /&gt;</ph> 属性；当 <ph id="ph4">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的创建独立于 <ph id="ph5">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 时设置为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.CaseSensitive">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.CaseSensitive%2A&gt;</ph> property affects string comparisons in sorting, searching, and filtering.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.CaseSensitive%2A&gt;</ph>属性会影响中排序、 搜索和筛选的字符串比较。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.CaseSensitive">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph> method twice on a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">下面的示例调用<ph id="ph1">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph>方法两次<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.CaseSensitive">
          <source>The first time, the <ph id="ph1">&lt;xref:System.Data.DataTable.CaseSensitive%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, the second, to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">第一次，<ph id="ph1">&lt;xref:System.Data.DataTable.CaseSensitive%2A&gt;</ph>属性设置为<ph id="ph2">`false`</ph>，则第二个<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.ChildRelations">
          <source>Gets the collection of child relations for this <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">获取此 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的子关系的集合。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ChildRelations">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRelationCollection" /&gt;</ph> that contains the child relations for the table.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Data.DataRelationCollection" /&gt;</ph>，包含该表的子关系。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ChildRelations">
          <source>An empty collection is returned if no <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> objects exist.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> 对象不存在，将返回空集合。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ChildRelations">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataRelation&gt;</ph> defines the relationship between two tables.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Data.DataRelation&gt;</ph>定义两个表之间的关系。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ChildRelations">
          <source>Typically, two tables are linked through a single field that contains the same data.</source>
          <target state="translated">通常情况下，通过单个字段包含相同的数据链接两个表。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ChildRelations">
          <source>For example, a table which contains address data may have a single field containing codes that represent countries/regions.</source>
          <target state="translated">例如，其中包含地址数据的表可能具有单个字段，其中包含表示国家/地区代码。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ChildRelations">
          <source>A second table that contains country/region data will have a single field that contains the code that identifies the country/region, and it is this code which is inserted into the corresponding field in the first table.</source>
          <target state="translated">包含国家/地区的数据的第二个表将具有单个字段包含标识国家/地区代码和它将此代码会插入到第一个表中的对应字段。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ChildRelations">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataRelation&gt;</ph>, then, contains at least four pieces of information: (1) the name of the first table, (2) the column name in the first table, (3) the name of the second table, and (4) the column name in the second table.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Data.DataRelation&gt;</ph>，然后，包含至少四部分信息: (1) 的第一个表名称、 中的第一个表 （2） 的列名称、 第二个表，（3） 的名称和第二个表中 （4） 的列名称。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ChildRelations">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.DataTable.ChildRelations%2A&gt;</ph> property to return each child <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> in a <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Data.DataTable.ChildRelations%2A&gt;</ph>属性以返回每个子<ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph>中<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ChildRelations">
          <source>Each relation is then used as an argument in the <ph id="ph1">&lt;xref:System.Data.DataRow.GetChildRows%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> to return an array of rows.</source>
          <target state="translated">每个关系中的参数作为用<ph id="ph1">&lt;xref:System.Data.DataRow.GetChildRows%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>返回行的数组。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ChildRelations">
          <source>The value of each column in the row is then printed.</source>
          <target state="translated">然后打印的行中的每个列的值。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Clear">
          <source>Clears the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> of all data.</source>
          <target state="translated">清除所有数据的 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clear">
          <source>All rows in all tables are removed.</source>
          <target state="translated">将删除所有表中的所有行。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clear">
          <source>An exception is generated if the table has any enforced child relations that would cause child rows to be orphaned.</source>
          <target state="translated">如果表具有将导致子行孤立任何强制执行的子关系，则会生成异常。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clear">
          <source>If the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is bound to an <ph id="ph2">&lt;xref:System.Xml.XmlDataDocument&gt;</ph>, calling <ph id="ph3">&lt;xref:System.Data.DataSet.Clear%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph4">&lt;xref:System.Data.DataTable.Clear%2A?displayProperty=nameWithType&gt;</ph> raises the <ph id="ph5">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>绑定到<ph id="ph2">&lt;xref:System.Xml.XmlDataDocument&gt;</ph>，则调用<ph id="ph3">&lt;xref:System.Data.DataSet.Clear%2A?displayProperty=nameWithType&gt;</ph>或<ph id="ph4">&lt;xref:System.Data.DataTable.Clear%2A?displayProperty=nameWithType&gt;</ph>引发<ph id="ph5">&lt;xref:System.NotSupportedException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clear">
          <source>To avoid this situation, traverse each table, removing each row one at a time.</source>
          <target state="translated">若要避免这种情况下，遍历每个表，一次移除每一行。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clear">
          <source>When you use <ph id="ph1">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> to create new rows, the rows must be processed before you call <ph id="ph2">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph>.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph>若要创建新行，行必须处理你在调用之前<ph id="ph2">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clear">
          <source>The following example clears the table of all data.</source>
          <target state="translated">下面的示例将清除所有数据的表。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Clone">
          <source>Clones the structure of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, including all <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> schemas and constraints.</source>
          <target state="translated">克隆 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的结构，包括所有 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 架构和约束。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Clone">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> with the same schema as the current <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">新的 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>，与当前 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 具有相同架构。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>If these classes have been derived, the clone will also be of the same derived classes.</source>
          <target state="translated">如果派生的这些类，克隆也将是相同的派生类。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>Clone creates a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> with the same structure as the original <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, but does not copy any data (the new <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> will not contain any <ph id="ph4">`DataRows`</ph>).</source>
          <target state="translated">克隆可创建具有与原始 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> 相同的结构的新 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>，但不复制任何数据（新 <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> 将不会包含任何 <ph id="ph4">`DataRows`</ph>）。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>To copy both the structure and data into a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, use <ph id="ph2">&lt;xref:System.Data.DataTable.Copy%2A&gt;</ph>.</source>
          <target state="translated">若要同时将结构和数据复制到新 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> 中，请使用 <ph id="ph2">&lt;xref:System.Data.DataTable.Copy%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>The following sample demonstrates how to update the structure and constraints of the destination table after you execute DataTable.Clone.</source>
          <target state="translated">以下示例演示如何在执行 DataTable.Clone 后更新目标表的结构和约束。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>The ClonedDataTable class will return a destination table and includes all the updating events.</source>
          <target state="translated">ClonedDataTable 类将返回目标表并包括所有更新事件。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>After the clone, structure changes in the source table won’t be reflected in the destination table.</source>
          <target state="translated">克隆后，源表中的结构更改不会反映到目标表中。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>Specifically, this sample will:</source>
          <target state="translated">具体而言，此示例将：</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>Update the changes of the columns in source table.</source>
          <target state="translated">更新源表中的列更改。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>Update the changes of the UniqueConstraint in source table.</source>
          <target state="translated">更新源表中的 UniqueConstraint 更改。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>Update the changes of the ForeignKeyConstraint in source table.</source>
          <target state="translated">更新源表中的 ForeignKeyConstraint 更改。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>C# and Visual Basic projects with this code sample can be found on <bpt id="p1">[</bpt>Developer Code Samples<ept id="p1">](https://code.msdn.microsoft.com/site/search?f%5B0%5D.Type=SearchText&amp;f%5B0%5D.Value=How%20to%20automically%20update%20the%20structure%20of%20a%20cloned%20DataTable)</ept>.</source>
          <target state="translated">此代码示例的 C# 和 Visual Basic 项目可以位于<bpt id="p1">[</bpt>开发人员代码示例<ept id="p1">](https://code.msdn.microsoft.com/site/search?f%5B0%5D.Type=SearchText&amp;f%5B0%5D.Value=How%20to%20automically%20update%20the%20structure%20of%20a%20cloned%20DataTable)</ept>。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>This sample shows how to modify data in a DataTable and update the data source.</source>
          <target state="translated">此示例演示如何更改 DataTable 中的数据和更新数据源。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>First, create a database:</source>
          <target state="translated">首先，创建一个数据库：</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source>You can now compile and run the sample.</source>
          <target state="translated">现在可编译并运行此示例。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Clone">
          <source><bpt id="p1">[</bpt>How to modify data in DataTable and update to the data source<ept id="p1">](https://code.msdn.microsoft.com/How-to-modify-data-in-c68d35f4)</ept> has Visual Basic and C# projects of this sample.</source>
          <target state="translated"><bpt id="p1">[</bpt>如何修改 DataTable 和更新到数据源中的数据<ept id="p1">](https://code.msdn.microsoft.com/How-to-modify-data-in-c68d35f4)</ept>具有此示例的 Visual Basic 和 C# 项目。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="E:System.Data.DataTable.ColumnChanged">
          <source>Occurs after a value has been changed for the specified <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> in a <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">更改 <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 中指定的 <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> 值之后发生。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.ColumnChanged">
          <source>For more information, see <bpt id="p1">[</bpt>Handling DataTable Events<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理数据表事件<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="E:System.Data.DataTable.ColumnChanging">
          <source>Occurs when a value is being changed for the specified <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> in a <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">更改 <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 中指定的 <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> 值时发生。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.ColumnChanging">
          <source>For more information, see <bpt id="p1">[</bpt>Handling DataTable Events<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理数据表事件<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.Columns">
          <source>Gets the collection of columns that belong to this table.</source>
          <target state="translated">获取属于该表的列的集合。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Columns">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataColumnCollection" /&gt;</ph> that contains the collection of <ph id="ph2">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> objects for the table.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Data.DataColumnCollection" /&gt;</ph>，包含该表的 <ph id="ph2">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> 对象的集合。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Columns">
          <source>An empty collection is returned if no <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> objects exist.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> 对象不存在，将返回空集合。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Columns">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataColumnCollection&gt;</ph> determines the schema of a table by defining the data type of each column.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataColumnCollection&gt;</ph>通过定义每个列的数据类型确定的表架构。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Columns">
          <source>The following example prints each value of each row in a table using the <ph id="ph1">&lt;xref:System.Data.DataTable.Columns%2A&gt;</ph> property.</source>
          <target state="translated">下面的示例输出中表使用的每一行的每个值<ph id="ph1">&lt;xref:System.Data.DataTable.Columns%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>The expression to compute.</source>
          <target state="translated">要计算的表达式。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>The filter to limit the rows that evaluate in the expression.</source>
          <target state="translated">用于限制表达式中计算的行的筛选器。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>Computes the given expression on the current rows that pass the filter criteria.</source>
          <target state="translated">计算用来传递筛选条件的当前行上的给定表达式。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, set to the result of the computation.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 设置为计算结果。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>If the expression evaluates to null, the return value will be <ph id="ph1">&lt;see cref="F:System.DBNull.Value" /&gt;</ph>.</source>
          <target state="translated">如果该表达式计算结果为 null，则返回值为 <ph id="ph1">&lt;see cref="F:System.DBNull.Value" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>The <ph id="ph1">`expression`</ph> parameter requires an aggregate function.</source>
          <target state="translated"><ph id="ph1">`expression`</ph>参数需要聚合函数。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>For example, the following is a legal expression:</source>
          <target state="translated">例如，下面是一个合法的表达式：</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>But this expression is not:</source>
          <target state="translated">但是，此表达式不是：</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>If you must perform an operation on two or more columns, you should create a <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph>, set its <ph id="ph2">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> property to an appropriate expression, and use an aggregate expression on the resulting column.</source>
          <target state="translated">如果必须执行两个或多个列上的操作，则应创建<ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph>，将其<ph id="ph2">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph>到适当的表达式，并使用在生成的列的聚合表达式中的属性。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>In that case, given a <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> with the name "total", and the <ph id="ph2">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> property set to this:</source>
          <target state="translated">在这种情况下，给定<ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph>具有名称"总"，与<ph id="ph2">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph>属性设置为此：</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>The expression argument for the <ph id="ph1">&lt;xref:System.Data.DataTable.Compute%2A&gt;</ph> method would then be this:</source>
          <target state="translated">表达式参数<ph id="ph1">&lt;xref:System.Data.DataTable.Compute%2A&gt;</ph>方法将为此：</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>The second parameter, <ph id="ph1">`filter`</ph>, determines which rows are used in the expression.</source>
          <target state="translated">第二个参数， <ph id="ph1">`filter`</ph>，确定在表达式中使用哪些行。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>For example, if the table contains a date column named "colDate", you could limit the rows with the following expression:</source>
          <target state="translated">例如，如果表包含一个名为"colDate"的日期列，则无法限制使用以下表达式的行：</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>For rules on creating expressions for both parameters, see the <ph id="ph1">&lt;xref:System.Data.DataColumn.Expression%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">有关创建这两个参数的表达式的规则，请参阅<ph id="ph1">&lt;xref:System.Data.DataColumn.Expression%2A?displayProperty=nameWithType&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Compute(System.String,System.String)">
          <source>The following example sums the values of a column named "Total", for the salesperson whose identification number is five.</source>
          <target state="translated">下面的示例针对名"总计"，为其标识号为五位销售人员的列的值求和。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.Constraints">
          <source>Gets the collection of constraints maintained by this table.</source>
          <target state="translated">获取由该表维护的约束的集合。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Constraints">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.ConstraintCollection" /&gt;</ph> that contains the collection of <ph id="ph2">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> objects for the table.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Data.ConstraintCollection" /&gt;</ph>，包含该表的 <ph id="ph2">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> 对象的集合。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Constraints">
          <source>An empty collection is returned if no <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> objects exist.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see cref="T:System.Data.Constraint" /&gt;</ph> 对象不存在，将返回空集合。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Constraints">
          <source>A <ph id="ph1">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> restricts the action performed when a value in a column (or columns) is either deleted or updated.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph>限制时删除或更新列 （或列） 中的值执行的操作。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Constraints">
          <source>Such a constraint is intended to be used with primary key columns.</source>
          <target state="translated">此类约束旨在与主键列一起使用。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Constraints">
          <source>In a parent/child relationship between two tables, deleting a value from the parent table can affect the child rows in one of the following ways.</source>
          <target state="translated">在父/子关系中两个表之间，从父表中删除值可能会影响子行在通过以下方式之一。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Constraints">
          <source>The child rows can also be deleted (a cascading action).</source>
          <target state="translated">也可以是行的子删除 （级联操作）。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Constraints">
          <source>The values in the child column (or columns) can be set to null values.</source>
          <target state="translated">中子 （或多个列） 的值可以设置为 null 值。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Constraints">
          <source>The values in the child column (or columns) can be set to default values.</source>
          <target state="translated">中子 （或多个列） 的值可以设置为默认值。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Constraints">
          <source>An exception can be generated.</source>
          <target state="translated">可以生成异常。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Constraints">
          <source>A <ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph> becomes active when attempting to set a value in a primary key to a non-unique value.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Data.UniqueConstraint&gt;</ph>尝试在一个主键到非唯一的值中设置一个值时将变为活动状态。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Constraints">
          <source>The following example adds a <ph id="ph1">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> to the collection of constraints.</source>
          <target state="translated">下面的示例添加<ph id="ph1">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph>到约束的集合。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Copy">
          <source>Copies both the structure and data for this <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">复制该 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的结构和数据。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Copy">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> with the same structure (table schemas and constraints) and data as this <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">新的 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>，具有与该 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 相同的结构（表架构和约束）和数据。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Copy">
          <source>If these classes have been derived, the copy will also be of the same derived classes.</source>
          <target state="translated">如果已派生这些类，则副本也是相同的派生类。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Copy">
          <source><ph id="ph1">&lt;see cref="M:System.Data.DataTable.Copy" /&gt;</ph> creates a new <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> with the same structure and data as the original <ph id="ph3">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.DataTable.Copy" /&gt;</ph> 创建一个新 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>，后者与原始 <ph id="ph3">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 具有相同的结构和数据。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Copy">
          <source>To copy the structure to a new <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, but not the data, use <ph id="ph2">&lt;see cref="M:System.Data.DataTable.Clone" /&gt;</ph>.</source>
          <target state="translated">要将结构复制到新的 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>，而不是复制到数据，请使用 <ph id="ph2">&lt;see cref="M:System.Data.DataTable.Clone" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Copy">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.DataTable.Copy%2A&gt;</ph> method to create a copy of the original <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Data.DataTable.Copy%2A&gt;</ph>方法来创建一份原始<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Copy">
          <source>The namespace name is not retained if it is inherited from a parent <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">如果从父文件夹继承的命名空间名称不会保留<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.CreateDataReader">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> corresponding to the data within this <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">返回与此 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 内的数据对应的 <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.CreateDataReader">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> containing one result set, corresponding to the source <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> 包含一个对应于源 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 实例的结果集。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.CreateDataReader">
          <source>The following console application creates a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instance.</source>
          <target state="translated">以下控制台应用程序创建一个 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.CreateDataReader">
          <source>The example then passes the filled <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> to a procedure that calls the <ph id="ph2">&lt;xref:System.Data.DataTable.CreateDataReader%2A&gt;</ph> method, which iterates through the results contained within the <ph id="ph3">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">该示例然后将填充<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>给过程调用<ph id="ph2">&lt;xref:System.Data.DataTable.CreateDataReader%2A&gt;</ph>方法，它循环访问结果中包含<ph id="ph3">&lt;xref:System.Data.DataTableReader&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.CreateDataReader">
          <source>The example displays the following output in the console window:</source>
          <target state="translated">该示例在控制台窗口中显示以下输出：</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.CreateInstance">
          <source>Creates a new instance of <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">创建 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的新实例。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.CreateInstance">
          <source>The new expression.</source>
          <target state="translated">新表达式。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.DataSet">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to which this table belongs.</source>
          <target state="translated">获取此表所属的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.DataSet">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to which this table belongs.</source>
          <target state="translated">此表所属的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.DataSet">
          <source>If a control is data bound to a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, and the table belongs to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, you can get to the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> through this property.</source>
          <target state="translated">如果控件数据绑定到<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>，并且表属于<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>，可获取指向<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>通过此属性。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.DataSet">
          <source>The following example returns the parent <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> of a given table through the <ph id="ph2">&lt;xref:System.Data.DataTable.DataSet%2A&gt;</ph> property.</source>
          <target state="translated">下面的示例返回父<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>通过给定表的<ph id="ph2">&lt;xref:System.Data.DataTable.DataSet%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.DefaultView">
          <source>Gets a customized view of the table that may include a filtered view, or a cursor position.</source>
          <target state="translated">获取可能包含筛选视图或游标位置的表的自定义视图。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.DefaultView">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataView" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">与 <ph id="ph1">&lt;see cref="T:System.Data.DataView" /&gt;</ph> 关联的 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.DefaultView">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.DefaultView%2A&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph> you can use to sort, filter, and search a <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.DefaultView%2A&gt;</ph>属性返回<ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph>可用于排序、 筛选和搜索<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.DefaultView">
          <source>The following example sets a property of the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> object's <ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph> through the <ph id="ph3">&lt;xref:System.Data.DataTable.DefaultView%2A&gt;</ph> property.</source>
          <target state="translated">下面的示例设置的一个属性<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>对象的<ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph>通过<ph id="ph3">&lt;xref:System.Data.DataTable.DefaultView%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.DefaultView">
          <source>The example also shows the binding of a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> named "Suppliers" that includes a column named "CompanyName."</source>
          <target state="translated">该示例还演示的绑定<ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>控制转移到<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>名为"供应商"包括一个名为"CompanyName"。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.DisplayExpression">
          <source>Gets or sets the expression that returns a value used to represent this table in the user interface.</source>
          <target state="translated">获取或设置一个表达式，该表达式返回的值用于在用户界面中表示此表。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.DisplayExpression">
          <source>The <ph id="ph1">&lt;see langword="DisplayExpression" /&gt;</ph> property lets you display the name of this table in a user interface.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="DisplayExpression" /&gt;</ph> 属性用于在用户界面中显示此表名。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.DisplayExpression">
          <source>A display string.</source>
          <target state="translated">显示字符串。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.EndInit">
          <source>Ends the initialization of a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that is used on a form or used by another component.</source>
          <target state="translated">结束在窗体上使用或由另一个组件使用的 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的初始化。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.EndInit">
          <source>The initialization occurs at run time.</source>
          <target state="translated">初始化发生在运行时。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.EndInit">
          <source>The Visual Studio .NET design environment uses this method to end the initialization of a component that is used on a form or used by another component.</source>
          <target state="translated">Visual Studio.NET 设计环境使用此方法来结束的窗体上使用或由另一个组件的组件初始化。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.EndInit">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.BeginInit%2A&gt;</ph> method starts the initialization.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.BeginInit%2A&gt;</ph>方法开始初始化。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.EndInit">
          <source>Using the <ph id="ph1">&lt;xref:System.Data.DataTable.BeginInit%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.EndInit%2A&gt;</ph> methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.DataTable.BeginInit%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataTable.EndInit%2A&gt;</ph>方法阻止控件完全初始化之前使用。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.EndLoadData">
          <source>Turns on notifications, index maintenance, and constraints after loading data.</source>
          <target state="translated">加载数据后，打开通知、索引维护和约束。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.EndLoadData">
          <source>Use <ph id="ph1">&lt;xref:System.Data.DataTable.EndLoadData%2A&gt;</ph> in conjunction with <ph id="ph2">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataTable.BeginLoadData%2A&gt;</ph>.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.DataTable.EndLoadData%2A&gt;</ph>结合<ph id="ph2">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Data.DataTable.BeginLoadData%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.ExtendedProperties">
          <source>Gets the collection of customized user information.</source>
          <target state="translated">获取自定义用户信息的集合。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ExtendedProperties">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.PropertyCollection" /&gt;</ph> that contains custom user information.</source>
          <target state="translated">包含自定义用户信息的 <ph id="ph1">&lt;see cref="T:System.Data.PropertyCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ExtendedProperties">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.ExtendedProperties%2A&gt;</ph> to add custom information to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.DataTable.ExtendedProperties%2A&gt;</ph>向其添加自定义信息<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ExtendedProperties">
          <source>Add information with the <ph id="ph1">`Add`</ph> method.</source>
          <target state="translated">使用添加信息<ph id="ph1">`Add`</ph>方法。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ExtendedProperties">
          <source>Retrieve information with the <ph id="ph1">`Item`</ph> method.</source>
          <target state="translated">检索信息，<ph id="ph1">`Item`</ph>方法。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ExtendedProperties">
          <source>Extended properties must be of type <ph id="ph1">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">扩展的属性的类型必须为<ph id="ph1">&lt;xref:System.String&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ExtendedProperties">
          <source>Properties that are not of type String are not persisted when the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is written as XML.</source>
          <target state="translated">并不属于 String 类型的属性不会保留时<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>以 XML 形式写入。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ExtendedProperties">
          <source>The following example adds a timestamp value to the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> through the <ph id="ph2">&lt;xref:System.Data.DataTable.ExtendedProperties%2A&gt;</ph> property.</source>
          <target state="translated">下面的示例将添加到一个时间戳值<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>通过<ph id="ph2">&lt;xref:System.Data.DataTable.ExtendedProperties%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="F:System.Data.DataTable.fInitInProgress">
          <source>Checks whether initialization is in progress.</source>
          <target state="translated">检查是否正在进行初始化。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="F:System.Data.DataTable.fInitInProgress">
          <source>The initialization occurs at run time.</source>
          <target state="translated">初始化发生在运行时。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>Gets a copy of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> containing all changes made to it since it was last loaded, or since <ph id="ph2">&lt;see cref="M:System.Data.DataTable.AcceptChanges" /&gt;</ph> was called.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的副本，该副本包含自上次加载以来或自调用 <ph id="ph2">&lt;see cref="M:System.Data.DataTable.AcceptChanges" /&gt;</ph> 以来的所有更改。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetChanges">
          <source>Gets a copy of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that contains all changes made to it since it was loaded or <ph id="ph2">&lt;see cref="M:System.Data.DataTable.AcceptChanges" /&gt;</ph> was last called.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的副本，该副本包含自加载以来或自上次调用 <ph id="ph2">&lt;see cref="M:System.Data.DataTable.AcceptChanges" /&gt;</ph> 以来进行的所有更改。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetChanges">
          <source>A copy of the changes from this <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no changes are found.</source>
          <target state="translated">此 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 中的更改的副本，如果未发现更改，则为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.GetChanges">
          <source>Creates a new <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> containing a copy of all rows in the original <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> that have pending changes.</source>
          <target state="translated">创建一个新<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含原始中的所有行的副本<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>中具有挂起更改。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.GetChanges">
          <source>Relationship constraints can cause additional unchanged rows to be added to the new <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> if the unchanged rows contain primary keys corresponding to foreign keys in the changed rows.</source>
          <target state="translated">关系约束可能会导致其他未更改的行添加到新<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>如果未更改的行包含对应于已更改的行中的外键的主键。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.GetChanges">
          <source>The method returns <ph id="ph1">`null`</ph> (<ph id="ph2">`Nothing`</ph> in Visual Basic) if there are no rows in the original <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> with pending changes.</source>
          <target state="translated">该方法返回<ph id="ph1">`null`</ph>(<ph id="ph2">`Nothing`</ph>在 Visual Basic 中) 中是否存在任何行原始<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>与挂起的更改。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
          <source>Gets a copy of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> containing all changes made to it since it was last loaded, or since <ph id="ph2">&lt;see cref="M:System.Data.DataTable.AcceptChanges" /&gt;</ph> was called, filtered by <ph id="ph3">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph>.</source>
          <target state="translated">获取由 <ph id="ph3">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> 筛选的 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的副本，该副本包含上次加载以来或调用 <ph id="ph2">&lt;see cref="M:System.Data.DataTable.AcceptChanges" /&gt;</ph> 以来进行的所有更改。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
          <source>A filtered copy of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that can have actions performed on it, and later be merged back in the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using <ph id="ph3">&lt;see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的筛选副本，可以对该副本执行操作，之后可以使用 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 将其合并回 <ph id="ph3">&lt;see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
          <source>If no rows of the desired <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> are found, the method returns <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">如果未找到所需 <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> 的行，则该方法返回 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.GetChanges%2A&gt;</ph> method is used to produce a second <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> object that contains only the changes introduced into the original.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.GetChanges%2A&gt;</ph>方法用于生成第二个<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>引入到原始的只包含的更改的对象。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
          <source>Use the <ph id="ph1">`rowStates`</ph> argument to specify the type of changes the new object should include.</source>
          <target state="translated">使用<ph id="ph1">`rowStates`</ph>自变量以指定新的对象应包含的更改的类型。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
          <source>Relationship constraints may cause unchanged parent rows to be included.</source>
          <target state="translated">关系约束可能会导致不变的父行要包含。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> instance.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)">
          <source>This method returns an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> instance containing the Web Services Description Language (WSDL) that describes the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> for Web Services.</source>
          <target state="translated">该方法返回一个包含 Web Services 描述语言 (WSDL) 的 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 实例，该语言描述了用于 Web 服务的 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetErrors">
          <source>Gets an array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects that contain errors.</source>
          <target state="translated">获取包含错误的 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 对象数组。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetErrors">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects that have errors.</source>
          <target state="translated">包含错误的 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 对象数组。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.GetErrors">
          <source>Returns the list of <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> objects that have <ph id="ph2">&lt;xref:System.Data.DataRow.RowError%2A&gt;</ph> set.</source>
          <target state="translated">返回具有 <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> 集的 <ph id="ph2">&lt;xref:System.Data.DataRow.RowError%2A&gt;</ph> 对象的列表。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.GetErrors">
          <source>For example, errors can occur when calling <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> with <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> set to <bpt id="p1">**</bpt>true<ept id="p1">**</ept>.</source>
          <target state="translated">例如，错误可能会导致在调用时<ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph>与<ph id="ph2">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph>设置为<bpt id="p1">**</bpt>true<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.GetErrors">
          <source>Do not invoke <ph id="ph1">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> on the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> until you resolve all errors and resubmit the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> for updating.</source>
          <target state="translated">不要对 <ph id="ph1">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> 调用 <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>，直到您解决所有错误并重新提交 <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> 以供更新。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.GetErrors">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.DataTable.GetErrors%2A&gt;</ph> method to return an array of <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objects that have errors.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Data.DataTable.GetErrors%2A&gt;</ph>方法返回的数组<ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>具有错误的对象。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object that holds the serialized data associated with the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> 对象，包含与 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 关联的序列化数据。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> object that contains the source and destination of the serialized stream associated with the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> 对象，包含与 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 关联的序列化流的源和目标。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates a serialization information object with the data needed to serialize the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">使用序列化 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 时所需的数据填充序列化信息对象。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;paramref name="info" /&gt;</ph> parameter is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="info" /&gt;</ph> 参数为 null 引用（在 Visual Basic 中为 <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetRowType">
          <source>Gets the row type.</source>
          <target state="translated">获取行类型。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetRowType">
          <source>Returns the type of the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">返回 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 的类型。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetSchema">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" /&gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅 <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.GetSchema">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> that describes the XML representation of the object that is produced by the <ph id="ph2">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /&gt;</ph> method and consumed by the <ph id="ph3">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /&gt;</ph> method.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph>，描述由 <ph id="ph2">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /&gt;</ph> 方法生成并由 <ph id="ph3">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /&gt;</ph> 方法使用的对象的 XML 表示形式。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.HasErrors">
          <source>Gets a value indicating whether there are errors in any of the rows in any of the tables of the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to which the table belongs.</source>
          <target state="translated">获取一个值，该值指示该表所属的 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 的任何表的任何行中是否有错误。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.HasErrors">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if errors exist; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果有错误，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.HasErrors">
          <source>As users work on a set of data contained in a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, you can mark each change with an error if the change causes some validation failure.</source>
          <target state="translated">当用户在数据中包含一组工作<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>，如果更改会导致某些验证失败，可以将标记每个更改与错误的更改。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.HasErrors">
          <source>You can mark an entire <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> with an error message using the <ph id="ph2">&lt;xref:System.Data.DataRow.RowError%2A&gt;</ph> property.</source>
          <target state="translated">你可以将标记整个<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>与错误消息使用<ph id="ph2">&lt;xref:System.Data.DataRow.RowError%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.HasErrors">
          <source>You can also set errors on each column of the row with the <ph id="ph1">&lt;xref:System.Data.DataRow.SetColumnError%2A&gt;</ph> method.</source>
          <target state="translated">此外可以在每个列具有的行上设置错误<ph id="ph1">&lt;xref:System.Data.DataRow.SetColumnError%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.HasErrors">
          <source>Before updating a data source with a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, it's recommended that you first invoke the <ph id="ph2">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method on the target <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">更新数据源之前， <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>，建议你首先调用<ph id="ph2">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph>方法在目标上的<ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.HasErrors">
          <source>The method results in a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> that contains only the changes made to the original.</source>
          <target state="translated">该方法将产生<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>包含仅与原始所做的更改。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.HasErrors">
          <source>Before sending the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> to the data source for updating, check the <ph id="ph2">&lt;xref:System.Data.DataTable.HasErrors%2A&gt;</ph> property of each table to see if any errors have been attached to the rows or columns in the rows.</source>
          <target state="translated">在发送之前<ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>到更新的数据源，请检查<ph id="ph2">&lt;xref:System.Data.DataTable.HasErrors%2A&gt;</ph>的每个表以查看任何错误是否已附加到的行或行中的列的属性。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.HasErrors">
          <source>After reconciling each error, clear the errors with the <ph id="ph1">&lt;xref:System.Data.DataRow.ClearErrors%2A&gt;</ph> method of the <ph id="ph2">`DataRow`</ph>.</source>
          <target state="translated">协调的每个错误之后, 清除的错误<ph id="ph1">&lt;xref:System.Data.DataRow.ClearErrors%2A&gt;</ph>方法<ph id="ph2">`DataRow`</ph>。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.HasErrors">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.DataTable.HasErrors%2A&gt;</ph> property to check if a table contains errors.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Data.DataTable.HasErrors%2A&gt;</ph>属性检查表是否包含错误。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> to be imported.</source>
          <target state="translated">要导入的 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
          <source>Copies a <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> into a <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, preserving any property settings, as well as original and current values.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 复制到 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 中，保留任何属性设置以及初始值和当前值。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
          <source>Calling <ph id="ph1">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> adds a row to the table using the existing table schema, but with default values for the row, and sets the <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> to <ph id="ph3">`Detached`</ph>.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph>将行添加到表使用现有的表架构，但使用的行，默认值并设置<ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph>到<ph id="ph3">`Detached`</ph>。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
          <source>Calling <ph id="ph1">&lt;xref:System.Data.DataTable.ImportRow%2A&gt;</ph> preserves the existing <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> along with other values in the row.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Data.DataTable.ImportRow%2A&gt;</ph>保留现有<ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph>以及行中的其他值。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
          <source>If the <ph id="ph1">`DataRow`</ph> that is passed as a parameter is in a detached state, it is ignored, and no exception is thrown.</source>
          <target state="translated">如果<ph id="ph1">`DataRow`</ph>传递当参数处于 detached 状态时，它将被忽略，但不会引发异常。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
          <source>The new row will be added to the end of the data table.</source>
          <target state="translated">新行将添加到数据表的末尾。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
          <source>If the new row violates a Constraint it won’t be added to the data table.</source>
          <target state="translated">如果新行与它不会添加到数据表约束冲突。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
          <source>You can get the index of the new row with as DataTable.Rows.Find and DataTable.Rows.IndexOf.</source>
          <target state="translated">你可以获取具有 DataTable.Rows.Find 以及 DataTable.Rows.IndexOf 的新行的索引。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
          <source>See <ph id="ph1">&lt;xref:System.Data.DataRowCollection&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.Rows%2A&gt;</ph> for more information.</source>
          <target state="translated">有关更多信息，请参见<ph id="ph1">&lt;xref:System.Data.DataRowCollection&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataTable.Rows%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="E:System.Data.DataTable.Initialized">
          <source>Occurs after the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> is initialized.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 后发生。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.Initialized">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Data.DataTable.IsInitialized%2A&gt;</ph>.</source>
          <target state="translated">有关详情，请参阅<ph id="ph1">&lt;xref:System.Data.DataTable.IsInitialized%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.IsInitialized">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> is initialized.</source>
          <target state="translated">获取一个值，该值指示是否已初始化 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.IsInitialized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate the component has completed initialization; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表明组件已完成初始化；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.IsInitialized">
          <source>Returns the status of the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> while it’s being constructed, for instance by Visual Studio.</source>
          <target state="translated">返回的状态<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>时它正在构造，例如 Visual Studio。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.IsInitialized">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.BeginInit%2A&gt;</ph> method sets it to <ph id="ph2">`false`</ph> and <ph id="ph3">&lt;xref:System.Data.DataTable.EndInit%2A&gt;</ph> method sets it to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.BeginInit%2A&gt;</ph>方法将其设置为<ph id="ph2">`false`</ph>和<ph id="ph3">&lt;xref:System.Data.DataTable.EndInit%2A&gt;</ph>方法将其设置为<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>Fills a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> with values from a data source using the supplied <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>.</source>
          <target state="translated">通过所提供的 <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>，用某个数据源的值填充 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>If the <ph id="ph1">&lt;see langword="DataTable" /&gt;</ph> already contains rows, the incoming data from the data source is merged with the existing rows.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="DataTable" /&gt;</ph> 已经包含行，则从数据源传入的数据与现有行合并。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">`Load`</ph> method can be used in several common scenarios, all centered around getting data from a specified data source and adding it to the current data container (in this case, a <ph id="ph2">`DataTable`</ph>).</source>
          <target state="translated"><ph id="ph1">`Load`</ph>方法可在几种常见情况，都围绕着从指定的数据源获取数据并将其添加到当前的数据容器 (在这种情况下， <ph id="ph2">`DataTable`</ph>)。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>These scenarios describe standard usage for a <ph id="ph1">`DataTable`</ph>, describing its update and merge behavior.</source>
          <target state="translated">以下方案说明的标准用法<ph id="ph1">`DataTable`</ph>、 描述其更新和合并行为。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>A <ph id="ph1">`DataTable`</ph> synchronizes or updates with a single primary data source.</source>
          <target state="translated">A<ph id="ph1">`DataTable`</ph>同步或更新与单个主数据源。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">`DataTable`</ph> tracks changes, allowing synchronization with the primary data source.</source>
          <target state="translated"><ph id="ph1">`DataTable`</ph>跟踪更改，以实现与主数据源同步。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>In addition, a <ph id="ph1">`DataTable`</ph> can accept incremental data from one or more secondary data sources.</source>
          <target state="translated">此外，<ph id="ph1">`DataTable`</ph>可以接受来自一个或多个辅助数据源的增量数据。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">`DataTable`</ph> isn't responsible for tracking changes in order to allow synchronization with the secondary data source.</source>
          <target state="translated"><ph id="ph1">`DataTable`</ph>不负责跟踪更改，以便允许与辅助数据源同步。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Given these two hypothetical data sources, a user is likely to require one of the following behaviors:</source>
          <target state="translated">提供这些两个假设数据源，用户很可能需要的以下行为之一：</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Initialize <ph id="ph1">`DataTable`</ph> from a primary data source.</source>
          <target state="translated">初始化<ph id="ph1">`DataTable`</ph>从主数据源。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>In this scenario, the user wants to initialize an empty <ph id="ph1">`DataTable`</ph> with values from the primary data source.</source>
          <target state="translated">在此方案中，用户想要初始化一个空<ph id="ph1">`DataTable`</ph>与主数据源中的值。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Later the user intends to propagate changes back to the primary data source.</source>
          <target state="translated">更高版本，用户想要将更改传播回主数据源。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Preserve changes and re-synchronize from the primary data source.</source>
          <target state="translated">保留更改，并从主数据源重新同步。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>In this scenario, the user wants to take the <ph id="ph1">`DataTable`</ph> filled in the previous scenario and perform an incremental synchronization with the primary data source, preserving modifications made in the <ph id="ph2">`DataTable`</ph>.</source>
          <target state="translated">在此方案中，用户想要采用<ph id="ph1">`DataTable`</ph>填充在前面的方案和执行增量同步使用主数据源，保留中所做修改<ph id="ph2">`DataTable`</ph>。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Incremental data feed from secondary data sources.</source>
          <target state="translated">增量数据馈送从辅助数据源。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>In this scenario, the user wants to merge changes from one or more secondary data sources, and propagate those changes back to the primary data source.</source>
          <target state="translated">在此方案中，用户想从一个或多个辅助数据源的更改，并将合并这些将更改传播回主数据源。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">`Load`</ph> method makes all these scenarios possible.</source>
          <target state="translated"><ph id="ph1">`Load`</ph>方法使所有这些方案成为可能。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>All but one of the overloads for this method allows you to specify a load option parameter, indicating how rows already in a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> combine with rows being loaded.</source>
          <target state="translated">所有但一个作为参数的重载此方法允许您指定的负载选项参数，指示如何中的现有行<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>结合正在加载的行。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>(The overload that doesn't allow you to specify the behavior uses the default load option.) The following table describes the three load options provided by the <ph id="ph1">&lt;xref:System.Data.LoadOption&gt;</ph> enumeration.</source>
          <target state="translated">（不允许你指定的行为的重载使用默认加载选项。）下表描述了由提供的三个负载选项<ph id="ph1">&lt;xref:System.Data.LoadOption&gt;</ph>枚举。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>In each case, the description indicates the behavior when the primary key of a row in the incoming data matches the primary key of an existing row.</source>
          <target state="translated">每种情况下，说明该值传入数据中的行的主键值匹配的现有行的主键时，指示的行为。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Load Option</source>
          <target state="translated">加载选项</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source><ph id="ph1">`PreserveChanges`</ph> (default)</source>
          <target state="translated"><ph id="ph1">`PreserveChanges`</ph>（默认值）</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Updates the original version of the row with the value of the incoming row.</source>
          <target state="translated">使用传入的行的值更新行的原始版本。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Updates the current and original versions of the row with the value of the incoming row.</source>
          <target state="translated">使用传入的行的值更新行的当前和原始版本。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Updates the current version of the row with the value of the incoming row.</source>
          <target state="translated">使用传入的行的值更新行的当前版本。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>In general, the <ph id="ph1">`PreserveChanges`</ph> and <ph id="ph2">`OverwriteChanges`</ph> options are intended for scenarios in which the user needs to synchronize the <ph id="ph3">`DataSet`</ph> and its changes with the primary data source.</source>
          <target state="translated">一般情况下，<ph id="ph1">`PreserveChanges`</ph>和<ph id="ph2">`OverwriteChanges`</ph>选项适用于用户需要将同步的情形<ph id="ph3">`DataSet`</ph>及其更改与主数据源。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">`Upsert`</ph> option facilitates aggregating changes from one or more secondary data sources.</source>
          <target state="translated"><ph id="ph1">`Upsert`</ph>选项可帮助聚合来自一个或多个辅助数据源的更改。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The following example demonstrates several of the issues involved with calling the <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method.</source>
          <target state="translated">下面的示例演示了一些调用所涉及的问题<ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>First, the example focuses on schema issues, including inferring a schema from the loaded <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>, and then handling incompatible schemas, and schemas with missing or additional columns.</source>
          <target state="translated">首先，该示例侧重于架构问题，包括从加载推断架构<ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>，然后处理不兼容的架构和架构具有列缺失或其他列。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The example then focuses on data issues, including handling the various loading options.</source>
          <target state="translated">然后，该示例着重于数据问题，包括处理各种的加载选项。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>This example shows how to use one of the overloaded versions of <ph id="ph1">`Load`</ph>.</source>
          <target state="translated">此示例演示如何使用的重载版本之一<ph id="ph1">`Load`</ph>。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>For other examples that might be available, see the individual overload topics.</source>
          <target state="translated">有关可能会提供其他示例，请参阅各个重载主题。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> that provides a result set.</source>
          <target state="translated">提供结果集的 <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Fills a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> with values from a data source using the supplied <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>.</source>
          <target state="translated">通过所提供的 <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>，用某个数据源的值填充 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> already contains rows, the incoming data from the data source is merged with the existing rows.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 已经包含行，则从数据源传入的数据与现有行合并。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method consumes the first result set from the loaded <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>, and after successful completion, sets the reader's position to the next result set, if any.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph>方法使用的第一个结果集加载<ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>，并成功完成后，将读取器的位置设置为下一个结果集，如果有的话。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>When converting data, the <ph id="ph1">`Load`</ph> method uses the same conversion rules as the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">转换数据时，<ph id="ph1">`Load`</ph>方法使用相同的转换规则<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method must take into account three specific issues when loading the data from an <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> instance: schema, data, and event operations.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph>方法必须考虑三个特定问题时加载的数据从<ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>实例： 架构、 数据和事件的操作。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>When working with the schema, the <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method may encounter conditions as described in the following table.</source>
          <target state="translated">使用架构时,<ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph>方法可能会遇到条件下表中所述。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The schema operations take place for all imported result sets, even those containing no data.</source>
          <target state="translated">架构操作发生的所有导入的结果集，甚至那些不包含任何数据。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Condition</source>
          <target state="translated">条件</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Behavior</source>
          <target state="translated">行为</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> has no schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>没有架构。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method infers the schema based on the result set from the imported <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph>方法推理基于来自导入的结果集架构<ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> has a schema, but it is incompatible with the loaded schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>拥有的架构，但它与加载的架构不兼容。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method throws an exception corresponding to the particular error that occurs when attempting to load data into the incompatible schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph>方法引发异常对应于试图将数据加载到不兼容的架构时发生的特定错误。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The schemas are compatible, but the loaded result set schema contains columns that do not exist in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">架构是兼容，但加载的结果集架构包含中不存在的列<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method adds the extra columns to <ph id="ph2">`DataTable`</ph>'s schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph>方法将添加的额外列<ph id="ph2">`DataTable`</ph>的架构。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The method throws an exception if corresponding columns in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and the loaded result set are not value compatible.</source>
          <target state="translated">该方法将引发异常，如果对应中的列<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>和加载的结果集不兼容的值。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The method also retrieves constraint information from the result set for all added columns.</source>
          <target state="translated">该方法还会从结果集中为所有添加的列检索约束信息。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Except for the case of Primary Key constraint, this constraint information is used only if the current <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> does not contain any columns at the start of the load operation.</source>
          <target state="translated">仅当除外 Primary Key 约束的情况下，使用此约束信息当前<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>不包含在启动时加载操作的任何列。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The schemas are compatible, but the loaded result set schema contains fewer columns than does the <ph id="ph1">`DataTable`</ph>.</source>
          <target state="translated">架构是兼容，但加载的结果集架构包含较少的列比<ph id="ph1">`DataTable`</ph>。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>If a missing column has a default value defined or the column's data type is nullable, the <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method allows the rows to be added, substituting the default or <ph id="ph2">`null`</ph> value for the missing column.</source>
          <target state="translated">如果缺少列已定义的默认值或列的数据类型可以为 null，<ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph>方法允许要添加的行替换为默认值或<ph id="ph2">`null`</ph>缺少的列的值。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>If no default value or <ph id="ph1">`null`</ph> can be used, then the <ph id="ph2">`Load`</ph> method throws an exception.</source>
          <target state="translated">如果没有默认值或<ph id="ph1">`null`</ph>可以使用，则<ph id="ph2">`Load`</ph>方法引发异常。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>If no specific default value has been supplied, the <ph id="ph1">`Load`</ph> method uses the <ph id="ph2">`null`</ph> value as the implied default value.</source>
          <target state="translated">如果已不提供任何特定的默认值，<ph id="ph1">`Load`</ph>方法使用<ph id="ph2">`null`</ph>默示的默认值的值。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Before considering the behavior of the <ph id="ph1">`Load`</ph> method in terms of data operations, consider that each row within a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> maintains both the current value and the original value for each column.</source>
          <target state="translated">在考虑的行为之前<ph id="ph1">`Load`</ph>方法根据数据操作，请考虑，每个行内<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>维护的当前值和每个列的原始值。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>These values may be equivalent, or may be different if the data in the row has been changed since filling the <ph id="ph1">`DataTable`</ph>.</source>
          <target state="translated">这些值可能相同，或如果后填充发生了更改的行中的数据可能不同<ph id="ph1">`DataTable`</ph>。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>For more information, see <bpt id="p1">[</bpt>Row States and Row Versions<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>行状态和行版本<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)</ept>。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>This version of the <ph id="ph1">`Load`</ph> method attempts to preserve the current values in each row, leaving the original value intact.</source>
          <target state="translated">此版本的<ph id="ph1">`Load`</ph>方法会尝试保留的每一行，保持不变的原始值中的当前值。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>(If you want finer control over the behavior of incoming data, see <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A?displayProperty=nameWithType&gt;</ph>.) If the existing row and the incoming row contain corresponding primary key values, the row is processed using its current row state value, otherwise it's treated as a new row.</source>
          <target state="translated">(如果你想更好地控制传入数据的行为，请参阅<ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A?displayProperty=nameWithType&gt;</ph>。)如果现有行和传入行将包含相应的主键值，则使用其当前的行状态值处理行，否则它将被视为新行。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>In terms of event operations, the <ph id="ph1">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph> event occurs before each row is changed, and the <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanged&gt;</ph> event occurs after each row has been changed.</source>
          <target state="translated">在事件操作方面<ph id="ph1">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph>事件发生之前更改每个行，与<ph id="ph2">&lt;xref:System.Data.DataTable.RowChanged&gt;</ph>事件发生在每个行已更改之后。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>In each case, the <ph id="ph1">&lt;xref:System.Data.DataRowChangeEventArgs.Action%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.DataRowChangeEventArgs&gt;</ph> instance passed to the event handler contains information about the particular action associated with the event.</source>
          <target state="translated">在每个情况下，<ph id="ph1">&lt;xref:System.Data.DataRowChangeEventArgs.Action%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.Data.DataRowChangeEventArgs&gt;</ph>传递给事件处理程序的实例包含有关与事件关联的特定操作的信息。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>This action value depends on the state of the row before the load operation.</source>
          <target state="translated">此操作的值取决于行之前加载操作的状态。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>In each case, both events occur, and the action is the same for each.</source>
          <target state="translated">在每个情况下，这两个事件发生，且操作为每个相同。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The action may be applied to either the current or original version of each row, or both, depending on the current row state.</source>
          <target state="translated">操作可以应用于当前或原始版本的每一行，或两者，具体取决于当前的行状态。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The following table displays behavior for the <ph id="ph1">`Load`</ph> method.</source>
          <target state="translated">下表显示了行为<ph id="ph1">`Load`</ph>方法。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The final row (labeled "(Not present)") describes the behavior for incoming rows that don't match any existing row.</source>
          <target state="translated">最终 （标记为"（不提供）"） 的行所说明的行为传入不匹配任何现有行的行。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Each cell in this table describes the current and original value for a field within a row, along with the <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> for the value after the <ph id="ph2">`Load`</ph> method has completed.</source>
          <target state="translated">此表中的每个单元格连同描述行中的字段的当前和原始值<ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph>后的值为<ph id="ph2">`Load`</ph>方法已完成。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>In this case, the method doesn't allow you to indicate the load option, and uses the default, <ph id="ph1">`PreserveChanges`</ph>.</source>
          <target state="translated">在这种情况下，该方法不允许你以指示加载选项，并使用默认值， <ph id="ph1">`PreserveChanges`</ph>。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Existing DataRowState</source>
          <target state="translated">现有 DataRowState</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Values after <ph id="ph1">`Load`</ph> method, and event action</source>
          <target state="translated">之后的值<ph id="ph1">`Load`</ph>方法和事件操作</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Added</source>
          <target state="translated">已添加</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Current = <ph id="ph1">\&lt;</ph>Existing&gt;</source>
          <target state="translated">当前 =<ph id="ph1">\&lt;</ph>现有 &gt;</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">原始 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>State = <ph id="ph1">\&lt;</ph>Modified&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>修改 &gt;</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>RowAction = ChangeOriginal</source>
          <target state="translated">行操作 = 更改原始值</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Modified</source>
          <target state="translated">修改时间</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Current = <ph id="ph1">\&lt;</ph>Existing&gt;</source>
          <target state="translated">当前 =<ph id="ph1">\&lt;</ph>现有 &gt;</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">原始 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>State = <ph id="ph1">\&lt;</ph>Modified&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>修改 &gt;</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>RowAction = ChangeOriginal</source>
          <target state="translated">行操作 = 更改原始值</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Deleted</source>
          <target state="translated">Deleted</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Current = <ph id="ph1">\&lt;</ph>Not available&gt;</source>
          <target state="translated">当前 =<ph id="ph1">\&lt;</ph>不可用 &gt;</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">原始 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>State = <ph id="ph1">\&lt;</ph>Deleted&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>删除 &gt;</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>RowAction = ChangeOriginal</source>
          <target state="translated">行操作 = 更改原始值</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Unchanged</source>
          <target state="translated">Unchanged</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">当前 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">原始 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>不变 &gt;</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">行操作 = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>(Not present)</source>
          <target state="translated">（不提供）</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">当前 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">原始 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>不变 &gt;</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">行操作 = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Values in a <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> can be constrained through use of properties such as <ph id="ph2">&lt;xref:System.Data.DataColumn.ReadOnly%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>.</source>
          <target state="translated">中的值<ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph>可以如约束通过使用属性<ph id="ph2">&lt;xref:System.Data.DataColumn.ReadOnly%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The <ph id="ph1">`Load`</ph> method handles such columns in a manner that is consistent with the behavior defined by the column's properties.</source>
          <target state="translated"><ph id="ph1">`Load`</ph>方法可处理此类列与列的属性定义的行为一致的方式。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The read only constraint on a <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> is applicable only for changes that occur in memory.</source>
          <target state="translated">上的只读的约束<ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph>仅适用于在内存中发生更改。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The <ph id="ph1">`Load`</ph> method's overwrites the read-only column values, if needed.</source>
          <target state="translated"><ph id="ph1">`Load`</ph>方法的覆盖的只读的列的值，如果需要。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>To determine which version of the primary key field to use for comparing the current row with an incoming row, the <ph id="ph1">`Load`</ph> method uses the original version of the primary key value within a row, if it exists.</source>
          <target state="translated">若要确定哪个版本的用于比较的传入行具有的当前行的主键字段<ph id="ph1">`Load`</ph>方法使用行中的主键值的原始版本，如果它存在。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>Otherwise, the <ph id="ph1">`Load`</ph> method uses the current version of the primary key field.</source>
          <target state="translated">否则为<ph id="ph1">`Load`</ph>方法使用当前版本的主键字段。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The following example demonstrates several of the issues involved with calling the <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method.</source>
          <target state="translated">下面的示例演示了一些调用所涉及的问题<ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>First, the example focuses on schema issues, including inferring a schema from the loaded <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>, and then handling incompatible schemas, and schemas with missing or additional columns.</source>
          <target state="translated">首先，该示例侧重于架构问题，包括从加载推断架构<ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>，然后处理不兼容的架构和架构具有列缺失或其他列。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader)">
          <source>The example then calls the <ph id="ph1">`Load`</ph> method, displaying the data both before and after the load operation.</source>
          <target state="translated">该示例然后调用<ph id="ph1">`Load`</ph>方法，显示的数据之前和之后加载操作。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> that provides one or more result sets.</source>
          <target state="translated">提供一个或多个结果集的 <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>A value from the <ph id="ph1">&lt;see cref="T:System.Data.LoadOption" /&gt;</ph> enumeration that indicates how rows already in the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> are combined with incoming rows that share the same primary key.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.LoadOption" /&gt;</ph> 枚举的值，指示 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 中已有的行如何与共享相同主键的传入行合并。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Fills a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> with values from a data source using the supplied <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>.</source>
          <target state="translated">通过所提供的 <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>，用某个数据源的值填充 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>If the <ph id="ph1">&lt;see langword="DataTable" /&gt;</ph> already contains rows, the incoming data from the data source is merged with the existing rows according to the value of the <ph id="ph2">&lt;paramref name="loadOption" /&gt;</ph> parameter.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see langword="DataTable" /&gt;</ph> 已包含行，则从数据源传入的数据根据 <ph id="ph2">&lt;paramref name="loadOption" /&gt;</ph> 参数的值与现有行合并。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The <ph id="ph1">`Load`</ph> method consumes the first result set from the loaded <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>, and after successful completion, sets the reader's position to the next result set, if any.</source>
          <target state="translated"><ph id="ph1">`Load`</ph>方法使用的第一个结果集加载<ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>，并成功完成后，将读取器的位置设置为下一个结果集，如果有的话。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>When converting data, the <ph id="ph1">`Load`</ph> method uses the same conversion rules as the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method.</source>
          <target state="translated">转换数据时，<ph id="ph1">`Load`</ph>方法使用相同的转换规则<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The <ph id="ph1">`Load`</ph> method must take into account three specific issues when loading the data from an <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> instance: schema, data, and event operations.</source>
          <target state="translated"><ph id="ph1">`Load`</ph>方法必须考虑三个特定问题时加载的数据从<ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>实例： 架构、 数据和事件的操作。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>When working with the schema, the <ph id="ph1">`Load`</ph> method may encounter conditions as described in the following table.</source>
          <target state="translated">使用架构时,<ph id="ph1">`Load`</ph>方法可能会遇到条件下表中所述。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The schema operations take place for all imported result sets, even those containing no data.</source>
          <target state="translated">架构操作发生的所有导入的结果集，甚至那些不包含任何数据。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Condition</source>
          <target state="translated">条件</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Behavior</source>
          <target state="translated">行为</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> has no schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>没有架构。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The <ph id="ph1">`Load`</ph> method infers the schema based on the result set from the imported <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Load`</ph>方法推理基于来自导入的结果集架构<ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> has a schema, but it is incompatible with the loaded schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>拥有的架构，但它与加载的架构不兼容。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The <ph id="ph1">`Load`</ph> method throws an exception corresponding to the particular error that occurs when attempting to load data into the incompatible schema.</source>
          <target state="translated"><ph id="ph1">`Load`</ph>方法引发异常对应于试图将数据加载到不兼容的架构时发生的特定错误。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The schemas are compatible, but the loaded result set schema contains columns that don't exist in the <ph id="ph1">`DataTable`</ph>.</source>
          <target state="translated">架构是兼容，但加载的结果集架构包含在中不存在的列<ph id="ph1">`DataTable`</ph>。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The <ph id="ph1">`Load`</ph> method adds the extra columns to <ph id="ph2">`DataTable`</ph>’s schema.</source>
          <target state="translated"><ph id="ph1">`Load`</ph>方法将添加的额外列<ph id="ph2">`DataTable`</ph>的架构。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The method throws an exception if corresponding columns in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and the loaded result set are not value compatible.</source>
          <target state="translated">该方法将引发异常，如果对应中的列<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>和加载的结果集不兼容的值。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The method also retrieves constraint information from the result set for all added columns.</source>
          <target state="translated">该方法还会从结果集中为所有添加的列检索约束信息。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Except for the case of Primary Key constraint, this constraint information is used only if the current <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> does not contain any columns at the start of the load operation.</source>
          <target state="translated">仅当除外 Primary Key 约束的情况下，使用此约束信息当前<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>不包含在启动时加载操作的任何列。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The schemas are compatible, but the loaded result set schema contains fewer columns than does the <ph id="ph1">`DataTable`</ph>.</source>
          <target state="translated">架构是兼容，但加载的结果集架构包含较少的列比<ph id="ph1">`DataTable`</ph>。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>If a missing column has a default value defined or the column's data type is nullable, the <ph id="ph1">`Load`</ph> method allows the rows to be added, substituting the default or null value for the missing column.</source>
          <target state="translated">如果缺少列已定义的默认值或列的数据类型可以为 null，<ph id="ph1">`Load`</ph>方法允许要添加的行替换缺少的列的默认值或 null 值。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>If no default value or null can be used, then the <ph id="ph1">`Load`</ph> method throws an exception.</source>
          <target state="translated">如果可以使用任何默认值或 null，则<ph id="ph1">`Load`</ph>方法引发异常。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>If no specific default value has been supplied, the <ph id="ph1">`Load`</ph> method uses the null value as the implied default value.</source>
          <target state="translated">如果已不提供任何特定的默认值，<ph id="ph1">`Load`</ph>方法使用隐含的默认值为 null 的值。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Before considering the behavior of the <ph id="ph1">`Load`</ph> method in terms of data operations, consider that each row within a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> maintains both the current value and the original value for each column.</source>
          <target state="translated">在考虑的行为之前<ph id="ph1">`Load`</ph>方法根据数据操作，请考虑，每个行内<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>维护的当前值和每个列的原始值。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>These values may be equivalent, or may be different if the data in the row has been changed since filling the <ph id="ph1">`DataTable`</ph>.</source>
          <target state="translated">这些值可能相同，或如果后填充发生了更改的行中的数据可能不同<ph id="ph1">`DataTable`</ph>。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>See <bpt id="p1">[</bpt>Row States and Row Versions<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)</ept> for more information.</source>
          <target state="translated">请参阅<bpt id="p1">[</bpt>行状态和行版本<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)</ept>有关详细信息。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>In this method call, the specified <ph id="ph1">&lt;xref:System.Data.LoadOption&gt;</ph> parameter influences the processing of the incoming data.</source>
          <target state="translated">在此方法调用中，指定<ph id="ph1">&lt;xref:System.Data.LoadOption&gt;</ph>参数影响的传入数据的处理。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>How should the Load method handle loading rows that have the same primary key as existing rows?</source>
          <target state="translated">Load 方法应如何处理具有相同的主键作为现有行的加载行？</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Should it modify current values, original values, or both?</source>
          <target state="translated">它应修改当前值和 / 或原始值？</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>These issues, and more, are controlled by the <ph id="ph1">`loadOption`</ph> parameter.</source>
          <target state="translated">这些问题，和的详细信息，由控制<ph id="ph1">`loadOption`</ph>参数。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>If the existing row and the incoming row contain corresponding primary key values, the row is processed using its current row state value, otherwise it's treated as a new row.</source>
          <target state="translated">如果现有行和传入行将包含相应的主键值，则使用其当前的行状态值处理行，否则它将被视为新行。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>In terms of event operations, the <ph id="ph1">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph> event occurs before each row is changed, and the <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanged&gt;</ph> event occurs after each row has been changed.</source>
          <target state="translated">在事件操作方面<ph id="ph1">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph>事件发生之前更改每个行，与<ph id="ph2">&lt;xref:System.Data.DataTable.RowChanged&gt;</ph>事件发生在每个行已更改之后。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>In each case, the <ph id="ph1">&lt;xref:System.Data.DataRowChangeEventArgs.Action%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.DataRowChangeEventArgs&gt;</ph> instance passed to the event handler contains information about the particular action associated with the event.</source>
          <target state="translated">在每个情况下，<ph id="ph1">&lt;xref:System.Data.DataRowChangeEventArgs.Action%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.Data.DataRowChangeEventArgs&gt;</ph>传递给事件处理程序的实例包含有关与事件关联的特定操作的信息。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>This action value varies, depending on the state of the row before the load operation.</source>
          <target state="translated">此操作值都不同，具体取决于行之前加载操作的状态。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>In each case, both events occur, and the action is the same for each.</source>
          <target state="translated">在每个情况下，这两个事件发生，且操作为每个相同。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The action may be applied to either the current or original version of each row, or both, depending on the current row state.</source>
          <target state="translated">操作可以应用于当前或原始版本的每一行，或两者，具体取决于当前的行状态。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The following table displays behavior for the Load method when called with each of the <ph id="ph1">`LoadOption`</ph> values, and also shows how the values interact with the row state for the row being loaded.</source>
          <target state="translated">下表显示负载方法调用每个时的行为<ph id="ph1">`LoadOption`</ph>值，并显示如何与正在加载的行的行状态进行交互的值。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The final row (labeled "(Not present)") describes the behavior for incoming rows that don't match any existing row.</source>
          <target state="translated">最终 （标记为"（不提供）"） 的行所说明的行为传入不匹配任何现有行的行。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Each cell in this table describes the current and original value for a field within a row, along with the <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> for the value after the <ph id="ph2">`Load`</ph> method has completed.</source>
          <target state="translated">此表中的每个单元格连同描述行中的字段的当前和原始值<ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph>后的值为<ph id="ph2">`Load`</ph>方法已完成。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Existing DataRowState</source>
          <target state="translated">现有 DataRowState</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Upsert</source>
          <target state="translated">Upsert</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>OverwriteChanges</source>
          <target state="translated">OverwriteChanges</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>PreserveChanges (Default behavior)</source>
          <target state="translated">PreserveChanges （默认行为）</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Added</source>
          <target state="translated">已添加</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">当前 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = -<ph id="ph1">\&lt;</ph>Not available&gt;</source>
          <target state="translated">原始 =-<ph id="ph1">\&lt;</ph>不可用 &gt;</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Added&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>添加 &gt;</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = Change</source>
          <target state="translated">行操作 = 更改</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">当前 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">原始 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>不变 &gt;</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">行操作 = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Existing&gt;</source>
          <target state="translated">当前 =<ph id="ph1">\&lt;</ph>现有 &gt;</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">原始 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Modified&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>修改 &gt;</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = ChangeOriginal</source>
          <target state="translated">行操作 = 更改原始值</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Modified</source>
          <target state="translated">修改时间</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">当前 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Existing&gt;</source>
          <target state="translated">原始 =<ph id="ph1">\&lt;</ph>现有 &gt;</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Modified&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>修改 &gt;</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = Change</source>
          <target state="translated">行操作 = 更改</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">当前 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">原始 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>不变 &gt;</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">行操作 = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Existing&gt;</source>
          <target state="translated">当前 =<ph id="ph1">\&lt;</ph>现有 &gt;</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">原始 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Modified&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>修改 &gt;</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction =ChangeOriginal</source>
          <target state="translated">行操作 = 更改原始值</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>eleted</source>
          <target state="translated">eleted</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>(Load does not affect deleted rows)</source>
          <target state="translated">（负载进行不影响删除的行）</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = ---</source>
          <target state="translated">当前 =--</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Existing&gt;</source>
          <target state="translated">原始 =<ph id="ph1">\&lt;</ph>现有 &gt;</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Deleted&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>删除 &gt;</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>(New row is added with the following characteristics)</source>
          <target state="translated">（新行添加具有下列特性）</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">当前 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Not available&gt;</source>
          <target state="translated">原始 =<ph id="ph1">\&lt;</ph>不可用 &gt;</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Added&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>添加 &gt;</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = Add</source>
          <target state="translated">行操作 = 添加</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Undo delete and</source>
          <target state="translated">撤消删除和</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">当前 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">原始 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>不变 &gt;</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">行操作 = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Not available&gt;</source>
          <target state="translated">当前 =<ph id="ph1">\&lt;</ph>不可用 &gt;</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">原始 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Deleted&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>删除 &gt;</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = ChangeOriginal</source>
          <target state="translated">行操作 = 更改原始值</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Unchanged</source>
          <target state="translated">Unchanged</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">当前 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Existing&gt;</source>
          <target state="translated">原始 =<ph id="ph1">\&lt;</ph>现有 &gt;</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>If new value is the same as the existing value then</source>
          <target state="translated">如果新值为与现有的值相同，则</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>不变 &gt;</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = Nothing</source>
          <target state="translated">行操作 = Nothing</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Else</source>
          <target state="translated">Else</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Modified&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>修改 &gt;</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = Change</source>
          <target state="translated">行操作 = 更改</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">当前 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">原始 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>不变 &gt;</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">行操作 = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">当前 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">原始 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>不变 &gt;</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">行操作 = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Not present)</source>
          <target state="translated">不存在）</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">当前 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Not available&gt;</source>
          <target state="translated">原始 =<ph id="ph1">\&lt;</ph>不可用 &gt;</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Added&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>添加 &gt;</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = Add</source>
          <target state="translated">行操作 = 添加</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">当前 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">原始 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>不变 &gt;</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">行操作 = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">当前 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">原始 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>不变 &gt;</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">行操作 = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Values in a <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> can be constrained through use of properties such as <ph id="ph2">&lt;xref:System.Data.DataColumn.ReadOnly%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>.</source>
          <target state="translated">中的值<ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph>可以如约束通过使用属性<ph id="ph2">&lt;xref:System.Data.DataColumn.ReadOnly%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The <ph id="ph1">`Load`</ph> method handles such columns in a manner that is consistent with the behavior defined by the column's properties.</source>
          <target state="translated"><ph id="ph1">`Load`</ph>方法可处理此类列与列的属性定义的行为一致的方式。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The read only constraint on a <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> is applicable only for changes that occur in memory.</source>
          <target state="translated">上的只读的约束<ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph>仅适用于在内存中发生更改。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The <ph id="ph1">`Load`</ph> method's overwrites the read-only column values, if needed.</source>
          <target state="translated"><ph id="ph1">`Load`</ph>方法的覆盖的只读的列的值，如果需要。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>If you specify the OverwriteChanges or PreserveChanges options when calling the <ph id="ph1">`Load`</ph> method, then the assumption is made that the incoming data is coming from the <ph id="ph2">`DataTable`</ph>'s primary data source, and the DataTable tracks changes and can propagate the changes back to the data source.</source>
          <target state="translated">在调用时指定的 OverwriteChanges 或 PreserveChanges 选项<ph id="ph1">`Load`</ph>来自传入的数据进行的方法，则假定<ph id="ph2">`DataTable`</ph>的主数据源和数据表跟踪更改，可以将传播所做的更改回数据源。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>If you select the Upsert option, it is assumed that the data is coming from one of a secondary data source, such as data provided by a middle-tier component, perhaps altered by a user.</source>
          <target state="translated">如果选择 Upsert 选项，则假定数据来自其中一个的辅助数据源，如由一个中间层组件，可能是由用户更改提供的数据。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>In this case, the assumption is that the intent is to aggregate data from one or more data sources in the <ph id="ph1">`DataTable`</ph>, and then perhaps propagate the data back to the primary data source.</source>
          <target state="translated">在这种情况下，假设条件是从一个或多个数据源中的意图是对数据进行聚合<ph id="ph1">`DataTable`</ph>，然后可能将传播回主数据源的数据。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The <ph id="ph1">&lt;xref:System.Data.LoadOption&gt;</ph> parameter is used for determining the specific version of the row that is to be used for primary key comparison.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.LoadOption&gt;</ph>参数用于确定要使用主键比较行的特定版本。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The table below provides the details.</source>
          <target state="translated">下表提供了详细信息。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Load option</source>
          <target state="translated">加载选项</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>DataRow version used for primary key comparison</source>
          <target state="translated">使用主键比较 DataRow 版本</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original version, if it exists, otherwise Current version</source>
          <target state="translated">原始版本，如果它存在，否则为当前版本</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Original version, if it exists, otherwise Current version</source>
          <target state="translated">原始版本，如果它存在，否则为当前版本</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>Current version, if it exists, otherwise Original version</source>
          <target state="translated">当前版本，如果它存在，否则为原始版本</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The following example demonstrates several of the issues involved with calling the <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method.</source>
          <target state="translated">下面的示例演示了一些调用所涉及的问题<ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>First, the example focuses on schema issues, including inferring a schema from the loaded <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>, and then handling incompatible schemas, and schemas with missing or additional columns.</source>
          <target state="translated">首先，该示例侧重于架构问题，包括从加载推断架构<ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph>，然后处理不兼容的架构和架构具有列缺失或其他列。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)">
          <source>The example then focuses on data issues, including handling the various loading options.</source>
          <target state="translated">然后，该示例着重于数据问题，包括处理各种的加载选项。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> that provides a result set.</source>
          <target state="translated">提供结果集的 <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>A value from the <ph id="ph1">&lt;see cref="T:System.Data.LoadOption" /&gt;</ph> enumeration that indicates how rows already in the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> are combined with incoming rows that share the same primary key.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.LoadOption" /&gt;</ph> 枚举的值，指示 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 中已有的行如何与共享相同主键的传入行合并。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.FillErrorEventHandler" /&gt;</ph> delegate to call when an error occurs while loading data.</source>
          <target state="translated">加载数据时出现错误的情况下要调用的 <ph id="ph1">&lt;see cref="T:System.Data.FillErrorEventHandler" /&gt;</ph> 委托。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Fills a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> with values from a data source using the supplied <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> using an error-handling delegate.</source>
          <target state="translated">通过所提供的使用错误处理委托的 <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>，用某个数据源中的值填充 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">`Load`</ph> method consumes the first result set from the loaded <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>, and after successful completion, sets the reader's position to the next result set, if any.</source>
          <target state="translated"><ph id="ph1">`Load`</ph>方法使用的第一个结果集加载<ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>，并成功完成后，将读取器的位置设置为下一个结果集，如果有的话。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>When converting data, the <ph id="ph1">`Load`</ph> method uses the same conversion rules as the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">转换数据时，<ph id="ph1">`Load`</ph>方法使用相同的转换规则<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">`Load`</ph> method must take into account three specific issues when loading the data from an <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph> instance: schema, data, and event operations.</source>
          <target state="translated"><ph id="ph1">`Load`</ph>方法必须考虑三个特定问题时加载的数据从<ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>实例： 架构、 数据和事件的操作。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>When working with the schema, the <ph id="ph1">`Load`</ph> method may encounter conditions as described in the following table.</source>
          <target state="translated">使用架构时,<ph id="ph1">`Load`</ph>方法可能会遇到条件下表中所述。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The schema operations take place for all imported result sets, even those containing no data.</source>
          <target state="translated">架构操作发生的所有导入的结果集，甚至那些不包含任何数据。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Condition</source>
          <target state="translated">条件</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Behavior</source>
          <target state="translated">行为</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> has no schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>没有架构。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">`Load`</ph> method infers the schema based on the result set from the imported <ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Load`</ph>方法推理基于来自导入的结果集架构<ph id="ph2">&lt;xref:System.Data.IDataReader&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> has a schema, but it is incompatible with the loaded schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>拥有的架构，但它与加载的架构不兼容。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">`Load`</ph> method throws an exception corresponding to the particular error that occurs when attempting to load data into the incompatible schema.</source>
          <target state="translated"><ph id="ph1">`Load`</ph>方法引发异常对应于试图将数据加载到不兼容的架构时发生的特定错误。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The schemas are compatible, but the loaded result set schema contains columns that don't exist in the <ph id="ph1">`DataTable`</ph>.</source>
          <target state="translated">架构是兼容，但加载的结果集架构包含在中不存在的列<ph id="ph1">`DataTable`</ph>。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">`Load`</ph> method adds the extra column(s) to <ph id="ph2">`DataTable`</ph>’s schema.</source>
          <target state="translated"><ph id="ph1">`Load`</ph>方法将添加到的额外列<ph id="ph2">`DataTable`</ph>的架构。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The method throws an exception if corresponding columns in the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and the loaded result set are not value compatible.</source>
          <target state="translated">该方法将引发异常，如果对应中的列<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>和加载的结果集不兼容的值。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The method also retrieves constraint information from the result set for all added columns.</source>
          <target state="translated">该方法还会从结果集中为所有添加的列检索约束信息。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Except for the case of Primary Key constraint, this constraint information is used only if the current <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> does not contain any columns at the start of the load operation.</source>
          <target state="translated">仅当除外 Primary Key 约束的情况下，使用此约束信息当前<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>不包含在启动时加载操作的任何列。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The schemas are compatible, but the loaded result set schema contains fewer columns than does the <ph id="ph1">`DataTable`</ph>.</source>
          <target state="translated">架构是兼容，但加载的结果集架构包含较少的列比<ph id="ph1">`DataTable`</ph>。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>If a missing column has a default value defined or the column's data type is nullable, the <ph id="ph1">`Load`</ph> method allows the rows to be added, substituting the default or null value for the missing column.</source>
          <target state="translated">如果缺少列已定义的默认值或列的数据类型可以为 null，<ph id="ph1">`Load`</ph>方法允许要添加的行替换缺少的列的默认值或 null 值。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>If no default value or null can be used, then the <ph id="ph1">`Load`</ph> method throws an exception.</source>
          <target state="translated">如果可以使用任何默认值或 null，则<ph id="ph1">`Load`</ph>方法引发异常。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>If no specific default value has been supplied, the <ph id="ph1">`Load`</ph> method uses the null value as the implied default value.</source>
          <target state="translated">如果已不提供任何特定的默认值，<ph id="ph1">`Load`</ph>方法使用隐含的默认值为 null 的值。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Before considering the behavior of the <ph id="ph1">`Load`</ph> method in terms of data operations, consider that each row within a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> maintains both the current value and the original value for each column.</source>
          <target state="translated">在考虑的行为之前<ph id="ph1">`Load`</ph>方法根据数据操作，请考虑，每个行内<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>维护的当前值和每个列的原始值。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>These values may be equivalent, or may be different if the data in the row has been changed since filling the <ph id="ph1">`DataTable`</ph>.</source>
          <target state="translated">这些值可能相同，或如果后填充发生了更改的行中的数据可能不同<ph id="ph1">`DataTable`</ph>。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>See <bpt id="p1">[</bpt>Row States and Row Versions<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)</ept> for more information.</source>
          <target state="translated">请参阅<bpt id="p1">[</bpt>行状态和行版本<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)</ept>有关详细信息。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>In this method call, the specified <ph id="ph1">&lt;xref:System.Data.LoadOption&gt;</ph> parameter influences the processing of the incoming data.</source>
          <target state="translated">在此方法调用中，指定<ph id="ph1">&lt;xref:System.Data.LoadOption&gt;</ph>参数影响的传入数据的处理。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>How should the Load method handle loading rows that have the same primary key as existing rows?</source>
          <target state="translated">Load 方法应如何处理具有相同的主键作为现有行的加载行？</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Should it modify current values, original values, or both?</source>
          <target state="translated">它应修改当前值和 / 或原始值？</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>These issues, and more, are controlled by the <ph id="ph1">`loadOption`</ph> parameter.</source>
          <target state="translated">这些问题，和的详细信息，由控制<ph id="ph1">`loadOption`</ph>参数。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>If the existing row and the incoming row contain corresponding primary key values, the row is processed using its current row state value, otherwise it's treated as a new row.</source>
          <target state="translated">如果现有行和传入行将包含相应的主键值，则使用其当前的行状态值处理行，否则它将被视为新行。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>In terms of event operations, the <ph id="ph1">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph> event occurs before each row is changed, and the <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanged&gt;</ph> event occurs after each row has been changed.</source>
          <target state="translated">在事件操作方面<ph id="ph1">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph>事件发生之前更改每个行，与<ph id="ph2">&lt;xref:System.Data.DataTable.RowChanged&gt;</ph>事件发生在每个行已更改之后。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>In each case, the <ph id="ph1">&lt;xref:System.Data.DataRowChangeEventArgs.Action%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.DataRowChangeEventArgs&gt;</ph> instance passed to the event handler contains information about the particular action associated with the event.</source>
          <target state="translated">在每个情况下，<ph id="ph1">&lt;xref:System.Data.DataRowChangeEventArgs.Action%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.Data.DataRowChangeEventArgs&gt;</ph>传递给事件处理程序的实例包含有关与事件关联的特定操作的信息。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>This action value varies, depending on the state of the row before the load operation.</source>
          <target state="translated">此操作值都不同，具体取决于行之前加载操作的状态。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>In each case, both events occur, and the action is the same for each.</source>
          <target state="translated">在每个情况下，这两个事件发生，且操作为每个相同。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The action may be applied to either the current or original version of each row, or both, depending on the current row state.</source>
          <target state="translated">操作可以应用于当前或原始版本的每一行，或两者，具体取决于当前的行状态。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The following table displays behavior for the Load method when called with each of the <ph id="ph1">`LoadOption`</ph> values, and also shows how the values interact with the row state for the row being loaded.</source>
          <target state="translated">下表显示负载方法调用每个时的行为<ph id="ph1">`LoadOption`</ph>值，并显示如何与正在加载的行的行状态进行交互的值。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The final row (labeled "(Not present)") describes the behavior for incoming rows that don't match any existing row.</source>
          <target state="translated">最终 （标记为"（不提供）"） 的行所说明的行为传入不匹配任何现有行的行。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Each cell in this table describes the current and original value for a field within a row, along with the <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> for the value after the <ph id="ph2">`Load`</ph> method has completed.</source>
          <target state="translated">此表中的每个单元格连同描述行中的字段的当前和原始值<ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph>后的值为<ph id="ph2">`Load`</ph>方法已完成。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Existing DataRowState</source>
          <target state="translated">现有 DataRowState</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Upsert</source>
          <target state="translated">Upsert</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>OverwriteChanges</source>
          <target state="translated">OverwriteChanges</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>PreserveChanges (Default behavior)</source>
          <target state="translated">PreserveChanges （默认行为）</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Added</source>
          <target state="translated">已添加</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">当前 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = -<ph id="ph1">\&lt;</ph>Not available&gt;</source>
          <target state="translated">原始 =-<ph id="ph1">\&lt;</ph>不可用 &gt;</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Added&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>添加 &gt;</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = Change</source>
          <target state="translated">行操作 = 更改</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">当前 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">原始 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>不变 &gt;</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">行操作 = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Existing&gt;</source>
          <target state="translated">当前 =<ph id="ph1">\&lt;</ph>现有 &gt;</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">原始 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Modified&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>修改 &gt;</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = ChangeOriginal</source>
          <target state="translated">行操作 = 更改原始值</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Modified</source>
          <target state="translated">修改时间</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">当前 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Existing&gt;</source>
          <target state="translated">原始 =<ph id="ph1">\&lt;</ph>现有 &gt;</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Modified&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>修改 &gt;</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = Change</source>
          <target state="translated">行操作 = 更改</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">当前 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">原始 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>不变 &gt;</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">行操作 = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Existing&gt;</source>
          <target state="translated">当前 =<ph id="ph1">\&lt;</ph>现有 &gt;</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">原始 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Modified&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>修改 &gt;</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction =ChangeOriginal</source>
          <target state="translated">行操作 = 更改原始值</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>eleted</source>
          <target state="translated">eleted</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>(Load does not affect deleted rows)</source>
          <target state="translated">（负载进行不影响删除的行）</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = ---</source>
          <target state="translated">当前 =--</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Existing&gt;</source>
          <target state="translated">原始 =<ph id="ph1">\&lt;</ph>现有 &gt;</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Deleted&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>删除 &gt;</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>(New row is added with the following characteristics)</source>
          <target state="translated">（新行添加具有下列特性）</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">当前 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Not available&gt;</source>
          <target state="translated">原始 =<ph id="ph1">\&lt;</ph>不可用 &gt;</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Added&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>添加 &gt;</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = Add</source>
          <target state="translated">行操作 = 添加</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Undo delete and</source>
          <target state="translated">撤消删除和</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">当前 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">原始 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>不变 &gt;</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">行操作 = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Not available&gt;</source>
          <target state="translated">当前 =<ph id="ph1">\&lt;</ph>不可用 &gt;</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">原始 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Deleted&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>删除 &gt;</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = ChangeOriginal</source>
          <target state="translated">行操作 = 更改原始值</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Unchanged</source>
          <target state="translated">Unchanged</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">当前 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Existing&gt;</source>
          <target state="translated">原始 =<ph id="ph1">\&lt;</ph>现有 &gt;</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>If new value is the same as the existing value then</source>
          <target state="translated">如果新值为与现有的值相同，则</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>不变 &gt;</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = Nothing</source>
          <target state="translated">行操作 = Nothing</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Else</source>
          <target state="translated">Else</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Modified&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>修改 &gt;</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = Change</source>
          <target state="translated">行操作 = 更改</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">当前 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">原始 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>不变 &gt;</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">行操作 = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">当前 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">原始 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>不变 &gt;</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">行操作 = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Not present)</source>
          <target state="translated">不存在）</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">当前 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Not available&gt;</source>
          <target state="translated">原始 =<ph id="ph1">\&lt;</ph>不可用 &gt;</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Added&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>添加 &gt;</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = Add</source>
          <target state="translated">行操作 = 添加</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">当前 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">原始 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>不变 &gt;</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">行操作 = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">当前 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original = <ph id="ph1">\&lt;</ph>Incoming&gt;</source>
          <target state="translated">原始 =<ph id="ph1">\&lt;</ph>传入 &gt;</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>State = <ph id="ph1">\&lt;</ph>Unchanged&gt;</source>
          <target state="translated">状态 =<ph id="ph1">\&lt;</ph>不变 &gt;</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>RowAction = ChangeCurrentAndOriginal</source>
          <target state="translated">行操作 = ChangeCurrentAndOriginal</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Values in a <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> can be constrained through use of properties such as <ph id="ph2">&lt;xref:System.Data.DataColumn.ReadOnly%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>.</source>
          <target state="translated">中的值<ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph>可以如约束通过使用属性<ph id="ph2">&lt;xref:System.Data.DataColumn.ReadOnly%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">`Load`</ph> method handles such columns in a manner that is consistent with the behavior defined by the column's properties.</source>
          <target state="translated"><ph id="ph1">`Load`</ph>方法可处理此类列与列的属性定义的行为一致的方式。</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The read only constraint on a <ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph> is applicable only for changes that occur in memory.</source>
          <target state="translated">上的只读的约束<ph id="ph1">&lt;xref:System.Data.DataColumn&gt;</ph>仅适用于在内存中发生更改。</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">`Load`</ph> method's overwrites the read-only column values, if needed.</source>
          <target state="translated"><ph id="ph1">`Load`</ph>方法的覆盖的只读的列的值，如果需要。</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>If you specify the OverwriteChanges or PreserveChanges options when calling the <ph id="ph1">`Load`</ph> method, then the assumption is made that the incoming data is coming from the <ph id="ph2">`DataTable`</ph>'s primary data source, and the DataTable tracks changes and can propagate the changes back to the data source.</source>
          <target state="translated">在调用时指定的 OverwriteChanges 或 PreserveChanges 选项<ph id="ph1">`Load`</ph>来自传入的数据进行的方法，则假定<ph id="ph2">`DataTable`</ph>的主数据源和数据表跟踪更改，可以将传播所做的更改回数据源。</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>If you select the Upsert option, it is assumed that the data is coming from one of a secondary data source, such as data provided by a middle-tier component, perhaps altered by a user.</source>
          <target state="translated">如果选择 Upsert 选项，则假定数据来自其中一个的辅助数据源，如由一个中间层组件，可能是由用户更改提供的数据。</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>In this case, the assumption is that the intent is to aggregate data from one or more data sources in the <ph id="ph1">`DataTable`</ph>, and then perhaps propagate the data back to the primary data source.</source>
          <target state="translated">在这种情况下，假设条件是从一个或多个数据源中的意图是对数据进行聚合<ph id="ph1">`DataTable`</ph>，然后可能将传播回主数据源的数据。</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">&lt;xref:System.Data.LoadOption&gt;</ph> parameter is used for determining the specific version of the row that is to be used for primary key comparison.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.LoadOption&gt;</ph>参数用于确定要使用主键比较行的特定版本。</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The table below provides the details.</source>
          <target state="translated">下表提供了详细信息。</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Load option</source>
          <target state="translated">加载选项</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>DataRow version used for primary key comparison</source>
          <target state="translated">使用主键比较 DataRow 版本</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original version, if it exists, otherwise Current version</source>
          <target state="translated">原始版本，如果它存在，否则为当前版本</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Original version, if it exists, otherwise Current version</source>
          <target state="translated">原始版本，如果它存在，否则为当前版本</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Current version, if it exists, otherwise Original version</source>
          <target state="translated">当前版本，如果它存在，否则为原始版本</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">`errorHandler`</ph> parameter is a <ph id="ph2">&lt;xref:System.Data.FillErrorEventHandler&gt;</ph> delegate that refers to a procedure that is called when an error occurs while loading data.</source>
          <target state="translated"><ph id="ph1">`errorHandler`</ph>参数是<ph id="ph2">&lt;xref:System.Data.FillErrorEventHandler&gt;</ph>指将数据加载过程中发生错误时调用的过程的委托。</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">&lt;xref:System.Data.FillErrorEventArgs&gt;</ph> parameter passed to the procedure provides properties that allow you to retrieve information about the error that occurred, the current row of data, and the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> being filled.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.FillErrorEventArgs&gt;</ph>传递给过程的参数提供的属性，使您得以检索有关错误的发生，而当前行的数据，信息和<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>填充的。</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Using this delegate mechanism, rather than a simpler try/catch block, allows you to determine the error, handle the situation, and continue processing if you like.</source>
          <target state="translated">使用此委托机制，而不是更简单的 try/catch 块，可以确定该错误，处理这种情况，并继续如果愿意处理。</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>The <ph id="ph1">&lt;xref:System.Data.FillErrorEventArgs&gt;</ph> parameter supplies a <ph id="ph2">&lt;xref:System.Data.FillErrorEventArgs.Continue%2A&gt;</ph> property: set this property to <ph id="ph3">`true`</ph> to indicate that you have handled the error and wish to continue processing.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.FillErrorEventArgs&gt;</ph>参数提供<ph id="ph2">&lt;xref:System.Data.FillErrorEventArgs.Continue%2A&gt;</ph>属性： 将此属性设置为<ph id="ph3">`true`</ph>以指示你已处理错误，并且希望继续进行处理。</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Set the property to <ph id="ph1">`false`</ph> to indicate that you wish to halt processing.</source>
          <target state="translated">将属性设置为<ph id="ph1">`false`</ph>以指示你想要停止处理。</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)">
          <source>Be aware that setting the property to <ph id="ph1">`false`</ph> causes the code that triggered the problem to throw an exception.</source>
          <target state="translated">请注意，将属性设置为<ph id="ph1">`false`</ph>导致触发要引发异常的问题的代码。</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>Finds and updates a specific row.</source>
          <target state="translated">查找和更新特定行。</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>If no matching row is found, a new row is created using the given values.</source>
          <target state="translated">如果找不到任何匹配行，则使用给定值创建新行。</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>An array of values used to create the new row.</source>
          <target state="translated">用于创建新行的值数组。</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to accept changes; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果接受更改，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>Finds and updates a specific row.</source>
          <target state="translated">查找和更新特定行。</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>If no matching row is found, a new row is created using the given values.</source>
          <target state="translated">如果找不到任何匹配行，则使用给定值创建新行。</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">新的 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph> method takes an array of values and finds the matching value(s) in the primary key column(s).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph>方法接受的值的数组，并在主键列中查找匹配的值。</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>If a column has a default value, pass a null value in the array to set the default value for that column.</source>
          <target state="translated">如果列具有默认值，请设置该列的默认值数组中传递 null 值。</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>Similarly, if a column has its <ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph> property set to true, pass a null value in the array to set the automatically generated value for the row.</source>
          <target state="translated">同样，如果某一列具有其<ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>属性设置为 true，则要设置行自动生成的值的数组中传递 null 值。</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>If the <ph id="ph1">`fAcceptChanges`</ph> parameter is <ph id="ph2">`true`</ph> or not specified, the new data is added and then <ph id="ph3">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> is called to accept all changes in the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>; if the argument is <ph id="ph5">`false`</ph>, newly added rows are marked as insertions, and changes to existing rows are marked as modifications.</source>
          <target state="translated">如果<ph id="ph1">`fAcceptChanges`</ph>参数是<ph id="ph2">`true`</ph>或未指定，将添加新数据，然后<ph id="ph3">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph>调用以接受中的所有更改<ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>; 如果参数是<ph id="ph5">`false`</ph>，新添加的行标记为插入、 和到的更改现有行被标记为修改。</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>Exceptions can also occur during either a <ph id="ph1">&lt;xref:System.Data.DataTable.ColumnChanging&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph> event.</source>
          <target state="translated">也可在发生异常<ph id="ph1">&lt;xref:System.Data.DataTable.ColumnChanging&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>If an exception occurs, the row is not added to the table.</source>
          <target state="translated">如果发生异常，则行未添加到表中。</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>Use <ph id="ph1">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph> in conjunction with <ph id="ph2">&lt;xref:System.Data.DataTable.BeginLoadData%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataTable.EndLoadData%2A&gt;</ph>.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph>结合<ph id="ph2">&lt;xref:System.Data.DataTable.BeginLoadData%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Data.DataTable.EndLoadData%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph> method to attempt to find a row.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph>方法来尝试查找行。</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>If no such row is found, the values are used to create a new row.</source>
          <target state="translated">如果未不找到任何此类行，这些值用于创建新行。</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>The array is larger than the number of columns in the table.</source>
          <target state="translated">该数组大于表中的列数。</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>A value doesn't match its respective column type.</source>
          <target state="translated">值与其各自的列类型不匹配。</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>Adding the row invalidates a constraint.</source>
          <target state="translated">添加行会使约束无效。</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
          <source>Attempting to put a null in a column where <ph id="ph1">&lt;see cref="P:System.Data.DataColumn.AllowDBNull" /&gt;</ph> is false.</source>
          <target state="translated">尝试将 null 值放到 <ph id="ph1">&lt;see cref="P:System.Data.DataColumn.AllowDBNull" /&gt;</ph> 为 false 的列中。</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>An array of values used to create the new row.</source>
          <target state="translated">用于创建新行的值数组。</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>Used to determine how the array values are applied to the corresponding values in an existing row.</source>
          <target state="translated">用于确定数组值如何应用于现有行中的对应值。</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>Finds and updates a specific row.</source>
          <target state="translated">查找和更新特定行。</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>If no matching row is found, a new row is created using the given values.</source>
          <target state="translated">如果找不到任何匹配行，则使用给定值创建新行。</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">新的 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph> method takes an array of values and finds the matching value(s) in the primary key column(s).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph>方法接受的值的数组，并在主键列中查找匹配的值。</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>If a column has a default value, pass a null value in the array to set the default value for that column.</source>
          <target state="translated">如果列具有默认值，请设置该列的默认值数组中传递 null 值。</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>Similarly, if a column has its <ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph> property set to true, pass a null value in the array to set the automatically generated value for the row.</source>
          <target state="translated">同样，如果某一列具有其<ph id="ph1">&lt;xref:System.Data.DataColumn.AutoIncrement%2A&gt;</ph>属性设置为 true，则要设置行自动生成的值的数组中传递 null 值。</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>The value of the <ph id="ph1">`loadOption`</ph> parameter is used to determine how the values in the array are applied to an existing row.</source>
          <target state="translated">值<ph id="ph1">`loadOption`</ph>参数用于确定如何将数组中的值应用于现有行。</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>For example, if <ph id="ph1">`loadOption`</ph> is set to <ph id="ph2">`OverwriteChanges`</ph>, the <ph id="ph3">`Original`</ph> and <ph id="ph4">`Current`</ph> values of each column are replaced with the values in the incoming row and the <ph id="ph5">`RowState`</ph> property is set to <ph id="ph6">`Unchanged`</ph>.</source>
          <target state="translated">例如，如果<ph id="ph1">`loadOption`</ph>设置为<ph id="ph2">`OverwriteChanges`</ph>、<ph id="ph3">`Original`</ph>和<ph id="ph4">`Current`</ph>的每个列的值将替换中的传入行的值与<ph id="ph5">`RowState`</ph>属性设置为<ph id="ph6">`Unchanged`</ph>。</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>Exceptions can also occur during either a <ph id="ph1">&lt;xref:System.Data.DataTable.ColumnChanging&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph> event.</source>
          <target state="translated">也可在发生异常<ph id="ph1">&lt;xref:System.Data.DataTable.ColumnChanging&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.DataTable.RowChanging&gt;</ph>事件。</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>If an exception occurs, the row is not added to the table.</source>
          <target state="translated">如果发生异常，则行未添加到表中。</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)">
          <source>Use <ph id="ph1">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph> in conjunction with <ph id="ph2">&lt;xref:System.Data.DataTable.BeginLoadData%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataTable.EndLoadData%2A&gt;</ph>.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.DataTable.LoadDataRow%2A&gt;</ph>结合<ph id="ph2">&lt;xref:System.Data.DataTable.BeginLoadData%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Data.DataTable.EndLoadData%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.Locale">
          <source>Gets or sets the locale information used to compare strings within the table.</source>
          <target state="translated">获取或设置用于比较表中字符串的区域设置信息。</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Locale">
          <source>A <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> that contains data about the user's machine locale.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>，它包含有关用户计算机区域设置的数据。</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Locale">
          <source>The default is the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> object's <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> (returned by the <ph id="ph3">&lt;see cref="P:System.Data.DataSet.Locale" /&gt;</ph> property) to which the <ph id="ph4">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> belongs; if the table doesn't belong to a <ph id="ph5">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>, the default is the current system <ph id="ph6">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>.</source>
          <target state="translated">默认为 <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> 所属的 <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> 对象的 <ph id="ph3">&lt;see cref="P:System.Data.DataSet.Locale" /&gt;</ph>（由 <ph id="ph4">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 属性返回）；如果该表不属于 <ph id="ph5">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>，则默认为当前系统的 <ph id="ph6">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Locale">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> represents the software preferences of a particular culture or community.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>表示特定区域性或社区的软件首选项。</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Locale">
          <source>When used for string comparisons, the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> affects sorting, comparisons, and filtering.</source>
          <target state="translated">用于字符串比较时<ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>影响排序比较，以及进行筛选。</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Locale">
          <source>In columns that contain expressions, the <ph id="ph1">&lt;xref:System.StringComparison.InvariantCulture&gt;</ph> is used.</source>
          <target state="translated">包含表达式，列中<ph id="ph1">&lt;xref:System.StringComparison.InvariantCulture&gt;</ph>使用。</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Locale">
          <source>The <ph id="ph1">&lt;xref:System.StringComparison.CurrentCulture&gt;</ph> is ignored.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.StringComparison.CurrentCulture&gt;</ph>将被忽略。</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Locale">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> through the <ph id="ph2">&lt;xref:System.Data.DataTable.Locale%2A&gt;</ph> and prints the ISO language name.</source>
          <target state="translated">下面的示例设置<ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>通过<ph id="ph2">&lt;xref:System.Data.DataTable.Locale%2A&gt;</ph>，并输出 ISO 语言名称。</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>Merge the specified <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> with the current <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">将指定的 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 与当前 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 合并。</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">`Merge`</ph> method is used to merge two <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects that have largely similar schemas.</source>
          <target state="translated"><ph id="ph1">`Merge`</ph>方法用于合并两个<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>有很大程度上类似的架构的对象。</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">合并通常用于对客户端应用程序，以将数据源的最新的更改合并到现有<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>This allows the client application to have a refreshed <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> with the latest data from the data source.</source>
          <target state="translated">这允许客户端应用程序具有刷新<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>使用数据源的最新的数据。</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The merge operation takes into account only the original table, and the table to be merged.</source>
          <target state="translated">仅对原始表和表要合并，则合并操作将考虑在内。</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Child tables are not affected or included.</source>
          <target state="translated">不受影响或包含子表。</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</source>
          <target state="translated">如果表具有一个或多个定义的一种关系，一部分的子表必须单独合并每个子表。</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The following console application demonstrates the behavior of the <ph id="ph1">`missingSchemaAction`</ph> parameter of the <ph id="ph2">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph> method.</source>
          <target state="translated">以下控制台应用程序演示的行为<ph id="ph1">`missingSchemaAction`</ph>参数<ph id="ph2">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>This example creates two versions of the same table, modifying the schema for the second version.</source>
          <target state="translated">此示例创建两个版本的同一个表，修改的第二个版本的架构。</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The code then attempts to merge the second table into the first.</source>
          <target state="translated">然后，代码尝试将第二个表合并到第一个。</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>This example shows how to use one of the overloaded versions of Merge.</source>
          <target state="translated">此示例演示如何使用合并的重载版本之一。</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>For other examples that might be available, see the individual overload topics.</source>
          <target state="translated">有关可能会提供其他示例，请参阅各个重载主题。</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to be merged with the current <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">要与当前 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 合并的 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>Merge the specified <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> with the current <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">将指定的 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 与当前 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 合并。</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>The Merge method is used to merge two <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects that have largely similar schemas.</source>
          <target state="translated">Merge 方法用于合并两个<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>有很大程度上类似的架构的对象。</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">合并通常用于对客户端应用程序，以将数据源的最新的更改合并到现有<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>This allows the client application to have a refreshed <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> with the latest data from the data source.</source>
          <target state="translated">这允许客户端应用程序具有刷新<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>使用数据源的最新的数据。</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>The merge operation takes into account only the original table, and the table to be merged.</source>
          <target state="translated">仅对原始表和表要合并，则合并操作将考虑在内。</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>Child tables are not affected or included.</source>
          <target state="translated">不受影响或包含子表。</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</source>
          <target state="translated">如果表具有一个或多个定义的一种关系，一部分的子表必须单独合并每个子表。</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>The <ph id="ph1">`Merge`</ph> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Merge`</ph>方法通常称为涉及验证更改、 协调错误、 与所做的更改，更新数据源和最后刷新现有的过程的一系列末尾<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>When performing a merge, changes made to the existing data before the merge are preserved by default during the merge operation.</source>
          <target state="translated">当执行合并时，在合并前的现有数据所做的更改会在合并操作期间，保留默认情况下。</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>Developers can modify this behavior by calling one of the other two overloads for this method, and specifying a false value for the <ph id="ph1">`preserveChanges`</ph> parameter.</source>
          <target state="translated">开发人员可以修改此行为通过其他两个重载之一调用此方法，并指定为返回值为 false<ph id="ph1">`preserveChanges`</ph>参数。</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>In a client application, it is usual to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle tier component.</source>
          <target state="translated">在客户端应用程序，它是通常有一个按钮，用户可以单击它来收集已更改的数据并将其发送回中间层组件之前对它进行验证。</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>In this scenario, the <ph id="ph1">&lt;xref:System.Data.DataTable.GetChanges%2A&gt;</ph> method is first invoked.</source>
          <target state="translated">在此方案中，<ph id="ph1">&lt;xref:System.Data.DataTable.GetChanges%2A&gt;</ph>第一次调用方法。</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>That method returns a second <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> optimized for validating and merging.</source>
          <target state="translated">方法将返回第二个<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>优化为验证和合并。</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>This second <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> object contains only the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objects that were changed, resulting in a subset of the original <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">第二个<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>对象只包含<ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>已更改，从而导致原始的子集的对象<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>This subset is generally smaller and thus more efficiently passed back to a middle tier component.</source>
          <target state="translated">此子集通常较小，因此可以更有效地传递回中间层组件。</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>The middle tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">然后，中间层组件使用通过存储过程的更改更新原始数据源。</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>The middle tier can then send back either a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">然后，中间层可以发送回一个新<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>，包括原始数据和数据源的最新数据 （通过再次运行原始查询），或者它可以发送回包含从数据源对其进行任何更改的子集。</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> can be merged back into the client application's original <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> with the <ph id="ph3">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph> method.</source>
          <target state="translated">（例如，如果数据源会自动创建唯一的主键值，这些值可以将传播回客户端应用程序。）在任一情况下，返回<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>必须合并回客户端应用程序的原始<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>与<ph id="ph3">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>When merging a new source <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> into the target, any source rows with a <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> value of <ph id="ph3">`Unchanged`</ph>, <ph id="ph4">`Modified`</ph>, or <ph id="ph5">`Deleted`</ph>, is matched to target rows with the same primary key values.</source>
          <target state="translated">合并新的源时<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>到目标中时，任何源行与<ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph>值<ph id="ph3">`Unchanged`</ph>， <ph id="ph4">`Modified`</ph>，或<ph id="ph5">`Deleted`</ph>，与具有相同的主键值的目标行匹配。</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>Source rows with a <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">源行<ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph>值<ph id="ph2">`Added`</ph>具有相同作为新的源行的主键值的新目标行匹配。</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>The following console application creates a simple <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and adds data to the table.</source>
          <target state="translated">以下控制台应用程序创建一个简单<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>然后将数据添加到表。</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>The example then creates a copy of the table, adding rows to the copy.</source>
          <target state="translated">然后，示例创建表，将行添加到复制的副本。</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable)">
          <source>Finally, the example calls the <ph id="ph1">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph> method to merge the data in the second table with the data in the first table.</source>
          <target state="translated">最后，该示例调用<ph id="ph1">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph>方法合并第二个表中的第一个表中的数据的数据。</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>The <ph id="ph1">&lt;see langword="DataTable" /&gt;</ph> to be merged with the current <ph id="ph2">&lt;see langword="DataTable" /&gt;</ph>.</source>
          <target state="translated">要与当前 <ph id="ph2">&lt;see langword="DataTable" /&gt;</ph> 合并的 <ph id="ph1">&lt;see langword="DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, to preserve changes in the current <ph id="ph2">&lt;see langword="DataTable" /&gt;</ph>; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.<ph id="ph4">&lt;see langword="" /&gt;</ph></source>
          <target state="translated">如果保留当前 <ph id="ph2">&lt;see langword="DataTable" /&gt;</ph> 中的更改，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。<ph id="ph4">&lt;see langword="" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>Merge the specified <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> with the current <ph id="ph2">&lt;see langword="DataTable" /&gt;</ph>, indicating whether to preserve changes in the current <ph id="ph3">&lt;see langword="DataTable" /&gt;</ph>.</source>
          <target state="translated">将指定的 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 与当前 <ph id="ph2">&lt;see langword="DataTable" /&gt;</ph> 合并，指示是否保留当前 <ph id="ph3">&lt;see langword="DataTable" /&gt;</ph> 中的更改。</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>The Merge method is used to merge two <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects that have largely similar schemas.</source>
          <target state="translated">Merge 方法用于合并两个<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>有很大程度上类似的架构的对象。</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">合并通常用于对客户端应用程序，以将数据源的最新的更改合并到现有<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>This allows the client application to have a refreshed <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> with the latest data from the data source.</source>
          <target state="translated">这允许客户端应用程序具有刷新<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>使用数据源的最新的数据。</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>The merge operation takes into account only the original table, and the table to be merged.</source>
          <target state="translated">仅对原始表和表要合并，则合并操作将考虑在内。</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>Child tables are not affected or included.</source>
          <target state="translated">不受影响或包含子表。</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</source>
          <target state="translated">如果表具有一个或多个定义的一种关系，一部分的子表必须单独合并每个子表。</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>The <ph id="ph1">`Merge`</ph> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Merge`</ph>方法通常称为涉及验证更改、 协调错误、 与所做的更改，更新数据源和最后刷新现有的过程的一系列末尾<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>When performing a merge, changes made to the existing data before the merge are preserved during the merge operation unless the developer specifies false for the <ph id="ph1">`preserveChanges`</ph> parameter.</source>
          <target state="translated">除非开发人员指定为 false 时执行合并时，在合并前的现有数据所做的更改合并操作过程中保留<ph id="ph1">`preserveChanges`</ph>参数。</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>If the <ph id="ph1">`preserveChanges`</ph> parameter is set to <ph id="ph2">`true`</ph>, incoming values do not overwrite existing values in the Current row version of the existing row.</source>
          <target state="translated">如果<ph id="ph1">`preserveChanges`</ph>参数设置为<ph id="ph2">`true`</ph>，传入值不会覆盖现有行的当前行版本中的现有值。</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>If the <ph id="ph1">`preserveChanges`</ph> parameter is set to <ph id="ph2">`false`</ph>, incoming values do overwrite the existing values in the Current row version of the existing row.</source>
          <target state="translated">如果<ph id="ph1">`preserveChanges`</ph>参数设置为<ph id="ph2">`false`</ph>，传入值将覆盖现有行的当前行版本中的现有值。</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>For more information about row versions, see <bpt id="p1">[</bpt>Row States and Row Versions<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)</ept>.</source>
          <target state="translated">有关行版本的详细信息，请参阅<bpt id="p1">[</bpt>行状态和行版本<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)</ept>。</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>In a client application, it is usual to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle tier component.</source>
          <target state="translated">在客户端应用程序，它是通常有一个按钮，用户可以单击它来收集已更改的数据并将其发送回中间层组件之前对它进行验证。</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>In this scenario, the <ph id="ph1">&lt;xref:System.Data.DataTable.GetChanges%2A&gt;</ph> method is first invoked.</source>
          <target state="translated">在此方案中，<ph id="ph1">&lt;xref:System.Data.DataTable.GetChanges%2A&gt;</ph>第一次调用方法。</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>That method returns a second <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> optimized for validating and merging.</source>
          <target state="translated">方法将返回第二个<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>优化为验证和合并。</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>This second <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> object contains only the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objects that were changed, resulting in a subset of the original <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">第二个<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>对象只包含<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>和<ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph>已更改，从而导致原始的子集的对象<ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>This subset is generally smaller, and thus this subset is more efficiently passed back to a middle tier component.</source>
          <target state="translated">此子集是通常较小，因此此子集更有效地传递回中间层组件。</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>The middle tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">然后，中间层组件使用通过存储过程的更改更新原始数据源。</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>The middle tier can then send back either a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">然后，中间层可以发送回一个新<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>，包括原始数据和数据源的最新数据 （通过再次运行原始查询），或者它可以发送回包含从数据源对其进行任何更改的子集。</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> can be merged back into the client application's original <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> with the <ph id="ph3">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph> method.</source>
          <target state="translated">（例如，如果数据源会自动创建唯一的主键值，这些值可以将传播回客户端应用程序。）在任一情况下，返回<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>必须合并回客户端应用程序的原始<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>与<ph id="ph3">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>When merging a new source <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> into the target, any source rows with a <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> value of <ph id="ph3">`Unchanged`</ph>, <ph id="ph4">`Modified`</ph>, or <ph id="ph5">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">合并新的源时<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>到目标中时，任何源行与<ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph>值<ph id="ph3">`Unchanged`</ph>， <ph id="ph4">`Modified`</ph>，或<ph id="ph5">`Deleted`</ph>与具有相同的主键值的目标行匹配。</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>Source rows with a <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">源行<ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph>值<ph id="ph2">`Added`</ph>具有相同作为新的源行的主键值的新目标行匹配。</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>The following console application creates a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> containing rows, modifies some of the data in those rows, and attempts to merge data from a different <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">以下控制台应用程序创建<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>包含行，修改某些这些行中的数据并尝试合并来自不同数据<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)">
          <source>The example demonstrates the different behaviors for the <ph id="ph1">`preserveChanges`</ph> parameter.</source>
          <target state="translated">此示例演示为不同的行为<ph id="ph1">`preserveChanges`</ph>参数。</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to be merged with the current <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">要与当前 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 合并的 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, to preserve changes in the current <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果保留当前 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 中的更改，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.MissingSchemaAction" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.MissingSchemaAction" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>Merge the specified <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> with the current <ph id="ph2">&lt;see langword="DataTable" /&gt;</ph>, indicating whether to preserve changes and how to handle missing schema in the current <ph id="ph3">&lt;see langword="DataTable" /&gt;</ph>.</source>
          <target state="translated">将指定的 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 与当前 <ph id="ph2">&lt;see langword="DataTable" /&gt;</ph> 合并，指示是否保留更改以及如何处理当前 <ph id="ph3">&lt;see langword="DataTable" /&gt;</ph> 中缺失的架构。</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The <ph id="ph1">`Merge`</ph> method is used to merge two <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects that have largely similar schemas.</source>
          <target state="translated"><ph id="ph1">`Merge`</ph>方法用于合并两个<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>有很大程度上类似的架构的对象。</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">合并通常用于对客户端应用程序，以将数据源的最新的更改合并到现有<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>This allows the client application to have a refreshed <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> with the latest data from the data source.</source>
          <target state="translated">这允许客户端应用程序具有刷新<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>使用数据源的最新的数据。</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The merge operation takes into account only the original table, and the table to be merged.</source>
          <target state="translated">仅对原始表和表要合并，则合并操作将考虑在内。</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>Child tables are not affected or included.</source>
          <target state="translated">不受影响或包含子表。</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</source>
          <target state="translated">如果表具有一个或多个定义的一种关系，一部分的子表必须单独合并每个子表。</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The <ph id="ph1">`Merge`</ph> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`Merge`</ph>方法通常称为涉及验证更改、 协调错误、 与所做的更改，更新数据源和最后刷新现有的过程的一系列末尾<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>When performing a merge, changes made to the existing data before the merge are preserved during the merge operation unless the developer specifies false for the <ph id="ph1">`preserveChanges`</ph> parameter.</source>
          <target state="translated">除非开发人员指定为 false 时执行合并时，在合并前的现有数据所做的更改合并操作过程中保留<ph id="ph1">`preserveChanges`</ph>参数。</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>If the <ph id="ph1">`preserveChanges`</ph> parameter is set to <ph id="ph2">`true`</ph>, incoming values do not overwrite existing values in the Current row version of the existing row.</source>
          <target state="translated">如果<ph id="ph1">`preserveChanges`</ph>参数设置为<ph id="ph2">`true`</ph>，传入值不会覆盖现有行的当前行版本中的现有值。</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>If the <ph id="ph1">`preserveChanges`</ph> parameter is set to <ph id="ph2">`false`</ph>, incoming values do overwrite the existing values in the Current row version of the existing row.</source>
          <target state="translated">如果<ph id="ph1">`preserveChanges`</ph>参数设置为<ph id="ph2">`false`</ph>，传入值将覆盖现有行的当前行版本中的现有值。</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>For more information about row versions, see <bpt id="p1">[</bpt>Row States and Row Versions<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)</ept>.</source>
          <target state="translated">有关行版本的详细信息，请参阅<bpt id="p1">[</bpt>行状态和行版本<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md)</ept>。</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>In a client application, it is usual to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle tier component.</source>
          <target state="translated">在客户端应用程序，它是通常有一个按钮，用户可以单击它来收集已更改的数据并将其发送回中间层组件之前对它进行验证。</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>In this scenario, the <ph id="ph1">&lt;xref:System.Data.DataTable.GetChanges%2A&gt;</ph> method is first invoked.</source>
          <target state="translated">在此方案中，<ph id="ph1">&lt;xref:System.Data.DataTable.GetChanges%2A&gt;</ph>第一次调用方法。</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>That method returns a second <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> optimized for validating and merging.</source>
          <target state="translated">方法将返回第二个<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>优化为验证和合并。</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>This second <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> object contains only the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objects that were changed, resulting in a subset of the original <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">第二个<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>对象只包含<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>和<ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph>已更改，从而导致原始的子集的对象<ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>This subset is generally smaller, and thus this subset is more efficiently passed back to a middle tier component.</source>
          <target state="translated">此子集是通常较小，因此此子集更有效地传递回中间层组件。</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The middle tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">然后，中间层组件使用通过存储过程的更改更新原始数据源。</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The middle tier can then send back either a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">然后，中间层可以发送回一个新<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>，包括原始数据和数据源的最新数据 （通过再次运行原始查询），或者它可以发送回包含从数据源对其进行任何更改的子集。</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> can be merged back into the client application's original <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> with the <ph id="ph3">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph> method.</source>
          <target state="translated">（例如，如果数据源会自动创建唯一的主键值，这些值可以将传播回客户端应用程序。）在任一情况下，返回<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>必须合并回客户端应用程序的原始<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>与<ph id="ph3">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>When the <ph id="ph1">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph> method is called, the schemas of the two <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects are compared, because it is possible that the schemas may have been changed.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph>调用方法时，这两个架构<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>对象进行比较，因为它是可能的架构可能已更改。</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">例如，在企业到企业方案中，新列可能已被添加到 XML 架构一个自动化过程。</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>If the source <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> contains schema elements (added <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph3">`missingSchemaAction`</ph> argument to <ph id="ph4">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">如果源<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>包含架构元素 (添加<ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph>对象) 缺少目标中，通过设置，可以将架构元素添加到目标<ph id="ph3">`missingSchemaAction`</ph>参数<ph id="ph4">`MissingSchemaAction.Add`</ph>。</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>In that case, the merged <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> contains the added schema and data.</source>
          <target state="translated">在这种情况下，合并<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>包含添加的架构和数据。</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">合并后的架构，则数据将合并。</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>When merging a new source <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> into the target, any source rows with a <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> value of <ph id="ph3">`Unchanged`</ph>, <ph id="ph4">`Modified`</ph>, or <ph id="ph5">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">合并新的源时<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>到目标中时，任何源行与<ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph>值<ph id="ph3">`Unchanged`</ph>， <ph id="ph4">`Modified`</ph>，或<ph id="ph5">`Deleted`</ph>与具有相同的主键值的目标行匹配。</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>Source rows with a <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">源行<ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph>值<ph id="ph2">`Added`</ph>具有相同作为新的源行的主键值的新目标行匹配。</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The following console application demonstrates the behavior of the <ph id="ph1">`missingSchemaAction`</ph> parameter of the <ph id="ph2">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph> method.</source>
          <target state="translated">以下控制台应用程序演示的行为<ph id="ph1">`missingSchemaAction`</ph>参数<ph id="ph2">&lt;xref:System.Data.DataTable.Merge%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>This example creates two versions of the same table, modifying the schema for the second version.</source>
          <target state="translated">此示例创建两个版本的同一个表，修改的第二个版本的架构。</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The code then attempts to merge the second table into the first.</source>
          <target state="translated">然后，代码尝试将第二个表合并到第一个。</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.MinimumCapacity">
          <source>Gets or sets the initial starting size for this table.</source>
          <target state="translated">获取或设置该表最初的起始大小。</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.MinimumCapacity">
          <source>The initial starting size in rows of this table.</source>
          <target state="translated">该表中行的最初起始大小。</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.MinimumCapacity">
          <source>The default is 50.</source>
          <target state="translated">默认值为 50。</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.MinimumCapacity">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.MinimumCapacity%2A&gt;</ph> allows the system to create an appropriate set of resources before fetching data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.MinimumCapacity%2A&gt;</ph>允许系统在读取数据之前创建一组适当的资源。</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.MinimumCapacity">
          <source>In a situation when performance is critical, setting this property can optimize performance.</source>
          <target state="translated">在这种情况时性能非常重要，设置此属性可优化性能。</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.MinimumCapacity">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Data.DataTable.MinimumCapacity%2A&gt;</ph> of a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">下面的示例设置<ph id="ph1">&lt;xref:System.Data.DataTable.MinimumCapacity%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.Namespace">
          <source>Gets or sets the namespace for the XML representation of the data stored in the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 中所存储数据的 XML 表示形式的命名空间。</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Namespace">
          <source>The namespace of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的命名空间。</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.NewRow">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> with the same schema as the table.</source>
          <target state="translated">创建与该表具有相同架构的新 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.NewRow">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> with the same schema as the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">与 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 具有相同架构的 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.NewRow">
          <source>You must use the <ph id="ph1">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> method to create new <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objects with the same schema as the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">必须使用<ph id="ph1">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph>方法来创建新<ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>具有相同的架构对象<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.NewRow">
          <source>After creating a <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>, you can add it to the <ph id="ph2">&lt;xref:System.Data.DataRowCollection&gt;</ph>, through the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> object's <ph id="ph4">&lt;xref:System.Data.DataTable.Rows%2A&gt;</ph> property.</source>
          <target state="translated">在创建后<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>，你可以将其添加到<ph id="ph2">&lt;xref:System.Data.DataRowCollection&gt;</ph>，直到<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>对象的<ph id="ph4">&lt;xref:System.Data.DataTable.Rows%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.NewRow">
          <source>When you use <ph id="ph1">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> to create new rows, the rows must be added to or deleted from the data table before you call <ph id="ph2">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph>.</source>
          <target state="translated">当你使用<ph id="ph1">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph>若要创建新行，必须将添加到或删除行从数据表然后才能调用<ph id="ph2">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.NewRow">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, adds two <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> objects that determine the table's schema, and creates several new <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objects using the <ph id="ph4">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> method.</source>
          <target state="translated">下面的示例创建<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>，添加两个<ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph>确定表的架构，并创建几个新的对象<ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph>对象使用<ph id="ph4">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.NewRow">
          <source>Those <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> objects are then added to the <ph id="ph2">&lt;xref:System.Data.DataRowCollection&gt;</ph> using the <ph id="ph3">&lt;xref:System.Data.DataRowCollection.Add%2A&gt;</ph> method.</source>
          <target state="translated">那些<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>随后会将对象添加到<ph id="ph2">&lt;xref:System.Data.DataRowCollection&gt;</ph>使用<ph id="ph3">&lt;xref:System.Data.DataRowCollection.Add%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.NewRowArray(System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> value that describes the size of the array.</source>
          <target state="translated">描述数组大小的 <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.NewRowArray(System.Int32)">
          <source>Returns an array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">返回 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 的数组。</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.NewRowArray(System.Int32)">
          <source>The new array.</source>
          <target state="translated">新数组。</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRowBuilder" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRowBuilder" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
          <source>Creates a new row from an existing row.</source>
          <target state="translated">从现有行创建新行。</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> derived class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 派生类。</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataColumnChangeEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Data.DataColumnChangeEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Data.DataTable.ColumnChanged" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Data.DataTable.ColumnChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关概述，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /&gt;</ph>在派生类中，一定要调用基类的<ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataColumnChangeEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Data.DataColumnChangeEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Data.DataTable.ColumnChanging" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Data.DataTable.ColumnChanging" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关概述，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /&gt;</ph>在派生类中，一定要调用基类的<ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyChangedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyChangedEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关概述，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /&gt;</ph>在派生类中，一定要调用基类的<ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> being removed.</source>
          <target state="translated">正在移除的 <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)">
          <source>Notifies the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that a <ph id="ph2">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> is being removed.</source>
          <target state="translated">通知 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 正在移除 <ph id="ph2">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /&gt;</ph> method.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /&gt;</ph>在派生类中，一定要调用基类的<ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRowChangeEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Data.DataRowChangeEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Data.DataTable.RowChanged" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Data.DataTable.RowChanged" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关概述，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /&gt;</ph>在派生类中，一定要调用基类的<ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRowChangeEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Data.DataRowChangeEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Data.DataTable.RowChanging" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Data.DataTable.RowChanging" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关概述，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /&gt;</ph>在派生类中，一定要调用基类的<ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRowChangeEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Data.DataRowChangeEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Data.DataTable.RowDeleted" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Data.DataTable.RowDeleted" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关概述，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /&gt;</ph>在派生类中，一定要调用基类的<ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRowChangeEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Data.DataRowChangeEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Data.DataTable.RowDeleting" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Data.DataTable.RowDeleting" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关概述，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">在重写<ph id="ph1">&lt;see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /&gt;</ph>在派生类中，一定要调用基类的<ph id="ph2">&lt;see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTableClearEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Data.DataTableClearEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Data.DataTable.TableCleared" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Data.DataTable.TableCleared" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)">
          <source>Raises the <ph id="ph1">&lt;xref:System.Data.DataTable.TableCleared&gt;</ph> event, which is fired immediately after all rows have been successfully cleared but before the <ph id="ph2">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph> method returns control back to the caller.</source>
          <target state="translated">引发<ph id="ph1">&lt;xref:System.Data.DataTable.TableCleared&gt;</ph>事件，成功之前清除所有行后立即触发<ph id="ph2">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph>方法将返回给调用方的控件。</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关概述，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTableClearEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Data.DataTableClearEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Data.DataTable.TableClearing" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Data.DataTable.TableClearing" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)">
          <source>Raises the <ph id="ph1">&lt;xref:System.Data.DataTable.TableClearing&gt;</ph> event, which is fired before processing of the <ph id="ph2">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph> operation begins.</source>
          <target state="translated">引发<ph id="ph1">&lt;xref:System.Data.DataTable.TableClearing&gt;</ph>事件，在处理之前激发<ph id="ph2">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph>操作开始。</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关概述，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTableNewRowEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Data.DataTableNewRowEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Data.DataTable.TableNewRow" /&gt;</ph> event.</source>
          <target state="translated">引发 <ph id="ph1">&lt;see cref="E:System.Data.DataTable.TableNewRow" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)">
          <source>Raises the <ph id="ph1">&lt;xref:System.Data.DataTable.TableNewRow&gt;</ph> event, which fires after a new <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> has been created using <ph id="ph3">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph>.</source>
          <target state="translated">引发<ph id="ph1">&lt;xref:System.Data.DataTable.TableNewRow&gt;</ph>触发后新的事件<ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>已经使用创建<ph id="ph3">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">引发事件时，将通过委托调用事件处理程序。</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">有关概述，请参阅<bpt id="p1">[</bpt>处理和引发事件<ept id="p1">](~/docs/standard/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.ParentRelations">
          <source>Gets the collection of parent relations for this <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">获取该 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的父关系的集合。</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ParentRelations">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRelationCollection" /&gt;</ph> that contains the parent relations for the table.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Data.DataRelationCollection" /&gt;</ph>，包含该表的父关系。</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ParentRelations">
          <source>An empty collection is returned if no <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> objects exist.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> 对象不存在，将返回空集合。</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ParentRelations">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.DataTable.ParentRelations%2A&gt;</ph> property to return each parent <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> in a <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">下面的示例使用<ph id="ph1">&lt;xref:System.Data.DataTable.ParentRelations%2A&gt;</ph>属性以返回每个父<ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph>中<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ParentRelations">
          <source>Each relation is then used as an argument in the <ph id="ph1">&lt;xref:System.Data.DataRow.GetParentRows%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> to return an array of rows.</source>
          <target state="translated">每个关系中的参数作为用<ph id="ph1">&lt;xref:System.Data.DataRow.GetParentRows%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>返回行的数组。</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.ParentRelations">
          <source>The value of each column in the row is then printed.</source>
          <target state="translated">然后打印的行中的每个列的值。</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.Prefix">
          <source>Gets or sets the namespace for the XML representation of the data stored in the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 中所存储数据的 XML 表示形式的命名空间。</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Prefix">
          <source>The prefix of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的前缀。</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.PrimaryKey">
          <source>Gets or sets an array of columns that function as primary keys for the data table.</source>
          <target state="translated">获取或设置用作数据表主键的列数组。</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.PrimaryKey">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> objects.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Data.DataColumn" /&gt;</ph> 对象数组。</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.PrimaryKey">
          <source>The primary key of a table must be unique to identify the record in the table.</source>
          <target state="translated">表的主键必须唯一标识表中的记录。</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.PrimaryKey">
          <source>It's also possible to have a table with a primary key made up of two or more columns.</source>
          <target state="translated">还有可能获得具有主键的两个或多个列组成的表。</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.PrimaryKey">
          <source>This occurs when a single column can't contain enough unique values.</source>
          <target state="translated">在单个列不能包含足够的唯一值时，将发生这种情况。</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.PrimaryKey">
          <source>For example, a two column primary key might consist of a "FirstName" and "LastName" column.</source>
          <target state="translated">例如，"FirstName"和"LastName"列可能包含两个列的主键。</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.PrimaryKey">
          <source>Because primary keys can be made up of more than one column, the <ph id="ph1">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph> property consists of an array of <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> objects.</source>
          <target state="translated">因为主键可以由构成的多个列，<ph id="ph1">&lt;xref:System.Data.DataTable.PrimaryKey%2A&gt;</ph>属性包含的数组<ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.PrimaryKey">
          <source>The first example shows how to return the primary key columns for a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> displayed in a <ph id="ph2">`DataGrid`</ph>.</source>
          <target state="translated">第一个示例演示如何返回有关的主键列<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>中显示<ph id="ph2">`DataGrid`</ph>。</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.PrimaryKey">
          <source>The second example demonstrates how to set the primary key columns for a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">第二个示例演示如何设置有关的主键列<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.PrimaryKey">
          <source>The key is a foreign key.</source>
          <target state="translated">该键是外键。</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>Reads XML schema and data into the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">将 XML 架构和数据读入 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method provides a way to read either data only, or both data and schema into a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> from an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> method reads only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph>方法提供方法读取只将数据或数据和架构读入<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>从 XML 文档，而<ph id="ph3">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph>方法读取仅的架构。</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that include the <ph id="ph2">`XmlReadMode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">若要读取数据和架构，使用之一<ph id="ph1">`ReadXML`</ph>重载，以包括<ph id="ph2">`XmlReadMode`</ph>参数，并将其值设置为<ph id="ph3">`ReadSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">请注意，同样适用于<ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法，分别。</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">要写入的 XML 数据，或架构和数据从<ph id="ph1">`DataTable`</ph>，使用<ph id="ph2">`WriteXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">若要编写只为架构，使用<ph id="ph1">`WriteXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，却未实现<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>An object that derives from <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph></source>
          <target state="translated">从 <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 派生的对象</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>Reads XML schema and data into the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> 将 XML 架构和数据读入 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> used to read the data.</source>
          <target state="translated">用于读取数据的 <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>The current <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and its descendents are loaded with the data from the supplied <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>.</source>
          <target state="translated">当前<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>及其子代加载从提供的数据<ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>The behavior of this method is identical to that of the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType&gt;</ph> method, except that in this case, data is loaded only for the current table and its descendants.</source>
          <target state="translated">此方法的行为等同于的<ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType&gt;</ph>仅为当前表及其子代加载方法，这在这种情况下，数据除外。</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method provides a way to read either data only, or both data and schema into a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> from an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> method reads only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph>方法提供方法读取只将数据或数据和架构读入<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>从 XML 文档，而<ph id="ph3">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph>方法读取仅的架构。</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">请注意，同样适用于<ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法，分别。</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">要写入的 XML 数据，或架构和数据从<ph id="ph1">`DataTable`</ph>，使用<ph id="ph2">`WriteXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">若要编写只为架构，使用<ph id="ph1">`WriteXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，却未实现<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">如果指定内联架构，内联架构用于扩展现有的关系结构之前加载数据。</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">如果存在任何冲突 （例如，定义具有不同数据类型的同一个表中的相同列） 被引发异常。</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">如果不指定任何内联架构，则关系结构通过推理，如有必要，扩展根据 XML 文档的结构。</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">如果无法通过推断扩展架构，才能公开的所有数据，则引发异常。</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>The <ph id="ph1">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph2">`DataColumn`</ph> or <ph id="ph3">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>不将 XML 元素关联与其对应<ph id="ph2">`DataColumn`</ph>或<ph id="ph3">`DataTable`</ph>合法的 XML 字符，如 ("_") 在序列化的 XML 中的转义时。</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>本身仅为 XML 元素名称中的非法 XML 字符进行转义，因此只能使用相同。</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">当 XML 元素名称中的合法字符进行转义时，处理时将忽略该元素。</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> containing two columns and ten rows.</source>
          <target state="translated">下面的示例创建<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>包含两个列和十个行。</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>The example writes the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> schema and data to a memory stream, by invoking the <ph id="ph2">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">此示例将<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>架构和数据迁移到内存流，通过调用<ph id="ph2">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.Stream)">
          <source>The example creates a second <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method to fill it with schema and data.</source>
          <target state="translated">此示例将创建第二个<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>和调用<ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph>方法以用架构和数据填充它。</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> that will be used to read the data.</source>
          <target state="translated">将用于读取数据的 <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>Reads XML schema and data into the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 将 XML 架构和数据读入 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> used to read the data.</source>
          <target state="translated">用于读取数据的 <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>The current <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and its descendents are loaded with the data from the supplied <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph>.</source>
          <target state="translated">当前<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>及其子代加载从提供的数据<ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>The behavior of this method is identical to that of the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType&gt;</ph> method, except that in this case, data is loaded only for the current table and its descendants.</source>
          <target state="translated">此方法的行为等同于的<ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType&gt;</ph>仅为当前表及其子代加载方法，这在这种情况下，数据除外。</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method provides a way to read either data only, or both data and schema into a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> from an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> method reads only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph>方法提供方法读取只将数据或数据和架构读入<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>从 XML 文档，而<ph id="ph3">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph>方法读取仅的架构。</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">请注意，同样适用于<ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法，分别。</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">要写入的 XML 数据，或架构和数据从<ph id="ph1">`DataTable`</ph>，使用<ph id="ph2">`WriteXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">若要编写只为架构，使用<ph id="ph1">`WriteXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，却未实现<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">如果指定内联架构，内联架构用于扩展现有的关系结构之前加载数据。</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">如果存在任何冲突 （例如，定义具有不同数据类型的同一个表中的相同列） 被引发异常。</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">如果不指定任何内联架构，则关系结构通过推理，如有必要，扩展根据 XML 文档的结构。</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">如果无法通过推断扩展架构，才能公开的所有数据，则引发异常。</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>The <ph id="ph1">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph2">`DataColumn`</ph> or <ph id="ph3">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>不将 XML 元素关联与其对应<ph id="ph2">`DataColumn`</ph>或<ph id="ph3">`DataTable`</ph>合法的 XML 字符，如 ("_") 在序列化的 XML 中的转义时。</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>本身仅为 XML 元素名称中的非法 XML 字符进行转义，因此只能使用相同。</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">当 XML 元素名称中的合法字符进行转义时，处理时将忽略该元素。</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> containing two columns and ten rows.</source>
          <target state="translated">下面的示例创建<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>包含两个列和十个行。</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>The example writes the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> schema and data to a memory stream, by invoking the <ph id="ph2">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">此示例将<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>架构和数据迁移到内存流，通过调用<ph id="ph2">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.IO.TextReader)">
          <source>The example creates a second <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method to fill it with schema and data.</source>
          <target state="translated">此示例将创建第二个<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>和调用<ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph>方法以用架构和数据填充它。</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>The name of the file from which to read the data.</source>
          <target state="translated">从中读取数据的文件的名称。</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>Reads XML schema and data into the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> from the specified file.</source>
          <target state="translated">从指定的文件将 XML 架构和数据读入 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> used to read the data.</source>
          <target state="translated">用于读取数据的 <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>The current <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and its descendents are loaded with the data from the file named in the supplied <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">当前<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>及其子代加载从提供名为的文件中的数据<ph id="ph2">&lt;xref:System.String&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>The behavior of this method is identical to that of the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType&gt;</ph> method, except that in this case, data is loaded only for the current table and its descendants.</source>
          <target state="translated">此方法的行为等同于的<ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType&gt;</ph>仅为当前表及其子代加载方法，这在这种情况下，数据除外。</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method provides a way to read either data only, or both data and schema into a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> from an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> method reads only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph>方法提供方法读取只将数据或数据和架构读入<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>从 XML 文档，而<ph id="ph3">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph>方法读取仅的架构。</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">请注意，同样适用于<ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法，分别。</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">要写入的 XML 数据，或架构和数据从<ph id="ph1">`DataTable`</ph>，使用<ph id="ph2">`WriteXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">若要编写只为架构，使用<ph id="ph1">`WriteXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，却未实现<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">如果指定内联架构，内联架构用于扩展现有的关系结构之前加载数据。</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">如果存在任何冲突 （例如，定义具有不同数据类型的同一个表中的相同列） 被引发异常。</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">如果不指定任何内联架构，则关系结构通过推理，如有必要，扩展根据 XML 文档的结构。</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">如果无法通过推断扩展架构，才能公开的所有数据，则引发异常。</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>The <ph id="ph1">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph2">`DataColumn`</ph> or <ph id="ph3">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>不将 XML 元素关联与其对应<ph id="ph2">`DataColumn`</ph>或<ph id="ph3">`DataTable`</ph>合法的 XML 字符，如 ("_") 在序列化的 XML 中的转义时。</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>本身仅为 XML 元素名称中的非法 XML 字符进行转义，因此只能使用相同。</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">当 XML 元素名称中的合法字符进行转义时，处理时将忽略该元素。</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> containing two columns and ten rows.</source>
          <target state="translated">下面的示例创建<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>包含两个列和十个行。</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>The example writes the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> schema and data to disk.</source>
          <target state="translated">此示例将<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>架构和数据写入磁盘。</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.String)">
          <source>The example creates a second <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method to fill it with schema and data.</source>
          <target state="translated">此示例将创建第二个<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>和调用<ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph>方法以用架构和数据填充它。</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that will be used to read the data.</source>
          <target state="translated">将用于读取数据的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>Reads XML Schema and Data into the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 将 XML 架构和数据读入 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> used to read the data.</source>
          <target state="translated">用于读取数据的 <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>The current <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and its descendents are loaded with the data from the file named in the supplied <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">当前<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>及其子代加载从提供名为的文件中的数据<ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>The behavior of this method is identical to that of the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method, except that in this case, data is loaded only for the current table and its descendants.</source>
          <target state="translated">此方法的行为等同于的<ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph>仅为当前表及其子代加载方法，这在这种情况下，数据除外。</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method provides a way to read either data only, or both data and schema into a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> from an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> method reads only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph>方法提供方法读取只将数据或数据和架构读入<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>从 XML 文档，而<ph id="ph3">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph>方法读取仅的架构。</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">请注意，同样适用于<ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法，分别。</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">要写入的 XML 数据，或架构和数据从<ph id="ph1">`DataTable`</ph>，使用<ph id="ph2">`WriteXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">若要编写只为架构，使用<ph id="ph1">`WriteXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，却未实现<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">如果指定内联架构，内联架构用于扩展现有的关系结构之前加载数据。</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">如果存在任何冲突 （例如，定义具有不同数据类型的同一个表中的相同列） 被引发异常。</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">如果不指定任何内联架构，则关系结构通过推理，如有必要，扩展根据 XML 文档的结构。</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">如果无法通过推断扩展架构，才能公开的所有数据，则引发异常。</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>The <ph id="ph1">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph2">`DataColumn`</ph> or <ph id="ph3">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>不将 XML 元素关联与其对应<ph id="ph2">`DataColumn`</ph>或<ph id="ph3">`DataTable`</ph>合法的 XML 字符，如 ("_") 在序列化的 XML 中的转义时。</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph>本身仅为 XML 元素名称中的非法 XML 字符进行转义，因此只能使用相同。</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">当 XML 元素名称中的合法字符进行转义时，处理时将忽略该元素。</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> containing two columns and ten rows.</source>
          <target state="translated">下面的示例创建<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>包含两个列和十个行。</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>The example writes the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> schema and data to an <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">此示例将<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>架构和数据写入<ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)">
          <source>The example creates a second <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method to fill it with schema and data from the <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> instance.</source>
          <target state="translated">此示例将创建第二个<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>和调用<ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph>方法以填充架构和数据从<ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph>实例。</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>Reads an XML schema into the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">将 XML 架构读入 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Use the <ph id="ph1">`ReadXmlSchema`</ph> method to create the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">使用<ph id="ph1">`ReadXmlSchema`</ph>方法创建的架构<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">架构包含表、 关系和约束定义。</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>To write a schema to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method.</source>
          <target state="translated">若要写入到 XML 文档的架构，使用<ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The XML schema is interpreted according to the XSD standard.</source>
          <target state="translated">XML 架构被指根据 XSD 标准。</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">`ReadXmlSchema`</ph> method is generally invoked before invoking the <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method which is used to fill the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`ReadXmlSchema`</ph>通常在调用之前调用方法<ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph>方法用于填充<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>The stream used to read the schema.</source>
          <target state="translated">用于读取架构的流。</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>Reads an XML schema into the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using the specified stream.</source>
          <target state="translated">使用指定的流将 XML 架构读入 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> method to create the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph>方法创建的架构<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">架构包含表、 关系和约束定义。</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>To write a schema to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method.</source>
          <target state="translated">若要写入到 XML 文档的架构，使用<ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>The XML schema is interpreted according to the XSD standard.</source>
          <target state="translated">XML 架构被指根据 XSD 标准。</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>Data corruption can occur if the msdata:DataType and the xs:type types do not match.</source>
          <target state="translated">如果 msdata:DataType 和 xs:type 类型不匹配，则会发生数据损坏。</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>No exception will be thrown.</source>
          <target state="translated">会不引发任何异常。</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>The <ph id="ph1">`ReadXmlSchema`</ph> method is generally invoked before invoking the <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method which is used to fill the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`ReadXmlSchema`</ph>通常在调用之前调用方法<ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph>方法用于填充<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>To create a nested relation using XML schema, use implicit nested elements.</source>
          <target state="translated">若要创建使用 XML 架构的嵌套的关系，使用隐式的嵌套的元素。</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>You can also configure the nested relation to use explicit column names.</source>
          <target state="translated">你还可以配置要使用显式的列名称的嵌套的关系。</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>Elements must be implicitly nested in order for the corresponding DataTables to participate in a nested relation.</source>
          <target state="translated">元素必须隐式嵌套顺序对应的数据表中使用嵌套关系。</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>The following console application creates a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, and writes the schema for that table to a <ph id="ph2">&lt;xref:System.IO.MemoryStream&gt;</ph>.</source>
          <target state="translated">以下控制台应用程序创建一个新<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>，并将写入到该表的架构的<ph id="ph2">&lt;xref:System.IO.MemoryStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)">
          <source>Then, the example creates a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and reads its schema from the saved XML schema.</source>
          <target state="translated">然后，该示例创建一个新<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>，并读取其架构中的已保存的 XML 架构。</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> used to read the schema information.</source>
          <target state="translated">用于读取架构信息的 <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>Reads an XML schema into the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> 将 XML 架构读入 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> method to create the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph>方法创建的架构<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">架构包含表、 关系和约束定义。</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>To write a schema to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method.</source>
          <target state="translated">若要写入到 XML 文档的架构，使用<ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>The XML schema is interpreted according to the XSD standard.</source>
          <target state="translated">XML 架构被指根据 XSD 标准。</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>Data corruption can occur if the msdata:DataType and the xs:type types do not match.</source>
          <target state="translated">如果 msdata:DataType 和 xs:type 类型不匹配，则会发生数据损坏。</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>No exception will be thrown.</source>
          <target state="translated">会不引发任何异常。</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>The <ph id="ph1">`ReadXmlSchema`</ph> method is generally invoked before invoking the <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method which is used to fill the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`ReadXmlSchema`</ph>通常在调用之前调用方法<ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph>方法用于填充<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>To create a nested relation using XML schema, use implicit nested elements.</source>
          <target state="translated">若要创建使用 XML 架构的嵌套的关系，使用隐式的嵌套的元素。</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>You can also reconfigure the nested relation to use explicit column names.</source>
          <target state="translated">你还可以重新配置要使用显式的列名称的嵌套的关系。</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>Elements must be implicitly nested in order for the corresponding DataTables to participate in a nested relation.</source>
          <target state="translated">元素必须隐式嵌套顺序对应的数据表中使用嵌套关系。</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>The following console application creates a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, and writes the schema for that table to a <ph id="ph2">&lt;xref:System.IO.MemoryStream&gt;</ph>.</source>
          <target state="translated">以下控制台应用程序创建一个新<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>，并将写入到该表的架构的<ph id="ph2">&lt;xref:System.IO.MemoryStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)">
          <source>Then, the example creates a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and reads its schema from the saved XML schema, using a <ph id="ph2">&lt;xref:System.IO.StreamReader&gt;</ph> (which inherits from <ph id="ph3">&lt;xref:System.IO.TextReader&gt;</ph>) as its source.</source>
          <target state="translated">然后，该示例创建一个新<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>和从已保存的 XML 架构，读取其架构使用<ph id="ph2">&lt;xref:System.IO.StreamReader&gt;</ph>(其继承自<ph id="ph3">&lt;xref:System.IO.TextReader&gt;</ph>) 作为其源。</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>The name of the file from which to read the schema information.</source>
          <target state="translated">从中读取架构信息的文件的名称。</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>Reads an XML schema into the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> from the specified file.</source>
          <target state="translated">从指定的文件将 XML 架构读入 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> method to create the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph>方法创建的架构<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">架构包含表、 关系和约束定义。</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>To write a schema to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method.</source>
          <target state="translated">若要写入到 XML 文档的架构，使用<ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>The XML schema is interpreted according to the XSD standard.</source>
          <target state="translated">XML 架构被指根据 XSD 标准。</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>Data corruption can occur if the msdata:DataType and the xs:type types do not match.</source>
          <target state="translated">如果 msdata:DataType 和 xs:type 类型不匹配，则会发生数据损坏。</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>No exception will be thrown.</source>
          <target state="translated">会不引发任何异常。</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>The <ph id="ph1">`ReadXmlSchema`</ph> method is generally invoked before invoking the <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method which is used to fill the <ph id="ph3">`DataTable`</ph>.</source>
          <target state="translated"><ph id="ph1">`ReadXmlSchema`</ph>通常在调用之前调用方法<ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph>方法用于填充<ph id="ph3">`DataTable`</ph>。</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>To create a nested relation using XML schema, use implicit nested elements.</source>
          <target state="translated">若要创建使用 XML 架构的嵌套的关系，使用隐式的嵌套的元素。</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>You can also reconfigure the nested relation to use explicit column names.</source>
          <target state="translated">你还可以重新配置要使用显式的列名称的嵌套的关系。</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>Elements must be implicitly nested in order for the corresponding DataTables to participate in a nested relation.</source>
          <target state="translated">元素必须隐式嵌套顺序对应的数据表中使用嵌套关系。</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>The following console application creates a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, and writes the schema for that table to a file.</source>
          <target state="translated">以下控制台应用程序创建一个新<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>，并将该表的架构写入文件。</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.String)">
          <source>Then, the example creates a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and reads its schema from the saved XML schema, using the file as its source.</source>
          <target state="translated">然后，该示例创建一个新<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>而且从已保存的 XML 架构，读取其架构作为其源使用的文件。</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> used to read the schema information.</source>
          <target state="translated">用于读取架构信息的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>Reads an XML schema into the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 将 XML 架构读入 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> method to create the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph>方法创建的架构<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">架构包含表、 关系和约束定义。</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>To write a schema to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method.</source>
          <target state="translated">若要写入到 XML 文档的架构，使用<ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>The XML schema is interpreted according to the XSD standard.</source>
          <target state="translated">XML 架构被指根据 XSD 标准。</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>Data corruption can occur if the msdata:DataType and the xs:type types do not match.</source>
          <target state="translated">如果 msdata:DataType 和 xs:type 类型不匹配，则会发生数据损坏。</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>No exception will be thrown.</source>
          <target state="translated">会不引发任何异常。</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>The <ph id="ph1">`ReadXmlSchema`</ph> method is generally invoked before invoking the <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> method which is used to fill the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`ReadXmlSchema`</ph>通常在调用之前调用方法<ph id="ph2">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph>方法用于填充<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>The way to create a nested relation using XML schema is to have implicit nested elements.</source>
          <target state="translated">创建使用 XML 架构的嵌套的关系的方法是具有隐式的嵌套的元素。</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>Additionally, the nested relation could be re-wired, to use explicit column names.</source>
          <target state="translated">此外，将嵌套的关系可能是重新配置为使用显式的列名称。</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>It is mandatory for elements to be implicitly nested for the corresponding DataTables to participate in a nested relation.</source>
          <target state="translated">它是必需的元素，隐式嵌套为相应的数据表中使用嵌套关系。</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>The following console application creates a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, and writes the schema for that table to a <ph id="ph2">&lt;xref:System.IO.MemoryStream&gt;</ph>.</source>
          <target state="translated">以下控制台应用程序创建一个新<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>，并将写入到该表的架构的<ph id="ph2">&lt;xref:System.IO.MemoryStream&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)">
          <source>Then, the example creates a new <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> and reads its schema from the saved XML schema, using a <ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph> (which inherits from <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph>) as its source.</source>
          <target state="translated">然后，该示例创建一个新<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>和从已保存的 XML 架构，读取其架构使用<ph id="ph2">&lt;xref:System.Xml.XmlTextReader&gt;</ph>(其继承自<ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph>) 作为其源。</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)">
          <source>Reads from an XML stream.</source>
          <target state="translated">从 XML 流中读取。</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.RejectChanges">
          <source>Rolls back all changes that have been made to the table since it was loaded, or the last time <ph id="ph1">&lt;see cref="M:System.Data.DataTable.AcceptChanges" /&gt;</ph> was called.</source>
          <target state="translated">回滚自该表加载以来或上次调用 <ph id="ph1">&lt;see cref="M:System.Data.DataTable.AcceptChanges" /&gt;</ph> 以来对该表进行的所有更改。</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.RejectChanges">
          <source>When <ph id="ph1">&lt;xref:System.Data.DataTable.RejectChanges%2A&gt;</ph> is called, any <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objects that are still in edit-mode cancel their edits.</source>
          <target state="translated">当<ph id="ph1">&lt;xref:System.Data.DataTable.RejectChanges%2A&gt;</ph>调用时，任何<ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>是否仍处于编辑模式的对象将取消其编辑。</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.RejectChanges">
          <source>New rows are removed.</source>
          <target state="translated">新行被移除。</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.RejectChanges">
          <source>Rows with the <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> set to <ph id="ph2">`Modified`</ph> or <ph id="ph3">`Deleted`</ph> return back to their original state.</source>
          <target state="translated">与行<ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph>设置为<ph id="ph2">`Modified`</ph>或<ph id="ph3">`Deleted`</ph>返回回其原始状态。</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.RejectChanges">
          <source>The following example makes several changes to a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, but rejects the changes by invoking the <ph id="ph2">&lt;xref:System.Data.DataTable.RejectChanges%2A&gt;</ph> method.</source>
          <target state="translated">下面的示例进行几次更改到<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>，但通过调用拒绝所做的更改<ph id="ph2">&lt;xref:System.Data.DataTable.RejectChanges%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.RemotingFormat">
          <source>Gets or sets the serialization format.</source>
          <target state="translated">获取或设置序列化格式。</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.RemotingFormat">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SerializationFormat" /&gt;</ph> enumeration specifying either <ph id="ph2">&lt;see langword="Binary" /&gt;</ph> or <ph id="ph3">&lt;see langword="Xml" /&gt;</ph> serialization.</source>
          <target state="translated">指定 <ph id="ph2">&lt;see langword="Binary" /&gt;</ph> 或 <ph id="ph3">&lt;see langword="Xml" /&gt;</ph> 序列化的 <ph id="ph1">&lt;see cref="T:System.Data.SerializationFormat" /&gt;</ph> 枚举。</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Reset">
          <source>Resets the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to its original state.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 重置为其初始状态。</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Reset">
          <source>Reset removes all data, indexes, relations, and columns of the table.</source>
          <target state="translated">重置将移除表的所有数据、索引、关系和列。</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Reset">
          <source>If a DataSet includes a DataTable, the table will still be part of the DataSet after the table is reset.</source>
          <target state="translated">如果数据集包含一个数据表，则在重置该表之后，它将仍是数据集的一部分。</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" uid="E:System.Data.DataTable.RowChanged">
          <source>Occurs after a <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> has been changed successfully.</source>
          <target state="translated">在成功更改 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 后发生。</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.RowChanged">
          <source>For more information, see <bpt id="p1">[</bpt>Handling DataTable Events<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理数据表事件<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" uid="E:System.Data.DataTable.RowChanging">
          <source>Occurs when a <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> is changing.</source>
          <target state="translated">在更改 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 时发生。</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.RowChanging">
          <source>For more information, see <bpt id="p1">[</bpt>Handling DataTable Events<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理数据表事件<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" uid="E:System.Data.DataTable.RowDeleted">
          <source>Occurs after a row in the table has been deleted.</source>
          <target state="translated">删除表中的行后发生。</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.RowDeleted">
          <source>For more information, see <bpt id="p1">[</bpt>Handling DataTable Events<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理数据表事件<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" uid="E:System.Data.DataTable.RowDeleting">
          <source>Occurs before a row in the table is about to be deleted.</source>
          <target state="translated">要删除表中的行之前发生。</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.RowDeleting">
          <source>For more information, see <bpt id="p1">[</bpt>Handling DataTable Events<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>处理数据表事件<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md)</ept>。</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.Rows">
          <source>Gets the collection of rows that belong to this table.</source>
          <target state="translated">获取属于该表的行的集合。</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Rows">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRowCollection" /&gt;</ph> that contains <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects; otherwise a null value if no <ph id="ph3">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects exist.</source>
          <target state="translated">包含 <ph id="ph1">&lt;see cref="T:System.Data.DataRowCollection" /&gt;</ph> 对象的 <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>；否则为 null 值（如果不存在任何 <ph id="ph3">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 对象）。</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Rows">
          <source>To create a new <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>, you must use the <ph id="ph2">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> method to return a new object.</source>
          <target state="translated">若要创建一个新<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>，必须使用<ph id="ph2">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph>方法以返回一个新的对象。</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Rows">
          <source>Such an object is automatically configured according to the schema defined for the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> through its collection of <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> objects.</source>
          <target state="translated">此类对象将自动配置为定义的架构根据<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>通过其集合<ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Rows">
          <source>After creating a new row and setting the values for each column in the row, add the row to the <ph id="ph1">&lt;xref:System.Data.DataRowCollection&gt;</ph> using the <ph id="ph2">`Add`</ph> method.</source>
          <target state="translated">在创建新行并设置行中的每个列的值之后, 向其中添加行<ph id="ph1">&lt;xref:System.Data.DataRowCollection&gt;</ph>使用<ph id="ph2">`Add`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Rows">
          <source>Each <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> in the collection represents a row of data in the table.</source>
          <target state="translated">每个<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>集合中表示表中的数据行。</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Rows">
          <source>To commit a change to the value of a column in the row, you must invoke the <ph id="ph1">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> method.</source>
          <target state="translated">若要将更改提交到行中列的值，必须调用<ph id="ph1">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Rows">
          <source>The following shows two examples of returning and setting rows.</source>
          <target state="translated">下面显示了返回并设置行的两个示例。</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Rows">
          <source>The first example uses the <ph id="ph1">&lt;xref:System.Data.DataTable.Rows%2A&gt;</ph> property and prints the value of each column for every row.</source>
          <target state="translated">第一个示例使用<ph id="ph1">&lt;xref:System.Data.DataTable.Rows%2A&gt;</ph>属性，并输出每个列的每一行的值。</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Rows">
          <source>The second example uses the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> object's <ph id="ph2">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> method to create a new <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> object with the schema of the <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">第二个示例使用<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>对象的<ph id="ph2">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph>方法来创建一个新<ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph>与的架构对象<ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Rows">
          <source>After setting the row values, the row is added to the <ph id="ph1">&lt;xref:System.Data.DataRowCollection&gt;</ph> through the <ph id="ph2">`Add`</ph> method.</source>
          <target state="translated">设置行值之后, 的行被添加到<ph id="ph1">&lt;xref:System.Data.DataRowCollection&gt;</ph>通过<ph id="ph2">`Add`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>Gets an array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 对象数组。</target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select">
          <source>Gets an array of all <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects.</source>
          <target state="translated">获取由所有 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 对象组成的数组。</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 对象数组。</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select">
          <source>To ensure the proper sort order, specify sort criteria with <ph id="ph1">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph>.</source>
          <target state="translated">若要确保正确的排序顺序，指定与排序条件<ph id="ph1">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select">
          <source>The following example returns an array of <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> objects through the <ph id="ph2">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph> method.</source>
          <target state="translated">下面的示例返回的数组<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>对象通过<ph id="ph2">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String)">
          <source>The criteria to use to filter the rows.</source>
          <target state="translated">用于筛选行的条件。</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String)">
          <source>For examples on how to filter rows, see <bpt id="p1">[</bpt>DataView RowFilter Syntax [C#]<ept id="p1">](http://www.csharp-examples.net/dataview-rowfilter/)</ept>.</source>
          <target state="translated">有关如何筛选行的示例，请参阅 <bpt id="p1">[</bpt>DataView RowFilter 语法 [C#]<ept id="p1">](http://www.csharp-examples.net/dataview-rowfilter/)</ept>。</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String)">
          <source>Gets an array of all <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects that match the filter criteria.</source>
          <target state="translated">获取由与筛选条件匹配的所有 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 对象组成的数组。</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 对象数组。</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select(System.String)">
          <source>To create the <ph id="ph1">`filterExpression`</ph> argument, use the same rules that apply to the <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> class's <ph id="ph3">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> property value for creating filters.</source>
          <target state="translated">若要创建<ph id="ph1">`filterExpression`</ph>自变量，使用相同的规则适用于<ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph>类的<ph id="ph3">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph>创建筛选器的属性值。</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select(System.String)">
          <source>To ensure the proper sort order, specify sort criteria with <ph id="ph1">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph>.</source>
          <target state="translated">若要确保正确的排序顺序，指定与排序条件<ph id="ph1">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select(System.String)">
          <source>If the column on the filter contains a null value, it will not be part of the result.</source>
          <target state="translated">如果筛选器上的列包含 null 值，它将不是结果的一部分。</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select(System.String)">
          <source>The following example uses a filter expression to return an array of <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> objects.</source>
          <target state="translated">下面的示例使用筛选器表达式返回的数组<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String,System.String)">
          <source>The criteria to use to filter the rows.</source>
          <target state="translated">用于筛选行的条件。</target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String,System.String)">
          <source>For examples on how to filter rows, see <bpt id="p1">[</bpt>DataView RowFilter Syntax [C#]<ept id="p1">](http://www.csharp-examples.net/dataview-rowfilter/)</ept>.</source>
          <target state="translated">有关如何筛选行的示例，请参阅 <bpt id="p1">[</bpt>DataView RowFilter 语法 [C#]<ept id="p1">](http://www.csharp-examples.net/dataview-rowfilter/)</ept>。</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String,System.String)">
          <source>A string specifying the column and sort direction.</source>
          <target state="translated">指定列和排序方向的字符串。</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String,System.String)">
          <source>Gets an array of all <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects that match the filter criteria, in the specified sort order.</source>
          <target state="translated">以指定排序顺序，获取由与筛选条件匹配的所有 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 对象组成的数组。</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String,System.String)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects matching the filter expression.</source>
          <target state="translated">由与筛选条件匹配的 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 对象组成的数组。</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select(System.String,System.String)">
          <source>To form the <ph id="ph1">`filterExpression`</ph> argument, use the same rules for creating the <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> class's <ph id="ph3">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> property value.</source>
          <target state="translated">向窗体<ph id="ph1">`filterExpression`</ph>自变量，用于创建使用相同的规则<ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph>类的<ph id="ph3">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph>属性值。</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select(System.String,System.String)">
          <source>The <ph id="ph1">`Sort`</ph> argument also uses the same rules for creating class's <ph id="ph2">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> strings.</source>
          <target state="translated"><ph id="ph1">`Sort`</ph>自变量还会将相同的规则用于创建类的<ph id="ph2">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph>字符串。</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select(System.String,System.String)">
          <source>If the column on the filter contains a null value, it will not be part of the result.</source>
          <target state="translated">如果筛选器上的列包含 null 值，它将不是结果的一部分。</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select(System.String,System.String)">
          <source>The following example uses a filter expression to return an array of <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> objects.</source>
          <target state="translated">下面的示例使用筛选器表达式返回的数组<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
          <source>The criteria to use to filter the rows.</source>
          <target state="translated">用于筛选行的条件。</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
          <source>For examples on how to filter rows, see <bpt id="p1">[</bpt>DataView RowFilter Syntax [C#]<ept id="p1">](http://www.csharp-examples.net/dataview-rowfilter/)</ept>.</source>
          <target state="translated">有关如何筛选行的示例，请参阅 <bpt id="p1">[</bpt>DataView RowFilter 语法 [C#]<ept id="p1">](http://www.csharp-examples.net/dataview-rowfilter/)</ept>。</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
          <source>A string specifying the column and sort direction.</source>
          <target state="translated">指定列和排序方向的字符串。</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.DataViewRowState" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataViewRowState" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
          <source>Gets an array of all <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects that match the filter in the order of the sort that match the specified state.</source>
          <target state="translated">以与指定状态匹配的排序顺序，获取由与筛选条件匹配的所有 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 对象组成的数组。</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 对象数组。</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
          <source>To form the <ph id="ph1">`filterExpression`</ph> argument, use the same rules for creating the <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> class's <ph id="ph3">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> property value.</source>
          <target state="translated">向窗体<ph id="ph1">`filterExpression`</ph>自变量，用于创建使用相同的规则<ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph>类的<ph id="ph3">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph>属性值。</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
          <source>The <ph id="ph1">`Sort`</ph> argument also uses the same rules for creating class's <ph id="ph2">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph> strings.</source>
          <target state="translated"><ph id="ph1">`Sort`</ph>自变量还会将相同的规则用于创建类的<ph id="ph2">&lt;xref:System.Data.DataColumn.Expression%2A&gt;</ph>字符串。</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
          <source>If the column on the filter contains a null value, it will not be part of the result.</source>
          <target state="translated">如果筛选器上的列包含 null 值，它将不是结果的一部分。</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
          <source>The following example uses a filter expression and record state to return an array of <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> objects.</source>
          <target state="translated">下面的示例使用筛选器表达式和记录状态返回的数组<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.Site">
          <source>Gets or sets an <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">获取或设置 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Site">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> 的一个 <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.Site">
          <source>Sites bind a <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> to a <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph> and enable communication between them, as well as provide a way for the container to manage its components.</source>
          <target state="translated">站点绑定<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>到<ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph>和启用它们之间的通信，以及为要管理其组件的容器提供的方法。</target>       </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="P:System.ComponentModel.IListSource.ContainsListCollection" /&gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅 <ph id="ph1">&lt;see cref="P:System.ComponentModel.IListSource.ContainsListCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the collection is a collection of <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> objects; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果集合是 <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> 对象集合，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则，为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.ComponentModel.IListSource.GetList" /&gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅 <ph id="ph1">&lt;see cref="M:System.ComponentModel.IListSource.GetList" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> that can be bound to a data source from the object.</source>
          <target state="translated">对象中可以绑定到数据源的 <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" /&gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅 <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> that describes the XML representation of the object that is produced by the <ph id="ph2">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /&gt;</ph> method and consumed by the <ph id="ph3">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /&gt;</ph> method.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph>，描述由 <ph id="ph2">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /&gt;</ph> 方法生成并由 <ph id="ph3">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /&gt;</ph> 方法使用的对象的 XML 表示形式。</target>       </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
          <source>An XmlReader.</source>
          <target state="translated">XmlReader。</target>       </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /&gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅 <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
          <source>An XmlWriter.</source>
          <target state="translated">XmlWriter。</target>       </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /&gt;</ph>.</source>
          <target state="translated">有关此成员的说明，请参阅 <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">此成员是显式的接口成员实现。</target>       </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> interface.</source>
          <target state="translated">它只能在 <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> 实例强制转换为 <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> 接口时使用。</target>       </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" uid="E:System.Data.DataTable.TableCleared">
          <source>Occurs after a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> is cleared.</source>
          <target state="translated">清除 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 后发生。</target>       </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.TableCleared">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.TableCleared&gt;</ph> event is fired immediately after all rows have been successfully cleared but before the <ph id="ph2">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph> method returns control back to the caller.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.TableCleared&gt;</ph>成功之前清除所有行后立即激发事件<ph id="ph2">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph>方法将返回给调用方的控件。</target>       </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.TableCleared">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.TableCleared&gt;</ph> event is not fired if there are any exceptions during the clear operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.TableCleared&gt;</ph>如果清除操作中的任何异常不激发事件。</target>       </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" uid="E:System.Data.DataTable.TableClearing">
          <source>Occurs when a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> is cleared.</source>
          <target state="translated">清除 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 时发生。</target>       </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.TableClearing">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.TableClearing&gt;</ph> event is fired before processing of the <ph id="ph2">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph> operation begins.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.TableClearing&gt;</ph>处理之前激发事件<ph id="ph2">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph>操作开始。</target>       </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.TableClearing">
          <source>This event is always fired when the <ph id="ph1">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph> method is invoked, even if the table contains zero rows.</source>
          <target state="translated">此事件始终会激发<ph id="ph1">&lt;xref:System.Data.DataTable.Clear%2A&gt;</ph>调用方法时，即使表包含零行。</target>       </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.TableName">
          <source>Gets or sets the name of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的名称。</target>       </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.TableName">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的名称。</target>       </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.TableName">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> is used to return this table from the parent <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> object's <ph id="ph3">&lt;xref:System.Data.DataTableCollection&gt;</ph> (returned by the <ph id="ph4">&lt;xref:System.Data.DataSet.Tables%2A&gt;</ph> property).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph>用于从父返回此表<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>对象的<ph id="ph3">&lt;xref:System.Data.DataTableCollection&gt;</ph>(返回<ph id="ph4">&lt;xref:System.Data.DataSet.Tables%2A&gt;</ph>属性)。</target>       </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataTable.TableName">
          <source>The following example prints the <ph id="ph1">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> for each table in a collection of <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects.</source>
          <target state="translated">下面的示例将打印<ph id="ph1">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph>为集合中的每个表<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.TableName">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> or empty string ("") is passed in and this table belongs to a collection.</source>
          <target state="translated">传入 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 或空字符串 ("")，此表属于一个集合。</target>       </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.TableName">
          <source>The table belongs to a collection that already has a table with the same name.</source>
          <target state="translated">该表属于一个集合，该集合已包含同名的表。</target>       </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" uid="P:System.Data.DataTable.TableName">
          <source>(Comparison is case-sensitive).</source>
          <target state="translated">（比较区分大小写）。</target>       </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" uid="E:System.Data.DataTable.TableNewRow">
          <source>Occurs when a new <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> is inserted.</source>
          <target state="translated">插入新的 <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> 时发生。</target>       </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.TableNewRow">
          <source>Fires after a new <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> has been created using <ph id="ph2">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph>.</source>
          <target state="translated">后的激发<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>已经使用创建<ph id="ph2">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.TableNewRow">
          <source>This event is fired before the invoked <ph id="ph1">`NewRow`</ph> method returns.</source>
          <target state="translated">此事件激发之前调用<ph id="ph1">`NewRow`</ph>方法返回。</target>       </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataTable.TableNewRow">
          <source>The new <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> instance is detached; it has not been added to the collection.</source>
          <target state="translated">新<ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>分离实例; 不添加到集合。</target>       </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ToString">
          <source>Gets the <ph id="ph1">&lt;see cref="P:System.Data.DataTable.TableName" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Data.DataTable.DisplayExpression" /&gt;</ph>, if there is one as a concatenated string.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="P:System.Data.DataTable.TableName" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="P:System.Data.DataTable.DisplayExpression" /&gt;</ph>（如果有一个用作连接字符串）。</target>       </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.ToString">
          <source>A string consisting of the <ph id="ph1">&lt;see cref="P:System.Data.DataTable.TableName" /&gt;</ph> and the <ph id="ph2">&lt;see cref="P:System.Data.DataTable.DisplayExpression" /&gt;</ph> values.</source>
          <target state="translated">一个由 <ph id="ph1">&lt;see cref="P:System.Data.DataTable.TableName" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="P:System.Data.DataTable.DisplayExpression" /&gt;</ph> 值字符串。</target>       </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ToString">
          <source>Gets the <ph id="ph1">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.DisplayExpression%2A&gt;</ph> for the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
          <target state="translated">获取<ph id="ph1">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataTable.DisplayExpression%2A&gt;</ph>为<ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.ToString">
          <source>The following example returns the <ph id="ph1">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.DisplayExpression%2A&gt;</ph> using the <ph id="ph3">&lt;xref:System.Data.DataTable.ToString%2A&gt;</ph> method.</source>
          <target state="translated">下面的示例返回<ph id="ph1">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataTable.DisplayExpression%2A&gt;</ph>使用<ph id="ph3">&lt;xref:System.Data.DataTable.ToString%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>Writes the current contents of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as XML.</source>
          <target state="translated">以 XML 形式写入 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的当前内容。</target>       </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>方法提供了编写只将数据方法或数据和架构从<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>插入 XML 文档，而<ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法将写入仅的架构。</target>       </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>To write both data and schema, use one of the overloads that include the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">若要编写数据和架构，使用包含的重载之一<ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph>参数，并将其值设置为<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">请注意，同样适用于<ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph>方法，分别。</target>       </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">读取 XML 数据或架构和数据读入<ph id="ph1">`DataTable`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要只读取架构，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，却未实现<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The following console application creates two <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instances, adds each to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, creates a <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> relating the two tables, and then uses the <ph id="ph4">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method to write the data contained within the parent table to a <ph id="ph5">&lt;xref:System.IO.TextWriter&gt;</ph>.</source>
          <target state="translated">以下控制台应用程序创建两个<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>实例，将每个<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>，创建<ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph>相关的两个表，，然后使用<ph id="ph4">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>方法写入到父表中包含的数据<ph id="ph5">&lt;xref:System.IO.TextWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The example demonstrates the behavior when setting the <ph id="ph1">`writeHierarchy`</ph> parameter to each of its values.</source>
          <target state="translated">设置时，此示例演示行为<ph id="ph1">`writeHierarchy`</ph>到每个其值的参数。</target>       </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>This example shows how to use one of the overloaded versions of WriteXml.</source>
          <target state="translated">此示例演示如何使用 WriteXml 的重载版本之一。</target>       </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>For other examples that might be available, see the individual overload topics.</source>
          <target state="translated">有关可能会提供其他示例，请参阅各个重载主题。</target>       </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The example displays the following output in the console window:</source>
          <target state="translated">该示例在控制台窗口中显示以下输出：</target>       </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
          <source>The stream to which the data will be written.</source>
          <target state="translated">要向其写入数据的流。</target>       </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
          <source>Writes the current contents of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as XML using the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">通过指定的 <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>，按 XML 形式编写 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的当前内容。</target>       </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>方法提供了编写只将数据方法或数据和架构从<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>插入 XML 文档，而<ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法将写入仅的架构。</target>       </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">若要编写数据和架构，使用包含的重载之一<ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph>参数，并将其值设置为<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">请注意，同样适用于<ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph>方法，分别。</target>       </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">读取 XML 数据或架构和数据读入<ph id="ph1">`DataTable`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要只读取架构，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，却未实现<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> with which to write the content.</source>
          <target state="translated">用于写入内容的 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
          <source>Writes the current contents of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as XML using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">通过指定的 <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>，按 XML 形式编写 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的当前内容。</target>       </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>方法提供了编写只将数据方法或数据和架构从<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>插入 XML 文档，而<ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法将写入仅的架构。</target>       </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">若要编写数据和架构，使用包含的重载之一<ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph>参数，并将其值设置为<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">请注意，同样适用于<ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph>方法，分别。</target>       </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">读取 XML 数据或架构和数据读入<ph id="ph1">`DataTable`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要只读取架构，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，却未实现<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String)">
          <source>The file to which to write the XML data.</source>
          <target state="translated">要向其写入 XML 数据的文件。</target>       </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String)">
          <source>Writes the current contents of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as XML using the specified file.</source>
          <target state="translated">使用指定的文件以 XML 形式写入 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的当前内容。</target>       </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>方法提供了编写只将数据方法或数据和架构从<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>插入 XML 文档，而<ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法将写入仅的架构。</target>       </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">若要编写数据和架构，使用包含的重载之一<ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph>参数，并将其值设置为<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">请注意，同样适用于<ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph>方法，分别。</target>       </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">读取 XML 数据或架构和数据读入<ph id="ph1">`DataTable`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要只读取架构，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，却未实现<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> with which to write the contents.</source>
          <target state="translated">用于写入内容的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
          <source>Writes the current contents of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as XML using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">通过指定的 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>，按 XML 形式编写 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的当前内容。</target>       </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>方法提供了编写只将数据方法或数据和架构从<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>插入 XML 文档，而<ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法将写入仅的架构。</target>       </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
          <source>To write both data and schema, use one of the overloads that include the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">若要编写数据和架构，使用包含的重载之一<ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph>参数，并将其值设置为<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">请注意，同样适用于<ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph>方法，分别。</target>       </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">读取 XML 数据或架构和数据读入<ph id="ph1">`DataTable`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要只读取架构，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，却未实现<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
          <source>The stream to which the data will be written.</source>
          <target state="translated">要向其写入数据的流。</target>       </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, write the contents of the current table and all its descendants.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则写入当前表及其所有子代的内容。</target>       </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph> (the default value), write the data for the current table only.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>（默认值），则只写入当前表的数据。</target>       </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
          <source>Writes the current contents of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as XML using the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">通过指定的 <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>，按 XML 形式编写 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的当前内容。</target>       </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
          <source>To save the data for the table and all its descendants, set the <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">若要保存该表及其所有子代的数据，请将 <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> 参数设置为 <ph id="ph2">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to an XML document.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法写入的架构<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>到 XML 文档。</target>       </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">架构包含表、 关系和约束定义。</target>       </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">使用 XSD 标准编写 XML 架构。</target>       </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">若要将数据写入到 XML 文档，使用<ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
          <source>Normally the <ph id="ph1">`WriteXml`</ph> method writes the data only for the current table.</source>
          <target state="translated">通常<ph id="ph1">`WriteXml`</ph>方法将写入当前表的数据。</target>       </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
          <source>To write the data for the current table and all of its descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">要写入当前表和所有其后代的数据相关的表，请调用此方法的<ph id="ph1">`writeHierarchy`</ph>参数设置为<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，却未实现<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>The stream to which the data will be written.</source>
          <target state="translated">要向其写入数据的流。</target>       </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>Writes the current data, and optionally the schema, for the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to the specified file using the specified <ph id="ph2">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph2">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> 将 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的当前数据和架构（可选）写入指定的文件。</target>       </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>To write the schema, set the value for the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</source>
          <target state="translated">若要写入架构，请将 <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> 参数的值设置为 <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>方法提供了编写只将数据方法或数据和架构从<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>插入 XML 文档，而<ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法将写入仅的架构。</target>       </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">若要编写数据和架构，使用包含的重载之一<ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph>参数，并将其值设置为<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">请注意，同样适用于<ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph>方法，分别。</target>       </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">读取 XML 数据或架构和数据读入<ph id="ph1">`DataTable`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要只读取架构，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，却未实现<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> with which to write the content.</source>
          <target state="translated">用于写入内容的 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, write the contents of the current table and all its descendants.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则写入当前表及其所有子代的内容。</target>       </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph> (the default value), write the data for the current table only.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>（默认值），则只写入当前表的数据。</target>       </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
          <source>Writes the current contents of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as XML using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">通过指定的 <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>，按 XML 形式编写 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的当前内容。</target>       </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
          <source>To save the data for the table and all its descendants, set the <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">若要保存该表及其所有子代的数据，请将 <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> 参数设置为 <ph id="ph2">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>方法提供了编写只将数据方法或数据和架构从<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>插入 XML 文档，而<ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法将写入仅的架构。</target>       </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">若要编写数据和架构，使用包含的重载之一<ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph>参数，并将其值设置为<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
          <source>Normally the <ph id="ph1">`WriteXml`</ph> method writes the data only for the current table.</source>
          <target state="translated">通常<ph id="ph1">`WriteXml`</ph>方法将写入当前表的数据。</target>       </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
          <source>To write the data for the current table and all its descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">若要写入当前表和及其所有子代和相关的表数据，请调用与方法<ph id="ph1">`writeHierarchy`</ph>参数设置为<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，却未实现<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
          <source>The following console application creates two <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instances, adds each to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, creates a <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> relating the two tables, and then uses the <ph id="ph4">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method to write the data contained within the parent table to a <ph id="ph5">&lt;xref:System.IO.TextWriter&gt;</ph>.</source>
          <target state="translated">以下控制台应用程序创建两个<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>实例，将每个<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>，创建<ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph>相关的两个表，，然后使用<ph id="ph4">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>方法写入到父表中包含的数据<ph id="ph5">&lt;xref:System.IO.TextWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)">
          <source>The example demonstrates the behavior when setting the <ph id="ph1">`writeHierarchy`</ph> parameter to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">设置时，此示例演示行为<ph id="ph1">`writeHierarchy`</ph>参数<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> used to write the document.</source>
          <target state="translated">用于写入文档的 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>Writes the current data, and optionally the schema, for the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> 写入 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的当前数据和架构（可选）。</target>       </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>To write the schema, set the value for the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</source>
          <target state="translated">若要写入架构，请将 <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> 参数的值设置为 <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>方法提供了编写只将数据方法或数据和架构从<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>插入 XML 文档，而<ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法将写入仅的架构。</target>       </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">若要编写数据和架构，使用包含的重载之一<ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph>参数，并将其值设置为<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">请注意，同样适用于<ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph>方法，分别。</target>       </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">读取 XML 数据或架构和数据读入<ph id="ph1">`DataTable`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要只读取架构，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，却未实现<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>The file to which to write the XML data.</source>
          <target state="translated">要向其写入 XML 数据的文件。</target>       </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, write the contents of the current table and all its descendants.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则写入当前表及其所有子代的内容。</target>       </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph> (the default value), write the data for the current table only.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>（默认值），则只写入当前表的数据。</target>       </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>Writes the current contents of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as XML using the specified file.</source>
          <target state="translated">使用指定的文件以 XML 形式写入 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的当前内容。</target>       </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>To save the data for the table and all its descendants, set the <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">若要保存该表及其所有子代的数据，请将 <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> 参数设置为 <ph id="ph2">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>方法提供了编写只将数据方法或数据和架构从<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>插入 XML 文档，而<ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法将写入仅的架构。</target>       </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">若要编写数据和架构，使用包含的重载之一<ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph>参数，并将其值设置为<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">请注意，同样适用于<ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph>方法，分别。</target>       </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">读取 XML 数据或架构和数据读入<ph id="ph1">`DataTable`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要只读取架构，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>Normally the <ph id="ph1">`WriteXml`</ph> method writes the data only for the current table.</source>
          <target state="translated">通常<ph id="ph1">`WriteXml`</ph>方法将写入当前表的数据。</target>       </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>To write the data for the current table and all of its descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">要写入当前表和所有其后代的数据相关的表，请调用此方法的<ph id="ph1">`writeHierarchy`</ph>参数设置为<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，却未实现<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>The name of the file to which the data will be written.</source>
          <target state="translated">将向其写入数据的文件名称。</target>       </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>Writes the current data, and optionally the schema, for the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using the specified file and <ph id="ph2">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</source>
          <target state="translated">使用指定的文件和 <ph id="ph2">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> 写入 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的当前数据和架构（可选）。</target>       </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>To write the schema, set the value for the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</source>
          <target state="translated">若要写入架构，请将 <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> 参数的值设置为 <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>方法提供了编写只将数据方法或数据和架构从<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>插入 XML 文档，而<ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法将写入仅的架构。</target>       </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>To write both data and schema, use one of the overloads that include the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">若要编写数据和架构，使用包含的重载之一<ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph>参数，并将其值设置为<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">请注意，同样适用于<ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph>方法，分别。</target>       </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">读取 XML 数据或架构和数据读入<ph id="ph1">`DataTable`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要只读取架构，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，却未实现<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> with which to write the contents.</source>
          <target state="translated">用于写入内容的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, write the contents of the current table and all its descendants.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则写入当前表及其所有子代的内容。</target>       </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph> (the default value), write the data for the current table only.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>（默认值），则只写入当前表的数据。</target>       </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
          <source>Writes the current contents of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as XML using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">通过指定的 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>，按 XML 形式编写 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的当前内容。</target>       </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>方法提供了编写只将数据方法或数据和架构从<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>插入 XML 文档，而<ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法将写入仅的架构。</target>       </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
          <source>To write both data and schema, use one of the overloads that include the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">若要编写数据和架构，使用包含的重载之一<ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph>参数，并将其值设置为<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">请注意，同样适用于<ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph>方法，分别。</target>       </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">读取 XML 数据或架构和数据读入<ph id="ph1">`DataTable`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要只读取架构，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
          <source>Normally the <ph id="ph1">`WriteXml`</ph> method writes the data only for the current table.</source>
          <target state="translated">通常<ph id="ph1">`WriteXml`</ph>方法将写入当前表的数据。</target>       </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
          <source>To write the data for the current table and its entire descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">若要写入当前表和及其所有子代和相关表的数据，调用与方法<ph id="ph1">`writeHierarchy`</ph>参数设置为<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，却未实现<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> used to write the document.</source>
          <target state="translated">用于写入文档的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>Writes the current data, and optionally the schema, for the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> 写入 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的当前数据和架构（可选）。</target>       </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>To write the schema, set the value for the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</source>
          <target state="translated">若要写入架构，请将 <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> 参数的值设置为 <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>方法提供了编写只将数据方法或数据和架构从<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>插入 XML 文档，而<ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法将写入仅的架构。</target>       </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>To write both data and schema, use one of the overloads that include the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">若要编写数据和架构，使用包含的重载之一<ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph>参数，并将其值设置为<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">请注意，同样适用于<ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph>方法，分别。</target>       </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">读取 XML 数据或架构和数据读入<ph id="ph1">`DataTable`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要只读取架构，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，却未实现<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>The stream to which the data will be written.</source>
          <target state="translated">要向其写入数据的流。</target>       </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, write the contents of the current table and all its descendants.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则写入当前表及其所有子代的内容。</target>       </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph> (the default value), write the data for the current table only.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>（默认值），则只写入当前表的数据。</target>       </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>Writes the current data, and optionally the schema, for the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> to the specified file using the specified <ph id="ph2">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph2">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> 将 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的当前数据和架构（可选）写入指定的文件。</target>       </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write the schema, set the value for the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</source>
          <target state="translated">若要写入架构，请将 <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> 参数的值设置为 <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>To save the data for the table and all its descendants, set the <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">若要保存该表及其所有子代的数据，请将 <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> 参数设置为 <ph id="ph2">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">`DataTable`</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>方法提供了编写只将数据方法或数据和架构从<ph id="ph2">`DataTable`</ph>插入 XML 文档，而<ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法将写入仅的架构。</target>       </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">`XmlWriteMode`</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">若要编写数据和架构，使用包含的重载之一<ph id="ph1">`XmlWriteMode`</ph>参数，并将其值设置为<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">请注意，同样适用于<ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph>方法，分别。</target>       </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">读取 XML 数据或架构和数据读入<ph id="ph1">`DataTable`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要只读取架构，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>Normally, the <ph id="ph1">`WriteXml`</ph> method saves data only for the current table.</source>
          <target state="translated">通常情况下，<ph id="ph1">`WriteXml`</ph>方法将仅对当前表的数据保存。</target>       </trans-unit>
        <trans-unit id="1365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">`DataTable`</ph> into an XML document, whereas the <ph id="ph3">`WriteXmlSchema`</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">`WriteXml`</ph>方法提供了编写只将数据方法或数据和架构从<ph id="ph2">`DataTable`</ph>插入 XML 文档，而<ph id="ph3">`WriteXmlSchema`</ph>方法将写入仅的架构。</target>       </trans-unit>
        <trans-unit id="1366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">`XmlWriteMode`</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">若要编写数据和架构，使用包含的重载之一<ph id="ph1">`XmlWriteMode`</ph>参数，并将其值设置为<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="1367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">请注意，同样适用于<ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph>方法，分别。</target>       </trans-unit>
        <trans-unit id="1368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">读取 XML 数据或架构和数据读入<ph id="ph1">`DataTable`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要只读取架构，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>Normally the <ph id="ph1">`WriteXml`</ph> method writes the data only for the current table.</source>
          <target state="translated">通常<ph id="ph1">`WriteXml`</ph>方法将写入当前表的数据。</target>       </trans-unit>
        <trans-unit id="1371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write the data for the current table and all of its descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">要写入当前表和所有其后代的数据相关的表，请调用此方法的<ph id="ph1">`writeHierarchy`</ph>参数设置为<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，却未实现<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1373" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> used to write the document.</source>
          <target state="translated">用于写入文档的 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1374" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="1375" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, write the contents of the current table and all its descendants.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则写入当前表及其所有子代的内容。</target>       </trans-unit>
        <trans-unit id="1376" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph> (the default value), write the data for the current table only.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>（默认值），则只写入当前表的数据。</target>       </trans-unit>
        <trans-unit id="1377" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>Writes the current data, and optionally the schema, for the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> 写入 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的当前数据和架构（可选）。</target>       </trans-unit>
        <trans-unit id="1378" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write the schema, set the value for the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</source>
          <target state="translated">若要写入架构，请将 <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> 参数的值设置为 <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1379" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To save the data for the table and all its descendants, set the <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">若要保存该表及其所有子代的数据，请将 <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> 参数设置为 <ph id="ph2">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>方法提供了编写只将数据方法或数据和架构从<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>插入 XML 文档，而<ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法将写入仅的架构。</target>       </trans-unit>
        <trans-unit id="1381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">若要编写数据和架构，使用包含的重载之一<ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph>参数，并将其值设置为<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="1382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">请注意，同样适用于<ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph>方法，分别。</target>       </trans-unit>
        <trans-unit id="1383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">读取 XML 数据或架构和数据读入<ph id="ph1">`DataTable`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要只读取架构，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>Normally, the <ph id="ph1">`WriteXml`</ph> method saves data only for the current table.</source>
          <target state="translated">通常情况下，<ph id="ph1">`WriteXml`</ph>方法将仅对当前表的数据保存。</target>       </trans-unit>
        <trans-unit id="1386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>方法提供了编写只将数据方法或数据和架构从<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>插入 XML 文档，而<ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法将写入仅的架构。</target>       </trans-unit>
        <trans-unit id="1387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">若要编写数据和架构，使用包含的重载之一<ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph>参数，并将其值设置为<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="1388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">请注意，同样适用于<ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph>方法，分别。</target>       </trans-unit>
        <trans-unit id="1389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">读取 XML 数据或架构和数据读入<ph id="ph1">`DataTable`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要只读取架构，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>Normally the <ph id="ph1">`WriteXml`</ph> method writes the data only for the current table.</source>
          <target state="translated">通常<ph id="ph1">`WriteXml`</ph>方法将写入当前表的数据。</target>       </trans-unit>
        <trans-unit id="1392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write the data for the current table and all of its descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">要写入当前表和所有其后代的数据相关的表，请调用此方法的<ph id="ph1">`writeHierarchy`</ph>参数设置为<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，却未实现<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>The following console application creates two <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instances, adds each to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, creates a <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> relating the two tables, and then uses the <ph id="ph4">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method to write the data contained within the parent table to a <ph id="ph5">&lt;xref:System.IO.TextWriter&gt;</ph>.</source>
          <target state="translated">以下控制台应用程序创建两个<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>实例，将每个<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>，创建<ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph>相关的两个表，，然后使用<ph id="ph4">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>方法写入到父表中包含的数据<ph id="ph5">&lt;xref:System.IO.TextWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>The example demonstrates the behavior when setting the <ph id="ph1">`writeHierarchy`</ph> parameter to each of its values.</source>
          <target state="translated">设置时，此示例演示行为<ph id="ph1">`writeHierarchy`</ph>到每个其值的参数。</target>       </trans-unit>
        <trans-unit id="1396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>The example displays the following output in the console window:</source>
          <target state="translated">该示例在控制台窗口中显示以下输出：</target>       </trans-unit>
        <trans-unit id="1397" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>The name of the file to which the data will be written.</source>
          <target state="translated">将向其写入数据的文件名称。</target>       </trans-unit>
        <trans-unit id="1398" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="1399" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, write the contents of the current table and all its descendants.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则写入当前表及其所有子代的内容。</target>       </trans-unit>
        <trans-unit id="1400" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph> (the default value), write the data for the current table only.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>（默认值），则只写入当前表的数据。</target>       </trans-unit>
        <trans-unit id="1401" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>Writes the current data, and optionally the schema, for the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using the specified file and <ph id="ph2">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</source>
          <target state="translated">使用指定的文件和 <ph id="ph2">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> 写入 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的当前数据和架构（可选）。</target>       </trans-unit>
        <trans-unit id="1402" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write the schema, set the value for the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</source>
          <target state="translated">若要写入架构，请将 <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> 参数的值设置为 <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1403" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>To save the data for the table and all its descendants, set the <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">若要保存该表及其所有子代的数据，请将 <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> 参数设置为 <ph id="ph2">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>方法提供了编写只将数据方法或数据和架构从<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>插入 XML 文档，而<ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法将写入仅的架构。</target>       </trans-unit>
        <trans-unit id="1405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write both data and schema, use one of the overloads that include the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">若要编写数据和架构，使用包含的重载之一<ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph>参数，并将其值设置为<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="1406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">请注意，同样适用于<ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph>方法，分别。</target>       </trans-unit>
        <trans-unit id="1407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">读取 XML 数据或架构和数据读入<ph id="ph1">`DataTable`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要只读取架构，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>Normally, the <ph id="ph1">`WriteXml`</ph> method saves data only for the current table.</source>
          <target state="translated">通常情况下，<ph id="ph1">`WriteXml`</ph>方法将仅对当前表的数据保存。</target>       </trans-unit>
        <trans-unit id="1410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>If you want to save the data for the current table and all of schema, the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated">如果你想要保存当前表和的架构，所有的数据<ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>方法提供了编写只将数据方法或数据和架构从<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>插入 XML 文档，而<ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法将写入仅的架构。</target>       </trans-unit>
        <trans-unit id="1411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write both data and schema, use one of the overloads that include the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">若要编写数据和架构，使用包含的重载之一<ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph>参数，并将其值设置为<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="1412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">请注意，同样适用于<ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph>方法，分别。</target>       </trans-unit>
        <trans-unit id="1413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">读取 XML 数据或架构和数据读入<ph id="ph1">`DataTable`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要只读取架构，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>Normally the <ph id="ph1">`WriteXml`</ph> method writes the data only for the current table.</source>
          <target state="translated">通常<ph id="ph1">`WriteXml`</ph>方法将写入当前表的数据。</target>       </trans-unit>
        <trans-unit id="1416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write the data for the current table and all descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">若要写入当前表和相关的所有子代的表数据，请调用与方法<ph id="ph1">`writeHierarchy`</ph>参数设置为<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，却未实现<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1418" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> used to write the document.</source>
          <target state="translated">用于写入文档的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1419" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> 值之一。</target>       </trans-unit>
        <trans-unit id="1420" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, write the contents of the current table and all its descendants.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则写入当前表及其所有子代的内容。</target>       </trans-unit>
        <trans-unit id="1421" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph> (the default value), write the data for the current table only.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>（默认值），则只写入当前表的数据。</target>       </trans-unit>
        <trans-unit id="1422" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>Writes the current data, and optionally the schema, for the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> 写入 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的当前数据和架构（可选）。</target>       </trans-unit>
        <trans-unit id="1423" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write the schema, set the value for the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</source>
          <target state="translated">若要写入架构，请将 <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> 参数的值设置为 <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1424" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To save the data for the table and all its descendants, set the <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">若要保存该表及其所有子代的数据，请将 <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> 参数设置为 <ph id="ph2">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>方法提供了编写只将数据方法或数据和架构从<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>插入 XML 文档，而<ph id="ph3">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法将写入仅的架构。</target>       </trans-unit>
        <trans-unit id="1426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write both data and schema, use one of the overloads that include the <ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">若要编写数据和架构，使用包含的重载之一<ph id="ph1">&lt;xref:System.Data.XmlWriteMode&gt;</ph>参数，并将其值设置为<ph id="ph2">`WriteSchema`</ph>。</target>       </trans-unit>
        <trans-unit id="1427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">请注意，同样适用于<ph id="ph1">&lt;xref:System.Data.DataTable.ReadXml%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Data.DataTable.ReadXmlSchema%2A&gt;</ph>方法，分别。</target>       </trans-unit>
        <trans-unit id="1428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataTable`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">读取 XML 数据或架构和数据读入<ph id="ph1">`DataTable`</ph>，使用<ph id="ph2">`ReadXml`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">若要只读取架构，使用<ph id="ph1">`ReadXmlSchema`</ph>方法。</target>       </trans-unit>
        <trans-unit id="1430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>Normally the <ph id="ph1">`WriteXml`</ph> method writes the data only for the current table.</source>
          <target state="translated">通常<ph id="ph1">`WriteXml`</ph>方法将写入当前表的数据。</target>       </trans-unit>
        <trans-unit id="1431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>To write the data for the current table and its entire descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">若要写入当前表和及其所有子代和相关表的数据，调用与方法<ph id="ph1">`writeHierarchy`</ph>参数设置为<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>如果中的列类型，将引发<ph id="ph2">`DataRow`</ph>正在读取或写入到实现<ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>，却未实现<ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1433" translate="yes" xml:space="preserve" uid="T:System.Data.DataTable">
          <source>Writes the current data structure of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as an XML schema.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的当前数据结构以 XML 架构形式写入。</target>       </trans-unit>
        <trans-unit id="1434" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to an XML document.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法写入的架构<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>到 XML 文档。</target>       </trans-unit>
        <trans-unit id="1435" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">架构包含表、 关系和约束定义。</target>       </trans-unit>
        <trans-unit id="1436" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">使用 XSD 标准编写 XML 架构。</target>       </trans-unit>
        <trans-unit id="1437" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">若要将数据写入到 XML 文档，使用<ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1438" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The following console application creates two <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instances, adds each to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, creates a <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> relating the two tables, and then uses the <ph id="ph4">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method to write the data contained within the parent table to a <ph id="ph5">&lt;xref:System.IO.TextWriter&gt;</ph>.</source>
          <target state="translated">以下控制台应用程序创建两个<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>实例，将每个<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>，创建<ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph>相关的两个表，，然后使用<ph id="ph4">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法写入到父表中包含的数据<ph id="ph5">&lt;xref:System.IO.TextWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1439" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The example demonstrates the behavior when setting the <ph id="ph1">`writeHierarchy`</ph> parameter to each of its values.</source>
          <target state="translated">设置时，此示例演示行为<ph id="ph1">`writeHierarchy`</ph>到每个其值的参数。</target>       </trans-unit>
        <trans-unit id="1440" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>This example shows how to use one of the overloaded versions of <ph id="ph1">`WriteXmlSchema`</ph> For other examples that might be available, see the individual overload topics.</source>
          <target state="translated">此示例演示如何使用的重载版本之一<ph id="ph1">`WriteXmlSchema`</ph>有关可能可用，其他示例，请参阅各个重载主题。</target>       </trans-unit>
        <trans-unit id="1441" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataTable">
          <source>The example displays the following output in the console window:</source>
          <target state="translated">该示例在控制台窗口中显示以下输出：</target>       </trans-unit>
        <trans-unit id="1442" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)">
          <source>The stream to which the XML schema will be written.</source>
          <target state="translated">要向其写入 XML 架构的流。</target>       </trans-unit>
        <trans-unit id="1443" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)">
          <source>Writes the current data structure of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as an XML schema to the specified stream.</source>
          <target state="translated">以 XML 架构的形式将 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的当前数据结构写入指定的流。</target>       </trans-unit>
        <trans-unit id="1444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to an XML document.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法写入的架构<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>到 XML 文档。</target>       </trans-unit>
        <trans-unit id="1445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">架构包含表、 关系和约束定义。</target>       </trans-unit>
        <trans-unit id="1446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">使用 XSD 标准编写 XML 架构。</target>       </trans-unit>
        <trans-unit id="1447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">若要将数据写入到 XML 文档，使用<ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1448" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> with which to write.</source>
          <target state="translated">用于写入的 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1449" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)">
          <source>Writes the current data structure of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as an XML schema using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 以 XML 架构的形式写入 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的当前数据结构。</target>       </trans-unit>
        <trans-unit id="1450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to an XML document.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法写入的架构<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>到 XML 文档。</target>       </trans-unit>
        <trans-unit id="1451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">架构包含表、 关系和约束定义。</target>       </trans-unit>
        <trans-unit id="1452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">使用 XSD 标准编写 XML 架构。</target>       </trans-unit>
        <trans-unit id="1453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">若要将数据写入到 XML 文档，使用<ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1454" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.String)">
          <source>The name of the file to use.</source>
          <target state="translated">要使用的文件的名称。</target>       </trans-unit>
        <trans-unit id="1455" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.String)">
          <source>Writes the current data structure of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as an XML schema to the specified file.</source>
          <target state="translated">以 XML 架构的形式将 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的当前数据结构写入指定的文件。</target>       </trans-unit>
        <trans-unit id="1456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to an XML document.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法写入的架构<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>到 XML 文档。</target>       </trans-unit>
        <trans-unit id="1457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.String)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">架构包含表、 关系和约束定义。</target>       </trans-unit>
        <trans-unit id="1458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.String)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">使用 XSD 标准编写 XML 架构。</target>       </trans-unit>
        <trans-unit id="1459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.String)">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">若要将数据写入到 XML 文档，使用<ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1460" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> to use.</source>
          <target state="translated">要使用的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1461" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>Writes the current data structure of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as an XML schema using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 以 XML 架构的形式写入 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的当前数据结构。</target>       </trans-unit>
        <trans-unit id="1462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to an XML document.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法写入的架构<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>到 XML 文档。</target>       </trans-unit>
        <trans-unit id="1463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">架构包含表、 关系和约束定义。</target>       </trans-unit>
        <trans-unit id="1464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">使用 XSD 标准编写 XML 架构。</target>       </trans-unit>
        <trans-unit id="1465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">若要将数据写入到 XML 文档，使用<ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1466" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
          <source>The stream to which the XML schema will be written.</source>
          <target state="translated">要向其写入 XML 架构的流。</target>       </trans-unit>
        <trans-unit id="1467" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, write the schema of the current table and all its descendants.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则写入当前表及其所有子代的架构。</target>       </trans-unit>
        <trans-unit id="1468" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph> (the default value), write the schema for the current table only.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>（默认值），则只写入当前表的架构。</target>       </trans-unit>
        <trans-unit id="1469" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
          <source>Writes the current data structure of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as an XML schema to the specified stream.</source>
          <target state="translated">以 XML 架构的形式将 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的当前数据结构写入指定的流。</target>       </trans-unit>
        <trans-unit id="1470" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
          <source>To save the schema for the table and all its descendants, set the <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">若要保存该表及其所有子代的架构，请将 <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> 参数设置为 <ph id="ph2">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to an XML document.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法写入的架构<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>到 XML 文档。</target>       </trans-unit>
        <trans-unit id="1472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">架构包含表、 关系和约束定义。</target>       </trans-unit>
        <trans-unit id="1473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">使用 XSD 标准编写 XML 架构。</target>       </trans-unit>
        <trans-unit id="1474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">若要将数据写入到 XML 文档，使用<ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
          <source>Normally the <ph id="ph1">`WriteXmlSchema`</ph> method writes the schema only for the current table.</source>
          <target state="translated">通常<ph id="ph1">`WriteXmlSchema`</ph>方法将写入当前表的架构。</target>       </trans-unit>
        <trans-unit id="1476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)">
          <source>To write the schema for the current table and its entire descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">若要写入当前表和及其所有子代和相关表的架构，调用与方法<ph id="ph1">`writeHierarchy`</ph>参数设置为<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1477" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> with which to write.</source>
          <target state="translated">用于写入的 <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1478" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, write the schema of the current table and all its descendants.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则写入当前表及其所有子代的架构。</target>       </trans-unit>
        <trans-unit id="1479" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph> (the default value), write the schema for the current table only.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>（默认值），则只写入当前表的架构。</target>       </trans-unit>
        <trans-unit id="1480" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>Writes the current data structure of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as an XML schema using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> 以 XML 架构的形式写入 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的当前数据结构。</target>       </trans-unit>
        <trans-unit id="1481" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>To save the schema for the table and all its descendants, set the <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">若要保存该表及其所有子代的架构，请将 <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> 参数设置为 <ph id="ph2">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to an XML document.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法写入的架构<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>到 XML 文档。</target>       </trans-unit>
        <trans-unit id="1483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">架构包含表、 关系和约束定义。</target>       </trans-unit>
        <trans-unit id="1484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">使用 XSD 标准编写 XML 架构。</target>       </trans-unit>
        <trans-unit id="1485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">若要将数据写入到 XML 文档，使用<ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>Normally the <ph id="ph1">`WriteXmlSchema`</ph> method writes the schema only for the current table.</source>
          <target state="translated">通常<ph id="ph1">`WriteXmlSchema`</ph>方法将写入当前表的架构。</target>       </trans-unit>
        <trans-unit id="1487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>To write the schema for the current table and its entire descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">若要写入当前表和及其所有子代和相关表的架构，调用与方法<ph id="ph1">`writeHierarchy`</ph>参数设置为<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>The following console application creates two <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instances, adds each to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, creates a <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> relating the two tables, and then uses the <ph id="ph4">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method to write the data contained within the parent table to a <ph id="ph5">&lt;xref:System.IO.TextWriter&gt;</ph>.</source>
          <target state="translated">以下控制台应用程序创建两个<ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>实例，将每个<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>，创建<ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph>相关的两个表，，然后使用<ph id="ph4">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法写入到父表中包含的数据<ph id="ph5">&lt;xref:System.IO.TextWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>The example demonstrates the behavior when setting the <ph id="ph1">`writeHierarchy`</ph> parameter to each of its values.</source>
          <target state="translated">设置时，此示例演示行为<ph id="ph1">`writeHierarchy`</ph>到每个其值的参数。</target>       </trans-unit>
        <trans-unit id="1490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)">
          <source>The example displays the following output in the console window:</source>
          <target state="translated">该示例在控制台窗口中显示以下输出：</target>       </trans-unit>
        <trans-unit id="1491" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
          <source>The name of the file to use.</source>
          <target state="translated">要使用的文件的名称。</target>       </trans-unit>
        <trans-unit id="1492" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, write the schema of the current table and all its descendants.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则写入当前表及其所有子代的架构。</target>       </trans-unit>
        <trans-unit id="1493" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph> (the default value), write the schema for the current table only.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>（默认值），则只写入当前表的架构。</target>       </trans-unit>
        <trans-unit id="1494" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
          <source>Writes the current data structure of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as an XML schema to the specified file.</source>
          <target state="translated">以 XML 架构的形式将 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的当前数据结构写入指定的文件。</target>       </trans-unit>
        <trans-unit id="1495" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
          <source>To save the schema for the table and all its descendants, set the <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">若要保存该表及其所有子代的架构，请将 <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> 参数设置为 <ph id="ph2">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to an XML document.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法写入的架构<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>到 XML 文档。</target>       </trans-unit>
        <trans-unit id="1497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">架构包含表、 关系和约束定义。</target>       </trans-unit>
        <trans-unit id="1498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">使用 XSD 标准编写 XML 架构。</target>       </trans-unit>
        <trans-unit id="1499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">若要将数据写入到 XML 文档，使用<ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
          <source>Normally the <ph id="ph1">`WriteXmlSchema`</ph> method writes the schema only for the current table.</source>
          <target state="translated">通常<ph id="ph1">`WriteXmlSchema`</ph>方法将写入当前表的架构。</target>       </trans-unit>
        <trans-unit id="1501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)">
          <source>To write the schema for the current table and its entire descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">若要写入当前表和及其所有子代和相关表的架构，调用与方法<ph id="ph1">`writeHierarchy`</ph>参数设置为<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="1502" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> used to write the document.</source>
          <target state="translated">用于写入文档的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1503" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, write the schema of the current table and all its descendants.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，则写入当前表及其所有子代的架构。</target>       </trans-unit>
        <trans-unit id="1504" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph> (the default value), write the schema for the current table only.</source>
          <target state="translated">如果为 <ph id="ph1">&lt;see langword="false" /&gt;</ph>（默认值），则只写入当前表的架构。</target>       </trans-unit>
        <trans-unit id="1505" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
          <source>Writes the current data structure of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> as an XML schema using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> 以 XML 架构的形式写入 <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> 的当前数据结构。</target>       </trans-unit>
        <trans-unit id="1506" translate="yes" xml:space="preserve" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
          <source>To save the schema for the table and all its descendants, set the <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">若要保存该表及其所有子代的架构，请将 <ph id="ph1">&lt;paramref name="writeHierarchy" /&gt;</ph> 参数设置为 <ph id="ph2">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to an XML document.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Data.DataTable.WriteXmlSchema%2A&gt;</ph>方法写入的架构<ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>到 XML 文档。</target>       </trans-unit>
        <trans-unit id="1508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">架构包含表、 关系和约束定义。</target>       </trans-unit>
        <trans-unit id="1509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">使用 XSD 标准编写 XML 架构。</target>       </trans-unit>
        <trans-unit id="1510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">若要将数据写入到 XML 文档，使用<ph id="ph1">&lt;xref:System.Data.DataTable.WriteXml%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="1511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
          <source>Normally the <ph id="ph1">`WriteXmlSchema`</ph> method writes the schema only for the current table.</source>
          <target state="translated">通常<ph id="ph1">`WriteXmlSchema`</ph>方法将写入当前表的架构。</target>       </trans-unit>
        <trans-unit id="1512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)">
          <source>To write the schema for the current table and its entire descendant, related tables, call the method with the <ph id="ph1">`writeHierarchy`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">若要写入当前表和及其所有子代和相关表的架构，调用与方法<ph id="ph1">`writeHierarchy`</ph>参数设置为<ph id="ph2">`true`</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>