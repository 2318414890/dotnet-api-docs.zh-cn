<Type Name="DataColumn" FullName="System.Data.DataColumn">
  <Metadata><Meta Name="ms.openlocfilehash" Value="56d56ee565c6ff3a2e65bde8937e195f1ada490c" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56388663" /></Metadata><TypeSignature Language="C#" Value="public class DataColumn : System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataColumn extends System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class DataColumn&#xA;Inherits MarshalByValueComponent" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataColumn : System::ComponentModel::MarshalByValueComponent" />
  <TypeSignature Language="F#" Value="type DataColumn = class&#xA;    inherit MarshalByValueComponent" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.MarshalByValueComponent</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
      <AttributeName>System.ComponentModel.DefaultProperty("ColumnName")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataColumnEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataColumnEditor, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataColumnEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataColumnEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataColumnEditor, Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="50b5e-101">表示 <see cref="T:System.Data.DataTable" /> 中的列的架构。</span><span class="sxs-lookup"><span data-stu-id="50b5e-101">Represents the schema of a column in a <see cref="T:System.Data.DataTable" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50b5e-102"><xref:System.Data.DataColumn>是用于创建的架构的基本构建块<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="50b5e-102">The <xref:System.Data.DataColumn> is the fundamental building block for creating the schema of a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="50b5e-103">通过添加一个或多个生成架构<xref:System.Data.DataColumn>对象添加到<xref:System.Data.DataColumnCollection>。</span><span class="sxs-lookup"><span data-stu-id="50b5e-103">You build the schema by adding one or more <xref:System.Data.DataColumn> objects to the <xref:System.Data.DataColumnCollection>.</span></span> <span data-ttu-id="50b5e-104">有关详细信息，请参阅[向数据表添加列](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md)。</span><span class="sxs-lookup"><span data-stu-id="50b5e-104">For more information, see [Adding Columns to a DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md).</span></span>  
  
 <span data-ttu-id="50b5e-105">每个<xref:System.Data.DataColumn>已<xref:System.Data.DataColumn.DataType%2A>属性，用于确定的数据类型<xref:System.Data.DataColumn>包含。</span><span class="sxs-lookup"><span data-stu-id="50b5e-105">Each <xref:System.Data.DataColumn> has a <xref:System.Data.DataColumn.DataType%2A> property that determines the kind of data the <xref:System.Data.DataColumn> contains.</span></span> <span data-ttu-id="50b5e-106">例如，您可以限制的数据类型为整数或字符串或小数位数。</span><span class="sxs-lookup"><span data-stu-id="50b5e-106">For example, you can restrict the data type to integers, or strings, or decimals.</span></span> <span data-ttu-id="50b5e-107">因为由包含数据的<xref:System.Data.DataTable>通常合并回其原始的数据源，必须匹配到数据源中的数据类型。</span><span class="sxs-lookup"><span data-stu-id="50b5e-107">Because data that is contained by the <xref:System.Data.DataTable> is typically merged back into its original data source, you must match the data types to those in the data source.</span></span> <span data-ttu-id="50b5e-108">有关详细信息，请参阅[ADO.NET 中的数据类型映射](~/docs/framework/data/adonet/data-type-mappings-in-ado-net.md)。</span><span class="sxs-lookup"><span data-stu-id="50b5e-108">For more information, see [Data Type Mappings in ADO.NET](~/docs/framework/data/adonet/data-type-mappings-in-ado-net.md).</span></span>  
  
 <span data-ttu-id="50b5e-109">属性，如<xref:System.Data.DataColumn.AllowDBNull%2A>， <xref:System.Data.DataColumn.Unique%2A>，和<xref:System.Data.DataColumn.ReadOnly%2A>施加的输入和更新数据，从而有助于保证数据完整性的限制。</span><span class="sxs-lookup"><span data-stu-id="50b5e-109">Properties such as <xref:System.Data.DataColumn.AllowDBNull%2A>, <xref:System.Data.DataColumn.Unique%2A>, and <xref:System.Data.DataColumn.ReadOnly%2A> put restrictions on the entry and updating of data, thereby helping to guarantee data integrity.</span></span> <span data-ttu-id="50b5e-110">此外可以使用<xref:System.Data.DataColumn.AutoIncrement%2A>， <xref:System.Data.DataColumn.AutoIncrementSeed%2A>，和<xref:System.Data.DataColumn.AutoIncrementStep%2A>属性来控制数据自动生成。</span><span class="sxs-lookup"><span data-stu-id="50b5e-110">You can also use the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties to control automatic data generation.</span></span> <span data-ttu-id="50b5e-111">有关详细信息<xref:System.Data.DataColumn.AutoIncrement%2A>列，请参阅[创建 AutoIncrement 列](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-autoincrement-columns.md)。</span><span class="sxs-lookup"><span data-stu-id="50b5e-111">For more information about <xref:System.Data.DataColumn.AutoIncrement%2A> columns, see [Creating AutoIncrement Columns](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-autoincrement-columns.md).</span></span> <span data-ttu-id="50b5e-112">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="50b5e-112">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="50b5e-113">此外需确保中的值<xref:System.Data.DataColumn>都是唯一的创建<xref:System.Data.UniqueConstraint>并将其添加到<xref:System.Data.ConstraintCollection>的<xref:System.Data.DataTable>到<xref:System.Data.DataColumn>所属。</span><span class="sxs-lookup"><span data-stu-id="50b5e-113">You can also make sure that values in a <xref:System.Data.DataColumn> are unique by creating a <xref:System.Data.UniqueConstraint> and adding it to the <xref:System.Data.ConstraintCollection> of the <xref:System.Data.DataTable> to which the <xref:System.Data.DataColumn> belongs.</span></span> <span data-ttu-id="50b5e-114">有关详细信息，请参阅[数据表约束](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md)。</span><span class="sxs-lookup"><span data-stu-id="50b5e-114">For more information, see [DataTable Constraints](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md).</span></span>  
  
 <span data-ttu-id="50b5e-115">若要创建之间的关系<xref:System.Data.DataColumn>对象创建<xref:System.Data.DataRelation>对象，并将其添加到<xref:System.Data.DataRelationCollection>的<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="50b5e-115">To create a relation between <xref:System.Data.DataColumn> objects, create a <xref:System.Data.DataRelation> object and add it to the <xref:System.Data.DataRelationCollection> of a <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="50b5e-116">可以使用<xref:System.Data.DataColumn.Expression%2A>属性的<xref:System.Data.DataColumn>要计算的列中值的对象或创建聚合列。</span><span class="sxs-lookup"><span data-stu-id="50b5e-116">You can use the <xref:System.Data.DataColumn.Expression%2A> property of the <xref:System.Data.DataColumn> object to calculate the values in a column, or create an aggregate column.</span></span> <span data-ttu-id="50b5e-117">有关详细信息，请参阅[创建表达式列](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-expression-columns.md)。</span><span class="sxs-lookup"><span data-stu-id="50b5e-117">For more information, see [Creating Expression Columns](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-expression-columns.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50b5e-118">下面的示例创建<xref:System.Data.DataTable>与多个<xref:System.Data.DataColumn>对象。</span><span class="sxs-lookup"><span data-stu-id="50b5e-118">The following example creates a <xref:System.Data.DataTable> with several <xref:System.Data.DataColumn> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="50b5e-119">此类型是安全的多线程读取操作。</span><span class="sxs-lookup"><span data-stu-id="50b5e-119">This type is safe for multithreaded read operations.</span></span> <span data-ttu-id="50b5e-120">你必须同步的任何写入操作。</span><span class="sxs-lookup"><span data-stu-id="50b5e-120">You must synchronize any write operations.</span></span></threadsafe>
    <altmember cref="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)" />
    <altmember cref="T:System.Data.DataColumnCollection" />
    <altmember cref="P:System.Data.DataTable.Constraints" />
    <altmember cref="T:System.Data.ConstraintCollection" />
    <altmember cref="T:System.Windows.Forms.DataGrid" />
    <altmember cref="T:System.Data.DataRow" />
    <altmember cref="T:System.Data.DataTable" />
    <altmember cref="T:System.Data.DataSet" />
    <altmember cref="M:System.Data.DataTable.NewRow" />
    <altmember cref="T:System.Data.DataRowCollection" />
    <altmember cref="T:System.Data.UniqueConstraint" />
    <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="50b5e-121">在 ADO.NET 中使用的数据集</span><span class="sxs-lookup"><span data-stu-id="50b5e-121">Using DataSets in ADO.NET</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="50b5e-122">初始化 <see cref="T:System.Data.DataColumn" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="50b5e-122">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="50b5e-123">将 <see cref="T:System.Data.DataColumn" /> 类的新实例初始化为类型字符串。</span><span class="sxs-lookup"><span data-stu-id="50b5e-123">Initializes a new instance of a <see cref="T:System.Data.DataColumn" /> class as type string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50b5e-124">在创建时，<xref:System.Data.DataColumn>对象具有无默认值<xref:System.Data.DataColumn.ColumnName%2A>或<xref:System.Data.DataColumn.Caption%2A>。</span><span class="sxs-lookup"><span data-stu-id="50b5e-124">When created, a <xref:System.Data.DataColumn> object has no default <xref:System.Data.DataColumn.ColumnName%2A> or <xref:System.Data.DataColumn.Caption%2A>.</span></span> <span data-ttu-id="50b5e-125">当您将其添加到<xref:System.Data.DataColumnCollection>，将生成的默认名称 （"Column1"、"Column2"等），如果名称没有分配到<xref:System.Data.DataColumn.ColumnName%2A>。</span><span class="sxs-lookup"><span data-stu-id="50b5e-125">When you add it to a <xref:System.Data.DataColumnCollection>, a default name ("Column1", "Column2", and so on) will be generated if a name has not been assigned to the <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50b5e-126">下面的示例创建一个新<xref:System.Data.DataColumn>，设置各种属性，并将其添加到<xref:System.Data.DataColumnCollection>为<xref:System.Data.DataTable>对象。</span><span class="sxs-lookup"><span data-stu-id="50b5e-126">The following example creates a new <xref:System.Data.DataColumn>, sets various properties, and adds it to a <xref:System.Data.DataColumnCollection> for the <xref:System.Data.DataTable> object.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="50b5e-127">在 ADO.NET 中使用的数据集</span><span class="sxs-lookup"><span data-stu-id="50b5e-127">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="new System.Data.DataColumn : string -&gt; System.Data.DataColumn" Usage="new System.Data.DataColumn columnName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="50b5e-128">一个字符串，它表示要创建的列的名称。</span><span class="sxs-lookup"><span data-stu-id="50b5e-128">A string that represents the name of the column to be created.</span></span> <span data-ttu-id="50b5e-129">如果设置为 <see langword="null" /> 或空字符串 ("")，则当添加到列集合中时，将指定一个默认名称。</span><span class="sxs-lookup"><span data-stu-id="50b5e-129">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span></span></param>
        <summary><span data-ttu-id="50b5e-130">使用指定的列名称将 <see cref="T:System.Data.DataColumn" /> 类的新实例初始化为类型字符串。</span><span class="sxs-lookup"><span data-stu-id="50b5e-130">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class, as type string, using the specified column name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50b5e-131">默认情况下，特定于列的名称将成为<xref:System.Data.DataColumn.Caption%2A>属性值。</span><span class="sxs-lookup"><span data-stu-id="50b5e-131">By default, the name specific to a column becomes the <xref:System.Data.DataColumn.Caption%2A> property value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50b5e-132">下面的示例创建一个新<xref:System.Data.DataColumn>与指定<xref:System.Data.DataColumn.ColumnName%2A>。</span><span class="sxs-lookup"><span data-stu-id="50b5e-132">The following example creates a new <xref:System.Data.DataColumn> with a specified <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="50b5e-133">在 ADO.NET 中使用的数据集</span><span class="sxs-lookup"><span data-stu-id="50b5e-133">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String, dataType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType);" />
      <MemberSignature Language="F#" Value="new System.Data.DataColumn : string * Type -&gt; System.Data.DataColumn" Usage="new System.Data.DataColumn (columnName, dataType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="50b5e-134">一个字符串，它表示要创建的列的名称。</span><span class="sxs-lookup"><span data-stu-id="50b5e-134">A string that represents the name of the column to be created.</span></span> <span data-ttu-id="50b5e-135">如果设置为 <see langword="null" /> 或空字符串 ("")，则当添加到列集合中时，将指定一个默认名称。</span><span class="sxs-lookup"><span data-stu-id="50b5e-135">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span></span></param>
        <param name="dataType"><span data-ttu-id="50b5e-136">支持的 <see cref="P:System.Data.DataColumn.DataType" />。</span><span class="sxs-lookup"><span data-stu-id="50b5e-136">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span></span></param>
        <summary><span data-ttu-id="50b5e-137">使用指定列名称和数据类型初始化 <see cref="T:System.Data.DataColumn" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="50b5e-137">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified column name and data type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="50b5e-138">下面的示例创建一个新<xref:System.Data.DataColumn>与指定<xref:System.Data.DataColumn.ColumnName%2A>和<xref:System.Data.DataColumn.DataType%2A>。</span><span class="sxs-lookup"><span data-stu-id="50b5e-138">The following example creates a new <xref:System.Data.DataColumn> with a specified <xref:System.Data.DataColumn.ColumnName%2A> and <xref:System.Data.DataColumn.DataType%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="50b5e-139">未指定任何 <paramref name="dataType" />。</span><span class="sxs-lookup"><span data-stu-id="50b5e-139">No <paramref name="dataType" /> was specified.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="50b5e-140">在 ADO.NET 中使用的数据集</span><span class="sxs-lookup"><span data-stu-id="50b5e-140">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType, string expr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType, string expr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String, dataType As Type, expr As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType, System::String ^ expr);" />
      <MemberSignature Language="F#" Value="new System.Data.DataColumn : string * Type * string -&gt; System.Data.DataColumn" Usage="new System.Data.DataColumn (columnName, dataType, expr)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
        <Parameter Name="expr" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="50b5e-141">一个字符串，它表示要创建的列的名称。</span><span class="sxs-lookup"><span data-stu-id="50b5e-141">A string that represents the name of the column to be created.</span></span> <span data-ttu-id="50b5e-142">如果设置为 <see langword="null" /> 或空字符串 ("")，则当添加到列集合中时，将指定一个默认名称。</span><span class="sxs-lookup"><span data-stu-id="50b5e-142">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span></span></param>
        <param name="dataType"><span data-ttu-id="50b5e-143">支持的 <see cref="P:System.Data.DataColumn.DataType" />。</span><span class="sxs-lookup"><span data-stu-id="50b5e-143">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span></span></param>
        <param name="expr"><span data-ttu-id="50b5e-144">用于创建该列的表达式。</span><span class="sxs-lookup"><span data-stu-id="50b5e-144">The expression used to create this column.</span></span> <span data-ttu-id="50b5e-145">有关更多信息，请参见 <see cref="P:System.Data.DataColumn.Expression" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="50b5e-145">For more information, see the <see cref="P:System.Data.DataColumn.Expression" /> property.</span></span></param>
        <summary><span data-ttu-id="50b5e-146">使用指定的名称、数据类型和表达式初始化 <see cref="T:System.Data.DataColumn" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="50b5e-146">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified name, data type, and expression.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="50b5e-147">以下示例创建一个计算的列。</span><span class="sxs-lookup"><span data-stu-id="50b5e-147">The following example creates a computed column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="50b5e-148">未指定任何 <paramref name="dataType" />。</span><span class="sxs-lookup"><span data-stu-id="50b5e-148">No <paramref name="dataType" /> was specified.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="50b5e-149">在 ADO.NET 中使用的数据集</span><span class="sxs-lookup"><span data-stu-id="50b5e-149">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType, string expr, System.Data.MappingType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType, string expr, valuetype System.Data.MappingType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType, System::String ^ expr, System::Data::MappingType type);" />
      <MemberSignature Language="F#" Value="new System.Data.DataColumn : string * Type * string * System.Data.MappingType -&gt; System.Data.DataColumn" Usage="new System.Data.DataColumn (columnName, dataType, expr, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
        <Parameter Name="expr" Type="System.String" />
        <Parameter Name="type" Type="System.Data.MappingType" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="50b5e-150">一个字符串，它表示要创建的列的名称。</span><span class="sxs-lookup"><span data-stu-id="50b5e-150">A string that represents the name of the column to be created.</span></span> <span data-ttu-id="50b5e-151">如果设置为 <see langword="null" /> 或空字符串 ("")，则当添加到列集合中时，将指定一个默认名称。</span><span class="sxs-lookup"><span data-stu-id="50b5e-151">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span></span></param>
        <param name="dataType"><span data-ttu-id="50b5e-152">支持的 <see cref="P:System.Data.DataColumn.DataType" />。</span><span class="sxs-lookup"><span data-stu-id="50b5e-152">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span></span></param>
        <param name="expr"><span data-ttu-id="50b5e-153">用于创建该列的表达式。</span><span class="sxs-lookup"><span data-stu-id="50b5e-153">The expression used to create this column.</span></span> <span data-ttu-id="50b5e-154">有关更多信息，请参见 <see cref="P:System.Data.DataColumn.Expression" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="50b5e-154">For more information, see the <see cref="P:System.Data.DataColumn.Expression" /> property.</span></span></param>
        <param name="type"><span data-ttu-id="50b5e-155"><see cref="T:System.Data.MappingType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="50b5e-155">One of the <see cref="T:System.Data.MappingType" /> values.</span></span></param>
        <summary><span data-ttu-id="50b5e-156">使用指定名称、数据类型、表达式和确定列是否为特性的值，初始化 <see cref="T:System.Data.DataColumn" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="50b5e-156">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified name, data type, expression, and value that determines whether the column is an attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50b5e-157">`type`自变量集<xref:System.Data.DataColumn.ColumnMapping%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="50b5e-157">The `type` argument sets the <xref:System.Data.DataColumn.ColumnMapping%2A> property.</span></span> <span data-ttu-id="50b5e-158">该属性指定如何<xref:System.Data.DataColumn>时映射<xref:System.Data.DataSet>转换为 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="50b5e-158">The property specifies how a <xref:System.Data.DataColumn> is mapped when a <xref:System.Data.DataSet> is transformed into an XML document.</span></span> <span data-ttu-id="50b5e-159">例如，如果列名为"fName"和所包含的值是"Bob，"并`type`设置为`MappingType.Attribute`，XML 元素会按如下所示：</span><span class="sxs-lookup"><span data-stu-id="50b5e-159">For example, if the column is named "fName," and the value it contains is "Bob," and `type` is set to `MappingType.Attribute`, the XML element would be as follows:</span></span>  
  
 <span data-ttu-id="50b5e-160">\<Name fName = 'Bob'/></span><span class="sxs-lookup"><span data-stu-id="50b5e-160">\<Name fName = 'Bob'/></span></span>  
  
 <span data-ttu-id="50b5e-161">有关如何将列映射到元素或属性的详细信息，请参阅<xref:System.Data.DataColumn.ColumnMapping%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="50b5e-161">For more information about how columns are mapped to elements or attributes, see the <xref:System.Data.DataColumn.ColumnMapping%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50b5e-162">下面的示例构造一个计算的列。</span><span class="sxs-lookup"><span data-stu-id="50b5e-162">The following example constructs a computed column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="50b5e-163">未指定任何 <paramref name="dataType" />。</span><span class="sxs-lookup"><span data-stu-id="50b5e-163">No <paramref name="dataType" /> was specified.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.ColumnMapping" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="50b5e-164">在 ADO.NET 中使用的数据集</span><span class="sxs-lookup"><span data-stu-id="50b5e-164">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AllowDBNull">
      <MemberSignature Language="C#" Value="public bool AllowDBNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDBNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AllowDBNull" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDBNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDBNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDBNull : bool with get, set" Usage="System.Data.DataColumn.AllowDBNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnAllowNullDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50b5e-165">获取或设置一个值，该值指示对于属于该表的行，此列中是否允许空值。</span><span class="sxs-lookup"><span data-stu-id="50b5e-165">Gets or sets a value that indicates whether null values are allowed in this column for rows that belong to the table.</span></span></summary>
        <value><span data-ttu-id="50b5e-166">如果允许空值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="50b5e-166"><see langword="true" /> if null values values are allowed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="50b5e-167">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="50b5e-167">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="50b5e-168">下面的示例创建一个新<xref:System.Data.DataColumn>，并设置其<xref:System.Data.DataColumn.AllowDBNull%2A>属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="50b5e-168">The following example creates a new <xref:System.Data.DataColumn> and sets its <xref:System.Data.DataColumn.AllowDBNull%2A> property to `true`.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AllowDBNull Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AllowDBNull Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AllowDBNull Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AllowDBNull Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.Unique" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="50b5e-169">在 ADO.NET 中使用的数据集</span><span class="sxs-lookup"><span data-stu-id="50b5e-169">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AutoIncrement">
      <MemberSignature Language="C#" Value="public bool AutoIncrement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoIncrement" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrement" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoIncrement { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoIncrement : bool with get, set" Usage="System.Data.DataColumn.AutoIncrement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnAutoIncrementDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50b5e-170">获取或设置一个值，该值指示对于添加到该表中的新行，列是否将列的值自动递增。</span><span class="sxs-lookup"><span data-stu-id="50b5e-170">Gets or sets a value that indicates whether the column automatically increments the value of the column for new rows added to the table.</span></span></summary>
        <value><span data-ttu-id="50b5e-171">如果列的值自动递增，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="50b5e-171"><see langword="true" /> if the value of the column increments automatically; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="50b5e-172">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="50b5e-172">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50b5e-173">如果此列的类型不是 Int16、 Int32 或 Int64 时设置此属性，<xref:System.Data.DataColumn.DataType%2A>属性强制为 Int32。</span><span class="sxs-lookup"><span data-stu-id="50b5e-173">If the type of this column is not Int16, Int32, or Int64 when this property is set, the <xref:System.Data.DataColumn.DataType%2A> property is coerced to Int32.</span></span> <span data-ttu-id="50b5e-174">如果这是一个计算的列生成异常。</span><span class="sxs-lookup"><span data-stu-id="50b5e-174">An exception is generated if this is a computed column.</span></span> <span data-ttu-id="50b5e-175"><xref:System.Data.DataColumn.Expression%2A>属性设置。</span><span class="sxs-lookup"><span data-stu-id="50b5e-175">The <xref:System.Data.DataColumn.Expression%2A> property is set.</span></span> <span data-ttu-id="50b5e-176">本专栏中，当添加到列集合的行的值等于默认值时，才使用递增的值。</span><span class="sxs-lookup"><span data-stu-id="50b5e-176">The incremented value is used only if the row's value for this column, when added to the columns collection, is equal to the default value.</span></span>  
  
 <span data-ttu-id="50b5e-177">您可以创建新行使用<xref:System.Data.DataRow.ItemArray%2A>属性的<xref:System.Data.DataRow>类，并传入值的数组。</span><span class="sxs-lookup"><span data-stu-id="50b5e-177">You can create a new row using the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class and passing in an array of values.</span></span> <span data-ttu-id="50b5e-178">这是具有的列的潜在问题及其<xref:System.Data.DataColumn.AutoIncrement%2A>设置为`true`，因为其值自动生成。</span><span class="sxs-lookup"><span data-stu-id="50b5e-178">This is a potential problem for a column with its <xref:System.Data.DataColumn.AutoIncrement%2A> set to `true`, because its value is generated automatically.</span></span> <span data-ttu-id="50b5e-179">若要使用<xref:System.Data.DataRow.ItemArray%2A>属性中，位置`null`在数组中的列的位置。</span><span class="sxs-lookup"><span data-stu-id="50b5e-179">To use the <xref:System.Data.DataRow.ItemArray%2A> property, place `null` in the column's position in the array.</span></span> <span data-ttu-id="50b5e-180">有关详细信息，请参阅<xref:System.Data.DataRow.ItemArray%2A>属性的<xref:System.Data.DataRow>类。</span><span class="sxs-lookup"><span data-stu-id="50b5e-180">For more information, see the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class.</span></span>  
  
 <span data-ttu-id="50b5e-181">如果列的类型为<xref:System.Data.SqlTypes.SqlInt16>或<xref:System.Data.SqlTypes.SqlInt32>，<xref:System.Data.DataColumn.AutoIncrement%2A>不起作用。</span><span class="sxs-lookup"><span data-stu-id="50b5e-181">If the type of the column is <xref:System.Data.SqlTypes.SqlInt16> or <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.DataColumn.AutoIncrement%2A> will not work.</span></span> <span data-ttu-id="50b5e-182">请改用 Int16 或 Int32。</span><span class="sxs-lookup"><span data-stu-id="50b5e-182">Use Int16 or Int32 instead.</span></span>  
  
 <span data-ttu-id="50b5e-183">如果列的类型为<xref:System.Data.SqlTypes.SqlInt64>或<xref:System.Data.SqlTypes.SqlDecimal>，<xref:System.Data.DataColumn.AutoIncrement%2A>将仅部分工作。</span><span class="sxs-lookup"><span data-stu-id="50b5e-183">If the type of the column is <xref:System.Data.SqlTypes.SqlInt64> or <xref:System.Data.SqlTypes.SqlDecimal>, <xref:System.Data.DataColumn.AutoIncrement%2A> will only partially work.</span></span> <span data-ttu-id="50b5e-184">改为使用 Int64 或小数。</span><span class="sxs-lookup"><span data-stu-id="50b5e-184">Use Int64 or Decimal instead.</span></span>  
  
 <span data-ttu-id="50b5e-185">当<xref:System.Data.DataColumn.AutoIncrementStep%2A>值添加到当前的值中，将取消溢出检查。</span><span class="sxs-lookup"><span data-stu-id="50b5e-185">When the <xref:System.Data.DataColumn.AutoIncrementStep%2A> value is added to the current value, the overflow check is suppressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50b5e-186">下面的示例设置<xref:System.Data.DataColumn.AutoIncrement%2A>， <xref:System.Data.DataColumn.AutoIncrementSeed%2A>，和<xref:System.Data.DataColumn.AutoIncrementStep%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="50b5e-186">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="50b5e-187">该列是计算所得的列。</span><span class="sxs-lookup"><span data-stu-id="50b5e-187">The column is a computed column.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.AutoIncrementSeed" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementStep" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="50b5e-188">在 ADO.NET 中使用的数据集</span><span class="sxs-lookup"><span data-stu-id="50b5e-188">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AutoIncrementSeed">
      <MemberSignature Language="C#" Value="public long AutoIncrementSeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 AutoIncrementSeed" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrementSeed" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrementSeed As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long AutoIncrementSeed { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.AutoIncrementSeed : int64 with get, set" Usage="System.Data.DataColumn.AutoIncrementSeed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnAutoIncrementSeedDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50b5e-189">获取或设置其 <see cref="P:System.Data.DataColumn.AutoIncrement" /> 属性设置为 <see langword="true" /> 的列的起始值。</span><span class="sxs-lookup"><span data-stu-id="50b5e-189">Gets or sets the starting value for a column that has its <see cref="P:System.Data.DataColumn.AutoIncrement" /> property set to <see langword="true" />.</span></span> <span data-ttu-id="50b5e-190">默认值为 0。</span><span class="sxs-lookup"><span data-stu-id="50b5e-190">The default is 0.</span></span></summary>
        <value><span data-ttu-id="50b5e-191"><see cref="P:System.Data.DataColumn.AutoIncrement" /> 功能的起始值。</span><span class="sxs-lookup"><span data-stu-id="50b5e-191">The starting value for the <see cref="P:System.Data.DataColumn.AutoIncrement" /> feature.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="50b5e-192">下面的示例设置<xref:System.Data.DataColumn.AutoIncrement%2A>， <xref:System.Data.DataColumn.AutoIncrementSeed%2A>，和<xref:System.Data.DataColumn.AutoIncrementStep%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="50b5e-192">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementStep" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="50b5e-193">在 ADO.NET 中使用的数据集</span><span class="sxs-lookup"><span data-stu-id="50b5e-193">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AutoIncrementStep">
      <MemberSignature Language="C#" Value="public long AutoIncrementStep { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 AutoIncrementStep" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrementStep" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrementStep As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long AutoIncrementStep { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.AutoIncrementStep : int64 with get, set" Usage="System.Data.DataColumn.AutoIncrementStep" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnAutoIncrementStepDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50b5e-194">获取或设置其 <see cref="P:System.Data.DataColumn.AutoIncrement" /> 属性设置为 <see langword="true" /> 的列使用的增量。</span><span class="sxs-lookup"><span data-stu-id="50b5e-194">Gets or sets the increment used by a column with its <see cref="P:System.Data.DataColumn.AutoIncrement" /> property set to <see langword="true" />.</span></span></summary>
        <value><span data-ttu-id="50b5e-195">列的值自动递增的数值。</span><span class="sxs-lookup"><span data-stu-id="50b5e-195">The number by which the value of the column is automatically incremented.</span></span> <span data-ttu-id="50b5e-196">默认值为 1。</span><span class="sxs-lookup"><span data-stu-id="50b5e-196">The default is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="50b5e-197">下面的示例设置<xref:System.Data.DataColumn.AutoIncrement%2A>， <xref:System.Data.DataColumn.AutoIncrementSeed%2A>，和<xref:System.Data.DataColumn.AutoIncrementStep%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="50b5e-197">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="50b5e-198">设置的值为零。</span><span class="sxs-lookup"><span data-stu-id="50b5e-198">The value set is zero.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementSeed" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="50b5e-199">在 ADO.NET 中使用的数据集</span><span class="sxs-lookup"><span data-stu-id="50b5e-199">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Caption : string with get, set" Usage="System.Data.DataColumn.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnCaptionDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50b5e-200">获取或设置列的标题。</span><span class="sxs-lookup"><span data-stu-id="50b5e-200">Gets or sets the caption for the column.</span></span></summary>
        <value><span data-ttu-id="50b5e-201">列的标题。</span><span class="sxs-lookup"><span data-stu-id="50b5e-201">The caption of the column.</span></span> <span data-ttu-id="50b5e-202">如果没有设置，则返回 <see cref="P:System.Data.DataColumn.ColumnName" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="50b5e-202">If not set, returns the <see cref="P:System.Data.DataColumn.ColumnName" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50b5e-203">可以使用<xref:System.Data.DataColumn.Caption%2A>属性来显示的说明性或友好名称<xref:System.Data.DataColumn>。</span><span class="sxs-lookup"><span data-stu-id="50b5e-203">You can use the <xref:System.Data.DataColumn.Caption%2A> property to display a descriptive or friendly name for a <xref:System.Data.DataColumn>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50b5e-204">下面的示例创建一个新<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="50b5e-204">The following example creates a new <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="50b5e-205">然后添加三个<xref:System.Data.DataColumn>对象添加到<xref:System.Data.DataColumnCollection>，并设置<xref:System.Data.DataColumn.Caption%2A>属性为每个<xref:System.Data.DataColumn>。</span><span class="sxs-lookup"><span data-stu-id="50b5e-205">It then adds three <xref:System.Data.DataColumn> objects to a <xref:System.Data.DataColumnCollection> and sets the <xref:System.Data.DataColumn.Caption%2A> property for each <xref:System.Data.DataColumn>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Caption Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Caption Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Caption Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Caption Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="50b5e-206">在 ADO.NET 中使用的数据集</span><span class="sxs-lookup"><span data-stu-id="50b5e-206">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CheckNotAllowNull">
      <MemberSignature Language="C#" Value="protected internal void CheckNotAllowNull ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void CheckNotAllowNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.CheckNotAllowNull" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub CheckNotAllowNull ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void CheckNotAllowNull();" />
      <MemberSignature Language="F#" Value="member this.CheckNotAllowNull : unit -&gt; unit" Usage="dataColumn.CheckNotAllowNull " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="50b5e-207">此成员支持 .NET Framework 结构，不能在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="50b5e-207">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckUnique">
      <MemberSignature Language="C#" Value="protected void CheckUnique ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckUnique() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.CheckUnique" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CheckUnique ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CheckUnique();" />
      <MemberSignature Language="F#" Value="member this.CheckUnique : unit -&gt; unit" Usage="dataColumn.CheckUnique " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="50b5e-208">此成员支持 .NET Framework 结构，不能在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="50b5e-208">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnMapping">
      <MemberSignature Language="C#" Value="public virtual System.Data.MappingType ColumnMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.MappingType ColumnMapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ColumnMapping" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ColumnMapping As MappingType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::MappingType ColumnMapping { System::Data::MappingType get(); void set(System::Data::MappingType value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnMapping : System.Data.MappingType with get, set" Usage="System.Data.DataColumn.ColumnMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnMappingDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.MappingType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50b5e-209">获取或设置列的 <see cref="T:System.Data.MappingType" />。</span><span class="sxs-lookup"><span data-stu-id="50b5e-209">Gets or sets the <see cref="T:System.Data.MappingType" /> of the column.</span></span></summary>
        <value><span data-ttu-id="50b5e-210"><see cref="T:System.Data.MappingType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="50b5e-210">One of the <see cref="T:System.Data.MappingType" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50b5e-211"><xref:System.Data.DataColumn.ColumnMapping%2A>属性确定如何<xref:System.Data.DataColumn>时映射<xref:System.Data.DataSet>另存为 XML 文档使用<xref:System.Data.DataSet.WriteXml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="50b5e-211">The <xref:System.Data.DataColumn.ColumnMapping%2A> property determines how a <xref:System.Data.DataColumn> is mapped when a <xref:System.Data.DataSet> is saved as an XML document using the <xref:System.Data.DataSet.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="50b5e-212">例如，如果<xref:System.Data.DataColumn>名为"customerID，"并将其<xref:System.Data.DataColumn.ColumnMapping%2A>属性设置为`MappingType.Element`，该列的值将生成以下 XML:</span><span class="sxs-lookup"><span data-stu-id="50b5e-212">For example, if a <xref:System.Data.DataColumn> is named "customerID," and its <xref:System.Data.DataColumn.ColumnMapping%2A> property is set to `MappingType.Element`, the column value will produce the following XML:</span></span>  
  
```  
<Customers>  
 <customerID>ALFKI</customerID>  
......  
 </Customers>  
 <Orders>  
 <OrderID>12345</OrderID>  
 <customerID>ALFKI</customerID>  
......  
 </Orders>  
```  
  
 <span data-ttu-id="50b5e-213">但是，如果相同的列映射到`MappingType.Attribute`，生成的以下 XML:</span><span class="sxs-lookup"><span data-stu-id="50b5e-213">However, if the same column is mapped to `MappingType.Attribute`, the following XML is produced:</span></span>  
  
```  
<Customers customerID="ALFKI"........more attributes.....>  
 <Order orderID="1234"....more attributes..../>  
 <Order orderID="1234"....more attributes..../>  
...... More orders for this customer  
 </Customers>  
```  
  
 <span data-ttu-id="50b5e-214">使用<xref:System.Data.DataColumn.%23ctor%2A>构造函数，包含`type`参数指定如何<xref:System.Data.DataColumn>当映射其<xref:System.Data.DataSet>转换为 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="50b5e-214">Use the <xref:System.Data.DataColumn.%23ctor%2A> constructor that contains the `type` argument to specificy how the <xref:System.Data.DataColumn> is mapped when its <xref:System.Data.DataSet> is transformed to an XML document.</span></span>  
  
 <span data-ttu-id="50b5e-215"><xref:System.Data.DataColumn.ColumnMapping%2A>属性对应于构造函数参数`type`。</span><span class="sxs-lookup"><span data-stu-id="50b5e-215">The <xref:System.Data.DataColumn.ColumnMapping%2A> property corresponds to the constructor argument `type`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50b5e-216">下面的示例设置<xref:System.Data.DataColumn.ColumnMapping%2A>新类型的属性<xref:System.Data.DataColumn>。</span><span class="sxs-lookup"><span data-stu-id="50b5e-216">The following example sets the <xref:System.Data.DataColumn.ColumnMapping%2A> type property of new <xref:System.Data.DataColumn>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ColumnMapping Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnMapping Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ColumnMapping Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnMapping Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="50b5e-217">在 ADO.NET 中使用的数据集</span><span class="sxs-lookup"><span data-stu-id="50b5e-217">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ColumnName">
      <MemberSignature Language="C#" Value="public string ColumnName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ColumnName" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ColumnName" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ColumnName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnName : string with get, set" Usage="System.Data.DataColumn.ColumnName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnColumnNameDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50b5e-218">获取或设置 <see cref="T:System.Data.DataColumnCollection" /> 中的列的名称。</span><span class="sxs-lookup"><span data-stu-id="50b5e-218">Gets or sets the name of the column in the <see cref="T:System.Data.DataColumnCollection" />.</span></span></summary>
        <value><span data-ttu-id="50b5e-219">列的名称。</span><span class="sxs-lookup"><span data-stu-id="50b5e-219">The name of the column.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50b5e-220">当<xref:System.Data.DataColumn>是创建的它不具有<xref:System.Data.DataColumn.ColumnName%2A>值。</span><span class="sxs-lookup"><span data-stu-id="50b5e-220">When a <xref:System.Data.DataColumn> is created, it has no <xref:System.Data.DataColumn.ColumnName%2A> value.</span></span> <span data-ttu-id="50b5e-221">但是，当<xref:System.Data.DataColumn>添加到<xref:System.Data.DataColumnCollection>为<xref:System.Data.DataTable>对象，其指定默认名称 （"Column1"、"Column2"等）。</span><span class="sxs-lookup"><span data-stu-id="50b5e-221">However, when the <xref:System.Data.DataColumn> is added to a <xref:System.Data.DataColumnCollection> for a <xref:System.Data.DataTable> object, it is given a default name ("Column1", "Column2", and so on).</span></span>  
  
 <span data-ttu-id="50b5e-222">默认情况下<xref:System.Data.DataColumn.Caption%2A>值设置为<xref:System.Data.DataColumn.ColumnName%2A>值。</span><span class="sxs-lookup"><span data-stu-id="50b5e-222">By default, the <xref:System.Data.DataColumn.Caption%2A> value is set to the <xref:System.Data.DataColumn.ColumnName%2A> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50b5e-223">下面的示例获取<xref:System.Data.DataColumn.ColumnName%2A>中的每个表中每个列<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="50b5e-223">The following examples gets the <xref:System.Data.DataColumn.ColumnName%2A> for every column in every table in a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="50b5e-224">该示例还演示如何创建<xref:System.Data.DataColumn>有一个新<xref:System.Data.DataColumn.ColumnName%2A>。</span><span class="sxs-lookup"><span data-stu-id="50b5e-224">The example also shows how to create a <xref:System.Data.DataColumn> with a new <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ColumnName Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ColumnName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="50b5e-225">属性设置为 <see langword="null" /> 或空字符串，且列属于一个集合。</span><span class="sxs-lookup"><span data-stu-id="50b5e-225">The property is set to <see langword="null" /> or an empty string and the column belongs to a collection.</span></span></exception>
        <exception cref="T:System.Data.DuplicateNameException"><span data-ttu-id="50b5e-226">集合中已经存在同名称的列。</span><span class="sxs-lookup"><span data-stu-id="50b5e-226">A column with the same name already exists in the collection.</span></span> <span data-ttu-id="50b5e-227">名称比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="50b5e-227">The name comparison is not case sensitive.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="50b5e-228">在 ADO.NET 中使用的数据集</span><span class="sxs-lookup"><span data-stu-id="50b5e-228">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public Type DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DataType" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DataType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : Type with get, set" Usage="System.Data.DataColumn.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.ColumnTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnDataTypeDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50b5e-229">获取或设置存储在列中的数据的类型。</span><span class="sxs-lookup"><span data-stu-id="50b5e-229">Gets or sets the type of data stored in the column.</span></span></summary>
        <value><span data-ttu-id="50b5e-230">一个 <see cref="T:System.Type" /> 对象，它表示列数据类型。</span><span class="sxs-lookup"><span data-stu-id="50b5e-230">A <see cref="T:System.Type" /> object that represents the column data type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50b5e-231">设置<xref:System.Data.DataColumn.DataType%2A>值是确保正确创建和更新数据源中的数据非常重要。</span><span class="sxs-lookup"><span data-stu-id="50b5e-231">Setting the <xref:System.Data.DataColumn.DataType%2A> value is very important to guaranteeing the correct creation and updating of data in a data source.</span></span>  
  
 <span data-ttu-id="50b5e-232"><xref:System.Data.DataColumn.DataType%2A>属性支持以下基本的.NET Framework 数据类型：</span><span class="sxs-lookup"><span data-stu-id="50b5e-232">The <xref:System.Data.DataColumn.DataType%2A> property supports the following base .NET Framework data types:</span></span>  
  
-   <xref:System.Boolean>  
  
-   <xref:System.Byte>  
  
-   <xref:System.Char>  
  
-   <xref:System.DateTime>  
  
-   <xref:System.Decimal>  
  
-   <xref:System.Double>  
  
-   <xref:System.Guid>  
  
-   <xref:System.Int16>  
  
-   <xref:System.Int32>  
  
-   <xref:System.Int64>  
  
-   <xref:System.SByte>  
  
-   <xref:System.Single>  
  
-   <xref:System.String>  
  
-   <xref:System.TimeSpan>  
  
-   <xref:System.UInt16>  
  
-   <xref:System.UInt32>  
  
-   <xref:System.UInt64>  
  
 <span data-ttu-id="50b5e-233">以及以下数组类型：</span><span class="sxs-lookup"><span data-stu-id="50b5e-233">as well as the following array type:</span></span>  
  
-   `Byte[]`  
  
 <span data-ttu-id="50b5e-234">在列之后更改此属性存储的数据已开始时则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="50b5e-234">An exception is generated when changing this property after the column has begun storing data.</span></span>  
  
 <span data-ttu-id="50b5e-235">如果<xref:System.Data.DataColumn.AutoIncrement%2A>设置为`true`之前设置<xref:System.Data.DataColumn.DataType%2A>属性，并且尝试将类型设置为所有非整数类型，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="50b5e-235">If <xref:System.Data.DataColumn.AutoIncrement%2A> is set to `true` before setting the <xref:System.Data.DataColumn.DataType%2A> property, and you try to set the type to anything except an integer type, an exception is generated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="50b5e-236">数据类型的列的`Byte[]`需要特殊处理方式，在某些情况下，因为与不同的是基本的.NET Framework 数据类型，它是引用数据类型。</span><span class="sxs-lookup"><span data-stu-id="50b5e-236">A column of data type `Byte[]` requires special treatment in certain cases since, unlike the base .NET Framework data types, it is a reference data type.</span></span> <span data-ttu-id="50b5e-237">如果数据类型的列`Byte[]`用作<xref:System.Data.DataTable.PrimaryKey%2A>，或被<xref:System.Data.DataView.Sort%2A>或<xref:System.Data.DataView.RowFilter%2A>密钥对<xref:System.Data.DataView>，对列的值的任何更改都必须包括将`Byte[]`单独实例化到列的值`Byte[]`对象。</span><span class="sxs-lookup"><span data-stu-id="50b5e-237">If a column of data type `Byte[]` is used as a <xref:System.Data.DataTable.PrimaryKey%2A>, or as a <xref:System.Data.DataView.Sort%2A> or <xref:System.Data.DataView.RowFilter%2A> key for a <xref:System.Data.DataView>, any change to the column value must involve assigning the `Byte[]` column value to a separately instantiated `Byte[]` object.</span></span> <span data-ttu-id="50b5e-238">此分配需要触发的排序、 筛选和主要密钥操作使用的内部索引更新。</span><span class="sxs-lookup"><span data-stu-id="50b5e-238">This assignment is required to trigger the update of the internal indexes used by sorting, filtering, and primary key operations.</span></span> <span data-ttu-id="50b5e-239">下面的示例对此进行演示：</span><span class="sxs-lookup"><span data-stu-id="50b5e-239">This is illustrated by the following example:</span></span>  
  
```csharp  
byte[] columnValue = (byte[])myDataTable.Rows[0][0];  
byte[] newValue = (byte[])columnValue.Clone();  
newValue[1] = 2;  
myDataTable.Rows[0][0] = newValue;  
```  
  
> [!NOTE]
>  <span data-ttu-id="50b5e-240">尽管可以将列定义为数据类型不是基本的.NET Framework 数据类型，但和`Byte[]`，这样的列将视为用户定义类型，有以下使用情况限制。</span><span class="sxs-lookup"><span data-stu-id="50b5e-240">Although it is possible to define a column as data type other than the base .NET Framework data types and `Byte[]`, such a column will be treated as a user-defined type, subject to the following usage restrictions.</span></span> <span data-ttu-id="50b5e-241">(用户定义类型的详细信息，请参阅[创建和使用用户定义类型](https://msdn.microsoft.com/library/ec0266d2-7e5b-47e4-938a-85ac9d04fa40)。)</span><span class="sxs-lookup"><span data-stu-id="50b5e-241">(For more information on user-defined types, see [Creating and Using User-Defined Types](https://msdn.microsoft.com/library/ec0266d2-7e5b-47e4-938a-85ac9d04fa40).)</span></span>  
  
-   <span data-ttu-id="50b5e-242">列不能属于<xref:System.Data.DataView.RowFilter%2A>或<xref:System.Data.DataTable.Select%2A>表达式。</span><span class="sxs-lookup"><span data-stu-id="50b5e-242">The column cannot be part of a <xref:System.Data.DataView.RowFilter%2A> or <xref:System.Data.DataTable.Select%2A> expression.</span></span>  
  
-   <span data-ttu-id="50b5e-243">如果列用作<xref:System.Data.DataTable.PrimaryKey%2A>，或作为<xref:System.Data.DataView.Sort%2A>或<xref:System.Data.DataView>，必须将视为不可变字段; 添加到表后，不得更改列数据。</span><span class="sxs-lookup"><span data-stu-id="50b5e-243">If the column is used as a <xref:System.Data.DataTable.PrimaryKey%2A>, or as a <xref:System.Data.DataView.Sort%2A> or for a <xref:System.Data.DataView>, it must be treated as an immutable field; the column data must not be changed once it has been added to the table.</span></span>  
  
-   <span data-ttu-id="50b5e-244">其<xref:System.Data.DataColumn.ColumnMapping%2A>可以仅设置为`MappingType.Element`。</span><span class="sxs-lookup"><span data-stu-id="50b5e-244">Its <xref:System.Data.DataColumn.ColumnMapping%2A> can be only set to `MappingType.Element`.</span></span>  
  
-   <span data-ttu-id="50b5e-245">必须使用标记列的数据类型必须的实现的类<xref:System.SerializableAttribute>，并且如果需要实现<xref:System.Runtime.Serialization.ISerializable>或<xref:System.Xml.Serialization.IXmlSerializable>接口。</span><span class="sxs-lookup"><span data-stu-id="50b5e-245">The class that implements the column's data type must be must be marked with the <xref:System.SerializableAttribute>, and if necessary implement the <xref:System.Runtime.Serialization.ISerializable> or <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
-   <span data-ttu-id="50b5e-246">更改跟踪的支持是有限的。</span><span class="sxs-lookup"><span data-stu-id="50b5e-246">Support for change tracking is limited.</span></span> <span data-ttu-id="50b5e-247">若要利用<xref:System.Data.DataTable>类的更改跟踪机制，实现列的数据类型的类必须实现<xref:System.ComponentModel.IChangeTracking>接口，或者接管负责通知<xref:System.Data.DataRow>在该列的值时修改，或者通过调用<xref:System.Data.DataRow.SetModified%2A>在该行上或通过将列的值对象分配给单独实例化的列的值对象。</span><span class="sxs-lookup"><span data-stu-id="50b5e-247">To utilize the <xref:System.Data.DataTable> class' change tracking mechanism, the class that implements the column's data type must either implement the <xref:System.ComponentModel.IChangeTracking> interface, or take over the responsibility for informing the <xref:System.Data.DataRow> when the column value has been modified, either by calling <xref:System.Data.DataRow.SetModified%2A> on the row or by assigning the column value object to a separately instantiated column value object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50b5e-248">以下示例将添加到多个数据类型的列<xref:System.Data.DataTable>，然后将一行添加到表。</span><span class="sxs-lookup"><span data-stu-id="50b5e-248">The following example adds columns of several data types to a <xref:System.Data.DataTable>, and then adds one row to the table.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataType Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataType Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataType Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="50b5e-249">列已经存储了数据。</span><span class="sxs-lookup"><span data-stu-id="50b5e-249">The column already has data stored.</span></span></exception>
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Type.GetType" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="50b5e-250">在 ADO.NET 中使用的数据集</span><span class="sxs-lookup"><span data-stu-id="50b5e-250">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DateTimeMode">
      <MemberSignature Language="C#" Value="public System.Data.DataSetDateTime DateTimeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataSetDateTime DateTimeMode" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DateTimeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DateTimeMode As DataSetDateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataSetDateTime DateTimeMode { System::Data::DataSetDateTime get(); void set(System::Data::DataSetDateTime value); };" />
      <MemberSignature Language="F#" Value="member this.DateTimeMode : System.Data.DataSetDateTime with get, set" Usage="System.Data.DataColumn.DateTimeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataSetDateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50b5e-251">获取或设置列的 <see langword="DateTimeMode" />。</span><span class="sxs-lookup"><span data-stu-id="50b5e-251">Gets or sets the <see langword="DateTimeMode" /> for the column.</span></span></summary>
        <value><span data-ttu-id="50b5e-252">所指定的列的 <see cref="T:System.Data.DataSetDateTime" />。</span><span class="sxs-lookup"><span data-stu-id="50b5e-252">The <see cref="T:System.Data.DataSetDateTime" /> for the specified column.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50b5e-253"><xref:System.Data.DataColumn.DateTimeMode%2A>后的行添加到不能修改<xref:System.Data.DataColumn>，除了从修改<xref:System.Data.DataSetDateTime.Unspecified>和<xref:System.Data.DataSetDateTime.UnspecifiedLocal>，反之亦然。</span><span class="sxs-lookup"><span data-stu-id="50b5e-253">The <xref:System.Data.DataColumn.DateTimeMode%2A> cannot be modified after rows are added to a <xref:System.Data.DataColumn>, except for modifying from <xref:System.Data.DataSetDateTime.Unspecified> and <xref:System.Data.DataSetDateTime.UnspecifiedLocal> or vice-versa.</span></span> <span data-ttu-id="50b5e-254">从修改`UnspecifiedLocal`到`Unspecified`和允许进行相反的转换，因为这两个选项之间的区别是仅在序列化期间，不会影响存储。</span><span class="sxs-lookup"><span data-stu-id="50b5e-254">The modification from `UnspecifiedLocal` to `Unspecified` and vice-versa is allowed as the difference between these two options is only during serialization and does not affect the storage.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="50b5e-255">在 ADO.NET 中使用的数据集</span><span class="sxs-lookup"><span data-stu-id="50b5e-255">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public object DefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultValue : obj with get, set" Usage="System.Data.DataColumn.DefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.DefaultValueTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnDefaultValueDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50b5e-256">在创建新行时获取或设置列的默认值。</span><span class="sxs-lookup"><span data-stu-id="50b5e-256">Gets or sets the default value for the column when you are creating new rows.</span></span></summary>
        <value><span data-ttu-id="50b5e-257">适合于列的 <see cref="P:System.Data.DataColumn.DataType" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="50b5e-257">A value appropriate to the column's <see cref="P:System.Data.DataColumn.DataType" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50b5e-258">默认值是自动分配给列的值时<xref:System.Data.DataRow>创建 (例如，日期和时间<xref:System.Data.DataRow>已创建。</span><span class="sxs-lookup"><span data-stu-id="50b5e-258">A default value is the value that is automatically assigned to the column when a <xref:System.Data.DataRow> is created (for example, the date and time when the <xref:System.Data.DataRow> was created.</span></span>  
  
 <span data-ttu-id="50b5e-259">当<xref:System.Data.DataColumn.AutoIncrement%2A>设置为 true，可以有没有默认值。</span><span class="sxs-lookup"><span data-stu-id="50b5e-259">When <xref:System.Data.DataColumn.AutoIncrement%2A> is set to true, there can be no default value.</span></span>  
  
 <span data-ttu-id="50b5e-260">您可以创建新行使用<xref:System.Data.DataRow.ItemArray%2A>属性的<xref:System.Data.DataRow>类并将该方法传递值的数组。</span><span class="sxs-lookup"><span data-stu-id="50b5e-260">You can create a new row using the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class and passing the method an array of values.</span></span> <span data-ttu-id="50b5e-261">这是默认值的列的潜在问题，因为其值自动生成。</span><span class="sxs-lookup"><span data-stu-id="50b5e-261">This is a potential problem for a column with a default value because its value is generated automatically.</span></span> <span data-ttu-id="50b5e-262">若要使用<xref:System.Data.DataRow.ItemArray%2A>属性对这样的列，将放置`null`在数组中的列的位置。</span><span class="sxs-lookup"><span data-stu-id="50b5e-262">To use the <xref:System.Data.DataRow.ItemArray%2A> property with such a column, place `null` in the column's position in the array.</span></span> <span data-ttu-id="50b5e-263">有关更多信息，请参见 <xref:System.Data.DataRow.ItemArray%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="50b5e-263">For more information, see the <xref:System.Data.DataRow.ItemArray%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50b5e-264">下面的示例创建的多个<xref:System.Data.DataColumn>的对象具有不同的数据类型，并设置相应默认值为每个列。</span><span class="sxs-lookup"><span data-stu-id="50b5e-264">The following example creates several <xref:System.Data.DataColumn> objects that have different data types, and sets appropriate default values to each column.</span></span>  
  
 [!code-vb[Classic WebData DataColumn.DefaultValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DefaultValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="50b5e-265">在添加行时，默认值不是列的数据类型的实例。</span><span class="sxs-lookup"><span data-stu-id="50b5e-265">When you are adding a row, the default value is not an instance of the column's data type.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="T:System.Data.UniqueConstraint" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="50b5e-266">在 ADO.NET 中使用的数据集</span><span class="sxs-lookup"><span data-stu-id="50b5e-266">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public string Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Expression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Expression : string with get, set" Usage="System.Data.DataColumn.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnExpressionDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50b5e-267">获取或设置表达式，用于筛选行、计算列中的值或创建聚合列。</span><span class="sxs-lookup"><span data-stu-id="50b5e-267">Gets or sets the expression used to filter rows, calculate the values in a column, or create an aggregate column.</span></span></summary>
        <value><span data-ttu-id="50b5e-268">用来计算列的值，或创建聚合列的表达式。</span><span class="sxs-lookup"><span data-stu-id="50b5e-268">An expression to calculate the value of a column, or create an aggregate column.</span></span> <span data-ttu-id="50b5e-269">表达式的返回类型由列的 <see cref="P:System.Data.DataColumn.DataType" /> 来确定。</span><span class="sxs-lookup"><span data-stu-id="50b5e-269">The return type of an expression is determined by the <see cref="P:System.Data.DataColumn.DataType" /> of the column.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50b5e-270">一种用途<xref:System.Data.DataColumn.Expression%2A>属性是创建计算的列。</span><span class="sxs-lookup"><span data-stu-id="50b5e-270">One use of the <xref:System.Data.DataColumn.Expression%2A> property is to create calculated columns.</span></span> <span data-ttu-id="50b5e-271">例如，若要计算税金值，单位价格相乘的特定区域的税率。</span><span class="sxs-lookup"><span data-stu-id="50b5e-271">For example, to calculate a tax value, the unit price is multiplied by a tax rate of a specific region.</span></span> <span data-ttu-id="50b5e-272">因为税率不同区域之间，它就不可能将单一税率放在列;相反，使用计算值<xref:System.Data.DataColumn.Expression%2A>属性，如以下部分中的 Visual Basic 代码中所示：</span><span class="sxs-lookup"><span data-stu-id="50b5e-272">Because tax rates vary from region to region, it would be impossible to put a single tax rate in a column; instead, the value is calculated using the <xref:System.Data.DataColumn.Expression%2A> property, as shown in the Visual Basic code in the following section:</span></span>  
  
 <span data-ttu-id="50b5e-273">DataSet1.Tables("Products").Columns("tax").Expression = "UnitPrice \* 0.086"</span><span class="sxs-lookup"><span data-stu-id="50b5e-273">DataSet1.Tables("Products").Columns("tax").Expression = "UnitPrice \* 0.086"</span></span>  
  
 <span data-ttu-id="50b5e-274">第二个用途是创建聚合列。</span><span class="sxs-lookup"><span data-stu-id="50b5e-274">A second use is to create an aggregate column.</span></span> <span data-ttu-id="50b5e-275">类似于计算得出的值，聚合执行操作中的行的完整集上基于<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="50b5e-275">Similar to a calculated value, an aggregate performs an operation based on the complete set of rows in the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="50b5e-276">一个简单的示例是在集中返回的行数进行计数。</span><span class="sxs-lookup"><span data-stu-id="50b5e-276">A simple example is to count the number of rows returned in the set.</span></span> <span data-ttu-id="50b5e-277">这是想要用于计算的特定销售人员所完成的事务数，此 Visual Basic 代码中所示的方法：</span><span class="sxs-lookup"><span data-stu-id="50b5e-277">This is the method you would use to count the number of transactions completed by a particular salesperson, as shown in this Visual Basic code:</span></span>  
  
```vb  
DataSet1.Tables("Orders").Columns("OrderCount").Expression = "Count(OrderID)"  
```  
  
## <a name="expression-syntax"></a><span data-ttu-id="50b5e-278">表达式语法</span><span class="sxs-lookup"><span data-stu-id="50b5e-278">Expression Syntax</span></span>  
 <span data-ttu-id="50b5e-279">创建一个表达式，请使用<xref:System.Data.DataColumn.ColumnName%2A>属性来引用的列。</span><span class="sxs-lookup"><span data-stu-id="50b5e-279">When you create an expression, use the <xref:System.Data.DataColumn.ColumnName%2A> property to refer to columns.</span></span> <span data-ttu-id="50b5e-280">例如，如果<xref:System.Data.DataColumn.ColumnName%2A>一列是"UnitPrice"和另一个"Quantity"，将对该表达式，如下所示：</span><span class="sxs-lookup"><span data-stu-id="50b5e-280">For example, if the <xref:System.Data.DataColumn.ColumnName%2A> for one column is "UnitPrice", and another "Quantity", the expression would be as follows:</span></span>  
  
 <span data-ttu-id="50b5e-281">"UnitPrice \* Quantity"</span><span class="sxs-lookup"><span data-stu-id="50b5e-281">"UnitPrice \* Quantity"</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="50b5e-282">如果在表达式中使用某列，然后表达式则称对该列中具有依赖关系。</span><span class="sxs-lookup"><span data-stu-id="50b5e-282">If a column is used in an expression, then the expression is said to have a dependency on that column.</span></span> <span data-ttu-id="50b5e-283">如果重命名或删除依赖列，不引发异常。</span><span class="sxs-lookup"><span data-stu-id="50b5e-283">If a dependent column is renamed or removed, no exception is thrown.</span></span> <span data-ttu-id="50b5e-284">缺少了依赖表达式列受访问时，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="50b5e-284">An exception will be thrown when the now-broken expression column is accessed.</span></span>  
  
 <span data-ttu-id="50b5e-285">创建筛选器的表达式时，将字符串用单引号引起来：</span><span class="sxs-lookup"><span data-stu-id="50b5e-285">When you create an expression for a filter, enclose strings with single quotation marks:</span></span>  
  
 <span data-ttu-id="50b5e-286">"LastName = 'Jones'"</span><span class="sxs-lookup"><span data-stu-id="50b5e-286">"LastName = 'Jones'"</span></span>  
  
 <span data-ttu-id="50b5e-287">如果列名称包含任何非字母数字字符或数字开头 （不区分大小写） 与匹配任何以下保留字，则需要特殊处理，如以下各段中所述。</span><span class="sxs-lookup"><span data-stu-id="50b5e-287">If a column name contains any non-alphanumeric characters or starts with a digit or matches (case-insensitively) any of the following reserved words, it requires special handling, as described in the following paragraphs.</span></span>  
  
 <span data-ttu-id="50b5e-288">且</span><span class="sxs-lookup"><span data-stu-id="50b5e-288">And</span></span>  
  
 <span data-ttu-id="50b5e-289">之间</span><span class="sxs-lookup"><span data-stu-id="50b5e-289">Between</span></span>  
  
 <span data-ttu-id="50b5e-290">子级</span><span class="sxs-lookup"><span data-stu-id="50b5e-290">Child</span></span>  
  
 <span data-ttu-id="50b5e-291">False</span><span class="sxs-lookup"><span data-stu-id="50b5e-291">False</span></span>  
  
 <span data-ttu-id="50b5e-292">内</span><span class="sxs-lookup"><span data-stu-id="50b5e-292">In</span></span>  
  
 <span data-ttu-id="50b5e-293">是</span><span class="sxs-lookup"><span data-stu-id="50b5e-293">Is</span></span>  
  
 <span data-ttu-id="50b5e-294">Like</span><span class="sxs-lookup"><span data-stu-id="50b5e-294">Like</span></span>  
  
 <span data-ttu-id="50b5e-295">非</span><span class="sxs-lookup"><span data-stu-id="50b5e-295">Not</span></span>  
  
 <span data-ttu-id="50b5e-296">null</span><span class="sxs-lookup"><span data-stu-id="50b5e-296">Null</span></span>  
  
 <span data-ttu-id="50b5e-297">Or</span><span class="sxs-lookup"><span data-stu-id="50b5e-297">Or</span></span>  
  
 <span data-ttu-id="50b5e-298">父级</span><span class="sxs-lookup"><span data-stu-id="50b5e-298">Parent</span></span>  
  
 <span data-ttu-id="50b5e-299">True</span><span class="sxs-lookup"><span data-stu-id="50b5e-299">True</span></span>  
  
 <span data-ttu-id="50b5e-300">如果列名称满足上述条件之一，它必须括在方括号或""（重音符） 引号引起来。</span><span class="sxs-lookup"><span data-stu-id="50b5e-300">If a column name satisfies one of the above conditions, it must be wrapped in either square brackets or the "\`" (grave accent) quotes.</span></span> <span data-ttu-id="50b5e-301">例如，若要使用名为"列 #"在表达式中的列，您应编写任一"[列 #]":</span><span class="sxs-lookup"><span data-stu-id="50b5e-301">For example, to use a column named "Column#" in an expression, you would write either "[Column#]":</span></span>  
  
 <span data-ttu-id="50b5e-302">总 \* [列 #]</span><span class="sxs-lookup"><span data-stu-id="50b5e-302">Total \* [Column#]</span></span>  
  
 <span data-ttu-id="50b5e-303">or "\`Column#\`":</span><span class="sxs-lookup"><span data-stu-id="50b5e-303">or "\`Column#\`":</span></span>  
  
 <span data-ttu-id="50b5e-304">总 \*\`列 #</span><span class="sxs-lookup"><span data-stu-id="50b5e-304">Total \* \`Column#\`</span></span>  
  
 <span data-ttu-id="50b5e-305">如果列名称括在方括号中然后任何] 和\\必须通过预先计算其反斜杠转义字符 （但没有任何其他字符），在它 ("\\") 字符。</span><span class="sxs-lookup"><span data-stu-id="50b5e-305">If the column name is enclosed in square brackets then any ']' and '\\' characters (but not any other characters) in it must be escaped by prepending them with the backslash ("\\") character.</span></span> <span data-ttu-id="50b5e-306">如果列名称括在重音字符然后必须不包含在其中任何重音符字符。</span><span class="sxs-lookup"><span data-stu-id="50b5e-306">If the column name is enclosed in grave accent characters then it must not contain any grave accent characters in it.</span></span> <span data-ttu-id="50b5e-307">例如，一个名为的列"列 []\\"，则会写入：</span><span class="sxs-lookup"><span data-stu-id="50b5e-307">For example, a column named "Column[]\\" would be written:</span></span>  
  
 <span data-ttu-id="50b5e-308">Total \* [Column[\\]\\\\]</span><span class="sxs-lookup"><span data-stu-id="50b5e-308">Total \* [Column[\\]\\\\]</span></span>  
  
 <span data-ttu-id="50b5e-309">or</span><span class="sxs-lookup"><span data-stu-id="50b5e-309">or</span></span>  
  
 <span data-ttu-id="50b5e-310">总 \*\`列]\\`</span><span class="sxs-lookup"><span data-stu-id="50b5e-310">Total \* \`Column[]\\`</span></span>  
  
## <a name="user-defined-values"></a><span data-ttu-id="50b5e-311">用户定义的值</span><span class="sxs-lookup"><span data-stu-id="50b5e-311">User-Defined Values</span></span>  
 <span data-ttu-id="50b5e-312">要与列的值进行比较，可能在表达式中使用用户定义的值。</span><span class="sxs-lookup"><span data-stu-id="50b5e-312">User-defined values may be used within expressions to be compared with column values.</span></span> <span data-ttu-id="50b5e-313">字符串值应括在单引号 （和字符串值中的每个单引号字符已由另一个单引号字符前面添加转义）。</span><span class="sxs-lookup"><span data-stu-id="50b5e-313">String values should be enclosed within single quotation marks (and each single quotation character in a string value has to be escaped by prepending it with another single quotation character).</span></span> <span data-ttu-id="50b5e-314">日期值应括在井号 （#） 或单引号 （'） 基于的数据提供程序。</span><span class="sxs-lookup"><span data-stu-id="50b5e-314">Date values should be enclosed within pound signs (#) or single quotes (') based on the data provider.</span></span> <span data-ttu-id="50b5e-315">小数位数和科学记数法是允许用于数字值。</span><span class="sxs-lookup"><span data-stu-id="50b5e-315">Decimals and scientific notation are permissible for numeric values.</span></span> <span data-ttu-id="50b5e-316">例如:</span><span class="sxs-lookup"><span data-stu-id="50b5e-316">For example:</span></span>  
  
 <span data-ttu-id="50b5e-317">"FirstName = 'John'"</span><span class="sxs-lookup"><span data-stu-id="50b5e-317">"FirstName = 'John'"</span></span>  
  
 <span data-ttu-id="50b5e-318">"价格 < = 50.00"</span><span class="sxs-lookup"><span data-stu-id="50b5e-318">"Price <= 50.00"</span></span>  
  
 <span data-ttu-id="50b5e-319">"出生日期 < #1/31/82 #"</span><span class="sxs-lookup"><span data-stu-id="50b5e-319">"Birthdate < #1/31/82#"</span></span>  
  
 <span data-ttu-id="50b5e-320">对于包含枚举值的列，将值转换为整数数据类型。</span><span class="sxs-lookup"><span data-stu-id="50b5e-320">For columns that contain enumeration values, cast the value to an integer data type.</span></span> <span data-ttu-id="50b5e-321">例如:</span><span class="sxs-lookup"><span data-stu-id="50b5e-321">For example:</span></span>  
  
 <span data-ttu-id="50b5e-322">"EnumColumn = 5"</span><span class="sxs-lookup"><span data-stu-id="50b5e-322">"EnumColumn = 5"</span></span>  
  
## <a name="parsing-literal-expressions"></a><span data-ttu-id="50b5e-323">分析文本表达式</span><span class="sxs-lookup"><span data-stu-id="50b5e-323">Parsing Literal Expressions</span></span>  
 <span data-ttu-id="50b5e-324">所有文本表达式必须以固定的区域。</span><span class="sxs-lookup"><span data-stu-id="50b5e-324">All literal expressions must be expressed in the invariant culture locale.</span></span> <span data-ttu-id="50b5e-325">当`DataSet`分析并转换文本表达式时，它始终使用固定区域性，而不是当前区域性。</span><span class="sxs-lookup"><span data-stu-id="50b5e-325">When `DataSet` parses and converts literal expressions, it always uses the invariant culture, not the current culture.</span></span>  
  
 <span data-ttu-id="50b5e-326">用单引号引起值时，标识字符串文本。</span><span class="sxs-lookup"><span data-stu-id="50b5e-326">String literals are identified when there are single quotes surrounding the value.</span></span> <span data-ttu-id="50b5e-327">例如:</span><span class="sxs-lookup"><span data-stu-id="50b5e-327">For example:</span></span>  
  
 <span data-ttu-id="50b5e-328">John</span><span class="sxs-lookup"><span data-stu-id="50b5e-328">'John'</span></span>  
  
 <span data-ttu-id="50b5e-329">`Boolean` 文本为 true 和 false;在表达式中，它们是不带引号。</span><span class="sxs-lookup"><span data-stu-id="50b5e-329">`Boolean` literals are true and false; they are not quoted in expressions.</span></span>  
  
 <span data-ttu-id="50b5e-330">`Integer` 文本 [+-]？[0-9] + 被视为`System.Int32`，`System.Int64`或`System.Double`。</span><span class="sxs-lookup"><span data-stu-id="50b5e-330">`Integer` literals [+-]?[0-9]+ are treated as `System.Int32`, `System.Int64` or `System.Double`.</span></span> <span data-ttu-id="50b5e-331">`System.Double` 可能会丢失精度，具体取决于数是多少。</span><span class="sxs-lookup"><span data-stu-id="50b5e-331">`System.Double` can lose precision depending on how large the number is.</span></span> <span data-ttu-id="50b5e-332">例如，如果在文本中的号码是 2147483650，`DataSet`将首先尝试将数字作为解析`Int32`。</span><span class="sxs-lookup"><span data-stu-id="50b5e-332">For example, if the number in the literal is 2147483650, `DataSet` will first attempt to parse the number as an `Int32`.</span></span> <span data-ttu-id="50b5e-333">由于数太大，这种情况将不会成功。</span><span class="sxs-lookup"><span data-stu-id="50b5e-333">This will not succeed because the number is too large.</span></span> <span data-ttu-id="50b5e-334">在这种情况下`DataSet`将分析将数字显示为`Int64`，这将会成功。</span><span class="sxs-lookup"><span data-stu-id="50b5e-334">In this case `DataSet` will parse the number as an `Int64`, which will succeed.</span></span> <span data-ttu-id="50b5e-335">如果文本的 Int64，大于最大值的数字`DataSet`将分析文本使用`Double`。</span><span class="sxs-lookup"><span data-stu-id="50b5e-335">If the literal was a number larger than the maximum value of an Int64, `DataSet` will parse the literal using `Double`.</span></span>  
  
 <span data-ttu-id="50b5e-336">使用科学记数法，例如 4.42372 e 的实际文本-30，进行分析使用`System.Double`。</span><span class="sxs-lookup"><span data-stu-id="50b5e-336">Real literals using scientific notation, such as 4.42372E-30, are parsed using `System.Double`.</span></span>  
  
 <span data-ttu-id="50b5e-337">科学记数法，而不带小数点，实际文字将视为`System.Decimal`。</span><span class="sxs-lookup"><span data-stu-id="50b5e-337">Real literals without scientific notation, but with a decimal point, are treated as `System.Decimal`.</span></span> <span data-ttu-id="50b5e-338">如果数超过了支持的最大或最小值`System.Decimal`，然后将它分析为`System.Double`。</span><span class="sxs-lookup"><span data-stu-id="50b5e-338">If the number exceeds the maximum or minimum values supported by `System.Decimal`, then it is parsed as a `System.Double`.</span></span> <span data-ttu-id="50b5e-339">例如:</span><span class="sxs-lookup"><span data-stu-id="50b5e-339">For example:</span></span>  
  
 <span data-ttu-id="50b5e-340">142526.144524 将转换为`Decimal`。</span><span class="sxs-lookup"><span data-stu-id="50b5e-340">142526.144524 will be converted to a `Decimal`.</span></span>  
  
 <span data-ttu-id="50b5e-341">345262.78036719560925667 将被视为`Double`。</span><span class="sxs-lookup"><span data-stu-id="50b5e-341">345262.78036719560925667 will be treated as a `Double`.</span></span>  
  
## <a name="operators"></a><span data-ttu-id="50b5e-342">运算符</span><span class="sxs-lookup"><span data-stu-id="50b5e-342">Operators</span></span>  
 <span data-ttu-id="50b5e-343">串联被允许使用布尔 AND、 OR 和 NOT 运算符。</span><span class="sxs-lookup"><span data-stu-id="50b5e-343">Concatenation is allowed using Boolean AND, OR, and NOT operators.</span></span> <span data-ttu-id="50b5e-344">可以使用括号对子句进行分组，并强制执行优先顺序。</span><span class="sxs-lookup"><span data-stu-id="50b5e-344">You can use parentheses to group clauses and force precedence.</span></span> <span data-ttu-id="50b5e-345">AND 运算符的优先级高于其他运算符。</span><span class="sxs-lookup"><span data-stu-id="50b5e-345">The AND operator has precedence over other operators.</span></span> <span data-ttu-id="50b5e-346">例如:</span><span class="sxs-lookup"><span data-stu-id="50b5e-346">For example:</span></span>  
  
 <span data-ttu-id="50b5e-347">(LastName = Smith 或姓氏 = Jones)和名字 = John</span><span class="sxs-lookup"><span data-stu-id="50b5e-347">(LastName = 'Smith' OR LastName = 'Jones') AND FirstName = 'John'</span></span>  
  
 <span data-ttu-id="50b5e-348">在创建比较表达式时，允许使用以下运算符：</span><span class="sxs-lookup"><span data-stu-id="50b5e-348">When you create comparison expressions, the following operators are allowed:</span></span>  
  
 \<  
  
 >  
  
 \<=  
  
 >=  
  
 <>  
  
 =  
  
 <span data-ttu-id="50b5e-349">IN</span><span class="sxs-lookup"><span data-stu-id="50b5e-349">IN</span></span>  
  
 <span data-ttu-id="50b5e-350">LIKE</span><span class="sxs-lookup"><span data-stu-id="50b5e-350">LIKE</span></span>  
  
 <span data-ttu-id="50b5e-351">在表达式中还支持下列算术运算符：</span><span class="sxs-lookup"><span data-stu-id="50b5e-351">The following arithmetic operators are also supported in expressions:</span></span>  
  
 <span data-ttu-id="50b5e-352">\+ （加法）</span><span class="sxs-lookup"><span data-stu-id="50b5e-352">\+ (addition)</span></span>  
  
 <span data-ttu-id="50b5e-353">\-（减号）</span><span class="sxs-lookup"><span data-stu-id="50b5e-353">\- (subtraction)</span></span>  
  
 <span data-ttu-id="50b5e-354">\* (multiplication)</span><span class="sxs-lookup"><span data-stu-id="50b5e-354">\* (multiplication)</span></span>  
  
 <span data-ttu-id="50b5e-355">/ （除）</span><span class="sxs-lookup"><span data-stu-id="50b5e-355">/ (division)</span></span>  
  
 <span data-ttu-id="50b5e-356">%（取模）</span><span class="sxs-lookup"><span data-stu-id="50b5e-356">% (modulus)</span></span>  
  
## <a name="string-operators"></a><span data-ttu-id="50b5e-357">字符串运算符</span><span class="sxs-lookup"><span data-stu-id="50b5e-357">String Operators</span></span>  
 <span data-ttu-id="50b5e-358">若要连接字符串，使用 + 字符。</span><span class="sxs-lookup"><span data-stu-id="50b5e-358">To concatenate a string, use the + character.</span></span> <span data-ttu-id="50b5e-359">值<xref:System.Data.DataSet.CaseSensitive%2A>属性的<xref:System.Data.DataSet>类确定字符串比较是否区分大小写。</span><span class="sxs-lookup"><span data-stu-id="50b5e-359">The value of the <xref:System.Data.DataSet.CaseSensitive%2A> property of the <xref:System.Data.DataSet> class determines whether string comparisons are case-sensitive.</span></span> <span data-ttu-id="50b5e-360">但是，您可以覆盖该值与<xref:System.Data.DataTable.CaseSensitive%2A>属性的<xref:System.Data.DataTable>类。</span><span class="sxs-lookup"><span data-stu-id="50b5e-360">However, you can override that value with the <xref:System.Data.DataTable.CaseSensitive%2A> property of the <xref:System.Data.DataTable> class.</span></span>  
  
## <a name="wildcard-characters"></a><span data-ttu-id="50b5e-361">通配符</span><span class="sxs-lookup"><span data-stu-id="50b5e-361">Wildcard Characters</span></span>  
 <span data-ttu-id="50b5e-362">同时 \* 和 %可以互换使用 LIKE 比较中的通配符字符。</span><span class="sxs-lookup"><span data-stu-id="50b5e-362">Both the \* and % can be used interchangeably for wildcard characters in a LIKE comparison.</span></span> <span data-ttu-id="50b5e-363">如果 LIKE 子句中的字符串包含 \* 或 %，这些字符应括在方括号 ([])。</span><span class="sxs-lookup"><span data-stu-id="50b5e-363">If the string in a LIKE clause contains a \* or %, those characters should be enclosed in brackets ([]).</span></span> <span data-ttu-id="50b5e-364">如果子句中有一个方括号，每个大括号字符应括在括号中 （例如 [[] 或 []]）。</span><span class="sxs-lookup"><span data-stu-id="50b5e-364">If a bracket is in the clause, each bracket character should be enclosed in brackets (for example [[] or []]).</span></span> <span data-ttu-id="50b5e-365">在开始和结束的一种模式，或末尾的一种模式，或在模式的起始位置，都允许使用通配符。</span><span class="sxs-lookup"><span data-stu-id="50b5e-365">A wildcard is allowed at the start and end of a pattern, or at the end of a pattern, or at the start of a pattern.</span></span> <span data-ttu-id="50b5e-366">例如:</span><span class="sxs-lookup"><span data-stu-id="50b5e-366">For example:</span></span>  
  
 <span data-ttu-id="50b5e-367">"项目名称如 \* 产品\*'"</span><span class="sxs-lookup"><span data-stu-id="50b5e-367">"ItemName LIKE '\*product\*'"</span></span>  
  
 <span data-ttu-id="50b5e-368">"项目名称如 \* 产品 '"</span><span class="sxs-lookup"><span data-stu-id="50b5e-368">"ItemName LIKE '\*product'"</span></span>  
  
 <span data-ttu-id="50b5e-369">"ItemName LIKE ' 产品 \*'"</span><span class="sxs-lookup"><span data-stu-id="50b5e-369">"ItemName LIKE 'product\*'"</span></span>  
  
 <span data-ttu-id="50b5e-370">字符串中间不允许使用通配符字符。</span><span class="sxs-lookup"><span data-stu-id="50b5e-370">Wildcard characters are not allowed in the middle of a string.</span></span> <span data-ttu-id="50b5e-371">例如，te \* xt 不允许。</span><span class="sxs-lookup"><span data-stu-id="50b5e-371">For example, 'te\*xt' is not allowed.</span></span>  
  
## <a name="parentchild-relation-referencing"></a><span data-ttu-id="50b5e-372">引用的父/子关系</span><span class="sxs-lookup"><span data-stu-id="50b5e-372">Parent/Child Relation Referencing</span></span>  
 <span data-ttu-id="50b5e-373">可能会通过预先计算的列名在表达式中引用父表`Parent`。</span><span class="sxs-lookup"><span data-stu-id="50b5e-373">A parent table may be referenced in an expression by prepending the column name with `Parent`.</span></span> <span data-ttu-id="50b5e-374">例如，`Parent.Price`引用名为父表的列`Price`。</span><span class="sxs-lookup"><span data-stu-id="50b5e-374">For example, the `Parent.Price` references the parent table's column named `Price`.</span></span>  
  
 <span data-ttu-id="50b5e-375">当子补偿有多个父行时，使用 Parent(RelationName)。列名称。</span><span class="sxs-lookup"><span data-stu-id="50b5e-375">When a child has more than one parent row, use Parent(RelationName).ColumnName.</span></span> <span data-ttu-id="50b5e-376">例如，Parent(RelationName)。价格引用关系通过名为 Price 的父表的列。</span><span class="sxs-lookup"><span data-stu-id="50b5e-376">For example, the Parent(RelationName).Price references the parent table's column named Price via the relation.</span></span>  
  
 <span data-ttu-id="50b5e-377">可能会通过预先计算的列名在表达式中引用子表中的列`Child`。</span><span class="sxs-lookup"><span data-stu-id="50b5e-377">A column in a child table may be referenced in an expression by prepending the column name with `Child`.</span></span> <span data-ttu-id="50b5e-378">但是，因为子关系可能会返回多个行，您必须在聚合函数包含对子列的引用。</span><span class="sxs-lookup"><span data-stu-id="50b5e-378">However, because child relationships may return multiple rows, you must include the reference to the child column in an aggregate function.</span></span> <span data-ttu-id="50b5e-379">例如，`Sum(Child.Price)`将返回名为的列的总和`Price`子表中。</span><span class="sxs-lookup"><span data-stu-id="50b5e-379">For example, `Sum(Child.Price)` would return the sum of the column named `Price` in the child table.</span></span>  
  
 <span data-ttu-id="50b5e-380">如果表具有多个子级，则语法是： `Child(RelationName)`。</span><span class="sxs-lookup"><span data-stu-id="50b5e-380">If a table has more than one child, the syntax is: `Child(RelationName)`.</span></span> <span data-ttu-id="50b5e-381">例如，如果表具有两个名为的子表`Customers`和`Orders`，并<xref:System.Data.DataRelation>对象被命名为`Customers2Orders`，则引用将按如下所示：</span><span class="sxs-lookup"><span data-stu-id="50b5e-381">For example, if a table has two child tables named `Customers` and `Orders`, and the <xref:System.Data.DataRelation> object is named `Customers2Orders`, the reference would be as follows:</span></span>  
  
 <span data-ttu-id="50b5e-382">Avg(Child(Customers2Orders).Quantity)</span><span class="sxs-lookup"><span data-stu-id="50b5e-382">Avg(Child(Customers2Orders).Quantity)</span></span>  
  
## <a name="aggregates"></a><span data-ttu-id="50b5e-383">聚合</span><span class="sxs-lookup"><span data-stu-id="50b5e-383">Aggregates</span></span>  
 <span data-ttu-id="50b5e-384">支持以下聚合类型：</span><span class="sxs-lookup"><span data-stu-id="50b5e-384">The following aggregate types are supported:</span></span>  
  
 <span data-ttu-id="50b5e-385">Sum (Sum)</span><span class="sxs-lookup"><span data-stu-id="50b5e-385">Sum (Sum)</span></span>  
  
 <span data-ttu-id="50b5e-386">Avg （平均）</span><span class="sxs-lookup"><span data-stu-id="50b5e-386">Avg (Average)</span></span>  
  
 <span data-ttu-id="50b5e-387">最小值 （最小值）</span><span class="sxs-lookup"><span data-stu-id="50b5e-387">Min (Minimum)</span></span>  
  
 <span data-ttu-id="50b5e-388">最大值 （最大值）</span><span class="sxs-lookup"><span data-stu-id="50b5e-388">Max (Maximum)</span></span>  
  
 <span data-ttu-id="50b5e-389">计数 （计数）</span><span class="sxs-lookup"><span data-stu-id="50b5e-389">Count (Count)</span></span>  
  
 <span data-ttu-id="50b5e-390">StDev （统计标准偏差）</span><span class="sxs-lookup"><span data-stu-id="50b5e-390">StDev (Statistical standard deviation)</span></span>  
  
 <span data-ttu-id="50b5e-391">Var （统计方差）。</span><span class="sxs-lookup"><span data-stu-id="50b5e-391">Var (Statistical variance).</span></span>  
  
 <span data-ttu-id="50b5e-392">沿着关系通常执行聚合。</span><span class="sxs-lookup"><span data-stu-id="50b5e-392">Aggregates are ordinarily performed along relationships.</span></span> <span data-ttu-id="50b5e-393">父/子关系引用前面讨论的中所述使用上面列出的函数和子表列之一创建的聚合表达式。</span><span class="sxs-lookup"><span data-stu-id="50b5e-393">Create an aggregate expression by using one of the functions listed earlier and a child table column as detailed in Parent/Child Relation Referencing that was discussed earlier.</span></span> <span data-ttu-id="50b5e-394">例如:</span><span class="sxs-lookup"><span data-stu-id="50b5e-394">For example:</span></span>  
  
 <span data-ttu-id="50b5e-395">Avg(Child.Price)</span><span class="sxs-lookup"><span data-stu-id="50b5e-395">Avg(Child.Price)</span></span>  
  
 <span data-ttu-id="50b5e-396">Avg(Child(Orders2Details).Price)</span><span class="sxs-lookup"><span data-stu-id="50b5e-396">Avg(Child(Orders2Details).Price)</span></span>  
  
 <span data-ttu-id="50b5e-397">此外可以对单个表执行聚合。</span><span class="sxs-lookup"><span data-stu-id="50b5e-397">An aggregate can also be performed on a single table.</span></span> <span data-ttu-id="50b5e-398">例如，若要在列中创建的图形摘要名为"Price":</span><span class="sxs-lookup"><span data-stu-id="50b5e-398">For example, to create a summary of figures in a column named "Price":</span></span>  
  
 <span data-ttu-id="50b5e-399">Sum(Price)</span><span class="sxs-lookup"><span data-stu-id="50b5e-399">Sum(Price)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="50b5e-400">如果使用单个表来创建聚合，会有任何组的功能。</span><span class="sxs-lookup"><span data-stu-id="50b5e-400">If you use a single table to create an aggregate, there would be no group-by functionality.</span></span> <span data-ttu-id="50b5e-401">相反，所有行将列中都显示相同的值。</span><span class="sxs-lookup"><span data-stu-id="50b5e-401">Instead, all rows would display the same value in the column.</span></span>  
  
 <span data-ttu-id="50b5e-402">如果表具有任何行，则聚合函数将返回`null`。</span><span class="sxs-lookup"><span data-stu-id="50b5e-402">If a table has no rows, the aggregate functions will return `null`.</span></span>  
  
 <span data-ttu-id="50b5e-403">数据类型可始终通过检查来确定<xref:System.Data.DataColumn.DataType%2A>列属性。</span><span class="sxs-lookup"><span data-stu-id="50b5e-403">Data types can always be determined by examining the <xref:System.Data.DataColumn.DataType%2A> property of a column.</span></span> <span data-ttu-id="50b5e-404">此外可以将转换数据类型使用 Convert 函数，以下部分中所示。</span><span class="sxs-lookup"><span data-stu-id="50b5e-404">You can also convert data types using the Convert function, shown in the following section.</span></span>  
  
 <span data-ttu-id="50b5e-405">聚合只能应用于单个列，也可以在聚合内部使用任何其他表达式。</span><span class="sxs-lookup"><span data-stu-id="50b5e-405">An aggregate can only be applied to a single column and no other expressions can be used inside the aggregate.</span></span>  
  
## <a name="functions"></a><span data-ttu-id="50b5e-406">函数</span><span class="sxs-lookup"><span data-stu-id="50b5e-406">Functions</span></span>  
 <span data-ttu-id="50b5e-407">此外支持以下函数：</span><span class="sxs-lookup"><span data-stu-id="50b5e-407">The following functions are also supported:</span></span>  
  
 `CONVERT`  
  
|||  
|-|-|  
|<span data-ttu-id="50b5e-408">描述</span><span class="sxs-lookup"><span data-stu-id="50b5e-408">Description</span></span>|<span data-ttu-id="50b5e-409">将特定的表达式转换为指定的.NET Framework 类型。</span><span class="sxs-lookup"><span data-stu-id="50b5e-409">Converts particular expression to a specified .NET Framework Type.</span></span>|  
|<span data-ttu-id="50b5e-410">语法</span><span class="sxs-lookup"><span data-stu-id="50b5e-410">Syntax</span></span>|<span data-ttu-id="50b5e-411">Convert(`expression`, `type`)</span><span class="sxs-lookup"><span data-stu-id="50b5e-411">Convert(`expression`, `type`)</span></span>|  
|<span data-ttu-id="50b5e-412">自变量</span><span class="sxs-lookup"><span data-stu-id="50b5e-412">Arguments</span></span>|<span data-ttu-id="50b5e-413">`expression` --在要转换的表达式。</span><span class="sxs-lookup"><span data-stu-id="50b5e-413">`expression` -- The expression to convert.</span></span><br /><br /> <span data-ttu-id="50b5e-414">`type` --值将转换成在.NET Framework 类型。</span><span class="sxs-lookup"><span data-stu-id="50b5e-414">`type` -- The .NET Framework type to which the value will be converted.</span></span>|  
  
 <span data-ttu-id="50b5e-415">Example: myDataColumn.Expression="Convert(total, 'System.Int32')"</span><span class="sxs-lookup"><span data-stu-id="50b5e-415">Example: myDataColumn.Expression="Convert(total, 'System.Int32')"</span></span>  
  
 <span data-ttu-id="50b5e-416">所有转换都是有效但存在以下例外：`Boolean`与可强制转换`Byte`， `SByte`， `Int16`， `Int32`， `Int64`， `UInt16`， `UInt32`， `UInt64`， `String`和其本身。</span><span class="sxs-lookup"><span data-stu-id="50b5e-416">All conversions are valid with the following exceptions: `Boolean` can be coerced to and from `Byte`, `SByte`, `Int16`, `Int32`, `Int64`, `UInt16`, `UInt32`, `UInt64`, `String` and itself only.</span></span> <span data-ttu-id="50b5e-417">`Char` 与可强制转换`Int32`， `UInt32`， `String`，和其本身。</span><span class="sxs-lookup"><span data-stu-id="50b5e-417">`Char` can be coerced to and from `Int32`, `UInt32`, `String`, and itself only.</span></span> <span data-ttu-id="50b5e-418">`DateTime` 可强制转换和`String`和其本身。</span><span class="sxs-lookup"><span data-stu-id="50b5e-418">`DateTime` can be coerced to and from `String` and itself only.</span></span> <span data-ttu-id="50b5e-419">`TimeSpan` 可强制转换和`String`和其本身。</span><span class="sxs-lookup"><span data-stu-id="50b5e-419">`TimeSpan` can be coerced to and from `String` and itself only.</span></span>  
  
 `LEN`  
  
|||  
|-|-|  
|<span data-ttu-id="50b5e-420">描述</span><span class="sxs-lookup"><span data-stu-id="50b5e-420">Description</span></span>|<span data-ttu-id="50b5e-421">获取一个字符串的长度</span><span class="sxs-lookup"><span data-stu-id="50b5e-421">Gets the length of a string</span></span>|  
|<span data-ttu-id="50b5e-422">语法</span><span class="sxs-lookup"><span data-stu-id="50b5e-422">Syntax</span></span>|<span data-ttu-id="50b5e-423">LEN(`expression`)</span><span class="sxs-lookup"><span data-stu-id="50b5e-423">LEN(`expression`)</span></span>|  
|<span data-ttu-id="50b5e-424">自变量</span><span class="sxs-lookup"><span data-stu-id="50b5e-424">Arguments</span></span>|<span data-ttu-id="50b5e-425">`expression` --要计算的字符串。</span><span class="sxs-lookup"><span data-stu-id="50b5e-425">`expression` -- The string to be evaluated.</span></span>|  
  
 <span data-ttu-id="50b5e-426">Example: myDataColumn.Expression="Len(ItemName)"</span><span class="sxs-lookup"><span data-stu-id="50b5e-426">Example: myDataColumn.Expression="Len(ItemName)"</span></span>  
  
 `ISNULL`  
  
|||  
|-|-|  
|<span data-ttu-id="50b5e-427">描述</span><span class="sxs-lookup"><span data-stu-id="50b5e-427">Description</span></span>|<span data-ttu-id="50b5e-428">检查表达式并返回已检查的表达式，或者替换值。</span><span class="sxs-lookup"><span data-stu-id="50b5e-428">Checks an expression and either returns the checked expression or a replacement value.</span></span>|  
|<span data-ttu-id="50b5e-429">语法</span><span class="sxs-lookup"><span data-stu-id="50b5e-429">Syntax</span></span>|<span data-ttu-id="50b5e-430">ISNULL(`expression`, `replacementvalue`)</span><span class="sxs-lookup"><span data-stu-id="50b5e-430">ISNULL(`expression`, `replacementvalue`)</span></span>|  
|<span data-ttu-id="50b5e-431">自变量</span><span class="sxs-lookup"><span data-stu-id="50b5e-431">Arguments</span></span>|<span data-ttu-id="50b5e-432">`expression` --若要检查的表达式。</span><span class="sxs-lookup"><span data-stu-id="50b5e-432">`expression` -- The expression to check.</span></span><br /><br /> <span data-ttu-id="50b5e-433">`replacementvalue` --如果表达式是`null`，`replacementvalue`返回。</span><span class="sxs-lookup"><span data-stu-id="50b5e-433">`replacementvalue` -- If expression is `null`, `replacementvalue` is returned.</span></span>|  
  
 <span data-ttu-id="50b5e-434">Example: myDataColumn.Expression="IsNull(price, -1)"</span><span class="sxs-lookup"><span data-stu-id="50b5e-434">Example: myDataColumn.Expression="IsNull(price, -1)"</span></span>  
  
 `IIF`  
  
|||  
|-|-|  
|<span data-ttu-id="50b5e-435">描述</span><span class="sxs-lookup"><span data-stu-id="50b5e-435">Description</span></span>|<span data-ttu-id="50b5e-436">获取具体取决于逻辑表达式的结果的两个值之一。</span><span class="sxs-lookup"><span data-stu-id="50b5e-436">Gets one of two values depending on the result of a logical expression.</span></span>|  
|<span data-ttu-id="50b5e-437">语法</span><span class="sxs-lookup"><span data-stu-id="50b5e-437">Syntax</span></span>|<span data-ttu-id="50b5e-438">IIF(`expr`, `truepart`, `falsepart`)</span><span class="sxs-lookup"><span data-stu-id="50b5e-438">IIF(`expr`, `truepart`, `falsepart`)</span></span>|  
|<span data-ttu-id="50b5e-439">自变量</span><span class="sxs-lookup"><span data-stu-id="50b5e-439">Arguments</span></span>|<span data-ttu-id="50b5e-440">`expr` --要计算的表达式。</span><span class="sxs-lookup"><span data-stu-id="50b5e-440">`expr` -- The expression to evaluate.</span></span><br /><br /> <span data-ttu-id="50b5e-441">`truepart` --若要在表达式为 true 时返回的值。</span><span class="sxs-lookup"><span data-stu-id="50b5e-441">`truepart` -- The value to return if the expression is true.</span></span><br /><br /> <span data-ttu-id="50b5e-442">`falsepart` --在表达式为 false 时返回的值。</span><span class="sxs-lookup"><span data-stu-id="50b5e-442">`falsepart` -- The value to return if the expression is false.</span></span>|  
  
 <span data-ttu-id="50b5e-443">Example: myDataColumn.Expression = "IIF(total>1000, 'expensive', 'dear')</span><span class="sxs-lookup"><span data-stu-id="50b5e-443">Example: myDataColumn.Expression = "IIF(total>1000, 'expensive', 'dear')</span></span>  
  
 `TRIM`  
  
|||  
|-|-|  
|<span data-ttu-id="50b5e-444">描述</span><span class="sxs-lookup"><span data-stu-id="50b5e-444">Description</span></span>|<span data-ttu-id="50b5e-445">删除所有前导空格和尾随空白字符，如 \r、 \n、 \t，</span><span class="sxs-lookup"><span data-stu-id="50b5e-445">Removes all leading and trailing blank characters like \r, \n, \t, ' '</span></span>|  
|<span data-ttu-id="50b5e-446">语法</span><span class="sxs-lookup"><span data-stu-id="50b5e-446">Syntax</span></span>|<span data-ttu-id="50b5e-447">TRIM(`expression`)</span><span class="sxs-lookup"><span data-stu-id="50b5e-447">TRIM(`expression`)</span></span>|  
|<span data-ttu-id="50b5e-448">自变量</span><span class="sxs-lookup"><span data-stu-id="50b5e-448">Arguments</span></span>|<span data-ttu-id="50b5e-449">`expression` --在要剪裁的表达式。</span><span class="sxs-lookup"><span data-stu-id="50b5e-449">`expression` -- The expression to trim.</span></span>|  
  
 `SUBSTRING`  
  
|||  
|-|-|  
|<span data-ttu-id="50b5e-450">描述</span><span class="sxs-lookup"><span data-stu-id="50b5e-450">Description</span></span>|<span data-ttu-id="50b5e-451">获取指定的长度，从字符串中指定位置开始的子字符串。</span><span class="sxs-lookup"><span data-stu-id="50b5e-451">Gets a sub-string of a specified length, starting at a specified point in the string.</span></span>|  
|<span data-ttu-id="50b5e-452">语法</span><span class="sxs-lookup"><span data-stu-id="50b5e-452">Syntax</span></span>|<span data-ttu-id="50b5e-453">子字符串 (`expression`， `start`， `length`)</span><span class="sxs-lookup"><span data-stu-id="50b5e-453">SUBSTRING(`expression`, `start`, `length`)</span></span>|  
|<span data-ttu-id="50b5e-454">自变量</span><span class="sxs-lookup"><span data-stu-id="50b5e-454">Arguments</span></span>|<span data-ttu-id="50b5e-455">`expression` --源字符串的子字符串。</span><span class="sxs-lookup"><span data-stu-id="50b5e-455">`expression` -- The source string for the substring.</span></span><br /><br /> <span data-ttu-id="50b5e-456">`start` -指定子字符串的开始位置的整数。</span><span class="sxs-lookup"><span data-stu-id="50b5e-456">`start` -- Integer that specifies where the substring starts.</span></span><br /><br /> <span data-ttu-id="50b5e-457">`length` -指定子字符串的长度的整数。</span><span class="sxs-lookup"><span data-stu-id="50b5e-457">`length` -- Integer that specifies the length of the substring.</span></span>|  
  
 <span data-ttu-id="50b5e-458">Example: myDataColumn.Expression = "SUBSTRING(phone, 7, 8)"</span><span class="sxs-lookup"><span data-stu-id="50b5e-458">Example: myDataColumn.Expression = "SUBSTRING(phone, 7, 8)"</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="50b5e-459">你可以重置<xref:System.Data.DataColumn.Expression%2A>属性通过将其分配一个 null 值或空字符串。</span><span class="sxs-lookup"><span data-stu-id="50b5e-459">You can reset the <xref:System.Data.DataColumn.Expression%2A> property by assigning it a null value or empty string.</span></span> <span data-ttu-id="50b5e-460">表达式列设置为默认值，如果以前已填充的所有行都分配的默认值为之后<xref:System.Data.DataColumn.Expression%2A>属性重置。</span><span class="sxs-lookup"><span data-stu-id="50b5e-460">If a default value is set on the expression column, all previously filled rows are assigned the default value after the <xref:System.Data.DataColumn.Expression%2A> property is reset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50b5e-461">下面的示例创建三个列中的<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="50b5e-461">The following example creates three columns in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="50b5e-462">第二个和第三个列包含表达式;第二个计算税使用变量的税率，并第三个将计算的结果添加到第一列的值。</span><span class="sxs-lookup"><span data-stu-id="50b5e-462">The second and third columns contain expressions; the second calculates tax using a variable tax rate, and the third adds the result of the calculation to the value of the first column.</span></span> <span data-ttu-id="50b5e-463">生成的表显示在<xref:System.Windows.Forms.DataGrid>控件。</span><span class="sxs-lookup"><span data-stu-id="50b5e-463">The resulting table is displayed in a <xref:System.Windows.Forms.DataGrid> control.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Expression Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Expression Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Expression Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Expression Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="50b5e-464">将 <see cref="P:System.Data.DataColumn.AutoIncrement" /> 或 <see cref="P:System.Data.DataColumn.Unique" /> 属性设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="50b5e-464">The <see cref="P:System.Data.DataColumn.AutoIncrement" /> or <see cref="P:System.Data.DataColumn.Unique" /> property is set to <see langword="true" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="50b5e-465">在使用 CONVERT 函数时，表达式的计算结果为一个字符串，但该字符串不包含可以转换成类型参数的表示形式。</span><span class="sxs-lookup"><span data-stu-id="50b5e-465">When you are using the CONVERT function, the expression evaluates to a string, but the string does not contain a representation that can be converted to the type parameter.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="50b5e-466">在使用 CONVERT 函数时，所请求的强制转换不可能完成。</span><span class="sxs-lookup"><span data-stu-id="50b5e-466">When you are using the CONVERT function, the requested cast is not possible.</span></span> <span data-ttu-id="50b5e-467">有关可能的强制转换的详细信息，请参见下面一节中的 Conversion 函数。</span><span class="sxs-lookup"><span data-stu-id="50b5e-467">See the Conversion function in the following section for detailed information about possible casts.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="50b5e-468">在使用 SUBSTRING 函数时，起始参数超出范围。</span><span class="sxs-lookup"><span data-stu-id="50b5e-468">When you use the SUBSTRING function, the start argument is out of range.</span></span>  
  
<span data-ttu-id="50b5e-469">- 或者 -</span><span class="sxs-lookup"><span data-stu-id="50b5e-469">-Or-</span></span> 
<span data-ttu-id="50b5e-470">在使用 SUBSTRING 函数时，长度参数超出范围。</span><span class="sxs-lookup"><span data-stu-id="50b5e-470">When you use the SUBSTRING function, the length argument is out of range.</span></span></exception>
        <exception cref="T:System.Exception"><span data-ttu-id="50b5e-471">在使用 LEN 函数或 TRIM 函数时，表达式的计算结果不是字符串。</span><span class="sxs-lookup"><span data-stu-id="50b5e-471">When you use the LEN function or the TRIM function, the expression does not evaluate to a string.</span></span> <span data-ttu-id="50b5e-472">这包括计算结果为 <see cref="T:System.Char" /> 的表达式。</span><span class="sxs-lookup"><span data-stu-id="50b5e-472">This includes expressions that evaluate to <see cref="T:System.Char" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="50b5e-473">在 ADO.NET 中使用的数据集</span><span class="sxs-lookup"><span data-stu-id="50b5e-473">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProperties">
      <MemberSignature Language="C#" Value="public System.Data.PropertyCollection ExtendedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.PropertyCollection ExtendedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ExtendedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtendedProperties As PropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::PropertyCollection ^ ExtendedProperties { System::Data::PropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExtendedProperties : System.Data.PropertyCollection" Usage="System.Data.DataColumn.ExtendedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("ExtendedPropertiesDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.PropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50b5e-474">获取与 <see cref="T:System.Data.DataColumn" /> 相关的自定义用户信息的集合。</span><span class="sxs-lookup"><span data-stu-id="50b5e-474">Gets the collection of custom user information associated with a <see cref="T:System.Data.DataColumn" />.</span></span></summary>
        <value><span data-ttu-id="50b5e-475">自定义信息的 <see cref="T:System.Data.PropertyCollection" />。</span><span class="sxs-lookup"><span data-stu-id="50b5e-475">A <see cref="T:System.Data.PropertyCollection" /> of custom information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50b5e-476"><xref:System.Data.DataColumn.ExtendedProperties%2A>属性，可以存储与对象的自定义信息。</span><span class="sxs-lookup"><span data-stu-id="50b5e-476">The <xref:System.Data.DataColumn.ExtendedProperties%2A> property lets you store custom information with the object.</span></span> <span data-ttu-id="50b5e-477">例如，可以存储刷新数据的时间。</span><span class="sxs-lookup"><span data-stu-id="50b5e-477">For example, you may store a time when the data should be refreshed.</span></span>  
  
 <span data-ttu-id="50b5e-478">扩展的属性必须为类型<xref:System.String>。</span><span class="sxs-lookup"><span data-stu-id="50b5e-478">Extended properties must be of type <xref:System.String>.</span></span> <span data-ttu-id="50b5e-479">属性的类型不是<xref:System.String>时不会保留<xref:System.Data.DataColumn>以 XML 形式写入。</span><span class="sxs-lookup"><span data-stu-id="50b5e-479">Properties that are not of type <xref:System.String> are not persisted when the <xref:System.Data.DataColumn> is written as XML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50b5e-480">以下示例将添加到自定义属性<xref:System.Data.PropertyCollection>返回的<xref:System.Data.DataColumn.ExtendedProperties%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="50b5e-480">The following example adds a custom property to the <xref:System.Data.PropertyCollection> returned by the <xref:System.Data.DataColumn.ExtendedProperties%2A> property.</span></span> <span data-ttu-id="50b5e-481">第二个示例检索自定义属性。</span><span class="sxs-lookup"><span data-stu-id="50b5e-481">The second example retrieves the custom property.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ExtendedProperties Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ExtendedProperties Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ExtendedProperties Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ExtendedProperties Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.PropertyCollection" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="50b5e-482">在 ADO.NET 中使用的数据集</span><span class="sxs-lookup"><span data-stu-id="50b5e-482">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLength : int with get, set" Usage="System.Data.DataColumn.MaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnMaxLengthDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50b5e-483">获取或设置文本列的最大长度。</span><span class="sxs-lookup"><span data-stu-id="50b5e-483">Gets or sets the maximum length of a text column.</span></span></summary>
        <value><span data-ttu-id="50b5e-484">列的最大长度（以字符数表示）。</span><span class="sxs-lookup"><span data-stu-id="50b5e-484">The maximum length of the column in characters.</span></span> <span data-ttu-id="50b5e-485">如果列没有最大长度，值为-1 （默认值）。</span><span class="sxs-lookup"><span data-stu-id="50b5e-485">If the column has no maximum length, the value is -1 (default).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50b5e-486"><xref:System.Data.DataColumn.MaxLength%2A>会忽略非文本列的属性。</span><span class="sxs-lookup"><span data-stu-id="50b5e-486">The <xref:System.Data.DataColumn.MaxLength%2A> property is ignored for non-text columns.</span></span> <span data-ttu-id="50b5e-487">一个<xref:System.ArgumentException>会引发异常，如果将分配<xref:System.Data.DataColumn.MaxLength%2A>到非字符串列。</span><span class="sxs-lookup"><span data-stu-id="50b5e-487">A <xref:System.ArgumentException> exception is raised if you assign <xref:System.Data.DataColumn.MaxLength%2A> to a non-string column.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="50b5e-488">在 ADO.NET 中使用的数据集</span><span class="sxs-lookup"><span data-stu-id="50b5e-488">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Data.DataColumn.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnNamespaceDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50b5e-489">获取或设置 <see cref="T:System.Data.DataColumn" /> 的命名空间。</span><span class="sxs-lookup"><span data-stu-id="50b5e-489">Gets or sets the namespace of the <see cref="T:System.Data.DataColumn" />.</span></span></summary>
        <value><span data-ttu-id="50b5e-490"><see cref="T:System.Data.DataColumn" /> 的命名空间。</span><span class="sxs-lookup"><span data-stu-id="50b5e-490">The namespace of the <see cref="T:System.Data.DataColumn" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50b5e-491"><xref:System.Data.DataColumn.Namespace%2A>属性时读取和写入 XML 文档为使用<xref:System.Data.DataTable>中<xref:System.Data.DataSet>使用<xref:System.Data.DataSet.ReadXml%2A>， <xref:System.Data.DataSet.WriteXml%2A>， <xref:System.Data.DataSet.ReadXmlSchema%2A>，或<xref:System.Data.DataSet.WriteXmlSchema%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="50b5e-491">The <xref:System.Data.DataColumn.Namespace%2A> property is used when reading and writing an XML document into a <xref:System.Data.DataTable> in the <xref:System.Data.DataSet> using the <xref:System.Data.DataSet.ReadXml%2A>, <xref:System.Data.DataSet.WriteXml%2A>, <xref:System.Data.DataSet.ReadXmlSchema%2A>, or <xref:System.Data.DataSet.WriteXmlSchema%2A> methods.</span></span>  
  
 <span data-ttu-id="50b5e-492">XML 文档的命名空间用于确定范围的 XML 属性和元素时读取到<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="50b5e-492">The namespace of an XML document is used to scope XML attributes and elements when read into a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="50b5e-493">例如，<xref:System.Data.DataSet>包含一个架构从文档中读取具有命名空间"myCompany，"并尝试读取数据 (与<xref:System.Data.DataSet.ReadXml%2A>方法) 从文档中包含的命名空间"theirCompany。"</span><span class="sxs-lookup"><span data-stu-id="50b5e-493">For example, a <xref:System.Data.DataSet> contains a schema read from a document that has the namespace "myCompany," and an attempt is made to read data (with the <xref:System.Data.DataSet.ReadXml%2A> method) from a document that has the namespace "theirCompany."</span></span> <span data-ttu-id="50b5e-494">与现有架构不对应的任何数据将被忽略。</span><span class="sxs-lookup"><span data-stu-id="50b5e-494">Any data that does not correspond to the existing schema will be ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="50b5e-495">该命名空间已有数据。</span><span class="sxs-lookup"><span data-stu-id="50b5e-495">The namespace already has data.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="50b5e-496">在 ADO.NET 中使用的数据集</span><span class="sxs-lookup"><span data-stu-id="50b5e-496">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanging (System.ComponentModel.PropertyChangedEventArgs pcevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanging(class System.ComponentModel.PropertyChangedEventArgs pcevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanging (pcevent As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanging(System::ComponentModel::PropertyChangedEventArgs ^ pcevent);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanging : System.ComponentModel.PropertyChangedEventArgs -&gt; unit&#xA;override this.OnPropertyChanging : System.ComponentModel.PropertyChangedEventArgs -&gt; unit" Usage="dataColumn.OnPropertyChanging pcevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcevent" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="pcevent"><span data-ttu-id="50b5e-497">参数引用。</span><span class="sxs-lookup"><span data-stu-id="50b5e-497">Parameter reference.</span></span></param>
        <summary><span data-ttu-id="50b5e-498">此成员支持 .NET Framework 结构，不能在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="50b5e-498">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ordinal">
      <MemberSignature Language="C#" Value="public int Ordinal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Ordinal" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Ordinal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ordinal As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Ordinal { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Ordinal : int" Usage="System.Data.DataColumn.Ordinal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnOrdinalDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50b5e-499">获取列在 <see cref="T:System.Data.DataColumnCollection" /> 集合中的位置（从零开始）。</span><span class="sxs-lookup"><span data-stu-id="50b5e-499">Gets the (zero-based) position of the column in the <see cref="T:System.Data.DataColumnCollection" /> collection.</span></span></summary>
        <value><span data-ttu-id="50b5e-500">列的位置。</span><span class="sxs-lookup"><span data-stu-id="50b5e-500">The position of the column.</span></span> <span data-ttu-id="50b5e-501">如果列不是集合的成员，获取 -1。</span><span class="sxs-lookup"><span data-stu-id="50b5e-501">Gets -1 if the column is not a member of a collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="50b5e-502">以下示例返回列的列名称、 序号和数据类型。</span><span class="sxs-lookup"><span data-stu-id="50b5e-502">The following example returns the column name, ordinal, and data type of a column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Ordinal Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Ordinal Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Ordinal Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Ordinal Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="50b5e-503">在 ADO.NET 中使用的数据集</span><span class="sxs-lookup"><span data-stu-id="50b5e-503">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public string Prefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Prefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string with get, set" Usage="System.Data.DataColumn.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnPrefixDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50b5e-504">获取或设置一个 XML 前缀，该前缀是 <see cref="T:System.Data.DataTable" /> 的命名空间的别名。</span><span class="sxs-lookup"><span data-stu-id="50b5e-504">Gets or sets an XML prefix that aliases the namespace of the <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <value><span data-ttu-id="50b5e-505"><see cref="T:System.Data.DataTable" /> 命名空间的 XML 前缀。</span><span class="sxs-lookup"><span data-stu-id="50b5e-505">The XML prefix for the <see cref="T:System.Data.DataTable" /> namespace.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50b5e-506"><xref:System.Data.DataTable.Prefix%2A>整个 XML 文档中用于标识元素所属的命名空间<xref:System.Data.DataSet>对象 (由设置<xref:System.Data.DataSet.Namespace%2A>属性)。</span><span class="sxs-lookup"><span data-stu-id="50b5e-506">The <xref:System.Data.DataTable.Prefix%2A> is used throughout an XML document to identify elements which belong to the namespace for a <xref:System.Data.DataSet> object (as set by the <xref:System.Data.DataSet.Namespace%2A> property).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="50b5e-507">在 ADO.NET 中使用的数据集</span><span class="sxs-lookup"><span data-stu-id="50b5e-507">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RaisePropertyChanging">
      <MemberSignature Language="C#" Value="protected internal void RaisePropertyChanging (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void RaisePropertyChanging(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.RaisePropertyChanging(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub RaisePropertyChanging (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void RaisePropertyChanging(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.RaisePropertyChanging : string -&gt; unit" Usage="dataColumn.RaisePropertyChanging name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="50b5e-508">参数引用。</span><span class="sxs-lookup"><span data-stu-id="50b5e-508">Parameter reference.</span></span></param>
        <summary><span data-ttu-id="50b5e-509">此成员支持 .NET Framework 结构，不能在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="50b5e-509">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Data.DataColumn.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnReadOnlyDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50b5e-510">获取或设置一个值，该值指示一旦向表中添加了行，列是否还允许更改。</span><span class="sxs-lookup"><span data-stu-id="50b5e-510">Gets or sets a value that indicates whether the column allows for changes as soon as a row has been added to the table.</span></span></summary>
        <value><span data-ttu-id="50b5e-511">如果列为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="50b5e-511"><see langword="true" /> if the column is read only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="50b5e-512">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="50b5e-512">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="50b5e-513">下面的示例创建<xref:System.Data.DataColumn>，并设置其<xref:System.Data.DataColumn.ReadOnly%2A>属性`true`。</span><span class="sxs-lookup"><span data-stu-id="50b5e-513">The following example creates a <xref:System.Data.DataColumn> and sets its <xref:System.Data.DataColumn.ReadOnly%2A> property `true`.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ReadOnly Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ReadOnly Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ReadOnly Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ReadOnly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="50b5e-514">对于计算所得的列，此属性设置为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="50b5e-514">The property is set to <see langword="false" /> on a computed column.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.Unique" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="50b5e-515">在 ADO.NET 中使用的数据集</span><span class="sxs-lookup"><span data-stu-id="50b5e-515">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetOrdinal">
      <MemberSignature Language="C#" Value="public void SetOrdinal (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOrdinal(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.SetOrdinal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOrdinal (ordinal As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOrdinal(int ordinal);" />
      <MemberSignature Language="F#" Value="member this.SetOrdinal : int -&gt; unit" Usage="dataColumn.SetOrdinal ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal"><span data-ttu-id="50b5e-516">指定的序号。</span><span class="sxs-lookup"><span data-stu-id="50b5e-516">The specified ordinal.</span></span></param>
        <summary><span data-ttu-id="50b5e-517">将 <see cref="T:System.Data.DataColumn" /> 的序号或位置更改为指定的序号或位置。</span><span class="sxs-lookup"><span data-stu-id="50b5e-517">Changes the ordinal or position of the <see cref="T:System.Data.DataColumn" /> to the specified ordinal or position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50b5e-518">将 <xref:System.Data.DataColumn> 的序号或位置更改为指定的序号或位置。</span><span class="sxs-lookup"><span data-stu-id="50b5e-518">Changes the ordinal or position of the <xref:System.Data.DataColumn> to the specified ordinal or position.</span></span> <span data-ttu-id="50b5e-519">如果序号为小于 0 或大于的现有列-1 （大于最后一列的序号） 数则无效<xref:System.ArgumentException>引发。</span><span class="sxs-lookup"><span data-stu-id="50b5e-519">If ordinal is less than 0 or greater than the existing number of columns - 1 (greater than the ordinal of the last column) then an Invalid <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="50b5e-520">当您更改列的序号时，请将列移动到的列的集合中的新位置。</span><span class="sxs-lookup"><span data-stu-id="50b5e-520">When you change a column's ordinal, the column is moved to the new position in the collection of columns.</span></span> <span data-ttu-id="50b5e-521">以前的和新序号之间的任何列将会重新编号，以进行调整的新列的序号。</span><span class="sxs-lookup"><span data-stu-id="50b5e-521">Any columns between the previous and new ordinal will be renumbered, to adjust for a column's new ordinal.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="50b5e-522">在 ADO.NET 中使用的数据集</span><span class="sxs-lookup"><span data-stu-id="50b5e-522">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Table" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Table As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataTable ^ Table { System::Data::DataTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Table : System.Data.DataTable" Usage="System.Data.DataColumn.Table" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnDataTableDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50b5e-523">获取列所属的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="50b5e-523">Gets the <see cref="T:System.Data.DataTable" /> to which the column belongs to.</span></span></summary>
        <value><span data-ttu-id="50b5e-524"><see cref="T:System.Data.DataTable" /> 所属的 <see cref="T:System.Data.DataColumn" />。</span><span class="sxs-lookup"><span data-stu-id="50b5e-524">The <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataColumn" /> belongs to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="50b5e-525">下面的示例返回父表的<xref:System.Data.DataColumn>通过其<xref:System.Data.DataColumn.Table%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="50b5e-525">The following example returns the parent table of a <xref:System.Data.DataColumn> through its <xref:System.Data.DataColumn.Table%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Table Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Table Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Table Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Table Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataTable" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="50b5e-526">在 ADO.NET 中使用的数据集</span><span class="sxs-lookup"><span data-stu-id="50b5e-526">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dataColumn.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="50b5e-527">获取列的 <see cref="P:System.Data.DataColumn.Expression" />（如果存在的话）。</span><span class="sxs-lookup"><span data-stu-id="50b5e-527">Gets the <see cref="P:System.Data.DataColumn.Expression" /> of the column, if one exists.</span></span></summary>
        <returns><span data-ttu-id="50b5e-528">如果设置了属性；则为 <see cref="P:System.Data.DataColumn.Expression" /> 的值；否则为 <see cref="P:System.Data.DataColumn.ColumnName" /> 的属性。</span><span class="sxs-lookup"><span data-stu-id="50b5e-528">The <see cref="P:System.Data.DataColumn.Expression" /> value, if the property is set; otherwise, the <see cref="P:System.Data.DataColumn.ColumnName" /> property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="50b5e-529">下面的示例使用<xref:System.Data.DataColumn.ToString%2A>属性返回的集合的每个成员的默认字符串<xref:System.Data.DataColumn>对象。</span><span class="sxs-lookup"><span data-stu-id="50b5e-529">The following example uses the <xref:System.Data.DataColumn.ToString%2A> property to return the default string of each member of a collection of <xref:System.Data.DataColumn> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="50b5e-530">在 ADO.NET 中使用的数据集</span><span class="sxs-lookup"><span data-stu-id="50b5e-530">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Unique">
      <MemberSignature Language="C#" Value="public bool Unique { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Unique" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Unique" />
      <MemberSignature Language="VB.NET" Value="Public Property Unique As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Unique { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Unique : bool with get, set" Usage="System.Data.DataColumn.Unique" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DataColumnUniqueDescr")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="50b5e-531">获取或设置一个值，该值指示列的每一行中的值是否必须是唯一的。</span><span class="sxs-lookup"><span data-stu-id="50b5e-531">Gets or sets a value that indicates whether the values in each row of the column must be unique.</span></span></summary>
        <value><span data-ttu-id="50b5e-532">如果值必须是唯一的，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="50b5e-532"><see langword="true" /> if the value must be unique; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="50b5e-533">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="50b5e-533">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50b5e-534">只要此属性从 false 更改为 true，将此列以确保值是唯一上创建唯一约束。</span><span class="sxs-lookup"><span data-stu-id="50b5e-534">As soon as this property is changed from false to true, a unique constraint will be created on this column to make sure that values are unique.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50b5e-535">下面的示例创建新<xref:System.Data.DataColumn>，设置其属性，并将其添加到表的列集合。</span><span class="sxs-lookup"><span data-stu-id="50b5e-535">The following example creates new <xref:System.Data.DataColumn>, sets its properties, and adds it to a table's columns collection.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Unique Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Unique Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Unique Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Unique Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="50b5e-536">列是计算出的列。</span><span class="sxs-lookup"><span data-stu-id="50b5e-536">The column is a calculated column.</span></span></exception>
        <altmember cref="P:System.Data.DataColumn.AllowDBNull" />
        <altmember cref="T:System.Data.UniqueConstraint" />
        <altmember cref="P:System.Data.DataTable.Constraints" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md"><span data-ttu-id="50b5e-537">在 ADO.NET 中使用的数据集</span><span class="sxs-lookup"><span data-stu-id="50b5e-537">Using DataSets in ADO.NET</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>