<Type Name="DataColumn" FullName="System.Data.DataColumn">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c319d3c600dc2e2da64f51a76ba9219295794b79" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataColumn : System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataColumn extends System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class DataColumn&#xA;Inherits MarshalByValueComponent" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataColumn : System::ComponentModel::MarshalByValueComponent" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.MarshalByValueComponent</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("ColumnName")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataColumnEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6131b-101">表示 <see cref="T:System.Data.DataTable" /> 中的列的架构。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6131b-101">Represents the schema of a column in a <see cref="T:System.Data.DataTable" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6131b-102"><xref:System.Data.DataColumn>是用于创建的架构的基本构建块<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="6131b-102">The <xref:System.Data.DataColumn> is the fundamental building block for creating the schema of a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="6131b-103">通过将添加一个或多个生成架构<xref:System.Data.DataColumn>对象添加到<xref:System.Data.DataColumnCollection>。</span><span class="sxs-lookup"><span data-stu-id="6131b-103">You build the schema by adding one or more <xref:System.Data.DataColumn> objects to the <xref:System.Data.DataColumnCollection>.</span></span> <span data-ttu-id="6131b-104">有关详细信息，请参阅[向数据表添加列](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md)。</span><span class="sxs-lookup"><span data-stu-id="6131b-104">For more information, see [Adding Columns to a DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md).</span></span>  
  
 <span data-ttu-id="6131b-105">每个<xref:System.Data.DataColumn>具有<xref:System.Data.DataColumn.DataType%2A>属性，用于确定的数据类型<xref:System.Data.DataColumn>包含。</span><span class="sxs-lookup"><span data-stu-id="6131b-105">Each <xref:System.Data.DataColumn> has a <xref:System.Data.DataColumn.DataType%2A> property that determines the kind of data the <xref:System.Data.DataColumn> contains.</span></span> <span data-ttu-id="6131b-106">例如，你可以限制的数据类型为整数，或字符串或十进制数。</span><span class="sxs-lookup"><span data-stu-id="6131b-106">For example, you can restrict the data type to integers, or strings, or decimals.</span></span> <span data-ttu-id="6131b-107">因为所包含的数据<xref:System.Data.DataTable>通常合并回其原始的数据源，你必须与匹配数据源中的数据类型。</span><span class="sxs-lookup"><span data-stu-id="6131b-107">Because data that is contained by the <xref:System.Data.DataTable> is typically merged back into its original data source, you must match the data types to those in the data source.</span></span> <span data-ttu-id="6131b-108">有关详细信息，请参阅[在 ADO.NET 中的数据类型映射](~/docs/framework/data/adonet/data-type-mappings-in-ado-net.md)。</span><span class="sxs-lookup"><span data-stu-id="6131b-108">For more information, see [Data Type Mappings in ADO.NET](~/docs/framework/data/adonet/data-type-mappings-in-ado-net.md).</span></span>  
  
 <span data-ttu-id="6131b-109">属性，如<xref:System.Data.DataColumn.AllowDBNull%2A>， <xref:System.Data.DataColumn.Unique%2A>，和<xref:System.Data.DataColumn.ReadOnly%2A>施加的输入和更新数据，从而帮助确保数据完整性的限制。</span><span class="sxs-lookup"><span data-stu-id="6131b-109">Properties such as <xref:System.Data.DataColumn.AllowDBNull%2A>, <xref:System.Data.DataColumn.Unique%2A>, and <xref:System.Data.DataColumn.ReadOnly%2A> put restrictions on the entry and updating of data, thereby helping to guarantee data integrity.</span></span> <span data-ttu-id="6131b-110">你还可以使用<xref:System.Data.DataColumn.AutoIncrement%2A>， <xref:System.Data.DataColumn.AutoIncrementSeed%2A>，和<xref:System.Data.DataColumn.AutoIncrementStep%2A>属性来控制数据自动生成。</span><span class="sxs-lookup"><span data-stu-id="6131b-110">You can also use the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties to control automatic data generation.</span></span> <span data-ttu-id="6131b-111">有关详细信息<xref:System.Data.DataColumn.AutoIncrement%2A>列，请参阅[创建 AutoIncrement 列](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-autoincrement-columns.md)。</span><span class="sxs-lookup"><span data-stu-id="6131b-111">For more information about <xref:System.Data.DataColumn.AutoIncrement%2A> columns, see [Creating AutoIncrement Columns](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-autoincrement-columns.md).</span></span> <span data-ttu-id="6131b-112">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="6131b-112">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="6131b-113">你还可以确保中的值<xref:System.Data.DataColumn>都是唯一的创建<xref:System.Data.UniqueConstraint>和将其添加到<xref:System.Data.ConstraintCollection>的<xref:System.Data.DataTable>到<xref:System.Data.DataColumn>所属。</span><span class="sxs-lookup"><span data-stu-id="6131b-113">You can also make sure that values in a <xref:System.Data.DataColumn> are unique by creating a <xref:System.Data.UniqueConstraint> and adding it to the <xref:System.Data.ConstraintCollection> of the <xref:System.Data.DataTable> to which the <xref:System.Data.DataColumn> belongs.</span></span> <span data-ttu-id="6131b-114">有关详细信息，请参阅[数据表约束](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md)。</span><span class="sxs-lookup"><span data-stu-id="6131b-114">For more information, see [DataTable Constraints](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md).</span></span>  
  
 <span data-ttu-id="6131b-115">若要创建之间的关系<xref:System.Data.DataColumn>对象创建<xref:System.Data.DataRelation>对象，并将其添加到<xref:System.Data.DataRelationCollection>的<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="6131b-115">To create a relation between <xref:System.Data.DataColumn> objects, create a <xref:System.Data.DataRelation> object and add it to the <xref:System.Data.DataRelationCollection> of a <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="6131b-116">你可以使用<xref:System.Data.DataColumn.Expression%2A>属性<xref:System.Data.DataColumn>对象来计算的值在列中，或创建聚合列。</span><span class="sxs-lookup"><span data-stu-id="6131b-116">You can use the <xref:System.Data.DataColumn.Expression%2A> property of the <xref:System.Data.DataColumn> object to calculate the values in a column, or create an aggregate column.</span></span> <span data-ttu-id="6131b-117">有关详细信息，请参阅[创建表达式列](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-expression-columns.md)。</span><span class="sxs-lookup"><span data-stu-id="6131b-117">For more information, see [Creating Expression Columns](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-expression-columns.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6131b-118">下面的示例创建<xref:System.Data.DataTable>的多次<xref:System.Data.DataColumn>对象。</span><span class="sxs-lookup"><span data-stu-id="6131b-118">The following example creates a <xref:System.Data.DataTable> with several <xref:System.Data.DataColumn> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="6131b-119">此类型是安全的多线程读取操作。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6131b-119">This type is safe for multithreaded read operations.</span>
      </span>
      <span data-ttu-id="6131b-120">你必须同步任何写入操作。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6131b-120">You must synchronize any write operations.</span>
      </span>
    </threadsafe>
    <altmember cref="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)" />
    <altmember cref="T:System.Data.DataColumnCollection" />
    <altmember cref="P:System.Data.DataTable.Constraints" />
    <altmember cref="T:System.Data.ConstraintCollection" />
    <altmember cref="T:System.Windows.Forms.DataGrid" />
    <altmember cref="T:System.Data.DataRow" />
    <altmember cref="T:System.Data.DataTable" />
    <altmember cref="T:System.Data.DataSet" />
    <altmember cref="M:System.Data.DataTable.NewRow" />
    <altmember cref="T:System.Data.DataRowCollection" />
    <altmember cref="T:System.Data.UniqueConstraint" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6131b-121">初始化 <see cref="T:System.Data.DataColumn" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-121">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6131b-122">将 <see cref="T:System.Data.DataColumn" /> 类的新实例初始化为类型字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-122">Initializes a new instance of a <see cref="T:System.Data.DataColumn" /> class as type string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6131b-123">在创建时，<xref:System.Data.DataColumn>对象具有无默认值<xref:System.Data.DataColumn.ColumnName%2A>或<xref:System.Data.DataColumn.Caption%2A>。</span><span class="sxs-lookup"><span data-stu-id="6131b-123">When created, a <xref:System.Data.DataColumn> object has no default <xref:System.Data.DataColumn.ColumnName%2A> or <xref:System.Data.DataColumn.Caption%2A>.</span></span> <span data-ttu-id="6131b-124">当你将其添加到<xref:System.Data.DataColumnCollection>，如果尚未分配到一个名称，将生成的默认名称 （"Column1"、"Column2"等） <xref:System.Data.DataColumn.ColumnName%2A>。</span><span class="sxs-lookup"><span data-stu-id="6131b-124">When you add it to a <xref:System.Data.DataColumnCollection>, a default name ("Column1", "Column2", and so on) will be generated if a name has not been assigned to the <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6131b-125">下面的示例创建一个新<xref:System.Data.DataColumn>、 设置各种属性，并将其添加到<xref:System.Data.DataColumnCollection>为<xref:System.Data.DataTable>对象。</span><span class="sxs-lookup"><span data-stu-id="6131b-125">The following example creates a new <xref:System.Data.DataColumn>, sets various properties, and adds it to a <xref:System.Data.DataColumnCollection> for the <xref:System.Data.DataTable> object.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">
          <span data-ttu-id="6131b-126">一个字符串，它表示要创建的列的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-126">A string that represents the name of the column to be created.</span>
          </span>
          <span data-ttu-id="6131b-127">如果设置为 <see langword="null" /> 或空字符串 ("")，则当添加到列集合中时，将指定一个默认名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-127">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6131b-128">使用指定的列名称将 <see cref="T:System.Data.DataColumn" /> 类的新实例初始化为类型字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-128">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class, as type string, using the specified column name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6131b-129">默认情况下，特定于列的名称将成为<xref:System.Data.DataColumn.Caption%2A>属性值。</span><span class="sxs-lookup"><span data-stu-id="6131b-129">By default, the name specific to a column becomes the <xref:System.Data.DataColumn.Caption%2A> property value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6131b-130">下面的示例创建一个新<xref:System.Data.DataColumn>与指定<xref:System.Data.DataColumn.ColumnName%2A>。</span><span class="sxs-lookup"><span data-stu-id="6131b-130">The following example creates a new <xref:System.Data.DataColumn> with a specified <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String, dataType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="columnName">
          <span data-ttu-id="6131b-131">一个字符串，它表示要创建的列的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-131">A string that represents the name of the column to be created.</span>
          </span>
          <span data-ttu-id="6131b-132">如果设置为 <see langword="null" /> 或空字符串 ("")，则当添加到列集合中时，将指定一个默认名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-132">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span>
          </span>
        </param>
        <param name="dataType">
          <span data-ttu-id="6131b-133">支持的 <see cref="P:System.Data.DataColumn.DataType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-133">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6131b-134">使用指定列名称和数据类型初始化 <see cref="T:System.Data.DataColumn" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-134">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified column name and data type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6131b-135">下面的示例创建一个新<xref:System.Data.DataColumn>与指定<xref:System.Data.DataColumn.ColumnName%2A>和<xref:System.Data.DataColumn.DataType%2A>。</span><span class="sxs-lookup"><span data-stu-id="6131b-135">The following example creates a new <xref:System.Data.DataColumn> with a specified <xref:System.Data.DataColumn.ColumnName%2A> and <xref:System.Data.DataColumn.DataType%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6131b-136">未指定任何 <paramref name="dataType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-136">No <paramref name="dataType" /> was specified.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType, string expr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType, string expr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String, dataType As Type, expr As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType, System::String ^ expr);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
        <Parameter Name="expr" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">
          <span data-ttu-id="6131b-137">一个字符串，它表示要创建的列的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-137">A string that represents the name of the column to be created.</span>
          </span>
          <span data-ttu-id="6131b-138">如果设置为 <see langword="null" /> 或空字符串 ("")，则当添加到列集合中时，将指定一个默认名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-138">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span>
          </span>
        </param>
        <param name="dataType">
          <span data-ttu-id="6131b-139">支持的 <see cref="P:System.Data.DataColumn.DataType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-139">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span>
          </span>
        </param>
        <param name="expr">
          <span data-ttu-id="6131b-140">用于创建该列的表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-140">The expression used to create this column.</span>
          </span>
          <span data-ttu-id="6131b-141">有关更多信息，请参见 <see cref="P:System.Data.DataColumn.Expression" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-141">For more information, see the <see cref="P:System.Data.DataColumn.Expression" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6131b-142">使用指定的名称、数据类型和表达式初始化 <see cref="T:System.Data.DataColumn" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-142">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified name, data type, and expression.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6131b-143">下面的示例创建计算的列。</span><span class="sxs-lookup"><span data-stu-id="6131b-143">The following example creates a computed column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6131b-144">未指定任何 <paramref name="dataType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-144">No <paramref name="dataType" /> was specified.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType, string expr, System.Data.MappingType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType, string expr, valuetype System.Data.MappingType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType, System::String ^ expr, System::Data::MappingType type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
        <Parameter Name="expr" Type="System.String" />
        <Parameter Name="type" Type="System.Data.MappingType" />
      </Parameters>
      <Docs>
        <param name="columnName">
          <span data-ttu-id="6131b-145">一个字符串，它表示要创建的列的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-145">A string that represents the name of the column to be created.</span>
          </span>
          <span data-ttu-id="6131b-146">如果设置为 <see langword="null" /> 或空字符串 ("")，则当添加到列集合中时，将指定一个默认名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-146">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span>
          </span>
        </param>
        <param name="dataType">
          <span data-ttu-id="6131b-147">支持的 <see cref="P:System.Data.DataColumn.DataType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-147">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span>
          </span>
        </param>
        <param name="expr">
          <span data-ttu-id="6131b-148">用于创建该列的表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-148">The expression used to create this column.</span>
          </span>
          <span data-ttu-id="6131b-149">有关更多信息，请参见 <see cref="P:System.Data.DataColumn.Expression" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-149">For more information, see the <see cref="P:System.Data.DataColumn.Expression" /> property.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="6131b-150">
            <see cref="T:System.Data.MappingType" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-150">One of the <see cref="T:System.Data.MappingType" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6131b-151">使用指定名称、数据类型、表达式和确定列是否为特性的值，初始化 <see cref="T:System.Data.DataColumn" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-151">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified name, data type, expression, and value that determines whether the column is an attribute.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6131b-152">`type`参数集<xref:System.Data.DataColumn.ColumnMapping%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="6131b-152">The `type` argument sets the <xref:System.Data.DataColumn.ColumnMapping%2A> property.</span></span> <span data-ttu-id="6131b-153">该属性指定如何<xref:System.Data.DataColumn>时映射<xref:System.Data.DataSet>转换为 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="6131b-153">The property specifies how a <xref:System.Data.DataColumn> is mapped when a <xref:System.Data.DataSet> is transformed into an XML document.</span></span> <span data-ttu-id="6131b-154">例如，如果列命名为"fName，"，它包含的值为"Bob"和`type`设置为`MappingType.Attribute`，XML 元素将如下：</span><span class="sxs-lookup"><span data-stu-id="6131b-154">For example, if the column is named "fName," and the value it contains is "Bob," and `type` is set to `MappingType.Attribute`, the XML element would be as follows:</span></span>  
  
 <span data-ttu-id="6131b-155">\<Name fName = 'Bob'/></span><span class="sxs-lookup"><span data-stu-id="6131b-155">\<Name fName = 'Bob'/></span></span>  
  
 <span data-ttu-id="6131b-156">有关如何将列映射到元素或属性的详细信息，请参阅<xref:System.Data.DataColumn.ColumnMapping%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="6131b-156">For more information about how columns are mapped to elements or attributes, see the <xref:System.Data.DataColumn.ColumnMapping%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6131b-157">下面的示例构造计算的列。</span><span class="sxs-lookup"><span data-stu-id="6131b-157">The following example constructs a computed column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6131b-158">未指定任何 <paramref name="dataType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-158">No <paramref name="dataType" /> was specified.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.ColumnMapping" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
      </Docs>
    </Member>
    <Member MemberName="AllowDBNull">
      <MemberSignature Language="C#" Value="public bool AllowDBNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDBNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AllowDBNull" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDBNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDBNull { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6131b-159">获取或设置一个值，该值指示对于属于该表的行，此列中是否允许空值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-159">Gets or sets a value that indicates whether null values are allowed in this column for rows that belong to the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6131b-160">如果允许空值，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-160">
              <see langword="true" /> if null values values are allowed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6131b-161">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-161">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6131b-162">下面的示例创建一个新<xref:System.Data.DataColumn>并设置其<xref:System.Data.DataColumn.AllowDBNull%2A>属性`true`。</span><span class="sxs-lookup"><span data-stu-id="6131b-162">The following example creates a new <xref:System.Data.DataColumn> and sets its <xref:System.Data.DataColumn.AllowDBNull%2A> property to `true`.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AllowDBNull Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AllowDBNull Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AllowDBNull Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AllowDBNull Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.Unique" />
      </Docs>
    </Member>
    <Member MemberName="AutoIncrement">
      <MemberSignature Language="C#" Value="public bool AutoIncrement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoIncrement" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrement" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoIncrement { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6131b-163">获取或设置一个值，该值指示对于添加到该表中的新行，列是否将列的值自动递增。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-163">Gets or sets a value that indicates whether the column automatically increments the value of the column for new rows added to the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6131b-164">如果列的值自动递增，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-164">
              <see langword="true" /> if the value of the column increments automatically; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6131b-165">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-165">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6131b-166">如果此列的类型不是 Int16、 Int32 或 Int64 时设置此属性，<xref:System.Data.DataColumn.DataType%2A>属性被强制转换为 Int32。</span><span class="sxs-lookup"><span data-stu-id="6131b-166">If the type of this column is not Int16, Int32, or Int64 when this property is set, the <xref:System.Data.DataColumn.DataType%2A> property is coerced to Int32.</span></span> <span data-ttu-id="6131b-167">如果这是计算的列，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="6131b-167">An exception is generated if this is a computed column.</span></span> <span data-ttu-id="6131b-168"><xref:System.Data.DataColumn.Expression%2A>属性设置。</span><span class="sxs-lookup"><span data-stu-id="6131b-168">The <xref:System.Data.DataColumn.Expression%2A> property is set.</span></span> <span data-ttu-id="6131b-169">仅当此列中，当添加到列集合中，行的值等于默认值时，才使用递增的值。</span><span class="sxs-lookup"><span data-stu-id="6131b-169">The incremented value is used only if the row's value for this column, when added to the columns collection, is equal to the default value.</span></span>  
  
 <span data-ttu-id="6131b-170">你可以创建新的行使用<xref:System.Data.DataRow.ItemArray%2A>属性<xref:System.Data.DataRow>类，并传入的值的数组。</span><span class="sxs-lookup"><span data-stu-id="6131b-170">You can create a new row using the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class and passing in an array of values.</span></span> <span data-ttu-id="6131b-171">这是对具有的列的潜在问题其<xref:System.Data.DataColumn.AutoIncrement%2A>设置为`true`，因为其值自动生成。</span><span class="sxs-lookup"><span data-stu-id="6131b-171">This is a potential problem for a column with its <xref:System.Data.DataColumn.AutoIncrement%2A> set to `true`, because its value is generated automatically.</span></span> <span data-ttu-id="6131b-172">若要使用<xref:System.Data.DataRow.ItemArray%2A>属性、 位置`null`在数组中的列的位置。</span><span class="sxs-lookup"><span data-stu-id="6131b-172">To use the <xref:System.Data.DataRow.ItemArray%2A> property, place `null` in the column's position in the array.</span></span> <span data-ttu-id="6131b-173">有关详细信息，请参阅<xref:System.Data.DataRow.ItemArray%2A>属性<xref:System.Data.DataRow>类。</span><span class="sxs-lookup"><span data-stu-id="6131b-173">For more information, see the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class.</span></span>  
  
 <span data-ttu-id="6131b-174">如果列的类型是<xref:System.Data.SqlTypes.SqlInt16>或<xref:System.Data.SqlTypes.SqlInt32>，<xref:System.Data.DataColumn.AutoIncrement%2A>不起作用。</span><span class="sxs-lookup"><span data-stu-id="6131b-174">If the type of the column is <xref:System.Data.SqlTypes.SqlInt16> or <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.DataColumn.AutoIncrement%2A> will not work.</span></span> <span data-ttu-id="6131b-175">请改用 Int16 或 Int32。</span><span class="sxs-lookup"><span data-stu-id="6131b-175">Use Int16 or Int32 instead.</span></span>  
  
 <span data-ttu-id="6131b-176">如果列的类型是<xref:System.Data.SqlTypes.SqlInt64>或<xref:System.Data.SqlTypes.SqlDecimal>，<xref:System.Data.DataColumn.AutoIncrement%2A>将仅部分工作。</span><span class="sxs-lookup"><span data-stu-id="6131b-176">If the type of the column is <xref:System.Data.SqlTypes.SqlInt64> or <xref:System.Data.SqlTypes.SqlDecimal>, <xref:System.Data.DataColumn.AutoIncrement%2A> will only partially work.</span></span> <span data-ttu-id="6131b-177">改为使用 Int64 或十进制数。</span><span class="sxs-lookup"><span data-stu-id="6131b-177">Use Int64 or Decimal instead.</span></span>  
  
 <span data-ttu-id="6131b-178">当<xref:System.Data.DataColumn.AutoIncrementStep%2A>值添加到当前的值中，将取消溢出检查。</span><span class="sxs-lookup"><span data-stu-id="6131b-178">When the <xref:System.Data.DataColumn.AutoIncrementStep%2A> value is added to the current value, the overflow check is suppressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6131b-179">下面的示例设置<xref:System.Data.DataColumn.AutoIncrement%2A>， <xref:System.Data.DataColumn.AutoIncrementSeed%2A>，和<xref:System.Data.DataColumn.AutoIncrementStep%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="6131b-179">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6131b-180">该列是计算所得的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-180">The column is a computed column.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.AutoIncrementSeed" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementStep" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
      </Docs>
    </Member>
    <Member MemberName="AutoIncrementSeed">
      <MemberSignature Language="C#" Value="public long AutoIncrementSeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 AutoIncrementSeed" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrementSeed" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrementSeed As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long AutoIncrementSeed { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6131b-181">获取或设置其 <see cref="P:System.Data.DataColumn.AutoIncrement" /> 属性设置为 <see langword="true" /> 的列的起始值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-181">Gets or sets the starting value for a column that has its <see cref="P:System.Data.DataColumn.AutoIncrement" /> property set to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="6131b-182">默认值为 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-182">The default is 0.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6131b-183">
            <see cref="P:System.Data.DataColumn.AutoIncrement" /> 功能的起始值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-183">The starting value for the <see cref="P:System.Data.DataColumn.AutoIncrement" /> feature.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6131b-184">下面的示例设置<xref:System.Data.DataColumn.AutoIncrement%2A>， <xref:System.Data.DataColumn.AutoIncrementSeed%2A>，和<xref:System.Data.DataColumn.AutoIncrementStep%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="6131b-184">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementStep" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
      </Docs>
    </Member>
    <Member MemberName="AutoIncrementStep">
      <MemberSignature Language="C#" Value="public long AutoIncrementStep { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 AutoIncrementStep" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrementStep" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrementStep As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long AutoIncrementStep { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6131b-185">获取或设置其 <see cref="P:System.Data.DataColumn.AutoIncrement" /> 属性设置为 <see langword="true" /> 的列使用的增量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-185">Gets or sets the increment used by a column with its <see cref="P:System.Data.DataColumn.AutoIncrement" /> property set to <see langword="true" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6131b-186">列的值自动递增的数值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-186">The number by which the value of the column is automatically incremented.</span>
          </span>
          <span data-ttu-id="6131b-187">默认值为 1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-187">The default is 1.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6131b-188">下面的示例设置<xref:System.Data.DataColumn.AutoIncrement%2A>， <xref:System.Data.DataColumn.AutoIncrementSeed%2A>，和<xref:System.Data.DataColumn.AutoIncrementStep%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="6131b-188">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6131b-189">设置的值为零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-189">The value set is zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementSeed" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6131b-190">获取或设置列的标题。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-190">Gets or sets the caption for the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6131b-191">列的标题。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-191">The caption of the column.</span>
          </span>
          <span data-ttu-id="6131b-192">如果没有设置，则返回 <see cref="P:System.Data.DataColumn.ColumnName" /> 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-192">If not set, returns the <see cref="P:System.Data.DataColumn.ColumnName" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6131b-193">你可以使用<xref:System.Data.DataColumn.Caption%2A>属性显示的描述性或友好名称<xref:System.Data.DataColumn>。</span><span class="sxs-lookup"><span data-stu-id="6131b-193">You can use the <xref:System.Data.DataColumn.Caption%2A> property to display a descriptive or friendly name for a <xref:System.Data.DataColumn>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6131b-194">下面的示例创建一个新<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="6131b-194">The following example creates a new <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="6131b-195">然后添加三个<xref:System.Data.DataColumn>对象添加到<xref:System.Data.DataColumnCollection>和设置<xref:System.Data.DataColumn.Caption%2A>每个属性<xref:System.Data.DataColumn>。</span><span class="sxs-lookup"><span data-stu-id="6131b-195">It then adds three <xref:System.Data.DataColumn> objects to a <xref:System.Data.DataColumnCollection> and sets the <xref:System.Data.DataColumn.Caption%2A> property for each <xref:System.Data.DataColumn>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Caption Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Caption Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Caption Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Caption Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
      </Docs>
    </Member>
    <Member MemberName="CheckNotAllowNull">
      <MemberSignature Language="C#" Value="protected internal void CheckNotAllowNull ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void CheckNotAllowNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.CheckNotAllowNull" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub CheckNotAllowNull ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void CheckNotAllowNull();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6131b-196">此成员支持 .NET Framework 结构，不能在代码中直接使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-196">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckUnique">
      <MemberSignature Language="C#" Value="protected void CheckUnique ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckUnique() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.CheckUnique" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CheckUnique ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CheckUnique();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6131b-197">此成员支持 .NET Framework 结构，不能在代码中直接使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-197">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnMapping">
      <MemberSignature Language="C#" Value="public virtual System.Data.MappingType ColumnMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.MappingType ColumnMapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ColumnMapping" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ColumnMapping As MappingType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::MappingType ColumnMapping { System::Data::MappingType get(); void set(System::Data::MappingType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.MappingType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6131b-198">获取或设置列的 <see cref="T:System.Data.MappingType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-198">Gets or sets the <see cref="T:System.Data.MappingType" /> of the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6131b-199">
            <see cref="T:System.Data.MappingType" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-199">One of the <see cref="T:System.Data.MappingType" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6131b-200"><xref:System.Data.DataColumn.ColumnMapping%2A>属性确定如何<xref:System.Data.DataColumn>时映射<xref:System.Data.DataSet>另存为 XML 文档使用<xref:System.Data.DataSet.WriteXml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6131b-200">The <xref:System.Data.DataColumn.ColumnMapping%2A> property determines how a <xref:System.Data.DataColumn> is mapped when a <xref:System.Data.DataSet> is saved as an XML document using the <xref:System.Data.DataSet.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="6131b-201">例如，如果<xref:System.Data.DataColumn>名为"customerID，"并将其<xref:System.Data.DataColumn.ColumnMapping%2A>属性设置为`MappingType.Element`，列的值将产生以下 XML:</span><span class="sxs-lookup"><span data-stu-id="6131b-201">For example, if a <xref:System.Data.DataColumn> is named "customerID," and its <xref:System.Data.DataColumn.ColumnMapping%2A> property is set to `MappingType.Element`, the column value will produce the following XML:</span></span>  
  
```  
<Customers>  
 <customerID>ALFKI</customerID>  
......  
 </Customers>  
 <Orders>  
 <OrderID>12345</OrderID>  
 <customerID>ALFKI</customerID>  
......  
 </Orders>  
```  
  
 <span data-ttu-id="6131b-202">但是，如果同一列映射到`MappingType.Attribute`，生成下面的 XML:</span><span class="sxs-lookup"><span data-stu-id="6131b-202">However, if the same column is mapped to `MappingType.Attribute`, the following XML is produced:</span></span>  
  
```  
<Customers customerID="ALFKI"........more attributes.....>  
 <Order orderID="1234"....more attributes..../>  
 <Order orderID="1234"....more attributes..../>  
...... More orders for this customer  
 </Customers>  
```  
  
 <span data-ttu-id="6131b-203">使用<xref:System.Data.DataColumn.%23ctor%2A>构造函数包含`type`参数指定如何<xref:System.Data.DataColumn>时映射其<xref:System.Data.DataSet>转换为 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="6131b-203">Use the <xref:System.Data.DataColumn.%23ctor%2A> constructor that contains the `type` argument to specificy how the <xref:System.Data.DataColumn> is mapped when its <xref:System.Data.DataSet> is transformed to an XML document.</span></span>  
  
 <span data-ttu-id="6131b-204"><xref:System.Data.DataColumn.ColumnMapping%2A>属性对应于构造函数参数`type`。</span><span class="sxs-lookup"><span data-stu-id="6131b-204">The <xref:System.Data.DataColumn.ColumnMapping%2A> property corresponds to the constructor argument `type`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6131b-205">下面的示例设置<xref:System.Data.DataColumn.ColumnMapping%2A>新类型的属性<xref:System.Data.DataColumn>。</span><span class="sxs-lookup"><span data-stu-id="6131b-205">The following example sets the <xref:System.Data.DataColumn.ColumnMapping%2A> type property of new <xref:System.Data.DataColumn>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ColumnMapping Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnMapping Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ColumnMapping Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnMapping Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnName">
      <MemberSignature Language="C#" Value="public string ColumnName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ColumnName" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ColumnName" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ColumnName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6131b-206">获取或设置 <see cref="T:System.Data.DataColumnCollection" /> 中的列的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-206">Gets or sets the name of the column in the <see cref="T:System.Data.DataColumnCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6131b-207">列的名称。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-207">The name of the column.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6131b-208">当<xref:System.Data.DataColumn>是创建，包含任何<xref:System.Data.DataColumn.ColumnName%2A>值。</span><span class="sxs-lookup"><span data-stu-id="6131b-208">When a <xref:System.Data.DataColumn> is created, it has no <xref:System.Data.DataColumn.ColumnName%2A> value.</span></span> <span data-ttu-id="6131b-209">但是，当<xref:System.Data.DataColumn>添加到<xref:System.Data.DataColumnCollection>为<xref:System.Data.DataTable>对象，它指定一个默认名称 （"Column1"、"Column2"等）。</span><span class="sxs-lookup"><span data-stu-id="6131b-209">However, when the <xref:System.Data.DataColumn> is added to a <xref:System.Data.DataColumnCollection> for a <xref:System.Data.DataTable> object, it is given a default name ("Column1", "Column2", and so on).</span></span>  
  
 <span data-ttu-id="6131b-210">默认情况下，<xref:System.Data.DataColumn.Caption%2A>值设置为<xref:System.Data.DataColumn.ColumnName%2A>值。</span><span class="sxs-lookup"><span data-stu-id="6131b-210">By default, the <xref:System.Data.DataColumn.Caption%2A> value is set to the <xref:System.Data.DataColumn.ColumnName%2A> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6131b-211">下面的示例获取<xref:System.Data.DataColumn.ColumnName%2A>中每个表中每个列<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="6131b-211">The following examples gets the <xref:System.Data.DataColumn.ColumnName%2A> for every column in every table in a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="6131b-212">该示例还演示如何创建<xref:System.Data.DataColumn>用新<xref:System.Data.DataColumn.ColumnName%2A>。</span><span class="sxs-lookup"><span data-stu-id="6131b-212">The example also shows how to create a <xref:System.Data.DataColumn> with a new <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ColumnName Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ColumnName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6131b-213">属性设置为 <see langword="null" /> 或空字符串，且列属于一个集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-213">The property is set to <see langword="null" /> or an empty string and the column belongs to a collection.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DuplicateNameException">
          <span data-ttu-id="6131b-214">集合中已经存在同名称的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-214">A column with the same name already exists in the collection.</span>
          </span>
          <span data-ttu-id="6131b-215">名称比较不区分大小写。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-215">The name comparison is not case sensitive.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.Caption" />
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public Type DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DataType" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DataType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.ColumnTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6131b-216">获取或设置存储在列中的数据的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-216">Gets or sets the type of data stored in the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6131b-217">一个 <see cref="T:System.Type" /> 对象，它表示列数据类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-217">A <see cref="T:System.Type" /> object that represents the column data type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6131b-218">设置<xref:System.Data.DataColumn.DataType%2A>值是的从而保证正确创建和更新数据源中的数据十分重要。</span><span class="sxs-lookup"><span data-stu-id="6131b-218">Setting the <xref:System.Data.DataColumn.DataType%2A> value is very important to guaranteeing the correct creation and updating of data in a data source.</span></span>  
  
 <span data-ttu-id="6131b-219"><xref:System.Data.DataColumn.DataType%2A>属性支持以下基的.NET Framework 数据类型：</span><span class="sxs-lookup"><span data-stu-id="6131b-219">The <xref:System.Data.DataColumn.DataType%2A> property supports the following base .NET Framework data types:</span></span>  
  
-   <xref:System.Boolean>  
  
-   <xref:System.Byte>  
  
-   <xref:System.Char>  
  
-   <xref:System.DateTime>  
  
-   <xref:System.Decimal>  
  
-   <xref:System.Double>  
  
-   <xref:System.Guid>  
  
-   <xref:System.Int16>  
  
-   <xref:System.Int32>  
  
-   <xref:System.Int64>  
  
-   <xref:System.SByte>  
  
-   <xref:System.Single>  
  
-   <xref:System.String>  
  
-   <xref:System.TimeSpan>  
  
-   <xref:System.UInt16>  
  
-   <xref:System.UInt32>  
  
-   <xref:System.UInt64>  
  
 <span data-ttu-id="6131b-220">以及以下数组类型：</span><span class="sxs-lookup"><span data-stu-id="6131b-220">as well as the following array type:</span></span>  
  
-   `Byte[]`  
  
 <span data-ttu-id="6131b-221">在列之后更改此属性已开始存储数据时，会生成异常。</span><span class="sxs-lookup"><span data-stu-id="6131b-221">An exception is generated when changing this property after the column has begun storing data.</span></span>  
  
 <span data-ttu-id="6131b-222">如果<xref:System.Data.DataColumn.AutoIncrement%2A>设置为`true`之前设置<xref:System.Data.DataColumn.DataType%2A>属性，并且尝试将类型设置为除整数类型，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="6131b-222">If <xref:System.Data.DataColumn.AutoIncrement%2A> is set to `true` before setting the <xref:System.Data.DataColumn.DataType%2A> property, and you try to set the type to anything except an integer type, an exception is generated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6131b-223">数据类型的列`Byte[]`只要求在某些情况下的特殊处理，因为与基的.NET Framework 数据类型，它是引用数据类型。</span><span class="sxs-lookup"><span data-stu-id="6131b-223">A column of data type `Byte[]` requires special treatment in certain cases since, unlike the base .NET Framework data types, it is a reference data type.</span></span> <span data-ttu-id="6131b-224">如果数据类型的列`Byte[]`用作<xref:System.Data.DataTable.PrimaryKey%2A>，或被<xref:System.Data.DataView.Sort%2A>或<xref:System.Data.DataView.RowFilter%2A>键<xref:System.Data.DataView>，对该列的值的任何更改都必须包括将`Byte[]`列值赋给单独实例化`Byte[]`对象。</span><span class="sxs-lookup"><span data-stu-id="6131b-224">If a column of data type `Byte[]` is used as a <xref:System.Data.DataTable.PrimaryKey%2A>, or as a <xref:System.Data.DataView.Sort%2A> or <xref:System.Data.DataView.RowFilter%2A> key for a <xref:System.Data.DataView>, any change to the column value must involve assigning the `Byte[]` column value to a separately instantiated `Byte[]` object.</span></span> <span data-ttu-id="6131b-225">此分配需要触发的排序、 筛选和主键操作由使用的内部索引更新。</span><span class="sxs-lookup"><span data-stu-id="6131b-225">This assignment is required to trigger the update of the internal indexes used by sorting, filtering, and primary key operations.</span></span> <span data-ttu-id="6131b-226">下面的示例对此进行演示：</span><span class="sxs-lookup"><span data-stu-id="6131b-226">This is illustrated by the following example:</span></span>  
  
```  
byte[] columnValue = (byte[])myDataTable.Rows[0][0];  
byte[] newValue = (byte[])columnValue.Clone();  
newValue[1] = 2;  
myDataTable.Rows[0][0] = newValue;  
```  
  
> [!NOTE]
>  <span data-ttu-id="6131b-227">尽管可以将列定义为数据类型不是基的.NET Framework 数据类型和`Byte[]`，这样的列将被视为用户定义的类型，根据以下使用情况限制。</span><span class="sxs-lookup"><span data-stu-id="6131b-227">Although it is possible to define a column as data type other than the base .NET Framework data types and `Byte[]`, such a column will be treated as a user-defined type, subject to the following usage restrictions.</span></span> <span data-ttu-id="6131b-228">(有关用户定义的类型的详细信息，请参阅[创建和使用用户定义类型](http://msdn.microsoft.com/library/ec0266d2-7e5b-47e4-938a-85ac9d04fa40)。)</span><span class="sxs-lookup"><span data-stu-id="6131b-228">(For more information on user-defined types, see [Creating and Using User-Defined Types](http://msdn.microsoft.com/library/ec0266d2-7e5b-47e4-938a-85ac9d04fa40).)</span></span>  
  
-   <span data-ttu-id="6131b-229">列不能属于<xref:System.Data.DataView.RowFilter%2A>或<xref:System.Data.DataTable.Select%2A>表达式。</span><span class="sxs-lookup"><span data-stu-id="6131b-229">The column cannot be part of a <xref:System.Data.DataView.RowFilter%2A> or <xref:System.Data.DataTable.Select%2A> expression.</span></span>  
  
-   <span data-ttu-id="6131b-230">如果列用作<xref:System.Data.DataTable.PrimaryKey%2A>，或被<xref:System.Data.DataView.Sort%2A>或<xref:System.Data.DataView>，必须将视为不可变字段; 添加到表后，必须不会更改列数据。</span><span class="sxs-lookup"><span data-stu-id="6131b-230">If the column is used as a <xref:System.Data.DataTable.PrimaryKey%2A>, or as a <xref:System.Data.DataView.Sort%2A> or for a <xref:System.Data.DataView>, it must be treated as an immutable field; the column data must not be changed once it has been added to the table.</span></span>  
  
-   <span data-ttu-id="6131b-231">其<xref:System.Data.DataColumn.ColumnMapping%2A>可以仅设置为`MappingType.Element`。</span><span class="sxs-lookup"><span data-stu-id="6131b-231">Its <xref:System.Data.DataColumn.ColumnMapping%2A> can be only set to `MappingType.Element`.</span></span>  
  
-   <span data-ttu-id="6131b-232">列的数据类型必须为的实现都必须标记为类<xref:System.SerializableAttribute>，并且如果需要实现<xref:System.Runtime.Serialization.ISerializable>或<xref:System.Xml.Serialization.IXmlSerializable>接口。</span><span class="sxs-lookup"><span data-stu-id="6131b-232">The class that implements the column’s data type must be must be marked with the <xref:System.SerializableAttribute>, and if necessary implement the <xref:System.Runtime.Serialization.ISerializable> or <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
-   <span data-ttu-id="6131b-233">更改跟踪的支持是有限的。</span><span class="sxs-lookup"><span data-stu-id="6131b-233">Support for change tracking is limited.</span></span> <span data-ttu-id="6131b-234">若要利用<xref:System.Data.DataTable>类的更改跟踪机制，实现列的数据类型的类必须实现<xref:System.ComponentModel.IChangeTracking>接口，或者接管通知的责任<xref:System.Data.DataRow>当列的值已修改，或者通过调用<xref:System.Data.DataRow.SetModified%2A>在该行上或通过将该列的值对象分配给一个单独实例化的列的值对象。</span><span class="sxs-lookup"><span data-stu-id="6131b-234">To utilize the <xref:System.Data.DataTable> class’s change tracking mechanism, the class that implements the column’s data type must either implement the <xref:System.ComponentModel.IChangeTracking> interface, or take over the responsibility for informing the <xref:System.Data.DataRow> when the column value has been modified, either by calling <xref:System.Data.DataRow.SetModified%2A> on the row or by assigning the column value object to a separately instantiated column value object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6131b-235">下面的示例将添加到多个数据类型的列<xref:System.Data.DataTable>，然后将一个行添加到表。</span><span class="sxs-lookup"><span data-stu-id="6131b-235">The following example adds columns of several data types to a <xref:System.Data.DataTable>, and then adds one row to the table.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataType Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataType Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataType Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6131b-236">列已经存储了数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-236">The column already has data stored.</span>
          </span>
        </exception>
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Type.GetType" />
      </Docs>
    </Member>
    <Member MemberName="DateTimeMode">
      <MemberSignature Language="C#" Value="public System.Data.DataSetDateTime DateTimeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataSetDateTime DateTimeMode" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DateTimeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DateTimeMode As DataSetDateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataSetDateTime DateTimeMode { System::Data::DataSetDateTime get(); void set(System::Data::DataSetDateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataSetDateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6131b-237">获取或设置列的 <see langword="DateTimeMode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-237">Gets or sets the <see langword="DateTimeMode" /> for the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6131b-238">所指定的列的 <see cref="T:System.Data.DataSetDateTime" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-238">The <see cref="T:System.Data.DataSetDateTime" /> for the specified column.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6131b-239"><xref:System.Data.DataColumn.DateTimeMode%2A>行添加到后，无法修改<xref:System.Data.DataColumn>，除外修改从<xref:System.Data.DataSetDateTime.Unspecified>和<xref:System.Data.DataSetDateTime.UnspecifiedLocal>，反之亦然。</span><span class="sxs-lookup"><span data-stu-id="6131b-239">The <xref:System.Data.DataColumn.DateTimeMode%2A> cannot be modified after rows are added to a <xref:System.Data.DataColumn>, except for modifying from <xref:System.Data.DataSetDateTime.Unspecified> and <xref:System.Data.DataSetDateTime.UnspecifiedLocal> or vice-versa.</span></span> <span data-ttu-id="6131b-240">从修改`UnspecifiedLocal`到`Unspecified`和相反的操作允许，因为这两个选项之间的差异仅在序列化过程中，不影响存储。</span><span class="sxs-lookup"><span data-stu-id="6131b-240">The modification from `UnspecifiedLocal` to `Unspecified` and vice-versa is allowed as the difference between these two options is only during serialization and does not affect the storage.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public object DefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.DefaultValueTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6131b-241">在创建新行时获取或设置列的默认值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-241">Gets or sets the default value for the column when you are creating new rows.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6131b-242">适合于列的 <see cref="P:System.Data.DataColumn.DataType" /> 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-242">A value appropriate to the column's <see cref="P:System.Data.DataColumn.DataType" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6131b-243">默认值是自动分配给列的值时<xref:System.Data.DataRow>创建 (例如，日期和时间<xref:System.Data.DataRow>已创建。</span><span class="sxs-lookup"><span data-stu-id="6131b-243">A default value is the value that is automatically assigned to the column when a <xref:System.Data.DataRow> is created (for example, the date and time when the <xref:System.Data.DataRow> was created.</span></span>  
  
 <span data-ttu-id="6131b-244">当<xref:System.Data.DataColumn.AutoIncrement%2A>设置为 true，可以有没有默认值。</span><span class="sxs-lookup"><span data-stu-id="6131b-244">When <xref:System.Data.DataColumn.AutoIncrement%2A> is set to true, there can be no default value.</span></span>  
  
 <span data-ttu-id="6131b-245">你可以创建新的行使用<xref:System.Data.DataRow.ItemArray%2A>属性<xref:System.Data.DataRow>类和传递的值的数组的方法。</span><span class="sxs-lookup"><span data-stu-id="6131b-245">You can create a new row using the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class and passing the method an array of values.</span></span> <span data-ttu-id="6131b-246">这是默认值为列的潜在问题，因为其值自动生成。</span><span class="sxs-lookup"><span data-stu-id="6131b-246">This is a potential problem for a column with a default value because its value is generated automatically.</span></span> <span data-ttu-id="6131b-247">若要使用<xref:System.Data.DataRow.ItemArray%2A>属性对这样的列，将放置`null`在数组中的列的位置。</span><span class="sxs-lookup"><span data-stu-id="6131b-247">To use the <xref:System.Data.DataRow.ItemArray%2A> property with such a column, place `null` in the column's position in the array.</span></span> <span data-ttu-id="6131b-248">有关更多信息，请参见 <xref:System.Data.DataRow.ItemArray%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="6131b-248">For more information, see the <xref:System.Data.DataRow.ItemArray%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6131b-249">下面的示例创建几个<xref:System.Data.DataColumn>对象具有不同的数据类型，并设置适当的默认值为每一列。</span><span class="sxs-lookup"><span data-stu-id="6131b-249">The following example creates several <xref:System.Data.DataColumn> objects that have different data types, and sets appropriate default values to each column.</span></span>  
  
 [!code-vb[Classic WebData DataColumn.DefaultValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DefaultValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="6131b-250">在添加行时，默认值不是列的数据类型的实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-250">When you are adding a row, the default value is not an instance of the column's data type.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="T:System.Data.UniqueConstraint" />
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public string Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Expression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6131b-251">获取或设置表达式，用于筛选行、计算列中的值或创建聚合列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-251">Gets or sets the expression used to filter rows, calculate the values in a column, or create an aggregate column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6131b-252">用来计算列的值，或创建聚合列的表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-252">An expression to calculate the value of a column, or create an aggregate column.</span>
          </span>
          <span data-ttu-id="6131b-253">表达式的返回类型由列的 <see cref="P:System.Data.DataColumn.DataType" /> 来确定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-253">The return type of an expression is determined by the <see cref="P:System.Data.DataColumn.DataType" /> of the column.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6131b-254">一种用途<xref:System.Data.DataColumn.Expression%2A>属性是创建计算的列。</span><span class="sxs-lookup"><span data-stu-id="6131b-254">One use of the <xref:System.Data.DataColumn.Expression%2A> property is to create calculated columns.</span></span> <span data-ttu-id="6131b-255">例如，若要计算税金值，单价乘以特定区域的税率。</span><span class="sxs-lookup"><span data-stu-id="6131b-255">For example, to calculate a tax value, the unit price is multiplied by a tax rate of a specific region.</span></span> <span data-ttu-id="6131b-256">由于税率变化区域区域，因此将不可能将单一税率列; 中相反，使用计算值<xref:System.Data.DataColumn.Expression%2A>属性，如以下部分中的 Visual Basic 代码中所示：</span><span class="sxs-lookup"><span data-stu-id="6131b-256">Because tax rates vary from region to region, it would be impossible to put a single tax rate in a column; instead, the value is calculated using the <xref:System.Data.DataColumn.Expression%2A> property, as shown in the Visual Basic code in the following section:</span></span>  
  
 <span data-ttu-id="6131b-257">DataSet1.Tables("Products").Columns("tax").Expression = "UnitPrice \* 0.086"</span><span class="sxs-lookup"><span data-stu-id="6131b-257">DataSet1.Tables("Products").Columns("tax").Expression = "UnitPrice \* 0.086"</span></span>  
  
 <span data-ttu-id="6131b-258">第二个用途是创建聚合列。</span><span class="sxs-lookup"><span data-stu-id="6131b-258">A second use is to create an aggregate column.</span></span> <span data-ttu-id="6131b-259">类似于计算得出的值，聚合执行基于的完整集合中的行的操作<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="6131b-259">Similar to a calculated value, an aggregate performs an operation based on the complete set of rows in the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="6131b-260">一个简单的示例是计算返回集中的行数。</span><span class="sxs-lookup"><span data-stu-id="6131b-260">A simple example is to count the number of rows returned in the set.</span></span> <span data-ttu-id="6131b-261">这是想要用于此 Visual Basic 代码中所示计数按特定的销售人员，完成的事务数的方法：</span><span class="sxs-lookup"><span data-stu-id="6131b-261">This is the method you would use to count the number of transactions completed by a particular salesperson, as shown in this Visual Basic code:</span></span>  
  
```  
DataSet1.Tables("Orders").Columns("OrderCount").Expression = "Count(OrderID)"  
```  
  
## <a name="expression-syntax"></a><span data-ttu-id="6131b-262">表达式语法</span><span class="sxs-lookup"><span data-stu-id="6131b-262">Expression Syntax</span></span>  
 <span data-ttu-id="6131b-263">当你创建一个表达式时，使用<xref:System.Data.DataColumn.ColumnName%2A>属性引用列。</span><span class="sxs-lookup"><span data-stu-id="6131b-263">When you create an expression, use the <xref:System.Data.DataColumn.ColumnName%2A> property to refer to columns.</span></span> <span data-ttu-id="6131b-264">例如，如果<xref:System.Data.DataColumn.ColumnName%2A>一列是"UnitPrice"和另一个"数量"，请将对表达式，如下所示：</span><span class="sxs-lookup"><span data-stu-id="6131b-264">For example, if the <xref:System.Data.DataColumn.ColumnName%2A> for one column is "UnitPrice", and another "Quantity", the expression would be as follows:</span></span>  
  
 <span data-ttu-id="6131b-265">"UnitPrice \* Quantity"</span><span class="sxs-lookup"><span data-stu-id="6131b-265">"UnitPrice \* Quantity"</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6131b-266">如果在表达式中使用某列，然后表达式则称该列上具有依赖关系。</span><span class="sxs-lookup"><span data-stu-id="6131b-266">If a column is used in an expression, then the expression is said to have a dependency on that column.</span></span> <span data-ttu-id="6131b-267">如果重命名或删除依赖列，不引发异常。</span><span class="sxs-lookup"><span data-stu-id="6131b-267">If a dependent column is renamed or removed, no exception is thrown.</span></span> <span data-ttu-id="6131b-268">访问现在中断表达式列时，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="6131b-268">An exception will be thrown when the now-broken expression column is accessed.</span></span>  
  
 <span data-ttu-id="6131b-269">当你创建的筛选器表达式时，将用单引号的字符串：</span><span class="sxs-lookup"><span data-stu-id="6131b-269">When you create an expression for a filter, enclose strings with single quotation marks:</span></span>  
  
 <span data-ttu-id="6131b-270">"LastName = 'Jones'"</span><span class="sxs-lookup"><span data-stu-id="6131b-270">"LastName = 'Jones'"</span></span>  
  
 <span data-ttu-id="6131b-271">如果列名称包含任何非字母数字字符或数字开头 （区分大小写） 匹配任何以下保留字，则需要特殊处理，如以下各段中所述。</span><span class="sxs-lookup"><span data-stu-id="6131b-271">If a column name contains any non-alphanumeric characters or starts with a digit or matches (case-insensitively) any of the following reserved words, it requires special handling, as described in the following paragraphs.</span></span>  
  
 <span data-ttu-id="6131b-272">And</span><span class="sxs-lookup"><span data-stu-id="6131b-272">And</span></span>  
  
 <span data-ttu-id="6131b-273">之间</span><span class="sxs-lookup"><span data-stu-id="6131b-273">Between</span></span>  
  
 <span data-ttu-id="6131b-274">子级</span><span class="sxs-lookup"><span data-stu-id="6131b-274">Child</span></span>  
  
 <span data-ttu-id="6131b-275">False</span><span class="sxs-lookup"><span data-stu-id="6131b-275">False</span></span>  
  
 <span data-ttu-id="6131b-276">内</span><span class="sxs-lookup"><span data-stu-id="6131b-276">In</span></span>  
  
 <span data-ttu-id="6131b-277">是</span><span class="sxs-lookup"><span data-stu-id="6131b-277">Is</span></span>  
  
 <span data-ttu-id="6131b-278">Like</span><span class="sxs-lookup"><span data-stu-id="6131b-278">Like</span></span>  
  
 <span data-ttu-id="6131b-279">Not</span><span class="sxs-lookup"><span data-stu-id="6131b-279">Not</span></span>  
  
 <span data-ttu-id="6131b-280">null</span><span class="sxs-lookup"><span data-stu-id="6131b-280">Null</span></span>  
  
 <span data-ttu-id="6131b-281">Or</span><span class="sxs-lookup"><span data-stu-id="6131b-281">Or</span></span>  
  
 <span data-ttu-id="6131b-282">父级</span><span class="sxs-lookup"><span data-stu-id="6131b-282">Parent</span></span>  
  
 <span data-ttu-id="6131b-283">True</span><span class="sxs-lookup"><span data-stu-id="6131b-283">True</span></span>  
  
 <span data-ttu-id="6131b-284">如果列名称满足上述条件之一，它必须被包括在方括号或"'"（重音符） 引号。</span><span class="sxs-lookup"><span data-stu-id="6131b-284">If a column name satisfies one of the above conditions, it must be wrapped in either square brackets or the "\`" (grave accent) quotes.</span></span> <span data-ttu-id="6131b-285">例如，若要使用名为"列 #"在表达式中的列，则应编写任一"[列 #]":</span><span class="sxs-lookup"><span data-stu-id="6131b-285">For example, to use a column named "Column#" in an expression, you would write either "[Column#]":</span></span>  
  
 <span data-ttu-id="6131b-286">总 \* [列 #]</span><span class="sxs-lookup"><span data-stu-id="6131b-286">Total \* [Column#]</span></span>  
  
 <span data-ttu-id="6131b-287">或"\`列 #":</span><span class="sxs-lookup"><span data-stu-id="6131b-287">or "\`Column#`":</span></span>  
  
 <span data-ttu-id="6131b-288">总 \*\`列 #</span><span class="sxs-lookup"><span data-stu-id="6131b-288">Total \* \`Column#\`</span></span>  
  
 <span data-ttu-id="6131b-289">如果列名称括在方括号然后任何] 和\\必须通过将它们与反斜杠转义字符 （但不是属于任何其他字符），在它 ("\\") 字符。</span><span class="sxs-lookup"><span data-stu-id="6131b-289">If the column name is enclosed in square brackets then any ']' and '\\' characters (but not any other characters) in it must be escaped by prepending them with the backslash ("\\") character.</span></span> <span data-ttu-id="6131b-290">如果列名称括在重音字符然后它不能包含在其中任何重音字符。</span><span class="sxs-lookup"><span data-stu-id="6131b-290">If the column name is enclosed in grave accent characters then it must not contain any grave accent characters in it.</span></span> <span data-ttu-id="6131b-291">例如，一个名为的列"列 []\\"，则会写入：</span><span class="sxs-lookup"><span data-stu-id="6131b-291">For example, a column named "Column[]\\" would be written:</span></span>  
  
 <span data-ttu-id="6131b-292">总 \* [列 [\\]\\\\]</span><span class="sxs-lookup"><span data-stu-id="6131b-292">Total \* [Column[\\]\\\\]</span></span>  
  
 <span data-ttu-id="6131b-293">或</span><span class="sxs-lookup"><span data-stu-id="6131b-293">or</span></span>  
  
 <span data-ttu-id="6131b-294">总 \*\`列]\\`</span><span class="sxs-lookup"><span data-stu-id="6131b-294">Total \* \`Column[]\\`</span></span>  
  
## <a name="user-defined-values"></a><span data-ttu-id="6131b-295">用户定义的值</span><span class="sxs-lookup"><span data-stu-id="6131b-295">User-Defined Values</span></span>  
 <span data-ttu-id="6131b-296">可能在表达式中使用用户定义的值与列的值进行比较。</span><span class="sxs-lookup"><span data-stu-id="6131b-296">User-defined values may be used within expressions to be compared with column values.</span></span> <span data-ttu-id="6131b-297">字符串值应括在单引号内 （和字符串值中的每个单引号字符必须通过将它与另一个单引号字符进行转义）。</span><span class="sxs-lookup"><span data-stu-id="6131b-297">String values should be enclosed within single quotation marks (and each single quotation character in a string value has to be escaped by prepending it with another single quotation character).</span></span> <span data-ttu-id="6131b-298">日期值应包含在井号 （#） 或单引号 （'） 基于数据提供程序。</span><span class="sxs-lookup"><span data-stu-id="6131b-298">Date values should be enclosed within pound signs (#) or single quotes (') based on the data provider.</span></span> <span data-ttu-id="6131b-299">小数位数和科学记数法是允许的数字值。</span><span class="sxs-lookup"><span data-stu-id="6131b-299">Decimals and scientific notation are permissible for numeric values.</span></span> <span data-ttu-id="6131b-300">例如:</span><span class="sxs-lookup"><span data-stu-id="6131b-300">For example:</span></span>  
  
 <span data-ttu-id="6131b-301">"FirstName = 'John'"</span><span class="sxs-lookup"><span data-stu-id="6131b-301">"FirstName = 'John'"</span></span>  
  
 <span data-ttu-id="6131b-302">"价格 < = 50.00"</span><span class="sxs-lookup"><span data-stu-id="6131b-302">"Price <= 50.00"</span></span>  
  
 <span data-ttu-id="6131b-303">"出生日期 < #1/31/&#82;"</span><span class="sxs-lookup"><span data-stu-id="6131b-303">"Birthdate < #1/31/82#"</span></span>  
  
 <span data-ttu-id="6131b-304">对于包含枚举值的列，将值强制转换为整数数据类型。</span><span class="sxs-lookup"><span data-stu-id="6131b-304">For columns that contain enumeration values, cast the value to an integer data type.</span></span> <span data-ttu-id="6131b-305">例如:</span><span class="sxs-lookup"><span data-stu-id="6131b-305">For example:</span></span>  
  
 <span data-ttu-id="6131b-306">"EnumColumn = 5"</span><span class="sxs-lookup"><span data-stu-id="6131b-306">"EnumColumn = 5"</span></span>  
  
## <a name="parsing-literal-expressions"></a><span data-ttu-id="6131b-307">分析文本表达式</span><span class="sxs-lookup"><span data-stu-id="6131b-307">Parsing Literal Expressions</span></span>  
 <span data-ttu-id="6131b-308">所有文本表达式必须表示固定区域性区域设置中。</span><span class="sxs-lookup"><span data-stu-id="6131b-308">All literal expressions must be expressed in the invariant culture locale.</span></span> <span data-ttu-id="6131b-309">当`DataSet`分析并转换文本表达式时，它始终使用固定区域性，而不是当前区域性。</span><span class="sxs-lookup"><span data-stu-id="6131b-309">When `DataSet` parses and converts literal expressions, it always uses the invariant culture, not the current culture.</span></span>  
  
 <span data-ttu-id="6131b-310">用单引号引起值时标识字符串。</span><span class="sxs-lookup"><span data-stu-id="6131b-310">String literals are identified when there are single quotes surrounding the value.</span></span> <span data-ttu-id="6131b-311">例如:</span><span class="sxs-lookup"><span data-stu-id="6131b-311">For example:</span></span>  
  
 <span data-ttu-id="6131b-312">'John'</span><span class="sxs-lookup"><span data-stu-id="6131b-312">'John'</span></span>  
  
 <span data-ttu-id="6131b-313">`Boolean` 文本为 true 和 false;它们不带引号在表达式中。</span><span class="sxs-lookup"><span data-stu-id="6131b-313">`Boolean` literals are true and false; they are not quoted in expressions.</span></span>  
  
 <span data-ttu-id="6131b-314">`Integer` 文本 [+-]？[0-9] + 被视为`System.Int32`，`System.Int64`或`System.Double`。</span><span class="sxs-lookup"><span data-stu-id="6131b-314">`Integer` literals [+-]?[0-9]+ are treated as `System.Int32`, `System.Int64` or `System.Double`.</span></span> <span data-ttu-id="6131b-315">`System.Double` 可能会丢失精度，具体取决于数的大小。</span><span class="sxs-lookup"><span data-stu-id="6131b-315">`System.Double` can lose precision depending on how large the number is.</span></span> <span data-ttu-id="6131b-316">例如，如果在文本中的号码是 2147483650，`DataSet`首先会尝试将数字作为解析`Int32`。</span><span class="sxs-lookup"><span data-stu-id="6131b-316">For example, if the number in the literal is 2147483650, `DataSet` will first attempt to parse the number as an `Int32`.</span></span> <span data-ttu-id="6131b-317">由于为太大，这种情况将不会成功。</span><span class="sxs-lookup"><span data-stu-id="6131b-317">This will not succeed because the number is too large.</span></span> <span data-ttu-id="6131b-318">在这种情况下`DataSet`将分析将数字显示为`Int64`，这将会成功。</span><span class="sxs-lookup"><span data-stu-id="6131b-318">In this case `DataSet` will parse the number as an `Int64`, which will succeed.</span></span> <span data-ttu-id="6131b-319">如果文本是一个大于最大值的一个 Int64，`DataSet`将分析文本使用`Double`。</span><span class="sxs-lookup"><span data-stu-id="6131b-319">If the literal was a number larger than the maximum value of an Int64, `DataSet` will parse the literal using `Double`.</span></span>  
  
 <span data-ttu-id="6131b-320">使用科学记数法，例如 4.42372 e 的实际文本-30，被分析使用`System.Double`。</span><span class="sxs-lookup"><span data-stu-id="6131b-320">Real literals using scientific notation, such as 4.42372E-30, are parsed using `System.Double`.</span></span>  
  
 <span data-ttu-id="6131b-321">没有科学记数法，但有小数点，实际的文本将被视为`System.Decimal`。</span><span class="sxs-lookup"><span data-stu-id="6131b-321">Real literals without scientific notation, but with a decimal point, are treated as `System.Decimal`.</span></span> <span data-ttu-id="6131b-322">如果数超过了支持的最大或最小值`System.Decimal`，则将其解析为`System.Double`。</span><span class="sxs-lookup"><span data-stu-id="6131b-322">If the number exceeds the maximum or minimum values supported by `System.Decimal`, then it is parsed as a `System.Double`.</span></span> <span data-ttu-id="6131b-323">例如:</span><span class="sxs-lookup"><span data-stu-id="6131b-323">For example:</span></span>  
  
 <span data-ttu-id="6131b-324">142526.144524 将转换为`Decimal`。</span><span class="sxs-lookup"><span data-stu-id="6131b-324">142526.144524 will be converted to a `Decimal`.</span></span>  
  
 <span data-ttu-id="6131b-325">345262.78036719560925667 将被视为`Double`。</span><span class="sxs-lookup"><span data-stu-id="6131b-325">345262.78036719560925667 will be treated as a `Double`.</span></span>  
  
## <a name="operators"></a><span data-ttu-id="6131b-326">运算符</span><span class="sxs-lookup"><span data-stu-id="6131b-326">Operators</span></span>  
 <span data-ttu-id="6131b-327">串联被允许使用布尔 AND、 OR 和 NOT 运算符。</span><span class="sxs-lookup"><span data-stu-id="6131b-327">Concatenation is allowed using Boolean AND, OR, and NOT operators.</span></span> <span data-ttu-id="6131b-328">你可以使用括号来组合子句，并强制优先。</span><span class="sxs-lookup"><span data-stu-id="6131b-328">You can use parentheses to group clauses and force precedence.</span></span> <span data-ttu-id="6131b-329">AND 运算符的优先级高于其他运算符。</span><span class="sxs-lookup"><span data-stu-id="6131b-329">The AND operator has precedence over other operators.</span></span> <span data-ttu-id="6131b-330">例如:</span><span class="sxs-lookup"><span data-stu-id="6131b-330">For example:</span></span>  
  
 <span data-ttu-id="6131b-331">(姓氏 = Smith 或姓氏 = 'Jones')和名字 = John</span><span class="sxs-lookup"><span data-stu-id="6131b-331">(LastName = 'Smith' OR LastName = 'Jones') AND FirstName = 'John'</span></span>  
  
 <span data-ttu-id="6131b-332">当创建比较表达式时，不允许使用以下运算符：</span><span class="sxs-lookup"><span data-stu-id="6131b-332">When you create comparison expressions, the following operators are allowed:</span></span>  
  
 \<  
  
 >  
  
 \<=  
  
 >=  
  
 <>  
  
 =  
  
 <span data-ttu-id="6131b-333">IN</span><span class="sxs-lookup"><span data-stu-id="6131b-333">IN</span></span>  
  
 <span data-ttu-id="6131b-334">LIKE</span><span class="sxs-lookup"><span data-stu-id="6131b-334">LIKE</span></span>  
  
 <span data-ttu-id="6131b-335">在表达式中还支持下列算术运算符：</span><span class="sxs-lookup"><span data-stu-id="6131b-335">The following arithmetic operators are also supported in expressions:</span></span>  
  
 <span data-ttu-id="6131b-336">\+ （添加）</span><span class="sxs-lookup"><span data-stu-id="6131b-336">\+ (addition)</span></span>  
  
 <span data-ttu-id="6131b-337">\-（减号）</span><span class="sxs-lookup"><span data-stu-id="6131b-337">\- (subtraction)</span></span>  
  
 <span data-ttu-id="6131b-338">\* （乘）</span><span class="sxs-lookup"><span data-stu-id="6131b-338">\* (multiplication)</span></span>  
  
 <span data-ttu-id="6131b-339">/ （分割）</span><span class="sxs-lookup"><span data-stu-id="6131b-339">/ (division)</span></span>  
  
 <span data-ttu-id="6131b-340">%（取模）</span><span class="sxs-lookup"><span data-stu-id="6131b-340">% (modulus)</span></span>  
  
## <a name="string-operators"></a><span data-ttu-id="6131b-341">字符串运算符</span><span class="sxs-lookup"><span data-stu-id="6131b-341">String Operators</span></span>  
 <span data-ttu-id="6131b-342">若要连接字符串，使用 + 字符。</span><span class="sxs-lookup"><span data-stu-id="6131b-342">To concatenate a string, use the + character.</span></span> <span data-ttu-id="6131b-343">值<xref:System.Data.DataSet.CaseSensitive%2A>属性<xref:System.Data.DataSet>类确定字符串比较是否区分大小写。</span><span class="sxs-lookup"><span data-stu-id="6131b-343">The value of the <xref:System.Data.DataSet.CaseSensitive%2A> property of the <xref:System.Data.DataSet> class determines whether string comparisons are case-sensitive.</span></span> <span data-ttu-id="6131b-344">但是，你可以重写该值与<xref:System.Data.DataTable.CaseSensitive%2A>属性<xref:System.Data.DataTable>类。</span><span class="sxs-lookup"><span data-stu-id="6131b-344">However, you can override that value with the <xref:System.Data.DataTable.CaseSensitive%2A> property of the <xref:System.Data.DataTable> class.</span></span>  
  
## <a name="wildcard-characters"></a><span data-ttu-id="6131b-345">通配符</span><span class="sxs-lookup"><span data-stu-id="6131b-345">Wildcard Characters</span></span>  
 <span data-ttu-id="6131b-346">同时 \* 和 %可互换的 LIKE 比较中的通配符字符。</span><span class="sxs-lookup"><span data-stu-id="6131b-346">Both the \* and % can be used interchangeably for wildcard characters in a LIKE comparison.</span></span> <span data-ttu-id="6131b-347">如果 LIKE 子句中的字符串包含 \* 或 %，这些字符应括在方括号 ([]) 中。</span><span class="sxs-lookup"><span data-stu-id="6131b-347">If the string in a LIKE clause contains a \* or %, those characters should be enclosed in brackets ([]).</span></span> <span data-ttu-id="6131b-348">如果在子句中有一个方括号，每个括号字符应括在方括号中 （，例如 [[] 或 []]） 中。</span><span class="sxs-lookup"><span data-stu-id="6131b-348">If a bracket is in the clause, each bracket character should be enclosed in brackets (for example [[] or []]).</span></span> <span data-ttu-id="6131b-349">开头和末尾模式中，或在模式的末尾或模式的起始位置，都允许使用通配符。</span><span class="sxs-lookup"><span data-stu-id="6131b-349">A wildcard is allowed at the start and end of a pattern, or at the end of a pattern, or at the start of a pattern.</span></span> <span data-ttu-id="6131b-350">例如:</span><span class="sxs-lookup"><span data-stu-id="6131b-350">For example:</span></span>  
  
 <span data-ttu-id="6131b-351">"项目名称类似 * 产品\*"</span><span class="sxs-lookup"><span data-stu-id="6131b-351">"ItemName LIKE '*product\*'"</span></span>  
  
 <span data-ttu-id="6131b-352">"项目名称类似 \* 产品"</span><span class="sxs-lookup"><span data-stu-id="6131b-352">"ItemName LIKE '\*product'"</span></span>  
  
 <span data-ttu-id="6131b-353">"ItemName LIKE 'product\*'"</span><span class="sxs-lookup"><span data-stu-id="6131b-353">"ItemName LIKE 'product\*'"</span></span>  
  
 <span data-ttu-id="6131b-354">字符串中间不允许使用通配符。</span><span class="sxs-lookup"><span data-stu-id="6131b-354">Wildcard characters are not allowed in the middle of a string.</span></span> <span data-ttu-id="6131b-355">例如，te \* xt 不允许。</span><span class="sxs-lookup"><span data-stu-id="6131b-355">For example, 'te\*xt' is not allowed.</span></span>  
  
## <a name="parentchild-relation-referencing"></a><span data-ttu-id="6131b-356">引用的父/子关系</span><span class="sxs-lookup"><span data-stu-id="6131b-356">Parent/Child Relation Referencing</span></span>  
 <span data-ttu-id="6131b-357">在表达式中通过预先计算列名称与引用父表`Parent`。</span><span class="sxs-lookup"><span data-stu-id="6131b-357">A parent table may be referenced in an expression by prepending the column name with `Parent`.</span></span> <span data-ttu-id="6131b-358">例如，`Parent.Price`引用名为父表的列`Price`。</span><span class="sxs-lookup"><span data-stu-id="6131b-358">For example, the `Parent.Price` references the parent table's column named `Price`.</span></span>  
  
 <span data-ttu-id="6131b-359">当子具有多个父行时，使用 Parent(RelationName)。列名称。</span><span class="sxs-lookup"><span data-stu-id="6131b-359">When a child has more than one parent row, use Parent(RelationName).ColumnName.</span></span> <span data-ttu-id="6131b-360">例如，Parent(RelationName)。价格引用名价格为通过关系的父表的列。</span><span class="sxs-lookup"><span data-stu-id="6131b-360">For example, the Parent(RelationName).Price references the parent table’s column named Price via the relation.</span></span>  
  
 <span data-ttu-id="6131b-361">可能通过预先计算列名称与在表达式中引用子表中的列`Child`。</span><span class="sxs-lookup"><span data-stu-id="6131b-361">A column in a child table may be referenced in an expression by prepending the column name with `Child`.</span></span> <span data-ttu-id="6131b-362">但是，由于子关系可能返回多个行，你必须在聚合函数包括对子列的引用。</span><span class="sxs-lookup"><span data-stu-id="6131b-362">However, because child relationships may return multiple rows, you must include the reference to the child column in an aggregate function.</span></span> <span data-ttu-id="6131b-363">例如，`Sum(Child.Price)`将返回名为所列的总和`Price`子表中。</span><span class="sxs-lookup"><span data-stu-id="6131b-363">For example, `Sum(Child.Price)` would return the sum of the column named `Price` in the child table.</span></span>  
  
 <span data-ttu-id="6131b-364">如果表具有多个子级，则语法是： `Child(RelationName)`。</span><span class="sxs-lookup"><span data-stu-id="6131b-364">If a table has more than one child, the syntax is: `Child(RelationName)`.</span></span> <span data-ttu-id="6131b-365">例如，如果表具有两个名为的子表`Customers`和`Orders`，和<xref:System.Data.DataRelation>对象命名为`Customers2Orders`，则引用将如下所示：</span><span class="sxs-lookup"><span data-stu-id="6131b-365">For example, if a table has two child tables named `Customers` and `Orders`, and the <xref:System.Data.DataRelation> object is named `Customers2Orders`, the reference would be as follows:</span></span>  
  
 <span data-ttu-id="6131b-366">Avg(Child(Customers2Orders).Quantity)</span><span class="sxs-lookup"><span data-stu-id="6131b-366">Avg(Child(Customers2Orders).Quantity)</span></span>  
  
## <a name="aggregates"></a><span data-ttu-id="6131b-367">聚合</span><span class="sxs-lookup"><span data-stu-id="6131b-367">Aggregates</span></span>  
 <span data-ttu-id="6131b-368">支持以下聚合类型：</span><span class="sxs-lookup"><span data-stu-id="6131b-368">The following aggregate types are supported:</span></span>  
  
 <span data-ttu-id="6131b-369">Sum (Sum)</span><span class="sxs-lookup"><span data-stu-id="6131b-369">Sum (Sum)</span></span>  
  
 <span data-ttu-id="6131b-370">Avg （平均值）</span><span class="sxs-lookup"><span data-stu-id="6131b-370">Avg (Average)</span></span>  
  
 <span data-ttu-id="6131b-371">最小值 （最小值）</span><span class="sxs-lookup"><span data-stu-id="6131b-371">Min (Minimum)</span></span>  
  
 <span data-ttu-id="6131b-372">最大 （最大值）</span><span class="sxs-lookup"><span data-stu-id="6131b-372">Max (Maximum)</span></span>  
  
 <span data-ttu-id="6131b-373">计数 （计数）</span><span class="sxs-lookup"><span data-stu-id="6131b-373">Count (Count)</span></span>  
  
 <span data-ttu-id="6131b-374">StDev （统计标准偏差）</span><span class="sxs-lookup"><span data-stu-id="6131b-374">StDev (Statistical standard deviation)</span></span>  
  
 <span data-ttu-id="6131b-375">Var （统计方差）。</span><span class="sxs-lookup"><span data-stu-id="6131b-375">Var (Statistical variance).</span></span>  
  
 <span data-ttu-id="6131b-376">聚合通常沿着关系执行。</span><span class="sxs-lookup"><span data-stu-id="6131b-376">Aggregates are ordinarily performed along relationships.</span></span> <span data-ttu-id="6131b-377">如父/子关系引用前面讨论的所述使用上面列出的函数和子表列之一创建的聚合表达式。</span><span class="sxs-lookup"><span data-stu-id="6131b-377">Create an aggregate expression by using one of the functions listed earlier and a child table column as detailed in Parent/Child Relation Referencing that was discussed earlier.</span></span> <span data-ttu-id="6131b-378">例如:</span><span class="sxs-lookup"><span data-stu-id="6131b-378">For example:</span></span>  
  
 <span data-ttu-id="6131b-379">Avg(Child.Price)</span><span class="sxs-lookup"><span data-stu-id="6131b-379">Avg(Child.Price)</span></span>  
  
 <span data-ttu-id="6131b-380">Avg(Child(Orders2Details).Price)</span><span class="sxs-lookup"><span data-stu-id="6131b-380">Avg(Child(Orders2Details).Price)</span></span>  
  
 <span data-ttu-id="6131b-381">此外可以对单个表执行聚合。</span><span class="sxs-lookup"><span data-stu-id="6131b-381">An aggregate can also be performed on a single table.</span></span> <span data-ttu-id="6131b-382">例如，若要在列中创建的图形摘要名为"Price":</span><span class="sxs-lookup"><span data-stu-id="6131b-382">For example, to create a summary of figures in a column named "Price":</span></span>  
  
 <span data-ttu-id="6131b-383">Sum(Price)</span><span class="sxs-lookup"><span data-stu-id="6131b-383">Sum(Price)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6131b-384">如果你使用单个表来创建聚合，则不存在任何分组依据功能。</span><span class="sxs-lookup"><span data-stu-id="6131b-384">If you use a single table to create an aggregate, there would be no group-by functionality.</span></span> <span data-ttu-id="6131b-385">相反，所有行将列中都显示相同的值。</span><span class="sxs-lookup"><span data-stu-id="6131b-385">Instead, all rows would display the same value in the column.</span></span>  
  
 <span data-ttu-id="6131b-386">如果表具有任何行，聚合函数将返回`null`。</span><span class="sxs-lookup"><span data-stu-id="6131b-386">If a table has no rows, the aggregate functions will return `null`.</span></span>  
  
 <span data-ttu-id="6131b-387">数据类型可以始终通过检查来确定<xref:System.Data.DataColumn.DataType%2A>列属性。</span><span class="sxs-lookup"><span data-stu-id="6131b-387">Data types can always be determined by examining the <xref:System.Data.DataColumn.DataType%2A> property of a column.</span></span> <span data-ttu-id="6131b-388">你还可以将转换使用 Convert 函数下, 一节中所示的数据类型。</span><span class="sxs-lookup"><span data-stu-id="6131b-388">You can also convert data types using the Convert function, shown in the following section.</span></span>  
  
 <span data-ttu-id="6131b-389">聚合可以仅应用于单个列和聚合，可以使用任何其他表达式。</span><span class="sxs-lookup"><span data-stu-id="6131b-389">An aggregate can only be applied to a single column and no other expressions can be used inside the aggregate.</span></span>  
  
## <a name="functions"></a><span data-ttu-id="6131b-390">函数</span><span class="sxs-lookup"><span data-stu-id="6131b-390">Functions</span></span>  
 <span data-ttu-id="6131b-391">此外支持以下函数：</span><span class="sxs-lookup"><span data-stu-id="6131b-391">The following functions are also supported:</span></span>  
  
 `CONVERT`  
  
|||  
|-|-|  
|<span data-ttu-id="6131b-392">描述</span><span class="sxs-lookup"><span data-stu-id="6131b-392">Description</span></span>|<span data-ttu-id="6131b-393">将特定表达式转换为指定的.NET Framework 类型。</span><span class="sxs-lookup"><span data-stu-id="6131b-393">Converts particular expression to a specified .NET Framework Type.</span></span>|  
|<span data-ttu-id="6131b-394">语法</span><span class="sxs-lookup"><span data-stu-id="6131b-394">Syntax</span></span>|<span data-ttu-id="6131b-395">转换 (`expression`， `type`)</span><span class="sxs-lookup"><span data-stu-id="6131b-395">Convert(`expression`, `type`)</span></span>|  
|<span data-ttu-id="6131b-396">自变量</span><span class="sxs-lookup"><span data-stu-id="6131b-396">Arguments</span></span>|<span data-ttu-id="6131b-397">`expression` --表达式将转换。</span><span class="sxs-lookup"><span data-stu-id="6131b-397">`expression` -- The expression to convert.</span></span><br /><br /> <span data-ttu-id="6131b-398">`type` --将值转换的.NET Framework 类型。</span><span class="sxs-lookup"><span data-stu-id="6131b-398">`type` -- The .NET Framework type to which the value will be converted.</span></span>|  
  
 <span data-ttu-id="6131b-399">Example: myDataColumn.Expression="Convert(total, 'System.Int32')"</span><span class="sxs-lookup"><span data-stu-id="6131b-399">Example: myDataColumn.Expression="Convert(total, 'System.Int32')"</span></span>  
  
 <span data-ttu-id="6131b-400">所有转换都是有效有以下例外：`Boolean`来回可强迫转换`Byte`， `SByte`， `Int16`， `Int32`， `Int64`， `UInt16`， `UInt32`， `UInt64`， `String`和其本身。</span><span class="sxs-lookup"><span data-stu-id="6131b-400">All conversions are valid with the following exceptions: `Boolean` can be coerced to and from `Byte`, `SByte`, `Int16`, `Int32`, `Int64`, `UInt16`, `UInt32`, `UInt64`, `String` and itself only.</span></span> <span data-ttu-id="6131b-401">`Char` 与可以强制`Int32`， `UInt32`， `String`，和其本身。</span><span class="sxs-lookup"><span data-stu-id="6131b-401">`Char` can be coerced to and from `Int32`, `UInt32`, `String`, and itself only.</span></span> <span data-ttu-id="6131b-402">`DateTime` 与可以强制`String`和其本身。</span><span class="sxs-lookup"><span data-stu-id="6131b-402">`DateTime` can be coerced to and from `String` and itself only.</span></span> <span data-ttu-id="6131b-403">`TimeSpan` 与可以强制`String`和其本身。</span><span class="sxs-lookup"><span data-stu-id="6131b-403">`TimeSpan` can be coerced to and from `String` and itself only.</span></span>  
  
 `LEN`  
  
|||  
|-|-|  
|<span data-ttu-id="6131b-404">描述</span><span class="sxs-lookup"><span data-stu-id="6131b-404">Description</span></span>|<span data-ttu-id="6131b-405">获取一个字符串的长度</span><span class="sxs-lookup"><span data-stu-id="6131b-405">Gets the length of a string</span></span>|  
|<span data-ttu-id="6131b-406">语法</span><span class="sxs-lookup"><span data-stu-id="6131b-406">Syntax</span></span>|<span data-ttu-id="6131b-407">LEN(`expression`)</span><span class="sxs-lookup"><span data-stu-id="6131b-407">LEN(`expression`)</span></span>|  
|<span data-ttu-id="6131b-408">自变量</span><span class="sxs-lookup"><span data-stu-id="6131b-408">Arguments</span></span>|<span data-ttu-id="6131b-409">`expression` 要进行求值--字符串。</span><span class="sxs-lookup"><span data-stu-id="6131b-409">`expression` -- The string to be evaluated.</span></span>|  
  
 <span data-ttu-id="6131b-410">Example: myDataColumn.Expression="Len(ItemName)"</span><span class="sxs-lookup"><span data-stu-id="6131b-410">Example: myDataColumn.Expression="Len(ItemName)"</span></span>  
  
 `ISNULL`  
  
|||  
|-|-|  
|<span data-ttu-id="6131b-411">描述</span><span class="sxs-lookup"><span data-stu-id="6131b-411">Description</span></span>|<span data-ttu-id="6131b-412">检查已检查的表达式或替换值的表达式并返回。</span><span class="sxs-lookup"><span data-stu-id="6131b-412">Checks an expression and either returns the checked expression or a replacement value.</span></span>|  
|<span data-ttu-id="6131b-413">语法</span><span class="sxs-lookup"><span data-stu-id="6131b-413">Syntax</span></span>|<span data-ttu-id="6131b-414">ISNULL(`expression`, `replacementvalue`)</span><span class="sxs-lookup"><span data-stu-id="6131b-414">ISNULL(`expression`, `replacementvalue`)</span></span>|  
|<span data-ttu-id="6131b-415">自变量</span><span class="sxs-lookup"><span data-stu-id="6131b-415">Arguments</span></span>|<span data-ttu-id="6131b-416">`expression` --若要检查的表达式。</span><span class="sxs-lookup"><span data-stu-id="6131b-416">`expression` -- The expression to check.</span></span><br /><br /> <span data-ttu-id="6131b-417">`replacementvalue` --如果表达式是`null`，`replacementvalue`返回。</span><span class="sxs-lookup"><span data-stu-id="6131b-417">`replacementvalue` -- If expression is `null`, `replacementvalue` is returned.</span></span>|  
  
 <span data-ttu-id="6131b-418">Example: myDataColumn.Expression="IsNull(price, -1)"</span><span class="sxs-lookup"><span data-stu-id="6131b-418">Example: myDataColumn.Expression="IsNull(price, -1)"</span></span>  
  
 `IIF`  
  
|||  
|-|-|  
|<span data-ttu-id="6131b-419">描述</span><span class="sxs-lookup"><span data-stu-id="6131b-419">Description</span></span>|<span data-ttu-id="6131b-420">获取根据逻辑表达式的结果的两个值之一。</span><span class="sxs-lookup"><span data-stu-id="6131b-420">Gets one of two values depending on the result of a logical expression.</span></span>|  
|<span data-ttu-id="6131b-421">语法</span><span class="sxs-lookup"><span data-stu-id="6131b-421">Syntax</span></span>|<span data-ttu-id="6131b-422">IIF(`expr`, `truepart`, `falsepart`)</span><span class="sxs-lookup"><span data-stu-id="6131b-422">IIF(`expr`, `truepart`, `falsepart`)</span></span>|  
|<span data-ttu-id="6131b-423">自变量</span><span class="sxs-lookup"><span data-stu-id="6131b-423">Arguments</span></span>|<span data-ttu-id="6131b-424">`expr` --要计算的表达式。</span><span class="sxs-lookup"><span data-stu-id="6131b-424">`expr` -- The expression to evaluate.</span></span><br /><br /> <span data-ttu-id="6131b-425">`truepart` --表达式为 true 时要返回的值。</span><span class="sxs-lookup"><span data-stu-id="6131b-425">`truepart` -- The value to return if the expression is true.</span></span><br /><br /> <span data-ttu-id="6131b-426">`falsepart` --表达式为 false 时要返回的值。</span><span class="sxs-lookup"><span data-stu-id="6131b-426">`falsepart` -- The value to return if the expression is false.</span></span>|  
  
 <span data-ttu-id="6131b-427">Example: myDataColumn.Expression = "IIF(total>1000, 'expensive', 'dear')</span><span class="sxs-lookup"><span data-stu-id="6131b-427">Example: myDataColumn.Expression = "IIF(total>1000, 'expensive', 'dear')</span></span>  
  
 `TRIM`  
  
|||  
|-|-|  
|<span data-ttu-id="6131b-428">描述</span><span class="sxs-lookup"><span data-stu-id="6131b-428">Description</span></span>|<span data-ttu-id="6131b-429">删除所有前导空格和尾随空白字符，如 \r、 \n、 \t，</span><span class="sxs-lookup"><span data-stu-id="6131b-429">Removes all leading and trailing blank characters like \r, \n, \t, ' '</span></span>|  
|<span data-ttu-id="6131b-430">语法</span><span class="sxs-lookup"><span data-stu-id="6131b-430">Syntax</span></span>|<span data-ttu-id="6131b-431">TRIM(`expression`)</span><span class="sxs-lookup"><span data-stu-id="6131b-431">TRIM(`expression`)</span></span>|  
|<span data-ttu-id="6131b-432">自变量</span><span class="sxs-lookup"><span data-stu-id="6131b-432">Arguments</span></span>|<span data-ttu-id="6131b-433">`expression` --以修整的表达式。</span><span class="sxs-lookup"><span data-stu-id="6131b-433">`expression` -- The expression to trim.</span></span>|  
  
 `SUBSTRING`  
  
|||  
|-|-|  
|<span data-ttu-id="6131b-434">描述</span><span class="sxs-lookup"><span data-stu-id="6131b-434">Description</span></span>|<span data-ttu-id="6131b-435">获取从字符串中指定的点处开始的指定长度的子字符串。</span><span class="sxs-lookup"><span data-stu-id="6131b-435">Gets a sub-string of a specified length, starting at a specified point in the string.</span></span>|  
|<span data-ttu-id="6131b-436">语法</span><span class="sxs-lookup"><span data-stu-id="6131b-436">Syntax</span></span>|<span data-ttu-id="6131b-437">子字符串 (`expression`， `start`， `length`)</span><span class="sxs-lookup"><span data-stu-id="6131b-437">SUBSTRING(`expression`, `start`, `length`)</span></span>|  
|<span data-ttu-id="6131b-438">自变量</span><span class="sxs-lookup"><span data-stu-id="6131b-438">Arguments</span></span>|<span data-ttu-id="6131b-439">`expression` --源字符串的子字符串。</span><span class="sxs-lookup"><span data-stu-id="6131b-439">`expression` -- The source string for the substring.</span></span><br /><br /> <span data-ttu-id="6131b-440">`start` -指定子字符串的起始位置的整数。</span><span class="sxs-lookup"><span data-stu-id="6131b-440">`start` -- Integer that specifies where the substring starts.</span></span><br /><br /> <span data-ttu-id="6131b-441">`length` -指定子字符串的长度的整数。</span><span class="sxs-lookup"><span data-stu-id="6131b-441">`length` -- Integer that specifies the length of the substring.</span></span>|  
  
 <span data-ttu-id="6131b-442">Example: myDataColumn.Expression = "SUBSTRING(phone, 7, 8)"</span><span class="sxs-lookup"><span data-stu-id="6131b-442">Example: myDataColumn.Expression = "SUBSTRING(phone, 7, 8)"</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6131b-443">你可以重置<xref:System.Data.DataColumn.Expression%2A>通过将它分配 null 值或空字符串的属性。</span><span class="sxs-lookup"><span data-stu-id="6131b-443">You can reset the <xref:System.Data.DataColumn.Expression%2A> property by assigning it a null value or empty string.</span></span> <span data-ttu-id="6131b-444">如果表达式列上设置默认值，所有以前已填充的行分配后的默认值<xref:System.Data.DataColumn.Expression%2A>属性重置。</span><span class="sxs-lookup"><span data-stu-id="6131b-444">If a default value is set on the expression column, all previously filled rows are assigned the default value after the <xref:System.Data.DataColumn.Expression%2A> property is reset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6131b-445">下面的示例创建中的三个列<xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="6131b-445">The following example creates three columns in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="6131b-446">第二个和第三个列包含表达式;第二个计算税使用变量的税率，并第三个将计算的结果添加到第一列的值。</span><span class="sxs-lookup"><span data-stu-id="6131b-446">The second and third columns contain expressions; the second calculates tax using a variable tax rate, and the third adds the result of the calculation to the value of the first column.</span></span> <span data-ttu-id="6131b-447">生成的表所示<xref:System.Windows.Forms.DataGrid>控件。</span><span class="sxs-lookup"><span data-stu-id="6131b-447">The resulting table is displayed in a <xref:System.Windows.Forms.DataGrid> control.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Expression Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Expression Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Expression Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Expression Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6131b-448">将 <see cref="P:System.Data.DataColumn.AutoIncrement" /> 或 <see cref="P:System.Data.DataColumn.Unique" /> 属性设置为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-448">The <see cref="P:System.Data.DataColumn.AutoIncrement" /> or <see cref="P:System.Data.DataColumn.Unique" /> property is set to <see langword="true" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="6131b-449">在使用 CONVERT 函数时，表达式的计算结果为一个字符串，但该字符串不包含可以转换成类型参数的表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-449">When you are using the CONVERT function, the expression evaluates to a string, but the string does not contain a representation that can be converted to the type parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="6131b-450">在使用 CONVERT 函数时，所请求的强制转换不可能完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-450">When you are using the CONVERT function, the requested cast is not possible.</span>
          </span>
          <span data-ttu-id="6131b-451">有关可能的强制转换的详细信息，请参见下面一节中的 Conversion 函数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-451">See the Conversion function in the following section for detailed information about possible casts.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6131b-452">在使用 SUBSTRING 函数时，起始参数超出范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-452">When you use the SUBSTRING function, the start argument is out of range.</span>
          </span>
          <span data-ttu-id="6131b-453">- 或者 -</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-453">-Or-</span>
          </span>
          <span data-ttu-id="6131b-454">在使用 SUBSTRING 函数时，长度参数超出范围。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-454">When you use the SUBSTRING function, the length argument is out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.Exception">
          <span data-ttu-id="6131b-455">在使用 LEN 函数或 TRIM 函数时，表达式的计算结果不是字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-455">When you use the LEN function or the TRIM function, the expression does not evaluate to a string.</span>
          </span>
          <span data-ttu-id="6131b-456">这包括计算结果为 <see cref="T:System.Char" /> 的表达式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-456">This includes expressions that evaluate to <see cref="T:System.Char" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProperties">
      <MemberSignature Language="C#" Value="public System.Data.PropertyCollection ExtendedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.PropertyCollection ExtendedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ExtendedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtendedProperties As PropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::PropertyCollection ^ ExtendedProperties { System::Data::PropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.PropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6131b-457">获取与 <see cref="T:System.Data.DataColumn" /> 相关的自定义用户信息的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-457">Gets the collection of custom user information associated with a <see cref="T:System.Data.DataColumn" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6131b-458">自定义信息的 <see cref="T:System.Data.PropertyCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-458">A <see cref="T:System.Data.PropertyCollection" /> of custom information.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6131b-459"><xref:System.Data.DataColumn.ExtendedProperties%2A>属性，您可以存储与对象的自定义信息。</span><span class="sxs-lookup"><span data-stu-id="6131b-459">The <xref:System.Data.DataColumn.ExtendedProperties%2A> property lets you store custom information with the object.</span></span> <span data-ttu-id="6131b-460">例如，你可以存储的数据应在进行刷新的时间。</span><span class="sxs-lookup"><span data-stu-id="6131b-460">For example, you may store a time when the data should be refreshed.</span></span>  
  
 <span data-ttu-id="6131b-461">扩展的属性的类型必须为<xref:System.String>。</span><span class="sxs-lookup"><span data-stu-id="6131b-461">Extended properties must be of type <xref:System.String>.</span></span> <span data-ttu-id="6131b-462">并不属于类型的属性<xref:System.String>时不会保留<xref:System.Data.DataColumn>以 XML 形式写入。</span><span class="sxs-lookup"><span data-stu-id="6131b-462">Properties that are not of type <xref:System.String> are not persisted when the <xref:System.Data.DataColumn> is written as XML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6131b-463">下面的示例将添加到自定义属性<xref:System.Data.PropertyCollection>返回<xref:System.Data.DataColumn.ExtendedProperties%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="6131b-463">The following example adds a custom property to the <xref:System.Data.PropertyCollection> returned by the <xref:System.Data.DataColumn.ExtendedProperties%2A> property.</span></span> <span data-ttu-id="6131b-464">第二个示例检索自定义属性。</span><span class="sxs-lookup"><span data-stu-id="6131b-464">The second example retrieves the custom property.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ExtendedProperties Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ExtendedProperties Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ExtendedProperties Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ExtendedProperties Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.PropertyCollection" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6131b-465">获取或设置文本列的最大长度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-465">Gets or sets the maximum length of a text column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6131b-466">列的最大长度（以字符数表示）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-466">The maximum length of the column in characters.</span>
          </span>
          <span data-ttu-id="6131b-467">如果列没有最大长度，该值为 -1（默认值）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-467">If the column has no maximum length, the value is –1 (default).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6131b-468"><xref:System.Data.DataColumn.MaxLength%2A>对于非文本列，将忽略属性。</span><span class="sxs-lookup"><span data-stu-id="6131b-468">The <xref:System.Data.DataColumn.MaxLength%2A> property is ignored for non-text columns.</span></span> <span data-ttu-id="6131b-469">A<xref:System.ArgumentException>是否会引发异常，如果将分配<xref:System.Data.DataColumn.MaxLength%2A>到非字符串列。</span><span class="sxs-lookup"><span data-stu-id="6131b-469">A <xref:System.ArgumentException> exception is raised if you assign <xref:System.Data.DataColumn.MaxLength%2A> to a non-string column.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6131b-470">获取或设置 <see cref="T:System.Data.DataColumn" /> 的命名空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-470">Gets or sets the namespace of the <see cref="T:System.Data.DataColumn" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6131b-471">
            <see cref="T:System.Data.DataColumn" /> 的命名空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-471">The namespace of the <see cref="T:System.Data.DataColumn" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6131b-472"><xref:System.Data.DataColumn.Namespace%2A>时读取和写入 XML 文档为使用属性<xref:System.Data.DataTable>中<xref:System.Data.DataSet>使用<xref:System.Data.DataSet.ReadXml%2A>， <xref:System.Data.DataSet.WriteXml%2A>， <xref:System.Data.DataSet.ReadXmlSchema%2A>，或<xref:System.Data.DataSet.WriteXmlSchema%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6131b-472">The <xref:System.Data.DataColumn.Namespace%2A> property is used when reading and writing an XML document into a <xref:System.Data.DataTable> in the <xref:System.Data.DataSet> using the <xref:System.Data.DataSet.ReadXml%2A>, <xref:System.Data.DataSet.WriteXml%2A>, <xref:System.Data.DataSet.ReadXmlSchema%2A>, or <xref:System.Data.DataSet.WriteXmlSchema%2A> methods.</span></span>  
  
 <span data-ttu-id="6131b-473">XML 文档的命名空间用于确定范围 XML 特性和元素时读取到<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="6131b-473">The namespace of an XML document is used to scope XML attributes and elements when read into a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="6131b-474">例如，<xref:System.Data.DataSet>包含架构从文档中读取，它具有命名空间"myCompany，"且尝试读取数据 (与<xref:System.Data.DataSet.ReadXml%2A>方法) 从文档中包含的命名空间"theirCompany。"</span><span class="sxs-lookup"><span data-stu-id="6131b-474">For example, a <xref:System.Data.DataSet> contains a schema read from a document that has the namespace "myCompany," and an attempt is made to read data (with the <xref:System.Data.DataSet.ReadXml%2A> method) from a document that has the namespace "theirCompany."</span></span> <span data-ttu-id="6131b-475">与现有架构不对应的任何数据将被忽略。</span><span class="sxs-lookup"><span data-stu-id="6131b-475">Any data that does not correspond to the existing schema will be ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6131b-476">该命名空间已有数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-476">The namespace already has data.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanging (System.ComponentModel.PropertyChangedEventArgs pcevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanging(class System.ComponentModel.PropertyChangedEventArgs pcevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanging (pcevent As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanging(System::ComponentModel::PropertyChangedEventArgs ^ pcevent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcevent" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="pcevent">
          <span data-ttu-id="6131b-477">参数引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-477">Parameter reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6131b-478">此成员支持 .NET Framework 结构，不能在代码中直接使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-478">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ordinal">
      <MemberSignature Language="C#" Value="public int Ordinal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Ordinal" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Ordinal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ordinal As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Ordinal { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6131b-479">获取列在 <see cref="T:System.Data.DataColumnCollection" /> 集合中的位置（从零开始）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-479">Gets the (zero-based) position of the column in the <see cref="T:System.Data.DataColumnCollection" /> collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6131b-480">列的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-480">The position of the column.</span>
          </span>
          <span data-ttu-id="6131b-481">如果列不是集合的成员，获取 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-481">Gets -1 if the column is not a member of a collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6131b-482">下面的示例返回列的列名称、 序号和数据类型。</span><span class="sxs-lookup"><span data-stu-id="6131b-482">The following example returns the column name, ordinal, and data type of a column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Ordinal Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Ordinal Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Ordinal Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Ordinal Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public string Prefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Prefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6131b-483">获取或设置一个 XML 前缀，该前缀是 <see cref="T:System.Data.DataTable" /> 的命名空间的别名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-483">Gets or sets an XML prefix that aliases the namespace of the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6131b-484">
            <see cref="T:System.Data.DataTable" /> 命名空间的 XML 前缀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-484">The XML prefix for the <see cref="T:System.Data.DataTable" /> namespace.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6131b-485"><xref:System.Data.DataTable.Prefix%2A>整个 XML 文档中用于标识元素的命名空间属于<xref:System.Data.DataSet>对象 (通过设置，如同<xref:System.Data.DataSet.Namespace%2A>属性)。</span><span class="sxs-lookup"><span data-stu-id="6131b-485">The <xref:System.Data.DataTable.Prefix%2A> is used throughout an XML document to identify elements which belong to the namespace for a <xref:System.Data.DataSet> object (as set by the <xref:System.Data.DataSet.Namespace%2A> property).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePropertyChanging">
      <MemberSignature Language="C#" Value="protected internal void RaisePropertyChanging (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void RaisePropertyChanging(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.RaisePropertyChanging(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub RaisePropertyChanging (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void RaisePropertyChanging(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="6131b-486">参数引用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-486">Parameter reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6131b-487">此成员支持 .NET Framework 结构，不能在代码中直接使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-487">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6131b-488">获取或设置一个值，该值指示一旦向表中添加了行，列是否还允许更改。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-488">Gets or sets a value that indicates whether the column allows for changes as soon as a row has been added to the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6131b-489">如果列为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-489">
              <see langword="true" /> if the column is read only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6131b-490">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-490">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6131b-491">下面的示例创建<xref:System.Data.DataColumn>并设置其<xref:System.Data.DataColumn.ReadOnly%2A>属性`true`。</span><span class="sxs-lookup"><span data-stu-id="6131b-491">The following example creates a <xref:System.Data.DataColumn> and sets its <xref:System.Data.DataColumn.ReadOnly%2A> property `true`.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ReadOnly Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ReadOnly Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ReadOnly Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ReadOnly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6131b-492">对于计算所得的列，此属性设置为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-492">The property is set to <see langword="false" /> on a computed column.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.Unique" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
      </Docs>
    </Member>
    <Member MemberName="SetOrdinal">
      <MemberSignature Language="C#" Value="public void SetOrdinal (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOrdinal(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.SetOrdinal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOrdinal (ordinal As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOrdinal(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="6131b-493">指定的序号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-493">The specified ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6131b-494">将 <see cref="T:System.Data.DataColumn" /> 的序号或位置更改为指定的序号或位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-494">Changes the ordinal or position of the <see cref="T:System.Data.DataColumn" /> to the specified ordinal or position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6131b-495">将 <xref:System.Data.DataColumn> 的序号或位置更改为指定的序号或位置。</span><span class="sxs-lookup"><span data-stu-id="6131b-495">Changes the ordinal or position of the <xref:System.Data.DataColumn> to the specified ordinal or position.</span></span> <span data-ttu-id="6131b-496">如果序号小于 0 或大于列 – 1 （大于最后一列的序号） 现有数然后无效<xref:System.ArgumentException>引发。</span><span class="sxs-lookup"><span data-stu-id="6131b-496">If ordinal is less than 0 or greater than the existing number of columns – 1 (greater than the ordinal of the last column) then an Invalid <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="6131b-497">当你更改列的序号时，请列移动到的列的集合中的新位置。</span><span class="sxs-lookup"><span data-stu-id="6131b-497">When you change a column’s ordinal, the column is moved to the new position in the collection of columns.</span></span> <span data-ttu-id="6131b-498">上一个和新序号之间的任何列将重新编号，针对列的新序号进行调整。</span><span class="sxs-lookup"><span data-stu-id="6131b-498">Any columns between the previous and new ordinal will be renumbered, to adjust for a column's new ordinal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Table" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Table As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataTable ^ Table { System::Data::DataTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6131b-499">获取列所属的 <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-499">Gets the <see cref="T:System.Data.DataTable" /> to which the column belongs to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6131b-500">
            <see cref="T:System.Data.DataTable" /> 所属的 <see cref="T:System.Data.DataColumn" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-500">The <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataColumn" /> belongs to.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6131b-501">下面的示例返回父表的<xref:System.Data.DataColumn>通过其<xref:System.Data.DataColumn.Table%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="6131b-501">The following example returns the parent table of a <xref:System.Data.DataColumn> through its <xref:System.Data.DataColumn.Table%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Table Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Table Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Table Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Table Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataTable" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6131b-502">获取列的 <see cref="P:System.Data.DataColumn.Expression" />（如果存在的话）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-502">Gets the <see cref="P:System.Data.DataColumn.Expression" /> of the column, if one exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6131b-503">如果设置了属性；则为 <see cref="P:System.Data.DataColumn.Expression" /> 的值；否则为 <see cref="P:System.Data.DataColumn.ColumnName" /> 的属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-503">The <see cref="P:System.Data.DataColumn.Expression" /> value, if the property is set; otherwise, the <see cref="P:System.Data.DataColumn.ColumnName" /> property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6131b-504">下面的示例使用<xref:System.Data.DataColumn.ToString%2A>属性返回的集合的每个成员的默认字符串<xref:System.Data.DataColumn>对象。</span><span class="sxs-lookup"><span data-stu-id="6131b-504">The following example uses the <xref:System.Data.DataColumn.ToString%2A> property to return the default string of each member of a collection of <xref:System.Data.DataColumn> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
      </Docs>
    </Member>
    <Member MemberName="Unique">
      <MemberSignature Language="C#" Value="public bool Unique { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Unique" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Unique" />
      <MemberSignature Language="VB.NET" Value="Public Property Unique As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Unique { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6131b-505">获取或设置一个值，该值指示列的每一行中的值是否必须是唯一的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-505">Gets or sets a value that indicates whether the values in each row of the column must be unique.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6131b-506">如果值必须是唯一的，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-506">
              <see langword="true" /> if the value must be unique; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6131b-507">默认值为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-507">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6131b-508">一旦此属性从 false 更改为 true，则将在此列以确保值都是唯一上创建唯一约束。</span><span class="sxs-lookup"><span data-stu-id="6131b-508">As soon as this property is changed from false to true, a unique constraint will be created on this column to make sure that values are unique.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6131b-509">下面的示例创建新<xref:System.Data.DataColumn>、 设置其属性，并将其添加到表的列集合。</span><span class="sxs-lookup"><span data-stu-id="6131b-509">The following example creates new <xref:System.Data.DataColumn>, sets its properties, and adds it to a table's columns collection.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Unique Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Unique Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Unique Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Unique Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6131b-510">列是计算出的列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6131b-510">The column is a calculated column.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.AllowDBNull" />
        <altmember cref="T:System.Data.UniqueConstraint" />
        <altmember cref="P:System.Data.DataTable.Constraints" />
      </Docs>
    </Member>
  </Members>
</Type>