<Type Name="IDbCommand" FullName="System.Data.IDbCommand">
  <TypeSignature Language="C#" Value="public interface IDbCommand : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbCommand implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDbCommand" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDbCommand&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDbCommand : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="b0b99-101">表示连接到数据源时执行的 SQL 语句，并由访问关系数据库的 .NET Framework 数据提供程序实现。</span><span class="sxs-lookup"><span data-stu-id="b0b99-101">Represents an SQL statement that is executed while connected to a data source, and is implemented by .NET Framework data providers that access relational databases.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0b99-102"><xref:System.Data.IDbCommand>接口使继承类实现的命令类，该类表示在数据源执行的 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="b0b99-102">The <xref:System.Data.IDbCommand> interface enables an inheriting class to implement a Command class, which represents an SQL statement that is executed at a data source.</span></span> <span data-ttu-id="b0b99-103">有关命令类的详细信息，请参阅[执行命令](~/docs/framework/data/adonet/executing-a-command.md)。</span><span class="sxs-lookup"><span data-stu-id="b0b99-103">For more information about Command classes, see [Executing a Command](~/docs/framework/data/adonet/executing-a-command.md).</span></span>  
  
 <span data-ttu-id="b0b99-104">应用程序不会创建的实例<xref:System.Data.IDbCommand>接口直接，但创建继承的类的实例<xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="b0b99-104">An application does not create an instance of the <xref:System.Data.IDbCommand> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDbCommand>.</span></span>  
  
 <span data-ttu-id="b0b99-105">继承的类<xref:System.Data.IDbCommand>必须实现所有继承的成员，且通常定义其他成员来添加提供程序特定的功能。</span><span class="sxs-lookup"><span data-stu-id="b0b99-105">Classes that inherit <xref:System.Data.IDbCommand> must implement all inherited members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="b0b99-106">例如，<xref:System.Data.IDbCommand>接口定义<xref:System.Data.IDbCommand.ExecuteNonQuery%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b0b99-106">For example, the <xref:System.Data.IDbCommand> interface defines the <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> method.</span></span> <span data-ttu-id="b0b99-107">反过来，<xref:System.Data.SqlClient.SqlCommand>类继承此方法，还定义<xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b0b99-107">In turn, the <xref:System.Data.SqlClient.SqlCommand> class inherits this method, and also defines the <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0b99-108">下面的示例创建的派生类的实例<xref:System.Data.SqlClient.SqlConnection>， <xref:System.Data.SqlClient.SqlCommand>，和<xref:System.Data.SqlClient.SqlDataReader>。</span><span class="sxs-lookup"><span data-stu-id="b0b99-108">The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, and <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="b0b99-109">该示例读取到的数据，并写入控制台。</span><span class="sxs-lookup"><span data-stu-id="b0b99-109">The example reads through the data, writing it to the console.</span></span> <span data-ttu-id="b0b99-110">最后，该示例关闭<xref:System.Data.SqlClient.SqlDataReader>，则<xref:System.Data.SqlClient.SqlConnection>。</span><span class="sxs-lookup"><span data-stu-id="b0b99-110">Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader>, then the <xref:System.Data.SqlClient.SqlConnection>.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="b0b99-111">若要提升.NET Framework 数据提供程序之间的一致性，将窗体中的继承类<paramref name="PrvClassname" />其中<paramref name="Prv" />是为特定的.NET Framework 数据提供程序命名空间中的所有类提供的统一前缀。</span><span class="sxs-lookup"><span data-stu-id="b0b99-111">To promote consistency among .NET Framework data providers, name the inheriting class in the form <paramref name="PrvClassname" /> where <paramref name="Prv" /> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</span></span> <span data-ttu-id="b0b99-112">例如，<paramref name="Sql" />的前缀<see cref="T:System.Data.SqlClient.SqlCommand" />类<see langword="System.Data.SqlClient" />命名空间。</span><span class="sxs-lookup"><span data-stu-id="b0b99-112">For example, <paramref name="Sql" /> is the prefix of the <see cref="T:System.Data.SqlClient.SqlCommand" /> class in the <see langword="System.Data.SqlClient" /> namespace.</span></span>  
  
 <span data-ttu-id="b0b99-113">继承自<see cref="T:System.Data.IDbCommand" />接口，则应实现以下构造函数：</span><span class="sxs-lookup"><span data-stu-id="b0b99-113">When you inherit from the <see cref="T:System.Data.IDbCommand" /> interface, you should implement the following constructors:</span></span>  
  
 <span data-ttu-id="b0b99-114"><list type="table"><listheader><term> 项</span><span class="sxs-lookup"><span data-stu-id="b0b99-114"><list type="table"><listheader><term> Item</span></span>  
  
 <span data-ttu-id="b0b99-115"></term><description> 描述</span><span class="sxs-lookup"><span data-stu-id="b0b99-115"></term><description> Description</span></span>  
  
 <span data-ttu-id="b0b99-116"></description></listheader><item><term> PrvCommand()</span><span class="sxs-lookup"><span data-stu-id="b0b99-116"></description></listheader><item><term> PrvCommand()</span></span>  
  
 <span data-ttu-id="b0b99-117"></term><description> 初始化 PrvCommand 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="b0b99-117"></term><description> Initializes a new instance of the PrvCommand class.</span></span>  
  
 <span data-ttu-id="b0b99-118"></description></item><item><term> PrvCommand (字符串 cmdText)</span><span class="sxs-lookup"><span data-stu-id="b0b99-118"></description></item><item><term> PrvCommand(string cmdText)</span></span>  
  
 <span data-ttu-id="b0b99-119"></term><description> 初始化查询文本 PrvCommand 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="b0b99-119"></term><description> Initializes a new instance of the PrvCommand class with the text of the query.</span></span>  
  
 <span data-ttu-id="b0b99-120"></description></item><item><term> PrvCommand （字符串 cmdText，PrvConnection 连接）</span><span class="sxs-lookup"><span data-stu-id="b0b99-120"></description></item><item><term> PrvCommand(string cmdText, PrvConnection connection)</span></span>  
  
 <span data-ttu-id="b0b99-121"></term><description> 初始化具有文本的查询和 PrvConnection PrvCommand 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="b0b99-121"></term><description> Initializes a new instance of the PrvCommand class with the text of the query and a PrvConnection.</span></span>  
  
 <span data-ttu-id="b0b99-122"></description></item><item><term> PrvCommand （字符串 cmdText、 PrvConnection 连接、 PrvTransaction 事务）</span><span class="sxs-lookup"><span data-stu-id="b0b99-122"></description></item><item><term> PrvCommand(string cmdText, PrvConnection connection, PrvTransaction transaction)</span></span>  
  
 <span data-ttu-id="b0b99-123"></term><description> 初始化具有文本的查询、 PrvConnection 和 PrvTransaction PrvCommand 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="b0b99-123"></term><description> Initializes a new instance of the PrvCommand class with the text of the query, a PrvConnection, and the PrvTransaction.</span></span>  
  
 </description></item></list></para>
    </block>
    <altmember cref="T:System.Data.Common.DbDataAdapter" />
    <altmember cref="T:System.Data.IDbConnection" />
    <altmember cref="T:System.Data.OleDb.OleDbCommand" />
    <altmember cref="T:System.Data.SqlClient.SqlCommand" />
  </Docs>
  <Members>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b0b99-124">尝试取消执行 <see cref="T:System.Data.IDbCommand" />。</span><span class="sxs-lookup"><span data-stu-id="b0b99-124">Attempts to cancels the execution of an <see cref="T:System.Data.IDbCommand" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0b99-125">如果没有要取消的内容，不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="b0b99-125">If there is nothing to cancel, nothing happens.</span></span> <span data-ttu-id="b0b99-126">但是，如果有正在执行的命令，则即使取消尝试失败，也不会生成异常。</span><span class="sxs-lookup"><span data-stu-id="b0b99-126">However, if there is a command in process, and the attempt to cancel fails, no exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0b99-127">获取或设置对数据源运行的文本命令。</span><span class="sxs-lookup"><span data-stu-id="b0b99-127">Gets or sets the text command to run against the data source.</span></span></summary>
        <value><span data-ttu-id="b0b99-128">要执行的文本命令。</span><span class="sxs-lookup"><span data-stu-id="b0b99-128">The text command to execute.</span></span> <span data-ttu-id="b0b99-129">默认值为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="b0b99-129">The default value is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0b99-130">当<xref:System.Data.IDbCommand.CommandType%2A>属性设置为`StoredProcedure`，将其设置<xref:System.Data.IDbCommand.CommandText%2A>到存储过程的名称的属性。</span><span class="sxs-lookup"><span data-stu-id="b0b99-130">When the <xref:System.Data.IDbCommand.CommandType%2A> property is set to `StoredProcedure`, set the <xref:System.Data.IDbCommand.CommandText%2A> property to the name of the stored procedure.</span></span> <span data-ttu-id="b0b99-131">用户可能需要使用转义符语法，如果存储的过程名称包含任何特殊字符。</span><span class="sxs-lookup"><span data-stu-id="b0b99-131">The user may be required to use escape character syntax if the stored procedure name contains any special characters.</span></span> <span data-ttu-id="b0b99-132">在调用 Execute 方法之一时，该命令将调用此存储的过程。</span><span class="sxs-lookup"><span data-stu-id="b0b99-132">The command will call this stored procedure when you call one of the Execute methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0b99-133">下面的示例创建派生类的实例<xref:System.Data.OleDb.OleDbCommand>并设置其属性的一些。</span><span class="sxs-lookup"><span data-stu-id="b0b99-133">The following example creates an instance of a derived class, <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData IDbCommand.CommandText Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandText Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.CommandText Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.IDbCommand.CommandType" />
        <altmember cref="P:System.Data.IDbCommand.UpdatedRowSource" />
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CommandTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0b99-134">获取或设置在终止尝试执行命令并生成错误之前的等待时间。</span><span class="sxs-lookup"><span data-stu-id="b0b99-134">Gets or sets the wait time before terminating the attempt to execute a command and generating an error.</span></span></summary>
        <value><span data-ttu-id="b0b99-135">等待命令执行所需的时间（以秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="b0b99-135">The time (in seconds) to wait for the command to execute.</span></span> <span data-ttu-id="b0b99-136">默认值为 30 秒。</span><span class="sxs-lookup"><span data-stu-id="b0b99-136">The default value is 30 seconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0b99-137">下面的示例创建派生类的实例<xref:System.Data.SqlClient.SqlCommand>并设置其属性的一些。</span><span class="sxs-lookup"><span data-stu-id="b0b99-137">The following example creates an instance of a derived class, <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b0b99-138">分配的属性值小于 0。</span><span class="sxs-lookup"><span data-stu-id="b0b99-138">The property value assigned is less than 0.</span></span></exception>
        <altmember cref="P:System.Data.IDbCommand.CommandText" />
        <altmember cref="P:System.Data.IDbCommand.Connection" />
        <altmember cref="P:System.Data.IDbCommand.CommandType" />
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public System.Data.CommandType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandType CommandType" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandType As CommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::CommandType CommandType { System::Data::CommandType get(); void set(System::Data::CommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0b99-139">指示或指定解释 <see cref="P:System.Data.IDbCommand.CommandText" /> 属性的方式。</span><span class="sxs-lookup"><span data-stu-id="b0b99-139">Indicates or specifies how the <see cref="P:System.Data.IDbCommand.CommandText" /> property is interpreted.</span></span></summary>
        <value><span data-ttu-id="b0b99-140"><see cref="T:System.Data.CommandType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="b0b99-140">One of the <see cref="T:System.Data.CommandType" /> values.</span></span> <span data-ttu-id="b0b99-141">默认值为 <see langword="Text" />。</span><span class="sxs-lookup"><span data-stu-id="b0b99-141">The default is <see langword="Text" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0b99-142">当你将设置<xref:System.Data.IDbCommand.CommandType%2A>属性`StoredProcedure`，应设置<xref:System.Data.IDbCommand.CommandText%2A>到存储过程的名称的属性。</span><span class="sxs-lookup"><span data-stu-id="b0b99-142">When you set the <xref:System.Data.IDbCommand.CommandType%2A> property to `StoredProcedure`, you should set the <xref:System.Data.IDbCommand.CommandText%2A> property to the name of the stored procedure.</span></span> <span data-ttu-id="b0b99-143">在调用 Execute 方法之一时，该命令将执行此存储的过程。</span><span class="sxs-lookup"><span data-stu-id="b0b99-143">The command executes this stored procedure when you call one of the Execute methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.IDbConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As IDbConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbConnection ^ Connection { System::Data::IDbConnection ^ get(); void set(System::Data::IDbConnection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0b99-144">获取或设置 <see cref="T:System.Data.IDbCommand" /> 的此实例使用的 <see cref="T:System.Data.IDbConnection" />。</span><span class="sxs-lookup"><span data-stu-id="b0b99-144">Gets or sets the <see cref="T:System.Data.IDbConnection" /> used by this instance of the <see cref="T:System.Data.IDbCommand" />.</span></span></summary>
        <value><span data-ttu-id="b0b99-145">与数据源的连接。</span><span class="sxs-lookup"><span data-stu-id="b0b99-145">The connection to the data source.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public System.Data.IDbDataParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDbDataParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateParameter () As IDbDataParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDbDataParameter ^ CreateParameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbDataParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b0b99-146">创建 <see cref="T:System.Data.IDbDataParameter" /> 对象的新实例。</span><span class="sxs-lookup"><span data-stu-id="b0b99-146">Creates a new instance of an <see cref="T:System.Data.IDbDataParameter" /> object.</span></span></summary>
        <returns><span data-ttu-id="b0b99-147">一个 <see langword="IDbDataParameter" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="b0b99-147">An <see langword="IDbDataParameter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0b99-148">从继承时<xref:System.Data.IDbCommand>，.NET Framework 数据提供程序实现的强类型版本<xref:System.Data.IDbCommand.CreateParameter%2A>。</span><span class="sxs-lookup"><span data-stu-id="b0b99-148">When inheriting from <xref:System.Data.IDbCommand>, a .NET Framework data provider implements a strongly-typed version of <xref:System.Data.IDbCommand.CreateParameter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public int ExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.ExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteNonQuery () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteNonQuery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b0b99-149">对 .NET Framework 数据提供程序的 <see langword="Connection" /> 对象执行 SQL 语句，并返回受影响的行数。</span><span class="sxs-lookup"><span data-stu-id="b0b99-149">Executes an SQL statement against the <see langword="Connection" /> object of a .NET Framework data provider, and returns the number of rows affected.</span></span></summary>
        <returns><span data-ttu-id="b0b99-150">受影响的行数。</span><span class="sxs-lookup"><span data-stu-id="b0b99-150">The number of rows affected.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0b99-151">你可以使用<xref:System.Data.IDbCommand.ExecuteNonQuery%2A>执行目录操作 （例如，查询数据库的结构或创建数据库对象，如表），或更改数据库中的数据，而无需使用<xref:System.Data.DataSet>通过执行更新、 插入或删除语句。</span><span class="sxs-lookup"><span data-stu-id="b0b99-151">You can use the <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables), or to change the data in a database without using a <xref:System.Data.DataSet> by executing UPDATE, INSERT, or DELETE statements.</span></span>  
  
 <span data-ttu-id="b0b99-152">尽管<xref:System.Data.IDbCommand.ExecuteNonQuery%2A>不会返回任何行，任何输出参数或返回值映射到参数填充了数据。</span><span class="sxs-lookup"><span data-stu-id="b0b99-152">Although the <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> does not return any rows, any output parameters or return values mapped to parameters are populated with data.</span></span>  
  
 <span data-ttu-id="b0b99-153">对于 UPDATE、INSERT 和 DELETE 语句，返回值为该命令所影响的行数。</span><span class="sxs-lookup"><span data-stu-id="b0b99-153">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span></span> <span data-ttu-id="b0b99-154">对于其他所有类型的语句，返回值为 -1。</span><span class="sxs-lookup"><span data-stu-id="b0b99-154">For all other types of statements, the return value is -1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0b99-155">下面的示例创建的派生类中，实例<xref:System.Data.OleDb.OleDbCommand>，然后执行它。</span><span class="sxs-lookup"><span data-stu-id="b0b99-155">The following example creates an instance of the derived class, <xref:System.Data.OleDb.OleDbCommand>, and then executes it.</span></span> <span data-ttu-id="b0b99-156">若要完成此操作，该方法传递的 SQL SELECT 语句的字符串和字符串要用于连接到数据源。</span><span class="sxs-lookup"><span data-stu-id="b0b99-156">To accomplish this, the method is passed a string that is a SQL SELECT statement and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteNonQuery Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteNonQuery Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b0b99-157">连接不存在。</span><span class="sxs-lookup"><span data-stu-id="b0b99-157">The connection does not exist.</span></span>  
  
 <span data-ttu-id="b0b99-158">或</span><span class="sxs-lookup"><span data-stu-id="b0b99-158">-or-</span></span>  
  
 <span data-ttu-id="b0b99-159">连接未打开。</span><span class="sxs-lookup"><span data-stu-id="b0b99-159">The connection is not open.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b0b99-160">对 <see cref="P:System.Data.IDbCommand.Connection" /> 执行 <see cref="P:System.Data.IDbCommand.CommandText" /> 并生成 <see cref="T:System.Data.IDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="b0b99-160">Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" /> and builds an <see cref="T:System.Data.IDataReader" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.IDataReader ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDataReader ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader () As IDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDataReader ^ ExecuteReader();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b0b99-161">对 <see cref="P:System.Data.IDbCommand.Connection" /> 执行 <see cref="P:System.Data.IDbCommand.CommandText" /> 并生成 <see cref="T:System.Data.IDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="b0b99-161">Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" /> and builds an <see cref="T:System.Data.IDataReader" />.</span></span></summary>
        <returns><span data-ttu-id="b0b99-162">一个 <see cref="T:System.Data.IDataReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="b0b99-162">An <see cref="T:System.Data.IDataReader" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.IDataReader ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDataReader ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader (behavior As CommandBehavior) As IDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDataReader ^ ExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior"><span data-ttu-id="b0b99-163"><see cref="T:System.Data.CommandBehavior" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="b0b99-163">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="b0b99-164">对 <see cref="P:System.Data.IDbCommand.Connection" /> 执行 <see cref="P:System.Data.IDbCommand.CommandText" />，并使用 <see cref="T:System.Data.CommandBehavior" /> 值之一生成 <see cref="T:System.Data.IDataReader" />。</span><span class="sxs-lookup"><span data-stu-id="b0b99-164">Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" />, and builds an <see cref="T:System.Data.IDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></summary>
        <returns><span data-ttu-id="b0b99-165">一个 <see cref="T:System.Data.IDataReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="b0b99-165">An <see cref="T:System.Data.IDataReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0b99-166">调用方必须调用<xref:System.Data.IDbConnection.Open%2A>方法<xref:System.Data.IDbCommand.Connection%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b0b99-166">The caller must call the <xref:System.Data.IDbConnection.Open%2A> method of the <xref:System.Data.IDbCommand.Connection%2A> property.</span></span>  
  
 <span data-ttu-id="b0b99-167">当<xref:System.Data.IDbCommand.CommandType%2A>属性设置为`StoredProcedure`、<xref:System.Data.IDbCommand.CommandText%2A>属性应设置为存储过程的名称。</span><span class="sxs-lookup"><span data-stu-id="b0b99-167">When the <xref:System.Data.IDbCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.IDbCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="b0b99-168">在调用时，该命令将执行此存储的过程<xref:System.Data.IDbCommand.ExecuteReader%2A>。</span><span class="sxs-lookup"><span data-stu-id="b0b99-168">The command executes this stored procedure when you call <xref:System.Data.IDbCommand.ExecuteReader%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b0b99-169">使用<xref:System.Data.CommandBehavior.SequentialAccess>来检索较大值和二进制数据。</span><span class="sxs-lookup"><span data-stu-id="b0b99-169">Use <xref:System.Data.CommandBehavior.SequentialAccess> to retrieve large values and binary data.</span></span> <span data-ttu-id="b0b99-170">否则为<xref:System.OutOfMemoryException>可能会发生，连接将关闭。</span><span class="sxs-lookup"><span data-stu-id="b0b99-170">Otherwise, an <xref:System.OutOfMemoryException> might occur and the connection will be closed.</span></span>  
  
 <span data-ttu-id="b0b99-171">虽然<xref:System.Data.IDataReader>正在使用，关联<xref:System.Data.IDbConnection>是忙服务<xref:System.Data.IDataReader>。</span><span class="sxs-lookup"><span data-stu-id="b0b99-171">While the <xref:System.Data.IDataReader> is in use, the associated <xref:System.Data.IDbConnection> is busy serving the <xref:System.Data.IDataReader>.</span></span> <span data-ttu-id="b0b99-172">当处于此状态时，任何其他操作可以执行上<xref:System.Data.IDbConnection>以外关闭它。</span><span class="sxs-lookup"><span data-stu-id="b0b99-172">While in this state, no other operations can be performed on the <xref:System.Data.IDbConnection> other than closing it.</span></span> <span data-ttu-id="b0b99-173">这是这种情况，直到<xref:System.Data.IDataReader.Close%2A>DataReader 方法调用。</span><span class="sxs-lookup"><span data-stu-id="b0b99-173">This is the case until the <xref:System.Data.IDataReader.Close%2A> method of the DataReader is called.</span></span> <span data-ttu-id="b0b99-174">如果使用创建 DataReader<xref:System.Data.CommandBehavior>设置为`CloseConnection`，关闭了 DataReader 自动关闭的连接。</span><span class="sxs-lookup"><span data-stu-id="b0b99-174">If the DataReader is created with <xref:System.Data.CommandBehavior> set to `CloseConnection`, closing the DataReader closes the connection automatically.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public object ExecuteScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ExecuteScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.ExecuteScalar" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ExecuteScalar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b0b99-175">执行查询，并返回由查询返回的结果集中第一行的第一列。</span><span class="sxs-lookup"><span data-stu-id="b0b99-175">Executes the query, and returns the first column of the first row in the resultset returned by the query.</span></span> <span data-ttu-id="b0b99-176">忽略其他列或行。</span><span class="sxs-lookup"><span data-stu-id="b0b99-176">Extra columns or rows are ignored.</span></span></summary>
        <returns><span data-ttu-id="b0b99-177">结果集中第一行的第一列。</span><span class="sxs-lookup"><span data-stu-id="b0b99-177">The first column of the first row in the resultset.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0b99-178">使用<xref:System.Data.IDbCommand.ExecuteScalar%2A>方法以从数据库中检索单个值 （例如，一个聚合值）。</span><span class="sxs-lookup"><span data-stu-id="b0b99-178">Use the <xref:System.Data.IDbCommand.ExecuteScalar%2A> method to retrieve a single value (for example, an aggregate value) from a database.</span></span> <span data-ttu-id="b0b99-179">这要求更少的代码比使用<xref:System.Data.IDbCommand.ExecuteReader%2A>方法，，然后再执行的操作需要生成使用返回的数据的单个值<xref:System.Data.IDataReader>。</span><span class="sxs-lookup"><span data-stu-id="b0b99-179">This requires less code than using the <xref:System.Data.IDbCommand.ExecuteReader%2A> method, and then performing the operations necessary to generate the single value using the data returned by an <xref:System.Data.IDataReader>.</span></span>  
  
 <span data-ttu-id="b0b99-180">典型<xref:System.Data.IDbCommand.ExecuteScalar%2A>查询可进行格式设置如下面的 C# 示例所示：</span><span class="sxs-lookup"><span data-stu-id="b0b99-180">A typical <xref:System.Data.IDbCommand.ExecuteScalar%2A> query can be formatted as in the following C# example:</span></span>  
  
```  
CommandText = "select count(*) as NumberOfRegions from region";  
Int32 count = (int) ExecuteScalar();  
```  
  
 <span data-ttu-id="b0b99-181">如果结果集中的第一行的第一列未找到，空引用 (`Nothing`在 Visual Basic 中) 返回。</span><span class="sxs-lookup"><span data-stu-id="b0b99-181">If the first column of the first row in the result set is not found, a null reference (`Nothing` in Visual Basic) is returned.</span></span> <span data-ttu-id="b0b99-182">如果数据库中的值是`null`，该查询将返回`DBNull.Value`。</span><span class="sxs-lookup"><span data-stu-id="b0b99-182">If the value in the database is `null`, the query returns `DBNull.Value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0b99-183">下面的示例创建的派生类中，实例<xref:System.Data.SqlClient.SqlCommand>，然后执行它使用<xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>。</span><span class="sxs-lookup"><span data-stu-id="b0b99-183">The following example creates an instance of the derived class, <xref:System.Data.SqlClient.SqlCommand>, and then executes it using <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>.</span></span> <span data-ttu-id="b0b99-184">示例传递一个字符串，返回了聚合结果的 TRANSACT-SQL 语句和用来连接到数据源字符串。</span><span class="sxs-lookup"><span data-stu-id="b0b99-184">The example is passed a string that is a Transact-SQL statement that returns an aggregate result, and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteScalar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteScalar/CS/mysample.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteScalar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteScalar/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.IDataParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDataParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As IDataParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDataParameterCollection ^ Parameters { System::Data::IDataParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0b99-185">获取 <see cref="T:System.Data.IDataParameterCollection" />。</span><span class="sxs-lookup"><span data-stu-id="b0b99-185">Gets the <see cref="T:System.Data.IDataParameterCollection" />.</span></span></summary>
        <value><span data-ttu-id="b0b99-186">SQL 语句或存储过程的参数。</span><span class="sxs-lookup"><span data-stu-id="b0b99-186">The parameters of the SQL statement or stored procedure.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b0b99-187">下面的示例创建的派生类中，实例<xref:System.Data.SqlClient.SqlCommand>，并显示其参数。</span><span class="sxs-lookup"><span data-stu-id="b0b99-187">The following example creates an instance of the derived class, <xref:System.Data.SqlClient.SqlCommand>, and displays its parameters.</span></span> <span data-ttu-id="b0b99-188">在示例中，应用程序传递<xref:System.Data.SqlClient.SqlConnection>，Transact SQL SELECT 语句和的数组的查询字符串<xref:System.Data.SqlClient.SqlParameter>对象。</span><span class="sxs-lookup"><span data-stu-id="b0b99-188">In the example, the application passes a <xref:System.Data.SqlClient.SqlConnection>, a query string that is a Transact-SQL SELECT statement, and an array of <xref:System.Data.SqlClient.SqlParameter> objects.</span></span>  
  
 [!code-csharp[Classic WebData IDbCommand.Parameters Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.Parameters Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.Parameters Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.Parameters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.IDataParameter" />
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Sub Prepare ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Prepare();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b0b99-189">在数据源上创建准备就绪（或已编译）的命令版本。</span><span class="sxs-lookup"><span data-stu-id="b0b99-189">Creates a prepared (or compiled) version of the command on the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0b99-190">如果<xref:System.Data.IDbCommand.CommandType%2A>属性设置为`TableDirect`，<xref:System.Data.IDbCommand.Prepare%2A>不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="b0b99-190">If the <xref:System.Data.IDbCommand.CommandType%2A> property is set to `TableDirect`, <xref:System.Data.IDbCommand.Prepare%2A> does nothing.</span></span> <span data-ttu-id="b0b99-191">如果<xref:System.Data.IDbCommand.CommandType%2A>设置为`StoredProcedure`，调用<xref:System.Data.IDbCommand.Prepare%2A>应该会成功，虽然这可能会不导致不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="b0b99-191">If <xref:System.Data.IDbCommand.CommandType%2A> is set to `StoredProcedure`, the call to <xref:System.Data.IDbCommand.Prepare%2A> should succeed, although it may result in a no-op.</span></span> <span data-ttu-id="b0b99-192">服务器自动计划存入缓存以供重复使用，根据需要;因此，没有无需在客户端应用程序中直接调用此方法。</span><span class="sxs-lookup"><span data-stu-id="b0b99-192">The server automatically caches plans for reuse as necessary; therefore, there is no need to call this method directly in your client application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b0b99-193">下面的示例创建的派生类中，实例<xref:System.Data.OleDb.OleDbCommand>，并打开该连接。</span><span class="sxs-lookup"><span data-stu-id="b0b99-193">The following example creates an instance of the derived class, <xref:System.Data.OleDb.OleDbCommand>, and opens the connection.</span></span> <span data-ttu-id="b0b99-194">该示例然后准备上数据源的存储的过程，通过传递的是 SQL Select 语句的字符串和要用于连接到数据源的字符串。</span><span class="sxs-lookup"><span data-stu-id="b0b99-194">The example then prepares a stored procedure on the data source by passing a string that is a SQL Select statement and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.Prepare Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Prepare Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.Prepare Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Prepare Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b0b99-195">未设置 <see cref="P:System.Data.OleDb.OleDbCommand.Connection" />。</span><span class="sxs-lookup"><span data-stu-id="b0b99-195">The <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> is not set.</span></span>  
  
 <span data-ttu-id="b0b99-196">或</span><span class="sxs-lookup"><span data-stu-id="b0b99-196">-or-</span></span>  
  
 <span data-ttu-id="b0b99-197"><see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> 不为 <see cref="M:System.Data.OleDb.OleDbConnection.Open" />。</span><span class="sxs-lookup"><span data-stu-id="b0b99-197">The <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> is not <see cref="M:System.Data.OleDb.OleDbConnection.Open" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.IDbTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As IDbTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbTransaction ^ Transaction { System::Data::IDbTransaction ^ get(); void set(System::Data::IDbTransaction ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0b99-198">获取或设置要在其中执行 .NET Framework 数据提供程序的 <see langword="Command" /> 对象的事务。</span><span class="sxs-lookup"><span data-stu-id="b0b99-198">Gets or sets the transaction within which the <see langword="Command" /> object of a .NET Framework data provider executes.</span></span></summary>
        <value><span data-ttu-id="b0b99-199">.NET Framework 数据提供程序的 <see langword="Command" /> 对象执行。</span><span class="sxs-lookup"><span data-stu-id="b0b99-199">the <see langword="Command" /> object of a .NET Framework data provider executes.</span></span> <span data-ttu-id="b0b99-200">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b0b99-200">The default value is <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedRowSource">
      <MemberSignature Language="C#" Value="public System.Data.UpdateRowSource UpdatedRowSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.UpdateRowSource UpdatedRowSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.UpdatedRowSource" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdatedRowSource As UpdateRowSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::UpdateRowSource UpdatedRowSource { System::Data::UpdateRowSource get(); void set(System::Data::UpdateRowSource value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.UpdateRowSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b0b99-201">获取或设置命令结果在由 <see cref="T:System.Data.Common.DbDataAdapter" /> 的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> 方法使用时应用于 <see cref="T:System.Data.DataRow" /> 的方式。</span><span class="sxs-lookup"><span data-stu-id="b0b99-201">Gets or sets how command results are applied to the <see cref="T:System.Data.DataRow" /> when used by the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> method of a <see cref="T:System.Data.Common.DbDataAdapter" />.</span></span></summary>
        <value><span data-ttu-id="b0b99-202"><see cref="T:System.Data.UpdateRowSource" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="b0b99-202">One of the <see cref="T:System.Data.UpdateRowSource" /> values.</span></span> <span data-ttu-id="b0b99-203">除非自动生成该命令，否则默认值为 <see langword="Both" />。</span><span class="sxs-lookup"><span data-stu-id="b0b99-203">The default is <see langword="Both" /> unless the command is automatically generated.</span></span> <span data-ttu-id="b0b99-204">如果自动生成该命令，默认值为 <see langword="None" />。</span><span class="sxs-lookup"><span data-stu-id="b0b99-204">Then the default is <see langword="None" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b0b99-205">输入的值不是 <see cref="T:System.Data.UpdateRowSource" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="b0b99-205">The value entered was not one of the <see cref="T:System.Data.UpdateRowSource" /> values.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>