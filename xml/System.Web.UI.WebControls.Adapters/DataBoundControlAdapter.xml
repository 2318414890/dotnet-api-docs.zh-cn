<Type Name="DataBoundControlAdapter" FullName="System.Web.UI.WebControls.Adapters.DataBoundControlAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e56828131e192cc05a4b2c8e7c22a0d1a35887b7" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36386591" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataBoundControlAdapter : System.Web.UI.WebControls.Adapters.WebControlAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataBoundControlAdapter extends System.Web.UI.WebControls.Adapters.WebControlAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Class DataBoundControlAdapter&#xA;Inherits WebControlAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataBoundControlAdapter : System::Web::UI::WebControls::Adapters::WebControlAdapter" />
  <TypeSignature Language="F#" Value="type DataBoundControlAdapter = class&#xA;    inherit WebControlAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Adapters.WebControlAdapter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>根据特定浏览器请求自定义与适配器关联的 <see cref="T:System.Web.UI.WebControls.DataBoundControl" /> 对象的行为。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 派生的控件<xref:System.Web.UI.WebControls.DataBoundControl>类绑定到数据源，并通过枚举绑定到数据源中的项来生成其用户界面或子控件层次结构。 <xref:System.Web.UI.WebControls.DataBoundControl> 是一个抽象基类，用于定义可以如绑定到数据源的所有控件的常见特征<xref:System.Web.UI.WebControls.DataGrid>和<xref:System.Web.UI.WebControls.ListBox>控件。 有关详情，请参阅<xref:System.Web.UI.WebControls.DataBoundControl>。  
  
 A<xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter>修改的行为<xref:System.Web.UI.WebControls.DataBoundControl>特定浏览器或作为筛选器针对某些功能的浏览器或行为的类。 在呈现行为适应性大部分可以封装在派生自的专用类<xref:System.Web.UI.HtmlTextWriter>类。 因此，很可能单个适配器可以用于大量的浏览器类行为，或者包括在适应性<xref:System.Web.UI.HtmlTextWriter>类可以使用的控件适配器的不必要。  
  
 每个控件都有显式映射到适配器穿过.browser 定义文件中，如果有`<controlAdapter>`这些文件中的条目。 因此，任何访问到<xref:System.Web.UI.Control.Adapter%2A>属性<xref:System.Web.UI.WebControls.DataBoundControl>使用<xref:System.Web.HttpBrowserCapabilities>从适配器到控件的映射执行查找.browser 定义文件中提取的对象。  
  
 在处理期间，.NET Framework 截获对可能是浏览器特定的控件的方法的调用。 如果附加了控件适配器，.NET Framework 调用关联的适配器方法。 有关详情，请参阅<xref:System.Web.UI.Adapters.ControlAdapter>。  
  
 M:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.PerformDataBinding(System.Collections.IEnumerable) 方法绑定到关联的可枚举集合<xref:System.Web.UI.WebControls.DataBoundControl>。 <xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.Control%2A>属性返回的强类型化的引用<xref:System.Web.UI.WebControls.DataBoundControl>。  
  
   
  
## Examples  
 下面的代码示例创建并使用两个派生的控件：  
  
-   `MyDataBound`类，派生自<xref:System.Web.UI.WebControls.DataBoundControl>，是一个简单的只读网格控件。  
  
-   `MyDataBoundAdapter`类，派生自<xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter>，使用行分隔符，适用于小屏幕浏览器将网格数据呈现为一维列表。  
  
 第一个代码示例使用网页来声明`MyDataBound`控制和的实例<xref:System.Web.UI.WebControls.ObjectDataSource>提供形式的数据<xref:System.Data.DataView>对象。  
  
  
  
 第二个代码示例包含派生`MyDataBound`和`MyDataBoundAdapter`类：  
  
-   `MyDataBound`类重写<xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.PerformDataBinding%2A>方法以将保存<xref:System.Collections.IEnumerator>集合的数据源和替代<xref:System.Web.UI.WebControls.WebControl.RenderContents%2A>方法呈现该数据源作为 HTML `<table>`。  
  
-   `MyDataBoundAdapter`类重写<xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.PerformDataBinding%2A>以将数据源保存到一维<xref:System.Collections.ArrayList>并添加行分隔符。 它将重写<xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderContents%2A>呈现<xref:System.Collections.ArrayList>隔开的字段的列表作为`<br />`标记。  
  
 [!code-csharp[System.Web.UI.WebControls.Adapters.DataBoundControlAdapter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Adapters.DataBoundControlAdapter/CS/mydatabound.cs#1)]
 [!code-vb[System.Web.UI.WebControls.Adapters.DataBoundControlAdapter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Adapters.DataBoundControlAdapter/VB/mydatabound.vb#1)]  
  
 第三个代码示例使用配置文件来指定要用于未控件适配器`MyDataBound`Microsoft Internet Explorer 浏览器控件中并`MyDataBoundAdapter`用于`MyDataBound`Openwave 向上浏览器的控件。  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DataBoundControl" />
    <altmember cref="T:System.Web.UI.WebControls.BaseDataBoundControl" />
    <altmember cref="T:System.Web.UI.WebControls.WebControl" />
    <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
    <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
    <altmember cref="T:System.Web.UI.Control" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataBoundControlAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataBoundControlAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework 内部构造的新实例<xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter>类时它会创建相应<xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter>对象。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataBoundControl" />
        <altmember cref="T:System.Web.UI.WebControls.BaseDataBoundControl" />
        <altmember cref="T:System.Web.UI.WebControls.WebControl" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.DataBoundControl Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataBoundControl Control" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.Control" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Control As DataBoundControl" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::DataBoundControl ^ Control { System::Web::UI::WebControls::DataBoundControl ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Control : System.Web.UI.WebControls.DataBoundControl" Usage="System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.Control" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataBoundControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>检索对与此控件适配器关联的 <see cref="T:System.Web.UI.WebControls.DataBoundControl" /> 对象的强类型引用。</summary>
        <value>附加此 <see cref="T:System.Web.UI.WebControls.DataBoundControl" /> 的 <see cref="T:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter>对象附加到<xref:System.Web.UI.WebControls.DataBoundControl>控件，.NET Framework 调用而不是控件成员某些适配器成员。  
  
   
  
## Examples  
 下面的代码示例演示如何重写<xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.Control%2A>适配器中的属性派生自<xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter>类。 它将返回对的强类型化的引用`MyDataBound`控件。  
  
 [!code-csharp[System.Web.UI.WebControls.Adapters.DataBoundControlAdapter#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Adapters.DataBoundControlAdapter/CS/mydatabound.cs#2)]
 [!code-vb[System.Web.UI.WebControls.Adapters.DataBoundControlAdapter#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Adapters.DataBoundControlAdapter/VB/mydatabound.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>继承自<see cref="T:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter" />类，你应，最低限度实现<see langword="Control" />属性以返回该控件的强类型的实例，如示例部分中所示</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.DataBoundControl" />
        <altmember cref="T:System.Web.UI.WebControls.BaseDataBoundControl" />
        <altmember cref="T:System.Web.UI.WebControls.WebControl" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="P:System.Web.UI.WebControls.Adapters.WebControlAdapter.Control" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal virtual void PerformDataBinding (System.Collections.IEnumerable data);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void PerformDataBinding(class System.Collections.IEnumerable data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.PerformDataBinding(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub PerformDataBinding (data As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void PerformDataBinding(System::Collections::IEnumerable ^ data);" />
      <MemberSignature Language="F#" Value="abstract member PerformDataBinding : System.Collections.IEnumerable -&gt; unit&#xA;override this.PerformDataBinding : System.Collections.IEnumerable -&gt; unit" Usage="dataBoundControlAdapter.PerformDataBinding data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="data">要绑定到派生的 <see cref="T:System.Collections.IEnumerable" /> 的 <see cref="T:System.Object" /> 的 <see cref="T:System.Web.UI.WebControls.DataBoundControl" />。</param>
        <summary>将关联的 <see cref="T:System.Web.UI.WebControls.DataBoundControl" /> 对象的数据源中的数据绑定到控件适配器。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.PerformDataBinding%2A>代替了调用方法<xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A?displayProperty=nameWithType>方法时<xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter>控件适配器所附加到控件派生自<xref:System.Web.UI.WebControls.DataBoundControl>类。  
  
 通常情况下的重写<xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A?displayProperty=nameWithType>循环访问数据，创建不同的名称和值，如有必要，并将其保存到内部集合。 通常情况下，<xref:System.Web.UI.WebControls.WebControl.RenderContents%2A>或类似的方法<xref:System.Web.UI.WebControls.DataBoundControl>将填充用户接口或子控件从该内部集合。  
  
   
  
## Examples  
 下面的代码示例演示如何重写<xref:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.PerformDataBinding%2A>集合以将数据源保存到一维<xref:System.Collections.ArrayList>对象，并添加行分隔符。 它还演示如何重写<xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.RenderContents%2A>方法呈现<xref:System.Collections.ArrayList>隔开的字段的列表作为`<br />`标记。  
  
 [!code-csharp[System.Web.UI.WebControls.Adapters.DataBoundControlAdapter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Adapters.DataBoundControlAdapter/CS/mydatabound.cs#3)]
 [!code-vb[System.Web.UI.WebControls.Adapters.DataBoundControlAdapter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Adapters.DataBoundControlAdapter/VB/mydatabound.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>重写<see cref="M:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.PerformDataBinding(System.Collections.IEnumerable)" />方法专用绑定逻辑时，才能使用目标浏览器 — 例如，当项名称必须构造以不同的方式比该控件的常规用法。<see cref="M:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.PerformDataBinding(System.Collections.IEnumerable)" />基方法调用<see cref="M:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding(System.Collections.IEnumerable)" />。应调用<see cref="M:System.Web.UI.WebControls.Adapters.DataBoundControlAdapter.PerformDataBinding(System.Collections.IEnumerable)" />基方法，只有当你需要的数据绑定功能<see cref="T:System.Web.UI.WebControls.DataBoundControl" />。</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.DataBoundControl" />
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding(System.Collections.IEnumerable)" />
        <altmember cref="M:System.Web.UI.WebControls.ListControl.PerformDataBinding(System.Collections.IEnumerable)" />
      </Docs>
    </Member>
  </Members>
</Type>