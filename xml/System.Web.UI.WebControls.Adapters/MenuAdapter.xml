<Type Name="MenuAdapter" FullName="System.Web.UI.WebControls.Adapters.MenuAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0b55a1124efdb51a8f02504a8c2202ff67c3a2cb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30590621" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MenuAdapter : System.Web.UI.WebControls.Adapters.WebControlAdapter, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MenuAdapter extends System.Web.UI.WebControls.Adapters.WebControlAdapter implements class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Adapters.MenuAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Class MenuAdapter&#xA;Inherits WebControlAdapter&#xA;Implements IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class MenuAdapter : System::Web::UI::WebControls::Adapters::WebControlAdapter, System::Web::UI::IPostBackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Adapters.WebControlAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>提供用于修改特定浏览器的 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件行为的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Web.UI.WebControls.Adapters.MenuAdapter>修改的标记或行为<xref:System.Web.UI.WebControls.Menu>的特定浏览器或浏览器或行为的类作为筛选器控件针对某些功能。  
  
 默认情况下，<xref:System.Web.UI.WebControls.MenuItem>中的对象<xref:System.Web.UI.WebControls.Menu>控件呈现为超链接以满足菜单导航。 <xref:System.Web.UI.WebControls.Menu>类通过实现维护状态<xref:System.Web.UI.IPostBackEventHandler>接口，以便它可以响应并在回发期间引发特定事件。 你可以扩展<xref:System.Web.UI.WebControls.Adapters.MenuAdapter>类来进一步自定义呈现或行为<xref:System.Web.UI.WebControls.Menu>控件。  
  
 适配器的初始请求会导致.NET 框架搜索控件，映射的适配器给定请求的浏览器的特征。 <xref:System.Web.HttpBrowserCapabilities>类使用浏览器定义文件来确定客户端浏览器的特征以及映射到浏览器类型的适配器。  
  
 有关 ASP.NET 中的自适应呈现的详细信息，请参阅[体系结构概述的自适应控件行为](http://msdn.microsoft.com/library/4ff05ae9-4109-4352-929e-ad893895dbff)。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Menu" />
    <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
    <altmember cref="T:System.Web.AspNetHostingPermission" />
    <altmember cref="T:System.Web.HttpBrowserCapabilities" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.Adapters.MenuAdapter" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 适配器的初始请求会导致.NET 框架搜索控件，映射的适配器给定请求的浏览器的特征。 找到相应的适配器后，该控件将保持对中的映射的适配器实例的引用其<xref:System.Web.UI.Control.Adapter%2A>属性。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="P:System.Web.UI.Control.Adapter" />
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.Menu Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Menu Control" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Adapters.MenuAdapter.Control" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Control As Menu" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::Menu ^ Control { System::Web::UI::WebControls::Menu ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Menu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>检索对与此 <see cref="T:System.Web.UI.WebControls.Menu" /> 对象关联的 <see cref="T:System.Web.UI.WebControls.Adapters.MenuAdapter" /> 控件的强类型引用。</summary>
        <value>与当前 <see cref="T:System.Web.UI.WebControls.Menu" /> 对象关联的 <see cref="T:System.Web.UI.WebControls.Adapters.MenuAdapter" /> 控件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.Control%2A>属性使您能够引用适配器的相应控件。 当一个适配器关联与特定控件时，.NET Framework 将调用代替或控件的生命周期方法之外的适配器的生命周期方法。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Web.UI.WebControls.Adapters.MenuAdapter.Control%2A>属性，以检索<xref:System.Web.UI.WebControls.Menu>控件的父类。 此代码示例摘自更大的示例为提供<xref:System.Web.UI.WebControls.Adapters.MenuAdapter>类。  
  
 [!code-csharp[System.Web.UI.WebControls.Adapters.MenuAdapter#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Adapters.MenuAdapter/CS/contosomenuadapter.cs#2)]
 [!code-vb[System.Web.UI.WebControls.Adapters.MenuAdapter#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Adapters.MenuAdapter/VB/contosomenuadapter.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="LoadAdapterControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadAdapterControlState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadAdapterControlState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.LoadAdapterControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadAdapterControlState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadAdapterControlState(System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">包含适配器状态信息的字典形式的 <see cref="T:System.Object" />。</param>
        <summary>加载 <see cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState" /> 方法在对页面的前一个请求期间保存的任何控件状态信息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当适配器需要维护私有状态信息时，它会重写<xref:System.Web.UI.WebControls.Adapters.MenuAdapter.LoadAdapterControlState%2A>和<xref:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState%2A>方法。 情况下<xref:System.Web.UI.WebControls.Adapters.MenuAdapter>类，其中显示的菜单层次结构是依赖于以前选择<xref:System.Web.UI.WebControls.MenuItem>对象，`state`提供其中包含菜单上的层次结构中的选定项的路径的名称/值对的字典。 `state`参数是<xref:System.Web.UI.Pair>对象由保存<xref:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState%2A>期间到页面的上一个请求。  
  
 如果该控件不注册参与控件状态，适配器必须注册控件状态。 除了该控件，与其他生命周期方法不同的状态将保持适配器控件状态。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="P:System.Web.UI.Control.Adapter" />
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="T:System.Web.UI.WebControls.Label" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">与此事件关联的 <see cref="T:System.EventArgs" /> 数据。</param>
        <summary>将关联的 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件注册为一个要求控件状态的控件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.OnInit%2A>方法将关联的控件注册为一种要求控件状态。 默认情况下，.NET Framework 调用 Web 服务器控件的自己<xref:System.Web.UI.Control.OnInit%2A>方法。 但是之后,<xref:System.Web.UI.Control.Adapter%2A>服务器控件的属性设置，则.NET Framework 将调用适配器的实现<xref:System.Web.UI.Control.OnInit%2A>而不是控件的实现的方法。  
  
 使用<xref:System.Web.UI.WebControls.Adapters.MenuAdapter.OnInit%2A>方法以初始化控件中的设置。 在回发，这是用于管理与现有的视图状态数据进行交互的重要阶段。 有关详细信息，请参阅[体系结构概述的自适应控件行为](http://msdn.microsoft.com/library/4ff05ae9-4109-4352-929e-ad893895dbff)。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>如果适配器重写<see cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.OnInit(System.EventArgs)" />方法，它必须调用相应方法的基类。 否则为该控件自己的<see cref="E:System.Web.UI.Control.Init" />不会引发事件。</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="P:System.Web.UI.Control.Adapter" />
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">与此事件关联的 <see cref="T:System.EventArgs" /> 数据。</param>
        <summary>处理关联的 <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> 控件的 <see cref="T:System.Web.UI.WebControls.Menu" /> 方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.OnPreRender%2A>方法调用内部`OnPreRender`中的方法<xref:System.Web.UI.WebControls.Menu>类。 父类，如数据绑定、 应用样式和事件分配的所有其他预呈现函数执行按预期方式。  
  
 默认情况下，.NET Framework 调用<xref:System.Web.UI.WebControls.Menu>控件的<xref:System.Web.UI.WebControls.Menu.OnPreRender%2A>方法。 但是之后,<xref:System.Web.UI.Control.Adapter%2A>设置该控件的属性时，.NET Framework 将调用适配器的实现<xref:System.Web.UI.WebControls.Adapters.MenuAdapter.OnPreRender%2A>而不是控件的实现的方法。  
  
 使用<xref:System.Web.UI.WebControls.Adapters.MenuAdapter.OnPreRender%2A>方法以完成控件中的任何设置。 若要在此阶段中控制属性所做的更改将保存到视图状态，但在中做出更改<xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.Render%2A>方法不会保存。 有关详细信息，请参阅[体系结构概述的自适应控件行为](http://msdn.microsoft.com/library/4ff05ae9-4109-4352-929e-ad893895dbff)。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>如果适配器重写<see cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.OnPreRender(System.EventArgs)" />方法，它必须调用相应方法的基类。 否则为该控件自己的<see cref="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" />方法不会引发。</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="P:System.Web.UI.Control.Adapter" />
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">一个 <see cref="T:System.String" />，表示菜单层次结构中当前节点的路径。</param>
        <summary>用于在引发回发事件时维护菜单的路径。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RaisePostBackEvent%2A>方法调用时<xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A>事件引发，，并用于维护菜单上的导航路径。 `eventArgument`参数包含分隔的字符串的菜单项的标识当前菜单层次结构中的位置。  
  
 页的值传递`eventArgument`到关联控件的<xref:System.Web.UI.WebControls.Menu.RaisePostBackEvent%2A>方法。 关联<xref:System.Web.UI.WebControls.Menu>控件也会呈现导致回发发生标记元素。 如果该控件呈现的回发的客户端脚本，将从脚本的自变量传递中`eventArgument`参数。 如果回发导致由简单提交`eventArgument`是`null`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">当前节点的深度超出了允许范围。 无效声明、上次请求后进行了更改或伪造（欺诈）的请求都可能导致这种状况。</exception>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="P:System.Web.UI.Control.Adapter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="protected override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderBeginTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderBeginTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> 实例，包含用于生成和呈现特定于设备的输出的方法。</param>
        <summary>添加标记特性，并将表示控件开始标记的标志写入到将被发送至浏览器或设备的输出流中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag%2A>方法将添加标记特性，并将该控件的开始标记的标记写入到被发送到客户端浏览器的响应流的输出流。 <xref:System.Web.UI.WebControls.MenuItem>对象将呈现中单独<xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents%2A>方法和控件都将关闭通过后续调用<xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag%2A>方法。  
  
 重写<xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag%2A>如果想要实现自定义行为。 例如，重写方法，如将多个标记写入响应流内容，任何控件之前`<table><tr><td>`。 使用<xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag%2A>方法结合<xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag%2A>方法，可确保开始标记与结束标记在输出的一致性。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderItem(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.MenuItem,System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">包含可生成和呈现特定于设备的输出的方法的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将关联的 <see cref="T:System.Web.UI.WebControls.Menu" /> 控件中关联的菜单项作为一系列超链接写入到输出流。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents%2A>方法写入<xref:System.Web.UI.WebControls.MenuItem>的关联对象<xref:System.Web.UI.WebControls.Menu>写入输出流为超链接控件。 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents%2A>方法调用从<xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.Render%2A>方法，用于执行呈现到的设备浏览器的标记代码的修改。  
  
 在生命周期和仅实际标记创建控件此处完成此阶段之前，应设置控件属性。 在此阶段的生命周期对控件所做的更改不保存到视图状态。 保存对控件所做更改，重写<xref:System.Web.UI.Control.OnPreRender%2A>事件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">当前项的深度超出了允许范围。  
  
 或  
  
 禁用了当前项。</exception>
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderItem(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.MenuItem,System.Int32)" />
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="protected override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> 实例，包含用于生成和呈现特定于设备的输出的方法。</param>
        <summary>创建最终的标记，并将控件的结束标记 (tag) 的标记 (markup) 写入发出至浏览器或设备的输出流。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag%2A>方法将控件的结束标记的标记写入输出流发送到客户端浏览器的响应流。 在中呈现的特性，样式特性和开始标记<xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag%2A>方法。 <xref:System.Web.UI.WebControls.MenuItem>呈现对象中单独<xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents%2A>方法。  
  
 重写<xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag%2A>如果想要实现自定义行为。 例如，重写方法将写入多个结束标记响应流内容，任何控件后如`</td></tr></table>`。 使用<xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderEndTag%2A>方法结合<xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag%2A>方法，可确保开始标记与结束标记在输出的一致性。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderItem(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.MenuItem,System.Int32)" />
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderItem">
      <MemberSignature Language="C#" Value="protected internal virtual void RenderItem (System.Web.UI.HtmlTextWriter writer, System.Web.UI.WebControls.MenuItem item, int position);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RenderItem(class System.Web.UI.HtmlTextWriter writer, class System.Web.UI.WebControls.MenuItem item, int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderItem(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.MenuItem,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RenderItem (writer As HtmlTextWriter, item As MenuItem, position As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RenderItem(System::Web::UI::HtmlTextWriter ^ writer, System::Web::UI::WebControls::MenuItem ^ item, int position);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="item" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> 实例，包含用于生成和呈现特定于设备的输出的方法。</param>
        <param name="item">
          <see cref="T:System.Web.UI.WebControls.MenuItem" /> 对象，包含要写入响应流的属性。</param>
        <param name="position">指定的 <see cref="T:System.Web.UI.WebControls.MenuItem" /> 对象在菜单层次结构中的位置。</param>
        <summary>将一个菜单项以超链接的形式呈现。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderItem%2A>方法调用从<xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents%2A>方法来检索其中的样式和来自间距属性<xref:System.Web.UI.WebControls.MenuItem>对象，并将它们应用于新创建的超链接元素。 菜单层次结构中的遍历<xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents%2A>方法并且将调用<xref:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderItem%2A>方法呈现每个项。 每个项呈现为超链接和继承的属性和指定的样式<xref:System.Web.UI.WebControls.MenuItem>控件。 呈现到页的超链接是以下项之一：  
  
-   若要打开或选择项的回发事件。  
  
-   若要导航到中指定的目标的链接<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>属性<xref:System.Web.UI.WebControls.MenuItem>控件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.RenderContents(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SaveAdapterControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveAdapterControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveAdapterControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveAdapterControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveAdapterControlState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保存自页面回发到服务器以来对适配器私有控件状态所做的任何更改。</summary>
        <returns>一个 <see cref="T:System.Object" />，其中包含适配器的控件状态信息作为 <see cref="T:System.Web.UI.StateBag" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState%2A>方法使用<xref:System.Web.UI.WebControls.Menu>控件状态来维护当前导航路径的菜单。 当适配器需要维护私有状态信息时，它会重写<xref:System.Web.UI.WebControls.Adapters.MenuAdapter.LoadAdapterControlState%2A>和<xref:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState%2A>方法。 需要在请求中独立于关联的控件的状态之间保持状态的复杂功能时，适配器可能保持私有的控件状态。 适配器需要注册期间的控件状态<xref:System.Web.UI.WebControls.Adapters.MenuAdapter.OnInit%2A>方法调用中的每个请求。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="M:System.Web.UI.WebControls.Adapters.MenuAdapter.SaveAdapterControlState" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
        <altmember cref="P:System.Web.UI.Control.Adapter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Adapters.MenuAdapter.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">包含要传递到事件处理程序的可选事件参数的 <see cref="T:System.String" />。</param>
        <summary>赋予 <see cref="T:System.Web.UI.WebControls.Adapters.MenuAdapter" /> 类处理将页面回发到服务器时引发的事件的能力。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A>方法可以使<xref:System.Web.UI.WebControls.Adapters.MenuAdapter>类来处理页回发到服务器时引发的事件。 页面将传递`eventArgument`到<xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="T:System.Web.UI.WebControls.Adapters.WebControlAdapter" />
      </Docs>
    </Member>
  </Members>
</Type>