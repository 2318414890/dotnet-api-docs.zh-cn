<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Pen.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d37fac39a424f3b42adab08f5106dc3d3cc57f2f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d37fac39a424f3b42adab08f5106dc3d3cc57f2f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>Defines an object used to draw lines and curves.</source>
          <target state="translated">定义用于绘制直线和曲线的对象。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>This class cannot be inherited.</source>
          <target state="translated">此类不能被继承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Pen">
          <source>A <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> draws a line of specified width and style.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>绘制指定的宽度和样式的行。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Pen">
          <source>Use the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashStyle&gt;</ph> property to draw several varieties of dashed lines.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashStyle&gt;</ph>属性绘制的虚线的几种变体。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Pen">
          <source>The line drawn by a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> can be filled in a variety of fill styles, including solid colors and textures.</source>
          <target state="translated">绘制的线条<ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>可以填写多种填充样式，包括纯色和纹理。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Pen">
          <source>The fill style depends on brush or texture that is used as the fill object.</source>
          <target state="translated">填充样式取决于画笔或纹理用作填充对象。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Pen">
          <source>The following code example demonstrates constructing a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> with a <ph id="ph2">&lt;xref:System.Drawing.Pen.Brush%2A&gt;</ph> and the effects of setting the <ph id="ph3">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph> property on a <ph id="ph4">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">下面的代码示例演示如何构造<ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>与<ph id="ph2">&lt;xref:System.Drawing.Pen.Brush%2A&gt;</ph>和设置的效果<ph id="ph3">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph>属性<ph id="ph4">&lt;xref:System.Drawing.Pen&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Pen">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">本示例旨在与 Windows 窗体一起使用。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Pen">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowLineJoin`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">将代码粘贴到窗体并调用<ph id="ph1">`ShowLineJoin`</ph>方法时处理该窗体的<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph>事件，并传递<ph id="ph3">`e`</ph>作为<ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> class with the specified color.</source>
          <target state="translated">用指定颜色初始化 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the fill properties of this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph>，确定该 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 的填充属性。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 初始化 <ph id="ph2">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Pen.Brush%2A&gt;</ph> property determines how the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> draws lines.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Pen.Brush%2A&gt;</ph>属性确定如何<ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph>绘制线。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
          <source>Lines are drawn as if they are filled rectangles, with the characteristics of the specified <ph id="ph1">&lt;xref:System.Drawing.Brush&gt;</ph>.</source>
          <target state="translated">好像它们是填充的矩形，具有指定的特征绘制连线<ph id="ph1">&lt;xref:System.Drawing.Brush&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> property of the new <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> is set to 1 (the default).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph>属性的新<ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph>设置为 1 （默认值）。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
          <source>The following code example demonstrates constructing a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> with a <ph id="ph2">&lt;xref:System.Drawing.Pen.Brush%2A&gt;</ph> and the effects of setting the <ph id="ph3">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph> property on a <ph id="ph4">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">下面的代码示例演示如何构造<ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>与<ph id="ph2">&lt;xref:System.Drawing.Pen.Brush%2A&gt;</ph>和设置的效果<ph id="ph3">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph>属性<ph id="ph4">&lt;xref:System.Drawing.Pen&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">本示例旨在与 Windows 窗体一起使用。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowLineJoin`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">将代码粘贴到窗体并调用<ph id="ph1">`ShowLineJoin`</ph>方法时处理该窗体的<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph>事件，并传递<ph id="ph3">`e`</ph>作为<ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> structure that indicates the color of this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> 结构，指示此 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 的颜色。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> class with the specified color.</source>
          <target state="translated">用指定颜色初始化 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Color&gt;</ph> property is set to the color specified by the <ph id="ph2">`color`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Color&gt;</ph>属性设置为指定的颜色<ph id="ph2">`color`</ph>参数。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> property is set to 1 (the default).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph>属性设置为 1 （默认值）。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the characteristics of this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph>，决定此 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 的特征。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source>The width of the new <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">新 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 的宽度。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Drawing.Pen.Width" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> 初始化 <ph id="ph3">&lt;see cref="P:System.Drawing.Pen.Width" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Brush&gt;</ph> is set to the color specified in the <ph id="ph2">`brush`</ph> parameter, the <ph id="ph3">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> property is set to the value specified in the <ph id="ph4">`width`</ph> parameter, and the units are set to <ph id="ph5">&lt;xref:System.Drawing.GraphicsUnit.World&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Brush&gt;</ph>设置中指定的颜色为<ph id="ph2">`brush`</ph>参数，<ph id="ph3">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph>属性设置中指定的值为<ph id="ph4">`width`</ph>参数和单位设置为<ph id="ph5">&lt;xref:System.Drawing.GraphicsUnit.World&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source>Note that the <ph id="ph1">`brush`</ph> parameter also specifies the <ph id="ph2">&lt;xref:System.Drawing.Color&gt;</ph> property of this <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">请注意，<ph id="ph1">`brush`</ph>参数还指定<ph id="ph2">&lt;xref:System.Drawing.Color&gt;</ph>此属性<ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source>A <ph id="ph1">`width`</ph> of 0 will result in the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> drawing as if the width were 1.</source>
          <target state="translated">A<ph id="ph1">`width`</ph>为 0 将导致<ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph>绘制就像宽度是 1。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> and demonstrates the effects of setting the <ph id="ph2">&lt;xref:System.Drawing.Pen.StartCap%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Drawing.Pen.EndCap%2A&gt;</ph> properties on a <ph id="ph4">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">下面的代码示例创建<ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>并演示设置的效果<ph id="ph2">&lt;xref:System.Drawing.Pen.StartCap%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Drawing.Pen.EndCap%2A&gt;</ph>属性<ph id="ph4">&lt;xref:System.Drawing.Pen&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">本示例旨在与 Windows 窗体一起使用。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowStartAndEndCaps`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">将代码粘贴到窗体并调用<ph id="ph1">`ShowStartAndEndCaps`</ph>方法时处理该窗体的<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph>事件，并传递<ph id="ph3">`e`</ph>作为<ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> structure that indicates the color of this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> 结构，指示此 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 的颜色。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
          <source>A value indicating the width of this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">指示此 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 的宽度的值。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Drawing.Pen.Width" /&gt;</ph> properties.</source>
          <target state="translated">用指定的 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> 属性初始化 <ph id="ph3">&lt;see cref="P:System.Drawing.Pen.Width" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Color&gt;</ph> property is set to the color specified by the <ph id="ph2">`color`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Color&gt;</ph>属性设置为指定的颜色<ph id="ph2">`color`</ph>参数。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> property is set to the value specified in the <ph id="ph2">`width`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph>属性设置中指定的值为<ph id="ph2">`width`</ph>参数。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
          <source>A <ph id="ph1">`width`</ph> of 0 will result in the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> drawing as if the width were 1.</source>
          <target state="translated">A<ph id="ph1">`width`</ph>为 0 将导致<ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph>绘制就像宽度是 1。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
          <source>The following code example demonstrates creating a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> and the effects of setting the <ph id="ph2">&lt;xref:System.Drawing.Pen.DashCap%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Drawing.Graphics.SmoothingMode%2A&gt;</ph> properties.</source>
          <target state="translated">下面的代码示例演示如何创建<ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>和设置的效果<ph id="ph2">&lt;xref:System.Drawing.Pen.DashCap%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph>，和<ph id="ph4">&lt;xref:System.Drawing.Graphics.SmoothingMode%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">本示例旨在与 Windows 窗体一起使用。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowPensAndSmoothingMode`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing e as <ph id="ph3">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">将代码粘贴到窗体并调用<ph id="ph1">`ShowPensAndSmoothingMode`</ph>方法时处理该窗体的<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph>事件，并传递 e 作为<ph id="ph3">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Alignment">
          <source>Gets or sets the alignment for this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">获取或设置此 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 的对齐方式。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Alignment">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PenAlignment" /&gt;</ph> that represents the alignment for this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">表示该 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PenAlignment" /&gt;</ph> 的对齐方式的 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Alignment">
          <source>This property determines how the <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> draws closed curves and polygons.</source>
          <target state="translated">此属性确定如何<ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>绘制闭合的曲线和多边形。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Alignment">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.PenAlignment&gt;</ph> enumeration specifies five values; however, only two values—<ph id="ph2">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Center&gt;</ph> and <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph>—will change the appearance of a drawn line.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Drawing2D.PenAlignment&gt;</ph>枚举指定五个值; 但是，仅包含两个值-<ph id="ph2">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Center&gt;</ph>和<ph id="ph3">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph>-将更改绘制的线条的外观。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Alignment">
          <source><ph id="ph1">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Center&gt;</ph> is the default value for this property and specifies that the width of the pen is centered on the outline of the curve or polygon.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Center&gt;</ph> 为此属性的默认值并指定的笔宽位于曲线或多边形的轮廓。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Alignment">
          <source>A value of <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph> for this property specifies that the width of the pen is inside the outline of the curve or polygon.</source>
          <target state="translated">值为<ph id="ph1">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph>此属性指定的笔宽位于曲线或多边形的轮廓。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Alignment">
          <source>The other three values, <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Right&gt;</ph>, <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Left&gt;</ph>, and <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Outset&gt;</ph>, will result in a pen that is centered.</source>
          <target state="translated">其他三个值， <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Right&gt;</ph>， <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Left&gt;</ph>，和<ph id="ph3">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Outset&gt;</ph>，将导致钢笔处于居中位置。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Alignment">
          <source>A <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> that has its alignment set to <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph> will yield unreliable results, sometimes drawing in the inset position and sometimes in the centered position.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> ，其设置为其对齐<ph id="ph2">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph>将生成不可靠的结果，有时绘制在内嵌位置，并且有时位于为中心的位置。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Alignment">
          <source>Also, an inset pen cannot be used to draw compound lines and cannot draw dashed lines with <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashCap.Triangle&gt;</ph> dash caps.</source>
          <target state="translated">此外，内嵌钢笔不能用于绘制复合直线，并且无法进行绘制的虚线<ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashCap.Triangle&gt;</ph>线帽。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Alignment">
          <source>The specified value is not a member of <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PenAlignment" /&gt;</ph>.</source>
          <target state="translated">指定值不是 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PenAlignment" /&gt;</ph> 的成员。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Alignment">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Alignment" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">对不可变的 <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Alignment" /&gt;</ph>（比如由 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 类所返回）设置 <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Brush">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines attributes of this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph>，用于确定此 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 的特性。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Brush">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines attributes of this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph>，用于确定此 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 的特性。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Brush">
          <source>Assigning this property causes the pen to draw filled lines and curves.</source>
          <target state="translated">分配此属性会导致钢笔绘制填充的直线和曲线。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Brush">
          <source>It overrides the <ph id="ph1">&lt;xref:System.Drawing.Color&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">它将重写<ph id="ph1">&lt;xref:System.Drawing.Color&gt;</ph>属性<ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Brush">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Brush" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">对不可变的 <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Brush" /&gt;</ph>（比如由 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 类所返回）设置 <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.Clone">
          <source>Creates an exact copy of this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">创建此 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 的一个精确副本。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.Clone">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that can be cast to a <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">一个可以强制转换为 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Clone">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">下面的代码示例专用于 Windows 窗体，并且它需要<ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>，这是一个参数的<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph>事件处理程序。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Clone">
          <source>The code performs the following actions:</source>
          <target state="translated">该代码执行下列操作：</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Clone">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Clone">
          <source>Creates a copy of that pen.</source>
          <target state="translated">创建一份该钢笔。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Clone">
          <source>Draws a line to the screen, using the copy of the pen.</source>
          <target state="translated">绘制一条到屏幕中，使用该钢笔的副本。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Color">
          <source>Gets or sets the color of this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">获取或设置此 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 的颜色。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Color">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> structure that represents the color of this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> 结构，表示此 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 的颜色。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Color">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Color" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">对不可变的 <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Color" /&gt;</ph>（比如由 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 类所返回）设置 <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.CompoundArray">
          <source>Gets or sets an array of values that specifies a compound pen.</source>
          <target state="translated">获取或设置用于指定复合钢笔的值数组。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.CompoundArray">
          <source>A compound pen draws a compound line made up of parallel lines and spaces.</source>
          <target state="translated">复合钢笔绘制由平行直线和空白区域组成的复合直线。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>An array of real numbers that specifies the compound array.</source>
          <target state="translated">用于指定复合数组的实数组。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>The elements in the array must be in increasing order, not less than 0, and not greater than 1.</source>
          <target state="translated">该数组中的元素必须按升序排列，不能小于 0，也不能大于 1。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>A compound line is made up of alternating parallel lines and spaces of varying widths.</source>
          <target state="translated">复合行组成交替并行直线和空白区域的不同的宽度。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>The values in the array specify the starting points of each component of the compound line relative to the pen's width.</source>
          <target state="translated">数组中的值指定每个组件的复合直线相对于钢笔的宽度的起始点。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>The first value in the array specifies where the first component (a line) begins as a fraction of the distance across the width of the pen.</source>
          <target state="translated">数组中的第一个值指定的第一个组件 （行） 的开始位置的距离一个分数在钢笔的宽度。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>The second value in the array specifies the beginning of the next component (a space) as a fraction of the distance across the width of the pen.</source>
          <target state="translated">数组中的第二个值指定的起始时间的下一个组件 （空格） 作为距离的小数部分在钢笔的宽度。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>The final value in the array specifies where the last component ends.</source>
          <target state="translated">数组中的最终值指定的最后一个组件的结束位置。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>Suppose you want a pen to draw two parallel lines where the width of the first line is 20 percent of the pen's width, the width of the space that separates the two lines is 50 percent of the pen' s width, and the width of the second line is 30 percent of the pen's width.</source>
          <target state="translated">假设你想用钢笔绘制两条平行直线的第一个行的宽度所在钢笔的宽度的 20%，分隔的两行的空间的宽度为 50%的笔 ' s 宽度和第二行的宽度为 30%的笔宽度。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>Start by creating a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> and an array of real numbers.</source>
          <target state="translated">首先创建<ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>和实数的数组。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>Set the compound array by passing the array with the values 0.0, 0.2, 0.7, and 1.0 to this property.</source>
          <target state="translated">通过将包含值 0.0、 0.2、 0.7 和 1.0 数组传递给此属性设置复合数组。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>Do not set this property if the <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> has its <ph id="ph2">&lt;xref:System.Drawing.Pen.Alignment%2A&gt;</ph> property set to <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph>.</source>
          <target state="translated">如果未设置此属性<ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>具有其<ph id="ph2">&lt;xref:System.Drawing.Pen.Alignment%2A&gt;</ph>属性设置为<ph id="ph3">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.CompoundArray">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.CompoundArray" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">对不可变的 <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.CompoundArray" /&gt;</ph>（比如由 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 类所返回）设置 <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.CustomEndCap">
          <source>Gets or sets a custom cap to use at the end of lines drawn with this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">获取或设置要在通过此 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 绘制的直线终点使用的自定义线帽。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CustomEndCap">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> that represents the cap used at the end of lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph>，表示在通过此 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 绘制的直线终点使用的线帽。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.CustomEndCap">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.CustomEndCap" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">对不可变的 <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.CustomEndCap" /&gt;</ph>（比如由 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 类所返回）设置 <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.CustomStartCap">
          <source>Gets or sets a custom cap to use at the beginning of lines drawn with this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">获取或设置要在通过此 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 绘制的直线起点使用的自定义线帽。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CustomStartCap">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> that represents the cap used at the beginning of lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph>，表示在通过此 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 绘制的直线起点使用的线帽。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.CustomStartCap">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.CustomStartCap" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">对不可变的 <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.CustomStartCap" /&gt;</ph>（比如由 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 类所返回）设置 <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.DashCap">
          <source>Gets or sets the cap style used at the end of the dashes that make up dashed lines drawn with this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">获取或设置用在短划线终点的线帽样式，这些短划线构成通过此 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 绘制的虚线。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashCap">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.DashCap" /&gt;</ph> values that represents the cap style used at the beginning and end of the dashes that make up dashed lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.DashCap" /&gt;</ph> 值之一，表示用在短划线起点和终点的线帽样式，这些短划线构成通过此 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 绘制的虚线。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashCap">
          <source>Do not set this property to <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashCap.Triangle&gt;</ph> if the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> has its <ph id="ph3">&lt;xref:System.Drawing.Pen.Alignment%2A&gt;</ph> property set to <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph>.</source>
          <target state="translated">未设置此属性为<ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashCap.Triangle&gt;</ph>如果<ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph>具有其<ph id="ph3">&lt;xref:System.Drawing.Pen.Alignment%2A&gt;</ph>属性设置为<ph id="ph4">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashCap">
          <source>The following code example demonstrates creating a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> and the effects of setting the <ph id="ph2">&lt;xref:System.Drawing.Pen.DashCap%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Drawing.Graphics.SmoothingMode%2A&gt;</ph> properties.</source>
          <target state="translated">下面的代码示例演示如何创建<ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>和设置的效果<ph id="ph2">&lt;xref:System.Drawing.Pen.DashCap%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph>，和<ph id="ph4">&lt;xref:System.Drawing.Graphics.SmoothingMode%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashCap">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">本示例旨在与 Windows 窗体一起使用。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashCap">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowPensAndSmoothingMode`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">将代码粘贴到窗体并调用<ph id="ph1">`ShowPensAndSmoothingMode`</ph>方法时处理该窗体的<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph>事件，并传递<ph id="ph3">`e`</ph>作为<ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.DashCap">
          <source>The specified value is not a member of <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.DashCap" /&gt;</ph>.</source>
          <target state="translated">指定值不是 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.DashCap" /&gt;</ph> 的成员。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.DashCap">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.DashCap" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">对不可变的 <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.DashCap" /&gt;</ph>（比如由 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 类所返回）设置 <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.DashOffset">
          <source>Gets or sets the distance from the start of a line to the beginning of a dash pattern.</source>
          <target state="translated">获取或设置直线的起点到短划线图案起始处的距离。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashOffset">
          <source>The distance from the start of a line to the beginning of a dash pattern.</source>
          <target state="translated">直线的起点到短划线图案起始处的距离。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.DashOffset">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.DashOffset" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">对不可变的 <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.DashOffset" /&gt;</ph>（比如由 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 类所返回）设置 <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.DashPattern">
          <source>Gets or sets an array of custom dashes and spaces.</source>
          <target state="translated">获取或设置自定义的短划线和空白区域的数组。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashPattern">
          <source>An array of real numbers that specifies the lengths of alternating dashes and spaces in dashed lines.</source>
          <target state="translated">实数数组，指定虚线中交替出现的短划线和空白区域的长度。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashPattern">
          <source>Assigning a value other than <ph id="ph1">`null`</ph> to this property will set the <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.DashStyle&gt;</ph> property for this <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph> to <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.DashStyle.Custom&gt;</ph>.</source>
          <target state="translated">除赋值<ph id="ph1">`null`</ph>为此属性将设置<ph id="ph2">&lt;xref:System.Drawing.Drawing2D.DashStyle&gt;</ph>此属性<ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>到<ph id="ph4">&lt;xref:System.Drawing.Drawing2D.DashStyle.Custom&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashPattern">
          <source>The elements in the <ph id="ph1">`dashArray`</ph> array set the length of each dash and space in the dash pattern.</source>
          <target state="translated">中的元素<ph id="ph1">`dashArray`</ph>数组在短划线图案中设置的每个短划线和空间的长度。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashPattern">
          <source>The first element sets the length of a dash, the second element sets the length of a space, the third element sets the length of a dash, and so on.</source>
          <target state="translated">第一个元素设置的短划线的长度，第二个元素设置的空间的长度，第三个元素设置的短划线和等等的长度。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashPattern">
          <source>Consequently, each element should be a non-zero positive number.</source>
          <target state="translated">因此，每个元素应为非零的正数。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashPattern">
          <source>The length of each dash and space in the dash pattern is the product of the element value in the array and the width of the <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">每个短划线和短划线图案中的空间的长度是数组中的元素值的乘积和宽度<ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashPattern">
          <source>The following code example demonstrates the effects of setting the <ph id="ph1">&lt;xref:System.Drawing.Pen.DashCap%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Drawing.Graphics.SmoothingMode%2A&gt;</ph> properties.</source>
          <target state="translated">下面的代码示例演示如何设置的效果<ph id="ph1">&lt;xref:System.Drawing.Pen.DashCap%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph>，和<ph id="ph3">&lt;xref:System.Drawing.Graphics.SmoothingMode%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashPattern">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">本示例旨在与 Windows 窗体一起使用。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashPattern">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowPensAndSmoothingMode`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">将代码粘贴到窗体并调用<ph id="ph1">`ShowPensAndSmoothingMode`</ph>方法时处理该窗体的<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph>事件，并传递<ph id="ph3">`e`</ph>作为<ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.DashPattern">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.DashPattern" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">对不可变的 <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.DashPattern" /&gt;</ph>（比如由 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 类所返回）设置 <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.DashStyle">
          <source>Gets or sets the style used for dashed lines drawn with this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">获取或设置用于通过此 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 绘制的虚线的样式。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashStyle">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.DashStyle" /&gt;</ph> that represents the style used for dashed lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.DashStyle" /&gt;</ph>，表示用于通过此 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 绘制的虚线的样式。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashStyle">
          <source>A value of <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashStyle.Custom&gt;</ph> for this property specifies that a custom pattern of dashes and spaces, defined by the <ph id="ph2">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph> property, makes up lines drawn with this <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">值为<ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashStyle.Custom&gt;</ph>为此属性指定自定义模式的短划线和空白，通过定义<ph id="ph2">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph>属性，后者构成与此绘制的直线<ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashStyle">
          <source>If the value of this property is <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashStyle.Custom&gt;</ph> and the value of the <ph id="ph2">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph> property is <ph id="ph3">`null`</ph>, the pen draws solid lines.</source>
          <target state="translated">如果此属性的值是<ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashStyle.Custom&gt;</ph>和的值<ph id="ph2">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph>属性是<ph id="ph3">`null`</ph>，则钢笔绘制实线。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.DashStyle">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.DashStyle" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">对不可变的 <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.DashStyle" /&gt;</ph>（比如由 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 类所返回）设置 <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.Dispose">
          <source>Releases all resources used by this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">释放此 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 使用的所有资源。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>Calling <ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph> allows the resources used by this <ph id="ph2">&lt;xref:System.Drawing.Brush&gt;</ph> to be reallocated for other purposes.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph>允许使用的资源<ph id="ph2">&lt;xref:System.Drawing.Brush&gt;</ph>可以重新分配用于其他目的。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">在完成使用 <ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph> 后，应调用 <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph> 方法使 <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> 处于不可用状态。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph> was occupying.</source>
          <target state="translated">在调用<ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph>，必须释放对所有引用<ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph>以便垃圾回收器才能回收的内存，<ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>占用。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>清洗向上非托管资源<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>实现 Dispose 方法<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">每次释放对 <ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph> 的最后一个引用前，均应调用 <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">否则，在垃圾回收器调用 <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> 对象的 <ph id="ph2">`Finalize`</ph> 方法之前，该对象正在使用的资源不会被释放。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>The following code example demonstrates the effects of setting the <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph> properties, and shows how to call the <ph id="ph3">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph> method for a <ph id="ph4">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">下面的代码示例演示如何设置的效果<ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph>属性，并演示如何调用<ph id="ph3">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph>方法<ph id="ph4">&lt;xref:System.Drawing.Pen&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">本示例旨在与 Windows 窗体一起使用。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowLineJoin`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">将代码粘贴到窗体并调用<ph id="ph1">`ShowLineJoin`</ph>方法时处理该窗体的<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph>事件，并传递<ph id="ph3">`e`</ph>作为<ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.EndCap">
          <source>Gets or sets the cap style used at the end of lines drawn with this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">获取或设置要在通过此 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 绘制的直线终点使用的线帽样式。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.EndCap">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> values that represents the cap style used at the end of lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> 值之一，表示在通过此 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 绘制的直线终点使用的线帽样式。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.EndCap">
          <source>The following code example demonstrates the effects of setting the <ph id="ph1">&lt;xref:System.Drawing.Pen.StartCap%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Pen.EndCap%2A&gt;</ph> properties on a <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">下面的代码示例演示如何设置的效果<ph id="ph1">&lt;xref:System.Drawing.Pen.StartCap%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Drawing.Pen.EndCap%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.EndCap">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">本示例旨在与 Windows 窗体一起使用。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.EndCap">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowStartAndEndCaps`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">将代码粘贴到窗体并调用<ph id="ph1">`ShowStartAndEndCaps`</ph>方法时处理该窗体的<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph>事件，并传递<ph id="ph3">`e`</ph>作为<ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.EndCap">
          <source>The specified value is not a member of <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph>.</source>
          <target state="translated">指定值不是 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> 的成员。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.EndCap">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.EndCap" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">对不可变的 <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.EndCap" /&gt;</ph>（比如由 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 类所返回）设置 <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.Finalize">
          <source>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.LineJoin">
          <source>Gets or sets the join style for the ends of two consecutive lines drawn with this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">获取或设置通过此 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 绘制的两条连续直线的端点的联接样式。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.LineJoin">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineJoin" /&gt;</ph> that represents the join style for the ends of two consecutive lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineJoin" /&gt;</ph>，表示通过此 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 绘制的两条连续直线的端点的联接样式。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.LineJoin">
          <source>A line join is the common area that is formed by two lines whose ends meet or overlap.</source>
          <target state="translated">线条联接是由其端点相交或重叠的两个行构成的常见区域。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.LineJoin">
          <source>There are three line join styles: miter, bevel, and round.</source>
          <target state="translated">有三种线条联接样式： 斜接、 凹凸效果，和舍入。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.LineJoin">
          <source>When you specify a line join style for a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> object, that join style will be applied to all the connected lines in any <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> object drawn using that pen.The following illustration shows the results of the beveled line join example.</source>
          <target state="translated">当指定的行联接样式<ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>对象，联接样式，将应用于任何中所有连接的直线<ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph>使用该笔绘制的对象。下图显示凹凸效果的线条联接的结果。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.LineJoin">
          <source><bpt id="p1">![</bpt>Pens<ept id="p1">]</ept><bpt id="p2">(~/add/media/pens5.gif "</bpt>Pens<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>钢笔<ept id="p1">]</ept><bpt id="p2">(~/add/media/pens5.gif "</bpt>钢笔<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.LineJoin">
          <source>The following code example demonstrates the effects of setting the <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph> properties on a <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">下面的代码示例演示如何设置的效果<ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.LineJoin">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">本示例旨在与 Windows 窗体一起使用。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.LineJoin">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowLineJoin`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> .</source>
          <target state="translated">将代码粘贴到窗体并调用<ph id="ph1">`ShowLineJoin`</ph>方法时处理该窗体的<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph>事件，并传递<ph id="ph3">`e`</ph>作为<ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.LineJoin">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.LineJoin" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">对不可变的 <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.LineJoin" /&gt;</ph>（比如由 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 类所返回）设置 <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.MiterLimit">
          <source>Gets or sets the limit of the thickness of the join on a mitered corner.</source>
          <target state="translated">获取或设置斜接角上联接宽度的限制。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.MiterLimit">
          <source>The limit of the thickness of the join on a mitered corner.</source>
          <target state="translated">斜接角上联接宽度的限制。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.MiterLimit">
          <source>The miter length is the distance from the intersection of the line walls on the inside of the join to the intersection of the line walls outside of the join.</source>
          <target state="translated">斜接长度是从联接的内侧的行墙的交集的外部联接线墙壁的交集的距离。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.MiterLimit">
          <source>The miter length can be large when the angle between two lines is small.</source>
          <target state="translated">当两条线之间的角度较少时，斜接长度可能很大。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.MiterLimit">
          <source>The miter limit is the maximum allowed ratio of miter length to stroke width.</source>
          <target state="translated">斜接限制是描边宽度斜接长度最大允许的比率。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.MiterLimit">
          <source>The default value is 10.0f.</source>
          <target state="translated">默认值为 10.0 f。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.MiterLimit">
          <source>If the miter length of the join of the intersection exceeds the limit of the join, then the join will be beveled to keep it within the limit of the join of the intersection.</source>
          <target state="translated">如果交集联接斜接长度超过联接的限制，然后将倾斜联接以便使其保持在交叉联接的限制内这一问题。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.MiterLimit">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.MiterLimit" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">对不可变的 <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.MiterLimit" /&gt;</ph>（比如由 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 类所返回）设置 <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>Multiplies the transformation matrix for this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> by the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">用指定的 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> 乘以此 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 的变换矩阵。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> object by which to multiply the transformation matrix.</source>
          <target state="translated">用来乘变换矩阵的 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>Multiplies the transformation matrix for this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> by the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">用指定的 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> 乘以此 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 的变换矩阵。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>This method prepends the multiplication matrix specified in the <ph id="ph1">`matrix`</ph> parameter to the transformation matrix for the multiplication operation.</source>
          <target state="translated">此方法将添加前中指定的乘法矩阵<ph id="ph1">`matrix`</ph>乘法运算的转换矩阵的参数。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">下面的代码示例专用于 Windows 窗体，并且它需要<ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>，这是一个参数的<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph>事件处理程序。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>The code performs the following actions:</source>
          <target state="translated">该代码执行下列操作：</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>Draws a line to the screen.</source>
          <target state="translated">绘制一条到屏幕。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>Multiplies the transformation matrix of the pen by the specified matrix.</source>
          <target state="translated">返回指定矩阵的笔变换矩阵的乘积。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>Draws a line with the transformed pen.</source>
          <target state="translated">与转换后的钢笔绘制线条。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by which to multiply the transformation matrix.</source>
          <target state="translated">用来乘变换矩阵的 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The order in which to perform the multiplication operation.</source>
          <target state="translated">执行乘法运算的顺序。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Multiplies the transformation matrix for this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> by the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> in the specified order.</source>
          <target state="translated">按照指定的顺序，用指定的 <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> 乘以此 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 的变换矩阵。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>This method uses the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.MatrixOrder&gt;</ph> enumeration element (either prepend or append) specified by the <ph id="ph2">`order`</ph> parameter to carry out the multiplication operation.</source>
          <target state="translated">此方法使用<ph id="ph1">&lt;xref:System.Drawing.Drawing2D.MatrixOrder&gt;</ph>枚举元素 （在前面添加或追加） 指定的<ph id="ph2">`order`</ph>参数来执行乘法运算。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">下面的代码示例专用于 Windows 窗体，并且它需要<ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>，这是一个参数的<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph>事件处理程序。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The code performs the following actions:</source>
          <target state="translated">该代码执行下列操作：</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a line to the screen.</source>
          <target state="translated">绘制一条到屏幕。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Multiplies the transformation matrix of the pen by the specified matrix.</source>
          <target state="translated">返回指定矩阵的笔变换矩阵的乘积。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a line with the transformed pen.</source>
          <target state="translated">与转换后的钢笔绘制线条。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.PenType">
          <source>Gets the style of lines drawn with this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">获取用此 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 绘制的直线的样式。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.PenType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PenType" /&gt;</ph> enumeration that specifies the style of lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PenType" /&gt;</ph> 枚举，指定用此 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 绘制的直线的样式。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.PenType">
          <source>A <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> can draw solid lines, filled lines, or textured lines, depending on the style specified by a member of the <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.PenType&gt;</ph> enumeration.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>可以实线、 填充的直线或纹理的直线，具体取决于指定的成员的样式来绘制<ph id="ph2">&lt;xref:System.Drawing.Drawing2D.PenType&gt;</ph>枚举。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.ResetTransform">
          <source>Resets the geometric transformation matrix for this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> to identity.</source>
          <target state="translated">将此 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 的几何变换矩阵重置为单位矩阵。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ResetTransform">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">下面的代码示例专用于 Windows 窗体，并且它需要<ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>，这是一个参数的<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph>事件处理程序。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ResetTransform">
          <source>The code performs the following actions:</source>
          <target state="translated">该代码执行下列操作：</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ResetTransform">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ResetTransform">
          <source>Sets the transformation matrix of the pen to scale 2 times in the x-axis direction.</source>
          <target state="translated">设置 x 轴方向缩放 2 倍的钢笔的转换矩阵。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ResetTransform">
          <source>Draws a line to the screen.</source>
          <target state="translated">绘制一条到屏幕。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ResetTransform">
          <source>Resets the transformation matrix to identity.</source>
          <target state="translated">将变换矩阵重置为标识。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ResetTransform">
          <source>Draws a second line to the screen.</source>
          <target state="translated">向屏幕绘制第二行。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>Rotates the local geometric transformation by the specified angle.</source>
          <target state="translated">将局部几何转换旋转指定角度。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>This method prepends the rotation to the transformation.</source>
          <target state="translated">此方法将旋转添加到转换前。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>The angle of rotation.</source>
          <target state="translated">旋转角度。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>Rotates the local geometric transformation by the specified angle.</source>
          <target state="translated">将局部几何转换旋转指定角度。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>This method prepends the rotation to the transformation.</source>
          <target state="translated">此方法将旋转添加到转换前。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>Because the shape of a pen is circular, a rotation does not have any visible effect unless the pen is scaled in the x- or y-axis direction.</source>
          <target state="translated">由于钢笔的形状是循环，旋转不具有任何明显的效果，除非在 x 轴或 y 轴方向缩放钢笔。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">下面的代码示例专用于 Windows 窗体，并且它需要<ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>，这是一个参数的<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph>事件处理程序。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">该代码执行下列操作：</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>Draws a rectangle using the pen.</source>
          <target state="translated">绘制矩形使用钢笔。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>Scales the pen by 2 times in the x-axis direction.</source>
          <target state="translated">钢笔沿 x 轴方向的 2 倍缩放。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>Rotates the pen 90 degrees clockwise.</source>
          <target state="translated">将触笔旋转顺时针旋转 90 度。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>Draws a second rectangle to demonstrate the difference.</source>
          <target state="translated">绘制要显示的差异的第二个矩形。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The angle of rotation.</source>
          <target state="translated">旋转角度。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph> that specifies whether to append or prepend the rotation matrix.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph>，它指定是在后面追加旋转矩阵还是在前面添加旋转矩阵。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Rotates the local geometric transformation by the specified angle in the specified order.</source>
          <target state="translated">以指定顺序将局部几何转换旋转指定角度。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Because the shape of a pen is circular, a rotation does not have any visible effect unless the pen is scaled in the x- or y-axis direction.</source>
          <target state="translated">由于钢笔的形状是循环，旋转不具有任何明显的效果，除非在 x 轴或 y 轴方向缩放钢笔。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">下面的代码示例专用于 Windows 窗体，并且它需要<ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>，这是一个参数的<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph>事件处理程序。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The code performs the following actions:</source>
          <target state="translated">该代码执行下列操作：</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Scales the pen by 2 times in the x-axis direction.</source>
          <target state="translated">钢笔沿 x 轴方向的 2 倍缩放。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a rectangle using the pen.</source>
          <target state="translated">绘制矩形使用钢笔。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Rotates the pen 90 degrees clockwise.</source>
          <target state="translated">将触笔旋转顺时针旋转 90 度。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a second rectangle to demonstrate the difference.</source>
          <target state="translated">绘制要显示的差异的第二个矩形。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>Scales the local geometric transformation by the specified factors.</source>
          <target state="translated">按指定因子缩放局部几何转换。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>This method prepends the scaling matrix to the transformation.</source>
          <target state="translated">此方法将缩放矩阵添加到转换前。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>The factor by which to scale the transformation in the x-axis direction.</source>
          <target state="translated">沿 x 轴方向缩放转换的因子。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>The factor by which to scale the transformation in the y-axis direction.</source>
          <target state="translated">沿 y 轴方向缩放转换的因子。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>Scales the local geometric transformation by the specified factors.</source>
          <target state="translated">按指定因子缩放局部几何转换。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>This method prepends the scaling matrix to the transformation.</source>
          <target state="translated">此方法将缩放矩阵添加到转换前。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">下面的代码示例专用于 Windows 窗体，并且它需要<ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>，这是一个参数的<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph>事件处理程序。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">该代码执行下列操作：</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>Draws a rectangle using the pen.</source>
          <target state="translated">绘制矩形使用钢笔。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>Scales the pen by 2 times in the x-axis direction.</source>
          <target state="translated">钢笔沿 x 轴方向的 2 倍缩放。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>Draws a second rectangle to demonstrate the difference.</source>
          <target state="translated">绘制要显示的差异的第二个矩形。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The factor by which to scale the transformation in the x-axis direction.</source>
          <target state="translated">沿 x 轴方向缩放转换的因子。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The factor by which to scale the transformation in the y-axis direction.</source>
          <target state="translated">沿 y 轴方向缩放转换的因子。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph> that specifies whether to append or prepend the scaling matrix.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph>，指定是在后面追加缩放矩阵还是在前面添加缩放矩阵。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Scales the local geometric transformation by the specified factors in the specified order.</source>
          <target state="translated">将局部几何转换以指定顺序缩放指定因子。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">下面的代码示例专用于 Windows 窗体，并且它需要<ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>，这是一个参数的<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph>事件处理程序。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The code performs the following actions:</source>
          <target state="translated">该代码执行下列操作：</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">创建一个 <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a rectangle using the pen.</source>
          <target state="translated">绘制矩形使用钢笔。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Scales the pen by 2 times in the x-axis direction.</source>
          <target state="translated">钢笔沿 x 轴方向的 2 倍缩放。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a second rectangle to demonstrate the difference.</source>
          <target state="translated">绘制要显示的差异的第二个矩形。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> that represents the cap style to use at the beginning of lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph>，表示要在通过此 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 绘制的直线起点使用的线帽样式。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> that represents the cap style to use at the end of lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph>，表示要在通过此 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 绘制的直线终点使用的线帽样式。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> that represents the cap style to use at the beginning or end of dashed lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph>，表示要在通过此 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 绘制的虚线起点或终点使用的线帽样式。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)">
          <source>Sets the values that determine the style of cap used to end lines drawn by this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">设置用于确定线帽样式的值，线帽用于结束通过此 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 绘制的直线。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">下面的代码示例专用于 Windows 窗体，并且它需要<ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>，这是一个参数的<ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph>事件处理程序。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)">
          <source>The code creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> and sets it to draw arrow anchor caps at the beginning of lines:</source>
          <target state="translated">该代码创建<ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>并将其绘制箭头锚定帽行的开头设置：</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.StartCap">
          <source>Gets or sets the cap style used at the beginning of lines drawn with this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">获取或设置在通过此 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 绘制的直线起点使用的线帽样式。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.StartCap">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> values that represents the cap style used at the beginning of lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> 值之一，表示在通过此 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 绘制的直线起点使用的线帽样式。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.StartCap">
          <source>The following code example demonstrates the effects of setting the <ph id="ph1">&lt;xref:System.Drawing.Pen.StartCap%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Pen.EndCap%2A&gt;</ph> properties on a <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">下面的代码示例演示如何设置的效果<ph id="ph1">&lt;xref:System.Drawing.Pen.StartCap%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Drawing.Pen.EndCap%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.StartCap">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">本示例旨在与 Windows 窗体一起使用。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.StartCap">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowStartAndEndCaps`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">将代码粘贴到窗体并调用<ph id="ph1">`ShowStartAndEndCaps`</ph>方法时处理该窗体的<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph>事件，并传递<ph id="ph3">`e`</ph>作为<ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.StartCap">
          <source>The specified value is not a member of <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph>.</source>
          <target state="translated">指定值不是 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> 的成员。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.StartCap">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.StartCap" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">对不可变的 <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.StartCap" /&gt;</ph>（比如由 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 类所返回）设置 <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Transform">
          <source>Gets or sets a copy of the geometric transformation for this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">获取或设置此 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 的几何变换的副本。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Transform">
          <source>A copy of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that represents the geometric transformation for this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> 副本，表示此 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 的几何变换。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Transform">
          <source>This property defines an elliptical shape for the pen tip.</source>
          <target state="translated">此属性定义笔尖椭圆形状。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Transform">
          <source>This ellipse is obtained from the default circular shape by applying the transformation matrix.</source>
          <target state="translated">此椭圆来自通过应用转换矩阵的默认圆形形状。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Transform">
          <source>Note that the translation portion of the matrix is ignored.</source>
          <target state="translated">请注意，矩阵的平移部分将被忽略。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Transform">
          <source>Because the matrix returned and by the <ph id="ph1">&lt;xref:System.Drawing.Pen.Transform%2A&gt;</ph> property is a copy of the pen's geometric transform, you should dispose of the matrix when you no longer need it.</source>
          <target state="translated">因为返回的矩阵和通过<ph id="ph1">&lt;xref:System.Drawing.Pen.Transform%2A&gt;</ph>属性为钢笔的几何变换的副本，当你不再需要它时，应释放的矩阵。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Transform">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Transform" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">对不可变的 <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Transform" /&gt;</ph>（比如由 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 类所返回）设置 <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> 属性。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>Translates the local geometric transformation by the specified dimensions.</source>
          <target state="translated">将局部几何转换平移指定尺寸。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>This method prepends the translation to the transformation.</source>
          <target state="translated">此方法将平移添加到转换前。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single)">
          <source>The value of the translation in x.</source>
          <target state="translated">X 方向的转换值。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single)">
          <source>The value of the translation in y.</source>
          <target state="translated">Y 方向的转换值。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single)">
          <source>Translates the local geometric transformation by the specified dimensions.</source>
          <target state="translated">将局部几何转换平移指定尺寸。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single)">
          <source>This method prepends the translation to the transformation.</source>
          <target state="translated">此方法将平移添加到转换前。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The value of the translation in x.</source>
          <target state="translated">X 方向的转换值。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The value of the translation in y.</source>
          <target state="translated">Y 方向的转换值。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The order (prepend or append) in which to apply the translation.</source>
          <target state="translated">应用转换的顺序（在前面添加或在后面追加）。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Translates the local geometric transformation by the specified dimensions in the specified order.</source>
          <target state="translated">按指定的顺序将局部几何转换平移指定的尺寸。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Width">
          <source>Gets or sets the width of this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, in units of the <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> object used for drawing.</source>
          <target state="translated">获取或设置此 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 的宽度，以用于绘图的 <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> 对象为单位。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Width">
          <source>The width of this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">此 <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 的宽度。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Width">
          <source>You can access the unit of measure of the <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object using its <ph id="ph2">&lt;xref:System.Drawing.Graphics.PageUnit%2A&gt;</ph> property.</source>
          <target state="translated">你可以访问的度量单位<ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph>对象使用其<ph id="ph2">&lt;xref:System.Drawing.Graphics.PageUnit%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Width">
          <source>The unit of measure is typically pixels.</source>
          <target state="translated">通常单位是度量的像素。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Width">
          <source>A <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> of 0 will result in the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> drawing as if the <ph id="ph3">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> were 1.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph>为 0 将导致<ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph>绘制就像<ph id="ph3">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph>为 1。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Width">
          <source>The following code example demonstrates the effects of setting the <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph> properties on a <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">下面的代码示例演示如何设置的效果<ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Width">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">本示例旨在与 Windows 窗体一起使用。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Width">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowLineJoin`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">将代码粘贴到窗体并调用<ph id="ph1">`ShowLineJoin`</ph>方法时处理该窗体的<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph>事件，并传递<ph id="ph3">`e`</ph>作为<ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Width">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Width" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">对不可变的 <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Width" /&gt;</ph>（比如由 <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> 类所返回）设置 <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> 属性。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>