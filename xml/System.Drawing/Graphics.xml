<Type Name="Graphics" FullName="System.Drawing.Graphics">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="81630206751234c2b84b3c64d955c647613ce6ff" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36492694" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Graphics : MarshalByRefObject, IDisposable, System.Drawing.IDeviceContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Graphics extends System.MarshalByRefObject implements class System.Drawing.IDeviceContext, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Graphics" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Graphics&#xA;Inherits MarshalByRefObject&#xA;Implements IDeviceContext, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Graphics sealed : MarshalByRefObject, IDisposable, System::Drawing::IDeviceContext" />
  <TypeSignature Language="F#" Value="type Graphics = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable&#xA;    interface IDeviceContext" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Drawing.IDeviceContext</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="19ce0-101">封装一个 GDI+ 绘图图面。</span>
      <span class="sxs-lookup">
        <span data-stu-id="19ce0-101">Encapsulates a GDI+ drawing surface.</span>
      </span>
      <span data-ttu-id="19ce0-102">此类不能被继承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="19ce0-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-103"><xref:System.Drawing.Graphics>类提供的对象绘制到显示设备的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-103">The <xref:System.Drawing.Graphics> class provides methods for drawing objects to the display device.</span></span> <span data-ttu-id="19ce0-104">A<xref:System.Drawing.Graphics>与特定设备上下文相关联。</span><span class="sxs-lookup"><span data-stu-id="19ce0-104">A <xref:System.Drawing.Graphics> is associated with a specific device context.</span></span>  
  
 <span data-ttu-id="19ce0-105">你可以获取<xref:System.Drawing.Graphics>对象通过调用<xref:System.Windows.Forms.Control.CreateGraphics%2A?displayProperty=nameWithType>对继承的对象的方法<xref:System.Windows.Forms.Control?displayProperty=nameWithType>，或通过处理控件的<xref:System.Windows.Forms.Control.Paint?displayProperty=nameWithType>事件以及如何访问<xref:System.Windows.Forms.PaintEventArgs.Graphics%2A>属性<xref:System.Windows.Forms.PaintEventArgs?displayProperty=nameWithType>类。</span><span class="sxs-lookup"><span data-stu-id="19ce0-105">You can obtain a <xref:System.Drawing.Graphics> object by calling the <xref:System.Windows.Forms.Control.CreateGraphics%2A?displayProperty=nameWithType> method on an object that inherits from <xref:System.Windows.Forms.Control?displayProperty=nameWithType>, or by handling a control's <xref:System.Windows.Forms.Control.Paint?displayProperty=nameWithType> event and accessing the <xref:System.Windows.Forms.PaintEventArgs.Graphics%2A> property of the <xref:System.Windows.Forms.PaintEventArgs?displayProperty=nameWithType> class.</span></span> <span data-ttu-id="19ce0-106">你还可以创建<xref:System.Drawing.Graphics>从使用映像的对象<xref:System.Drawing.Graphics.FromImage%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-106">You can also create a <xref:System.Drawing.Graphics> object from an image by using the <xref:System.Drawing.Graphics.FromImage%2A> method.</span></span> <span data-ttu-id="19ce0-107">有关创建<xref:System.Drawing.Graphics>对象，请参阅[如何： 创建图形对象的绘图](~/docs/framework/winforms/advanced/how-to-create-graphics-objects-for-drawing.md)。</span><span class="sxs-lookup"><span data-stu-id="19ce0-107">For more information about creating a <xref:System.Drawing.Graphics> object, see [How to: Create Graphics Objects for Drawing](~/docs/framework/winforms/advanced/how-to-create-graphics-objects-for-drawing.md).</span></span>  
  
 <span data-ttu-id="19ce0-108">你可以通过使用绘制许多不同的形状和线条<xref:System.Drawing.Graphics>对象。</span><span class="sxs-lookup"><span data-stu-id="19ce0-108">You can draw many different shapes and lines by using a <xref:System.Drawing.Graphics> object.</span></span> <span data-ttu-id="19ce0-109">有关如何绘制线条和形状的详细信息，请参阅特定于`Draw` *GraphicalElement*线条或你想要绘制的形状的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-109">For more information about how to draw lines and shapes, see the specific `Draw`*GraphicalElement* method for the line or shape you want to draw.</span></span> <span data-ttu-id="19ce0-110">这些方法包括<xref:System.Drawing.Graphics.DrawLine%2A>， <xref:System.Drawing.Graphics.DrawArc%2A>， <xref:System.Drawing.Graphics.DrawClosedCurve%2A>， <xref:System.Drawing.Graphics.DrawPolygon%2A>，和<xref:System.Drawing.Graphics.DrawRectangle%2A>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-110">These methods include <xref:System.Drawing.Graphics.DrawLine%2A>, <xref:System.Drawing.Graphics.DrawArc%2A>, <xref:System.Drawing.Graphics.DrawClosedCurve%2A>, <xref:System.Drawing.Graphics.DrawPolygon%2A>, and <xref:System.Drawing.Graphics.DrawRectangle%2A>.</span></span> <span data-ttu-id="19ce0-111">有关如何绘制线条和形状的详细信息，请参阅[使用钢笔绘制线条和形状到](~/docs/framework/winforms/advanced/using-a-pen-to-draw-lines-and-shapes.md)和[使用画笔填充形状到](~/docs/framework/winforms/advanced/using-a-brush-to-fill-shapes.md)。</span><span class="sxs-lookup"><span data-stu-id="19ce0-111">For more information about how to draw lines and shapes, see [Using a Pen to Draw Lines and Shapes](~/docs/framework/winforms/advanced/using-a-pen-to-draw-lines-and-shapes.md) and [Using a Brush to Fill Shapes](~/docs/framework/winforms/advanced/using-a-brush-to-fill-shapes.md).</span></span>  
  
 <span data-ttu-id="19ce0-112">你还可以通过使用绘制的图像和图标<xref:System.Drawing.Graphics.DrawImage%2A>和<xref:System.Drawing.Graphics.DrawIcon%2A>方法，分别。</span><span class="sxs-lookup"><span data-stu-id="19ce0-112">You can also draw images and icons by using the <xref:System.Drawing.Graphics.DrawImage%2A> and <xref:System.Drawing.Graphics.DrawIcon%2A> methods, respectively.</span></span> <span data-ttu-id="19ce0-113">执行颜色数据位块传输从屏幕到绘图图面的<xref:System.Drawing.Graphics>对象，请参阅<xref:System.Drawing.Graphics.CopyFromScreen%2A>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-113">To perform a bit-block transfer of color data from the screen to the drawing surface of the <xref:System.Drawing.Graphics> object, see <xref:System.Drawing.Graphics.CopyFromScreen%2A>.</span></span> <span data-ttu-id="19ce0-114">有关如何绘制图像与<xref:System.Drawing.Graphics>对象，请参阅[使用图像、 位图、 图标和图元文件](~/docs/framework/winforms/advanced/working-with-images-bitmaps-icons-and-metafiles.md)。</span><span class="sxs-lookup"><span data-stu-id="19ce0-114">For more information about how to draw images with a <xref:System.Drawing.Graphics> object, see [Working with Images, Bitmaps, Icons, and Metafiles](~/docs/framework/winforms/advanced/working-with-images-bitmaps-icons-and-metafiles.md).</span></span>  
  
 <span data-ttu-id="19ce0-115">此外，可以操作由使用的坐标系统<xref:System.Drawing.Graphics>对象。</span><span class="sxs-lookup"><span data-stu-id="19ce0-115">In addition, you can manipulate the coordinate system used by the <xref:System.Drawing.Graphics> object.</span></span> <span data-ttu-id="19ce0-116">坐标系统以及如何对其进行操作的详细信息，请参阅[坐标系和坐标转换](~/docs/framework/winforms/advanced/coordinate-systems-and-transformations.md)。</span><span class="sxs-lookup"><span data-stu-id="19ce0-116">For more information on the coordinate system and how to manipulate it, see [Coordinate Systems and Transformations](~/docs/framework/winforms/advanced/coordinate-systems-and-transformations.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-117">下面的代码示例用于使用 Windows 窗体，因此需要<xref:System.Windows.Forms.PaintEventArgs>对象。</span><span class="sxs-lookup"><span data-stu-id="19ce0-117">The following code example is designed for use with Windows Forms and requires a <xref:System.Windows.Forms.PaintEventArgs> object.</span></span> <span data-ttu-id="19ce0-118"><xref:System.Windows.Forms.PaintEventArgs>对象命名为`e`和的参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-118">The <xref:System.Windows.Forms.PaintEventArgs> object is named `e` and is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-119">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-119">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-120">从 JPEG 文件创建的映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-120">Creates an image from a JPEG file.</span></span> <span data-ttu-id="19ce0-121">该文件被命名为 sampimag.jpg 位于同并且位于该示例的文件夹中。</span><span class="sxs-lookup"><span data-stu-id="19ce0-121">The file is named SampImag.jpg and is located in the folder of the example.</span></span>  
  
-   <span data-ttu-id="19ce0-122">创建在其中绘制图像的左上角的点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-122">Creates a point at which to draw the upper-left corner of the image.</span></span>  
  
-   <span data-ttu-id="19ce0-123">将不成比例的图像绘制到屏幕，通过使用<xref:System.Drawing.Graphics>对象。</span><span class="sxs-lookup"><span data-stu-id="19ce0-123">Draws the unscaled image to the screen by using a <xref:System.Drawing.Graphics> object.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#40](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#40)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#40)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#40)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddMetafileComment">
      <MemberSignature Language="C#" Value="public void AddMetafileComment (byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMetafileComment(unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.AddMetafileComment(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMetafileComment (data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMetafileComment(cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.AddMetafileComment : byte[] -&gt; unit" Usage="graphics.AddMetafileComment data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="19ce0-124">包含注释的字节的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-124">Array of bytes that contains the comment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-125">向当前 <see cref="T:System.Drawing.Imaging.Metafile" /> 添加注释。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-125">Adds a comment to the current <see cref="T:System.Drawing.Imaging.Metafile" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-126">此方法是仅当此有效<xref:System.Drawing.Graphics>与关联<xref:System.Drawing.Imaging.Metafile>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-126">This method is valid only if this <xref:System.Drawing.Graphics> is associated with a <xref:System.Drawing.Imaging.Metafile>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-127">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序，以及`thisForm`、<xref:System.Windows.Forms.Form>示例。</span><span class="sxs-lookup"><span data-stu-id="19ce0-127">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler, as well as `thisForm`, the <xref:System.Windows.Forms.Form> for the example.</span></span> <span data-ttu-id="19ce0-128">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-128">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-129">创建一个临时<xref:System.Drawing.Graphics>用于创建的图元文件和获取`hdc`，其设备上下文的句柄。</span><span class="sxs-lookup"><span data-stu-id="19ce0-129">Creates a temporary <xref:System.Drawing.Graphics> for creating the metafile and gets an `hdc`, a handle to its device context.</span></span>  
  
-   <span data-ttu-id="19ce0-130">创建新的图元文件使用`hdc`。</span><span class="sxs-lookup"><span data-stu-id="19ce0-130">Creates a new metafile using the `hdc`.</span></span>  
  
-   <span data-ttu-id="19ce0-131">创建<xref:System.Drawing.Graphics>用于显示图元文件从<xref:System.Drawing.Imaging.Metafile>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-131">Creates a <xref:System.Drawing.Graphics> for display of the metafile from the <xref:System.Drawing.Imaging.Metafile>.</span></span>  
  
-   <span data-ttu-id="19ce0-132">向图元文件绘制一个矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-132">Draws a rectangle to the metafile.</span></span>  
  
-   <span data-ttu-id="19ce0-133">将注释添加到图元文件。</span><span class="sxs-lookup"><span data-stu-id="19ce0-133">Adds a comment to the metafile.</span></span>  
  
-   <span data-ttu-id="19ce0-134">释放<xref:System.Drawing.Graphics>的图元文件，以关闭图元文件。</span><span class="sxs-lookup"><span data-stu-id="19ce0-134">Disposes the <xref:System.Drawing.Graphics> for the metafile-which closes the metafile.</span></span>  
  
-   <span data-ttu-id="19ce0-135">释放图元文件。</span><span class="sxs-lookup"><span data-stu-id="19ce0-135">Disposes the metafile.</span></span>  
  
-   <span data-ttu-id="19ce0-136">释放该临时`hdc`。</span><span class="sxs-lookup"><span data-stu-id="19ce0-136">Releases the temporary `hdc`.</span></span>  
  
-   <span data-ttu-id="19ce0-137">释放该临时<xref:System.Drawing.Graphics>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-137">Disposes the temporary <xref:System.Drawing.Graphics>.</span></span>  
  
-   <span data-ttu-id="19ce0-138">从以前创建的文件中创建第二个图元文件。</span><span class="sxs-lookup"><span data-stu-id="19ce0-138">Creates a second metafile from the previously created file.</span></span>  
  
-   <span data-ttu-id="19ce0-139">向屏幕绘制图元文件。</span><span class="sxs-lookup"><span data-stu-id="19ce0-139">Draws the metafile to the screen.</span></span>  
  
-   <span data-ttu-id="19ce0-140">释放图元文件。</span><span class="sxs-lookup"><span data-stu-id="19ce0-140">Disposes the metafile.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginContainer">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-141">保存具有此 <see cref="T:System.Drawing.Graphics" /> 的当前状态的图形容器，然后打开并使用新的图形容器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-141">Saves a graphics container with the current state of this <see cref="T:System.Drawing.Graphics" /> and opens and uses a new graphics container.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginContainer">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.GraphicsContainer BeginContainer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Drawing2D.GraphicsContainer BeginContainer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.BeginContainer" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginContainer () As GraphicsContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Drawing2D::GraphicsContainer ^ BeginContainer();" />
      <MemberSignature Language="F#" Value="member this.BeginContainer : unit -&gt; System.Drawing.Drawing2D.GraphicsContainer" Usage="graphics.BeginContainer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.GraphicsContainer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-142">保存具有此 <see cref="T:System.Drawing.Graphics" /> 的当前状态的图形容器，然后打开并使用新的图形容器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-142">Saves a graphics container with the current state of this <see cref="T:System.Drawing.Graphics" /> and opens and uses a new graphics container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19ce0-143">此方法返回一个 <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" />，该对象表示该方法调用运行时此 <see cref="T:System.Drawing.Graphics" /> 的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-143">This method returns a <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" /> that represents the state of this <see cref="T:System.Drawing.Graphics" /> at the time of the method call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-144">使用此方法与<xref:System.Drawing.Graphics.EndContainer%2A>方法来创建嵌套的 graphics 容器。</span><span class="sxs-lookup"><span data-stu-id="19ce0-144">Use this method with the <xref:System.Drawing.Graphics.EndContainer%2A> method to create nested graphics containers.</span></span> <span data-ttu-id="19ce0-145">图形容器保留图形状态，例如转换、 剪辑区域和呈现属性。</span><span class="sxs-lookup"><span data-stu-id="19ce0-145">Graphics containers retain graphics state, such as transformation, clipping region, and rendering properties.</span></span>  
  
 <span data-ttu-id="19ce0-146">当调用<xref:System.Drawing.Graphics.BeginContainer%2A>方法<xref:System.Drawing.Graphics>，保存的状态信息块<xref:System.Drawing.Graphics>放置在堆栈上。</span><span class="sxs-lookup"><span data-stu-id="19ce0-146">When you call the <xref:System.Drawing.Graphics.BeginContainer%2A> method of a <xref:System.Drawing.Graphics>, an information block that holds the state of the <xref:System.Drawing.Graphics> is put on a stack.</span></span> <span data-ttu-id="19ce0-147"><xref:System.Drawing.Graphics.BeginContainer%2A>方法返回<xref:System.Drawing.Drawing2D.GraphicsContainer>标识该信息块。</span><span class="sxs-lookup"><span data-stu-id="19ce0-147">The <xref:System.Drawing.Graphics.BeginContainer%2A> method returns a <xref:System.Drawing.Drawing2D.GraphicsContainer> that identifies that information block.</span></span> <span data-ttu-id="19ce0-148">当你标识对象传递给<xref:System.Drawing.Graphics.EndContainer%2A>方法，该信息块从堆栈中移除，并用于还原<xref:System.Drawing.Graphics>到它所处的时间中的状态<xref:System.Drawing.Graphics.BeginContainer%2A>方法调用。</span><span class="sxs-lookup"><span data-stu-id="19ce0-148">When you pass the identifying object to the <xref:System.Drawing.Graphics.EndContainer%2A> method, the information block is removed from the stack and is used to restore the <xref:System.Drawing.Graphics> to the state it was in at the time of the <xref:System.Drawing.Graphics.BeginContainer%2A> method call.</span></span>  
  
 <span data-ttu-id="19ce0-149">可以嵌套容器;也就是说，可以调用<xref:System.Drawing.Graphics.BeginContainer%2A>方法调用之前多次<xref:System.Drawing.Graphics.EndContainer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-149">Containers can be nested; that is, you can call the <xref:System.Drawing.Graphics.BeginContainer%2A> method several times before you call the <xref:System.Drawing.Graphics.EndContainer%2A> method.</span></span> <span data-ttu-id="19ce0-150">每次调用<xref:System.Drawing.Graphics.BeginContainer%2A>方法，信息块放在堆栈，并且您收到<xref:System.Drawing.Drawing2D.GraphicsContainer>信息块。</span><span class="sxs-lookup"><span data-stu-id="19ce0-150">Each time you call the <xref:System.Drawing.Graphics.BeginContainer%2A> method, an information block is put on the stack, and you receive a <xref:System.Drawing.Drawing2D.GraphicsContainer> for the information block.</span></span> <span data-ttu-id="19ce0-151">传递时，这些对象附加到之一<xref:System.Drawing.Graphics.EndContainer%2A>方法，<xref:System.Drawing.Graphics>返回到它所处的时间中的状态<xref:System.Drawing.Graphics.BeginContainer%2A>方法调用返回了该特定<xref:System.Drawing.Drawing2D.GraphicsContainer>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-151">When you pass one of those objects to the <xref:System.Drawing.Graphics.EndContainer%2A> method, the <xref:System.Drawing.Graphics> is returned to the state it was in at the time of the <xref:System.Drawing.Graphics.BeginContainer%2A> method call that returned that particular <xref:System.Drawing.Drawing2D.GraphicsContainer>.</span></span> <span data-ttu-id="19ce0-152">信息块将位于堆栈上的<xref:System.Drawing.Graphics.BeginContainer%2A>从堆栈中，删除方法调用和所有信息块后，该堆栈上都放置<xref:System.Drawing.Graphics.BeginContainer%2A>方法调用也将被删除。</span><span class="sxs-lookup"><span data-stu-id="19ce0-152">The information block placed on the stack by that <xref:System.Drawing.Graphics.BeginContainer%2A> method call is removed from the stack, and all information blocks placed on that stack after that <xref:System.Drawing.Graphics.BeginContainer%2A> method call are also removed.</span></span>  
  
 <span data-ttu-id="19ce0-153">调用<xref:System.Drawing.Graphics.Save%2A>方法相同为对调用堆栈上的位置信息块<xref:System.Drawing.Graphics.BeginContainer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-153">Calls to the <xref:System.Drawing.Graphics.Save%2A> method place information blocks on the same stack as calls to the <xref:System.Drawing.Graphics.BeginContainer%2A> method.</span></span> <span data-ttu-id="19ce0-154">就像<xref:System.Drawing.Graphics.EndContainer%2A>方法调用配合<xref:System.Drawing.Graphics.BeginContainer%2A>方法调用<xref:System.Drawing.Graphics.Restore%2A>方法调用配合<xref:System.Drawing.Graphics.Save%2A>方法调用。</span><span class="sxs-lookup"><span data-stu-id="19ce0-154">Just as an <xref:System.Drawing.Graphics.EndContainer%2A> method call is paired with a <xref:System.Drawing.Graphics.BeginContainer%2A> method call, a <xref:System.Drawing.Graphics.Restore%2A> method call is paired with a <xref:System.Drawing.Graphics.Save%2A> method call.</span></span>  
  
 <span data-ttu-id="19ce0-155">当调用<xref:System.Drawing.Graphics.EndContainer%2A>方法，在堆栈上放置的所有信息块 (通过<xref:System.Drawing.Graphics.Save%2A>方法或通过<xref:System.Drawing.Graphics.BeginContainer%2A>方法) 在相应调用<xref:System.Drawing.Graphics.BeginContainer%2A>从堆栈中移除方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-155">When you call the <xref:System.Drawing.Graphics.EndContainer%2A> method, all information blocks placed on the stack (by the <xref:System.Drawing.Graphics.Save%2A> method or by the <xref:System.Drawing.Graphics.BeginContainer%2A> method) after the corresponding call to the <xref:System.Drawing.Graphics.BeginContainer%2A> method are removed from the stack.</span></span> <span data-ttu-id="19ce0-156">同样，当调用<xref:System.Drawing.Graphics.Restore%2A>方法，在堆栈上放置的所有信息块 (通过<xref:System.Drawing.Graphics.Save%2A>方法或通过<xref:System.Drawing.Graphics.BeginContainer%2A>方法) 在相应调用<xref:System.Drawing.Graphics.Save%2A>从堆栈中移除方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-156">Likewise, when you call the <xref:System.Drawing.Graphics.Restore%2A> method, all information blocks placed on the stack (by the <xref:System.Drawing.Graphics.Save%2A> method or by the <xref:System.Drawing.Graphics.BeginContainer%2A> method) after the corresponding call to the <xref:System.Drawing.Graphics.Save%2A> method are removed from the stack.</span></span>  
  
 <span data-ttu-id="19ce0-157">通过建立的图形状态<xref:System.Drawing.Graphics.BeginContainer%2A>方法包括呈现质量的默认图形状态; 当调用方法存在的任何呈现质量状态更改将重置为默认值。</span><span class="sxs-lookup"><span data-stu-id="19ce0-157">The graphics state established by the <xref:System.Drawing.Graphics.BeginContainer%2A> method includes the rendering qualities of the default graphics state; any rendering-quality state changes existing when the method is called are reset to the default values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-158">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-158">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-159">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-159">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-160">打开新的图形容器和保存旧的容器。</span><span class="sxs-lookup"><span data-stu-id="19ce0-160">Opens a new graphics container and saves the old container.</span></span>  
  
-   <span data-ttu-id="19ce0-161">将容器中的通用坐标。</span><span class="sxs-lookup"><span data-stu-id="19ce0-161">Translates the world coordinates in the container.</span></span>  
  
-   <span data-ttu-id="19ce0-162">在填充红色矩形 (转换的坐标) 新的容器。</span><span class="sxs-lookup"><span data-stu-id="19ce0-162">Fills a red rectangle in the (translated coordinates of the) new container.</span></span>  
  
-   <span data-ttu-id="19ce0-163">关闭新的容器，并将还原保存的容器。</span><span class="sxs-lookup"><span data-stu-id="19ce0-163">Closes the new container and restores the saved container.</span></span>  
  
-   <span data-ttu-id="19ce0-164">填充的绿色矩形 （未转换的坐标中） 的已保存的容器。</span><span class="sxs-lookup"><span data-stu-id="19ce0-164">Fills a green rectangle (to the untranslated coordinates) of the saved container.</span></span>  
  
 <span data-ttu-id="19ce0-165">结果是覆盖相同大小的红色矩形之上一个绿色矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-165">The result is a green rectangle that overlies a red rectangle of the same size.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginContainer">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.GraphicsContainer BeginContainer (System.Drawing.Rectangle dstrect, System.Drawing.Rectangle srcrect, System.Drawing.GraphicsUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Drawing2D.GraphicsContainer BeginContainer(valuetype System.Drawing.Rectangle dstrect, valuetype System.Drawing.Rectangle srcrect, valuetype System.Drawing.GraphicsUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginContainer (dstrect As Rectangle, srcrect As Rectangle, unit As GraphicsUnit) As GraphicsContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Drawing2D::GraphicsContainer ^ BeginContainer(System::Drawing::Rectangle dstrect, System::Drawing::Rectangle srcrect, System::Drawing::GraphicsUnit unit);" />
      <MemberSignature Language="F#" Value="member this.BeginContainer : System.Drawing.Rectangle * System.Drawing.Rectangle * System.Drawing.GraphicsUnit -&gt; System.Drawing.Drawing2D.GraphicsContainer" Usage="graphics.BeginContainer (dstrect, srcrect, unit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.GraphicsContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dstrect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcrect" Type="System.Drawing.Rectangle" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="dstrect">
          <span data-ttu-id="19ce0-166">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它与 <c>srcrect</c> 参数一起为容器指定缩放变换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-166">
              <see cref="T:System.Drawing.Rectangle" /> structure that, together with the <c>srcrect</c> parameter, specifies a scale transformation for the container.</span>
          </span>
        </param>
        <param name="srcrect">
          <span data-ttu-id="19ce0-167">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它与 <c>dstrect</c> 参数一起为容器指定缩放变换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-167">
              <see cref="T:System.Drawing.Rectangle" /> structure that, together with the <c>dstrect</c> parameter, specifies a scale transformation for the container.</span>
          </span>
        </param>
        <param name="unit">
          <span data-ttu-id="19ce0-168">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定容器的度量单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-168">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure for the container.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-169">保存具有此 <see cref="T:System.Drawing.Graphics" /> 的当前状态的图形容器，然后打开并使用具有指定缩放变形的新图形容器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-169">Saves a graphics container with the current state of this <see cref="T:System.Drawing.Graphics" /> and opens and uses a new graphics container with the specified scale transformation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19ce0-170">此方法返回一个 <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" />，该对象表示该方法调用运行时此 <see cref="T:System.Drawing.Graphics" /> 的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-170">This method returns a <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" /> that represents the state of this <see cref="T:System.Drawing.Graphics" /> at the time of the method call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-171">使用此方法与<xref:System.Drawing.Graphics.EndContainer%2A>方法来创建嵌套的 graphics 容器。</span><span class="sxs-lookup"><span data-stu-id="19ce0-171">Use this method with the <xref:System.Drawing.Graphics.EndContainer%2A> method to create nested graphics containers.</span></span> <span data-ttu-id="19ce0-172">图形容器保留图形状态，例如转换、 剪辑区域和呈现属性。</span><span class="sxs-lookup"><span data-stu-id="19ce0-172">Graphics containers retain graphics state, such as transformation, clipping region, and rendering properties.</span></span>  
  
 <span data-ttu-id="19ce0-173">当调用<xref:System.Drawing.Graphics.BeginContainer%2A>方法<xref:System.Drawing.Graphics>，保存的状态信息块<xref:System.Drawing.Graphics>放置在堆栈上。</span><span class="sxs-lookup"><span data-stu-id="19ce0-173">When you call the <xref:System.Drawing.Graphics.BeginContainer%2A> method of a <xref:System.Drawing.Graphics>, an information block that holds the state of the <xref:System.Drawing.Graphics> is put on a stack.</span></span> <span data-ttu-id="19ce0-174"><xref:System.Drawing.Graphics.BeginContainer%2A>方法返回<xref:System.Drawing.Drawing2D.GraphicsContainer>标识该信息块。</span><span class="sxs-lookup"><span data-stu-id="19ce0-174">The <xref:System.Drawing.Graphics.BeginContainer%2A> method returns a <xref:System.Drawing.Drawing2D.GraphicsContainer> that identifies that information block.</span></span> <span data-ttu-id="19ce0-175">当你标识对象传递给<xref:System.Drawing.Graphics.EndContainer%2A>方法，该信息块从堆栈中移除，并用于还原<xref:System.Drawing.Graphics>到它所处的时间中的状态<xref:System.Drawing.Graphics.BeginContainer%2A>方法调用。</span><span class="sxs-lookup"><span data-stu-id="19ce0-175">When you pass the identifying object to the <xref:System.Drawing.Graphics.EndContainer%2A> method, the information block is removed from the stack and is used to restore the <xref:System.Drawing.Graphics> to the state it was in at the time of the <xref:System.Drawing.Graphics.BeginContainer%2A> method call.</span></span>  
  
 <span data-ttu-id="19ce0-176">可以嵌套容器;也就是说，可以调用<xref:System.Drawing.Graphics.BeginContainer%2A>方法调用之前多次<xref:System.Drawing.Graphics.EndContainer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-176">Containers can be nested; that is, you can call the <xref:System.Drawing.Graphics.BeginContainer%2A> method several times before you call the <xref:System.Drawing.Graphics.EndContainer%2A> method.</span></span> <span data-ttu-id="19ce0-177">每次调用<xref:System.Drawing.Graphics.BeginContainer%2A>方法，信息块放在堆栈，并且您收到<xref:System.Drawing.Drawing2D.GraphicsContainer>信息块。</span><span class="sxs-lookup"><span data-stu-id="19ce0-177">Each time you call the <xref:System.Drawing.Graphics.BeginContainer%2A> method, an information block is put on the stack, and you receive a <xref:System.Drawing.Drawing2D.GraphicsContainer> for the information block.</span></span> <span data-ttu-id="19ce0-178">传递时，这些对象附加到之一<xref:System.Drawing.Graphics.EndContainer%2A>方法，<xref:System.Drawing.Graphics>返回到它所处的时间中的状态<xref:System.Drawing.Graphics.BeginContainer%2A>方法调用返回了该特定<xref:System.Drawing.Drawing2D.GraphicsContainer>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-178">When you pass one of those objects to the <xref:System.Drawing.Graphics.EndContainer%2A> method, the <xref:System.Drawing.Graphics> is returned to the state it was in at the time of the <xref:System.Drawing.Graphics.BeginContainer%2A> method call that returned that particular <xref:System.Drawing.Drawing2D.GraphicsContainer>.</span></span> <span data-ttu-id="19ce0-179">信息块将位于堆栈上的<xref:System.Drawing.Graphics.BeginContainer%2A>从堆栈中，删除方法调用和所有信息块后，该堆栈上都放置<xref:System.Drawing.Graphics.BeginContainer%2A>方法调用也将被删除。</span><span class="sxs-lookup"><span data-stu-id="19ce0-179">The information block placed on the stack by that <xref:System.Drawing.Graphics.BeginContainer%2A> method call is removed from the stack, and all information blocks placed on that stack after that <xref:System.Drawing.Graphics.BeginContainer%2A> method call are also removed.</span></span>  
  
 <span data-ttu-id="19ce0-180">调用<xref:System.Drawing.Graphics.Save%2A>方法相同为对调用堆栈上的位置信息块<xref:System.Drawing.Graphics.BeginContainer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-180">Calls to the <xref:System.Drawing.Graphics.Save%2A> method place information blocks on the same stack as calls to the <xref:System.Drawing.Graphics.BeginContainer%2A> method.</span></span> <span data-ttu-id="19ce0-181">就像<xref:System.Drawing.Graphics.EndContainer%2A>方法调用配合<xref:System.Drawing.Graphics.BeginContainer%2A>方法调用<xref:System.Drawing.Graphics.Restore%2A>方法调用配合<xref:System.Drawing.Graphics.Save%2A>方法调用。</span><span class="sxs-lookup"><span data-stu-id="19ce0-181">Just as an <xref:System.Drawing.Graphics.EndContainer%2A> method call is paired with a <xref:System.Drawing.Graphics.BeginContainer%2A> method call, a <xref:System.Drawing.Graphics.Restore%2A> method call is paired with a <xref:System.Drawing.Graphics.Save%2A> method call.</span></span>  
  
 <span data-ttu-id="19ce0-182">当调用<xref:System.Drawing.Graphics.EndContainer%2A>方法，在堆栈上放置的所有信息块 (通过<xref:System.Drawing.Graphics.Save%2A>方法或通过<xref:System.Drawing.Graphics.BeginContainer%2A>方法) 在相应调用<xref:System.Drawing.Graphics.BeginContainer%2A>从堆栈中移除方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-182">When you call the <xref:System.Drawing.Graphics.EndContainer%2A> method, all information blocks placed on the stack (by the <xref:System.Drawing.Graphics.Save%2A> method or by the <xref:System.Drawing.Graphics.BeginContainer%2A> method) after the corresponding call to the <xref:System.Drawing.Graphics.BeginContainer%2A> method are removed from the stack.</span></span> <span data-ttu-id="19ce0-183">同样，当调用<xref:System.Drawing.Graphics.Restore%2A>方法，在堆栈上放置的所有信息块 (通过<xref:System.Drawing.Graphics.Save%2A>方法或通过<xref:System.Drawing.Graphics.BeginContainer%2A>方法) 在相应调用<xref:System.Drawing.Graphics.Save%2A>从堆栈中移除方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-183">Likewise, when you call the <xref:System.Drawing.Graphics.Restore%2A> method, all information blocks placed on the stack (by the <xref:System.Drawing.Graphics.Save%2A> method or by the <xref:System.Drawing.Graphics.BeginContainer%2A> method) after the corresponding call to the <xref:System.Drawing.Graphics.Save%2A> method are removed from the stack.</span></span>  
  
 <span data-ttu-id="19ce0-184">此方法指定缩放转换为与新的图形容器`dstrect`和`srcrect`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-184">This method specifies a scale transformation for the new graphics container with the `dstrect` and `srcrect` parameters.</span></span> <span data-ttu-id="19ce0-185">小数位数等于转换，当应用于`srcrect`，导致`dstrect`。</span><span class="sxs-lookup"><span data-stu-id="19ce0-185">The scale is equal to the transformation that, when applied to `srcrect`, results in `dstrect`.</span></span>  
  
 <span data-ttu-id="19ce0-186">通过建立的图形状态<xref:System.Drawing.Graphics.BeginContainer%2A>方法包括呈现质量的默认图形状态; 当调用方法存在的任何呈现质量状态更改将重置为默认值。</span><span class="sxs-lookup"><span data-stu-id="19ce0-186">The graphics state established by the <xref:System.Drawing.Graphics.BeginContainer%2A> method includes the rendering qualities of the default graphics state; any rendering-quality state changes existing when the method is called are reset to the default values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-187">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-187">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-188">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-188">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-189">创建两个矩形来指定缩放转换为新的容器。</span><span class="sxs-lookup"><span data-stu-id="19ce0-189">Creates two rectangles to specify a scale transformation for the new container.</span></span>  
  
-   <span data-ttu-id="19ce0-190">打开新的图形容器和保存旧的容器。</span><span class="sxs-lookup"><span data-stu-id="19ce0-190">Opens the new graphics container and saves the old container.</span></span>  
  
-   <span data-ttu-id="19ce0-191">在填充红色矩形 (缩放坐标系) 新的容器。</span><span class="sxs-lookup"><span data-stu-id="19ce0-191">Fills a red rectangle in the (scaled coordinates of the) new container.</span></span>  
  
-   <span data-ttu-id="19ce0-192">关闭新的容器，并将还原保存的容器。</span><span class="sxs-lookup"><span data-stu-id="19ce0-192">Closes the new container and restores the saved container.</span></span>  
  
-   <span data-ttu-id="19ce0-193">填充的绿色矩形 （无比例区坐标中） 的已保存的容器。</span><span class="sxs-lookup"><span data-stu-id="19ce0-193">Fills a green rectangle (to the unscaled coordinates) of the saved container.</span></span>  
  
 <span data-ttu-id="19ce0-194">结果是覆盖较小的红色矩形之上一个绿色矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-194">The result is a green rectangle that overlies a smaller red rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginContainer">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.GraphicsContainer BeginContainer (System.Drawing.RectangleF dstrect, System.Drawing.RectangleF srcrect, System.Drawing.GraphicsUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Drawing2D.GraphicsContainer BeginContainer(valuetype System.Drawing.RectangleF dstrect, valuetype System.Drawing.RectangleF srcrect, valuetype System.Drawing.GraphicsUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginContainer (dstrect As RectangleF, srcrect As RectangleF, unit As GraphicsUnit) As GraphicsContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Drawing2D::GraphicsContainer ^ BeginContainer(System::Drawing::RectangleF dstrect, System::Drawing::RectangleF srcrect, System::Drawing::GraphicsUnit unit);" />
      <MemberSignature Language="F#" Value="member this.BeginContainer : System.Drawing.RectangleF * System.Drawing.RectangleF * System.Drawing.GraphicsUnit -&gt; System.Drawing.Drawing2D.GraphicsContainer" Usage="graphics.BeginContainer (dstrect, srcrect, unit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.GraphicsContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dstrect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcrect" Type="System.Drawing.RectangleF" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="dstrect">
          <span data-ttu-id="19ce0-195">
            <see cref="T:System.Drawing.RectangleF" /> 结构，它与 <c>srcrect</c> 参数一起为新的图形容器指定缩放变换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-195">
              <see cref="T:System.Drawing.RectangleF" /> structure that, together with the <c>srcrect</c> parameter, specifies a scale transformation for the new graphics container.</span>
          </span>
        </param>
        <param name="srcrect">
          <span data-ttu-id="19ce0-196">
            <see cref="T:System.Drawing.RectangleF" /> 结构，它与 <c>dstrect</c> 参数一起为新的图形容器指定缩放变换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-196">
              <see cref="T:System.Drawing.RectangleF" /> structure that, together with the <c>dstrect</c> parameter, specifies a scale transformation for the new graphics container.</span>
          </span>
        </param>
        <param name="unit">
          <span data-ttu-id="19ce0-197">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定容器的度量单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-197">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure for the container.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-198">保存具有此 <see cref="T:System.Drawing.Graphics" /> 的当前状态的图形容器，然后打开并使用具有指定缩放变形的新图形容器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-198">Saves a graphics container with the current state of this <see cref="T:System.Drawing.Graphics" /> and opens and uses a new graphics container with the specified scale transformation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19ce0-199">此方法返回一个 <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" />，该对象表示该方法调用运行时此 <see cref="T:System.Drawing.Graphics" /> 的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-199">This method returns a <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" /> that represents the state of this <see cref="T:System.Drawing.Graphics" /> at the time of the method call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-200">使用此方法与<xref:System.Drawing.Graphics.EndContainer%2A>方法来创建嵌套的 graphics 容器。</span><span class="sxs-lookup"><span data-stu-id="19ce0-200">Use this method with the <xref:System.Drawing.Graphics.EndContainer%2A> method to create nested graphics containers.</span></span> <span data-ttu-id="19ce0-201">图形容器保留图形状态，例如转换、 剪辑区域和呈现属性。</span><span class="sxs-lookup"><span data-stu-id="19ce0-201">Graphics containers retain graphics state, such as transformation, clipping region, and rendering properties.</span></span>  
  
 <span data-ttu-id="19ce0-202">当调用<xref:System.Drawing.Graphics.BeginContainer%2A>方法<xref:System.Drawing.Graphics>，保存的状态信息块<xref:System.Drawing.Graphics>放置在堆栈上。</span><span class="sxs-lookup"><span data-stu-id="19ce0-202">When you call the <xref:System.Drawing.Graphics.BeginContainer%2A> method of a <xref:System.Drawing.Graphics>, an information block that holds the state of the <xref:System.Drawing.Graphics> is put on a stack.</span></span> <span data-ttu-id="19ce0-203"><xref:System.Drawing.Graphics.BeginContainer%2A>方法返回<xref:System.Drawing.Drawing2D.GraphicsContainer>标识该信息块。</span><span class="sxs-lookup"><span data-stu-id="19ce0-203">The <xref:System.Drawing.Graphics.BeginContainer%2A> method returns a <xref:System.Drawing.Drawing2D.GraphicsContainer> that identifies that information block.</span></span> <span data-ttu-id="19ce0-204">当你标识对象传递给<xref:System.Drawing.Graphics.EndContainer%2A>方法，该信息块从堆栈中移除，并用于还原<xref:System.Drawing.Graphics>到它所处的时间中的状态<xref:System.Drawing.Graphics.BeginContainer%2A>方法调用。</span><span class="sxs-lookup"><span data-stu-id="19ce0-204">When you pass the identifying object to the <xref:System.Drawing.Graphics.EndContainer%2A> method, the information block is removed from the stack and is used to restore the <xref:System.Drawing.Graphics> to the state it was in at the time of the <xref:System.Drawing.Graphics.BeginContainer%2A> method call.</span></span>  
  
 <span data-ttu-id="19ce0-205">可以嵌套容器;也就是说，可以调用<xref:System.Drawing.Graphics.BeginContainer%2A>方法调用之前多次<xref:System.Drawing.Graphics.EndContainer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-205">Containers can be nested; that is, you can call the <xref:System.Drawing.Graphics.BeginContainer%2A> method several times before you call the <xref:System.Drawing.Graphics.EndContainer%2A> method.</span></span> <span data-ttu-id="19ce0-206">每次调用<xref:System.Drawing.Graphics.BeginContainer%2A>方法，信息块放在堆栈，并且您收到<xref:System.Drawing.Drawing2D.GraphicsContainer>信息块。</span><span class="sxs-lookup"><span data-stu-id="19ce0-206">Each time you call the <xref:System.Drawing.Graphics.BeginContainer%2A> method, an information block is put on the stack, and you receive a <xref:System.Drawing.Drawing2D.GraphicsContainer> for the information block.</span></span> <span data-ttu-id="19ce0-207">传递时，这些对象附加到之一<xref:System.Drawing.Graphics.EndContainer%2A>方法，<xref:System.Drawing.Graphics>返回到它所处的时间中的状态<xref:System.Drawing.Graphics.BeginContainer%2A>方法调用返回了该特定<xref:System.Drawing.Drawing2D.GraphicsContainer>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-207">When you pass one of those objects to the <xref:System.Drawing.Graphics.EndContainer%2A> method, the <xref:System.Drawing.Graphics> is returned to the state it was in at the time of the <xref:System.Drawing.Graphics.BeginContainer%2A> method call that returned that particular <xref:System.Drawing.Drawing2D.GraphicsContainer>.</span></span> <span data-ttu-id="19ce0-208">信息块将位于堆栈上的<xref:System.Drawing.Graphics.BeginContainer%2A>从堆栈中，删除方法调用和所有信息块后，该堆栈上都放置<xref:System.Drawing.Graphics.BeginContainer%2A>方法调用也将被删除。</span><span class="sxs-lookup"><span data-stu-id="19ce0-208">The information block placed on the stack by that <xref:System.Drawing.Graphics.BeginContainer%2A> method call is removed from the stack, and all information blocks placed on that stack after that <xref:System.Drawing.Graphics.BeginContainer%2A> method call are also removed.</span></span>  
  
 <span data-ttu-id="19ce0-209">调用<xref:System.Drawing.Graphics.Save%2A>方法相同为对调用堆栈上的位置信息块<xref:System.Drawing.Graphics.BeginContainer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-209">Calls to the <xref:System.Drawing.Graphics.Save%2A> method place information blocks on the same stack as calls to the <xref:System.Drawing.Graphics.BeginContainer%2A> method.</span></span> <span data-ttu-id="19ce0-210">就像<xref:System.Drawing.Graphics.EndContainer%2A>方法调用配合<xref:System.Drawing.Graphics.BeginContainer%2A>方法调用<xref:System.Drawing.Graphics.Restore%2A>方法调用配合<xref:System.Drawing.Graphics.Save%2A>方法调用。</span><span class="sxs-lookup"><span data-stu-id="19ce0-210">Just as an <xref:System.Drawing.Graphics.EndContainer%2A> method call is paired with a <xref:System.Drawing.Graphics.BeginContainer%2A> method call, a <xref:System.Drawing.Graphics.Restore%2A> method call is paired with a <xref:System.Drawing.Graphics.Save%2A> method call.</span></span>  
  
 <span data-ttu-id="19ce0-211">当调用<xref:System.Drawing.Graphics.EndContainer%2A>方法，在堆栈上放置的所有信息块 (通过`Save`方法或通过<xref:System.Drawing.Graphics.BeginContainer%2A>方法) 在相应调用<xref:System.Drawing.Graphics.BeginContainer%2A>从堆栈中移除方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-211">When you call the <xref:System.Drawing.Graphics.EndContainer%2A> method, all information blocks placed on the stack (by the `Save` method or by the <xref:System.Drawing.Graphics.BeginContainer%2A> method) after the corresponding call to the <xref:System.Drawing.Graphics.BeginContainer%2A> method are removed from the stack.</span></span> <span data-ttu-id="19ce0-212">同样，当调用<xref:System.Drawing.Graphics.Restore%2A>方法，在堆栈上放置的所有信息块 (通过<xref:System.Drawing.Graphics.Save%2A>方法或通过<xref:System.Drawing.Graphics.BeginContainer%2A>方法) 在相应调用<xref:System.Drawing.Graphics.Save%2A>从堆栈中移除方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-212">Likewise, when you call the <xref:System.Drawing.Graphics.Restore%2A> method, all information blocks placed on the stack (by the <xref:System.Drawing.Graphics.Save%2A> method or by the <xref:System.Drawing.Graphics.BeginContainer%2A> method) after the corresponding call to the <xref:System.Drawing.Graphics.Save%2A> method are removed from the stack.</span></span>  
  
 <span data-ttu-id="19ce0-213">此方法指定缩放转换为与新的图形容器`dstrect`和`srcrect`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-213">This method specifies a scale transformation for the new graphics container with the `dstrect` and `srcrect` parameters.</span></span> <span data-ttu-id="19ce0-214">小数位数等于转换，当应用于`srcrect`，导致`dstrect`。</span><span class="sxs-lookup"><span data-stu-id="19ce0-214">The scale is equal to the transformation that, when applied to `srcrect`, results in `dstrect`.</span></span>  
  
 <span data-ttu-id="19ce0-215">通过建立的图形状态<xref:System.Drawing.Graphics.BeginContainer%2A>方法包括呈现质量的默认图形状态; 当调用方法存在的任何呈现质量状态更改将重置为默认值。</span><span class="sxs-lookup"><span data-stu-id="19ce0-215">The graphics state established by the <xref:System.Drawing.Graphics.BeginContainer%2A> method includes the rendering qualities of the default graphics state; any rendering-quality state changes existing when the method is called are reset to the default values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-216">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-216">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-217">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-217">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-218">创建两个矩形来指定缩放转换为新的容器。</span><span class="sxs-lookup"><span data-stu-id="19ce0-218">Creates two rectangles to specify a scale transformation for the new container.</span></span>  
  
-   <span data-ttu-id="19ce0-219">打开新的图形容器和保存旧的容器。</span><span class="sxs-lookup"><span data-stu-id="19ce0-219">Opens the new graphics container and saves the old container.</span></span>  
  
-   <span data-ttu-id="19ce0-220">在填充红色矩形 (缩放坐标系) 新的容器。</span><span class="sxs-lookup"><span data-stu-id="19ce0-220">Fills a red rectangle in the (scaled coordinates of the) new container.</span></span>  
  
-   <span data-ttu-id="19ce0-221">关闭新的容器，并将还原保存的容器。</span><span class="sxs-lookup"><span data-stu-id="19ce0-221">Closes the new container and restores the saved container.</span></span>  
  
-   <span data-ttu-id="19ce0-222">填充的绿色矩形 （无比例区坐标中） 的已保存的容器。</span><span class="sxs-lookup"><span data-stu-id="19ce0-222">Fills a green rectangle (to the unscaled coordinates) of the saved container.</span></span>  
  
 <span data-ttu-id="19ce0-223">结果是覆盖较小的红色矩形之上一个绿色矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-223">The result is a green rectangle that overlies a smaller red rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear (System.Drawing.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear(valuetype System.Drawing.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.Clear(System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear(System::Drawing::Color color);" />
      <MemberSignature Language="F#" Value="member this.Clear : System.Drawing.Color -&gt; unit" Usage="graphics.Clear color" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="color">
          <span data-ttu-id="19ce0-224">
            <see cref="T:System.Drawing.Color" /> 结构，它表示绘图面的背景色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-224">
              <see cref="T:System.Drawing.Color" /> structure that represents the background color of the drawing surface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-225">清除整个绘图面并以指定背景色填充。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-225">Clears the entire drawing surface and fills it with the specified background color.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-226"><xref:System.Drawing.Graphics.Clear%2A>方法清除图形对象的状态，不应进行调用时不能更新图形对象。</span><span class="sxs-lookup"><span data-stu-id="19ce0-226">The <xref:System.Drawing.Graphics.Clear%2A> method clears the state of the graphics object and should not be called when the graphics object cannot be updated.</span></span> <span data-ttu-id="19ce0-227">例如，如果<xref:System.Drawing.Graphics.Clear%2A>在终端服务器会话中，在安全桌面上调用方法<xref:System.Runtime.InteropServices.ExternalException>可能会发生，离开<xref:System.Drawing.Graphics>处于不一致状态的对象。</span><span class="sxs-lookup"><span data-stu-id="19ce0-227">For example, if the <xref:System.Drawing.Graphics.Clear%2A> method is called on a secure desktop in a terminal server session, an <xref:System.Runtime.InteropServices.ExternalException> may occur, leaving the <xref:System.Drawing.Graphics> object in an inconsistent state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-228">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-228">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-229">则代码将清除的绘图图面<xref:System.Drawing.Graphics>并将背景色设置为系统定义青色颜色。</span><span class="sxs-lookup"><span data-stu-id="19ce0-229">The code clears the drawing surface of the <xref:System.Drawing.Graphics> and sets the background color to the system-defined teal color.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clip">
      <MemberSignature Language="C#" Value="public System.Drawing.Region Clip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Region Clip" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.Clip" />
      <MemberSignature Language="VB.NET" Value="Public Property Clip As Region" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Region ^ Clip { System::Drawing::Region ^ get(); void set(System::Drawing::Region ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Clip : System.Drawing.Region with get, set" Usage="System.Drawing.Graphics.Clip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Region</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-230">获取或设置 <see cref="T:System.Drawing.Region" />，它限定此 <see cref="T:System.Drawing.Graphics" /> 的绘图区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-230">Gets or sets a <see cref="T:System.Drawing.Region" /> that limits the drawing region of this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19ce0-231">一个 <see cref="T:System.Drawing.Region" />，它限定此 <see cref="T:System.Drawing.Graphics" /> 当前可用的绘图区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-231">A <see cref="T:System.Drawing.Region" /> that limits the portion of this <see cref="T:System.Drawing.Graphics" /> that is currently available for drawing.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-232">修改<xref:System.Drawing.Region>返回对象<xref:System.Drawing.Graphics.Clip%2A>属性不会影响后续绘图<xref:System.Drawing.Graphics>对象。</span><span class="sxs-lookup"><span data-stu-id="19ce0-232">Modifying the <xref:System.Drawing.Region> object returned by the <xref:System.Drawing.Graphics.Clip%2A> property does not affect subsequent drawing with the <xref:System.Drawing.Graphics> object.</span></span> <span data-ttu-id="19ce0-233">若要更改的剪辑区域，替换<xref:System.Drawing.Graphics.Clip%2A>为一个新的属性值<xref:System.Drawing.Region>对象。</span><span class="sxs-lookup"><span data-stu-id="19ce0-233">To change the clip region, replace the <xref:System.Drawing.Graphics.Clip%2A> property value with a new <xref:System.Drawing.Region> object.</span></span> <span data-ttu-id="19ce0-234">若要确定的剪辑区域是否为无限，检索<xref:System.Drawing.Graphics.Clip%2A>属性并调用其<xref:System.Drawing.Region.IsInfinite%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-234">To determine whether the clipping region is infinite, retrieve the <xref:System.Drawing.Graphics.Clip%2A> property and call its <xref:System.Drawing.Region.IsInfinite%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-235">下面的代码示例演示如何将<xref:System.Drawing.Graphics.Clip%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="19ce0-235">The following code example demonstrates the use of the <xref:System.Drawing.Graphics.Clip%2A> property.</span></span> <span data-ttu-id="19ce0-236">本示例旨在与 Windows 窗体一起使用。</span><span class="sxs-lookup"><span data-stu-id="19ce0-236">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="19ce0-237">将代码粘贴到窗体并调用`SetAndFillClip`方法时处理该窗体的<xref:System.Windows.Forms.Control.Paint>事件，并传递`e`作为<xref:System.Windows.Forms.PaintEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-237">Paste the code into a form and call the `SetAndFillClip` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.GraphicsProperties#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.GraphicsProperties#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CS/form1.cs#4)]
 [!code-vb[System.Drawing.GraphicsProperties#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClipBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF ClipBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.RectangleF ClipBounds" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.ClipBounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClipBounds As RectangleF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::RectangleF ClipBounds { System::Drawing::RectangleF get(); };" />
      <MemberSignature Language="F#" Value="member this.ClipBounds : System.Drawing.RectangleF" Usage="System.Drawing.Graphics.ClipBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-238">获取一个 <see cref="T:System.Drawing.RectangleF" /> 结构，该结构限定此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-238">Gets a <see cref="T:System.Drawing.RectangleF" /> structure that bounds the clipping region of this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19ce0-239">一个 <see cref="T:System.Drawing.RectangleF" /> 结构，它表示此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域的边框。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-239">A <see cref="T:System.Drawing.RectangleF" /> structure that represents a bounding rectangle for the clipping region of this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-240">生成的矩形的单位所指定的<xref:System.Drawing.Graphics.PageUnit%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="19ce0-240">The unit for resulting rectangle is designated by the <xref:System.Drawing.Graphics.PageUnit%2A> property.</span></span> <span data-ttu-id="19ce0-241">默认单位是像素。</span><span class="sxs-lookup"><span data-stu-id="19ce0-241">The default unit is pixels.</span></span> <span data-ttu-id="19ce0-242">A<xref:System.Drawing.Graphics>通常与控件关联的源的矩形将该控件的工作区相对。</span><span class="sxs-lookup"><span data-stu-id="19ce0-242">A <xref:System.Drawing.Graphics> is typically associated with a control and the origin of the rectangle will be relative to the client area of that control.</span></span>  
  
 <span data-ttu-id="19ce0-243">如果的剪辑区域为无限，<xref:System.Drawing.Graphics.ClipBounds%2A>属性返回一个无意义的大矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-243">If the clipping region is infinite, the <xref:System.Drawing.Graphics.ClipBounds%2A> property returns a meaningless large rectangle.</span></span> <span data-ttu-id="19ce0-244">若要确定的剪辑区域是否为无限，检索<xref:System.Drawing.Graphics.Clip%2A>属性并调用其<xref:System.Drawing.Region.IsInfinite%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-244">To determine whether the clipping region is infinite, retrieve the <xref:System.Drawing.Graphics.Clip%2A> property and call its <xref:System.Drawing.Region.IsInfinite%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompositingMode">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.CompositingMode CompositingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.CompositingMode CompositingMode" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.CompositingMode" />
      <MemberSignature Language="VB.NET" Value="Public Property CompositingMode As CompositingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::CompositingMode CompositingMode { System::Drawing::Drawing2D::CompositingMode get(); void set(System::Drawing::Drawing2D::CompositingMode value); };" />
      <MemberSignature Language="F#" Value="member this.CompositingMode : System.Drawing.Drawing2D.CompositingMode with get, set" Usage="System.Drawing.Graphics.CompositingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.CompositingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-245">获取一个值，该值指定如何将合成图像绘制到此 <see cref="T:System.Drawing.Graphics" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-245">Gets a value that specifies how composited images are drawn to this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19ce0-246">此属性指定 <see cref="T:System.Drawing.Drawing2D.CompositingMode" /> 枚举的成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-246">This property specifies a member of the <see cref="T:System.Drawing.Drawing2D.CompositingMode" /> enumeration.</span>
          </span>
          <span data-ttu-id="19ce0-247">默认值为 <see cref="F:System.Drawing.Drawing2D.CompositingMode.SourceOver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-247">The default is <see cref="F:System.Drawing.Drawing2D.CompositingMode.SourceOver" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-248">复合模式确定从源映像的像素是覆盖还是与背景像素结合。</span><span class="sxs-lookup"><span data-stu-id="19ce0-248">The compositing mode determines whether pixels from a source image overwrite or are combined with background pixels.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="19ce0-249">不应使用<xref:System.Drawing.Graphics.CompositingMode%2A>属性值<xref:System.Drawing.Drawing2D.CompositingMode.SourceCopy>时<xref:System.Drawing.Graphics.TextRenderingHint%2A>属性设置为<xref:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-249">You should not use a <xref:System.Drawing.Graphics.CompositingMode%2A> property value of <xref:System.Drawing.Drawing2D.CompositingMode.SourceCopy> when the <xref:System.Drawing.Graphics.TextRenderingHint%2A> property is set to <xref:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit>.</span></span> <span data-ttu-id="19ce0-250">可能会发生异常或图像可能无法正确呈现。</span><span class="sxs-lookup"><span data-stu-id="19ce0-250">An exception could occur or the image may not render correctly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompositingQuality">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.CompositingQuality CompositingQuality { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.CompositingQuality CompositingQuality" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.CompositingQuality" />
      <MemberSignature Language="VB.NET" Value="Public Property CompositingQuality As CompositingQuality" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::CompositingQuality CompositingQuality { System::Drawing::Drawing2D::CompositingQuality get(); void set(System::Drawing::Drawing2D::CompositingQuality value); };" />
      <MemberSignature Language="F#" Value="member this.CompositingQuality : System.Drawing.Drawing2D.CompositingQuality with get, set" Usage="System.Drawing.Graphics.CompositingQuality" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.CompositingQuality</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-251">获取或设置绘制到此 <see cref="T:System.Drawing.Graphics" /> 的合成图像的呈现质量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-251">Gets or sets the rendering quality of composited images drawn to this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19ce0-252">此属性指定 <see cref="T:System.Drawing.Drawing2D.CompositingQuality" /> 枚举的成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-252">This property specifies a member of the <see cref="T:System.Drawing.Drawing2D.CompositingQuality" /> enumeration.</span>
          </span>
          <span data-ttu-id="19ce0-253">默认值为 <see cref="F:System.Drawing.Drawing2D.CompositingQuality.Default" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-253">The default is <see cref="F:System.Drawing.Drawing2D.CompositingQuality.Default" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-254">合成质量确定合成图像的呈现质量的级别。</span><span class="sxs-lookup"><span data-stu-id="19ce0-254">The compositing quality determines the rendering quality level of composited images.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyFromScreen">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-255">执行颜色数据从屏幕到 <see cref="T:System.Drawing.Graphics" /> 的绘图图面的位块传输。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-255">Performs a bit-block transfer of color data from the screen to the drawing surface of the <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyFromScreen">
      <MemberSignature Language="C#" Value="public void CopyFromScreen (System.Drawing.Point upperLeftSource, System.Drawing.Point upperLeftDestination, System.Drawing.Size blockRegionSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyFromScreen(valuetype System.Drawing.Point upperLeftSource, valuetype System.Drawing.Point upperLeftDestination, valuetype System.Drawing.Size blockRegionSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyFromScreen (upperLeftSource As Point, upperLeftDestination As Point, blockRegionSize As Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyFromScreen(System::Drawing::Point upperLeftSource, System::Drawing::Point upperLeftDestination, System::Drawing::Size blockRegionSize);" />
      <MemberSignature Language="F#" Value="member this.CopyFromScreen : System.Drawing.Point * System.Drawing.Point * System.Drawing.Size -&gt; unit" Usage="graphics.CopyFromScreen (upperLeftSource, upperLeftDestination, blockRegionSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="upperLeftSource" Type="System.Drawing.Point" />
        <Parameter Name="upperLeftDestination" Type="System.Drawing.Point" />
        <Parameter Name="blockRegionSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="upperLeftSource">
          <span data-ttu-id="19ce0-256">位于源矩形左上角的点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-256">The point at the upper-left corner of the source rectangle.</span>
          </span>
        </param>
        <param name="upperLeftDestination">
          <span data-ttu-id="19ce0-257">位于目标矩形左上角的点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-257">The point at the upper-left corner of the destination rectangle.</span>
          </span>
        </param>
        <param name="blockRegionSize">
          <span data-ttu-id="19ce0-258">要传输的区域大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-258">The size of the area to be transferred.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-259">执行颜色数据（对应于由像素组成的矩形）从屏幕到 <see cref="T:System.Drawing.Graphics" /> 的绘图图面的位块传输。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-259">Performs a bit-block transfer of color data, corresponding to a rectangle of pixels, from the screen to the drawing surface of the <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-260"><xref:System.Drawing.Graphics.CopyFromScreen%2A>方法可用于基于另一个分层一个映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-260">The <xref:System.Drawing.Graphics.CopyFromScreen%2A> methods are useful for layering one image on top of another.</span></span> <span data-ttu-id="19ce0-261">若要指定如何混合源和目标颜色，请使用之一<xref:System.Drawing.Graphics.CopyFromScreen%2A>采用的方法<xref:System.Drawing.CopyPixelOperation>参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-261">To specify how the source and destination colors are blended, use one of the <xref:System.Drawing.Graphics.CopyFromScreen%2A> methods that takes a <xref:System.Drawing.CopyPixelOperation> parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-262">下面的示例演示如何使用 <xref:System.Drawing.Graphics.CopyFromScreen%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-262">The following example demonstrates how to use the <xref:System.Drawing.Graphics.CopyFromScreen%2A> method.</span></span> <span data-ttu-id="19ce0-263">若要运行此示例，请将其粘贴到 Windows 窗体中。</span><span class="sxs-lookup"><span data-stu-id="19ce0-263">To run this example, paste it into a Windows Form.</span></span> <span data-ttu-id="19ce0-264">处理窗体的<xref:System.Windows.Forms.Control.Paint>事件并调用`CopyPixels1`方法从<xref:System.Windows.Forms.Control.Paint>事件处理方法，并传递`e`作为<xref:System.Windows.Forms.PaintEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-264">Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `CopyPixels1` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Drawing.MiscWhidbeySnippets#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/CS/Form1.cs#4)]
 [!code-vb[System.Drawing.MiscWhidbeySnippets#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="19ce0-265">操作失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-265">The operation failed.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="19ce0-266">用于访问所有窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-266">for access to all windows.</span>
          </span>
          <span data-ttu-id="19ce0-267">相关枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-267">Related enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CopyFromScreen">
      <MemberSignature Language="C#" Value="public void CopyFromScreen (System.Drawing.Point upperLeftSource, System.Drawing.Point upperLeftDestination, System.Drawing.Size blockRegionSize, System.Drawing.CopyPixelOperation copyPixelOperation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyFromScreen(valuetype System.Drawing.Point upperLeftSource, valuetype System.Drawing.Point upperLeftDestination, valuetype System.Drawing.Size blockRegionSize, valuetype System.Drawing.CopyPixelOperation copyPixelOperation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyFromScreen(System::Drawing::Point upperLeftSource, System::Drawing::Point upperLeftDestination, System::Drawing::Size blockRegionSize, System::Drawing::CopyPixelOperation copyPixelOperation);" />
      <MemberSignature Language="F#" Value="member this.CopyFromScreen : System.Drawing.Point * System.Drawing.Point * System.Drawing.Size * System.Drawing.CopyPixelOperation -&gt; unit" Usage="graphics.CopyFromScreen (upperLeftSource, upperLeftDestination, blockRegionSize, copyPixelOperation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="upperLeftSource" Type="System.Drawing.Point" />
        <Parameter Name="upperLeftDestination" Type="System.Drawing.Point" />
        <Parameter Name="blockRegionSize" Type="System.Drawing.Size" />
        <Parameter Name="copyPixelOperation" Type="System.Drawing.CopyPixelOperation" />
      </Parameters>
      <Docs>
        <param name="upperLeftSource">
          <span data-ttu-id="19ce0-268">位于源矩形左上角的点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-268">The point at the upper-left corner of the source rectangle.</span>
          </span>
        </param>
        <param name="upperLeftDestination">
          <span data-ttu-id="19ce0-269">位于目标矩形左上角的点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-269">The point at the upper-left corner of the destination rectangle.</span>
          </span>
        </param>
        <param name="blockRegionSize">
          <span data-ttu-id="19ce0-270">要传输的区域大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-270">The size of the area to be transferred.</span>
          </span>
        </param>
        <param name="copyPixelOperation">
          <span data-ttu-id="19ce0-271">
            <see cref="T:System.Drawing.CopyPixelOperation" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-271">One of the <see cref="T:System.Drawing.CopyPixelOperation" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-272">执行颜色数据（对应于由像素组成的矩形）从屏幕到 <see cref="T:System.Drawing.Graphics" /> 的绘图图面的位块传输。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-272">Performs a bit-block transfer of color data, corresponding to a rectangle of pixels, from the screen to the drawing surface of the <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-273"><xref:System.Drawing.Graphics.CopyFromScreen%2A>方法可用于基于另一个分层一个映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-273">The <xref:System.Drawing.Graphics.CopyFromScreen%2A> methods are useful for layering one image on top of another.</span></span> <span data-ttu-id="19ce0-274">`copyPixelOperation`参数允许您可以指定如果以及应如何与目标区域中的颜色混合源颜色。</span><span class="sxs-lookup"><span data-stu-id="19ce0-274">The `copyPixelOperation` parameter allows you to specify if and how the source colors should be blended with the colors in the destination area.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-275">下面的示例演示如何使用 <xref:System.Drawing.Graphics.CopyFromScreen%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-275">The following example demonstrates how to use the <xref:System.Drawing.Graphics.CopyFromScreen%2A> method.</span></span> <span data-ttu-id="19ce0-276">若要运行此示例，请将其粘贴到 Windows 窗体中。</span><span class="sxs-lookup"><span data-stu-id="19ce0-276">To run this example, paste it into a Windows Form.</span></span> <span data-ttu-id="19ce0-277">处理窗体的<xref:System.Windows.Forms.Control.Paint>事件并调用`CopyPixels2`方法从<xref:System.Windows.Forms.Control.Paint>事件处理方法，并传递`e`作为<xref:System.Windows.Forms.PaintEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-277">Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `CopyPixels2` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Drawing.MiscWhidbeySnippets#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/CS/Form1.cs#5)]
 [!code-vb[System.Drawing.MiscWhidbeySnippets#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="19ce0-278">
            <paramref name="copyPixelOperation" /> 不是 <see cref="T:System.Drawing.CopyPixelOperation" /> 的成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-278">
              <paramref name="copyPixelOperation" /> is not a member of <see cref="T:System.Drawing.CopyPixelOperation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="19ce0-279">操作失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-279">The operation failed.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="19ce0-280">用于访问所有窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-280">for access to all windows.</span>
          </span>
          <span data-ttu-id="19ce0-281">相关枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-281">Related enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CopyFromScreen">
      <MemberSignature Language="C#" Value="public void CopyFromScreen (int sourceX, int sourceY, int destinationX, int destinationY, System.Drawing.Size blockRegionSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyFromScreen(int32 sourceX, int32 sourceY, int32 destinationX, int32 destinationY, valuetype System.Drawing.Size blockRegionSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyFromScreen (sourceX As Integer, sourceY As Integer, destinationX As Integer, destinationY As Integer, blockRegionSize As Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyFromScreen(int sourceX, int sourceY, int destinationX, int destinationY, System::Drawing::Size blockRegionSize);" />
      <MemberSignature Language="F#" Value="member this.CopyFromScreen : int * int * int * int * System.Drawing.Size -&gt; unit" Usage="graphics.CopyFromScreen (sourceX, sourceY, destinationX, destinationY, blockRegionSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceX" Type="System.Int32" />
        <Parameter Name="sourceY" Type="System.Int32" />
        <Parameter Name="destinationX" Type="System.Int32" />
        <Parameter Name="destinationY" Type="System.Int32" />
        <Parameter Name="blockRegionSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="sourceX">
          <span data-ttu-id="19ce0-282">位于源矩形左上角的点的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-282">The x-coordinate of the point at the upper-left corner of the source rectangle.</span>
          </span>
        </param>
        <param name="sourceY">
          <span data-ttu-id="19ce0-283">位于源矩形左上角的点的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-283">The y-coordinate of the point at the upper-left corner of the source rectangle.</span>
          </span>
        </param>
        <param name="destinationX">
          <span data-ttu-id="19ce0-284">位于目标矩形左上角的点的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-284">The x-coordinate of the point at the upper-left corner of the destination rectangle.</span>
          </span>
        </param>
        <param name="destinationY">
          <span data-ttu-id="19ce0-285">位于目标矩形左上角的点的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-285">The y-coordinate of the point at the upper-left corner of the destination rectangle.</span>
          </span>
        </param>
        <param name="blockRegionSize">
          <span data-ttu-id="19ce0-286">要传输的区域大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-286">The size of the area to be transferred.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-287">执行颜色数据（对应于由像素组成的矩形）从屏幕到 <see cref="T:System.Drawing.Graphics" /> 的绘图图面的位块传输。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-287">Performs a bit-block transfer of the color data, corresponding to a rectangle of pixels, from the screen to the drawing surface of the <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-288"><xref:System.Drawing.Graphics.CopyFromScreen%2A>方法可用于基于另一个分层一个映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-288">The <xref:System.Drawing.Graphics.CopyFromScreen%2A> methods are useful for layering one image on top of another.</span></span> <span data-ttu-id="19ce0-289">若要指定如何混合源和目标颜色，请使用之一<xref:System.Drawing.Graphics.CopyFromScreen%2A>采用的方法<xref:System.Drawing.CopyPixelOperation>参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-289">To specify how the source and destination colors are blended, use one of the <xref:System.Drawing.Graphics.CopyFromScreen%2A> methods that takes a <xref:System.Drawing.CopyPixelOperation> parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-290">下面的代码示例演示如何使用<xref:System.Drawing.Graphics.CopyFromScreen%2A>用于打印一份当前窗体。</span><span class="sxs-lookup"><span data-stu-id="19ce0-290">The following code example demonstrates how to use the <xref:System.Drawing.Graphics.CopyFromScreen%2A> for printing a copy of the current form.</span></span>  
  
 [!code-csharp[System.Drawing.Graphics.CopyFromScreen#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Graphics.CopyFromScreen/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Graphics.CopyFromScreen#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Graphics.CopyFromScreen/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="19ce0-291">操作失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-291">The operation failed.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="19ce0-292">用于访问所有窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-292">for access to all windows.</span>
          </span>
          <span data-ttu-id="19ce0-293">相关枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-293">Related enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CopyFromScreen">
      <MemberSignature Language="C#" Value="public void CopyFromScreen (int sourceX, int sourceY, int destinationX, int destinationY, System.Drawing.Size blockRegionSize, System.Drawing.CopyPixelOperation copyPixelOperation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyFromScreen(int32 sourceX, int32 sourceY, int32 destinationX, int32 destinationY, valuetype System.Drawing.Size blockRegionSize, valuetype System.Drawing.CopyPixelOperation copyPixelOperation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyFromScreen(int sourceX, int sourceY, int destinationX, int destinationY, System::Drawing::Size blockRegionSize, System::Drawing::CopyPixelOperation copyPixelOperation);" />
      <MemberSignature Language="F#" Value="member this.CopyFromScreen : int * int * int * int * System.Drawing.Size * System.Drawing.CopyPixelOperation -&gt; unit" Usage="graphics.CopyFromScreen (sourceX, sourceY, destinationX, destinationY, blockRegionSize, copyPixelOperation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceX" Type="System.Int32" />
        <Parameter Name="sourceY" Type="System.Int32" />
        <Parameter Name="destinationX" Type="System.Int32" />
        <Parameter Name="destinationY" Type="System.Int32" />
        <Parameter Name="blockRegionSize" Type="System.Drawing.Size" />
        <Parameter Name="copyPixelOperation" Type="System.Drawing.CopyPixelOperation" />
      </Parameters>
      <Docs>
        <param name="sourceX">
          <span data-ttu-id="19ce0-294">位于源矩形左上角的点的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-294">The x-coordinate of the point at the upper-left corner of the source rectangle.</span>
          </span>
        </param>
        <param name="sourceY">
          <span data-ttu-id="19ce0-295">位于源矩形左上角的点的 y 坐标</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-295">The y-coordinate of the point at the upper-left corner of the source rectangle</span>
          </span>
        </param>
        <param name="destinationX">
          <span data-ttu-id="19ce0-296">位于目标矩形左上角的点的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-296">The x-coordinate of the point at the upper-left corner of the destination rectangle.</span>
          </span>
        </param>
        <param name="destinationY">
          <span data-ttu-id="19ce0-297">位于目标矩形左上角的点的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-297">The y-coordinate of the point at the upper-left corner of the destination rectangle.</span>
          </span>
        </param>
        <param name="blockRegionSize">
          <span data-ttu-id="19ce0-298">要传输的区域大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-298">The size of the area to be transferred.</span>
          </span>
        </param>
        <param name="copyPixelOperation">
          <span data-ttu-id="19ce0-299">
            <see cref="T:System.Drawing.CopyPixelOperation" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-299">One of the <see cref="T:System.Drawing.CopyPixelOperation" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-300">执行颜色数据（对应于由像素组成的矩形）从屏幕到 <see cref="T:System.Drawing.Graphics" /> 的绘图图面的位块传输。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-300">Performs a bit-block transfer of the color data, corresponding to a rectangle of pixels, from the screen to the drawing surface of the <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-301"><xref:System.Drawing.Graphics.CopyFromScreen%2A>方法可用于基于另一个分层一个映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-301">The <xref:System.Drawing.Graphics.CopyFromScreen%2A> methods are useful for layering one image on top of another.</span></span> <span data-ttu-id="19ce0-302">`copyPixelOperation`参数允许您可以指定如果以及应如何与目标区域中的颜色混合源颜色。</span><span class="sxs-lookup"><span data-stu-id="19ce0-302">The `copyPixelOperation` parameter allows you to specify if and how the source colors should be blended with the colors in the destination area.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-303">下面的示例演示如何使用 <xref:System.Drawing.Graphics.CopyFromScreen%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-303">The following example demonstrates how to use the <xref:System.Drawing.Graphics.CopyFromScreen%2A> method.</span></span> <span data-ttu-id="19ce0-304">若要运行此示例，请将其粘贴到 Windows 窗体中。</span><span class="sxs-lookup"><span data-stu-id="19ce0-304">To run this example, paste it into a Windows Form.</span></span> <span data-ttu-id="19ce0-305">处理窗体的<xref:System.Windows.Forms.Control.Paint>事件并调用`CopyPixels4`方法从<xref:System.Windows.Forms.Control.Paint>事件处理方法，并传递`e`作为<xref:System.Windows.Forms.PaintEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-305">Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `CopyPixels4` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Drawing.MiscWhidbeySnippets#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/CS/Form1.cs#7)]
 [!code-vb[System.Drawing.MiscWhidbeySnippets#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="19ce0-306">
            <paramref name="copyPixelOperation" /> 不是 <see cref="T:System.Drawing.CopyPixelOperation" /> 的成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-306">
              <paramref name="copyPixelOperation" /> is not a member of <see cref="T:System.Drawing.CopyPixelOperation" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="19ce0-307">操作失败。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-307">The operation failed.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="19ce0-308">用于访问所有窗口。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-308">for access to all windows.</span>
          </span>
          <span data-ttu-id="19ce0-309">相关枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-309">Related enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="graphics.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-310">释放此 <see cref="T:System.Drawing.Graphics" /> 使用的所有资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-310">Releases all resources used by this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-311">调用<xref:System.Drawing.Graphics.Dispose%2A>允许使用的资源<xref:System.Drawing.Graphics>可以重新分配用于其他目的。</span><span class="sxs-lookup"><span data-stu-id="19ce0-311">Calling <xref:System.Drawing.Graphics.Dispose%2A> allows the resources used by this <xref:System.Drawing.Graphics> to be reallocated for other purposes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-312">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-312">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-313">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-313">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-314">创建<xref:System.Drawing.Image>从一种图形文件 sampimag.jpg 位于同示例目录中。</span><span class="sxs-lookup"><span data-stu-id="19ce0-314">Creates an <xref:System.Drawing.Image> from a graphics file SampImag.jpg in the example directory.</span></span>  
  
-   <span data-ttu-id="19ce0-315">创建<xref:System.Drawing.Graphics>从<xref:System.Drawing.Image>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-315">Creates a <xref:System.Drawing.Graphics> from the <xref:System.Drawing.Image>.</span></span>  
  
-   <span data-ttu-id="19ce0-316">通过填充其中的一个矩形来改变该图像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-316">Alters the image by filling a rectangle within it.</span></span>  
  
-   <span data-ttu-id="19ce0-317">绘制<xref:System.Drawing.Image>到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-317">Draws the <xref:System.Drawing.Image> to the screen.</span></span>  
  
-   <span data-ttu-id="19ce0-318">释放创建<xref:System.Drawing.Graphics>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-318">Releases the created <xref:System.Drawing.Graphics>.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DpiX">
      <MemberSignature Language="C#" Value="public float DpiX { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 DpiX" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.DpiX" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DpiX As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float DpiX { float get(); };" />
      <MemberSignature Language="F#" Value="member this.DpiX : single" Usage="System.Drawing.Graphics.DpiX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-319">获取此 <see cref="T:System.Drawing.Graphics" /> 的水平分辨率。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-319">Gets the horizontal resolution of this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19ce0-320">此 <see cref="T:System.Drawing.Graphics" /> 支持的水平分辨率的值（以每英寸点数为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-320">The value, in dots per inch, for the horizontal resolution supported by this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-321">有关创建高分辨率的应用程序的详细信息，请参阅</span><span class="sxs-lookup"><span data-stu-id="19ce0-321">For more information about creating high-resolution applications, see</span></span>  
  
 <span data-ttu-id="19ce0-322">[高 DPI](http://go.microsoft.com/fwlink/?LinkId=159804)。</span><span class="sxs-lookup"><span data-stu-id="19ce0-322">[High DPI](http://go.microsoft.com/fwlink/?LinkId=159804).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-323">以下方法演示如何使用<xref:System.Drawing.Graphics.DpiX%2A>和<xref:System.Drawing.Graphics.DpiY%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="19ce0-323">The following method shows the use of the <xref:System.Drawing.Graphics.DpiX%2A> and <xref:System.Drawing.Graphics.DpiY%2A> properties.</span></span> <span data-ttu-id="19ce0-324">此示例用于 Windows 窗体。</span><span class="sxs-lookup"><span data-stu-id="19ce0-324">This example is designed for use with a Windows Form.</span></span> <span data-ttu-id="19ce0-325">若要运行此示例，请将其粘贴到一个包含窗体<xref:System.Windows.Forms.ListBox>名为 listBox1 并从窗体的构造函数中调用此方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-325">To run this example, paste it into a form that contains a <xref:System.Windows.Forms.ListBox> named listBox1 and call this method from the form's constructor.</span></span>  
  
 [!code-cpp[System.Drawing.MiscExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.MiscExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.MiscExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DpiY">
      <MemberSignature Language="C#" Value="public float DpiY { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 DpiY" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.DpiY" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DpiY As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float DpiY { float get(); };" />
      <MemberSignature Language="F#" Value="member this.DpiY : single" Usage="System.Drawing.Graphics.DpiY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-326">获取此 <see cref="T:System.Drawing.Graphics" /> 的垂直分辨率。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-326">Gets the vertical resolution of this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19ce0-327">此 <see cref="T:System.Drawing.Graphics" /> 支持的垂直分辨率的值（以每英寸点数为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-327">The value, in dots per inch, for the vertical resolution supported by this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-328">有关创建高分辨率的应用程序的详细信息，请参阅</span><span class="sxs-lookup"><span data-stu-id="19ce0-328">For more information about creating high-resolution applications, see</span></span>  
  
 <span data-ttu-id="19ce0-329">[高 DPI](http://go.microsoft.com/fwlink/?LinkId=159804)。</span><span class="sxs-lookup"><span data-stu-id="19ce0-329">[High DPI](http://go.microsoft.com/fwlink/?LinkId=159804).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-330">以下方法演示如何使用<xref:System.Drawing.Graphics.DpiX%2A>和<xref:System.Drawing.Graphics.DpiY%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="19ce0-330">The following method shows the use of the <xref:System.Drawing.Graphics.DpiX%2A> and <xref:System.Drawing.Graphics.DpiY%2A> properties.</span></span> <span data-ttu-id="19ce0-331">此示例用于 Windows 窗体。</span><span class="sxs-lookup"><span data-stu-id="19ce0-331">This example is designed for use with a Windows Form.</span></span> <span data-ttu-id="19ce0-332">若要运行此示例，请将其粘贴到一个包含窗体<xref:System.Windows.Forms.ListBox>名为 listBox1 并从窗体的构造函数中调用此方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-332">To run this example, paste it into a form that contains a <xref:System.Windows.Forms.ListBox> named listBox1 and call this method from the form's constructor.</span></span>  
  
 [!code-cpp[System.Drawing.MiscExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.MiscExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.MiscExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawArc">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-333">绘制一段弧线，它表示由一对坐标、宽度和高度指定的椭圆部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-333">Draws an arc representing a portion of an ellipse specified by a pair of coordinates, a width, and a height.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawArc">
      <MemberSignature Language="C#" Value="public void DrawArc (System.Drawing.Pen pen, System.Drawing.Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawArc(class System.Drawing.Pen pen, valuetype System.Drawing.Rectangle rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawArc(System::Drawing::Pen ^ pen, System::Drawing::Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.DrawArc : System.Drawing.Pen * System.Drawing.Rectangle * single * single -&gt; unit" Usage="graphics.DrawArc (pen, rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-334">
            <see cref="T:System.Drawing.Pen" />，它确定弧线的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-334">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the arc.</span>
          </span>
        </param>
        <param name="rect">
          <span data-ttu-id="19ce0-335">
            <see cref="T:System.Drawing.RectangleF" /> 结构，它定义椭圆的边界。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-335">
              <see cref="T:System.Drawing.RectangleF" /> structure that defines the boundaries of the ellipse.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="19ce0-336">从 x 轴到弧线的起始点沿顺时针方向度量的角（以度为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-336">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="19ce0-337">从 <c>startAngle</c> 参数到弧线的结束点沿顺时针方向度量的角（以度为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-337">Angle in degrees measured clockwise from the <c>startAngle</c> parameter to ending point of the arc.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-338">绘制一段弧线，它表示 <see cref="T:System.Drawing.Rectangle" /> 结构指定的椭圆的一部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-338">Draws an arc representing a portion of an ellipse specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-339">此方法绘制一段弧线，即外围网络的椭圆的一部分。</span><span class="sxs-lookup"><span data-stu-id="19ce0-339">This method draws an arc that is a portion of the perimeter of an ellipse.</span></span> <span data-ttu-id="19ce0-340">椭圆的矩形的边界由定义。</span><span class="sxs-lookup"><span data-stu-id="19ce0-340">The ellipse is defined by the boundaries of a rectangle.</span></span> <span data-ttu-id="19ce0-341">弧是外围网络之间的椭圆部分`startAngle`参数和`startAngle`  +  `sweepAngle`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-341">The arc is the portion of the perimeter of the ellipse between the `startAngle` parameter and the `startAngle` + `sweepAngle` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-342">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-342">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-343">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-343">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-344">创建黑色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-344">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="19ce0-345">创建限定椭圆的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-345">Creates a rectangle to bound an ellipse.</span></span>  
  
-   <span data-ttu-id="19ce0-346">定义开始 （45 度为单位） 和扫描 （270 度为单位） 的角度。</span><span class="sxs-lookup"><span data-stu-id="19ce0-346">Defines the start (45 degrees) and sweep (270 degrees) angles.</span></span>  
  
-   <span data-ttu-id="19ce0-347">向屏幕绘制椭圆弧。</span><span class="sxs-lookup"><span data-stu-id="19ce0-347">Draws the elliptical arc to the screen.</span></span>  
  
 <span data-ttu-id="19ce0-348">结果是缺少之间的线段部分椭圆 + 和-x 轴的 45 度。</span><span class="sxs-lookup"><span data-stu-id="19ce0-348">The result is a partial ellipse missing a segment between + and - 45 degrees of the x axis.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-349">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-349">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawArc">
      <MemberSignature Language="C#" Value="public void DrawArc (System.Drawing.Pen pen, System.Drawing.RectangleF rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawArc(class System.Drawing.Pen pen, valuetype System.Drawing.RectangleF rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawArc(System::Drawing::Pen ^ pen, System::Drawing::RectangleF rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.DrawArc : System.Drawing.Pen * System.Drawing.RectangleF * single * single -&gt; unit" Usage="graphics.DrawArc (pen, rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-350">
            <see cref="T:System.Drawing.Pen" />，它确定弧线的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-350">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the arc.</span>
          </span>
        </param>
        <param name="rect">
          <span data-ttu-id="19ce0-351">
            <see cref="T:System.Drawing.RectangleF" /> 结构，它定义椭圆的边界。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-351">
              <see cref="T:System.Drawing.RectangleF" /> structure that defines the boundaries of the ellipse.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="19ce0-352">从 x 轴到弧线的起始点沿顺时针方向度量的角（以度为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-352">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="19ce0-353">从 <c>startAngle</c> 参数到弧线的结束点沿顺时针方向度量的角（以度为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-353">Angle in degrees measured clockwise from the <c>startAngle</c> parameter to ending point of the arc.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-354">绘制一段弧线，它表示 <see cref="T:System.Drawing.RectangleF" /> 结构指定的椭圆的一部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-354">Draws an arc representing a portion of an ellipse specified by a <see cref="T:System.Drawing.RectangleF" /> structure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-355">此方法绘制一段弧线，即外围网络的椭圆的一部分。</span><span class="sxs-lookup"><span data-stu-id="19ce0-355">This method draws an arc that is a portion of the perimeter of an ellipse.</span></span> <span data-ttu-id="19ce0-356">椭圆的矩形的边界由定义。</span><span class="sxs-lookup"><span data-stu-id="19ce0-356">The ellipse is defined by the boundaries of a rectangle.</span></span> <span data-ttu-id="19ce0-357">弧是外围网络之间的椭圆部分`startAngle`参数和`startAngle`  +  `sweepAngle`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-357">The arc is the portion of the perimeter of the ellipse between the `startAngle` parameter and the `startAngle` + `sweepAngle` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-358">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-358">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-359">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-359">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-360">创建黑色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-360">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="19ce0-361">创建限定椭圆的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-361">Creates a rectangle to bound an ellipse.</span></span>  
  
-   <span data-ttu-id="19ce0-362">定义开始 （45 度为单位） 和扫描 （270 度为单位） 的角度。</span><span class="sxs-lookup"><span data-stu-id="19ce0-362">Defines the start (45 degrees) and sweep (270 degrees) angles.</span></span>  
  
-   <span data-ttu-id="19ce0-363">向屏幕绘制椭圆弧。</span><span class="sxs-lookup"><span data-stu-id="19ce0-363">Draws the elliptical arc to the screen.</span></span>  
  
 <span data-ttu-id="19ce0-364">结果是缺少之间的线段部分椭圆 + 和-x 轴的 45 度。</span><span class="sxs-lookup"><span data-stu-id="19ce0-364">The result is a partial ellipse missing a segment between + and - 45 degrees of the x axis.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-365">
            <paramref name="pen" /> 为 <see langword="null" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-365">
              <paramref name="pen" /> is <see langword="null" /></span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawArc">
      <MemberSignature Language="C#" Value="public void DrawArc (System.Drawing.Pen pen, int x, int y, int width, int height, int startAngle, int sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawArc(class System.Drawing.Pen pen, int32 x, int32 y, int32 width, int32 height, int32 startAngle, int32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawArc(System::Drawing::Pen ^ pen, int x, int y, int width, int height, int startAngle, int sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.DrawArc : System.Drawing.Pen * int * int * int * int * int * int -&gt; unit" Usage="graphics.DrawArc (pen, x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="startAngle" Type="System.Int32" />
        <Parameter Name="sweepAngle" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-366">
            <see cref="T:System.Drawing.Pen" />，它确定弧线的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-366">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the arc.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="19ce0-367">定义椭圆的矩形的左上角的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-367">The x-coordinate of the upper-left corner of the rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="19ce0-368">定义椭圆的矩形的左上角的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-368">The y-coordinate of the upper-left corner of the rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="19ce0-369">定义椭圆的矩形的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-369">Width of the rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="19ce0-370">定义椭圆的矩形的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-370">Height of the rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="19ce0-371">从 x 轴到弧线的起始点沿顺时针方向度量的角（以度为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-371">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="19ce0-372">从 <c>startAngle</c> 参数到弧线的结束点沿顺时针方向度量的角（以度为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-372">Angle in degrees measured clockwise from the <c>startAngle</c> parameter to ending point of the arc.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-373">绘制一段弧线，它表示由一对坐标、宽度和高度指定的椭圆部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-373">Draws an arc representing a portion of an ellipse specified by a pair of coordinates, a width, and a height.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-374">此方法绘制一段弧线，即外围网络的椭圆的一部分。</span><span class="sxs-lookup"><span data-stu-id="19ce0-374">This method draws an arc that is a portion of the perimeter of an ellipse.</span></span> <span data-ttu-id="19ce0-375">椭圆的矩形的边界由定义。</span><span class="sxs-lookup"><span data-stu-id="19ce0-375">The ellipse is defined by the boundaries of a rectangle.</span></span> <span data-ttu-id="19ce0-376">弧是外围网络之间的椭圆部分`startAngle`参数和`startAngle`  +  `sweepAngle`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-376">The arc is the portion of the perimeter of the ellipse between the `startAngle` parameter and the `startAngle` + `sweepAngle` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-377">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-377">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-378">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-378">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-379">创建黑色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-379">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="19ce0-380">创建的位置和限定椭圆的矩形的大小。</span><span class="sxs-lookup"><span data-stu-id="19ce0-380">Creates the position and size of a rectangle to bound an ellipse.</span></span>  
  
-   <span data-ttu-id="19ce0-381">定义开始 （45 度为单位） 和扫描 （270 度为单位） 的角度。</span><span class="sxs-lookup"><span data-stu-id="19ce0-381">Defines the start (45 degrees) and sweep (270 degrees) angles.</span></span>  
  
-   <span data-ttu-id="19ce0-382">向屏幕绘制椭圆弧。</span><span class="sxs-lookup"><span data-stu-id="19ce0-382">Draws the elliptical arc to the screen.</span></span>  
  
 <span data-ttu-id="19ce0-383">结果是缺少之间的线段部分椭圆 + 和-x 轴的 45 度。</span><span class="sxs-lookup"><span data-stu-id="19ce0-383">The result is a partial ellipse missing a segment between + and - 45 degrees of the x axis.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-384">
            <paramref name="rects" /> 是一个长度为零的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-384">
              <paramref name="rects" /> is a zero-length array.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawArc">
      <MemberSignature Language="C#" Value="public void DrawArc (System.Drawing.Pen pen, float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawArc(class System.Drawing.Pen pen, float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawArc(System::Drawing::Pen ^ pen, float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.DrawArc : System.Drawing.Pen * single * single * single * single * single * single -&gt; unit" Usage="graphics.DrawArc (pen, x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-385">
            <see cref="T:System.Drawing.Pen" />，它确定弧线的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-385">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the arc.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="19ce0-386">定义椭圆的矩形的左上角的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-386">The x-coordinate of the upper-left corner of the rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="19ce0-387">定义椭圆的矩形的左上角的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-387">The y-coordinate of the upper-left corner of the rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="19ce0-388">定义椭圆的矩形的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-388">Width of the rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="19ce0-389">定义椭圆的矩形的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-389">Height of the rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="19ce0-390">从 x 轴到弧线的起始点沿顺时针方向度量的角（以度为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-390">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="19ce0-391">从 <c>startAngle</c> 参数到弧线的结束点沿顺时针方向度量的角（以度为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-391">Angle in degrees measured clockwise from the <c>startAngle</c> parameter to ending point of the arc.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-392">绘制一段弧线，它表示由一对坐标、宽度和高度指定的椭圆部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-392">Draws an arc representing a portion of an ellipse specified by a pair of coordinates, a width, and a height.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-393">此方法绘制一段弧线，即外围网络的椭圆的一部分。</span><span class="sxs-lookup"><span data-stu-id="19ce0-393">This method draws an arc that is a portion of the perimeter of an ellipse.</span></span> <span data-ttu-id="19ce0-394">椭圆的矩形的边界由定义。</span><span class="sxs-lookup"><span data-stu-id="19ce0-394">The ellipse is defined by the boundaries of a rectangle.</span></span> <span data-ttu-id="19ce0-395">弧是外围网络之间的椭圆部分`startAngle`参数和`startAngle`  +  `sweepAngle`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-395">The arc is the portion of the perimeter of the ellipse between the `startAngle` parameter and the `startAngle` + `sweepAngle` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-396">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-396">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-397">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-397">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-398">创建黑色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-398">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="19ce0-399">创建的位置和限定椭圆的矩形的大小。</span><span class="sxs-lookup"><span data-stu-id="19ce0-399">Creates the position and size of a rectangle to bound an ellipse.</span></span>  
  
-   <span data-ttu-id="19ce0-400">定义开始 （45 度为单位） 和扫描 （270 度为单位） 的角度。</span><span class="sxs-lookup"><span data-stu-id="19ce0-400">Defines the start (45 degrees) and sweep (270 degrees) angles.</span></span>  
  
-   <span data-ttu-id="19ce0-401">向屏幕绘制椭圆弧。</span><span class="sxs-lookup"><span data-stu-id="19ce0-401">Draws the elliptical arc to the screen.</span></span>  
  
 <span data-ttu-id="19ce0-402">结果是缺少之间的线段部分椭圆 + 和-x 轴的 45 度。</span><span class="sxs-lookup"><span data-stu-id="19ce0-402">The result is a partial ellipse missing a segment between + and - 45 degrees of the x axis.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#10)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#10)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-403">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-403">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawBezier">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-404">绘制由 4 个 <see cref="T:System.Drawing.Point" /> 结构定义的贝塞尔样条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-404">Draws a Bézier spline defined by four <see cref="T:System.Drawing.Point" /> structures.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawBezier">
      <MemberSignature Language="C#" Value="public void DrawBezier (System.Drawing.Pen pen, System.Drawing.Point pt1, System.Drawing.Point pt2, System.Drawing.Point pt3, System.Drawing.Point pt4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawBezier(class System.Drawing.Pen pen, valuetype System.Drawing.Point pt1, valuetype System.Drawing.Point pt2, valuetype System.Drawing.Point pt3, valuetype System.Drawing.Point pt4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawBezier(System::Drawing::Pen ^ pen, System::Drawing::Point pt1, System::Drawing::Point pt2, System::Drawing::Point pt3, System::Drawing::Point pt4);" />
      <MemberSignature Language="F#" Value="member this.DrawBezier : System.Drawing.Pen * System.Drawing.Point * System.Drawing.Point * System.Drawing.Point * System.Drawing.Point -&gt; unit" Usage="graphics.DrawBezier (pen, pt1, pt2, pt3, pt4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="pt1" Type="System.Drawing.Point" />
        <Parameter Name="pt2" Type="System.Drawing.Point" />
        <Parameter Name="pt3" Type="System.Drawing.Point" />
        <Parameter Name="pt4" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-405">
            <see cref="T:System.Drawing.Pen" /> 结构，它确定曲线的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-405">
              <see cref="T:System.Drawing.Pen" /> structure that determines the color, width, and style of the curve.</span>
          </span>
        </param>
        <param name="pt1">
          <span data-ttu-id="19ce0-406">
            <see cref="T:System.Drawing.Point" /> 结构，它表示曲线的起始点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-406">
              <see cref="T:System.Drawing.Point" /> structure that represents the starting point of the curve.</span>
          </span>
        </param>
        <param name="pt2">
          <span data-ttu-id="19ce0-407">
            <see cref="T:System.Drawing.Point" /> 结构，它表示曲线的第一个控制点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-407">
              <see cref="T:System.Drawing.Point" /> structure that represents the first control point for the curve.</span>
          </span>
        </param>
        <param name="pt3">
          <span data-ttu-id="19ce0-408">
            <see cref="T:System.Drawing.Point" /> 结构，它表示曲线的第二个控制点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-408">
              <see cref="T:System.Drawing.Point" /> structure that represents the second control point for the curve.</span>
          </span>
        </param>
        <param name="pt4">
          <span data-ttu-id="19ce0-409">
            <see cref="T:System.Drawing.Point" /> 结构，它表示曲线的结束点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-409">
              <see cref="T:System.Drawing.Point" /> structure that represents the ending point of the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-410">绘制由 4 个 <see cref="T:System.Drawing.Point" /> 结构定义的贝塞尔样条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-410">Draws a Bézier spline defined by four <see cref="T:System.Drawing.Point" /> structures.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-411">贝塞尔曲线的第一个点从绘制到第四个点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-411">The Bézier curve is drawn from the first point to the fourth point.</span></span> <span data-ttu-id="19ce0-412">第二个和第三个点是确定曲线的形状的控制点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-412">The second and third points are control points that determine the shape of the curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-413">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-413">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-414">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-414">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-415">创建黑色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-415">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="19ce0-416">创建开始日期、 结束时和曲线的两个控制点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-416">Creates the start, end, and two control points for the curve.</span></span>  
  
-   <span data-ttu-id="19ce0-417">将贝塞尔曲线绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-417">Draws the Bézier curve to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#11](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#11)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#11)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-418">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-418">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawBezier">
      <MemberSignature Language="C#" Value="public void DrawBezier (System.Drawing.Pen pen, System.Drawing.PointF pt1, System.Drawing.PointF pt2, System.Drawing.PointF pt3, System.Drawing.PointF pt4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawBezier(class System.Drawing.Pen pen, valuetype System.Drawing.PointF pt1, valuetype System.Drawing.PointF pt2, valuetype System.Drawing.PointF pt3, valuetype System.Drawing.PointF pt4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawBezier(System::Drawing::Pen ^ pen, System::Drawing::PointF pt1, System::Drawing::PointF pt2, System::Drawing::PointF pt3, System::Drawing::PointF pt4);" />
      <MemberSignature Language="F#" Value="member this.DrawBezier : System.Drawing.Pen * System.Drawing.PointF * System.Drawing.PointF * System.Drawing.PointF * System.Drawing.PointF -&gt; unit" Usage="graphics.DrawBezier (pen, pt1, pt2, pt3, pt4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="pt1" Type="System.Drawing.PointF" />
        <Parameter Name="pt2" Type="System.Drawing.PointF" />
        <Parameter Name="pt3" Type="System.Drawing.PointF" />
        <Parameter Name="pt4" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-419">
            <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-419">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</span>
          </span>
        </param>
        <param name="pt1">
          <span data-ttu-id="19ce0-420">
            <see cref="T:System.Drawing.PointF" /> 结构，它表示曲线的起始点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-420">
              <see cref="T:System.Drawing.PointF" /> structure that represents the starting point of the curve.</span>
          </span>
        </param>
        <param name="pt2">
          <span data-ttu-id="19ce0-421">
            <see cref="T:System.Drawing.PointF" /> 结构，它表示曲线的第一个控制点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-421">
              <see cref="T:System.Drawing.PointF" /> structure that represents the first control point for the curve.</span>
          </span>
        </param>
        <param name="pt3">
          <span data-ttu-id="19ce0-422">
            <see cref="T:System.Drawing.PointF" /> 结构，它表示曲线的第二个控制点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-422">
              <see cref="T:System.Drawing.PointF" /> structure that represents the second control point for the curve.</span>
          </span>
        </param>
        <param name="pt4">
          <span data-ttu-id="19ce0-423">
            <see cref="T:System.Drawing.PointF" /> 结构，它表示曲线的结束点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-423">
              <see cref="T:System.Drawing.PointF" /> structure that represents the ending point of the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-424">绘制由 4 个 <see cref="T:System.Drawing.PointF" /> 结构定义的贝塞尔样条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-424">Draws a Bézier spline defined by four <see cref="T:System.Drawing.PointF" /> structures.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-425">从第一个点到四个点绘制贝塞尔样条。</span><span class="sxs-lookup"><span data-stu-id="19ce0-425">The Bézier spline is drawn from the first point to the fourth point.</span></span> <span data-ttu-id="19ce0-426">第二个和第三个点是确定曲线的形状的控制点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-426">The second and third points are control points that determine the shape of the curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-427">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-427">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-428">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-428">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-429">创建黑色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-429">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="19ce0-430">创建开始日期、 结束时和曲线的两个控制点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-430">Creates the start, end, and two control points for the curve.</span></span>  
  
-   <span data-ttu-id="19ce0-431">将贝塞尔曲线绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-431">Draws the Bézier curve to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#12](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#12)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#12)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-432">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-432">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawBezier">
      <MemberSignature Language="C#" Value="public void DrawBezier (System.Drawing.Pen pen, float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawBezier(class System.Drawing.Pen pen, float32 x1, float32 y1, float32 x2, float32 y2, float32 x3, float32 y3, float32 x4, float32 y4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawBezier(System::Drawing::Pen ^ pen, float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);" />
      <MemberSignature Language="F#" Value="member this.DrawBezier : System.Drawing.Pen * single * single * single * single * single * single * single * single -&gt; unit" Usage="graphics.DrawBezier (pen, x1, y1, x2, y2, x3, y3, x4, y4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="x2" Type="System.Single" />
        <Parameter Name="y2" Type="System.Single" />
        <Parameter Name="x3" Type="System.Single" />
        <Parameter Name="y3" Type="System.Single" />
        <Parameter Name="x4" Type="System.Single" />
        <Parameter Name="y4" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-433">
            <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-433">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</span>
          </span>
        </param>
        <param name="x1">
          <span data-ttu-id="19ce0-434">曲线起始点的 X 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-434">The x-coordinate of the starting point of the curve.</span>
          </span>
        </param>
        <param name="y1">
          <span data-ttu-id="19ce0-435">曲线起始点的 Y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-435">The y-coordinate of the starting point of the curve.</span>
          </span>
        </param>
        <param name="x2">
          <span data-ttu-id="19ce0-436">曲线的第一个控制点的 X 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-436">The x-coordinate of the first control point of the curve.</span>
          </span>
        </param>
        <param name="y2">
          <span data-ttu-id="19ce0-437">曲线的第一个控制点的 Y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-437">The y-coordinate of the first control point of the curve.</span>
          </span>
        </param>
        <param name="x3">
          <span data-ttu-id="19ce0-438">曲线的第二个控制点的 X 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-438">The x-coordinate of the second control point of the curve.</span>
          </span>
        </param>
        <param name="y3">
          <span data-ttu-id="19ce0-439">曲线的第二个控制点的 Y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-439">The y-coordinate of the second control point of the curve.</span>
          </span>
        </param>
        <param name="x4">
          <span data-ttu-id="19ce0-440">曲线的结束点的 X 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-440">The x-coordinate of the ending point of the curve.</span>
          </span>
        </param>
        <param name="y4">
          <span data-ttu-id="19ce0-441">曲线的结束点的 Y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-441">The y-coordinate of the ending point of the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-442">绘制由四个表示点的有序坐标对定义的贝塞尔样条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-442">Draws a Bézier spline defined by four ordered pairs of coordinates that represent points.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-443">从第一个点到四个点绘制贝塞尔样条。</span><span class="sxs-lookup"><span data-stu-id="19ce0-443">The Bézier spline is drawn from the first point to the fourth point.</span></span> <span data-ttu-id="19ce0-444">第二个和第三个点是确定曲线的形状的控制点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-444">The second and third points are control points that determine the shape of the curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-445">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-445">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-446">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-446">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-447">创建黑色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-447">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="19ce0-448">创建开始、 结束时和曲线的两个控制点的坐标。</span><span class="sxs-lookup"><span data-stu-id="19ce0-448">Creates the coordinates of the start, end, and two control points for the curve.</span></span>  
  
-   <span data-ttu-id="19ce0-449">将贝塞尔曲线绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-449">Draws the Bézier curve to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#13](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#13)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#13)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-450">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-450">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawBeziers">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-451">用 <see cref="T:System.Drawing.Point" /> 结构数组绘制一系列贝塞尔样条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-451">Draws a series of Bézier splines from an array of <see cref="T:System.Drawing.Point" /> structures.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawBeziers">
      <MemberSignature Language="C#" Value="public void DrawBeziers (System.Drawing.Pen pen, System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawBeziers(class System.Drawing.Pen pen, valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawBeziers(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.DrawBeziers : System.Drawing.Pen * System.Drawing.Point[] -&gt; unit" Usage="graphics.DrawBeziers (pen, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-452">
            <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-452">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</span>
          </span>
        </param>
        <param name="points">
          <span data-ttu-id="19ce0-453">
            <see cref="T:System.Drawing.Point" /> 结构的数组，这些结构表示确定曲线的点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-453">Array of <see cref="T:System.Drawing.Point" /> structures that represent the points that determine the curve.</span>
          </span>
          <span data-ttu-id="19ce0-454">此数组中的点数应为 3 的倍数加 1，如 4、7 或 10。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-454">The number of points in the array should be a multiple of 3 plus 1, such as 4, 7, or 10.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-455">用 <see cref="T:System.Drawing.Point" /> 结构数组绘制一系列贝塞尔样条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-455">Draws a series of Bézier splines from an array of <see cref="T:System.Drawing.Point" /> structures.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-456">数组中的点的数量应为 3 的倍数加 1，因为第一个样条需要有 4 点，并且任何其他样条需要 3 点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-456">The number of points in the array should be a multiple of 3 plus 1 because the first spline requires 4 points and any other splines require 3 points each.</span></span> <span data-ttu-id="19ce0-457">第一个贝塞尔样条是从第一个点到点数组中的第四个点绘制的。</span><span class="sxs-lookup"><span data-stu-id="19ce0-457">The first Bézier spline is drawn from the first point to the fourth point in the point array.</span></span> <span data-ttu-id="19ce0-458">第二个和第三个点是确定曲线的形状的控制点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-458">The second and third points are control points that determine the shape of the curve.</span></span> <span data-ttu-id="19ce0-459">每个后续曲线需要完全三个点： 两个控制点和结束点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-459">Each subsequent curve needs exactly three more points: two more control points and an ending point.</span></span> <span data-ttu-id="19ce0-460">前一条曲线的结束点用作每个其他曲线的起始点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-460">The ending point of the previous curve is used as the starting point for each additional curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-461">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-461">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-462">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-462">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-463">创建黑色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-463">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="19ce0-464">创建开始、 结束时，和第二条曲线的两个控点和第一条曲线和终结点的两个控制点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-464">Creates the start, end, and two control points for a first curve and endpoint and two control points for a second curve.</span></span>  
  
-   <span data-ttu-id="19ce0-465">向屏幕绘制连续的贝塞尔曲线。</span><span class="sxs-lookup"><span data-stu-id="19ce0-465">Draws the successive Bézier curves to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#14](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#14)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#14)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-466">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-466">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-467">- 或 -  <paramref name="points" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-467">-or-  <paramref name="points" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawBeziers">
      <MemberSignature Language="C#" Value="public void DrawBeziers (System.Drawing.Pen pen, System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawBeziers(class System.Drawing.Pen pen, valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawBeziers(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.DrawBeziers : System.Drawing.Pen * System.Drawing.PointF[] -&gt; unit" Usage="graphics.DrawBeziers (pen, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-468">
            <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-468">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</span>
          </span>
        </param>
        <param name="points">
          <span data-ttu-id="19ce0-469">
            <see cref="T:System.Drawing.PointF" /> 结构的数组，这些结构表示确定曲线的点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-469">Array of <see cref="T:System.Drawing.PointF" /> structures that represent the points that determine the curve.</span>
          </span>
          <span data-ttu-id="19ce0-470">此数组中的点数应为 3 的倍数加 1，如 4、7 或 10。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-470">The number of points in the array should be a multiple of 3 plus 1, such as 4, 7, or 10.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-471">用 <see cref="T:System.Drawing.PointF" /> 结构数组绘制一系列贝塞尔样条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-471">Draws a series of Bézier splines from an array of <see cref="T:System.Drawing.PointF" /> structures.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-472">数组中的点的数量应为 3 的倍数加 1，因为第一个样条需要有 4 点，并且任何其他样条需要 3 点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-472">The number of points in the array should be a multiple of 3 plus 1 because the first spline requires 4 points and any other splines require 3 points each.</span></span> <span data-ttu-id="19ce0-473">第一个的贝塞尔曲线的第一个点从绘制到的点数组中的第四个点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-473">The first Bézier curve is drawn from the first point to the fourth point in the point array.</span></span> <span data-ttu-id="19ce0-474">第二个和第三个点是确定曲线的形状的控制点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-474">The second and third points are control points that determine the shape of the curve.</span></span> <span data-ttu-id="19ce0-475">每个后续曲线需要完全三个点： 两个控制点和结束点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-475">Each subsequent curve needs exactly three more points: two more control points and an ending point.</span></span> <span data-ttu-id="19ce0-476">前一条曲线的结束点用作每个其他曲线的起始点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-476">The ending point of the previous curve is used as the starting point for each additional curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-477">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-477">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-478">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-478">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-479">创建黑色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-479">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="19ce0-480">创建开始、 结束时，和第二条曲线的两个控点和第一条曲线和终结点的两个控制点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-480">Creates the start, end, and two control points for a first curve and endpoint and two control points for a second curve.</span></span>  
  
-   <span data-ttu-id="19ce0-481">向屏幕绘制连续的贝塞尔曲线。</span><span class="sxs-lookup"><span data-stu-id="19ce0-481">Draws the successive Bézier curves to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#15)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#15)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-482">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-482">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-483">- 或 -  <paramref name="points" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-483">-or-  <paramref name="points" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawClosedCurve">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-484">绘制由 <see cref="T:System.Drawing.Point" /> 结构的数组定义的闭合基数样条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-484">Draws a closed cardinal spline defined by an array of <see cref="T:System.Drawing.Point" /> structures.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawClosedCurve">
      <MemberSignature Language="C#" Value="public void DrawClosedCurve (System.Drawing.Pen pen, System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawClosedCurve(class System.Drawing.Pen pen, valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawClosedCurve(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.DrawClosedCurve : System.Drawing.Pen * System.Drawing.Point[] -&gt; unit" Usage="graphics.DrawClosedCurve (pen, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-485">
            <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-485">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and height of the curve.</span>
          </span>
        </param>
        <param name="points">
          <span data-ttu-id="19ce0-486">
            <see cref="T:System.Drawing.Point" /> 结构数组，这些结构定义样条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-486">Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-487">绘制由 <see cref="T:System.Drawing.Point" /> 结构的数组定义的闭合基数样条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-487">Draws a closed cardinal spline defined by an array of <see cref="T:System.Drawing.Point" /> structures.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-488">此方法绘制经过数组中每个点的闭合基数样条。</span><span class="sxs-lookup"><span data-stu-id="19ce0-488">This method draws a closed cardinal spline that passes through each point in the array.</span></span> <span data-ttu-id="19ce0-489">如果最后一个点不匹配的第一个点，附加曲线段是从最后一个点添加到的第一个点，若要关闭图中。</span><span class="sxs-lookup"><span data-stu-id="19ce0-489">If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close the figure.</span></span>  
  
 <span data-ttu-id="19ce0-490">点的数组必须包含至少四个<xref:System.Drawing.Point>结构。</span><span class="sxs-lookup"><span data-stu-id="19ce0-490">The array of points must contain at least four <xref:System.Drawing.Point> structures.</span></span>  
  
 <span data-ttu-id="19ce0-491">此方法使用默认张力 0.5。</span><span class="sxs-lookup"><span data-stu-id="19ce0-491">This method uses a default tension of 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-492">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-492">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-493">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-493">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-494">创建红色和绿色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-494">Creates red and green pens.</span></span>  
  
-   <span data-ttu-id="19ce0-495">创建七个点来定义曲线。</span><span class="sxs-lookup"><span data-stu-id="19ce0-495">Creates seven points to define a curve.</span></span>  
  
-   <span data-ttu-id="19ce0-496">若要形成闭合的多边形的七个点之间绘制七条红色直线。</span><span class="sxs-lookup"><span data-stu-id="19ce0-496">Draws seven red straight lines between the seven points to form a closed polygon.</span></span>  
  
-   <span data-ttu-id="19ce0-497">绘制一个绿色闭合的曲线通过七个点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-497">Draws a green closed curve through the seven points.</span></span>  
  
 <span data-ttu-id="19ce0-498">该方法使用默认张力 0.5。</span><span class="sxs-lookup"><span data-stu-id="19ce0-498">The method uses a default tension of 0.5.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#16](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#16)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#16](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#16)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#16](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-499">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-499">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-500">- 或 -  <paramref name="points" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-500">-or-  <paramref name="points" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawClosedCurve">
      <MemberSignature Language="C#" Value="public void DrawClosedCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawClosedCurve(class System.Drawing.Pen pen, valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawClosedCurve(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.DrawClosedCurve : System.Drawing.Pen * System.Drawing.PointF[] -&gt; unit" Usage="graphics.DrawClosedCurve (pen, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-501">
            <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-501">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and height of the curve.</span>
          </span>
        </param>
        <param name="points">
          <span data-ttu-id="19ce0-502">
            <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构定义样条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-502">Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-503">绘制由 <see cref="T:System.Drawing.PointF" /> 结构的数组定义的闭合基数样条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-503">Draws a closed cardinal spline defined by an array of <see cref="T:System.Drawing.PointF" /> structures.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-504">此方法绘制经过数组中每个点的闭合基数样条。</span><span class="sxs-lookup"><span data-stu-id="19ce0-504">This method draws a closed cardinal spline that passes through each point in the array.</span></span> <span data-ttu-id="19ce0-505">如果最后一个点不匹配的第一个点，则将附加曲线段添加在最后一个点的第一个点，以将其关闭。</span><span class="sxs-lookup"><span data-stu-id="19ce0-505">If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.</span></span>  
  
 <span data-ttu-id="19ce0-506">点的数组必须包含至少四个<xref:System.Drawing.PointF>结构。</span><span class="sxs-lookup"><span data-stu-id="19ce0-506">The array of points must contain at least four <xref:System.Drawing.PointF> structures.</span></span>  
  
 <span data-ttu-id="19ce0-507">此方法使用默认张力 0.5。</span><span class="sxs-lookup"><span data-stu-id="19ce0-507">This method uses a default tension of 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-508">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-508">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-509">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-509">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-510">创建红色和绿色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-510">Creates red and green pens.</span></span>  
  
-   <span data-ttu-id="19ce0-511">创建七个点来定义曲线。</span><span class="sxs-lookup"><span data-stu-id="19ce0-511">Creates seven points to define a curve.</span></span>  
  
-   <span data-ttu-id="19ce0-512">若要形成闭合的多边形的七个点之间绘制七条红色直线。</span><span class="sxs-lookup"><span data-stu-id="19ce0-512">Draws seven red straight lines between the seven points to form a closed polygon.</span></span>  
  
-   <span data-ttu-id="19ce0-513">绘制一个绿色闭合的曲线通过七个点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-513">Draws a green closed curve through the seven points.</span></span>  
  
 <span data-ttu-id="19ce0-514">该方法使用默认张力 0.5。</span><span class="sxs-lookup"><span data-stu-id="19ce0-514">The method uses a default tension of 0.5.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#18](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#18)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#18](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#18)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#18](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-515">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-515">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-516">- 或 -  <paramref name="points" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-516">-or-  <paramref name="points" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawClosedCurve">
      <MemberSignature Language="C#" Value="public void DrawClosedCurve (System.Drawing.Pen pen, System.Drawing.Point[] points, float tension, System.Drawing.Drawing2D.FillMode fillmode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawClosedCurve(class System.Drawing.Pen pen, valuetype System.Drawing.Point[] points, float32 tension, valuetype System.Drawing.Drawing2D.FillMode fillmode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawClosedCurve(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::Point&gt; ^ points, float tension, System::Drawing::Drawing2D::FillMode fillmode);" />
      <MemberSignature Language="F#" Value="member this.DrawClosedCurve : System.Drawing.Pen * System.Drawing.Point[] * single * System.Drawing.Drawing2D.FillMode -&gt; unit" Usage="graphics.DrawClosedCurve (pen, points, tension, fillmode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="tension" Type="System.Single" />
        <Parameter Name="fillmode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-517">
            <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-517">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and height of the curve.</span>
          </span>
        </param>
        <param name="points">
          <span data-ttu-id="19ce0-518">
            <see cref="T:System.Drawing.Point" /> 结构数组，这些结构定义样条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-518">Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="19ce0-519">大于或等于 0.0F 的值，该值指定曲线的张力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-519">Value greater than or equal to 0.0F that specifies the tension of the curve.</span>
          </span>
        </param>
        <param name="fillmode">
          <span data-ttu-id="19ce0-520">
            <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举的成员，它确定填充曲线的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-520">Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the curve is filled.</span>
          </span>
          <span data-ttu-id="19ce0-521">需要此参数但被忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-521">This parameter is required but ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-522">使用指定的张力绘制由 <see cref="T:System.Drawing.Point" /> 结构数组定义的闭合基数样条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-522">Draws a closed cardinal spline defined by an array of <see cref="T:System.Drawing.Point" /> structures using a specified tension.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-523">此方法绘制经过数组中每个点的闭合基数样条。</span><span class="sxs-lookup"><span data-stu-id="19ce0-523">This method draws a closed cardinal spline that passes through each point in the array.</span></span> <span data-ttu-id="19ce0-524">如果最后一个点不匹配的第一个点，则将附加曲线段添加在最后一个点的第一个点，以将其关闭。</span><span class="sxs-lookup"><span data-stu-id="19ce0-524">If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.</span></span>  
  
 <span data-ttu-id="19ce0-525">点的数组必须包含至少四个<xref:System.Drawing.Point>结构。</span><span class="sxs-lookup"><span data-stu-id="19ce0-525">The array of points must contain at least four <xref:System.Drawing.Point> structures.</span></span>  
  
 <span data-ttu-id="19ce0-526">`tension`参数确定样条的形状。</span><span class="sxs-lookup"><span data-stu-id="19ce0-526">The `tension` parameter determines the shape of the spline.</span></span> <span data-ttu-id="19ce0-527">如果值`tension`参数为 0.0 f 时，此方法用于绘制直线段连接的点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-527">If the value of the `tension` parameter is 0.0F, this method draws straight line segments to connect the points.</span></span> <span data-ttu-id="19ce0-528">通常情况下，`tension`参数是否小于或等于 1.0 f。</span><span class="sxs-lookup"><span data-stu-id="19ce0-528">Usually, the `tension` parameter is less than or equal to 1.0F.</span></span> <span data-ttu-id="19ce0-529">通过 1.0 f 的值不会生成不寻常的结果。</span><span class="sxs-lookup"><span data-stu-id="19ce0-529">Values over 1.0F produce unusual results.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-530">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-530">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-531">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-531">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-532">创建红色和绿色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-532">Creates red and green pens.</span></span>  
  
-   <span data-ttu-id="19ce0-533">创建七个点来定义曲线。</span><span class="sxs-lookup"><span data-stu-id="19ce0-533">Creates seven points to define the curve.</span></span>  
  
-   <span data-ttu-id="19ce0-534">以形成一个多边形七个点之间绘制七条红色直线。</span><span class="sxs-lookup"><span data-stu-id="19ce0-534">Draws seven red straight lines between the seven points to form a polygon.</span></span>  
  
-   <span data-ttu-id="19ce0-535">创建张力和填充模式设置。</span><span class="sxs-lookup"><span data-stu-id="19ce0-535">Creates tension and fill mode settings.</span></span>  
  
-   <span data-ttu-id="19ce0-536">绘制一个绿色闭合的曲线通过七个点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-536">Draws a green closed curve through the seven points.</span></span>  
  
 <span data-ttu-id="19ce0-537">方法使用 1.0 张力，并且将填充模式设置为`FillMode.Alternate`。</span><span class="sxs-lookup"><span data-stu-id="19ce0-537">The method uses a tension of 1.0 and sets the fill mode to `FillMode.Alternate`.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#17](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#17)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#17](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#17)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#17](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-538">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-538">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-539">- 或 -  <paramref name="points" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-539">-or-  <paramref name="points" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawClosedCurve">
      <MemberSignature Language="C#" Value="public void DrawClosedCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points, float tension, System.Drawing.Drawing2D.FillMode fillmode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawClosedCurve(class System.Drawing.Pen pen, valuetype System.Drawing.PointF[] points, float32 tension, valuetype System.Drawing.Drawing2D.FillMode fillmode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawClosedCurve(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::PointF&gt; ^ points, float tension, System::Drawing::Drawing2D::FillMode fillmode);" />
      <MemberSignature Language="F#" Value="member this.DrawClosedCurve : System.Drawing.Pen * System.Drawing.PointF[] * single * System.Drawing.Drawing2D.FillMode -&gt; unit" Usage="graphics.DrawClosedCurve (pen, points, tension, fillmode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="tension" Type="System.Single" />
        <Parameter Name="fillmode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-540">
            <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-540">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and height of the curve.</span>
          </span>
        </param>
        <param name="points">
          <span data-ttu-id="19ce0-541">
            <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构定义样条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-541">Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="19ce0-542">大于或等于 0.0F 的值，该值指定曲线的张力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-542">Value greater than or equal to 0.0F that specifies the tension of the curve.</span>
          </span>
        </param>
        <param name="fillmode">
          <span data-ttu-id="19ce0-543">
            <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举的成员，它确定填充曲线的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-543">Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the curve is filled.</span>
          </span>
          <span data-ttu-id="19ce0-544">需要此参数但被忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-544">This parameter is required but is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-545">使用指定的张力绘制由 <see cref="T:System.Drawing.PointF" /> 结构数组定义的闭合基数样条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-545">Draws a closed cardinal spline defined by an array of <see cref="T:System.Drawing.PointF" /> structures using a specified tension.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-546">此方法绘制经过数组中每个点的闭合基数样条。</span><span class="sxs-lookup"><span data-stu-id="19ce0-546">This method draws a closed cardinal spline that passes through each point in the array.</span></span> <span data-ttu-id="19ce0-547">如果最后一个点不匹配的第一个点，则将附加曲线段添加在最后一个点的第一个点，以将其关闭。</span><span class="sxs-lookup"><span data-stu-id="19ce0-547">If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.</span></span>  
  
 <span data-ttu-id="19ce0-548">点的数组必须包含至少四个<xref:System.Drawing.PointF>结构。</span><span class="sxs-lookup"><span data-stu-id="19ce0-548">The array of points must contain at least four <xref:System.Drawing.PointF> structures.</span></span>  
  
 <span data-ttu-id="19ce0-549">`tension`参数确定样条的形状。</span><span class="sxs-lookup"><span data-stu-id="19ce0-549">The `tension` parameter determines the shape of the spline.</span></span> <span data-ttu-id="19ce0-550">如果值`tension`参数为 0.0 f 时，此方法用于绘制直线段连接的点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-550">If the value of the `tension` parameter is 0.0F, this method draws straight line segments to connect the points.</span></span> <span data-ttu-id="19ce0-551">通常情况下，`tension`参数是否小于或等于 1.0 f。</span><span class="sxs-lookup"><span data-stu-id="19ce0-551">Usually, the `tension` parameter is less than or equal to 1.0F.</span></span> <span data-ttu-id="19ce0-552">通过 1.0 f 的值不会生成不寻常的结果。</span><span class="sxs-lookup"><span data-stu-id="19ce0-552">Values over 1.0F produce unusual results.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-553">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-553">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-554">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-554">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-555">创建红色和绿色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-555">Creates red and green pens.</span></span>  
  
-   <span data-ttu-id="19ce0-556">创建七个点来定义曲线。</span><span class="sxs-lookup"><span data-stu-id="19ce0-556">Creates seven points to define the curve.</span></span>  
  
-   <span data-ttu-id="19ce0-557">以形成一个多边形七个点之间绘制七条红色直线。</span><span class="sxs-lookup"><span data-stu-id="19ce0-557">Draws seven red straight lines between the seven points to form a polygon.</span></span>  
  
-   <span data-ttu-id="19ce0-558">创建张力和填充模式设置。</span><span class="sxs-lookup"><span data-stu-id="19ce0-558">Creates tension and fill mode settings.</span></span>  
  
-   <span data-ttu-id="19ce0-559">绘制一个绿色闭合的曲线通过七个点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-559">Draws a green closed curve through the seven points.</span></span>  
  
 <span data-ttu-id="19ce0-560">方法使用 1.0 张力，并且将填充模式设置为`FillMode.Alternate`。</span><span class="sxs-lookup"><span data-stu-id="19ce0-560">The method uses a tension of 1.0 and sets the fill mode to `FillMode.Alternate`.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#19](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#19)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#19](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#19)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#19](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-561">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-561">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-562">- 或 -  <paramref name="points" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-562">-or-  <paramref name="points" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawCurve">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-563">绘制经过一组指定的 <see cref="T:System.Drawing.Point" /> 结构的基数样条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-563">Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.Point" /> structures.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawCurve">
      <MemberSignature Language="C#" Value="public void DrawCurve (System.Drawing.Pen pen, System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawCurve(class System.Drawing.Pen pen, valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawCurve(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.DrawCurve : System.Drawing.Pen * System.Drawing.Point[] -&gt; unit" Usage="graphics.DrawCurve (pen, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-564">
            <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-564">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and height of the curve.</span>
          </span>
        </param>
        <param name="points">
          <span data-ttu-id="19ce0-565">
            <see cref="T:System.Drawing.Point" /> 结构数组，这些结构定义样条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-565">Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-566">绘制经过一组指定的 <see cref="T:System.Drawing.Point" /> 结构的基数样条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-566">Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.Point" /> structures.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-567">此方法绘制经过数组中每个点的基数样条。</span><span class="sxs-lookup"><span data-stu-id="19ce0-567">This method draws a cardinal spline that passes through each point in the array.</span></span>  
  
 <span data-ttu-id="19ce0-568">点的数组必须包含至少三个<xref:System.Drawing.Point>要绘制曲线的结构。</span><span class="sxs-lookup"><span data-stu-id="19ce0-568">The array of points must contain at least three <xref:System.Drawing.Point> structures for a curve to be drawn.</span></span>  
  
 <span data-ttu-id="19ce0-569">此方法使用默认张力 0.5。</span><span class="sxs-lookup"><span data-stu-id="19ce0-569">This method uses a default tension of 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-570">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-570">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-571">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-571">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-572">创建红色和绿色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-572">Creates red and green pens.</span></span>  
  
-   <span data-ttu-id="19ce0-573">创建七个点来定义曲线。</span><span class="sxs-lookup"><span data-stu-id="19ce0-573">Creates seven points to define a curve.</span></span>  
  
-   <span data-ttu-id="19ce0-574">若要构造不完整的多边形的七个点之间绘制六个红色的直线。</span><span class="sxs-lookup"><span data-stu-id="19ce0-574">Draws six red straight lines between the seven points to form an incomplete polygon.</span></span>  
  
-   <span data-ttu-id="19ce0-575">绘制非闭合的绿色曲线通过七个点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-575">Draws an open green curve through the seven points.</span></span>  
  
 <span data-ttu-id="19ce0-576">该方法使用默认张力 0.5。</span><span class="sxs-lookup"><span data-stu-id="19ce0-576">The method uses a default tension of 0.5.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#20)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#20)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-577">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-577">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-578">- 或 -  <paramref name="points" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-578">-or-  <paramref name="points" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawCurve">
      <MemberSignature Language="C#" Value="public void DrawCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawCurve(class System.Drawing.Pen pen, valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawCurve(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.DrawCurve : System.Drawing.Pen * System.Drawing.PointF[] -&gt; unit" Usage="graphics.DrawCurve (pen, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-579">
            <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-579">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</span>
          </span>
        </param>
        <param name="points">
          <span data-ttu-id="19ce0-580">
            <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构定义样条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-580">Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-581">绘制经过一组指定的 <see cref="T:System.Drawing.PointF" /> 结构的基数样条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-581">Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.PointF" /> structures.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-582">此方法绘制经过数组中每个点的基数样条。</span><span class="sxs-lookup"><span data-stu-id="19ce0-582">This method draws a cardinal spline that passes through each point in the array.</span></span>  
  
 <span data-ttu-id="19ce0-583">点的数组必须包含至少三个<xref:System.Drawing.PointF>要绘制曲线的结构。</span><span class="sxs-lookup"><span data-stu-id="19ce0-583">The array of points must contain at least three <xref:System.Drawing.PointF> structures for a curve to be drawn.</span></span>  
  
 <span data-ttu-id="19ce0-584">此方法使用默认张力 0.5。</span><span class="sxs-lookup"><span data-stu-id="19ce0-584">This method uses a default tension of 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-585">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-585">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-586">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-586">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-587">创建红色和绿色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-587">Creates red and green pens.</span></span>  
  
-   <span data-ttu-id="19ce0-588">创建七个点来定义曲线。</span><span class="sxs-lookup"><span data-stu-id="19ce0-588">Creates seven points to define a curve.</span></span>  
  
-   <span data-ttu-id="19ce0-589">若要构造不完整的多边形的七个点之间绘制六个红色的直线。</span><span class="sxs-lookup"><span data-stu-id="19ce0-589">Draws six red straight lines between the seven points to form an incomplete polygon.</span></span>  
  
-   <span data-ttu-id="19ce0-590">绘制非闭合的绿色曲线通过七个点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-590">Draws an open green curve through the seven points.</span></span>  
  
 <span data-ttu-id="19ce0-591">该方法使用默认张力 0.5。</span><span class="sxs-lookup"><span data-stu-id="19ce0-591">The method uses a default tension of 0.5.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#23](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#23)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#23](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#23)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#23](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-592">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-592">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-593">- 或 -  <paramref name="points" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-593">-or-  <paramref name="points" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawCurve">
      <MemberSignature Language="C#" Value="public void DrawCurve (System.Drawing.Pen pen, System.Drawing.Point[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawCurve(class System.Drawing.Pen pen, valuetype System.Drawing.Point[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawCurve(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::Point&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.DrawCurve : System.Drawing.Pen * System.Drawing.Point[] * single -&gt; unit" Usage="graphics.DrawCurve (pen, points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-594">
            <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-594">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</span>
          </span>
        </param>
        <param name="points">
          <span data-ttu-id="19ce0-595">
            <see cref="T:System.Drawing.Point" /> 结构数组，这些结构定义样条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-595">Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="19ce0-596">大于或等于 0.0F 的值，该值指定曲线的张力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-596">Value greater than or equal to 0.0F that specifies the tension of the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-597">使用指定的张力绘制经过一组指定的 <see cref="T:System.Drawing.Point" /> 结构的基数样条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-597">Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.Point" /> structures using a specified tension.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-598">此方法绘制经过数组中每个点的基数样条。</span><span class="sxs-lookup"><span data-stu-id="19ce0-598">This method draws a cardinal spline that passes through each point in the array.</span></span>  
  
 <span data-ttu-id="19ce0-599">点的数组必须包含至少三个<xref:System.Drawing.Point>要绘制曲线的结构。</span><span class="sxs-lookup"><span data-stu-id="19ce0-599">The array of points must contain at least three <xref:System.Drawing.Point> structures for a curve to be drawn.</span></span>  
  
 <span data-ttu-id="19ce0-600">`tension`参数确定样条的形状。</span><span class="sxs-lookup"><span data-stu-id="19ce0-600">The `tension` parameter determines the shape of the spline.</span></span> <span data-ttu-id="19ce0-601">如果值`tension`参数为 0.0 f 时，此方法用于绘制直线段连接的点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-601">If the value of the `tension` parameter is 0.0F, this method draws straight line segments to connect the points.</span></span> <span data-ttu-id="19ce0-602">通常情况下，`tension`参数是否小于或等于 1.0 f。</span><span class="sxs-lookup"><span data-stu-id="19ce0-602">Usually, the `tension` parameter is less than or equal to 1.0F.</span></span> <span data-ttu-id="19ce0-603">通过 1.0 f 的值不会生成不寻常的结果。</span><span class="sxs-lookup"><span data-stu-id="19ce0-603">Values over 1.0F produce unusual results.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-604">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-604">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-605">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-605">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-606">创建红色和绿色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-606">Creates red and green pens.</span></span>  
  
-   <span data-ttu-id="19ce0-607">创建七个点来定义曲线。</span><span class="sxs-lookup"><span data-stu-id="19ce0-607">Creates seven points to define the curve.</span></span>  
  
-   <span data-ttu-id="19ce0-608">若要构造不完整的多边形的七个点之间绘制六个红色的直线。</span><span class="sxs-lookup"><span data-stu-id="19ce0-608">Draws six red straight lines between the seven points to form an incomplete polygon.</span></span>  
  
-   <span data-ttu-id="19ce0-609">创建张力设置。</span><span class="sxs-lookup"><span data-stu-id="19ce0-609">Creates a tension setting.</span></span>  
  
-   <span data-ttu-id="19ce0-610">绘制一打开绿色已关闭，两条曲线的七个点通过。</span><span class="sxs-lookup"><span data-stu-id="19ce0-610">Draws an open green closed curve through the seven points.</span></span>  
  
 <span data-ttu-id="19ce0-611">该方法使用 1.0 的张力。</span><span class="sxs-lookup"><span data-stu-id="19ce0-611">The method uses a tension of 1.0.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#22](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#22)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#22](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#22)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#22](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-612">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-612">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-613">- 或 -  <paramref name="points" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-613">-or-  <paramref name="points" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawCurve">
      <MemberSignature Language="C#" Value="public void DrawCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawCurve(class System.Drawing.Pen pen, valuetype System.Drawing.PointF[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawCurve(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::PointF&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.DrawCurve : System.Drawing.Pen * System.Drawing.PointF[] * single -&gt; unit" Usage="graphics.DrawCurve (pen, points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-614">
            <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-614">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</span>
          </span>
        </param>
        <param name="points">
          <span data-ttu-id="19ce0-615">
            <see cref="T:System.Drawing.PointF" /> 结构的数组，这些结构表示定义曲线的点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-615">Array of <see cref="T:System.Drawing.PointF" /> structures that represent the points that define the curve.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="19ce0-616">大于或等于 0.0F 的值，该值指定曲线的张力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-616">Value greater than or equal to 0.0F that specifies the tension of the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-617">使用指定的张力绘制经过一组指定的 <see cref="T:System.Drawing.PointF" /> 结构的基数样条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-617">Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.PointF" /> structures using a specified tension.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-618">此方法绘制经过数组中每个点的基数样条。</span><span class="sxs-lookup"><span data-stu-id="19ce0-618">This method draws a cardinal spline that passes through each point in the array.</span></span>  
  
 <span data-ttu-id="19ce0-619">点的数组必须包含至少三个<xref:System.Drawing.PointF>要绘制曲线的结构。</span><span class="sxs-lookup"><span data-stu-id="19ce0-619">The array of points must contain at least three <xref:System.Drawing.PointF> structures for a curve to be drawn.</span></span>  
  
 <span data-ttu-id="19ce0-620">`tension`参数确定样条的形状。</span><span class="sxs-lookup"><span data-stu-id="19ce0-620">The `tension` parameter determines the shape of the spline.</span></span> <span data-ttu-id="19ce0-621">如果值`tension`参数为 0.0 f 时，此方法用于绘制直线段连接的点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-621">If the value of the `tension` parameter is 0.0F, this method draws straight line segments to connect the points.</span></span> <span data-ttu-id="19ce0-622">通常情况下，`tension`参数是否小于或等于 1.0 f。</span><span class="sxs-lookup"><span data-stu-id="19ce0-622">Usually, the `tension` parameter is less than or equal to 1.0F.</span></span> <span data-ttu-id="19ce0-623">通过 1.0 f 的值不会生成不寻常的结果。</span><span class="sxs-lookup"><span data-stu-id="19ce0-623">Values over 1.0F produce unusual results.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-624">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-624">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-625">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-625">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-626">创建红色和绿色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-626">Creates red and green pens.</span></span>  
  
-   <span data-ttu-id="19ce0-627">创建七个点来定义曲线。</span><span class="sxs-lookup"><span data-stu-id="19ce0-627">Creates seven points to define the curve.</span></span>  
  
-   <span data-ttu-id="19ce0-628">若要构造不完整的多边形的七个点之间绘制六个红色的直线。</span><span class="sxs-lookup"><span data-stu-id="19ce0-628">Draws six red straight lines between the seven points to form an incomplete polygon.</span></span>  
  
-   <span data-ttu-id="19ce0-629">创建张力设置。</span><span class="sxs-lookup"><span data-stu-id="19ce0-629">Creates a tension setting.</span></span>  
  
-   <span data-ttu-id="19ce0-630">绘制一打开绿色已关闭，两条曲线的七个点通过。</span><span class="sxs-lookup"><span data-stu-id="19ce0-630">Draws an open green closed curve through the seven points.</span></span>  
  
 <span data-ttu-id="19ce0-631">该方法使用 1.0 的张力。</span><span class="sxs-lookup"><span data-stu-id="19ce0-631">The method uses a tension of 1.0.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#26](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#26)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#26](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#26)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#26](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-632">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-632">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-633">- 或 -  <paramref name="points" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-633">-or-  <paramref name="points" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawCurve">
      <MemberSignature Language="C#" Value="public void DrawCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points, int offset, int numberOfSegments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawCurve(class System.Drawing.Pen pen, valuetype System.Drawing.PointF[] points, int32 offset, int32 numberOfSegments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawCurve(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::PointF&gt; ^ points, int offset, int numberOfSegments);" />
      <MemberSignature Language="F#" Value="member this.DrawCurve : System.Drawing.Pen * System.Drawing.PointF[] * int * int -&gt; unit" Usage="graphics.DrawCurve (pen, points, offset, numberOfSegments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="numberOfSegments" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-634">
            <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-634">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</span>
          </span>
        </param>
        <param name="points">
          <span data-ttu-id="19ce0-635">
            <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构定义样条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-635">Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="19ce0-636">从 <c>points</c> 参数数组中的第一个元素到曲线中起始点的偏移量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-636">Offset from the first element in the array of the <c>points</c> parameter to the starting point in the curve.</span>
          </span>
        </param>
        <param name="numberOfSegments">
          <span data-ttu-id="19ce0-637">起始点之后要包含在曲线中的段数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-637">Number of segments after the starting point to include in the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-638">绘制经过一组指定的 <see cref="T:System.Drawing.PointF" /> 结构的基数样条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-638">Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.PointF" /> structures.</span>
          </span>
          <span data-ttu-id="19ce0-639">从相对于数组开始位置的偏移量开始绘制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-639">The drawing begins offset from the beginning of the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-640">此方法绘制经过数组中每个点的基数样条。</span><span class="sxs-lookup"><span data-stu-id="19ce0-640">This method draws a cardinal spline that passes through each point in the array.</span></span>  
  
 <span data-ttu-id="19ce0-641">点的数组必须包含至少三个<xref:System.Drawing.PointF>要绘制曲线的结构。</span><span class="sxs-lookup"><span data-stu-id="19ce0-641">The array of points must contain at least three <xref:System.Drawing.PointF> structures for a curve to be drawn.</span></span>  
  
 <span data-ttu-id="19ce0-642">值`offset`参数指定要在数组中跳过的元素数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-642">The value of the `offset` parameter specifies the number of elements to skip in the array.</span></span> <span data-ttu-id="19ce0-643">已跳过的元素之后的第一个元素表示曲线的起始点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-643">The first element after the skipped elements represents the starting point of the curve.</span></span>  
  
 <span data-ttu-id="19ce0-644">值`numberOfSegments`参数指定要绘制在曲线中的起始点后的段的数目。</span><span class="sxs-lookup"><span data-stu-id="19ce0-644">The value of the `numberOfSegments` parameter specifies the number of segments, after the starting point, to draw in the curve.</span></span> <span data-ttu-id="19ce0-645">值`numberOfSegments`参数必须至少为 1。</span><span class="sxs-lookup"><span data-stu-id="19ce0-645">The value of the `numberOfSegments` parameter must be at least 1.</span></span> <span data-ttu-id="19ce0-646">值`offset`参数和值`numberOfSegments`参数必须是中的数组的元素数小于`points`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-646">The value of the `offset` parameter plus the value of the `numberOfSegments` parameter must be less than the number of elements in the array of the `points` parameter.</span></span>  
  
 <span data-ttu-id="19ce0-647">此方法使用默认张力 0.5。</span><span class="sxs-lookup"><span data-stu-id="19ce0-647">This method uses a default tension of 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-648">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-648">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-649">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-649">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-650">创建红色和绿色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-650">Creates red and green pens.</span></span>  
  
-   <span data-ttu-id="19ce0-651">创建七个点来定义曲线。</span><span class="sxs-lookup"><span data-stu-id="19ce0-651">Creates seven points to define a curve.</span></span>  
  
-   <span data-ttu-id="19ce0-652">若要构造不完整的多边形的七个点之间绘制六个红色的直线。</span><span class="sxs-lookup"><span data-stu-id="19ce0-652">Draws six red straight lines between the seven points to form an incomplete polygon.</span></span>  
  
-   <span data-ttu-id="19ce0-653">定义的起始点偏移量和段数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-653">Defines the starting point offset and number of segments.</span></span>  
  
-   <span data-ttu-id="19ce0-654">绘制打开绿色的曲线 （从第三个点） 的最后五个点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-654">Draws an open green curve (starting at the third point) through the last five points.</span></span>  
  
 <span data-ttu-id="19ce0-655">该方法使用默认张力 0.5。</span><span class="sxs-lookup"><span data-stu-id="19ce0-655">The method uses a default tension of 0.5.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#24](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#24)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#24](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#24)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#24](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-656">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-656">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-657">- 或 -  <paramref name="points" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-657">-or-  <paramref name="points" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawCurve">
      <MemberSignature Language="C#" Value="public void DrawCurve (System.Drawing.Pen pen, System.Drawing.Point[] points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawCurve(class System.Drawing.Pen pen, valuetype System.Drawing.Point[] points, int32 offset, int32 numberOfSegments, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawCurve(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::Point&gt; ^ points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="F#" Value="member this.DrawCurve : System.Drawing.Pen * System.Drawing.Point[] * int * int * single -&gt; unit" Usage="graphics.DrawCurve (pen, points, offset, numberOfSegments, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="numberOfSegments" Type="System.Int32" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-658">
            <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-658">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</span>
          </span>
        </param>
        <param name="points">
          <span data-ttu-id="19ce0-659">
            <see cref="T:System.Drawing.Point" /> 结构数组，这些结构定义样条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-659">Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="19ce0-660">从 <c>points</c> 参数数组中的第一个元素到曲线中起始点的偏移量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-660">Offset from the first element in the array of the <c>points</c> parameter to the starting point in the curve.</span>
          </span>
        </param>
        <param name="numberOfSegments">
          <span data-ttu-id="19ce0-661">起始点之后要包含在曲线中的段数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-661">Number of segments after the starting point to include in the curve.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="19ce0-662">大于或等于 0.0F 的值，该值指定曲线的张力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-662">Value greater than or equal to 0.0F that specifies the tension of the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-663">使用指定的张力绘制经过一组指定的 <see cref="T:System.Drawing.Point" /> 结构的基数样条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-663">Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.Point" /> structures using a specified tension.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-664">此方法绘制经过数组中每个点的基数样条。</span><span class="sxs-lookup"><span data-stu-id="19ce0-664">This method draws a cardinal spline that passes through each point in the array.</span></span>  
  
 <span data-ttu-id="19ce0-665">点的数组必须包含至少三个<xref:System.Drawing.Point>要绘制曲线的结构。</span><span class="sxs-lookup"><span data-stu-id="19ce0-665">The array of points must contain at least three <xref:System.Drawing.Point> structures for a curve to be drawn.</span></span>  
  
 <span data-ttu-id="19ce0-666">值`offset`参数指定要在数组中跳过的元素数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-666">The value of the `offset` parameter specifies the number of elements to skip in the array.</span></span> <span data-ttu-id="19ce0-667">已跳过的元素之后的第一个元素表示曲线的起始点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-667">The first element after the skipped elements represents the starting point of the curve.</span></span>  
  
 <span data-ttu-id="19ce0-668">值`numberOfSegments`参数指定要绘制在曲线中的起始点后的段的数目。</span><span class="sxs-lookup"><span data-stu-id="19ce0-668">The value of the `numberOfSegments` parameter specifies the number of segments, after the starting point, to draw in the curve.</span></span> <span data-ttu-id="19ce0-669">值`numberOfSegments`参数必须至少为 1。</span><span class="sxs-lookup"><span data-stu-id="19ce0-669">The value of the `numberOfSegments` parameter must be at least 1.</span></span> <span data-ttu-id="19ce0-670">值`offset`参数和值`numberOfSegments`参数必须是中的数组的元素数小于`points`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-670">The value of the `offset` parameter plus the value of the `numberOfSegments` parameter must be less than the number of elements in the array of the `points` parameter.</span></span>  
  
 <span data-ttu-id="19ce0-671">`tension`参数确定样条的形状。</span><span class="sxs-lookup"><span data-stu-id="19ce0-671">The `tension` parameter determines the shape of the spline.</span></span> <span data-ttu-id="19ce0-672">如果值`tension`参数为 0.0 f 时，此方法用于绘制直线段连接的点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-672">If the value of the `tension` parameter is 0.0F, this method draws straight line segments to connect the points.</span></span> <span data-ttu-id="19ce0-673">通常情况下，`tension`参数是否小于或等于 1.0 f。</span><span class="sxs-lookup"><span data-stu-id="19ce0-673">Usually, the `tension` parameter is less than or equal to 1.0F.</span></span> <span data-ttu-id="19ce0-674">通过 1.0 f 的值不会生成不寻常的结果。</span><span class="sxs-lookup"><span data-stu-id="19ce0-674">Values over 1.0F produce unusual results.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-675">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-675">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-676">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-676">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-677">创建红色和绿色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-677">Creates red and green pens.</span></span>  
  
-   <span data-ttu-id="19ce0-678">创建七个点来定义曲线。</span><span class="sxs-lookup"><span data-stu-id="19ce0-678">Creates seven points to define a curve.</span></span>  
  
-   <span data-ttu-id="19ce0-679">若要构造不完整的多边形的七个点之间绘制六个红色的直线。</span><span class="sxs-lookup"><span data-stu-id="19ce0-679">Draws six red straight lines between the seven points to form an incomplete polygon.</span></span>  
  
-   <span data-ttu-id="19ce0-680">定义的起始点偏移量和段数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-680">Defines the starting point offset and number of segments.</span></span>  
  
-   <span data-ttu-id="19ce0-681">定义张力。</span><span class="sxs-lookup"><span data-stu-id="19ce0-681">Defines the tension.</span></span>  
  
-   <span data-ttu-id="19ce0-682">绘制打开绿色的曲线 （从第三个点） 的最后五个点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-682">Draws an open green curve (starting at the third point) through the last five points.</span></span>  
  
 <span data-ttu-id="19ce0-683">该方法将设置为 1.0 的张力。</span><span class="sxs-lookup"><span data-stu-id="19ce0-683">The method sets the tension to 1.0.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#21](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#21)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#21)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-684">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-684">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-685">- 或 -  <paramref name="points" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-685">-or-  <paramref name="points" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawCurve">
      <MemberSignature Language="C#" Value="public void DrawCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawCurve(class System.Drawing.Pen pen, valuetype System.Drawing.PointF[] points, int32 offset, int32 numberOfSegments, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawCurve(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::PointF&gt; ^ points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="F#" Value="member this.DrawCurve : System.Drawing.Pen * System.Drawing.PointF[] * int * int * single -&gt; unit" Usage="graphics.DrawCurve (pen, points, offset, numberOfSegments, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="numberOfSegments" Type="System.Int32" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-686">
            <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-686">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</span>
          </span>
        </param>
        <param name="points">
          <span data-ttu-id="19ce0-687">
            <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构定义样条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-687">Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="19ce0-688">从 <c>points</c> 参数数组中的第一个元素到曲线中起始点的偏移量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-688">Offset from the first element in the array of the <c>points</c> parameter to the starting point in the curve.</span>
          </span>
        </param>
        <param name="numberOfSegments">
          <span data-ttu-id="19ce0-689">起始点之后要包含在曲线中的段数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-689">Number of segments after the starting point to include in the curve.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="19ce0-690">大于或等于 0.0F 的值，该值指定曲线的张力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-690">Value greater than or equal to 0.0F that specifies the tension of the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-691">使用指定的张力绘制经过一组指定的 <see cref="T:System.Drawing.PointF" /> 结构的基数样条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-691">Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.PointF" /> structures using a specified tension.</span>
          </span>
          <span data-ttu-id="19ce0-692">从相对于数组开始位置的偏移量开始绘制。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-692">The drawing begins offset from the beginning of the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-693">此方法绘制经过数组中每个点的基数样条。</span><span class="sxs-lookup"><span data-stu-id="19ce0-693">This method draws a cardinal spline that passes through each point in the array.</span></span>  
  
 <span data-ttu-id="19ce0-694">点的数组必须包含至少三个<xref:System.Drawing.PointF>曲线要绘制的结构。</span><span class="sxs-lookup"><span data-stu-id="19ce0-694">The array of points must contain at least three <xref:System.Drawing.PointF> structures for curve to be drawn.</span></span>  
  
 <span data-ttu-id="19ce0-695">值`offset`参数指定要在数组中跳过的元素数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-695">The value of the `offset` parameter specifies the number of elements to skip in the array.</span></span> <span data-ttu-id="19ce0-696">已跳过的元素之后的第一个元素表示曲线的起始点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-696">The first element after the skipped elements represents the starting point of the curve.</span></span>  
  
 <span data-ttu-id="19ce0-697">值`numberOfSegments`参数指定要绘制在曲线中的起始点后的段的数目。</span><span class="sxs-lookup"><span data-stu-id="19ce0-697">The value of the `numberOfSegments` parameter specifies the number of segments, after the starting point, to draw in the curve.</span></span> <span data-ttu-id="19ce0-698">值`numberOfSegments`参数必须至少为 1。</span><span class="sxs-lookup"><span data-stu-id="19ce0-698">The value of the `numberOfSegments` parameter must be at least 1.</span></span> <span data-ttu-id="19ce0-699">值`offset`参数和值`numberOfSegments`参数必须是中的数组的元素数小于`points`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-699">The value of the `offset` parameter plus the value of the `numberOfSegments` parameter must be less than the number of elements in the array of the `points` parameter.</span></span>  
  
 <span data-ttu-id="19ce0-700">`tension`参数确定样条的形状。</span><span class="sxs-lookup"><span data-stu-id="19ce0-700">The `tension` parameter determines the shape of the spline.</span></span> <span data-ttu-id="19ce0-701">如果值`tension`参数为 0.0 f 时，此方法用于绘制直线段连接的点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-701">If the value of the `tension` parameter is 0.0F, this method draws straight line segments to connect the points.</span></span> <span data-ttu-id="19ce0-702">通常情况下，`tension`参数是否小于或等于 1.0 f。</span><span class="sxs-lookup"><span data-stu-id="19ce0-702">Usually, the `tension` parameter is less than or equal to 1.0F.</span></span> <span data-ttu-id="19ce0-703">通过 1.0 f 的值不会生成不寻常的结果。</span><span class="sxs-lookup"><span data-stu-id="19ce0-703">Values over 1.0F produce unusual results.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-704">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-704">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-705">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-705">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-706">创建红色和绿色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-706">Creates red and green pens.</span></span>  
  
-   <span data-ttu-id="19ce0-707">创建七个点来定义曲线。</span><span class="sxs-lookup"><span data-stu-id="19ce0-707">Creates seven points to define a curve.</span></span>  
  
-   <span data-ttu-id="19ce0-708">若要构造不完整的多边形的七个点之间绘制六个红色的直线。</span><span class="sxs-lookup"><span data-stu-id="19ce0-708">Draws six red straight lines between the seven points to form an incomplete polygon.</span></span>  
  
-   <span data-ttu-id="19ce0-709">定义的起始点偏移量和段数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-709">Defines the starting point offset and number of segments.</span></span>  
  
-   <span data-ttu-id="19ce0-710">定义张力。</span><span class="sxs-lookup"><span data-stu-id="19ce0-710">Defines the tension.</span></span>  
  
-   <span data-ttu-id="19ce0-711">绘制打开绿色的曲线 （从第三个点） 的最后五个点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-711">Draws an open green curve (starting at the third point) through the last five points.</span></span>  
  
 <span data-ttu-id="19ce0-712">该方法将设置为 1.0 的张力。</span><span class="sxs-lookup"><span data-stu-id="19ce0-712">The method sets the tension to 1.0.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#25](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#25)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#25](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#25)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#25](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-713">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-713">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-714">- 或 -  <paramref name="points" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-714">-or-  <paramref name="points" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawEllipse">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-715">绘制一个由边框（该边框由一对坐标、高度和宽度指定）定义的椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-715">Draws an ellipse defined by a bounding rectangle specified by a pair of coordinates, a height, and a width.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawEllipse">
      <MemberSignature Language="C#" Value="public void DrawEllipse (System.Drawing.Pen pen, System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawEllipse(class System.Drawing.Pen pen, valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawEllipse(System::Drawing::Pen ^ pen, System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.DrawEllipse : System.Drawing.Pen * System.Drawing.Rectangle -&gt; unit" Usage="graphics.DrawEllipse (pen, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-716">
            <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-716">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the ellipse.</span>
          </span>
        </param>
        <param name="rect">
          <span data-ttu-id="19ce0-717">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它定义椭圆的边界。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-717">
              <see cref="T:System.Drawing.Rectangle" /> structure that defines the boundaries of the ellipse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-718">绘制边界 <see cref="T:System.Drawing.Rectangle" /> 结构指定的椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-718">Draws an ellipse specified by a bounding <see cref="T:System.Drawing.Rectangle" /> structure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-719">此方法绘制一个由边框由指定的椭圆`rect`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-719">This method draws an ellipse that is defined by the bounding rectangle specified by the `rect` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-720">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-720">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-721">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-721">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-722">创建黑色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-722">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="19ce0-723">创建限定椭圆的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-723">Creates a rectangle to bound an ellipse.</span></span>  
  
-   <span data-ttu-id="19ce0-724">向屏幕绘制椭圆。</span><span class="sxs-lookup"><span data-stu-id="19ce0-724">Draws the ellipse to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#27](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#27)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#27](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#27)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#27](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-725">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-725">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawEllipse">
      <MemberSignature Language="C#" Value="public void DrawEllipse (System.Drawing.Pen pen, System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawEllipse(class System.Drawing.Pen pen, valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawEllipse(System::Drawing::Pen ^ pen, System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.DrawEllipse : System.Drawing.Pen * System.Drawing.RectangleF -&gt; unit" Usage="graphics.DrawEllipse (pen, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-726">
            <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-726">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the ellipse.</span>
          </span>
        </param>
        <param name="rect">
          <span data-ttu-id="19ce0-727">
            <see cref="T:System.Drawing.RectangleF" /> 结构，它定义椭圆的边界。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-727">
              <see cref="T:System.Drawing.RectangleF" /> structure that defines the boundaries of the ellipse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-728">绘制边界 <see cref="T:System.Drawing.RectangleF" /> 定义的椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-728">Draws an ellipse defined by a bounding <see cref="T:System.Drawing.RectangleF" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-729">此方法绘制一个由边框由指定的椭圆`rect`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-729">This method draws an ellipse that is defined by the bounding rectangle specified by the `rect` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-730">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-730">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-731">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-731">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-732">创建黑色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-732">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="19ce0-733">创建限定椭圆的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-733">Creates a rectangle to bound an ellipse.</span></span>  
  
-   <span data-ttu-id="19ce0-734">向屏幕绘制椭圆。</span><span class="sxs-lookup"><span data-stu-id="19ce0-734">Draws the ellipse to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#28](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#28)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#28](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#28)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#28](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-735">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-735">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawEllipse">
      <MemberSignature Language="C#" Value="public void DrawEllipse (System.Drawing.Pen pen, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawEllipse(class System.Drawing.Pen pen, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawEllipse(System::Drawing::Pen ^ pen, int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.DrawEllipse : System.Drawing.Pen * int * int * int * int -&gt; unit" Usage="graphics.DrawEllipse (pen, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-736">
            <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-736">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the ellipse.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="19ce0-737">定义椭圆的边框的左上角的 X 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-737">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="19ce0-738">定义椭圆的边框的左上角的 Y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-738">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="19ce0-739">定义椭圆的边框的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-739">Width of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="19ce0-740">定义椭圆的边框的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-740">Height of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-741">绘制一个由边框定义的椭圆，该边框由矩形的左上角坐标、高度和宽度指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-741">Draws an ellipse defined by a bounding rectangle specified by coordinates for the upper-left corner of the rectangle, a height, and a width.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-742">此方法绘制一个由所描述的边框定义的椭圆`x`， `y`， `width`，和`height`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-742">This method draws an ellipse that is defined by the bounding rectangle described by the `x`, `y`, `width`, and `height` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-743">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-743">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-744">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-744">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-745">创建黑色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-745">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="19ce0-746">创建的位置和限定椭圆的矩形的大小。</span><span class="sxs-lookup"><span data-stu-id="19ce0-746">Creates the position and size of a rectangle to bound an ellipse.</span></span>  
  
-   <span data-ttu-id="19ce0-747">向屏幕绘制椭圆。</span><span class="sxs-lookup"><span data-stu-id="19ce0-747">Draws the ellipse to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#29](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#29)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#29](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#29)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#29](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-748">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-748">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawEllipse">
      <MemberSignature Language="C#" Value="public void DrawEllipse (System.Drawing.Pen pen, float x, float y, float width, float height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawEllipse(class System.Drawing.Pen pen, float32 x, float32 y, float32 width, float32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawEllipse(System::Drawing::Pen ^ pen, float x, float y, float width, float height);" />
      <MemberSignature Language="F#" Value="member this.DrawEllipse : System.Drawing.Pen * single * single * single * single -&gt; unit" Usage="graphics.DrawEllipse (pen, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-749">
            <see cref="T:System.Drawing.Pen" />，它确定曲线的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-749">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the ellipse.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="19ce0-750">定义椭圆的边框的左上角的 X 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-750">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="19ce0-751">定义椭圆的边框的左上角的 Y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-751">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="19ce0-752">定义椭圆的边框的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-752">Width of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="19ce0-753">定义椭圆的边框的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-753">Height of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-754">绘制一个由边框（该边框由一对坐标、高度和宽度指定）定义的椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-754">Draws an ellipse defined by a bounding rectangle specified by a pair of coordinates, a height, and a width.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-755">此方法绘制一个由所描述的边框定义的椭圆`x`， `y`， `width`，和`height`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-755">This method draws an ellipse that is defined by the bounding rectangle described by the `x`, `y`, `width`, and `height` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-756">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-756">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-757">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-757">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-758">创建黑色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-758">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="19ce0-759">创建的位置和限定椭圆的矩形的大小。</span><span class="sxs-lookup"><span data-stu-id="19ce0-759">Creates the position and size of a rectangle to bound an ellipse.</span></span>  
  
-   <span data-ttu-id="19ce0-760">向屏幕绘制椭圆。</span><span class="sxs-lookup"><span data-stu-id="19ce0-760">Draws the ellipse to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#30](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#30)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#30)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-761">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-761">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawIcon">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-762">在指定坐标处绘制由指定的 <see cref="T:System.Drawing.Icon" /> 表示的图像。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-762">Draws the image represented by the specified <see cref="T:System.Drawing.Icon" /> at the specified coordinates.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawIcon">
      <MemberSignature Language="C#" Value="public void DrawIcon (System.Drawing.Icon icon, System.Drawing.Rectangle targetRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawIcon(class System.Drawing.Icon icon, valuetype System.Drawing.Rectangle targetRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawIcon(System::Drawing::Icon ^ icon, System::Drawing::Rectangle targetRect);" />
      <MemberSignature Language="F#" Value="member this.DrawIcon : System.Drawing.Icon * System.Drawing.Rectangle -&gt; unit" Usage="graphics.DrawIcon (icon, targetRect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="icon" Type="System.Drawing.Icon" />
        <Parameter Name="targetRect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="icon">
          <span data-ttu-id="19ce0-763">要绘制的 <see cref="T:System.Drawing.Icon" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-763">
              <see cref="T:System.Drawing.Icon" /> to draw.</span>
          </span>
        </param>
        <param name="targetRect">
          <span data-ttu-id="19ce0-764">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它指定显示面上结果图像的位置和大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-764">
              <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the resulting image on the display surface.</span>
          </span>
          <span data-ttu-id="19ce0-765">将 <c>icon</c> 参数中包含的图像缩放为此矩形区域的尺寸。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-765">The image contained in the <c>icon</c> parameter is scaled to the dimensions of this rectangular area.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-766">在 <see cref="T:System.Drawing.Icon" /> 结构指定的区域内绘制指定的 <see cref="T:System.Drawing.Rectangle" /> 表示的图像。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-766">Draws the image represented by the specified <see cref="T:System.Drawing.Icon" /> within the area specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19ce0-767">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-767">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-768">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-768">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-769">从标准 Windows 图标文件 SampIcon.ico 示例文件夹中创建的图标。</span><span class="sxs-lookup"><span data-stu-id="19ce0-769">Creates an icon from a standard Windows icon file SampIcon.ico in the example folder.</span></span>  
  
-   <span data-ttu-id="19ce0-770">创建在其中来绘制该图标的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-770">Creates a rectangle in which to draw the icon.</span></span>  
  
-   <span data-ttu-id="19ce0-771">向屏幕绘制图标。</span><span class="sxs-lookup"><span data-stu-id="19ce0-771">Draws the icon to the screen.</span></span>  
  
 <span data-ttu-id="19ce0-772">矩形的位置在屏幕上，查找图标，并在该矩形的大小确定绘制的图标的缩放。</span><span class="sxs-lookup"><span data-stu-id="19ce0-772">The position of the rectangle locates the icon on the screen, and the size of the rectangle determines the scaling of the drawn icon.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#31](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#31)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#31](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#31)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#31](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#31)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-773">
            <paramref name="icon" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-773">
              <paramref name="icon" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawIcon">
      <MemberSignature Language="C#" Value="public void DrawIcon (System.Drawing.Icon icon, int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawIcon(class System.Drawing.Icon icon, int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawIcon(System::Drawing::Icon ^ icon, int x, int y);" />
      <MemberSignature Language="F#" Value="member this.DrawIcon : System.Drawing.Icon * int * int -&gt; unit" Usage="graphics.DrawIcon (icon, x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="icon" Type="System.Drawing.Icon" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="icon">
          <span data-ttu-id="19ce0-774">要绘制的 <see cref="T:System.Drawing.Icon" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-774">
              <see cref="T:System.Drawing.Icon" /> to draw.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="19ce0-775">所绘制图像的左上角的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-775">The x-coordinate of the upper-left corner of the drawn image.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="19ce0-776">所绘制图像的左上角的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-776">The y-coordinate of the upper-left corner of the drawn image.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-777">在指定坐标处绘制由指定的 <see cref="T:System.Drawing.Icon" /> 表示的图像。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-777">Draws the image represented by the specified <see cref="T:System.Drawing.Icon" /> at the specified coordinates.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19ce0-778">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-778">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-779">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-779">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-780">从标准 Windows 图标文件 SampIcon.ico 示例文件夹中创建的图标。</span><span class="sxs-lookup"><span data-stu-id="19ce0-780">Creates an icon from a standard Windows icon file SampIcon.ico in the example folder.</span></span>  
  
-   <span data-ttu-id="19ce0-781">创建在该处来绘制该图标的左上角的坐标。</span><span class="sxs-lookup"><span data-stu-id="19ce0-781">Creates the coordinates of the upper-left corner at which to draw the icon.</span></span>  
  
-   <span data-ttu-id="19ce0-782">向屏幕绘制图标。</span><span class="sxs-lookup"><span data-stu-id="19ce0-782">Draws the icon to the screen.</span></span>  
  
 <span data-ttu-id="19ce0-783">绘制的图标是不成比例。</span><span class="sxs-lookup"><span data-stu-id="19ce0-783">The drawn icon is unscaled.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#32](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#32)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#32](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#32)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#32](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-784">
            <paramref name="icon" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-784">
              <paramref name="icon" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawIconUnstretched">
      <MemberSignature Language="C#" Value="public void DrawIconUnstretched (System.Drawing.Icon icon, System.Drawing.Rectangle targetRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawIconUnstretched(class System.Drawing.Icon icon, valuetype System.Drawing.Rectangle targetRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawIconUnstretched(System::Drawing::Icon ^ icon, System::Drawing::Rectangle targetRect);" />
      <MemberSignature Language="F#" Value="member this.DrawIconUnstretched : System.Drawing.Icon * System.Drawing.Rectangle -&gt; unit" Usage="graphics.DrawIconUnstretched (icon, targetRect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="icon" Type="System.Drawing.Icon" />
        <Parameter Name="targetRect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="icon">
          <span data-ttu-id="19ce0-785">要绘制的 <see cref="T:System.Drawing.Icon" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-785">
              <see cref="T:System.Drawing.Icon" /> to draw.</span>
          </span>
        </param>
        <param name="targetRect">
          <span data-ttu-id="19ce0-786">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图像的位置和大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-786">
              <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the resulting image.</span>
          </span>
          <span data-ttu-id="19ce0-787">不缩放图像以适合此矩形的大小，但保留其原始大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-787">The image is not scaled to fit this rectangle, but retains its original size.</span>
          </span>
          <span data-ttu-id="19ce0-788">如果该图像比该矩形大，将它剪裁到适合它的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-788">If the image is larger than the rectangle, it is clipped to fit inside it.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-789">绘制指定的 <see cref="T:System.Drawing.Icon" /> 表示的图像，而不缩放该图像。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-789">Draws the image represented by the specified <see cref="T:System.Drawing.Icon" /> without scaling the image.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19ce0-790">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-790">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-791">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-791">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-792">从标准 Windows 图标文件 SampIcon.ico 示例文件夹中创建的图标。</span><span class="sxs-lookup"><span data-stu-id="19ce0-792">Creates an icon from a standard Windows icon file SampIcon.ico in the example folder.</span></span>  
  
-   <span data-ttu-id="19ce0-793">创建在其中来绘制该图标的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-793">Creates a rectangle in which to draw the icon.</span></span>  
  
-   <span data-ttu-id="19ce0-794">向屏幕绘制图标。</span><span class="sxs-lookup"><span data-stu-id="19ce0-794">Draws the icon to the screen.</span></span>  
  
 <span data-ttu-id="19ce0-795">矩形的位置在屏幕上，查找图标，并不成比例，也未剪裁绘制的图标。</span><span class="sxs-lookup"><span data-stu-id="19ce0-795">The position of the rectangle locates the icon on the screen, and the drawn icon is unscaled and unclipped.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#33](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#33)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#33](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#33)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#33](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-796">
            <paramref name="icon" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-796">
              <paramref name="icon" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawImage">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-797">在指定位置并且按原始大小绘制指定的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-797">Draws the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the original size.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Point -&gt; unit" Usage="graphics.DrawImage (image, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="image">
          <span data-ttu-id="19ce0-798">要绘制的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-798">
              <see cref="T:System.Drawing.Image" /> to draw.</span>
          </span>
        </param>
        <param name="point">
          <span data-ttu-id="19ce0-799">
            <see cref="T:System.Drawing.Point" /> 结构，它表示所绘制图像的左上角的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-799">
              <see cref="T:System.Drawing.Point" /> structure that represents the location of the upper-left corner of the drawn image.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-800">在指定的位置使用原始物理大小绘制指定的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-800">Draws the specified <see cref="T:System.Drawing.Image" />, using its original physical size, at the specified location.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-801"><xref:System.Drawing.Image>存储像素宽度的值和水平分辨率 （每英寸点数） 的值。</span><span class="sxs-lookup"><span data-stu-id="19ce0-801">An <xref:System.Drawing.Image> stores a value for pixel width and a value for horizontal resolution (dots per inch).</span></span> <span data-ttu-id="19ce0-802">物理宽度，以英寸为单位的测量单位是映像的像素宽度除以的水平分辨率。</span><span class="sxs-lookup"><span data-stu-id="19ce0-802">The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</span></span> <span data-ttu-id="19ce0-803">例如，带有像素宽度为 216 和 72 每英寸点数为单位的水平分辨率的图像具有物理宽度为 3 英寸。</span><span class="sxs-lookup"><span data-stu-id="19ce0-803">For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches.</span></span> <span data-ttu-id="19ce0-804">此说明同样适用于像素高度和物理高度。</span><span class="sxs-lookup"><span data-stu-id="19ce0-804">Similar remarks apply to pixel height and physical height.</span></span>  
  
 <span data-ttu-id="19ce0-805">此方法使用绘制图像的物理大小，因此图像将具有其正确的大小，以英寸为单位，而不考虑显示设备的分辨率 （每英寸点数）。</span><span class="sxs-lookup"><span data-stu-id="19ce0-805">This method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</span></span> <span data-ttu-id="19ce0-806">例如，假设映像具有像素宽度为 216 和水平分辨率为每英寸点数为 72。</span><span class="sxs-lookup"><span data-stu-id="19ce0-806">For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</span></span> <span data-ttu-id="19ce0-807">如果调用此方法以分辨率为每英寸 96 点的设备上绘制该映像，则在呈现的图像的像素宽度将 (216/72) \* 96 = 288。</span><span class="sxs-lookup"><span data-stu-id="19ce0-807">If you call this method to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)\*96 = 288.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-808">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-808">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-809">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-809">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-810">从 JPEG 文件 sampimag.jpg 位于同示例的文件夹中创建的映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-810">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="19ce0-811">创建在其中绘制图像的左上角的点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-811">Creates a point at which to draw the upper-left corner of the image.</span></span>  
  
-   <span data-ttu-id="19ce0-812">将不成比例的图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-812">Draws the unscaled image to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#34](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#34)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#34](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#34)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#34](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-813">
            <paramref name="image" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-813">
              <paramref name="image" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Point[] destPoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Point[] destPoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, cli::array &lt;System::Drawing::Point&gt; ^ destPoints);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Point[] -&gt; unit" Usage="graphics.DrawImage (image, destPoints)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destPoints" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="image">
          <span data-ttu-id="19ce0-814">要绘制的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-814">
              <see cref="T:System.Drawing.Image" /> to draw.</span>
          </span>
        </param>
        <param name="destPoints">
          <span data-ttu-id="19ce0-815">由三个 <see cref="T:System.Drawing.Point" /> 结构组成的数组，这三个结构定义一个平行四边形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-815">Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-816">在指定位置并且按指定形状和大小绘制指定的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-816">Draws the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified shape and size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-817">`destPoints`参数指定的平行四边形的三个点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-817">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="19ce0-818">这三种<xref:System.Drawing.Point>结构表示平行四边形的左上角、 右上角和左下角。</span><span class="sxs-lookup"><span data-stu-id="19ce0-818">The three <xref:System.Drawing.Point> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="19ce0-819">第四个点推断出以形成一个平行四边形的前三个。</span><span class="sxs-lookup"><span data-stu-id="19ce0-819">The fourth point is extrapolated from the first three to form a parallelogram.</span></span>  
  
 <span data-ttu-id="19ce0-820">表示的图像`image`缩放和剪切以适应指定的平行四边形的形状参数`destPoints`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-820">The image represented by the `image` parameter is scaled and sheared to fit the shape of the parallelogram specified by the `destPoints` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-821">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-821">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-822">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-822">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-823">从 JPEG 文件 sampimag.jpg 位于同示例的文件夹中创建的映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-823">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="19ce0-824">创建定义在其中绘制图像的平行四边形的点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-824">Creates points that define a parallelogram in which to draw the image.</span></span>  
  
-   <span data-ttu-id="19ce0-825">将图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-825">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="19ce0-826">平行四边形的位置在屏幕上，查找映像，并原始图像和大小的大小和形状的平行四边形确定的缩放和剪切所绘制图像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-826">The position of the parallelogram locates the image on the screen, and the size of the original image and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#35](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#35)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#35](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#35)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#35](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-827">
            <paramref name="image" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-827">
              <paramref name="image" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.PointF point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.PointF point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::PointF point);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.PointF -&gt; unit" Usage="graphics.DrawImage (image, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="point" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="image">
          <span data-ttu-id="19ce0-828">要绘制的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-828">
              <see cref="T:System.Drawing.Image" /> to draw.</span>
          </span>
        </param>
        <param name="point">
          <span data-ttu-id="19ce0-829">
            <see cref="T:System.Drawing.PointF" /> 结构，它指定所绘制图像的左上角。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-829">
              <see cref="T:System.Drawing.PointF" /> structure that represents the upper-left corner of the drawn image.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-830">在指定的位置使用原始物理大小绘制指定的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-830">Draws the specified <see cref="T:System.Drawing.Image" />, using its original physical size, at the specified location.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-831"><xref:System.Drawing.Image>存储像素宽度的值和水平分辨率 （每英寸点数） 的值。</span><span class="sxs-lookup"><span data-stu-id="19ce0-831">An <xref:System.Drawing.Image> stores a value for pixel width and a value for horizontal resolution (dots per inch).</span></span> <span data-ttu-id="19ce0-832">物理宽度，以英寸为单位的测量单位是映像的像素宽度除以的水平分辨率。</span><span class="sxs-lookup"><span data-stu-id="19ce0-832">The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</span></span> <span data-ttu-id="19ce0-833">例如，带有像素宽度为 216 和 72 每英寸点数为单位的水平分辨率的图像具有物理宽度为 3 英寸。</span><span class="sxs-lookup"><span data-stu-id="19ce0-833">For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches.</span></span> <span data-ttu-id="19ce0-834">此说明同样适用于像素高度和物理高度。</span><span class="sxs-lookup"><span data-stu-id="19ce0-834">Similar remarks apply to pixel height and physical height.</span></span>  
  
 <span data-ttu-id="19ce0-835">此方法使用绘制图像的物理大小，因此图像将具有其正确的大小，以英寸为单位，而不考虑显示设备的分辨率 （每英寸点数）。</span><span class="sxs-lookup"><span data-stu-id="19ce0-835">This method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</span></span> <span data-ttu-id="19ce0-836">例如，假设映像具有像素宽度为 216 和水平分辨率为每英寸点数为 72。</span><span class="sxs-lookup"><span data-stu-id="19ce0-836">For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</span></span> <span data-ttu-id="19ce0-837">如果调用此方法以分辨率为每英寸 96 点的设备上绘制该映像，则在呈现的图像的像素宽度将 (216/72) \* 96 = 288。</span><span class="sxs-lookup"><span data-stu-id="19ce0-837">If you call this method to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)\*96 = 288.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-838">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-838">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-839">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-839">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-840">从 JPEG 文件 sampimag.jpg 位于同示例的文件夹中创建的映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-840">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="19ce0-841">创建在其中绘制图像的左上角的点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-841">Creates a point at which to draw the upper-left corner of the image.</span></span>  
  
-   <span data-ttu-id="19ce0-842">将不成比例的图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-842">Draws the unscaled image to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#40](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#40)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#40)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-843">
            <paramref name="image" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-843">
              <paramref name="image" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.PointF[] destPoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.PointF[] destPoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, cli::array &lt;System::Drawing::PointF&gt; ^ destPoints);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.PointF[] -&gt; unit" Usage="graphics.DrawImage (image, destPoints)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="image">
          <span data-ttu-id="19ce0-844">要绘制的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-844">
              <see cref="T:System.Drawing.Image" /> to draw.</span>
          </span>
        </param>
        <param name="destPoints">
          <span data-ttu-id="19ce0-845">由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个平行四边形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-845">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-846">在指定位置并且按指定形状和大小绘制指定的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-846">Draws the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified shape and size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-847">`destPoints`参数指定的平行四边形的三个点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-847">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="19ce0-848">这三种<xref:System.Drawing.PointF>结构表示平行四边形的左上角、 右上角和左下角。</span><span class="sxs-lookup"><span data-stu-id="19ce0-848">The three <xref:System.Drawing.PointF> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="19ce0-849">第四个点推断出以形成一个平行四边形的前三个。</span><span class="sxs-lookup"><span data-stu-id="19ce0-849">The fourth point is extrapolated from the first three to form a parallelogram.</span></span>  
  
 <span data-ttu-id="19ce0-850">表示的图像`image`缩放和剪切以适应指定的平行四边形的形状对象`destPoints`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-850">The image represented by the `image` object is scaled and sheared to fit the shape of the parallelogram specified by the `destPoints` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-851">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-851">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-852">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-852">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-853">从 JPEG 文件 sampimag.jpg 位于同示例的文件夹中创建的映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-853">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="19ce0-854">创建定义在其中绘制图像的平行四边形的点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-854">Creates points that define a parallelogram in which to draw the image.</span></span>  
  
-   <span data-ttu-id="19ce0-855">将图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-855">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="19ce0-856">平行四边形的位置在屏幕上，查找映像，并原始图像和大小的大小和形状的平行四边形确定的缩放和剪切所绘制图像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-856">The position of the parallelogram locates the image on the screen, and the size of the original image and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#41](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#41)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#41](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#41)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#41](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-857">
            <paramref name="image" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-857">
              <paramref name="image" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Rectangle -&gt; unit" Usage="graphics.DrawImage (image, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="image">
          <span data-ttu-id="19ce0-858">要绘制的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-858">
              <see cref="T:System.Drawing.Image" /> to draw.</span>
          </span>
        </param>
        <param name="rect">
          <span data-ttu-id="19ce0-859">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图像的位置和大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-859">
              <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-860">在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-860">Draws the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-861">表示的图像`image`对象扩展到的维度`rect`矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-861">The image represented by the `image` object is scaled to the dimensions of the `rect` rectangle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-862">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-862">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-863">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-863">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-864">从 JPEG 文件 sampimag.jpg 位于同示例的文件夹中创建的映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-864">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="19ce0-865">创建在其中绘制图像的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-865">Creates a rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="19ce0-866">将图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-866">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="19ce0-867">矩形的位置在屏幕上，查找映像，并将原始图像的大小和矩形的大小确定所绘制图像的缩放。</span><span class="sxs-lookup"><span data-stu-id="19ce0-867">The position of the rectangle locates the image on the screen, and the size of the original image and the size of the rectangle determines the scaling of the drawn image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#46](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#46)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#46](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#46)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#46](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#46)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-868">
            <paramref name="image" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-868">
              <paramref name="image" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.RectangleF -&gt; unit" Usage="graphics.DrawImage (image, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="image">
          <span data-ttu-id="19ce0-869">要绘制的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-869">
              <see cref="T:System.Drawing.Image" /> to draw.</span>
          </span>
        </param>
        <param name="rect">
          <span data-ttu-id="19ce0-870">
            <see cref="T:System.Drawing.RectangleF" /> 结构，它指定所绘制图像的位置和大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-870">
              <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn image.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-871">在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-871">Draws the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-872">表示的图像`image`对象扩展到的维度`rect`矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-872">The image represented by the `image` object is scaled to the dimensions of the `rect` rectangle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-873">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-873">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-874">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-874">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-875">从 JPEG 文件 sampimag.jpg 位于同示例的文件夹中创建的映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-875">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="19ce0-876">创建在其中绘制图像的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-876">Creates a rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="19ce0-877">将图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-877">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="19ce0-878">矩形的位置在屏幕上，确定图像和图像的原始大小和矩形的大小确定所绘制图像的缩放。</span><span class="sxs-lookup"><span data-stu-id="19ce0-878">The position of the rectangle locates the image on the screen, and the original size of the image and the size of the rectangle determines the scaling of the drawn image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#56](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#56)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#56](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#56)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#56](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#56)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-879">
            <paramref name="image" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-879">
              <paramref name="image" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, int x, int y);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * int * int -&gt; unit" Usage="graphics.DrawImage (image, x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="image">
          <span data-ttu-id="19ce0-880">要绘制的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-880">
              <see cref="T:System.Drawing.Image" /> to draw.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="19ce0-881">所绘制图像的左上角的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-881">The x-coordinate of the upper-left corner of the drawn image.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="19ce0-882">所绘制图像的左上角的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-882">The y-coordinate of the upper-left corner of the drawn image.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-883">在由坐标对指定的位置，使用图像的原始物理大小绘制指定的图像。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-883">Draws the specified image, using its original physical size, at the location specified by a coordinate pair.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-884"><xref:System.Drawing.Image>存储像素宽度的值和水平分辨率 （每英寸点数） 的值。</span><span class="sxs-lookup"><span data-stu-id="19ce0-884">An <xref:System.Drawing.Image> stores a value for pixel width and a value for horizontal resolution (dots per inch).</span></span> <span data-ttu-id="19ce0-885">物理宽度，以英寸为单位的测量单位是映像的像素宽度除以的水平分辨率。</span><span class="sxs-lookup"><span data-stu-id="19ce0-885">The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</span></span> <span data-ttu-id="19ce0-886">例如，带有像素宽度为 216 和 72 每英寸点数为单位的水平分辨率的图像具有物理宽度为 3 英寸。</span><span class="sxs-lookup"><span data-stu-id="19ce0-886">For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches.</span></span> <span data-ttu-id="19ce0-887">此说明同样适用于像素高度和物理高度。</span><span class="sxs-lookup"><span data-stu-id="19ce0-887">Similar remarks apply to pixel height and physical height.</span></span>  
  
 <span data-ttu-id="19ce0-888"><xref:System.Drawing.Graphics.DrawImage%2A>方法绘制图像使用的物理大小，因此图像将具有其正确的大小，以英寸为单位，而不考虑显示设备的分辨率 （每英寸点数）。</span><span class="sxs-lookup"><span data-stu-id="19ce0-888">The <xref:System.Drawing.Graphics.DrawImage%2A> method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</span></span> <span data-ttu-id="19ce0-889">例如，假设映像具有像素宽度为 216 和水平分辨率为每英寸点数为 72。</span><span class="sxs-lookup"><span data-stu-id="19ce0-889">For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</span></span> <span data-ttu-id="19ce0-890">如果调用<xref:System.Drawing.Graphics.DrawImage%2A>分辨率为每英寸 96 点的设备上绘制该图像，则在呈现的图像的像素宽度将是 (216/72) \* 96 = 288。</span><span class="sxs-lookup"><span data-stu-id="19ce0-890">If you call <xref:System.Drawing.Graphics.DrawImage%2A> to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)\*96 = 288.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-891">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-891">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-892">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-892">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-893">从文件夹中的示例的示例文件夹中的 sampimag.jpg 位于同 sampimag.jpg 位于同一个 JPEG 文件创建的映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-893">Creates an image from a JPEG file SampImag.jpg in the folder of the example SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="19ce0-894">创建在其中绘制图像的左上角的点的坐标。</span><span class="sxs-lookup"><span data-stu-id="19ce0-894">Creates the coordinates of a point at which to draw the upper-left corner of the image.</span></span>  
  
-   <span data-ttu-id="19ce0-895">绘制不成比例的图像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-895">Draws the unscaled image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#58](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#58)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#58](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#58)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#58](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#58)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-896">
            <paramref name="image" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-896">
              <paramref name="image" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, float x, float y);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * single * single -&gt; unit" Usage="graphics.DrawImage (image, x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="image">
          <span data-ttu-id="19ce0-897">要绘制的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-897">
              <see cref="T:System.Drawing.Image" /> to draw.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="19ce0-898">所绘制图像的左上角的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-898">The x-coordinate of the upper-left corner of the drawn image.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="19ce0-899">所绘制图像的左上角的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-899">The y-coordinate of the upper-left corner of the drawn image.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-900">在指定的位置使用原始物理大小绘制指定的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-900">Draws the specified <see cref="T:System.Drawing.Image" />, using its original physical size, at the specified location.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-901"><xref:System.Drawing.Image>存储像素宽度的值和水平分辨率 （每英寸点数） 的值。</span><span class="sxs-lookup"><span data-stu-id="19ce0-901">An <xref:System.Drawing.Image> stores a value for pixel width and a value for horizontal resolution (dots per inch).</span></span> <span data-ttu-id="19ce0-902">物理宽度，以英寸为单位的测量单位是映像的像素宽度除以的水平分辨率。</span><span class="sxs-lookup"><span data-stu-id="19ce0-902">The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</span></span> <span data-ttu-id="19ce0-903">例如，带有像素宽度为 216 和 72 每英寸点数为单位的水平分辨率的图像具有物理宽度为 3 英寸。</span><span class="sxs-lookup"><span data-stu-id="19ce0-903">For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches.</span></span> <span data-ttu-id="19ce0-904">此说明同样适用于像素高度和物理高度。</span><span class="sxs-lookup"><span data-stu-id="19ce0-904">Similar remarks apply to pixel height and physical height.</span></span>  
  
 <span data-ttu-id="19ce0-905">此方法使用绘制图像的物理大小，因此图像将具有其正确的大小，以英寸为单位，而不考虑显示设备的分辨率 （每英寸点数）。</span><span class="sxs-lookup"><span data-stu-id="19ce0-905">This method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</span></span> <span data-ttu-id="19ce0-906">例如，假设映像具有像素宽度为 216 和水平分辨率为每英寸点数为 72。</span><span class="sxs-lookup"><span data-stu-id="19ce0-906">For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</span></span> <span data-ttu-id="19ce0-907">如果调用此方法以分辨率为每英寸 96 点的设备上绘制该映像，则在呈现的图像的像素宽度将 (216/72) \* 96 = 288。</span><span class="sxs-lookup"><span data-stu-id="19ce0-907">If you call this method to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)\*96 = 288.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-908">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-908">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-909">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-909">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-910">从 JPEG 文件 sampimag.jpg 位于同示例的文件夹中创建的映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-910">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="19ce0-911">创建在其中绘制图像的左上角的点的坐标。</span><span class="sxs-lookup"><span data-stu-id="19ce0-911">Creates the coordinates of a point at which to draw the upper-left corner of the image.</span></span>  
  
-   <span data-ttu-id="19ce0-912">将不成比例的图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-912">Draws the unscaled image to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#61](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#61)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#61](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#61)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#61](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#61)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-913">
            <paramref name="image" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-913">
              <paramref name="image" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Point[] destPoints, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit srcUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, cli::array &lt;System::Drawing::Point&gt; ^ destPoints, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit srcUnit);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Point[] * System.Drawing.Rectangle * System.Drawing.GraphicsUnit -&gt; unit" Usage="graphics.DrawImage (image, destPoints, srcRect, srcUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destPoints" Type="System.Drawing.Point[]" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="image">
          <span data-ttu-id="19ce0-914">要绘制的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-914">
              <see cref="T:System.Drawing.Image" /> to draw.</span>
          </span>
        </param>
        <param name="destPoints">
          <span data-ttu-id="19ce0-915">由三个 <see cref="T:System.Drawing.Point" /> 结构组成的数组，这三个结构定义一个平行四边形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-915">Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="19ce0-916">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它指定 <c>image</c> 对象中要绘制的部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-916">
              <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <c>image</c> object to draw.</span>
          </span>
        </param>
        <param name="srcUnit">
          <span data-ttu-id="19ce0-917">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定 <c>srcRect</c> 参数所用的度量单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-917">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <c>srcRect</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-918">在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-918">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-919">`destPoints`参数指定的平行四边形的三个点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-919">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="19ce0-920">这三种<xref:System.Drawing.Point>结构表示平行四边形的左上角、 右上角和左下角。</span><span class="sxs-lookup"><span data-stu-id="19ce0-920">The three <xref:System.Drawing.Point> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="19ce0-921">第四个点推断出以形成一个平行四边形的前三个。</span><span class="sxs-lookup"><span data-stu-id="19ce0-921">The fourth point is extrapolated from the first three to form a parallelogram.</span></span>  
  
 <span data-ttu-id="19ce0-922">`srcRect`参数指定的一个矩形部分`image`要绘制的对象。</span><span class="sxs-lookup"><span data-stu-id="19ce0-922">The `srcRect` parameter specifies a rectangular portion of the `image` object to draw.</span></span> <span data-ttu-id="19ce0-923">此部分进行缩放和剪切以适合指定的平行四边形`destPoints`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-923">This portion is scaled and sheared to fit inside the parallelogram specified by the `destPoints` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-924">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-924">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-925">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-925">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-926">从 JPEG 文件 sampimag.jpg 位于同示例的文件夹中创建的映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-926">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="19ce0-927">创建定义在其中绘制图像的平行四边形的点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-927">Creates points that define a parallelogram in which to draw the image.</span></span>  
  
-   <span data-ttu-id="19ce0-928">创建一个矩形来选择要绘制的图像的部分。</span><span class="sxs-lookup"><span data-stu-id="19ce0-928">Creates a rectangle to select the portion of the image to draw.</span></span>  
  
-   <span data-ttu-id="19ce0-929">设置图形绘制到像素的单位。</span><span class="sxs-lookup"><span data-stu-id="19ce0-929">Sets the graphics drawing unit to pixel.</span></span>  
  
-   <span data-ttu-id="19ce0-930">将图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-930">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="19ce0-931">平行四边形的位置在屏幕上，查找映像，并矩形和大小的大小和形状的平行四边形确定的缩放和剪切所绘制图像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-931">The position of the parallelogram locates the image on the screen, and the size of the rectangle and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#36](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#36)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#36](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#36)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#36](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#36)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-932">
            <paramref name="image" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-932">
              <paramref name="image" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit srcUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit srcUnit);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.GraphicsUnit -&gt; unit" Usage="graphics.DrawImage (image, destPoints, srcRect, srcUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="image">
          <span data-ttu-id="19ce0-933">要绘制的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-933">
              <see cref="T:System.Drawing.Image" /> to draw.</span>
          </span>
        </param>
        <param name="destPoints">
          <span data-ttu-id="19ce0-934">由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个平行四边形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-934">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="19ce0-935">
            <see cref="T:System.Drawing.RectangleF" /> 结构，它指定 <c>image</c> 对象中要绘制的部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-935">
              <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the <c>image</c> object to draw.</span>
          </span>
        </param>
        <param name="srcUnit">
          <span data-ttu-id="19ce0-936">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定 <c>srcRect</c> 参数所用的度量单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-936">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <c>srcRect</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-937">在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-937">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-938">`destPoints`参数指定的平行四边形的三个点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-938">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="19ce0-939">这三种<xref:System.Drawing.PointF>结构表示平行四边形的左上角、 右上角和左下角。</span><span class="sxs-lookup"><span data-stu-id="19ce0-939">The three <xref:System.Drawing.PointF> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="19ce0-940">第四个点推断出以形成一个平行四边形的前三个。</span><span class="sxs-lookup"><span data-stu-id="19ce0-940">The fourth point is extrapolated from the first three to form a parallelogram.</span></span>  
  
 <span data-ttu-id="19ce0-941">`srcRect`参数指定的一个矩形部分`image`要绘制的对象。</span><span class="sxs-lookup"><span data-stu-id="19ce0-941">The `srcRect` parameter specifies a rectangular portion of the `image` object to draw.</span></span> <span data-ttu-id="19ce0-942">此部分进行缩放和剪切以适合指定的平行四边形`destPoints`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-942">This portion is scaled and sheared to fit inside the parallelogram specified by the `destPoints` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-943">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-943">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-944">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-944">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-945">从 JPEG 文件 sampimag.jpg 位于同示例的文件夹中创建的映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-945">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="19ce0-946">创建定义要绘制图像在其中一个目标平行四边形的点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-946">Creates points that define a destination parallelogram in which to draw the image.</span></span>  
  
-   <span data-ttu-id="19ce0-947">创建要从中提取部分图像的源矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-947">Creates a source rectangle from which to extract a portion of the image.</span></span>  
  
-   <span data-ttu-id="19ce0-948">设置源矩形的度量的单位为像素。</span><span class="sxs-lookup"><span data-stu-id="19ce0-948">Sets the unit of measure of the source rectangle to pixels.</span></span>  
  
-   <span data-ttu-id="19ce0-949">将图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-949">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="19ce0-950">目标平行四边形的位置在屏幕上查找映像，源矩形和大小的大小和形状的目标的平行四边形确定的缩放和所绘制图像的剪切并矩形的大小确定原始图像的哪个部分绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-950">The position of the destination parallelogram locates the image on the screen, the size of the source rectangle and the size and shape of the destination parallelogram determines the scaling and shearing of the drawn image, and the size of the rectangle determines what portion of the original image is drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#42](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#42)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#42](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#42)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#42](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-951">
            <paramref name="image" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-951">
              <paramref name="image" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Rectangle destRect, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit srcUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::Rectangle destRect, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit srcUnit);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Rectangle * System.Drawing.Rectangle * System.Drawing.GraphicsUnit -&gt; unit" Usage="graphics.DrawImage (image, destRect, srcRect, srcUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="image">
          <span data-ttu-id="19ce0-952">要绘制的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-952">
              <see cref="T:System.Drawing.Image" /> to draw.</span>
          </span>
        </param>
        <param name="destRect">
          <span data-ttu-id="19ce0-953">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图像的位置和大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-953">
              <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image.</span>
          </span>
          <span data-ttu-id="19ce0-954">将图像进行缩放以适合该矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-954">The image is scaled to fit the rectangle.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="19ce0-955">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它指定 <c>image</c> 对象中要绘制的部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-955">
              <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <c>image</c> object to draw.</span>
          </span>
        </param>
        <param name="srcUnit">
          <span data-ttu-id="19ce0-956">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定 <c>srcRect</c> 参数所用的度量单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-956">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <c>srcRect</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-957">在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-957">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-958">`srcRect`参数指定的一个矩形部分`image`要绘制的对象。</span><span class="sxs-lookup"><span data-stu-id="19ce0-958">The `srcRect` parameter specifies a rectangular portion of the `image` object to draw.</span></span> <span data-ttu-id="19ce0-959">此部分进行缩放以容纳在由指定的矩形内`destRect`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-959">This portion is scaled to fit inside the rectangle specified by the `destRect` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-960">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-960">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-961">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-961">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-962">从 JPEG 文件 sampimag.jpg 位于同示例的文件夹中创建的映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-962">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="19ce0-963">创建在其中绘制图像的目标矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-963">Creates a destination rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="19ce0-964">创建要从中提取部分图像的源矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-964">Creates a source rectangle from which to extract a portion of the image.</span></span>  
  
-   <span data-ttu-id="19ce0-965">设置源矩形的度量的单位为像素。</span><span class="sxs-lookup"><span data-stu-id="19ce0-965">Sets the unit of measure of the source rectangle to pixels.</span></span>  
  
-   <span data-ttu-id="19ce0-966">将图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-966">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="19ce0-967">目标矩形的位置在屏幕上查找映像、 源和目标矩形的大小确定所绘制图像的缩放和源矩形的大小决定原始图像的哪个部分绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-967">The position of the destination rectangle locates the image on the screen, the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#47](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#47)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#47](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#47)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#47](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#47)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-968">
            <paramref name="image" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-968">
              <paramref name="image" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.RectangleF destRect, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.RectangleF destRect, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit srcUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::RectangleF destRect, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit srcUnit);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.RectangleF * System.Drawing.RectangleF * System.Drawing.GraphicsUnit -&gt; unit" Usage="graphics.DrawImage (image, destRect, srcRect, srcUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="image">
          <span data-ttu-id="19ce0-969">要绘制的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-969">
              <see cref="T:System.Drawing.Image" /> to draw.</span>
          </span>
        </param>
        <param name="destRect">
          <span data-ttu-id="19ce0-970">
            <see cref="T:System.Drawing.RectangleF" /> 结构，它指定所绘制图像的位置和大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-970">
              <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn image.</span>
          </span>
          <span data-ttu-id="19ce0-971">将图像进行缩放以适合该矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-971">The image is scaled to fit the rectangle.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="19ce0-972">
            <see cref="T:System.Drawing.RectangleF" /> 结构，它指定 <c>image</c> 对象中要绘制的部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-972">
              <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the <c>image</c> object to draw.</span>
          </span>
        </param>
        <param name="srcUnit">
          <span data-ttu-id="19ce0-973">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定 <c>srcRect</c> 参数所用的度量单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-973">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <c>srcRect</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-974">在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-974">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-975">`srcRect`参数指定的一个矩形部分`image`要绘制的对象。</span><span class="sxs-lookup"><span data-stu-id="19ce0-975">The `srcRect` parameter specifies a rectangular portion of the `image` object to draw.</span></span> <span data-ttu-id="19ce0-976">此部分进行缩放以容纳在由指定的矩形内`destRect`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-976">This portion is scaled to fit inside the rectangle specified by the `destRect` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-977">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-977">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-978">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-978">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-979">从 JPEG 文件 sampimag.jpg 位于同示例的文件夹中创建的映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-979">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="19ce0-980">创建在其中绘制图像的目标矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-980">Creates a destination rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="19ce0-981">创建要从中提取部分图像的源矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-981">Creates a source rectangle from which to extract a portion of the image.</span></span>  
  
-   <span data-ttu-id="19ce0-982">设置源矩形的度量的单位为像素。</span><span class="sxs-lookup"><span data-stu-id="19ce0-982">Sets the unit of measure of the source rectangle to pixels.</span></span>  
  
-   <span data-ttu-id="19ce0-983">将图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-983">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="19ce0-984">目标矩形的位置在屏幕上查找映像、 源和目标矩形的大小确定所绘制图像的缩放和源矩形的大小决定原始图像的哪个部分绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-984">The position of the destination rectangle locates the image on the screen, the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#57](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#57)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#57](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#57)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#57](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#57)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-985">
            <paramref name="image" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-985">
              <paramref name="image" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Point[] destPoints, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, cli::array &lt;System::Drawing::Point&gt; ^ destPoints, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Point[] * System.Drawing.Rectangle * System.Drawing.GraphicsUnit * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.DrawImage (image, destPoints, srcRect, srcUnit, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destPoints" Type="System.Drawing.Point[]" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="image">
          <span data-ttu-id="19ce0-986">要绘制的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-986">
              <see cref="T:System.Drawing.Image" /> to draw.</span>
          </span>
        </param>
        <param name="destPoints">
          <span data-ttu-id="19ce0-987">由三个 <see cref="T:System.Drawing.Point" /> 结构组成的数组，这三个结构定义一个平行四边形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-987">Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="19ce0-988">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它指定 <c>image</c> 对象中要绘制的部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-988">
              <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <c>image</c> object to draw.</span>
          </span>
        </param>
        <param name="srcUnit">
          <span data-ttu-id="19ce0-989">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定 <c>srcRect</c> 参数所用的度量单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-989">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <c>srcRect</c> parameter.</span>
          </span>
        </param>
        <param name="imageAttr">
          <span data-ttu-id="19ce0-990">
            <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定 <c>image</c> 对象的重新着色和伽玛信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-990">
              <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <c>image</c> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-991">在指定位置绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-991">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-992">`destPoints`参数指定的平行四边形的三个点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-992">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="19ce0-993">这三种<xref:System.Drawing.Point>结构表示平行四边形的左上角、 右上角和左下角。</span><span class="sxs-lookup"><span data-stu-id="19ce0-993">The three <xref:System.Drawing.Point> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="19ce0-994">第四个点推断出以形成一个平行四边形的前三个。</span><span class="sxs-lookup"><span data-stu-id="19ce0-994">The fourth point is extrapolated from the first three to form a parallelogram.</span></span>  
  
 <span data-ttu-id="19ce0-995">`srcRect`参数指定的一个矩形部分`image`要绘制的对象。</span><span class="sxs-lookup"><span data-stu-id="19ce0-995">The `srcRect` parameter specifies a rectangular portion of the`image` object to draw.</span></span> <span data-ttu-id="19ce0-996">此部分进行缩放和剪切以适合指定的平行四边形`destPoints`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-996">This portion is scaled and sheared to fit inside the parallelogram specified by the `destPoints` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-997">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-997">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-998">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-998">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-999">从 JPEG 文件 sampimag.jpg 位于同示例的文件夹中创建的映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-999">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="19ce0-1000">创建定义在其中绘制图像的平行四边形的点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1000">Creates points that define a parallelogram in which to draw the image.</span></span>  
  
-   <span data-ttu-id="19ce0-1001">创建一个矩形来选择要绘制的图像的部分。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1001">Creates a rectangle to select the portion of the image to draw.</span></span>  
  
-   <span data-ttu-id="19ce0-1002">设置图形绘制到像素的单位。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1002">Sets the graphics drawing unit to pixel.</span></span>  
  
-   <span data-ttu-id="19ce0-1003">将原始图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1003">Draws the original image to the screen.</span></span>  
  
-   <span data-ttu-id="19ce0-1004">创建要在其中绘制调整后的图像的附加平行四边形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1004">Creates an additional parallelogram in which to draw an adjusted image.</span></span>  
  
-   <span data-ttu-id="19ce0-1005">创建和设置的调整后的映像，以便具有更大比常用伽玛值的属性。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1005">Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</span></span>  
  
-   <span data-ttu-id="19ce0-1006">将调整后的图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1006">Draws the adjusted image to the screen.</span></span>  
  
 <span data-ttu-id="19ce0-1007">对于原始、 未调整平行四边形中，位置在屏幕上，确定图像和矩形和大小的大小和形状的平行四边形确定的缩放和剪切所绘制图像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1007">For the original, unadjusted parallelogram, the position locates the image on the screen, and the size of the rectangle and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#37](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#37)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#37](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#37)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#37](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#37)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1008">
            <paramref name="image" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1008">
              <paramref name="image" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.GraphicsUnit * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.DrawImage (image, destPoints, srcRect, srcUnit, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="image">
          <span data-ttu-id="19ce0-1009">要绘制的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1009">
              <see cref="T:System.Drawing.Image" /> to draw.</span>
          </span>
        </param>
        <param name="destPoints">
          <span data-ttu-id="19ce0-1010">由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个平行四边形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1010">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="19ce0-1011">
            <see cref="T:System.Drawing.RectangleF" /> 结构，它指定 <c>image</c> 对象中要绘制的部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1011">
              <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the <c>image</c> object to draw.</span>
          </span>
        </param>
        <param name="srcUnit">
          <span data-ttu-id="19ce0-1012">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定 <c>srcRect</c> 参数所用的度量单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1012">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <c>srcRect</c> parameter.</span>
          </span>
        </param>
        <param name="imageAttr">
          <span data-ttu-id="19ce0-1013">
            <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定 <c>image</c> 对象的重新着色和伽玛信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1013">
              <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <c>image</c> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1014">在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1014">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1015">`destPoints`参数指定的平行四边形的三个点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1015">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="19ce0-1016">这三种<xref:System.Drawing.PointF>结构表示平行四边形的左上角、 右上角和左下角。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1016">The three <xref:System.Drawing.PointF> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="19ce0-1017">第四个点推断出以形成一个平行四边形的前三个。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1017">The fourth point is extrapolated from the first three to form a parallelogram.</span></span>  
  
 <span data-ttu-id="19ce0-1018">`srcRect`参数指定的一个矩形部分`image`要绘制的对象。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1018">The `srcRect` parameter specifies a rectangular portion of the `image` object to draw.</span></span> <span data-ttu-id="19ce0-1019">此部分进行缩放和剪切以适合指定的平行四边形`destPoints`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1019">This portion is scaled and sheared to fit inside the parallelogram specified by the `destPoints` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1020">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1020">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1021">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1021">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1022">从 JPEG 文件 sampimag.jpg 位于同示例的文件夹中创建的映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1022">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="19ce0-1023">创建定义要绘制图像在其中一个目标平行四边形的点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1023">Creates points that define a destination parallelogram in which to draw the image.</span></span>  
  
-   <span data-ttu-id="19ce0-1024">创建要从中提取部分图像的源矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1024">Creates a source rectangle from which to extract a portion of the image.</span></span>  
  
-   <span data-ttu-id="19ce0-1025">设置源矩形的度量的单位为像素。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1025">Sets the unit of measure of the source rectangle to pixels.</span></span>  
  
-   <span data-ttu-id="19ce0-1026">将原始图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1026">Draws the original image to the screen.</span></span>  
  
-   <span data-ttu-id="19ce0-1027">创建要在其中绘制调整后的图像的附加平行四边形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1027">Creates an additional parallelogram in which to draw an adjusted image.</span></span>  
  
-   <span data-ttu-id="19ce0-1028">创建和设置的调整后的映像，以便具有更大比常用伽玛值的属性。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1028">Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</span></span>  
  
-   <span data-ttu-id="19ce0-1029">将调整后的图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1029">Draws the adjusted image to the screen.</span></span>  
  
 <span data-ttu-id="19ce0-1030">对于原始、 未调整目标平行四边形，位置定位上屏幕、 源矩形的大小和大小的映像并目标平行四边形的形状确定的缩放和剪切所绘制的图像，和的大小矩形确定原始图像的哪个部分绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1030">For the original, unadjusted destination parallelogram, the position locates the image on the screen, the size of the source rectangle and the size and shape of the destination parallelogram determines the scaling and shearing of the drawn image, and the size of the rectangle determines what portion of the original image is drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#43](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#43)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#43](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#43)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#43](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#43)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1031">
            <paramref name="image" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1031">
              <paramref name="image" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, int x, int y, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, int32 x, int32 y, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit srcUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, int x, int y, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit srcUnit);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * int * int * System.Drawing.Rectangle * System.Drawing.GraphicsUnit -&gt; unit" Usage="graphics.DrawImage (image, x, y, srcRect, srcUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="image">
          <span data-ttu-id="19ce0-1032">要绘制的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1032">
              <see cref="T:System.Drawing.Image" /> to draw.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="19ce0-1033">所绘制图像的左上角的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1033">The x-coordinate of the upper-left corner of the drawn image.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="19ce0-1034">所绘制图像的左上角的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1034">The y-coordinate of the upper-left corner of the drawn image.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="19ce0-1035">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它指定 <c>image</c> 对象中要绘制的部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1035">
              <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <c>image</c> object to draw.</span>
          </span>
        </param>
        <param name="srcUnit">
          <span data-ttu-id="19ce0-1036">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定 <c>srcRect</c> 参数所用的度量单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1036">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <c>srcRect</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1037">在指定的位置绘制图像的一部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1037">Draws a portion of an image at a specified location.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1038"><xref:System.Drawing.Image>存储像素宽度的值和水平分辨率 （每英寸点数） 的值。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1038">An <xref:System.Drawing.Image> stores a value for pixel width and a value for horizontal resolution (dots per inch).</span></span> <span data-ttu-id="19ce0-1039">物理宽度，以英寸为单位的测量单位是映像的像素宽度除以的水平分辨率。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1039">The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</span></span> <span data-ttu-id="19ce0-1040">例如，像素宽度为 360、 72 每英寸点数为单位的水平分辨率的图像具有的物理宽度为 5 英寸。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1040">For example, an image with a pixel width of 360 and a horizontal resolution of 72 dots per inch has a physical width of 5 inches.</span></span> <span data-ttu-id="19ce0-1041">此说明同样适用于像素高度和物理高度。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1041">Similar remarks apply to pixel height and physical height.</span></span>  
  
 <span data-ttu-id="19ce0-1042">此方法绘制的图像使用的物理大小，因此图像部分将具有其正确的大小，以英寸为单位，而不考虑显示设备的分辨率 （每英寸点数） 的一部分。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1042">This method draws a portion of an image using its physical size, so the image portion will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</span></span> <span data-ttu-id="19ce0-1043">例如，假设绘制图像部分的像素宽度为 216 和水平分辨率为每英寸点数为 72。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1043">For example, suppose an image portion has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</span></span> <span data-ttu-id="19ce0-1044">如果调用此方法以分辨率为每英寸 96 点的设备上绘制该图像部分，呈现的图像部分的像素宽度将 (216/72) \* 96 = 288。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1044">If you call this method to draw that image portion on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image portion will be (216/72)\*96 = 288.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1045">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1045">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1046">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1046">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1047">从 JPEG 文件 sampimag.jpg 位于同示例的文件夹中创建的映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1047">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="19ce0-1048">创建在其中绘制图像的左上角的坐标。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1048">Creates the coordinates at which to draw the upper-left corner of the image.</span></span>  
  
-   <span data-ttu-id="19ce0-1049">创建要从中提取部分图像的源矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1049">Creates a source rectangle from which to extract a portion of the image.</span></span>  
  
-   <span data-ttu-id="19ce0-1050">设置源矩形的度量的单位为像素。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1050">Sets the unit of measure of the source rectangle to pixels.</span></span>  
  
-   <span data-ttu-id="19ce0-1051">将图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1051">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="19ce0-1052">源矩形的大小确定未缩放的原始图像的哪些部分绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1052">The size of the source rectangle determines what portion of the unscaled original image is drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#59](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#59)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#59](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#59)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#59](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#59)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1053">
            <paramref name="image" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1053">
              <paramref name="image" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * int * int * int * int -&gt; unit" Usage="graphics.DrawImage (image, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="image">
          <span data-ttu-id="19ce0-1054">要绘制的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1054">
              <see cref="T:System.Drawing.Image" /> to draw.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="19ce0-1055">所绘制图像的左上角的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1055">The x-coordinate of the upper-left corner of the drawn image.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="19ce0-1056">所绘制图像的左上角的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1056">The y-coordinate of the upper-left corner of the drawn image.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="19ce0-1057">所绘制图像的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1057">Width of the drawn image.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="19ce0-1058">所绘制图像的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1058">Height of the drawn image.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1059">在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1059">Draws the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1060">由定义的矩形`x`， `y`， `width`，和`height`参数确定的位置和所绘制图像的大小。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1060">The rectangle defined by the `x`, `y`, `width`, and `height` parameters determines the position and size of the drawn image.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1061">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1061">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1062">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1062">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1063">从 JPEG 文件 sampimag.jpg 位于同示例的文件夹中创建的映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1063">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="19ce0-1064">创建的位置和在其中绘制图像的矩形的大小。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1064">Creates the position and size of a rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="19ce0-1065">将图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1065">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="19ce0-1066">矩形的位置在屏幕上，查找映像，并将原始图像的大小和矩形的大小确定所绘制图像的缩放。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1066">The position of the rectangle locates the image on the screen, and the size of the original image and the size of the rectangle determines the scaling of the drawn image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#60](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#60)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#60](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#60)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#60](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#60)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1067">
            <paramref name="image" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1067">
              <paramref name="image" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, float x, float y, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, float32 x, float32 y, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit srcUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, float x, float y, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit srcUnit);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * single * single * System.Drawing.RectangleF * System.Drawing.GraphicsUnit -&gt; unit" Usage="graphics.DrawImage (image, x, y, srcRect, srcUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="image">
          <span data-ttu-id="19ce0-1068">要绘制的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1068">
              <see cref="T:System.Drawing.Image" /> to draw.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="19ce0-1069">所绘制图像的左上角的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1069">The x-coordinate of the upper-left corner of the drawn image.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="19ce0-1070">所绘制图像的左上角的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1070">The y-coordinate of the upper-left corner of the drawn image.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="19ce0-1071">
            <see cref="T:System.Drawing.RectangleF" /> 结构，它指定 <see cref="T:System.Drawing.Image" /> 中要绘制的部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1071">
              <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the <see cref="T:System.Drawing.Image" /> to draw.</span>
          </span>
        </param>
        <param name="srcUnit">
          <span data-ttu-id="19ce0-1072">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定 <c>srcRect</c> 参数所用的度量单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1072">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <c>srcRect</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1073">在指定的位置绘制图像的一部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1073">Draws a portion of an image at a specified location.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1074"><xref:System.Drawing.Image>存储像素宽度的值和水平分辨率 （每英寸点数） 的值。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1074">An <xref:System.Drawing.Image> stores a value for pixel width and a value for horizontal resolution (dots per inch).</span></span> <span data-ttu-id="19ce0-1075">物理宽度，以英寸为单位的测量单位是映像的像素宽度除以的水平分辨率。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1075">The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</span></span> <span data-ttu-id="19ce0-1076">例如，像素宽度为 360、 72 每英寸点数为单位的水平分辨率的图像具有的物理宽度为 5 英寸。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1076">For example, an image with a pixel width of 360 and a horizontal resolution of 72 dots per inch has a physical width of 5 inches.</span></span> <span data-ttu-id="19ce0-1077">此说明同样适用于像素高度和物理高度。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1077">Similar remarks apply to pixel height and physical height.</span></span>  
  
 <span data-ttu-id="19ce0-1078">此方法绘制的图像使用的物理大小，因此图像部分将具有其正确的大小，以英寸为单位，而不考虑显示设备的分辨率 （每英寸点数） 的一部分。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1078">This method draws a portion of an image using its physical size, so the image portion will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</span></span> <span data-ttu-id="19ce0-1079">例如，假设绘制图像部分的像素宽度为 216 和水平分辨率为每英寸点数为 72。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1079">For example, suppose an image portion has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</span></span> <span data-ttu-id="19ce0-1080">如果调用此方法以分辨率为每英寸 96 点的设备上绘制该图像部分，呈现的图像部分的像素宽度将 (216/72) \* 96 = 288。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1080">If you call this method to draw that image portion on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image portion will be (216/72)\*96 = 288.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1081">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1081">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1082">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1082">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1083">从 JPEG 文件 sampimag.jpg 位于同示例的文件夹中创建的映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1083">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="19ce0-1084">创建在其中绘制图像的左上角的坐标。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1084">Creates the coordinates at which to draw the upper-left corner of the image.</span></span>  
  
-   <span data-ttu-id="19ce0-1085">创建要从中提取部分图像的源矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1085">Creates a source rectangle from which to extract a portion of the image.</span></span>  
  
-   <span data-ttu-id="19ce0-1086">设置源矩形的度量的单位为像素。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1086">Sets the unit of measure of the source rectangle to pixels.</span></span>  
  
-   <span data-ttu-id="19ce0-1087">将图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1087">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="19ce0-1088">源矩形的大小确定未缩放的原始图像的哪些部分绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1088">The size of the source rectangle determines what portion of the unscaled original image is drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#62](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#62)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#62](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#62)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#62](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#62)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1089">
            <paramref name="image" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1089">
              <paramref name="image" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, float x, float y, float width, float height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, float32 x, float32 y, float32 width, float32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, float x, float y, float width, float height);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * single * single * single * single -&gt; unit" Usage="graphics.DrawImage (image, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="image">
          <span data-ttu-id="19ce0-1090">要绘制的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1090">
              <see cref="T:System.Drawing.Image" /> to draw.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="19ce0-1091">所绘制图像的左上角的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1091">The x-coordinate of the upper-left corner of the drawn image.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="19ce0-1092">所绘制图像的左上角的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1092">The y-coordinate of the upper-left corner of the drawn image.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="19ce0-1093">所绘制图像的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1093">Width of the drawn image.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="19ce0-1094">所绘制图像的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1094">Height of the drawn image.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1095">在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1095">Draws the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1096">由定义的矩形`x`， `y`， `width`，和`height`参数确定的位置和所绘制图像的大小。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1096">The rectangle defined by the `x`, `y`, `width`, and `height` parameters determines the position and size of the drawn image.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1097">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1097">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1098">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1098">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1099">从 JPEG 文件 sampimag.jpg 位于同示例的文件夹中创建的映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1099">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="19ce0-1100">创建的位置和在其中绘制图像的矩形的大小。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1100">Creates the position and size of a rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="19ce0-1101">将图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1101">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="19ce0-1102">矩形的位置在屏幕上，查找映像，并将原始图像的大小和矩形的大小确定所绘制图像的缩放。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1102">The position of the rectangle locates the image on the screen, and the size of the original image and the size of the rectangle determines the scaling of the drawn image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#63](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#63)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#63](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#63)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#63](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#63)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1103">
            <paramref name="image" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1103">
              <paramref name="image" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr, System.Drawing.Graphics.DrawImageAbort callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Point[] destPoints, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Imaging.ImageAttributes imageAttr, class System.Drawing.Graphics/DrawImageAbort callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, cli::array &lt;System::Drawing::Point&gt; ^ destPoints, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Imaging::ImageAttributes ^ imageAttr, System::Drawing::Graphics::DrawImageAbort ^ callback);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Point[] * System.Drawing.Rectangle * System.Drawing.GraphicsUnit * System.Drawing.Imaging.ImageAttributes * System.Drawing.Graphics.DrawImageAbort -&gt; unit" Usage="graphics.DrawImage (image, destPoints, srcRect, srcUnit, imageAttr, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destPoints" Type="System.Drawing.Point[]" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+DrawImageAbort" />
      </Parameters>
      <Docs>
        <param name="image">
          <span data-ttu-id="19ce0-1104">要绘制的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1104">
              <see cref="T:System.Drawing.Image" /> to draw.</span>
          </span>
        </param>
        <param name="destPoints">
          <span data-ttu-id="19ce0-1105">由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个平行四边形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1105">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="19ce0-1106">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它指定 <c>image</c> 对象中要绘制的部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1106">
              <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <c>image</c> object to draw.</span>
          </span>
        </param>
        <param name="srcUnit">
          <span data-ttu-id="19ce0-1107">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定 <c>srcRect</c> 参数所用的度量单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1107">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <c>srcRect</c> parameter.</span>
          </span>
        </param>
        <param name="imageAttr">
          <span data-ttu-id="19ce0-1108">
            <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定 <c>image</c> 对象的重新着色和伽玛信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1108">
              <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <c>image</c> object.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-1109">
            <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委托，它指定在绘制图像期间要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1109">
              <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image.</span>
          </span>
          <span data-ttu-id="19ce0-1110">此方法被频繁调用以检查是否根据应用程序确定的条件停止 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> 方法的执行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1110">This method is called frequently to check whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> method according to application-determined criteria.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1111">在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1111">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1112">`destPoints`参数指定的平行四边形的三个点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1112">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="19ce0-1113">这三种<xref:System.Drawing.PointF>结构表示平行四边形的左上角、 右上角和左下角。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1113">The three <xref:System.Drawing.PointF> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="19ce0-1114">第四个点推断出以形成一个平行四边形的前三个。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1114">The fourth point is extrapolated from the first three to form a parallelogram.</span></span>  
  
 <span data-ttu-id="19ce0-1115">`srcRect`参数指定的一个矩形部分`image`要绘制的对象。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1115">The `srcRect` parameter specifies a rectangular portion of the `image` object to draw.</span></span> <span data-ttu-id="19ce0-1116">此部分进行缩放和剪切以适合指定的平行四边形`destPoints`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1116">This portion is scaled and sheared to fit inside the parallelogram specified by the `destPoints` parameter.</span></span>  
  
 <span data-ttu-id="19ce0-1117">使用此重载`callback`参数提供了一种根据条件由应用程序开始后停止的绘制图像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1117">This overload with the `callback` parameter provides the means to stop the drawing of an image once it starts according to criteria determined by the application.</span></span> <span data-ttu-id="19ce0-1118">例如，应用程序可能开始绘制的大图像，用户可能滚动到屏幕外，用例的应用程序可以在其中停止绘制图像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1118">For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1119">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1119">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1120">代码首先定义回调方法以<xref:System.Drawing.Graphics.DrawImageAbort>委托; 定义简单，只是测试以了解是否<xref:System.Drawing.Graphics.DrawImage%2A>方法调用它为 null`callBackData`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1120">The code first defines a callback method for the <xref:System.Drawing.Graphics.DrawImageAbort> delegate; the definition is simplistic and merely tests to see whether the <xref:System.Drawing.Graphics.DrawImage%2A> method calls it with a null `callBackData` parameter.</span></span> <span data-ttu-id="19ce0-1121">主正文中的示例执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1121">The main body of the example performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1122">创建的实例<xref:System.Drawing.Graphics.DrawImageAbort>回调方法：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1122">Creates an instance of the <xref:System.Drawing.Graphics.DrawImageAbort> callback method:</span></span>  
  
-   <span data-ttu-id="19ce0-1123">从 JPEG 文件 sampimag.jpg 位于同示例的文件夹中创建的映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1123">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="19ce0-1124">创建定义在其中绘制图像的平行四边形的点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1124">Creates points that define a parallelogram in which to draw the image.</span></span>  
  
-   <span data-ttu-id="19ce0-1125">创建一个矩形来选择要绘制的图像的部分。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1125">Creates a rectangle to select the portion of the image to draw.</span></span>  
  
-   <span data-ttu-id="19ce0-1126">设置图形绘制到像素的单位。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1126">Sets the graphics drawing unit to pixel.</span></span>  
  
-   <span data-ttu-id="19ce0-1127">将原始图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1127">Draws the original image to the screen.</span></span>  
  
-   <span data-ttu-id="19ce0-1128">创建要在其中绘制调整后的图像的附加平行四边形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1128">Creates an additional parallelogram in which to draw an adjusted image.</span></span>  
  
-   <span data-ttu-id="19ce0-1129">创建和设置的调整后的映像，以便具有更大比常用伽玛值的属性。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1129">Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</span></span>  
  
-   <span data-ttu-id="19ce0-1130">将调整后的图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1130">Draws the adjusted image to the screen.</span></span>  
  
 <span data-ttu-id="19ce0-1131">对于原始、 未调整平行四边形中，位置在屏幕上，确定图像和矩形和大小的大小和形状的平行四边形确定的缩放和剪切所绘制图像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1131">For the original, unadjusted parallelogram, the position locates the image on the screen, and the size of the rectangle and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.</span></span>  
  
 <span data-ttu-id="19ce0-1132">由于本示例使用的重载，不能通过`callBackData`参数，<xref:System.Drawing.Graphics.DrawImageAbort>回调返回`true`，这将导致<xref:System.Drawing.Graphics.DrawImage%2A>方法结束时，和的示例中包含的异常处理代码将输出异常文本而不是绘制图像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1132">Because this example uses an overload that does not pass a `callBackData` parameter, the <xref:System.Drawing.Graphics.DrawImageAbort> callback returns `true`, which causes the <xref:System.Drawing.Graphics.DrawImage%2A> method to end, and the exception-handling code included in the example prints out the exception text rather than drawing the image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#38](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#38)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#38](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#38)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#38](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#38)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1133">
            <paramref name="image" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1133">
              <paramref name="image" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr, System.Drawing.Graphics.DrawImageAbort callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Imaging.ImageAttributes imageAttr, class System.Drawing.Graphics/DrawImageAbort callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Imaging::ImageAttributes ^ imageAttr, System::Drawing::Graphics::DrawImageAbort ^ callback);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.GraphicsUnit * System.Drawing.Imaging.ImageAttributes * System.Drawing.Graphics.DrawImageAbort -&gt; unit" Usage="graphics.DrawImage (image, destPoints, srcRect, srcUnit, imageAttr, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+DrawImageAbort" />
      </Parameters>
      <Docs>
        <param name="image">
          <span data-ttu-id="19ce0-1134">要绘制的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1134">
              <see cref="T:System.Drawing.Image" /> to draw.</span>
          </span>
        </param>
        <param name="destPoints">
          <span data-ttu-id="19ce0-1135">由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个平行四边形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1135">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="19ce0-1136">
            <see cref="T:System.Drawing.RectangleF" /> 结构，它指定 <c>image</c> 对象中要绘制的部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1136">
              <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the <c>image</c> object to draw.</span>
          </span>
        </param>
        <param name="srcUnit">
          <span data-ttu-id="19ce0-1137">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定 <c>srcRect</c> 参数所用的度量单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1137">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <c>srcRect</c> parameter.</span>
          </span>
        </param>
        <param name="imageAttr">
          <span data-ttu-id="19ce0-1138">
            <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定 <c>image</c> 对象的重新着色和伽玛信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1138">
              <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <c>image</c> object.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-1139">
            <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委托，它指定在绘制图像期间要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1139">
              <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image.</span>
          </span>
          <span data-ttu-id="19ce0-1140">此方法被频繁调用以检查是否根据应用程序确定的条件停止 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> 方法的执行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1140">This method is called frequently to check whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> method according to application-determined criteria.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1141">在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1141">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1142">`destPoints`参数指定的平行四边形的三个点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1142">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="19ce0-1143">这三种<xref:System.Drawing.PointF>结构表示平行四边形的左上角、 右上角和左下角。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1143">The three <xref:System.Drawing.PointF> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="19ce0-1144">第四个点推断出以形成一个平行四边形的前三个。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1144">The fourth point is extrapolated from the first three to form a parallelogram.</span></span>  
  
 <span data-ttu-id="19ce0-1145">`srcRect`参数指定的一个矩形部分`image`要绘制的对象。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1145">The `srcRect` parameter specifies a rectangular portion of the `image` object to draw.</span></span> <span data-ttu-id="19ce0-1146">此部分进行缩放和剪切以适合指定的平行四边形`destPoints`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1146">This portion is scaled and sheared to fit inside the parallelogram specified by the `destPoints` parameter.</span></span>  
  
 <span data-ttu-id="19ce0-1147">使用此重载`callback`参数提供了一种根据条件由应用程序开始后停止的绘制图像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1147">This overload with the `callback` parameter provides the means to stop the drawing of an image once it starts according to criteria determined by the application.</span></span> <span data-ttu-id="19ce0-1148">例如，应用程序可能开始绘制的大图像，用户可能滚动到屏幕外，用例的应用程序可以在其中停止绘制图像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1148">For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1149">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1149">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1150">代码首先定义回调方法以<xref:System.Drawing.Graphics.DrawImageAbort>委托; 定义简单，只是测试以了解是否<xref:System.Drawing.Graphics.DrawImage%2A>方法调用它为 null`callBackData`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1150">The code first defines a callback method for the <xref:System.Drawing.Graphics.DrawImageAbort> delegate; the definition is simplistic and merely tests to see whether the <xref:System.Drawing.Graphics.DrawImage%2A> method calls it with a null `callBackData` parameter.</span></span> <span data-ttu-id="19ce0-1151">主正文中的示例执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1151">The main body of the example performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1152">创建的实例<xref:System.Drawing.Graphics.DrawImageAbort>回调方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1152">Creates an instance of the <xref:System.Drawing.Graphics.DrawImageAbort> callback method.</span></span>  
  
-   <span data-ttu-id="19ce0-1153">从 JPEG 文件 sampimag.jpg 位于同示例的文件夹中创建的映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1153">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="19ce0-1154">创建定义在其中绘制图像的平行四边形的点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1154">Creates points that define a parallelogram in which to draw the image.</span></span>  
  
-   <span data-ttu-id="19ce0-1155">创建一个矩形来选择要绘制的图像的部分。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1155">Creates a rectangle to select the portion of the image to draw.</span></span>  
  
-   <span data-ttu-id="19ce0-1156">设置图形绘制到像素的单位。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1156">Sets the graphics drawing unit to pixel.</span></span>  
  
-   <span data-ttu-id="19ce0-1157">将原始图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1157">Draws the original image to the screen.</span></span>  
  
-   <span data-ttu-id="19ce0-1158">创建要在其中绘制调整后的图像的附加平行四边形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1158">Creates an additional parallelogram in which to draw an adjusted image.</span></span>  
  
-   <span data-ttu-id="19ce0-1159">创建和设置的调整后的映像，以便具有更大比常用伽玛值的属性。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1159">Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</span></span>  
  
-   <span data-ttu-id="19ce0-1160">将调整后的图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1160">Draws the adjusted image to the screen.</span></span>  
  
 <span data-ttu-id="19ce0-1161">对于原始、 未调整平行四边形中，位置在屏幕上，确定图像和矩形和大小的大小和形状的平行四边形确定的缩放和剪切所绘制图像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1161">For the original, unadjusted parallelogram, the position locates the image on the screen, and the size of the rectangle and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.</span></span>  
  
 <span data-ttu-id="19ce0-1162">由于本示例使用的重载，不能通过`callBackData`参数，<xref:System.Drawing.Graphics.DrawImageAbort>回调返回`true`，这将导致<xref:System.Drawing.Graphics.DrawImage%2A>方法结束时，和的示例中包含的异常处理代码将输出异常文本而不是绘制图像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1162">Because this example uses an overload that does not pass a `callBackData` parameter, the <xref:System.Drawing.Graphics.DrawImageAbort> callback returns `true`, which causes the <xref:System.Drawing.Graphics.DrawImage%2A> method to end, and the exception-handling code included in the example prints out the exception text rather than drawing the image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#44](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#44)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#44](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#44)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#44](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#44)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1163">
            <paramref name="image" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1163">
              <paramref name="image" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr, System.Drawing.Graphics.DrawImageAbort callback, int callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Point[] destPoints, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Imaging.ImageAttributes imageAttr, class System.Drawing.Graphics/DrawImageAbort callback, int32 callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, cli::array &lt;System::Drawing::Point&gt; ^ destPoints, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Imaging::ImageAttributes ^ imageAttr, System::Drawing::Graphics::DrawImageAbort ^ callback, int callbackData);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Point[] * System.Drawing.Rectangle * System.Drawing.GraphicsUnit * System.Drawing.Imaging.ImageAttributes * System.Drawing.Graphics.DrawImageAbort * int -&gt; unit" Usage="graphics.DrawImage (image, destPoints, srcRect, srcUnit, imageAttr, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destPoints" Type="System.Drawing.Point[]" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+DrawImageAbort" />
        <Parameter Name="callbackData" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="image">
          <span data-ttu-id="19ce0-1164">要绘制的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1164">
              <see cref="T:System.Drawing.Image" /> to draw.</span>
          </span>
        </param>
        <param name="destPoints">
          <span data-ttu-id="19ce0-1165">由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个平行四边形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1165">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="19ce0-1166">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它指定 <c>image</c> 对象中要绘制的部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1166">
              <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <c>image</c> object to draw.</span>
          </span>
        </param>
        <param name="srcUnit">
          <span data-ttu-id="19ce0-1167">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定 <c>srcRect</c> 参数所用的度量单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1167">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <c>srcRect</c> parameter.</span>
          </span>
        </param>
        <param name="imageAttr">
          <span data-ttu-id="19ce0-1168">
            <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定 <c>image</c> 对象的重新着色和伽玛信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1168">
              <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <c>image</c> object.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-1169">
            <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委托，它指定在绘制图像期间要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1169">
              <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image.</span>
          </span>
          <span data-ttu-id="19ce0-1170">此方法被频繁调用以检查是否根据应用程序确定的条件停止 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> 方法的执行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1170">This method is called frequently to check whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> method according to application-determined criteria.</span>
          </span>
        </param>
        <param name="callbackData">
          <span data-ttu-id="19ce0-1171">一个值，它为 <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委托指定在检查是否停止执行 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> 方法时要使用的附加数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1171">Value specifying additional data for the <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate to use when checking whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1172">在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1172">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1173">`destPoints`参数指定的平行四边形的三个点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1173">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="19ce0-1174">这三种<xref:System.Drawing.PointF>结构表示平行四边形的左上角、 右上角和左下角。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1174">The three <xref:System.Drawing.PointF> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="19ce0-1175">第四个点推断出以形成一个平行四边形的前三个。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1175">The fourth point is extrapolated from the first three to form a parallelogram.</span></span>  
  
 <span data-ttu-id="19ce0-1176">`srcRect`参数指定的一个矩形部分`image`要绘制的对象。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1176">The `srcRect` parameter specifies a rectangular portion of the `image` object to draw.</span></span> <span data-ttu-id="19ce0-1177">此部分进行缩放和剪切以适合指定的平行四边形`destPoints`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1177">This portion is scaled and sheared to fit inside the parallelogram specified by the `destPoints` parameter.</span></span>  
  
 <span data-ttu-id="19ce0-1178">使用此重载`callback`和`callbackData`参数提供了一种根据条件和由应用程序的数据开始后停止的绘制图像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1178">This overload with the `callback` and `callbackData` parameters provides the means to stop the drawing of an image once it starts according to criteria and data determined by the application.</span></span> <span data-ttu-id="19ce0-1179">例如，应用程序可能开始绘制的大图像，用户可能滚动到屏幕外，用例的应用程序可以在其中停止绘制图像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1179">For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1180">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1180">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1181">代码首先定义回调方法以<xref:System.Drawing.Graphics.DrawImageAbort>委托; 定义简单，只是测试以了解是否<xref:System.Drawing.Graphics.DrawImage%2A>方法调用它为 null`callBackData`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1181">The code first defines a callback method for the <xref:System.Drawing.Graphics.DrawImageAbort> delegate; the definition is simplistic and merely tests to see whether the <xref:System.Drawing.Graphics.DrawImage%2A> method calls it with a null `callBackData` parameter.</span></span> <span data-ttu-id="19ce0-1182">主正文中的示例执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1182">The main body of the example performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1183">创建的实例<xref:System.Drawing.Graphics.DrawImageAbort>回调方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1183">Creates an instance of the <xref:System.Drawing.Graphics.DrawImageAbort> callback method.</span></span>  
  
-   <span data-ttu-id="19ce0-1184">从 JPEG 文件 sampimag.jpg 位于同示例的文件夹中创建的映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1184">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="19ce0-1185">创建定义在其中绘制图像的平行四边形的点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1185">Creates points that define a parallelogram in which to draw the image.</span></span>  
  
-   <span data-ttu-id="19ce0-1186">创建一个矩形来选择要绘制的图像的部分。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1186">Creates a rectangle to select the portion of the image to draw.</span></span>  
  
-   <span data-ttu-id="19ce0-1187">设置图形绘制到像素的单位。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1187">Sets the graphics drawing unit to pixel.</span></span>  
  
-   <span data-ttu-id="19ce0-1188">将原始图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1188">Draws the original image to the screen.</span></span>  
  
-   <span data-ttu-id="19ce0-1189">创建要在其中绘制调整后的图像的附加平行四边形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1189">Creates an additional parallelogram in which to draw an adjusted image.</span></span>  
  
-   <span data-ttu-id="19ce0-1190">创建和设置的调整后的映像，以便具有更大比常用伽玛值的属性。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1190">Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</span></span>  
  
-   <span data-ttu-id="19ce0-1191">将调整后的图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1191">Draws the adjusted image to the screen.</span></span>  
  
 <span data-ttu-id="19ce0-1192">对于原始、 未调整平行四边形中，位置在屏幕上，确定图像和矩形和大小的大小和形状的平行四边形确定的缩放和剪切所绘制图像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1192">For the original, unadjusted parallelogram, the position locates the image on the screen, and the size of the rectangle and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.</span></span>  
  
 <span data-ttu-id="19ce0-1193">由于本示例使用的重载，将传递`callBackData`参数，<xref:System.Drawing.Graphics.DrawImageAbort>回调返回`false`，这将导致<xref:System.Drawing.Graphics.DrawImage%2A>方法若要继续，以及的示例将调整后的图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1193">Because this example uses an overload that passes a `callBackData` parameter, the <xref:System.Drawing.Graphics.DrawImageAbort> callback returns `false`, which causes the <xref:System.Drawing.Graphics.DrawImage%2A> method to continue, and the example draws the adjusted image to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#39](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#39)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#39](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#39)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#39](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#39)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr, System.Drawing.Graphics.DrawImageAbort callback, int callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Imaging.ImageAttributes imageAttr, class System.Drawing.Graphics/DrawImageAbort callback, int32 callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Imaging::ImageAttributes ^ imageAttr, System::Drawing::Graphics::DrawImageAbort ^ callback, int callbackData);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.GraphicsUnit * System.Drawing.Imaging.ImageAttributes * System.Drawing.Graphics.DrawImageAbort * int -&gt; unit" Usage="graphics.DrawImage (image, destPoints, srcRect, srcUnit, imageAttr, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+DrawImageAbort" />
        <Parameter Name="callbackData" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="image">
          <span data-ttu-id="19ce0-1194">要绘制的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1194">
              <see cref="T:System.Drawing.Image" /> to draw.</span>
          </span>
        </param>
        <param name="destPoints">
          <span data-ttu-id="19ce0-1195">由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个平行四边形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1195">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="19ce0-1196">
            <see cref="T:System.Drawing.RectangleF" /> 结构，它指定 <c>image</c> 对象中要绘制的部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1196">
              <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the <c>image</c> object to draw.</span>
          </span>
        </param>
        <param name="srcUnit">
          <span data-ttu-id="19ce0-1197">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定 <c>srcRect</c> 参数所用的度量单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1197">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <c>srcRect</c> parameter.</span>
          </span>
        </param>
        <param name="imageAttr">
          <span data-ttu-id="19ce0-1198">
            <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定 <c>image</c> 对象的重新着色和伽玛信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1198">
              <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <c>image</c> object.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-1199">
            <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委托，它指定在绘制图像期间要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1199">
              <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image.</span>
          </span>
          <span data-ttu-id="19ce0-1200">此方法被频繁调用以检查是否根据应用程序确定的条件停止 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> 方法的执行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1200">This method is called frequently to check whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> method according to application-determined criteria.</span>
          </span>
        </param>
        <param name="callbackData">
          <span data-ttu-id="19ce0-1201">一个值，它为 <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委托指定在检查是否停止执行 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> 方法时要使用的附加数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1201">Value specifying additional data for the <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate to use when checking whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1202">在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1202">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1203">`destPoints`参数指定的平行四边形的三个点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1203">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="19ce0-1204">这三种<xref:System.Drawing.PointF>结构表示平行四边形的左上角、 右上角和左下角。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1204">The three <xref:System.Drawing.PointF> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="19ce0-1205">第四个点推断出以形成一个平行四边形的前三个。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1205">The fourth point is extrapolated from the first three to form a parallelogram.</span></span>  
  
 <span data-ttu-id="19ce0-1206">`srcRect`参数指定的一个矩形部分`image`要绘制的对象。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1206">The `srcRect` parameter specifies a rectangular portion of the `image` object to draw.</span></span> <span data-ttu-id="19ce0-1207">此部分进行缩放和剪切以适合指定的平行四边形`destPoints`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1207">This portion is scaled and sheared to fit inside the parallelogram specified by the `destPoints` parameter.</span></span>  
  
 <span data-ttu-id="19ce0-1208">使用此重载`callback`和`callbackData`参数提供了一种根据条件和由应用程序的数据开始后停止的绘制图像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1208">This overload with the `callback` and `callbackData` parameters provides the means to stop the drawing of an image once it starts according to criteria and data determined by the application.</span></span> <span data-ttu-id="19ce0-1209">例如，应用程序可能开始绘制的大图像，用户可能滚动到屏幕外，用例的应用程序可以在其中停止绘制图像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1209">For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1210">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的`Pa`<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1210">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the `Pa`<xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1211">代码首先定义回调方法以<xref:System.Drawing.Graphics.DrawImageAbort>委托; 定义简单，只是测试以了解是否<xref:System.Drawing.Graphics.DrawImage%2A>方法调用它为 null`callBackData`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1211">The code first defines a callback method for the <xref:System.Drawing.Graphics.DrawImageAbort> delegate; the definition is simplistic and merely tests to see whether the <xref:System.Drawing.Graphics.DrawImage%2A> method calls it with a null `callBackData` parameter.</span></span> <span data-ttu-id="19ce0-1212">主正文中的示例执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1212">The main body of the example performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1213">创建的实例<xref:System.Drawing.Graphics.DrawImageAbort>回调方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1213">Creates an instance of the <xref:System.Drawing.Graphics.DrawImageAbort> callback method.</span></span>  
  
-   <span data-ttu-id="19ce0-1214">从 JPEG 文件 sampimag.jpg 位于同示例的文件夹中创建的映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1214">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="19ce0-1215">创建定义在其中绘制图像的平行四边形的点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1215">Creates points that define a parallelogram in which to draw the image.</span></span>  
  
-   <span data-ttu-id="19ce0-1216">创建一个矩形来选择要绘制的图像的部分。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1216">Creates a rectangle to select the portion of the image to draw.</span></span>  
  
-   <span data-ttu-id="19ce0-1217">设置图形绘制到像素的单位。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1217">Sets the graphics drawing unit to pixel.</span></span>  
  
-   <span data-ttu-id="19ce0-1218">将原始图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1218">Draws the original image to the screen.</span></span>  
  
-   <span data-ttu-id="19ce0-1219">创建要在其中绘制调整后的图像的附加平行四边形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1219">Creates an additional parallelogram in which to draw an adjusted image.</span></span>  
  
-   <span data-ttu-id="19ce0-1220">创建和设置的调整后的映像，以便具有更大比常用伽玛值的属性。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1220">Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</span></span>  
  
-   <span data-ttu-id="19ce0-1221">将调整后的图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1221">Draws the adjusted image to the screen.</span></span>  
  
 <span data-ttu-id="19ce0-1222">对于原始、 未调整平行四边形中，位置在屏幕上，确定图像和矩形和大小的大小和形状的平行四边形确定的缩放和剪切所绘制图像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1222">For the original, unadjusted parallelogram, the position locates the image on the screen, and the size of the rectangle and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.</span></span>  
  
 <span data-ttu-id="19ce0-1223">由于本示例使用的重载，将传递`callBackData`参数，<xref:System.Drawing.Graphics.DrawImageAbort>回调返回`false`，这将导致<xref:System.Drawing.Graphics.DrawImage%2A>方法若要继续，以及的示例将调整后的图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1223">Because this example uses an overload that passes a `callBackData` parameter, the <xref:System.Drawing.Graphics.DrawImageAbort> callback returns `false`, which causes the <xref:System.Drawing.Graphics.DrawImage%2A> method to continue, and the example draws the adjusted image to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#45](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#45)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#45](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#45)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#45](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#45)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1224">
            <paramref name="image" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1224">
              <paramref name="image" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System.Drawing.GraphicsUnit srcUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Rectangle destRect, int32 srcX, int32 srcY, int32 srcWidth, int32 srcHeight, valuetype System.Drawing.GraphicsUnit srcUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System::Drawing::GraphicsUnit srcUnit);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Rectangle * int * int * int * int * System.Drawing.GraphicsUnit -&gt; unit" Usage="graphics.DrawImage (image, destRect, srcX, srcY, srcWidth, srcHeight, srcUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcX" Type="System.Int32" />
        <Parameter Name="srcY" Type="System.Int32" />
        <Parameter Name="srcWidth" Type="System.Int32" />
        <Parameter Name="srcHeight" Type="System.Int32" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="image">
          <span data-ttu-id="19ce0-1225">要绘制的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1225">
              <see cref="T:System.Drawing.Image" /> to draw.</span>
          </span>
        </param>
        <param name="destRect">
          <span data-ttu-id="19ce0-1226">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图像的位置和大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1226">
              <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image.</span>
          </span>
          <span data-ttu-id="19ce0-1227">将图像进行缩放以适合该矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1227">The image is scaled to fit the rectangle.</span>
          </span>
        </param>
        <param name="srcX">
          <span data-ttu-id="19ce0-1228">要绘制的源图像部分的左上角的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1228">The x-coordinate of the upper-left corner of the portion of the source image to draw.</span>
          </span>
        </param>
        <param name="srcY">
          <span data-ttu-id="19ce0-1229">要绘制的源图像部分的左上角的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1229">The y-coordinate of the upper-left corner of the portion of the source image to draw.</span>
          </span>
        </param>
        <param name="srcWidth">
          <span data-ttu-id="19ce0-1230">要绘制的源图像部分的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1230">Width of the portion of the source image to draw.</span>
          </span>
        </param>
        <param name="srcHeight">
          <span data-ttu-id="19ce0-1231">要绘制的源图像部分的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1231">Height of the portion of the source image to draw.</span>
          </span>
        </param>
        <param name="srcUnit">
          <span data-ttu-id="19ce0-1232">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定用于确定源矩形的度量单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1232">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1233">在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1233">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1234">`srcX`， `srcY`， `srcWidth`，和`srcHeight`参数指定的一个矩形部分`image`要绘制的对象。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1234">The `srcX`, `srcY`, `srcWidth`, and `srcHeight` parameters specify a rectangular portion, of the `image` object to draw.</span></span> <span data-ttu-id="19ce0-1235">矩形是相对于源映像的左上角。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1235">The rectangle is relative to the upper-left corner of the source image.</span></span> <span data-ttu-id="19ce0-1236">此部分进行缩放以容纳在由指定的矩形内`destRect`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1236">This portion is scaled to fit inside the rectangle specified by the `destRect` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1237">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1237">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1238">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1238">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1239">从 JPEG 文件 sampimag.jpg 位于同示例的文件夹中创建的映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1239">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="19ce0-1240">创建在其中绘制图像的目标矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1240">Creates a destination rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="19ce0-1241">创建要从中提取部分图像的源矩形的坐标。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1241">Creates the coordinates of a source rectangle from which to extract a portion of the image.</span></span>  
  
-   <span data-ttu-id="19ce0-1242">设置源矩形的度量的单位为像素。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1242">Sets the unit of measure of the source rectangle to pixels.</span></span>  
  
-   <span data-ttu-id="19ce0-1243">将图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1243">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="19ce0-1244">目标矩形的位置在屏幕上，确定图像的源和目标矩形的大小确定所绘制图像的缩放和源矩形的大小决定原始图像的哪个部分绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1244">The position of the destination rectangle locates the image on the screen, and the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#48](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#48)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#48](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#48)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#48](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#48)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1245">
            <paramref name="image" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1245">
              <paramref name="image" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System.Drawing.GraphicsUnit srcUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Rectangle destRect, float32 srcX, float32 srcY, float32 srcWidth, float32 srcHeight, valuetype System.Drawing.GraphicsUnit srcUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System::Drawing::GraphicsUnit srcUnit);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Rectangle * single * single * single * single * System.Drawing.GraphicsUnit -&gt; unit" Usage="graphics.DrawImage (image, destRect, srcX, srcY, srcWidth, srcHeight, srcUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcX" Type="System.Single" />
        <Parameter Name="srcY" Type="System.Single" />
        <Parameter Name="srcWidth" Type="System.Single" />
        <Parameter Name="srcHeight" Type="System.Single" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="image">
          <span data-ttu-id="19ce0-1246">要绘制的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1246">
              <see cref="T:System.Drawing.Image" /> to draw.</span>
          </span>
        </param>
        <param name="destRect">
          <span data-ttu-id="19ce0-1247">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图像的位置和大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1247">
              <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image.</span>
          </span>
          <span data-ttu-id="19ce0-1248">将图像进行缩放以适合该矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1248">The image is scaled to fit the rectangle.</span>
          </span>
        </param>
        <param name="srcX">
          <span data-ttu-id="19ce0-1249">要绘制的源图像部分的左上角的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1249">The x-coordinate of the upper-left corner of the portion of the source image to draw.</span>
          </span>
        </param>
        <param name="srcY">
          <span data-ttu-id="19ce0-1250">要绘制的源图像部分的左上角的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1250">The y-coordinate of the upper-left corner of the portion of the source image to draw.</span>
          </span>
        </param>
        <param name="srcWidth">
          <span data-ttu-id="19ce0-1251">要绘制的源图像部分的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1251">Width of the portion of the source image to draw.</span>
          </span>
        </param>
        <param name="srcHeight">
          <span data-ttu-id="19ce0-1252">要绘制的源图像部分的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1252">Height of the portion of the source image to draw.</span>
          </span>
        </param>
        <param name="srcUnit">
          <span data-ttu-id="19ce0-1253">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定用于确定源矩形的度量单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1253">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1254">在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1254">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1255">`srcX`， `srcY`， `srcWidth`，和`srcHeight`参数指定的一个矩形部分`image`要绘制的对象。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1255">The `srcX`, `srcY`, `srcWidth`, and `srcHeight` parameters specify a rectangular portion, of the `image` object to draw.</span></span> <span data-ttu-id="19ce0-1256">矩形是相对于源映像的左上角。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1256">The rectangle is relative to the upper-left corner of the source image.</span></span> <span data-ttu-id="19ce0-1257">此部分进行缩放以容纳在由指定的矩形内`destRect`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1257">This portion is scaled to fit inside the rectangle specified by the `destRect` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1258">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1258">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1259">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1259">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1260">从 JPEG 文件 sampimag.jpg 位于同示例的文件夹中创建的映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1260">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="19ce0-1261">创建在其中绘制图像的目标矩形的坐标。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1261">Creates the coordinates of a destination rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="19ce0-1262">创建要从中提取部分图像的源矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1262">Creates a source rectangle from which to extract a portion of the image.</span></span>  
  
-   <span data-ttu-id="19ce0-1263">设置源矩形的度量的单位为像素。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1263">Sets the unit of measure of the source rectangle to pixels.</span></span>  
  
-   <span data-ttu-id="19ce0-1264">将图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1264">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="19ce0-1265">目标矩形的位置在屏幕上查找映像、 源和目标矩形的大小确定所绘制图像的缩放和源矩形的大小决定原始图像的哪个部分绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1265">The position of the destination rectangle locates the image on the screen, the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#52](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#52)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#52](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#52)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#52](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#52)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1266">
            <paramref name="image" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1266">
              <paramref name="image" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Rectangle destRect, int32 srcX, int32 srcY, int32 srcWidth, int32 srcHeight, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Rectangle * int * int * int * int * System.Drawing.GraphicsUnit * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.DrawImage (image, destRect, srcX, srcY, srcWidth, srcHeight, srcUnit, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcX" Type="System.Int32" />
        <Parameter Name="srcY" Type="System.Int32" />
        <Parameter Name="srcWidth" Type="System.Int32" />
        <Parameter Name="srcHeight" Type="System.Int32" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="image">
          <span data-ttu-id="19ce0-1267">要绘制的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1267">
              <see cref="T:System.Drawing.Image" /> to draw.</span>
          </span>
        </param>
        <param name="destRect">
          <span data-ttu-id="19ce0-1268">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图像的位置和大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1268">
              <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image.</span>
          </span>
          <span data-ttu-id="19ce0-1269">将图像进行缩放以适合该矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1269">The image is scaled to fit the rectangle.</span>
          </span>
        </param>
        <param name="srcX">
          <span data-ttu-id="19ce0-1270">要绘制的源图像部分的左上角的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1270">The x-coordinate of the upper-left corner of the portion of the source image to draw.</span>
          </span>
        </param>
        <param name="srcY">
          <span data-ttu-id="19ce0-1271">要绘制的源图像部分的左上角的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1271">The y-coordinate of the upper-left corner of the portion of the source image to draw.</span>
          </span>
        </param>
        <param name="srcWidth">
          <span data-ttu-id="19ce0-1272">要绘制的源图像部分的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1272">Width of the portion of the source image to draw.</span>
          </span>
        </param>
        <param name="srcHeight">
          <span data-ttu-id="19ce0-1273">要绘制的源图像部分的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1273">Height of the portion of the source image to draw.</span>
          </span>
        </param>
        <param name="srcUnit">
          <span data-ttu-id="19ce0-1274">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定用于确定源矩形的度量单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1274">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.</span>
          </span>
        </param>
        <param name="imageAttr">
          <span data-ttu-id="19ce0-1275">
            <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定 <c>image</c> 对象的重新着色和伽玛信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1275">
              <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <c>image</c> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1276">在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1276">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1277">`srcX`， `srcY`， `srcWidth`，和`srcHeight`参数指定的一个矩形部分`image`要绘制的对象。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1277">The `srcX`, `srcY`, `srcWidth`, and `srcHeight` parameters specify a rectangular portion, of the `image` object to draw.</span></span> <span data-ttu-id="19ce0-1278">矩形是相对于源映像的左上角。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1278">The rectangle is relative to the upper-left corner of the source image.</span></span> <span data-ttu-id="19ce0-1279">此部分进行缩放以容纳在由指定的矩形内`destRect`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1279">This portion is scaled to fit inside the rectangle specified by the `destRect` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1280">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1280">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1281">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1281">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1282">从 JPEG 文件 sampimag.jpg 位于同示例的文件夹中创建的映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1282">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="19ce0-1283">创建在其中绘制图像的目标矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1283">Creates a destination rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="19ce0-1284">创建要从中提取部分图像的源矩形的坐标。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1284">Creates the coordinates of a source rectangle from which to extract a portion of the image.</span></span>  
  
-   <span data-ttu-id="19ce0-1285">设置源矩形的度量的单位为像素。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1285">Sets the unit of measure of the source rectangle to pixels.</span></span>  
  
-   <span data-ttu-id="19ce0-1286">将原始图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1286">Draws the original image to the screen.</span></span>  
  
-   <span data-ttu-id="19ce0-1287">创建要在其中绘制调整后的图像的附加矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1287">Creates an additional rectangle in which to draw an adjusted image.</span></span>  
  
-   <span data-ttu-id="19ce0-1288">创建和设置的调整后的映像，以便具有更大比常用伽玛值的属性。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1288">Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</span></span>  
  
-   <span data-ttu-id="19ce0-1289">将调整后的图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1289">Draws the adjusted image to the screen.</span></span>  
  
 <span data-ttu-id="19ce0-1290">原始、 未调整目标矩形的位置确定图像在屏幕上，源和目标矩形的大小确定所绘制图像的缩放和源矩形的大小决定的哪些部分原始图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1290">For the original, unadjusted destination rectangle, the position locates the image on the screen, and the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#49](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#49)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#49](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#49)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#49](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#49)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1291">
            <paramref name="image" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1291">
              <paramref name="image" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Rectangle destRect, float32 srcX, float32 srcY, float32 srcWidth, float32 srcHeight, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Imaging.ImageAttributes imageAttrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Imaging::ImageAttributes ^ imageAttrs);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Rectangle * single * single * single * single * System.Drawing.GraphicsUnit * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.DrawImage (image, destRect, srcX, srcY, srcWidth, srcHeight, srcUnit, imageAttrs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcX" Type="System.Single" />
        <Parameter Name="srcY" Type="System.Single" />
        <Parameter Name="srcWidth" Type="System.Single" />
        <Parameter Name="srcHeight" Type="System.Single" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="imageAttrs" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="image">
          <span data-ttu-id="19ce0-1292">要绘制的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1292">
              <see cref="T:System.Drawing.Image" /> to draw.</span>
          </span>
        </param>
        <param name="destRect">
          <span data-ttu-id="19ce0-1293">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图像的位置和大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1293">
              <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image.</span>
          </span>
          <span data-ttu-id="19ce0-1294">将图像进行缩放以适合该矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1294">The image is scaled to fit the rectangle.</span>
          </span>
        </param>
        <param name="srcX">
          <span data-ttu-id="19ce0-1295">要绘制的源图像部分的左上角的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1295">The x-coordinate of the upper-left corner of the portion of the source image to draw.</span>
          </span>
        </param>
        <param name="srcY">
          <span data-ttu-id="19ce0-1296">要绘制的源图像部分的左上角的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1296">The y-coordinate of the upper-left corner of the portion of the source image to draw.</span>
          </span>
        </param>
        <param name="srcWidth">
          <span data-ttu-id="19ce0-1297">要绘制的源图像部分的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1297">Width of the portion of the source image to draw.</span>
          </span>
        </param>
        <param name="srcHeight">
          <span data-ttu-id="19ce0-1298">要绘制的源图像部分的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1298">Height of the portion of the source image to draw.</span>
          </span>
        </param>
        <param name="srcUnit">
          <span data-ttu-id="19ce0-1299">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定用于确定源矩形的度量单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1299">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.</span>
          </span>
        </param>
        <param name="imageAttrs">
          <span data-ttu-id="19ce0-1300">
            <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定 <c>image</c> 对象的重新着色和伽玛信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1300">
              <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <c>image</c> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1301">在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1301">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1302">`srcX`， `srcY`， `srcWidth`，和`srcHeight`参数指定的一个矩形部分`image`要绘制的对象。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1302">The `srcX`, `srcY`, `srcWidth`, and `srcHeight` parameters specify a rectangular portion, of the `image` object to draw.</span></span> <span data-ttu-id="19ce0-1303">矩形是相对于源映像的左上角。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1303">The rectangle is relative to the upper-left corner of the source image.</span></span> <span data-ttu-id="19ce0-1304">此部分进行缩放以容纳在由指定的矩形内`destRect`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1304">This portion is scaled to fit inside the rectangle specified by the `destRect` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1305">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1305">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1306">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1306">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1307">从 JPEG 文件 sampimag.jpg 位于同示例的文件夹中创建的映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1307">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="19ce0-1308">创建在其中绘制图像的目标矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1308">Creates a destination rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="19ce0-1309">创建要从中提取部分图像的源矩形的坐标。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1309">Creates the coordinates of a source rectangle from which to extract a portion of the image.</span></span>  
  
-   <span data-ttu-id="19ce0-1310">设置源矩形的度量的单位为像素。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1310">Sets the unit of measure of the source rectangle to pixels.</span></span>  
  
-   <span data-ttu-id="19ce0-1311">将原始图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1311">Draws the original image to the screen.</span></span>  
  
-   <span data-ttu-id="19ce0-1312">创建要在其中绘制调整后的图像的附加矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1312">Creates an additional rectangle in which to draw an adjusted image.</span></span>  
  
-   <span data-ttu-id="19ce0-1313">创建和设置的调整后的映像，以便具有更大比常用伽玛值的属性。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1313">Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</span></span>  
  
-   <span data-ttu-id="19ce0-1314">将调整后的图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1314">Draws the adjusted image to the screen.</span></span>  
  
 <span data-ttu-id="19ce0-1315">原始、 未调整目标矩形的位置确定图像在屏幕上，源和目标矩形的大小确定所绘制图像的缩放和源矩形的大小决定的哪些部分原始图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1315">For the original, unadjusted destination rectangle, the position locates the image on the screen, and the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#53](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#53)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#53](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#53)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#53](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#53)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1316">
            <paramref name="image" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1316">
              <paramref name="image" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr, System.Drawing.Graphics.DrawImageAbort callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Rectangle destRect, int32 srcX, int32 srcY, int32 srcWidth, int32 srcHeight, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Imaging.ImageAttributes imageAttr, class System.Drawing.Graphics/DrawImageAbort callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Imaging::ImageAttributes ^ imageAttr, System::Drawing::Graphics::DrawImageAbort ^ callback);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Rectangle * int * int * int * int * System.Drawing.GraphicsUnit * System.Drawing.Imaging.ImageAttributes * System.Drawing.Graphics.DrawImageAbort -&gt; unit" Usage="graphics.DrawImage (image, destRect, srcX, srcY, srcWidth, srcHeight, srcUnit, imageAttr, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcX" Type="System.Int32" />
        <Parameter Name="srcY" Type="System.Int32" />
        <Parameter Name="srcWidth" Type="System.Int32" />
        <Parameter Name="srcHeight" Type="System.Int32" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+DrawImageAbort" />
      </Parameters>
      <Docs>
        <param name="image">
          <span data-ttu-id="19ce0-1317">要绘制的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1317">
              <see cref="T:System.Drawing.Image" /> to draw.</span>
          </span>
        </param>
        <param name="destRect">
          <span data-ttu-id="19ce0-1318">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图像的位置和大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1318">
              <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image.</span>
          </span>
          <span data-ttu-id="19ce0-1319">将图像进行缩放以适合该矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1319">The image is scaled to fit the rectangle.</span>
          </span>
        </param>
        <param name="srcX">
          <span data-ttu-id="19ce0-1320">要绘制的源图像部分的左上角的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1320">The x-coordinate of the upper-left corner of the portion of the source image to draw.</span>
          </span>
        </param>
        <param name="srcY">
          <span data-ttu-id="19ce0-1321">要绘制的源图像部分的左上角的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1321">The y-coordinate of the upper-left corner of the portion of the source image to draw.</span>
          </span>
        </param>
        <param name="srcWidth">
          <span data-ttu-id="19ce0-1322">要绘制的源图像部分的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1322">Width of the portion of the source image to draw.</span>
          </span>
        </param>
        <param name="srcHeight">
          <span data-ttu-id="19ce0-1323">要绘制的源图像部分的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1323">Height of the portion of the source image to draw.</span>
          </span>
        </param>
        <param name="srcUnit">
          <span data-ttu-id="19ce0-1324">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定用于确定源矩形的度量单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1324">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.</span>
          </span>
        </param>
        <param name="imageAttr">
          <span data-ttu-id="19ce0-1325">
            <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定 <c>image</c> 的重新着色和伽玛信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1325">
              <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for <c>image</c>.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-1326">
            <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委托，它指定在绘制图像期间要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1326">
              <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image.</span>
          </span>
          <span data-ttu-id="19ce0-1327">此方法被频繁调用以检查是否根据应用程序确定的条件停止 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> 方法的执行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1327">This method is called frequently to check whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> method according to application-determined criteria.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1328">在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1328">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1329">`srcX`， `srcY`， `srcWidth`，和`srcHeight`参数指定的一个矩形部分`image`要绘制的对象。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1329">The `srcX`, `srcY`, `srcWidth`, and `srcHeight` parameters specify a rectangular portion, of the `image` object to draw.</span></span> <span data-ttu-id="19ce0-1330">矩形是相对于源映像的左上角。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1330">The rectangle is relative to the upper-left corner of the source image.</span></span> <span data-ttu-id="19ce0-1331">此部分进行缩放以容纳在由指定的矩形内`destRect`对象。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1331">This portion is scaled to fit inside the rectangle specified by the `destRect` object.</span></span>  
  
 <span data-ttu-id="19ce0-1332">使用此重载`callback`参数提供了一种根据条件由应用程序开始后停止的绘制图像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1332">This overload with the `callback` parameter provides the means to stop the drawing of an image once it starts according to criteria determined by the application.</span></span> <span data-ttu-id="19ce0-1333">例如，应用程序可能开始绘制的大图像，用户可能滚动到屏幕外，用例的应用程序可以在其中停止绘制图像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1333">For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1334">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1334">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1335">代码首先定义回调方法以<xref:System.Drawing.Graphics.DrawImageAbort>委托; 定义简单，只是测试以了解是否<xref:System.Drawing.Graphics.DrawImage%2A>方法调用它为 null`callBackData`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1335">The code first defines a callback method for the <xref:System.Drawing.Graphics.DrawImageAbort> delegate; the definition is simplistic and merely tests to see whether the <xref:System.Drawing.Graphics.DrawImage%2A> method calls it with a null `callBackData` parameter.</span></span> <span data-ttu-id="19ce0-1336">主正文中的示例执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1336">The main body of the example performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1337">创建的实例<xref:System.Drawing.Graphics.DrawImageAbort>回调方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1337">Creates an instance of the <xref:System.Drawing.Graphics.DrawImageAbort> callback method.</span></span>  
  
-   <span data-ttu-id="19ce0-1338">从 JPEG 文件 sampimag.jpg 位于同示例的文件夹中创建的映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1338">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="19ce0-1339">创建定义在其中绘制图像的目标矩形的点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1339">Creates points that define a destination rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="19ce0-1340">创建源矩形来选择要绘制的图像的部分。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1340">Creates a source rectangle to select the portion of the image to draw.</span></span>  
  
-   <span data-ttu-id="19ce0-1341">设置图形绘制到像素的单位。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1341">Sets the graphics drawing unit to pixel.</span></span>  
  
-   <span data-ttu-id="19ce0-1342">将原始图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1342">Draws the original image to the screen.</span></span>  
  
-   <span data-ttu-id="19ce0-1343">创建要在其中绘制调整后的图像的附加目标矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1343">Creates an additional destination rectangle in which to draw an adjusted image.</span></span>  
  
-   <span data-ttu-id="19ce0-1344">创建和设置的调整后的映像，以便具有更大比常用伽玛值的属性。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1344">Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</span></span>  
  
-   <span data-ttu-id="19ce0-1345">将调整后的图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1345">Draws the adjusted image to the screen.</span></span>  
  
 <span data-ttu-id="19ce0-1346">原始、 未调整目标矩形的位置在屏幕上，确定图像和源矩形和大小的大小和目标矩形形状确定所绘制图像的缩放。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1346">For the original, unadjusted destination rectangle, the position locates the image on the screen, and the size of the source rectangle and the size and shape of the destination rectangle determines the scaling of the drawn image.</span></span>  
  
 <span data-ttu-id="19ce0-1347">由于本示例使用的重载，不能通过`callBackData`参数，<xref:System.Drawing.Graphics.DrawImageAbort>回调返回`true`，这将导致<xref:System.Drawing.Graphics.DrawImage%2A>方法结束时，和的示例中包含的异常处理代码将输出异常文本而不是绘制图像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1347">Because this example uses an overload that does not pass a `callBackData` parameter, the <xref:System.Drawing.Graphics.DrawImageAbort> callback returns `true`, which causes the <xref:System.Drawing.Graphics.DrawImage%2A> method to end, and the exception-handling code included in the example prints out the exception text rather than drawing the image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#50](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#50)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#50)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1348">
            <paramref name="image" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1348">
              <paramref name="image" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttrs, System.Drawing.Graphics.DrawImageAbort callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Rectangle destRect, float32 srcX, float32 srcY, float32 srcWidth, float32 srcHeight, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Imaging.ImageAttributes imageAttrs, class System.Drawing.Graphics/DrawImageAbort callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Imaging::ImageAttributes ^ imageAttrs, System::Drawing::Graphics::DrawImageAbort ^ callback);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Rectangle * single * single * single * single * System.Drawing.GraphicsUnit * System.Drawing.Imaging.ImageAttributes * System.Drawing.Graphics.DrawImageAbort -&gt; unit" Usage="graphics.DrawImage (image, destRect, srcX, srcY, srcWidth, srcHeight, srcUnit, imageAttrs, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcX" Type="System.Single" />
        <Parameter Name="srcY" Type="System.Single" />
        <Parameter Name="srcWidth" Type="System.Single" />
        <Parameter Name="srcHeight" Type="System.Single" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="imageAttrs" Type="System.Drawing.Imaging.ImageAttributes" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+DrawImageAbort" />
      </Parameters>
      <Docs>
        <param name="image">
          <span data-ttu-id="19ce0-1349">要绘制的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1349">
              <see cref="T:System.Drawing.Image" /> to draw.</span>
          </span>
        </param>
        <param name="destRect">
          <span data-ttu-id="19ce0-1350">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图像的位置和大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1350">
              <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image.</span>
          </span>
          <span data-ttu-id="19ce0-1351">将图像进行缩放以适合该矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1351">The image is scaled to fit the rectangle.</span>
          </span>
        </param>
        <param name="srcX">
          <span data-ttu-id="19ce0-1352">要绘制的源图像部分的左上角的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1352">The x-coordinate of the upper-left corner of the portion of the source image to draw.</span>
          </span>
        </param>
        <param name="srcY">
          <span data-ttu-id="19ce0-1353">要绘制的源图像部分的左上角的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1353">The y-coordinate of the upper-left corner of the portion of the source image to draw.</span>
          </span>
        </param>
        <param name="srcWidth">
          <span data-ttu-id="19ce0-1354">要绘制的源图像部分的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1354">Width of the portion of the source image to draw.</span>
          </span>
        </param>
        <param name="srcHeight">
          <span data-ttu-id="19ce0-1355">要绘制的源图像部分的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1355">Height of the portion of the source image to draw.</span>
          </span>
        </param>
        <param name="srcUnit">
          <span data-ttu-id="19ce0-1356">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定用于确定源矩形的度量单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1356">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.</span>
          </span>
        </param>
        <param name="imageAttrs">
          <span data-ttu-id="19ce0-1357">
            <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定 <c>image</c> 对象的重新着色和伽玛信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1357">
              <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <c>image</c> object.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-1358">
            <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委托，它指定在绘制图像期间要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1358">
              <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image.</span>
          </span>
          <span data-ttu-id="19ce0-1359">此方法被频繁调用以检查是否根据应用程序确定的条件停止 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> 方法的执行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1359">This method is called frequently to check whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> method according to application-determined criteria.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1360">在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1360">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1361">`srcX`， `srcY`， `srcWidth`，和`srcHeight`参数指定的一个矩形部分`image`要绘制的对象。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1361">The `srcX`, `srcY`, `srcWidth`, and `srcHeight` parameters specify a rectangular portion, of the `image` object to draw.</span></span> <span data-ttu-id="19ce0-1362">矩形是相对于源映像的左上角。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1362">The rectangle is relative to the upper-left corner of the source image.</span></span> <span data-ttu-id="19ce0-1363">此部分进行缩放以容纳在由指定的矩形内`destRect`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1363">This portion is scaled to fit inside the rectangle specified by the `destRect` parameter.</span></span>  
  
 <span data-ttu-id="19ce0-1364">使用此重载`callback`参数提供了一种根据条件由应用程序开始后停止的绘制图像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1364">This overload with the `callback` parameter provides the means to stop the drawing of an image once it starts according to criteria determined by the application.</span></span> <span data-ttu-id="19ce0-1365">例如，应用程序可能开始绘制的大图像，用户可能滚动到屏幕外，用例的应用程序可以在其中停止绘制图像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1365">For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1366">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1366">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1367">代码首先定义回调方法以<xref:System.Drawing.Graphics.DrawImageAbort>委托; 定义简单，只是测试以了解是否<xref:System.Drawing.Graphics.DrawImage%2A>方法调用它为 null`callBackData`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1367">The code first defines a callback method for the <xref:System.Drawing.Graphics.DrawImageAbort> delegate; the definition is simplistic and merely tests to see whether the <xref:System.Drawing.Graphics.DrawImage%2A> method calls it with a null `callBackData` parameter.</span></span> <span data-ttu-id="19ce0-1368">主正文中的示例执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1368">The main body of the example performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1369">创建的实例<xref:System.Drawing.Graphics.DrawImageAbort>回调方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1369">Creates an instance of the <xref:System.Drawing.Graphics.DrawImageAbort> callback method.</span></span>  
  
-   <span data-ttu-id="19ce0-1370">从 JPEG 文件 sampimag.jpg 位于同示例的文件夹中创建的映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1370">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="19ce0-1371">创建定义在其中绘制图像的目标矩形的点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1371">Creates points that define a destination rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="19ce0-1372">创建源矩形来选择要绘制的图像的部分。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1372">Creates a source rectangle to select the portion of the image to draw.</span></span>  
  
-   <span data-ttu-id="19ce0-1373">设置图形绘制到像素的单位。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1373">Sets the graphics drawing unit to pixel.</span></span>  
  
-   <span data-ttu-id="19ce0-1374">将原始图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1374">Draws the original image to the screen.</span></span>  
  
-   <span data-ttu-id="19ce0-1375">创建要在其中绘制调整后的图像的附加目标矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1375">Creates an additional destination rectangle in which to draw an adjusted image.</span></span>  
  
-   <span data-ttu-id="19ce0-1376">创建和设置的调整后的映像，以便具有更大比常用伽玛值的属性。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1376">Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</span></span>  
  
-   <span data-ttu-id="19ce0-1377">将调整后的图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1377">Draws the adjusted image to the screen.</span></span>  
  
 <span data-ttu-id="19ce0-1378">原始、 未调整目标矩形的位置在屏幕上，确定图像和源矩形和大小的大小和目标矩形形状确定所绘制图像的缩放。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1378">For the original, unadjusted destination rectangle, the position locates the image on the screen, and the size of the source rectangle and the size and shape of the destination rectangle determines the scaling of the drawn image.</span></span>  
  
 <span data-ttu-id="19ce0-1379">由于本示例使用的重载，不能通过`callBackData`参数，<xref:System.Drawing.Graphics.DrawImageAbort>回调返回`true`，这将导致<xref:System.Drawing.Graphics.DrawImage%2A>方法结束时，和的示例中包含的异常处理代码将输出异常文本而不是绘制图像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1379">Because this example uses an overload that does not pass a `callBackData` parameter, the <xref:System.Drawing.Graphics.DrawImageAbort> callback returns `true`, which causes the <xref:System.Drawing.Graphics.DrawImage%2A> method to end, and the exception-handling code included in the example prints out the exception text rather than drawing the image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#54](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#54)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#54](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#54)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#54](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#54)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1380">
            <paramref name="image" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1380">
              <paramref name="image" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttrs, System.Drawing.Graphics.DrawImageAbort callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Rectangle destRect, int32 srcX, int32 srcY, int32 srcWidth, int32 srcHeight, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Imaging.ImageAttributes imageAttrs, class System.Drawing.Graphics/DrawImageAbort callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Imaging::ImageAttributes ^ imageAttrs, System::Drawing::Graphics::DrawImageAbort ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Rectangle * int * int * int * int * System.Drawing.GraphicsUnit * System.Drawing.Imaging.ImageAttributes * System.Drawing.Graphics.DrawImageAbort * nativeint -&gt; unit" Usage="graphics.DrawImage (image, destRect, srcX, srcY, srcWidth, srcHeight, srcUnit, imageAttrs, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcX" Type="System.Int32" />
        <Parameter Name="srcY" Type="System.Int32" />
        <Parameter Name="srcWidth" Type="System.Int32" />
        <Parameter Name="srcHeight" Type="System.Int32" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="imageAttrs" Type="System.Drawing.Imaging.ImageAttributes" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+DrawImageAbort" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="image">
          <span data-ttu-id="19ce0-1381">要绘制的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1381">
              <see cref="T:System.Drawing.Image" /> to draw.</span>
          </span>
        </param>
        <param name="destRect">
          <span data-ttu-id="19ce0-1382">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图像的位置和大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1382">
              <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image.</span>
          </span>
          <span data-ttu-id="19ce0-1383">将图像进行缩放以适合该矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1383">The image is scaled to fit the rectangle.</span>
          </span>
        </param>
        <param name="srcX">
          <span data-ttu-id="19ce0-1384">要绘制的源图像部分的左上角的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1384">The x-coordinate of the upper-left corner of the portion of the source image to draw.</span>
          </span>
        </param>
        <param name="srcY">
          <span data-ttu-id="19ce0-1385">要绘制的源图像部分的左上角的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1385">The y-coordinate of the upper-left corner of the portion of the source image to draw.</span>
          </span>
        </param>
        <param name="srcWidth">
          <span data-ttu-id="19ce0-1386">要绘制的源图像部分的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1386">Width of the portion of the source image to draw.</span>
          </span>
        </param>
        <param name="srcHeight">
          <span data-ttu-id="19ce0-1387">要绘制的源图像部分的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1387">Height of the portion of the source image to draw.</span>
          </span>
        </param>
        <param name="srcUnit">
          <span data-ttu-id="19ce0-1388">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定用于确定源矩形的度量单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1388">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.</span>
          </span>
        </param>
        <param name="imageAttrs">
          <span data-ttu-id="19ce0-1389">
            <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定 <c>image</c> 对象的重新着色和伽玛信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1389">
              <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <c>image</c> object.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-1390">
            <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委托，它指定在绘制图像期间要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1390">
              <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image.</span>
          </span>
          <span data-ttu-id="19ce0-1391">此方法被频繁调用以检查是否根据应用程序确定的条件停止 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)" /> 方法的执行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1391">This method is called frequently to check whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)" /> method according to application-determined criteria.</span>
          </span>
        </param>
        <param name="callbackData">
          <span data-ttu-id="19ce0-1392">一个值，它为 <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委托指定在检查是否停止执行 <see langword="DrawImage" /> 方法时要使用的附加数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1392">Value specifying additional data for the <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate to use when checking whether to stop execution of the <see langword="DrawImage" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1393">在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1393">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1394">`srcX`， `srcY`， `srcWidth`，和`srcHeight`参数指定的一个矩形部分`image`要绘制的对象。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1394">The `srcX`, `srcY`, `srcWidth`, and `srcHeight` parameters specify a rectangular portion, of the `image` object to draw.</span></span> <span data-ttu-id="19ce0-1395">矩形是相对于源映像的左上角。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1395">The rectangle is relative to the upper-left corner of the source image.</span></span> <span data-ttu-id="19ce0-1396">此部分进行缩放以容纳在由指定的矩形内`destRect`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1396">This portion is scaled to fit inside the rectangle specified by the `destRect` parameter.</span></span>  
  
 <span data-ttu-id="19ce0-1397">使用此重载`callback`和`callbackData`参数提供了一种根据条件和由应用程序的数据开始后停止的绘制图像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1397">This overload with the `callback` and `callbackData` parameters provides the means to stop the drawing of an image once it starts according to criteria and data determined by the application.</span></span> <span data-ttu-id="19ce0-1398">例如，应用程序可能开始绘制的大图像，用户可能滚动到屏幕外，用例的应用程序可以在其中停止绘制图像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1398">For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1399">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1399">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1400">代码首先定义回调方法以<xref:System.Drawing.Graphics.DrawImageAbort>委托; 定义简单，只是测试以了解是否<xref:System.Drawing.Graphics.DrawImage%2A>方法调用它为 null`callBackData`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1400">The code first defines a callback method for the <xref:System.Drawing.Graphics.DrawImageAbort> delegate; the definition is simplistic and merely tests to see whether the <xref:System.Drawing.Graphics.DrawImage%2A> method calls it with a null `callBackData` parameter.</span></span> <span data-ttu-id="19ce0-1401">主正文中的示例执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1401">The main body of the example performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1402">创建的实例<xref:System.Drawing.Graphics.DrawImageAbort>回调方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1402">Creates an instance of the <xref:System.Drawing.Graphics.DrawImageAbort> callback method.</span></span>  
  
-   <span data-ttu-id="19ce0-1403">从 JPEG 文件 sampimag.jpg 位于同示例的文件夹中创建的映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1403">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="19ce0-1404">创建定义在其中绘制图像的目标矩形的点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1404">Creates points that define a destination rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="19ce0-1405">创建源矩形来选择要绘制的图像的部分。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1405">Creates a source rectangle to select the portion of the image to draw.</span></span>  
  
-   <span data-ttu-id="19ce0-1406">设置图形绘制到像素的单位。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1406">Sets the graphics drawing unit to pixel.</span></span>  
  
-   <span data-ttu-id="19ce0-1407">将原始图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1407">Draws the original image to the screen.</span></span>  
  
-   <span data-ttu-id="19ce0-1408">创建要在其中绘制调整后的图像的附加目标矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1408">Creates an additional destination rectangle in which to draw an adjusted image.</span></span>  
  
-   <span data-ttu-id="19ce0-1409">创建和设置的调整后的映像，以便具有更大比常用伽玛值的属性。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1409">Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</span></span>  
  
-   <span data-ttu-id="19ce0-1410">将调整后的图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1410">Draws the adjusted image to the screen.</span></span>  
  
 <span data-ttu-id="19ce0-1411">原始、 未调整目标矩形的位置在屏幕上，确定图像和源矩形和大小的大小和目标矩形形状确定所绘制图像的缩放。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1411">For the original, unadjusted destination rectangle, the position locates the image on the screen, and the size of the source rectangle and the size and shape of the destination rectangle determines the scaling of the drawn image.</span></span>  
  
 <span data-ttu-id="19ce0-1412">由于本示例使用的重载，将传递`callBackData`参数，<xref:System.Drawing.Graphics.DrawImageAbort>回调返回`false`，这将导致<xref:System.Drawing.Graphics.DrawImage%2A>方法若要继续，以及的示例将调整后的图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1412">Because this example uses an overload that passes a `callBackData` parameter, the <xref:System.Drawing.Graphics.DrawImageAbort> callback returns `false`, which causes the <xref:System.Drawing.Graphics.DrawImage%2A> method to continue, and the example draws the adjusted image to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#51](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#51)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#51](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#51)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#51](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#51)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1413">
            <paramref name="image" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1413">
              <paramref name="image" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttrs, System.Drawing.Graphics.DrawImageAbort callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Rectangle destRect, float32 srcX, float32 srcY, float32 srcWidth, float32 srcHeight, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Imaging.ImageAttributes imageAttrs, class System.Drawing.Graphics/DrawImageAbort callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Imaging::ImageAttributes ^ imageAttrs, System::Drawing::Graphics::DrawImageAbort ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Rectangle * single * single * single * single * System.Drawing.GraphicsUnit * System.Drawing.Imaging.ImageAttributes * System.Drawing.Graphics.DrawImageAbort * nativeint -&gt; unit" Usage="graphics.DrawImage (image, destRect, srcX, srcY, srcWidth, srcHeight, srcUnit, imageAttrs, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcX" Type="System.Single" />
        <Parameter Name="srcY" Type="System.Single" />
        <Parameter Name="srcWidth" Type="System.Single" />
        <Parameter Name="srcHeight" Type="System.Single" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="imageAttrs" Type="System.Drawing.Imaging.ImageAttributes" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+DrawImageAbort" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="image">
          <span data-ttu-id="19ce0-1414">要绘制的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1414">
              <see cref="T:System.Drawing.Image" /> to draw.</span>
          </span>
        </param>
        <param name="destRect">
          <span data-ttu-id="19ce0-1415">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图像的位置和大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1415">
              <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image.</span>
          </span>
          <span data-ttu-id="19ce0-1416">将图像进行缩放以适合该矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1416">The image is scaled to fit the rectangle.</span>
          </span>
        </param>
        <param name="srcX">
          <span data-ttu-id="19ce0-1417">要绘制的源图像部分的左上角的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1417">The x-coordinate of the upper-left corner of the portion of the source image to draw.</span>
          </span>
        </param>
        <param name="srcY">
          <span data-ttu-id="19ce0-1418">要绘制的源图像部分的左上角的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1418">The y-coordinate of the upper-left corner of the portion of the source image to draw.</span>
          </span>
        </param>
        <param name="srcWidth">
          <span data-ttu-id="19ce0-1419">要绘制的源图像部分的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1419">Width of the portion of the source image to draw.</span>
          </span>
        </param>
        <param name="srcHeight">
          <span data-ttu-id="19ce0-1420">要绘制的源图像部分的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1420">Height of the portion of the source image to draw.</span>
          </span>
        </param>
        <param name="srcUnit">
          <span data-ttu-id="19ce0-1421">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定用于确定源矩形的度量单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1421">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.</span>
          </span>
        </param>
        <param name="imageAttrs">
          <span data-ttu-id="19ce0-1422">
            <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定 <c>image</c> 对象的重新着色和伽玛信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1422">
              <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <c>image</c> object.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-1423">
            <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委托，它指定在绘制图像期间要调用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1423">
              <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image.</span>
          </span>
          <span data-ttu-id="19ce0-1424">此方法被频繁调用以检查是否根据应用程序确定的条件停止 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)" /> 方法的执行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1424">This method is called frequently to check whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)" /> method according to application-determined criteria.</span>
          </span>
        </param>
        <param name="callbackData">
          <span data-ttu-id="19ce0-1425">一个值，它为 <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委托指定在检查是否停止执行 <see langword="DrawImage" /> 方法时要使用的附加数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1425">Value specifying additional data for the <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate to use when checking whether to stop execution of the <see langword="DrawImage" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1426">在指定位置并且按指定大小绘制指定的 <see cref="T:System.Drawing.Image" /> 的指定部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1426">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1427">`srcX`， `srcY`， `srcWidth`，和`srcHeight`参数指定的一个矩形部分`image`要绘制的对象。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1427">The `srcX`, `srcY`, `srcWidth`, and `srcHeight` parameters specify a rectangular portion, of the `image` object to draw.</span></span> <span data-ttu-id="19ce0-1428">矩形是相对于源映像的左上角。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1428">The rectangle is relative to the upper-left corner of the source image.</span></span> <span data-ttu-id="19ce0-1429">此部分进行缩放以容纳在由指定的矩形内`destRect`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1429">This portion is scaled to fit inside the rectangle specified by the `destRect` parameter.</span></span>  
  
 <span data-ttu-id="19ce0-1430">使用此重载`callback`和`callbackData`参数提供了一种根据条件和由应用程序的数据开始后停止的绘制图像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1430">This overload with the `callback` and `callbackData` parameters provides the means to stop the drawing of an image once it starts according to criteria and data determined by the application.</span></span> <span data-ttu-id="19ce0-1431">例如，应用程序可能开始绘制的大图像，用户可能滚动到屏幕外，用例的应用程序可以在其中停止绘制图像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1431">For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1432">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1432">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1433">代码首先定义回调方法以<xref:System.Drawing.Graphics.DrawImageAbort>委托; 定义简单，只是测试以了解是否<xref:System.Drawing.Graphics.DrawImage%2A>方法调用它为 null`callBackData`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1433">The code first defines a callback method for the <xref:System.Drawing.Graphics.DrawImageAbort> delegate; the definition is simplistic and merely tests to see whether the <xref:System.Drawing.Graphics.DrawImage%2A> method calls it with a null `callBackData` parameter.</span></span> <span data-ttu-id="19ce0-1434">主正文中的示例执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1434">The main body of the example performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1435">创建的实例<xref:System.Drawing.Graphics.DrawImageAbort>回调方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1435">Creates an instance of the <xref:System.Drawing.Graphics.DrawImageAbort> callback method.</span></span>  
  
-   <span data-ttu-id="19ce0-1436">从 JPEG 文件 sampimag.jpg 位于同示例的文件夹中创建的映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1436">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="19ce0-1437">创建定义在其中绘制图像的目标矩形的点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1437">Creates points that define a destination rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="19ce0-1438">创建源矩形来选择要绘制的图像的部分。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1438">Creates a source rectangle to select the portion of the image to draw.</span></span>  
  
-   <span data-ttu-id="19ce0-1439">设置图形绘制到像素的单位。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1439">Sets the graphics drawing unit to pixel.</span></span>  
  
-   <span data-ttu-id="19ce0-1440">将原始图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1440">Draws the original image to the screen.</span></span>  
  
-   <span data-ttu-id="19ce0-1441">创建要在其中绘制调整后的图像的附加目标矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1441">Creates an additional destination rectangle in which to draw an adjusted image.</span></span>  
  
-   <span data-ttu-id="19ce0-1442">创建和设置的调整后的映像，以便具有更大比常用伽玛值的属性。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1442">Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</span></span>  
  
-   <span data-ttu-id="19ce0-1443">将调整后的图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1443">Draws the adjusted image to the screen.</span></span>  
  
 <span data-ttu-id="19ce0-1444">原始、 未调整目标矩形的位置在屏幕上，确定图像和源矩形和大小的大小和目标矩形形状确定所绘制图像的缩放。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1444">For the original, unadjusted destination rectangle, the position locates the image on the screen, and the size of the source rectangle and the size and shape of the destination rectangle determines the scaling of the drawn image.</span></span>  
  
 <span data-ttu-id="19ce0-1445">由于本示例使用的重载，将传递`callBackData`参数，<xref:System.Drawing.Graphics.DrawImageAbort>回调返回`false`，这将导致<xref:System.Drawing.Graphics.DrawImage%2A>方法若要继续，以及的示例将调整后的图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1445">Because this example uses an overload that passes a `callBackData` parameter, the <xref:System.Drawing.Graphics.DrawImageAbort> callback returns `false`, which causes the <xref:System.Drawing.Graphics.DrawImage%2A> method to continue, and the example draws the adjusted image to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#55](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#55)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#55](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#55)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#55](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#55)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1446">
            <paramref name="image" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1446">
              <paramref name="image" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawImageUnscaled">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-1447">在由坐标对指定的位置，使用图像的原始物理大小绘制指定的图像。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1447">Draws the specified image using its original physical size at the location specified by a coordinate pair.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawImageUnscaled">
      <MemberSignature Language="C#" Value="public void DrawImageUnscaled (System.Drawing.Image image, System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImageUnscaled(class System.Drawing.Image image, valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImageUnscaled(System::Drawing::Image ^ image, System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.DrawImageUnscaled : System.Drawing.Image * System.Drawing.Point -&gt; unit" Usage="graphics.DrawImageUnscaled (image, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="image">
          <span data-ttu-id="19ce0-1448">要绘制的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1448">
              <see cref="T:System.Drawing.Image" /> to draw.</span>
          </span>
        </param>
        <param name="point">
          <span data-ttu-id="19ce0-1449">
            <see cref="T:System.Drawing.Point" /> 结构，它指定所绘制图像的左上角。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1449">
              <see cref="T:System.Drawing.Point" /> structure that specifies the upper-left corner of the drawn image.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1450">在指定的位置使用图像的原始物理大小绘制指定的图像。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1450">Draws a specified image using its original physical size at a specified location.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1451"><xref:System.Drawing.Image>存储像素宽度的值和水平分辨率 （每英寸点数） 的值。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1451">An <xref:System.Drawing.Image> stores a value for pixel width and a value for horizontal resolution (dots per inch).</span></span> <span data-ttu-id="19ce0-1452">物理宽度，以英寸为单位的测量单位是映像的像素宽度除以的水平分辨率。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1452">The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</span></span> <span data-ttu-id="19ce0-1453">例如，带有像素宽度为 216 和 72 每英寸点数为单位的水平分辨率的图像具有物理宽度为 3 英寸。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1453">For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches.</span></span> <span data-ttu-id="19ce0-1454">此说明同样适用于像素高度和物理高度。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1454">Similar remarks apply to pixel height and physical height.</span></span>  
  
 <span data-ttu-id="19ce0-1455"><xref:System.Drawing.Graphics.DrawImageUnscaled%2A>方法绘制图像使用的物理大小，因此图像将具有其正确的大小，以英寸为单位，而不考虑显示设备的分辨率 （每英寸点数）。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1455">The <xref:System.Drawing.Graphics.DrawImageUnscaled%2A> method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</span></span> <span data-ttu-id="19ce0-1456">例如，假设映像具有像素宽度为 216 和水平分辨率为每英寸点数为 72。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1456">For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</span></span> <span data-ttu-id="19ce0-1457">如果调用<xref:System.Drawing.Graphics.DrawImageUnscaled%2A>分辨率为每英寸 96 点的设备上绘制该图像，则在呈现的图像的像素宽度将是 (216/72) \* 96 = 288。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1457">If you call <xref:System.Drawing.Graphics.DrawImageUnscaled%2A> to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)\*96 = 288.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1458">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1458">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1459">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1459">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1460">从 JPEG 文件 sampimag.jpg 位于同示例的文件夹中创建的映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1460">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="19ce0-1461">创建在其中绘制图像的左上角的点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1461">Creates a point at which to draw the upper-left corner of the image.</span></span>  
  
-   <span data-ttu-id="19ce0-1462">绘制整个图像使用的物理大小。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1462">Draws the entire image using its physical size.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#64](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#64)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#64](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#64)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#64](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#64)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1463">
            <paramref name="image" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1463">
              <paramref name="image" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImageUnscaled">
      <MemberSignature Language="C#" Value="public void DrawImageUnscaled (System.Drawing.Image image, System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImageUnscaled(class System.Drawing.Image image, valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImageUnscaled(System::Drawing::Image ^ image, System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.DrawImageUnscaled : System.Drawing.Image * System.Drawing.Rectangle -&gt; unit" Usage="graphics.DrawImageUnscaled (image, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="image">
          <span data-ttu-id="19ce0-1464">要绘制的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1464">
              <see cref="T:System.Drawing.Image" /> to draw.</span>
          </span>
        </param>
        <param name="rect">
          <span data-ttu-id="19ce0-1465">
            <see cref="T:System.Drawing.Rectangle" />，它指定了所绘制图像的左上角。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1465">
              <see cref="T:System.Drawing.Rectangle" /> that specifies the upper-left corner of the drawn image.</span>
          </span>
          <span data-ttu-id="19ce0-1466">该矩形的 X 和 Y 属性指定左上角。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1466">The X and Y properties of the rectangle specify the upper-left corner.</span>
          </span>
          <span data-ttu-id="19ce0-1467">宽度和高度属性被忽略。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1467">The Width and Height properties are ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1468">在指定的位置使用图像的原始物理大小绘制指定的图像。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1468">Draws a specified image using its original physical size at a specified location.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1469"><xref:System.Drawing.Image>存储像素宽度的值和水平分辨率 （每英寸点数） 的值。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1469">An <xref:System.Drawing.Image> stores a value for pixel width and a value for horizontal resolution (dots per inch).</span></span> <span data-ttu-id="19ce0-1470">物理宽度，以英寸为单位的测量单位是映像的像素宽度除以的水平分辨率。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1470">The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</span></span> <span data-ttu-id="19ce0-1471">例如，带有像素宽度为 216 和 72 每英寸点数为单位的水平分辨率的图像具有物理宽度为 3 英寸。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1471">For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches.</span></span> <span data-ttu-id="19ce0-1472">此说明同样适用于像素高度和物理高度。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1472">Similar remarks apply to pixel height and physical height.</span></span>  
  
 <span data-ttu-id="19ce0-1473"><xref:System.Drawing.Graphics.DrawImageUnscaled%2A>方法绘制图像使用的物理大小，因此图像将具有其正确的大小，以英寸为单位，而不考虑显示设备的分辨率 （每英寸点数）。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1473">The <xref:System.Drawing.Graphics.DrawImageUnscaled%2A> method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</span></span> <span data-ttu-id="19ce0-1474">例如，假设映像具有像素宽度为 216 和水平分辨率为每英寸点数为 72。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1474">For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</span></span> <span data-ttu-id="19ce0-1475">如果调用<xref:System.Drawing.Graphics.DrawImageUnscaled%2A>分辨率为每英寸 96 点的设备上绘制该图像，则在呈现的图像的像素宽度将是 (216/72) \* 96 = 288。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1475">If you call <xref:System.Drawing.Graphics.DrawImageUnscaled%2A> to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)\*96 = 288.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1476">
            <paramref name="image" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1476">
              <paramref name="image" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImageUnscaled">
      <MemberSignature Language="C#" Value="public void DrawImageUnscaled (System.Drawing.Image image, int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImageUnscaled(class System.Drawing.Image image, int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImageUnscaled(System::Drawing::Image ^ image, int x, int y);" />
      <MemberSignature Language="F#" Value="member this.DrawImageUnscaled : System.Drawing.Image * int * int -&gt; unit" Usage="graphics.DrawImageUnscaled (image, x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="image">
          <span data-ttu-id="19ce0-1477">要绘制的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1477">
              <see cref="T:System.Drawing.Image" /> to draw.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="19ce0-1478">所绘制图像的左上角的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1478">The x-coordinate of the upper-left corner of the drawn image.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="19ce0-1479">所绘制图像的左上角的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1479">The y-coordinate of the upper-left corner of the drawn image.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1480">在由坐标对指定的位置，使用图像的原始物理大小绘制指定的图像。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1480">Draws the specified image using its original physical size at the location specified by a coordinate pair.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1481"><xref:System.Drawing.Image>存储像素宽度的值和水平分辨率 （每英寸点数） 的值。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1481">An <xref:System.Drawing.Image> stores a value for pixel width and a value for horizontal resolution (dots per inch).</span></span> <span data-ttu-id="19ce0-1482">物理宽度，以英寸为单位的测量单位是映像的像素宽度除以的水平分辨率。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1482">The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</span></span> <span data-ttu-id="19ce0-1483">例如，带有像素宽度为 216 和 72 每英寸点数为单位的水平分辨率的图像具有物理宽度为 3 英寸。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1483">For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches.</span></span> <span data-ttu-id="19ce0-1484">此说明同样适用于像素高度和物理高度。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1484">Similar remarks apply to pixel height and physical height.</span></span>  
  
 <span data-ttu-id="19ce0-1485"><xref:System.Drawing.Graphics.DrawImageUnscaled%2A>方法绘制图像使用的物理大小，因此图像将具有其正确的大小，以英寸为单位，而不考虑显示设备的分辨率 （每英寸点数）。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1485">The <xref:System.Drawing.Graphics.DrawImageUnscaled%2A> method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</span></span> <span data-ttu-id="19ce0-1486">例如，假设映像具有像素宽度为 216 和水平分辨率为每英寸点数为 72。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1486">For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</span></span> <span data-ttu-id="19ce0-1487">如果调用<xref:System.Drawing.Graphics.DrawImageUnscaled%2A>分辨率为每英寸 96 点的设备上绘制该图像，则在呈现的图像的像素宽度将是 (216/72) \* 96 = 288。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1487">If you call <xref:System.Drawing.Graphics.DrawImageUnscaled%2A> to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)\*96 = 288.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1488">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1488">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1489">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1489">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1490">从 JPEG 文件，sampimag.jpg 位于同，该示例的文件夹中创建的映像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1490">Creates an image from a JPEG file, SampImag.jpg, in the folder of the example.</span></span>  
  
-   <span data-ttu-id="19ce0-1491">创建在其中绘制图像的左上角的点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1491">Creates a point at which to draw the upper-left corner of the image.</span></span>  
  
-   <span data-ttu-id="19ce0-1492">绘制整个图像使用的物理大小。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1492">Draws the entire image using its physical size.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#65](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#65)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#65](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#65)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#65](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#65)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1493">
            <paramref name="image" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1493">
              <paramref name="image" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImageUnscaled">
      <MemberSignature Language="C#" Value="public void DrawImageUnscaled (System.Drawing.Image image, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImageUnscaled(class System.Drawing.Image image, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImageUnscaled(System::Drawing::Image ^ image, int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.DrawImageUnscaled : System.Drawing.Image * int * int * int * int -&gt; unit" Usage="graphics.DrawImageUnscaled (image, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="image">
          <span data-ttu-id="19ce0-1494">要绘制的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1494">
              <see cref="T:System.Drawing.Image" /> to draw.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="19ce0-1495">所绘制图像的左上角的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1495">The x-coordinate of the upper-left corner of the drawn image.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="19ce0-1496">所绘制图像的左上角的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1496">The y-coordinate of the upper-left corner of the drawn image.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="19ce0-1497">未使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1497">Not used.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="19ce0-1498">未使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1498">Not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1499">在指定的位置使用图像的原始物理大小绘制指定的图像。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1499">Draws a specified image using its original physical size at a specified location.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1500"><xref:System.Drawing.Image>存储像素宽度的值和水平分辨率 （每英寸点数） 的值。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1500">An <xref:System.Drawing.Image> stores a value for pixel width and a value for horizontal resolution (dots per inch).</span></span> <span data-ttu-id="19ce0-1501">物理宽度，以英寸为单位的测量单位是映像的像素宽度除以的水平分辨率。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1501">The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</span></span> <span data-ttu-id="19ce0-1502">例如，带有像素宽度为 216 和 72 每英寸点数为单位的水平分辨率的图像具有物理宽度为 3 英寸。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1502">For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches.</span></span> <span data-ttu-id="19ce0-1503">此说明同样适用于像素高度和物理高度。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1503">Similar remarks apply to pixel height and physical height.</span></span>  
  
 <span data-ttu-id="19ce0-1504"><xref:System.Drawing.Graphics.DrawImageUnscaled%2A>方法绘制图像使用的物理大小，因此图像将具有其正确的大小，以英寸为单位，而不考虑显示设备的分辨率 （每英寸点数）。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1504">The <xref:System.Drawing.Graphics.DrawImageUnscaled%2A> method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</span></span> <span data-ttu-id="19ce0-1505">例如，假设映像具有像素宽度为 216 和水平分辨率为每英寸点数为 72。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1505">For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</span></span> <span data-ttu-id="19ce0-1506">如果调用<xref:System.Drawing.Graphics.DrawImageUnscaled%2A>分辨率为每英寸 96 点的设备上绘制该图像，则在呈现的图像的像素宽度将是 (216/72) \* 96 = 288。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1506">If you call <xref:System.Drawing.Graphics.DrawImageUnscaled%2A> to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)\*96 = 288.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1507">
            <paramref name="image" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1507">
              <paramref name="image" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImageUnscaledAndClipped">
      <MemberSignature Language="C#" Value="public void DrawImageUnscaledAndClipped (System.Drawing.Image image, System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImageUnscaledAndClipped(class System.Drawing.Image image, valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImageUnscaledAndClipped(System.Drawing.Image,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImageUnscaledAndClipped(System::Drawing::Image ^ image, System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.DrawImageUnscaledAndClipped : System.Drawing.Image * System.Drawing.Rectangle -&gt; unit" Usage="graphics.DrawImageUnscaledAndClipped (image, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="image">
          <span data-ttu-id="19ce0-1508">要绘制的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1508">The <see cref="T:System.Drawing.Image" /> to draw.</span>
          </span>
        </param>
        <param name="rect">
          <span data-ttu-id="19ce0-1509">要在其中绘制图像的 <see cref="T:System.Drawing.Rectangle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1509">The <see cref="T:System.Drawing.Rectangle" /> in which to draw the image.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1510">在不进行缩放的情况下绘制指定的图像，并在需要时剪辑该图像以适合指定的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1510">Draws the specified image without scaling and clips it, if necessary, to fit in the specified rectangle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19ce0-1511">下面的示例演示如何使用 <xref:System.Drawing.Graphics.DrawImageUnscaledAndClipped%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1511">The following example demonstrates how to use the <xref:System.Drawing.Graphics.DrawImageUnscaledAndClipped%2A> method.</span></span> <span data-ttu-id="19ce0-1512">若要运行此示例，请将其粘贴到 Windows 窗体中。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1512">To run this example, paste it into a Windows Form.</span></span> <span data-ttu-id="19ce0-1513">处理窗体的<xref:System.Windows.Forms.Control.Paint>事件并调用`DrawImageUnscaled`方法从<xref:System.Windows.Forms.Control.Paint>事件处理方法，并传递`e`作为<xref:System.Windows.Forms.PaintEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1513">Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `DrawImageUnscaled` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Drawing.MiscWhidbeySnippets#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/CS/Form1.cs#8)]
 [!code-vb[System.Drawing.MiscWhidbeySnippets#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1514">
            <paramref name="image" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1514">
              <paramref name="image" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawLine">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-1515">绘制一条连接由坐标对指定的两个点的线条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1515">Draws a line connecting the two points specified by the coordinate pairs.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawLine">
      <MemberSignature Language="C#" Value="public void DrawLine (System.Drawing.Pen pen, System.Drawing.Point pt1, System.Drawing.Point pt2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawLine(class System.Drawing.Pen pen, valuetype System.Drawing.Point pt1, valuetype System.Drawing.Point pt2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawLine(System::Drawing::Pen ^ pen, System::Drawing::Point pt1, System::Drawing::Point pt2);" />
      <MemberSignature Language="F#" Value="member this.DrawLine : System.Drawing.Pen * System.Drawing.Point * System.Drawing.Point -&gt; unit" Usage="graphics.DrawLine (pen, pt1, pt2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="pt1" Type="System.Drawing.Point" />
        <Parameter Name="pt2" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-1516">
            <see cref="T:System.Drawing.Pen" />，它确定线条的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1516">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the line.</span>
          </span>
        </param>
        <param name="pt1">
          <span data-ttu-id="19ce0-1517">
            <see cref="T:System.Drawing.Point" /> 结构，它表示要连接的第一个点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1517">
              <see cref="T:System.Drawing.Point" /> structure that represents the first point to connect.</span>
          </span>
        </param>
        <param name="pt2">
          <span data-ttu-id="19ce0-1518">
            <see cref="T:System.Drawing.Point" /> 结构，它表示要连接的第二个点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1518">
              <see cref="T:System.Drawing.Point" /> structure that represents the second point to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1519">绘制一条连接两个 <see cref="T:System.Drawing.Point" /> 结构的线。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1519">Draws a line connecting two <see cref="T:System.Drawing.Point" /> structures.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19ce0-1520">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1520">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1521">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1521">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1522">创建黑色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1522">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="19ce0-1523">创建的终结点的行的点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1523">Creates points for the endpoints of the line.</span></span>  
  
-   <span data-ttu-id="19ce0-1524">将该线条绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1524">Draws the line to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#66](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#66)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#66](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#66)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#66](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#66)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1525">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1525">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawLine">
      <MemberSignature Language="C#" Value="public void DrawLine (System.Drawing.Pen pen, System.Drawing.PointF pt1, System.Drawing.PointF pt2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawLine(class System.Drawing.Pen pen, valuetype System.Drawing.PointF pt1, valuetype System.Drawing.PointF pt2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawLine(System::Drawing::Pen ^ pen, System::Drawing::PointF pt1, System::Drawing::PointF pt2);" />
      <MemberSignature Language="F#" Value="member this.DrawLine : System.Drawing.Pen * System.Drawing.PointF * System.Drawing.PointF -&gt; unit" Usage="graphics.DrawLine (pen, pt1, pt2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="pt1" Type="System.Drawing.PointF" />
        <Parameter Name="pt2" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-1526">
            <see cref="T:System.Drawing.Pen" />，它确定线条的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1526">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the line.</span>
          </span>
        </param>
        <param name="pt1">
          <span data-ttu-id="19ce0-1527">
            <see cref="T:System.Drawing.PointF" /> 结构，它表示要连接的第一个点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1527">
              <see cref="T:System.Drawing.PointF" /> structure that represents the first point to connect.</span>
          </span>
        </param>
        <param name="pt2">
          <span data-ttu-id="19ce0-1528">
            <see cref="T:System.Drawing.PointF" /> 结构，它表示要连接的第二个点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1528">
              <see cref="T:System.Drawing.PointF" /> structure that represents the second point to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1529">绘制一条连接两个 <see cref="T:System.Drawing.PointF" /> 结构的线。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1529">Draws a line connecting two <see cref="T:System.Drawing.PointF" /> structures.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1530">此方法绘制一条连接由指定的两个点`pt1`和 p`2`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1530">This method draws a line connecting the two points specified by the `pt1` and p`2` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1531">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1531">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1532">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1532">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1533">创建黑色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1533">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="19ce0-1534">创建的终结点的行的点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1534">Creates points for the endpoints of the line.</span></span>  
  
-   <span data-ttu-id="19ce0-1535">将该线条绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1535">Draws the line to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#67](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#67)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#67](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#67)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#67](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#67)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1536">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1536">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawLine">
      <MemberSignature Language="C#" Value="public void DrawLine (System.Drawing.Pen pen, int x1, int y1, int x2, int y2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawLine(class System.Drawing.Pen pen, int32 x1, int32 y1, int32 x2, int32 y2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawLine(System::Drawing::Pen ^ pen, int x1, int y1, int x2, int y2);" />
      <MemberSignature Language="F#" Value="member this.DrawLine : System.Drawing.Pen * int * int * int * int -&gt; unit" Usage="graphics.DrawLine (pen, x1, y1, x2, y2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="x1" Type="System.Int32" />
        <Parameter Name="y1" Type="System.Int32" />
        <Parameter Name="x2" Type="System.Int32" />
        <Parameter Name="y2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-1537">
            <see cref="T:System.Drawing.Pen" />，它确定线条的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1537">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the line.</span>
          </span>
        </param>
        <param name="x1">
          <span data-ttu-id="19ce0-1538">第一个点的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1538">The x-coordinate of the first point.</span>
          </span>
        </param>
        <param name="y1">
          <span data-ttu-id="19ce0-1539">第一个点的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1539">The y-coordinate of the first point.</span>
          </span>
        </param>
        <param name="x2">
          <span data-ttu-id="19ce0-1540">第二个点的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1540">The x-coordinate of the second point.</span>
          </span>
        </param>
        <param name="y2">
          <span data-ttu-id="19ce0-1541">第二个点的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1541">The y-coordinate of the second point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1542">绘制一条连接由坐标对指定的两个点的线条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1542">Draws a line connecting the two points specified by the coordinate pairs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1543">此方法绘制一条连接由指定的两个点`x1`， `y1`， `x2`，和`y2`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1543">This method draws a line connecting the two points specified by the `x1`, `y1`, `x2`, and `y2` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1544">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1544">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1545">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1545">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1546">创建黑色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1546">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="19ce0-1547">创建的行的终结点的坐标。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1547">Creates the coordinates of the endpoints of the line.</span></span>  
  
-   <span data-ttu-id="19ce0-1548">将该线条绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1548">Draws the line to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#68](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#68)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#68](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#68)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#68](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#68)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1549">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1549">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawLine">
      <MemberSignature Language="C#" Value="public void DrawLine (System.Drawing.Pen pen, float x1, float y1, float x2, float y2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawLine(class System.Drawing.Pen pen, float32 x1, float32 y1, float32 x2, float32 y2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawLine(System::Drawing::Pen ^ pen, float x1, float y1, float x2, float y2);" />
      <MemberSignature Language="F#" Value="member this.DrawLine : System.Drawing.Pen * single * single * single * single -&gt; unit" Usage="graphics.DrawLine (pen, x1, y1, x2, y2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="x2" Type="System.Single" />
        <Parameter Name="y2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-1550">
            <see cref="T:System.Drawing.Pen" />，它确定线条的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1550">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the line.</span>
          </span>
        </param>
        <param name="x1">
          <span data-ttu-id="19ce0-1551">第一个点的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1551">The x-coordinate of the first point.</span>
          </span>
        </param>
        <param name="y1">
          <span data-ttu-id="19ce0-1552">第一个点的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1552">The y-coordinate of the first point.</span>
          </span>
        </param>
        <param name="x2">
          <span data-ttu-id="19ce0-1553">第二个点的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1553">The x-coordinate of the second point.</span>
          </span>
        </param>
        <param name="y2">
          <span data-ttu-id="19ce0-1554">第二个点的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1554">The y-coordinate of the second point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1555">绘制一条连接由坐标对指定的两个点的线条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1555">Draws a line connecting the two points specified by the coordinate pairs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1556">此方法绘制一条连接由指定的两个点`x1`， `y1`， `x2`，和`y2`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1556">This method draws a line connecting the two points specified by the `x1`, `y1`, `x2`, and `y2` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1557">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1557">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1558">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1558">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1559">创建黑色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1559">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="19ce0-1560">创建的行的终结点的坐标。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1560">Creates the coordinates of the endpoints of the line.</span></span>  
  
-   <span data-ttu-id="19ce0-1561">将该线条绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1561">Draws the line to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#69](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#69)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#69](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#69)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#69](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#69)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1562">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1562">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawLines">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-1563">绘制一系列连接一组 <see cref="T:System.Drawing.Point" /> 结构的线段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1563">Draws a series of line segments that connect an array of <see cref="T:System.Drawing.Point" /> structures.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawLines">
      <MemberSignature Language="C#" Value="public void DrawLines (System.Drawing.Pen pen, System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawLines(class System.Drawing.Pen pen, valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawLines(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.DrawLines : System.Drawing.Pen * System.Drawing.Point[] -&gt; unit" Usage="graphics.DrawLines (pen, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-1564">
            <see cref="T:System.Drawing.Pen" />，它确定线段的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1564">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the line segments.</span>
          </span>
        </param>
        <param name="points">
          <span data-ttu-id="19ce0-1565">
            <see cref="T:System.Drawing.Point" /> 结构数组，这些结构表示要连接的点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1565">Array of <see cref="T:System.Drawing.Point" /> structures that represent the points to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1566">绘制一系列连接一组 <see cref="T:System.Drawing.Point" /> 结构的线段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1566">Draws a series of line segments that connect an array of <see cref="T:System.Drawing.Point" /> structures.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1567">此方法绘制一系列连接一组终结点的行。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1567">This method draws a series of lines connecting an array of ending points.</span></span> <span data-ttu-id="19ce0-1568">数组中的前两个点指定的第一行。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1568">The first two points in the array specify the first line.</span></span> <span data-ttu-id="19ce0-1569">每个附加点指定一条直线段的起始点是前一条线段的结束点的末尾。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1569">Each additional point specifies the end of a line segment whose starting point is the ending point of the previous line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1570">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1570">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1571">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1571">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1572">创建黑色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1572">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="19ce0-1573">创建的段的行的点数组。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1573">Creates an array of points of segments of the line.</span></span>  
  
-   <span data-ttu-id="19ce0-1574">向屏幕绘制的连接的直线线段。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1574">Draws the connected line segments to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#70](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#70)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#70](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#70)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#70](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#70)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1575">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1575">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-1576">- 或 -  <paramref name="points" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1576">-or-  <paramref name="points" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawLines">
      <MemberSignature Language="C#" Value="public void DrawLines (System.Drawing.Pen pen, System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawLines(class System.Drawing.Pen pen, valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawLines(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.DrawLines : System.Drawing.Pen * System.Drawing.PointF[] -&gt; unit" Usage="graphics.DrawLines (pen, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-1577">
            <see cref="T:System.Drawing.Pen" />，它确定线段的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1577">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the line segments.</span>
          </span>
        </param>
        <param name="points">
          <span data-ttu-id="19ce0-1578">
            <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构表示要连接的点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1578">Array of <see cref="T:System.Drawing.PointF" /> structures that represent the points to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1579">绘制一系列连接一组 <see cref="T:System.Drawing.PointF" /> 结构的线段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1579">Draws a series of line segments that connect an array of <see cref="T:System.Drawing.PointF" /> structures.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1580">此方法绘制一系列连接一组终结点的行。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1580">This method draws a series of lines connecting an array of ending points.</span></span> <span data-ttu-id="19ce0-1581">数组中的前两个点指定的第一行。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1581">The first two points in the array specify the first line.</span></span> <span data-ttu-id="19ce0-1582">每个附加点指定一条直线段的起始点是前一条线段的结束点的末尾。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1582">Each additional point specifies the end of a line segment whose starting point is the ending point of the previous line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1583">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1583">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1584">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1584">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1585">代码将创建一个黑色的笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1585">Code creates a black pen.</span></span>  
  
-   <span data-ttu-id="19ce0-1586">创建的段的行的点数组。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1586">Creates an array of points of segments of the line.</span></span>  
  
-   <span data-ttu-id="19ce0-1587">向屏幕绘制的连接的直线线段。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1587">Draws the connected line segments to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#71](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#71)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#71](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#71)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#71](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#71)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1588">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1588">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-1589">- 或 -  <paramref name="points" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1589">-or-  <paramref name="points" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawPath">
      <MemberSignature Language="C#" Value="public void DrawPath (System.Drawing.Pen pen, System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawPath(class System.Drawing.Pen pen, class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawPath(System::Drawing::Pen ^ pen, System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberSignature Language="F#" Value="member this.DrawPath : System.Drawing.Pen * System.Drawing.Drawing2D.GraphicsPath -&gt; unit" Usage="graphics.DrawPath (pen, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-1590">
            <see cref="T:System.Drawing.Pen" />，它确定路径的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1590">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the path.</span>
          </span>
        </param>
        <param name="path">
          <span data-ttu-id="19ce0-1591">要绘制的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1591">
              <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to draw.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1592">绘制 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1592">Draws a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1593">将图形上下文中的当前转换应用于<xref:System.Drawing.Drawing2D.GraphicsPath>绘制之前。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1593">The current transformation in the graphic context is applied to the <xref:System.Drawing.Drawing2D.GraphicsPath> before it is drawn.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1594">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1594">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1595">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1595">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1596">创建图形路径对象，并向它添加一个椭圆。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1596">Creates a graphics path object and adds an ellipse to it.</span></span>  
  
-   <span data-ttu-id="19ce0-1597">创建黑色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1597">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="19ce0-1598">向屏幕绘制的图形路径。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1598">Draws the graphics path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#72](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#72)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#72](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#72)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#72](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#72)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1599">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1599">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-1600">- 或 -  <paramref name="path" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1600">-or-  <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawPie">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-1601">绘制一个扇形，该形状由一个坐标对、宽度、高度以及两条射线所指定的椭圆定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1601">Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, a height, and two radial lines.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawPie">
      <MemberSignature Language="C#" Value="public void DrawPie (System.Drawing.Pen pen, System.Drawing.Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawPie(class System.Drawing.Pen pen, valuetype System.Drawing.Rectangle rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawPie(System::Drawing::Pen ^ pen, System::Drawing::Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.DrawPie : System.Drawing.Pen * System.Drawing.Rectangle * single * single -&gt; unit" Usage="graphics.DrawPie (pen, rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-1602">
            <see cref="T:System.Drawing.Pen" />，它确定扇形的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1602">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the pie shape.</span>
          </span>
        </param>
        <param name="rect">
          <span data-ttu-id="19ce0-1603">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它表示定义该扇形所属的椭圆的边框。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1603">
              <see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle that defines the ellipse from which the pie shape comes.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="19ce0-1604">从 x 轴到扇形的第一条边沿顺时针方向度量的角（以度为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1604">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="19ce0-1605">从 <c>startAngle</c> 参数到扇形的第二条边沿顺时针方向度量的角（以度为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1605">Angle measured in degrees clockwise from the <c>startAngle</c> parameter to the second side of the pie shape.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1606">绘制由一个 <see cref="T:System.Drawing.Rectangle" /> 结构和两条射线所指定的椭圆定义的扇形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1606">Draws a pie shape defined by an ellipse specified by a <see cref="T:System.Drawing.Rectangle" /> structure and two radial lines.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1607">此方法绘制由一个椭圆和两条射线相交的一段弧线，与弧的终结点定义的扇形。椭圆的边框由定义。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1607">This method draws a pie shape defined by an arc of an ellipse and the two radial lines that intersect with the endpoints of the arc. The ellipse is defined by the bounding rectangle.</span></span> <span data-ttu-id="19ce0-1608">扇形包含定义的两条射线`startAngle`和`sweepAngle`参数和之间的交集的射线与椭圆弧。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1608">The pie shape consists of the two radial lines defined by the `startAngle` and `sweepAngle` parameters, and the arc between the intersections of those radial lines with the ellipse.</span></span>  
  
 <span data-ttu-id="19ce0-1609">如果`sweepAngle`参数的值大于 360 度或小于-360 度，就像它是 360 度或-360 度，分别处理。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1609">If the `sweepAngle` parameter is greater than 360 degrees or less than -360 degrees, it is treated as if it were 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1610">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1610">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1611">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1611">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1612">创建黑色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1612">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="19ce0-1613">创建限定整个椭圆的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1613">Creates a rectangle that bounds a complete ellipse.</span></span>  
  
-   <span data-ttu-id="19ce0-1614">定义在其中开始 （相对于 x 轴） 的绘图角度和对其进行绘制 （不管是在顺时针方向） 访问。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1614">Defines the angles at which to start drawing (relative to the x axis) and through which to draw (both in a clockwise direction).</span></span>  
  
-   <span data-ttu-id="19ce0-1615">向屏幕绘制饼图段。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1615">Draws the pie segment to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#73](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#73)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#73](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#73)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#73](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#73)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1616">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1616">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawPie">
      <MemberSignature Language="C#" Value="public void DrawPie (System.Drawing.Pen pen, System.Drawing.RectangleF rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawPie(class System.Drawing.Pen pen, valuetype System.Drawing.RectangleF rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawPie(System::Drawing::Pen ^ pen, System::Drawing::RectangleF rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.DrawPie : System.Drawing.Pen * System.Drawing.RectangleF * single * single -&gt; unit" Usage="graphics.DrawPie (pen, rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-1617">
            <see cref="T:System.Drawing.Pen" />，它确定扇形的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1617">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the pie shape.</span>
          </span>
        </param>
        <param name="rect">
          <span data-ttu-id="19ce0-1618">
            <see cref="T:System.Drawing.RectangleF" /> 结构，它表示定义该扇形所属的椭圆的边框。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1618">
              <see cref="T:System.Drawing.RectangleF" /> structure that represents the bounding rectangle that defines the ellipse from which the pie shape comes.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="19ce0-1619">从 x 轴到扇形的第一条边沿顺时针方向度量的角（以度为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1619">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="19ce0-1620">从 <c>startAngle</c> 参数到扇形的第二条边沿顺时针方向度量的角（以度为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1620">Angle measured in degrees clockwise from the <c>startAngle</c> parameter to the second side of the pie shape.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1621">绘制由一个 <see cref="T:System.Drawing.RectangleF" /> 结构和两条射线所指定的椭圆定义的扇形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1621">Draws a pie shape defined by an ellipse specified by a <see cref="T:System.Drawing.RectangleF" /> structure and two radial lines.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1622">此方法绘制由一个椭圆和两条射线相交的一段弧线，与弧的终结点定义的扇形。椭圆的边框由定义。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1622">This method draws a pie shape defined by an arc of an ellipse and the two radial lines that intersect with the endpoints of the arc. The ellipse is defined by the bounding rectangle.</span></span> <span data-ttu-id="19ce0-1623">扇形包含定义的两条射线`startAngle`和`sweepAngle`参数和之间的交集的射线与椭圆弧。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1623">The pie shape consists of the two radial lines defined by the `startAngle` and `sweepAngle` parameters, and the arc between the intersections of those radial lines with the ellipse.</span></span>  
  
 <span data-ttu-id="19ce0-1624">如果`sweepAngle`参数的值大于 360 度或小于-360 度，就像它是 360 度或-360 度，分别处理。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1624">If the `sweepAngle` parameter is greater than 360 degrees or less than -360 degrees, it is treated as if it were 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1625">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1625">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1626">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1626">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1627">创建黑色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1627">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="19ce0-1628">创建限定整个椭圆的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1628">Creates a rectangle that bounds a complete ellipse.</span></span>  
  
-   <span data-ttu-id="19ce0-1629">定义在其中开始 （相对于 x 轴） 的绘图角度和对其进行绘制 （不管是在顺时针方向） 访问。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1629">Defines the angles at which to start drawing (relative to the x axis) and through which to draw (both in a clockwise direction).</span></span>  
  
-   <span data-ttu-id="19ce0-1630">向屏幕绘制饼图段。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1630">Draws the pie segment to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#74](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#74)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#74](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#74)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#74](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#74)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1631">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1631">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawPie">
      <MemberSignature Language="C#" Value="public void DrawPie (System.Drawing.Pen pen, int x, int y, int width, int height, int startAngle, int sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawPie(class System.Drawing.Pen pen, int32 x, int32 y, int32 width, int32 height, int32 startAngle, int32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawPie(System::Drawing::Pen ^ pen, int x, int y, int width, int height, int startAngle, int sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.DrawPie : System.Drawing.Pen * int * int * int * int * int * int -&gt; unit" Usage="graphics.DrawPie (pen, x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="startAngle" Type="System.Int32" />
        <Parameter Name="sweepAngle" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-1632">
            <see cref="T:System.Drawing.Pen" />，它确定扇形的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1632">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the pie shape.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="19ce0-1633">边框的左上角的 x 坐标，该边框定义扇形所属的椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1633">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="19ce0-1634">边框的左上角的 y 坐标，该边框定义扇形所属的椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1634">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="19ce0-1635">边框的宽度，该边框定义扇形所属的椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1635">Width of the bounding rectangle that defines the ellipse from which the pie shape comes.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="19ce0-1636">边框的高度，该边框定义扇形所属的椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1636">Height of the bounding rectangle that defines the ellipse from which the pie shape comes.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="19ce0-1637">从 x 轴到扇形的第一条边沿顺时针方向度量的角（以度为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1637">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="19ce0-1638">从 <c>startAngle</c> 参数到扇形的第二条边沿顺时针方向度量的角（以度为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1638">Angle measured in degrees clockwise from the <c>startAngle</c> parameter to the second side of the pie shape.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1639">绘制一个扇形，该形状由一个坐标对、宽度、高度以及两条射线所指定的椭圆定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1639">Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, a height, and two radial lines.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1640">此方法绘制由一个椭圆和两条射线相交的一段弧线，与弧的终结点定义的扇形。椭圆的边框所描述由定义`x`， `y`， `width`，和`height`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1640">This method draws a pie shape defined by an arc of an ellipse and the two radial lines that intersect with the endpoints of the arc. The ellipse is defined by the bounding rectangle described by the `x`, `y`, `width`, and `height` parameters.</span></span> <span data-ttu-id="19ce0-1641">扇形包含定义的两条射线`startAngle`和`sweepAngle`参数和之间的交集的射线与椭圆弧。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1641">The pie shape consists of the two radial lines defined by the `startAngle` and `sweepAngle` parameters, and the arc between the intersections of those radial lines with the ellipse.</span></span>  
  
 <span data-ttu-id="19ce0-1642">如果`sweepAngle`参数的值大于 360 度或小于-360 度，就像它是 360 度或-360 度，分别处理。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1642">If the `sweepAngle` parameter is greater than 360 degrees or less than -360 degrees, it is treated as if it were 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1643">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1643">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1644">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1644">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1645">创建黑色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1645">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="19ce0-1646">创建的位置和限定整个椭圆的矩形的大小。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1646">Creates the position and size of a rectangle that bounds a complete ellipse.</span></span>  
  
-   <span data-ttu-id="19ce0-1647">定义在其中开始 （相对于 x 轴） 的绘图角度和对其进行绘制 （不管是在顺时针方向） 访问。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1647">Defines the angles at which to start drawing (relative to the x axis) and through which to draw (both in a clockwise direction).</span></span>  
  
-   <span data-ttu-id="19ce0-1648">向屏幕绘制饼图形状。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1648">Draws the pie shape to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#75](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#75)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#75](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#75)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#75](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#75)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1649">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1649">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawPie">
      <MemberSignature Language="C#" Value="public void DrawPie (System.Drawing.Pen pen, float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawPie(class System.Drawing.Pen pen, float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawPie(System::Drawing::Pen ^ pen, float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.DrawPie : System.Drawing.Pen * single * single * single * single * single * single -&gt; unit" Usage="graphics.DrawPie (pen, x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-1650">
            <see cref="T:System.Drawing.Pen" />，它确定扇形的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1650">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the pie shape.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="19ce0-1651">边框的左上角的 x 坐标，该边框定义扇形所属的椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1651">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="19ce0-1652">边框的左上角的 y 坐标，该边框定义扇形所属的椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1652">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="19ce0-1653">边框的宽度，该边框定义扇形所属的椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1653">Width of the bounding rectangle that defines the ellipse from which the pie shape comes.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="19ce0-1654">边框的高度，该边框定义扇形所属的椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1654">Height of the bounding rectangle that defines the ellipse from which the pie shape comes.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="19ce0-1655">从 x 轴到扇形的第一条边沿顺时针方向度量的角（以度为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1655">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="19ce0-1656">从 <c>startAngle</c> 参数到扇形的第二条边沿顺时针方向度量的角（以度为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1656">Angle measured in degrees clockwise from the <c>startAngle</c> parameter to the second side of the pie shape.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1657">绘制一个扇形，该形状由一个坐标对、宽度、高度以及两条射线所指定的椭圆定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1657">Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, a height, and two radial lines.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1658">此方法绘制由一个椭圆和两条射线相交的一段弧线，与弧的终结点定义的扇形。椭圆的边框所描述由定义`x`， `y`， `width`，和`height`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1658">This method draws a pie shape defined by an arc of an ellipse and the two radial lines that intersect with the endpoints of the arc. The ellipse is defined by the bounding rectangle described by the `x`, `y`, `width`, and `height` parameters.</span></span> <span data-ttu-id="19ce0-1659">扇形包含定义的两条射线`startAngle`和`sweepAngle`参数和之间的交集的射线与椭圆弧。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1659">The pie shape consists of the two radial lines defined by the `startAngle` and `sweepAngle` parameters, and the arc between the intersections of those radial lines with the ellipse.</span></span>  
  
 <span data-ttu-id="19ce0-1660">如果`sweepAngle`参数的值大于 360 度或小于-360 度，就像它是 360 度或-360 度，分别处理。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1660">If the `sweepAngle` parameter is greater than 360 degrees or less than -360 degrees, it is treated as if it were 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1661">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1661">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1662">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1662">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1663">创建黑色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1663">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="19ce0-1664">创建的位置和限定整个椭圆的矩形的大小。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1664">Creates the position and size of a rectangle that bounds a complete ellipse.</span></span>  
  
-   <span data-ttu-id="19ce0-1665">定义在其中开始 （相对于 x 轴） 的绘图角度和对其进行绘制 （不管是在顺时针方向） 访问。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1665">Defines the angles at which to start drawing (relative to the x axis) and through which to draw (both in a clockwise direction).</span></span>  
  
-   <span data-ttu-id="19ce0-1666">向屏幕绘制饼图段。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1666">Draws the pie segment to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#76](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#76)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#76](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#76)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#76](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#76)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1667">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1667">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawPolygon">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-1668">绘制由一组 <see cref="T:System.Drawing.Point" /> 结构定义的多边形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1668">Draws a polygon defined by an array of <see cref="T:System.Drawing.Point" /> structures.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawPolygon">
      <MemberSignature Language="C#" Value="public void DrawPolygon (System.Drawing.Pen pen, System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawPolygon(class System.Drawing.Pen pen, valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawPolygon(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.DrawPolygon : System.Drawing.Pen * System.Drawing.Point[] -&gt; unit" Usage="graphics.DrawPolygon (pen, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-1669">
            <see cref="T:System.Drawing.Pen" />，它确定多边形的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1669">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the polygon.</span>
          </span>
        </param>
        <param name="points">
          <span data-ttu-id="19ce0-1670">
            <see cref="T:System.Drawing.Point" /> 结构数组，这些结构表示多边形的顶点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1670">Array of <see cref="T:System.Drawing.Point" /> structures that represent the vertices of the polygon.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1671">绘制由一组 <see cref="T:System.Drawing.Point" /> 结构定义的多边形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1671">Draws a polygon defined by an array of <see cref="T:System.Drawing.Point" /> structures.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1672">数组中的两个连续点的每对指定多边形的边。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1672">Every pair of two consecutive points in the array specifies a side of the polygon.</span></span> <span data-ttu-id="19ce0-1673">此外，如果最后一个点和数组的第一个点时间不一致，它们指定多边形最后一条边。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1673">In addition, if the last point and the first point of the array do not coincide, they specify the last side of the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1674">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1674">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1675">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1675">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1676">创建黑色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1676">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="19ce0-1677">创建的多边形的顶点的七个点的数组。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1677">Creates an array of seven points for the vertices of the polygon.</span></span>  
  
-   <span data-ttu-id="19ce0-1678">向屏幕绘制多边形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1678">Draws the polygon to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#78](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#78)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#78](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#78)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#78](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#78)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1679">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1679">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawPolygon">
      <MemberSignature Language="C#" Value="public void DrawPolygon (System.Drawing.Pen pen, System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawPolygon(class System.Drawing.Pen pen, valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawPolygon(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.DrawPolygon : System.Drawing.Pen * System.Drawing.PointF[] -&gt; unit" Usage="graphics.DrawPolygon (pen, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-1680">
            <see cref="T:System.Drawing.Pen" />，它确定多边形的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1680">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the polygon.</span>
          </span>
        </param>
        <param name="points">
          <span data-ttu-id="19ce0-1681">
            <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构表示多边形的顶点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1681">Array of <see cref="T:System.Drawing.PointF" /> structures that represent the vertices of the polygon.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1682">绘制由一组 <see cref="T:System.Drawing.PointF" /> 结构定义的多边形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1682">Draws a polygon defined by an array of <see cref="T:System.Drawing.PointF" /> structures.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1683">数组中的两个连续点的每对指定多边形的边。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1683">Every pair of two consecutive points in the array specifies a side of the polygon.</span></span> <span data-ttu-id="19ce0-1684">此外，如果最后一个点和数组点的第一个时间不一致，它们指定多边形最后一条边。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1684">In addition, if the last point and the first of the array point do not coincide, they specify the last side of the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1685">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1685">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1686">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1686">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1687">创建黑色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1687">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="19ce0-1688">创建的多边形的顶点的七个点的数组。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1688">Creates an array of seven points for the vertices of the polygon.</span></span>  
  
-   <span data-ttu-id="19ce0-1689">向屏幕绘制多边形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1689">Draws the polygon to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#77](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#77)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#77](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#77)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#77](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#77)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1690">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1690">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-1691">- 或 -  <paramref name="points" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1691">-or-  <paramref name="points" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawRectangle">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-1692">绘制由坐标对、宽度和高度指定的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1692">Draws a rectangle specified by a coordinate pair, a width, and a height.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawRectangle">
      <MemberSignature Language="C#" Value="public void DrawRectangle (System.Drawing.Pen pen, System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawRectangle(class System.Drawing.Pen pen, valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawRectangle(System::Drawing::Pen ^ pen, System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.DrawRectangle : System.Drawing.Pen * System.Drawing.Rectangle -&gt; unit" Usage="graphics.DrawRectangle (pen, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-1693">
            <see cref="T:System.Drawing.Pen" />，它确定矩形的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1693">A <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the rectangle.</span>
          </span>
        </param>
        <param name="rect">
          <span data-ttu-id="19ce0-1694">表示要绘制的矩形的 <see cref="T:System.Drawing.Rectangle" /> 结构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1694">A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle to draw.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1695">绘制由 <see cref="T:System.Drawing.Rectangle" /> 结构指定的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1695">Draws a rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1696">有关如何绘制<xref:System.Drawing.RectangleF>，请参阅<xref:System.Drawing.Graphics.DrawRectangles%28System.Drawing.Pen%2CSystem.Drawing.RectangleF%5B%5D%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1696">For information about how to draw a <xref:System.Drawing.RectangleF>, see <xref:System.Drawing.Graphics.DrawRectangles%28System.Drawing.Pen%2CSystem.Drawing.RectangleF%5B%5D%29>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1697">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1697">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1698">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1698">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1699">创建黑色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1699">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="19ce0-1700">创建一个矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1700">Creates a rectangle.</span></span>  
  
-   <span data-ttu-id="19ce0-1701">向屏幕绘制的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1701">Draws the rectangle to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#79](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#79)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#79](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#79)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#79](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#79)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1702">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1702">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawRectangle">
      <MemberSignature Language="C#" Value="public void DrawRectangle (System.Drawing.Pen pen, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawRectangle(class System.Drawing.Pen pen, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawRectangle(System::Drawing::Pen ^ pen, int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.DrawRectangle : System.Drawing.Pen * int * int * int * int -&gt; unit" Usage="graphics.DrawRectangle (pen, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-1703">
            <see cref="T:System.Drawing.Pen" />，它确定矩形的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1703">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the rectangle.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="19ce0-1704">要绘制的矩形的左上角的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1704">The x-coordinate of the upper-left corner of the rectangle to draw.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="19ce0-1705">要绘制的矩形的左上角的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1705">The y-coordinate of the upper-left corner of the rectangle to draw.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="19ce0-1706">要绘制的矩形的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1706">Width of the rectangle to draw.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="19ce0-1707">要绘制的矩形的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1707">Height of the rectangle to draw.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1708">绘制由坐标对、宽度和高度指定的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1708">Draws a rectangle specified by a coordinate pair, a width, and a height.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1709">有关如何绘制<xref:System.Drawing.RectangleF>，请参阅<xref:System.Drawing.Graphics.DrawRectangles%28System.Drawing.Pen%2CSystem.Drawing.RectangleF%5B%5D%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1709">For information about how to draw a <xref:System.Drawing.RectangleF>, see <xref:System.Drawing.Graphics.DrawRectangles%28System.Drawing.Pen%2CSystem.Drawing.RectangleF%5B%5D%29>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1710">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1710">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1711">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1711">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1712">创建黑色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1712">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="19ce0-1713">创建的位置和大小的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1713">Creates the position and size of a rectangle.</span></span>  
  
-   <span data-ttu-id="19ce0-1714">向屏幕绘制的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1714">Draws the rectangle to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#80](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#80)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#80](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#80)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#80](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#80)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1715">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1715">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawRectangle">
      <MemberSignature Language="C#" Value="public void DrawRectangle (System.Drawing.Pen pen, float x, float y, float width, float height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawRectangle(class System.Drawing.Pen pen, float32 x, float32 y, float32 width, float32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawRectangle(System::Drawing::Pen ^ pen, float x, float y, float width, float height);" />
      <MemberSignature Language="F#" Value="member this.DrawRectangle : System.Drawing.Pen * single * single * single * single -&gt; unit" Usage="graphics.DrawRectangle (pen, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-1716">
            <see cref="T:System.Drawing.Pen" />，它确定矩形的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1716">A <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the rectangle.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="19ce0-1717">要绘制的矩形的左上角的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1717">The x-coordinate of the upper-left corner of the rectangle to draw.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="19ce0-1718">要绘制的矩形的左上角的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1718">The y-coordinate of the upper-left corner of the rectangle to draw.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="19ce0-1719">要绘制的矩形的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1719">The width of the rectangle to draw.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="19ce0-1720">要绘制的矩形的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1720">The height of the rectangle to draw.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1721">绘制由坐标对、宽度和高度指定的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1721">Draws a rectangle specified by a coordinate pair, a width, and a height.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1722">有关如何绘制<xref:System.Drawing.RectangleF>，请参阅<xref:System.Drawing.Graphics.DrawRectangles%28System.Drawing.Pen%2CSystem.Drawing.RectangleF%5B%5D%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1722">For information about how to draw a <xref:System.Drawing.RectangleF>, see <xref:System.Drawing.Graphics.DrawRectangles%28System.Drawing.Pen%2CSystem.Drawing.RectangleF%5B%5D%29>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1723">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1723">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1724">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1724">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1725">创建黑色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1725">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="19ce0-1726">创建的位置和大小的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1726">Creates the position and size of a rectangle.</span></span>  
  
-   <span data-ttu-id="19ce0-1727">向屏幕绘制的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1727">Draws the rectangle to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#81](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#81)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#81](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#81)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#81](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#81)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1728">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1728">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawRectangles">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-1729">绘制一系列由 <see cref="T:System.Drawing.Rectangle" /> 结构指定的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1729">Draws a series of rectangles specified by <see cref="T:System.Drawing.Rectangle" /> structures.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawRectangles">
      <MemberSignature Language="C#" Value="public void DrawRectangles (System.Drawing.Pen pen, System.Drawing.Rectangle[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawRectangles(class System.Drawing.Pen pen, valuetype System.Drawing.Rectangle[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawRectangles(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::Rectangle&gt; ^ rects);" />
      <MemberSignature Language="F#" Value="member this.DrawRectangles : System.Drawing.Pen * System.Drawing.Rectangle[] -&gt; unit" Usage="graphics.DrawRectangles (pen, rects)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="rects" Type="System.Drawing.Rectangle[]" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-1730">
            <see cref="T:System.Drawing.Pen" />，它确定矩形轮廓线的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1730">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the outlines of the rectangles.</span>
          </span>
        </param>
        <param name="rects">
          <span data-ttu-id="19ce0-1731">
            <see cref="T:System.Drawing.Rectangle" /> 结构数组，这些结构表示要绘制的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1731">Array of <see cref="T:System.Drawing.Rectangle" /> structures that represent the rectangles to draw.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1732">绘制一系列由 <see cref="T:System.Drawing.Rectangle" /> 结构指定的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1732">Draws a series of rectangles specified by <see cref="T:System.Drawing.Rectangle" /> structures.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19ce0-1733">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1733">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1734">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1734">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1735">创建黑色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1735">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="19ce0-1736">创建三个矩形的数组。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1736">Creates an array of three rectangles.</span></span>  
  
-   <span data-ttu-id="19ce0-1737">向屏幕绘制矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1737">Draws the rectangles to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#82](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#82)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#82](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#82)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#82](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#82)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1738">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1738">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-1739">- 或 -  <paramref name="rects" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1739">-or-  <paramref name="rects" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="19ce0-1740">
            <paramref name="rects" /> 是一个长度为零的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1740">
              <paramref name="rects" /> is a zero-length array.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DrawRectangles">
      <MemberSignature Language="C#" Value="public void DrawRectangles (System.Drawing.Pen pen, System.Drawing.RectangleF[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawRectangles(class System.Drawing.Pen pen, valuetype System.Drawing.RectangleF[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawRectangles(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::RectangleF&gt; ^ rects);" />
      <MemberSignature Language="F#" Value="member this.DrawRectangles : System.Drawing.Pen * System.Drawing.RectangleF[] -&gt; unit" Usage="graphics.DrawRectangles (pen, rects)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="rects" Type="System.Drawing.RectangleF[]" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="19ce0-1741">
            <see cref="T:System.Drawing.Pen" />，它确定矩形轮廓线的颜色、宽度和样式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1741">
              <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the outlines of the rectangles.</span>
          </span>
        </param>
        <param name="rects">
          <span data-ttu-id="19ce0-1742">
            <see cref="T:System.Drawing.RectangleF" /> 结构数组，这些结构表示要绘制的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1742">Array of <see cref="T:System.Drawing.RectangleF" /> structures that represent the rectangles to draw.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1743">绘制一系列由 <see cref="T:System.Drawing.RectangleF" /> 结构指定的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1743">Draws a series of rectangles specified by <see cref="T:System.Drawing.RectangleF" /> structures.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19ce0-1744">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1744">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1745">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1745">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1746">创建黑色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1746">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="19ce0-1747">创建三个矩形的数组。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1747">Creates an array of three rectangles.</span></span>  
  
-   <span data-ttu-id="19ce0-1748">向屏幕绘制矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1748">Draws the rectangles to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#83](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#83)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#83](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#83)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#83](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#83)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1749">
            <paramref name="pen" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1749">
              <paramref name="pen" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-1750">- 或 -  <paramref name="rects" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1750">-or-  <paramref name="rects" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="19ce0-1751">
            <paramref name="rects" /> 是一个长度为零的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1751">
              <paramref name="rects" /> is a zero-length array.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawString">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-1752">在指定位置并且用指定的 <see cref="T:System.Drawing.Brush" /> 和 <see cref="T:System.Drawing.Font" /> 对象绘制指定的文本字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1752">Draws the specified text string at the specified location with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawString">
      <MemberSignature Language="C#" Value="public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, System.Drawing.PointF point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawString(string s, class System.Drawing.Font font, class System.Drawing.Brush brush, valuetype System.Drawing.PointF point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawString(System::String ^ s, System::Drawing::Font ^ font, System::Drawing::Brush ^ brush, System::Drawing::PointF point);" />
      <MemberSignature Language="F#" Value="member this.DrawString : string * System.Drawing.Font * System.Drawing.Brush * System.Drawing.PointF -&gt; unit" Usage="graphics.DrawString (s, font, brush, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="point" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="19ce0-1753">要绘制的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1753">String to draw.</span>
          </span>
        </param>
        <param name="font">
          <span data-ttu-id="19ce0-1754">
            <see cref="T:System.Drawing.Font" />，它定义字符串的文本格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1754">
              <see cref="T:System.Drawing.Font" /> that defines the text format of the string.</span>
          </span>
        </param>
        <param name="brush">
          <span data-ttu-id="19ce0-1755">
            <see cref="T:System.Drawing.Brush" />，它确定所绘制文本的颜色和纹理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1755">
              <see cref="T:System.Drawing.Brush" /> that determines the color and texture of the drawn text.</span>
          </span>
        </param>
        <param name="point">
          <span data-ttu-id="19ce0-1756">
            <see cref="T:System.Drawing.PointF" /> 结构，它指定所绘制文本的左上角。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1756">
              <see cref="T:System.Drawing.PointF" /> structure that specifies the upper-left corner of the drawn text.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1757">在指定位置并且用指定的 <see cref="T:System.Drawing.Brush" /> 和 <see cref="T:System.Drawing.Font" /> 对象绘制指定的文本字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1757">Draws the specified text string at the specified location with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19ce0-1758">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1758">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1759">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1759">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1760">创建要绘制的文本字符串。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1760">Creates a text string to draw.</span></span>  
  
-   <span data-ttu-id="19ce0-1761">定义为 Arial （16 磅） 的字体。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1761">Defines the font as Arial (16pt).</span></span>  
  
-   <span data-ttu-id="19ce0-1762">创建实心的黑色画笔绘制所使用。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1762">Creates a solid, black brush to draw with.</span></span>  
  
-   <span data-ttu-id="19ce0-1763">创建用于绘制文本的左上角的点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1763">Creates a point for the upper-left corner at which to draw the text.</span></span>  
  
-   <span data-ttu-id="19ce0-1764">使用的字体、 画笔和目标点向屏幕绘制字符串。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1764">Draws the string to the screen using the font, brush, and destination point.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#84](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#84)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#84](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#84)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#84](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#84)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1765">
            <paramref name="brush" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1765">
              <paramref name="brush" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-1766">- 或 -  <paramref name="s" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1766">-or-  <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)" />
      </Docs>
    </Member>
    <Member MemberName="DrawString">
      <MemberSignature Language="C#" Value="public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, System.Drawing.RectangleF layoutRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawString(string s, class System.Drawing.Font font, class System.Drawing.Brush brush, valuetype System.Drawing.RectangleF layoutRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawString(System::String ^ s, System::Drawing::Font ^ font, System::Drawing::Brush ^ brush, System::Drawing::RectangleF layoutRectangle);" />
      <MemberSignature Language="F#" Value="member this.DrawString : string * System.Drawing.Font * System.Drawing.Brush * System.Drawing.RectangleF -&gt; unit" Usage="graphics.DrawString (s, font, brush, layoutRectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="layoutRectangle" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="19ce0-1767">要绘制的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1767">String to draw.</span>
          </span>
        </param>
        <param name="font">
          <span data-ttu-id="19ce0-1768">
            <see cref="T:System.Drawing.Font" />，它定义字符串的文本格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1768">
              <see cref="T:System.Drawing.Font" /> that defines the text format of the string.</span>
          </span>
        </param>
        <param name="brush">
          <span data-ttu-id="19ce0-1769">
            <see cref="T:System.Drawing.Brush" />，它确定所绘制文本的颜色和纹理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1769">
              <see cref="T:System.Drawing.Brush" /> that determines the color and texture of the drawn text.</span>
          </span>
        </param>
        <param name="layoutRectangle">
          <span data-ttu-id="19ce0-1770">
            <see cref="T:System.Drawing.RectangleF" /> 结构，它指定所绘制文本的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1770">
              <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location of the drawn text.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1771">在指定矩形并且用指定的 <see cref="T:System.Drawing.Brush" /> 和 <see cref="T:System.Drawing.Font" /> 对象绘制指定的文本字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1771">Draws the specified text string in the specified rectangle with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1772">所表示的文本`s`所表示的矩形内绘制参数`layoutRectangle`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1772">The text represented by the `s` parameter is drawn inside the rectangle represented by the `layoutRectangle` parameter.</span></span> <span data-ttu-id="19ce0-1773">如果文本不适合该矩形内，则将在最接近的单词被截断。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1773">If the text does not fit inside the rectangle, it is truncated at the nearest word.</span></span> <span data-ttu-id="19ce0-1774">若要进一步操作如何字符串绘制在矩形使用内部<xref:System.Drawing.Graphics.DrawString%2A>采用重载<xref:System.Drawing.StringFormat>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1774">To further manipulate how the string is drawn inside the rectangle use the <xref:System.Drawing.Graphics.DrawString%2A> overload that takes a <xref:System.Drawing.StringFormat>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1775">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1775">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1776">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1776">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1777">创建要绘制的文本字符串。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1777">Creates a text string to draw.</span></span>  
  
-   <span data-ttu-id="19ce0-1778">定义为 Arial （16 磅） 的字体。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1778">Defines the font as Arial (16pt).</span></span>  
  
-   <span data-ttu-id="19ce0-1779">创建实心的黑色画笔绘制所使用。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1779">Creates a solid, black brush to draw with.</span></span>  
  
-   <span data-ttu-id="19ce0-1780">创建在其中绘制文本的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1780">Creates a rectangle in which to draw the text.</span></span>  
  
-   <span data-ttu-id="19ce0-1781">向屏幕绘制的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1781">Draws the rectangle to the screen.</span></span>  
  
-   <span data-ttu-id="19ce0-1782">使用的字体、 画笔和目标矩形向屏幕绘制字符串。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1782">Draws the string to the screen using the font, brush, and destination rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#86](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#86)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#86](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#86)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#86](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#86)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1783">
            <paramref name="brush" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1783">
              <paramref name="brush" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-1784">- 或 -  <paramref name="s" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1784">-or-  <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)" />
      </Docs>
    </Member>
    <Member MemberName="DrawString">
      <MemberSignature Language="C#" Value="public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, System.Drawing.PointF point, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawString(string s, class System.Drawing.Font font, class System.Drawing.Brush brush, valuetype System.Drawing.PointF point, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawString(System::String ^ s, System::Drawing::Font ^ font, System::Drawing::Brush ^ brush, System::Drawing::PointF point, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.DrawString : string * System.Drawing.Font * System.Drawing.Brush * System.Drawing.PointF * System.Drawing.StringFormat -&gt; unit" Usage="graphics.DrawString (s, font, brush, point, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="19ce0-1785">要绘制的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1785">String to draw.</span>
          </span>
        </param>
        <param name="font">
          <span data-ttu-id="19ce0-1786">
            <see cref="T:System.Drawing.Font" />，它定义字符串的文本格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1786">
              <see cref="T:System.Drawing.Font" /> that defines the text format of the string.</span>
          </span>
        </param>
        <param name="brush">
          <span data-ttu-id="19ce0-1787">
            <see cref="T:System.Drawing.Brush" />，它确定所绘制文本的颜色和纹理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1787">
              <see cref="T:System.Drawing.Brush" /> that determines the color and texture of the drawn text.</span>
          </span>
        </param>
        <param name="point">
          <span data-ttu-id="19ce0-1788">
            <see cref="T:System.Drawing.PointF" /> 结构，它指定所绘制文本的左上角。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1788">
              <see cref="T:System.Drawing.PointF" /> structure that specifies the upper-left corner of the drawn text.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="19ce0-1789">
            <see cref="T:System.Drawing.StringFormat" />，它指定应用于所绘制文本的格式化特性（如行距和对齐方式）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1789">
              <see cref="T:System.Drawing.StringFormat" /> that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1790">使用指定 <see cref="T:System.Drawing.StringFormat" /> 的格式化特性，用指定的 <see cref="T:System.Drawing.Brush" /> 和 <see cref="T:System.Drawing.Font" /> 对象在指定的位置绘制指定的文本字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1790">Draws the specified text string at the specified location with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects using the formatting attributes of the specified <see cref="T:System.Drawing.StringFormat" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19ce0-1791">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1791">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1792">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1792">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1793">创建要绘制的文本字符串。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1793">Creates a text string to draw.</span></span>  
  
-   <span data-ttu-id="19ce0-1794">定义为 Arial （16 磅） 的字体。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1794">Defines the font as Arial (16pt).</span></span>  
  
-   <span data-ttu-id="19ce0-1795">创建实心的黑色画笔绘制所使用。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1795">Creates a solid, black brush to draw with.</span></span>  
  
-   <span data-ttu-id="19ce0-1796">创建用于绘制文本的左上角的点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1796">Creates a point for the upper-left corner at which to draw the text.</span></span>  
  
-   <span data-ttu-id="19ce0-1797">设置要垂直绘制的字符串的格式。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1797">Sets the format of the string to draw vertically.</span></span>  
  
-   <span data-ttu-id="19ce0-1798">使用字体、 画笔、 目标点和格式向屏幕绘制字符串。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1798">Draws the string to the screen using the font, brush, destination point, and format.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#85](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#85)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#85](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#85)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#85](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#85)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1799">
            <paramref name="brush" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1799">
              <paramref name="brush" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-1800">- 或 -  <paramref name="s" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1800">-or-  <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)" />
      </Docs>
    </Member>
    <Member MemberName="DrawString">
      <MemberSignature Language="C#" Value="public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, System.Drawing.RectangleF layoutRectangle, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawString(string s, class System.Drawing.Font font, class System.Drawing.Brush brush, valuetype System.Drawing.RectangleF layoutRectangle, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawString(System::String ^ s, System::Drawing::Font ^ font, System::Drawing::Brush ^ brush, System::Drawing::RectangleF layoutRectangle, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.DrawString : string * System.Drawing.Font * System.Drawing.Brush * System.Drawing.RectangleF * System.Drawing.StringFormat -&gt; unit" Usage="graphics.DrawString (s, font, brush, layoutRectangle, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="layoutRectangle" Type="System.Drawing.RectangleF" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="19ce0-1801">要绘制的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1801">String to draw.</span>
          </span>
        </param>
        <param name="font">
          <span data-ttu-id="19ce0-1802">
            <see cref="T:System.Drawing.Font" />，它定义字符串的文本格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1802">
              <see cref="T:System.Drawing.Font" /> that defines the text format of the string.</span>
          </span>
        </param>
        <param name="brush">
          <span data-ttu-id="19ce0-1803">
            <see cref="T:System.Drawing.Brush" />，它确定所绘制文本的颜色和纹理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1803">
              <see cref="T:System.Drawing.Brush" /> that determines the color and texture of the drawn text.</span>
          </span>
        </param>
        <param name="layoutRectangle">
          <span data-ttu-id="19ce0-1804">
            <see cref="T:System.Drawing.RectangleF" /> 结构，它指定所绘制文本的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1804">
              <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location of the drawn text.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="19ce0-1805">
            <see cref="T:System.Drawing.StringFormat" />，它指定应用于所绘制文本的格式化特性（如行距和对齐方式）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1805">
              <see cref="T:System.Drawing.StringFormat" /> that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1806">使用指定 <see cref="T:System.Drawing.StringFormat" /> 的格式化特性，用指定的 <see cref="T:System.Drawing.Brush" /> 和 <see cref="T:System.Drawing.Font" /> 对象在指定的矩形中绘制指定的文本字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1806">Draws the specified text string in the specified rectangle with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects using the formatting attributes of the specified <see cref="T:System.Drawing.StringFormat" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1807">所表示的文本`s`所表示的矩形内绘制参数`layoutRectangle`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1807">The text represented by the `s` parameter is drawn inside the rectangle represented by the `layoutRectangle` parameter.</span></span> <span data-ttu-id="19ce0-1808">如果文本不适合该矩形内，则将被截断在最接近的单词，除非另有指定与`format`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1808">If the text does not fit inside the rectangle, it is truncated at the nearest word, unless otherwise specified with the `format` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1809">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1809">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1810">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1810">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1811">创建要绘制的文本字符串。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1811">Creates a text string to draw.</span></span>  
  
-   <span data-ttu-id="19ce0-1812">定义为 Arial （16 磅） 的字体。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1812">Defines the font as Arial (16pt).</span></span>  
  
-   <span data-ttu-id="19ce0-1813">创建实心的黑色画笔绘制所使用。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1813">Creates a solid, black brush to draw with.</span></span>  
  
-   <span data-ttu-id="19ce0-1814">创建在其中绘制文本的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1814">Creates a rectangle in which to draw the text.</span></span>  
  
-   <span data-ttu-id="19ce0-1815">向屏幕绘制的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1815">Draws the rectangle to the screen.</span></span>  
  
-   <span data-ttu-id="19ce0-1816">设置要中心矩形中的字符串的格式。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1816">Sets the format of the string to center it within the rectangle.</span></span>  
  
-   <span data-ttu-id="19ce0-1817">使用的字体、 画笔和目标矩形向屏幕绘制字符串。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1817">Draws the string to the screen using the font, brush, and destination rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#87](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#87)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#87](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#87)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#87](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#87)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1818">
            <paramref name="brush" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1818">
              <paramref name="brush" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-1819">- 或 -  <paramref name="s" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1819">-or-  <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)" />
      </Docs>
    </Member>
    <Member MemberName="DrawString">
      <MemberSignature Language="C#" Value="public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawString(string s, class System.Drawing.Font font, class System.Drawing.Brush brush, float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawString(System::String ^ s, System::Drawing::Font ^ font, System::Drawing::Brush ^ brush, float x, float y);" />
      <MemberSignature Language="F#" Value="member this.DrawString : string * System.Drawing.Font * System.Drawing.Brush * single * single -&gt; unit" Usage="graphics.DrawString (s, font, brush, x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="19ce0-1820">要绘制的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1820">String to draw.</span>
          </span>
        </param>
        <param name="font">
          <span data-ttu-id="19ce0-1821">
            <see cref="T:System.Drawing.Font" />，它定义字符串的文本格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1821">
              <see cref="T:System.Drawing.Font" /> that defines the text format of the string.</span>
          </span>
        </param>
        <param name="brush">
          <span data-ttu-id="19ce0-1822">
            <see cref="T:System.Drawing.Brush" />，它确定所绘制文本的颜色和纹理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1822">
              <see cref="T:System.Drawing.Brush" /> that determines the color and texture of the drawn text.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="19ce0-1823">所绘制文本的左上角的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1823">The x-coordinate of the upper-left corner of the drawn text.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="19ce0-1824">所绘制文本的左上角的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1824">The y-coordinate of the upper-left corner of the drawn text.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1825">在指定位置并且用指定的 <see cref="T:System.Drawing.Brush" /> 和 <see cref="T:System.Drawing.Font" /> 对象绘制指定的文本字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1825">Draws the specified text string at the specified location with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19ce0-1826">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1826">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1827">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1827">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1828">创建要绘制的文本字符串。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1828">Creates a text string to draw.</span></span>  
  
-   <span data-ttu-id="19ce0-1829">定义为 Arial （16 磅） 的字体。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1829">Defines the font as Arial (16pt).</span></span>  
  
-   <span data-ttu-id="19ce0-1830">创建纯黑色画笔绘制所使用。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1830">Creates a solid black brush to draw with.</span></span>  
  
-   <span data-ttu-id="19ce0-1831">创建用于绘制文本的左上角的点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1831">Creates a point for the upper-left corner at which to draw the text.</span></span>  
  
-   <span data-ttu-id="19ce0-1832">使用的字体、 画笔和目标点向屏幕绘制字符串。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1832">Draws the string to the screen using the font, brush, and destination point.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#88](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#88)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#88](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#88)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#88](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#88)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1833">
            <paramref name="brush" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1833">
              <paramref name="brush" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-1834">- 或 -  <paramref name="s" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1834">-or-  <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)" />
      </Docs>
    </Member>
    <Member MemberName="DrawString">
      <MemberSignature Language="C#" Value="public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, float x, float y, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawString(string s, class System.Drawing.Font font, class System.Drawing.Brush brush, float32 x, float32 y, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawString(System::String ^ s, System::Drawing::Font ^ font, System::Drawing::Brush ^ brush, float x, float y, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.DrawString : string * System.Drawing.Font * System.Drawing.Brush * single * single * System.Drawing.StringFormat -&gt; unit" Usage="graphics.DrawString (s, font, brush, x, y, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="19ce0-1835">要绘制的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1835">String to draw.</span>
          </span>
        </param>
        <param name="font">
          <span data-ttu-id="19ce0-1836">
            <see cref="T:System.Drawing.Font" />，它定义字符串的文本格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1836">
              <see cref="T:System.Drawing.Font" /> that defines the text format of the string.</span>
          </span>
        </param>
        <param name="brush">
          <span data-ttu-id="19ce0-1837">
            <see cref="T:System.Drawing.Brush" />，它确定所绘制文本的颜色和纹理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1837">
              <see cref="T:System.Drawing.Brush" /> that determines the color and texture of the drawn text.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="19ce0-1838">所绘制文本的左上角的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1838">The x-coordinate of the upper-left corner of the drawn text.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="19ce0-1839">所绘制文本的左上角的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1839">The y-coordinate of the upper-left corner of the drawn text.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="19ce0-1840">
            <see cref="T:System.Drawing.StringFormat" />，它指定应用于所绘制文本的格式化特性（如行距和对齐方式）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1840">
              <see cref="T:System.Drawing.StringFormat" /> that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1841">使用指定 <see cref="T:System.Drawing.StringFormat" /> 的格式化特性，用指定的 <see cref="T:System.Drawing.Brush" /> 和 <see cref="T:System.Drawing.Font" /> 对象在指定的位置绘制指定的文本字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1841">Draws the specified text string at the specified location with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects using the formatting attributes of the specified <see cref="T:System.Drawing.StringFormat" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19ce0-1842">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1842">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1843">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1843">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1844">创建要绘制的文本字符串。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1844">Creates a text string to draw.</span></span>  
  
-   <span data-ttu-id="19ce0-1845">定义为 Arial （16 磅） 的字体。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1845">Defines the font as Arial (16pt).</span></span>  
  
-   <span data-ttu-id="19ce0-1846">创建实心的黑色画笔绘制所使用。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1846">Creates a solid, black brush to draw with.</span></span>  
  
-   <span data-ttu-id="19ce0-1847">创建一个点，将在该处绘制文本的左上角的坐标。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1847">Creates the coordinates of a point for the upper-left corner at which to draw the text.</span></span>  
  
-   <span data-ttu-id="19ce0-1848">设置要垂直绘制的字符串的格式</span><span class="sxs-lookup"><span data-stu-id="19ce0-1848">Sets the format of the string to draw vertically</span></span>  
  
-   <span data-ttu-id="19ce0-1849">使用字体、 画笔、 目标点和格式向屏幕绘制字符串。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1849">Draws the string to the screen using the font, brush, destination point, and format.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#89](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#89)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#89](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#89)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#89](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#89)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-1850">
            <paramref name="brush" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1850">
              <paramref name="brush" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-1851">- 或 -  <paramref name="s" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1851">-or-  <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)" />
      </Docs>
    </Member>
    <Member MemberName="EndContainer">
      <MemberSignature Language="C#" Value="public void EndContainer (System.Drawing.Drawing2D.GraphicsContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndContainer(class System.Drawing.Drawing2D.GraphicsContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndContainer (container As GraphicsContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndContainer(System::Drawing::Drawing2D::GraphicsContainer ^ container);" />
      <MemberSignature Language="F#" Value="member this.EndContainer : System.Drawing.Drawing2D.GraphicsContainer -&gt; unit" Usage="graphics.EndContainer container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Drawing.Drawing2D.GraphicsContainer" />
      </Parameters>
      <Docs>
        <param name="container">
          <span data-ttu-id="19ce0-1852">
            <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" />，它表示此方法还原的容器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1852">
              <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" /> that represents the container this method restores.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1853">关闭当前图形容器，并将此 <see cref="T:System.Drawing.Graphics" /> 的状态还原到通过调用 <see cref="M:System.Drawing.Graphics.BeginContainer" /> 方法保存的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1853">Closes the current graphics container and restores the state of this <see cref="T:System.Drawing.Graphics" /> to the state saved by a call to the <see cref="M:System.Drawing.Graphics.BeginContainer" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1854">使用此方法与<xref:System.Drawing.Graphics.BeginContainer%2A>方法来创建嵌套的 graphics 容器。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1854">Use this method with the <xref:System.Drawing.Graphics.BeginContainer%2A> method to create nested graphics containers.</span></span> <span data-ttu-id="19ce0-1855">图形容器保留图形状态，例如转换、 剪辑区域和呈现属性。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1855">Graphics containers retain graphics state, such as transformation, clipping region, and rendering properties.</span></span>  
  
 <span data-ttu-id="19ce0-1856">当调用<xref:System.Drawing.Graphics.BeginContainer%2A>方法<xref:System.Drawing.Graphics>，保存的状态信息块<xref:System.Drawing.Graphics>放置在堆栈上。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1856">When you call the <xref:System.Drawing.Graphics.BeginContainer%2A> method of a <xref:System.Drawing.Graphics>, an information block that holds the state of the <xref:System.Drawing.Graphics> is put on a stack.</span></span> <span data-ttu-id="19ce0-1857"><xref:System.Drawing.Graphics.BeginContainer%2A>方法返回<xref:System.Drawing.Drawing2D.GraphicsContainer>标识该信息块。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1857">The <xref:System.Drawing.Graphics.BeginContainer%2A> method returns a <xref:System.Drawing.Drawing2D.GraphicsContainer> that identifies that information block.</span></span> <span data-ttu-id="19ce0-1858">当你标识对象传递给<xref:System.Drawing.Graphics.EndContainer%2A>方法，该信息块从堆栈中移除，并用于还原<xref:System.Drawing.Graphics>到它所处的时间中的状态<xref:System.Drawing.Graphics.BeginContainer%2A>方法调用。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1858">When you pass the identifying object to the <xref:System.Drawing.Graphics.EndContainer%2A> method, the information block is removed from the stack and is used to restore the <xref:System.Drawing.Graphics> to the state it was in at the time of the <xref:System.Drawing.Graphics.BeginContainer%2A> method call.</span></span>  
  
 <span data-ttu-id="19ce0-1859">可以嵌套容器;也就是说，可以调用<xref:System.Drawing.Graphics.BeginContainer%2A>方法调用之前多次<xref:System.Drawing.Graphics.EndContainer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1859">Containers can be nested; that is, you can call the <xref:System.Drawing.Graphics.BeginContainer%2A> method several times before you call the <xref:System.Drawing.Graphics.EndContainer%2A> method.</span></span> <span data-ttu-id="19ce0-1860">每次调用<xref:System.Drawing.Graphics.BeginContainer%2A>方法，信息块放在堆栈，并且您收到<xref:System.Drawing.Drawing2D.GraphicsContainer>信息块。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1860">Each time you call the <xref:System.Drawing.Graphics.BeginContainer%2A> method, an information block is put on the stack, and you receive a <xref:System.Drawing.Drawing2D.GraphicsContainer> for the information block.</span></span> <span data-ttu-id="19ce0-1861">传递时，这些对象附加到之一<xref:System.Drawing.Graphics.EndContainer%2A>方法，<xref:System.Drawing.Graphics>返回到它所处的时间中的状态<xref:System.Drawing.Graphics.BeginContainer%2A>方法调用返回了该特定<xref:System.Drawing.Drawing2D.GraphicsContainer>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1861">When you pass one of those objects to the <xref:System.Drawing.Graphics.EndContainer%2A> method, the <xref:System.Drawing.Graphics> is returned to the state it was in at the time of the <xref:System.Drawing.Graphics.BeginContainer%2A> method call that returned that particular <xref:System.Drawing.Drawing2D.GraphicsContainer>.</span></span> <span data-ttu-id="19ce0-1862">信息块将位于堆栈上的<xref:System.Drawing.Graphics.BeginContainer%2A>从堆栈中，删除方法调用和所有信息块后，该堆栈上都放置<xref:System.Drawing.Graphics.BeginContainer%2A>方法调用也将被删除。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1862">The information block placed on the stack by that <xref:System.Drawing.Graphics.BeginContainer%2A> method call is removed from the stack, and all information blocks placed on that stack after that <xref:System.Drawing.Graphics.BeginContainer%2A> method call are also removed.</span></span>  
  
 <span data-ttu-id="19ce0-1863">调用<xref:System.Drawing.Graphics.Save%2A>方法相同为对调用堆栈上的位置信息块<xref:System.Drawing.Graphics.BeginContainer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1863">Calls to the <xref:System.Drawing.Graphics.Save%2A> method place information blocks on the same stack as calls to the <xref:System.Drawing.Graphics.BeginContainer%2A> method.</span></span> <span data-ttu-id="19ce0-1864">就像<xref:System.Drawing.Graphics.EndContainer%2A>方法调用配合<xref:System.Drawing.Graphics.BeginContainer%2A>方法调用<xref:System.Drawing.Graphics.Restore%2A>方法调用配合<xref:System.Drawing.Graphics.Save%2A>方法调用。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1864">Just as an <xref:System.Drawing.Graphics.EndContainer%2A> method call is paired with a <xref:System.Drawing.Graphics.BeginContainer%2A> method call, a <xref:System.Drawing.Graphics.Restore%2A> method call is paired with a <xref:System.Drawing.Graphics.Save%2A> method call.</span></span>  
  
 <span data-ttu-id="19ce0-1865">当调用<xref:System.Drawing.Graphics.EndContainer%2A>方法，在堆栈上放置的所有信息块 (通过<xref:System.Drawing.Graphics.Save%2A>方法或通过<xref:System.Drawing.Graphics.BeginContainer%2A>方法) 在相应调用<xref:System.Drawing.Graphics.BeginContainer%2A>从堆栈中移除方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1865">When you call the <xref:System.Drawing.Graphics.EndContainer%2A> method, all information blocks placed on the stack (by the <xref:System.Drawing.Graphics.Save%2A> method or by the <xref:System.Drawing.Graphics.BeginContainer%2A> method) after the corresponding call to the <xref:System.Drawing.Graphics.BeginContainer%2A> method are removed from the stack.</span></span> <span data-ttu-id="19ce0-1866">同样，当调用<xref:System.Drawing.Graphics.Restore%2A>方法，在堆栈上放置的所有信息块 (通过<xref:System.Drawing.Graphics.Save%2A>方法或通过<xref:System.Drawing.Graphics.BeginContainer%2A>方法) 在相应调用<xref:System.Drawing.Graphics.Save%2A>从堆栈中移除方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1866">Likewise, when you call the <xref:System.Drawing.Graphics.Restore%2A> method, all information blocks placed on the stack (by the <xref:System.Drawing.Graphics.Save%2A> method or by the <xref:System.Drawing.Graphics.BeginContainer%2A> method) after the corresponding call to the <xref:System.Drawing.Graphics.Save%2A> method are removed from the stack.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1867">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1867">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-1868">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-1868">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-1869">打开新的图形容器和保存旧的容器。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1869">Opens a new graphics container and saves the old container.</span></span>  
  
-   <span data-ttu-id="19ce0-1870">将容器中的通用坐标。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1870">Translates the world coordinates in the container.</span></span>  
  
-   <span data-ttu-id="19ce0-1871">在填充红色矩形 (转换的坐标) 新的容器。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1871">Fills a red rectangle in the (translated coordinates of the) new container.</span></span>  
  
-   <span data-ttu-id="19ce0-1872">关闭新的容器，并将还原保存的容器。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1872">Closes the new container and restores the saved container.</span></span>  
  
-   <span data-ttu-id="19ce0-1873">填充的绿色矩形 （未转换的坐标中） 的已保存的容器。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1873">Fills a green rectangle (to the untranslated coordinates) of the saved container.</span></span>  
  
 <span data-ttu-id="19ce0-1874">结果是覆盖相同大小的红色矩形之上一个绿色矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1874">The result is a green rectangle that overlies a red rectangle of the same size.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#90](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#90)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#90](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#90)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#90](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#90)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateMetafile">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-1875">将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的点处显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1875">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Point destPoint, class System.Drawing.Graphics/EnumerateMetafileProc callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::Point destPoint, System::Drawing::Graphics::EnumerateMetafileProc ^ callback);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Point * System.Drawing.Graphics.EnumerateMetafileProc -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoint, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoint" Type="System.Drawing.Point" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
      </Parameters>
      <Docs>
        <param name="metafile">
          <span data-ttu-id="19ce0-1876">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1876">
              <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span>
          </span>
        </param>
        <param name="destPoint">
          <span data-ttu-id="19ce0-1877">
            <see cref="T:System.Drawing.Point" /> 结构，它指定所绘制图元文件的左上角的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1877">
              <see cref="T:System.Drawing.Point" /> structure that specifies the location of the upper-left corner of the drawn metafile.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-1878">
            <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1878">
              <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1879">将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的点处显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1879">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1880">此方法枚举指定的图元文件中包含的记录。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1880">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="19ce0-1881">每个记录分别发送到回调方法，指定`callback`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1881">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="19ce0-1882">通常情况下，该回调方法调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>到"播放"，或绘图，记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1882">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="19ce0-1883">如果调用的回调方法<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>，它必须这样做调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>方法特定的<xref:System.Drawing.Imaging.Metafile>正在枚举。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1883">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1884">下面的代码示例创建具有的窗体<xref:System.Drawing.Imaging.Metafile>作为其私有成员之一。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1884">The following code example creates a form that has a <xref:System.Drawing.Imaging.Metafile> as one of its private members.</span></span> <span data-ttu-id="19ce0-1885"><xref:System.Windows.Forms.Control.OnPaint%2A>方法调用<xref:System.Drawing.Graphics.EnumerateMetafile%2A>，从而调用窗体的`MetafileCallback`图元文件中每个记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1885">The <xref:System.Windows.Forms.Control.OnPaint%2A> method calls <xref:System.Drawing.Graphics.EnumerateMetafile%2A>, which calls the form's `MetafileCallback` method for each record in the metafile.</span></span> <span data-ttu-id="19ce0-1886">`MetafileCallback` 方法调用 <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1886">The `MetafileCallback` method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method.</span></span> <span data-ttu-id="19ce0-1887">请注意，`MetafileCallback`方法接收记录数据作为<xref:System.IntPtr>，但<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>方法要求以是字节数组记录数据。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1887">Notice that the `MetafileCallback` method receives the record data as an <xref:System.IntPtr>, but the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method expects the record data to be a byte array.</span></span> <span data-ttu-id="19ce0-1888">调用<xref:System.Runtime.InteropServices.Marshal.Copy%2A>将记录数据复制到的字节数组，以便它可以传递给<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1888">The call to <xref:System.Runtime.InteropServices.Marshal.Copy%2A> copies the record data to a byte array so that it can be passed to <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>.</span></span>  
  
 [!code-csharp[System.Drawing.Graphics.EnumerateMetafile#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Graphics.EnumerateMetafile/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Graphics.EnumerateMetafile#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Graphics.EnumerateMetafile/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Point[] destPoints, class System.Drawing.Graphics/EnumerateMetafileProc callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, cli::array &lt;System::Drawing::Point&gt; ^ destPoints, System::Drawing::Graphics::EnumerateMetafileProc ^ callback);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Point[] * System.Drawing.Graphics.EnumerateMetafileProc -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoints, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoints" Type="System.Drawing.Point[]" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
      </Parameters>
      <Docs>
        <param name="metafile">
          <span data-ttu-id="19ce0-1889">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1889">
              <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span>
          </span>
        </param>
        <param name="destPoints">
          <span data-ttu-id="19ce0-1890">由三个 <see cref="T:System.Drawing.Point" /> 结构组成的数组，这三个结构定义一个用来确定所绘制图元文件的大小和位置的平行四边形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1890">Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-1891">
            <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1891">
              <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1892">将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的平行四边形中显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1892">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1893">此方法枚举指定的图元文件中包含的记录。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1893">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="19ce0-1894">每个记录分别发送到回调方法，指定`callback`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1894">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="19ce0-1895">通常情况下，该回调方法调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>到"播放"，或绘图，记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1895">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="19ce0-1896">如果调用的回调方法<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>，它必须这样做调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>方法特定的<xref:System.Drawing.Imaging.Metafile>正在枚举。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1896">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1897">有关代码示例，请参阅 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1897">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.PointF destPoint, class System.Drawing.Graphics/EnumerateMetafileProc callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::PointF destPoint, System::Drawing::Graphics::EnumerateMetafileProc ^ callback);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.PointF * System.Drawing.Graphics.EnumerateMetafileProc -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoint, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoint" Type="System.Drawing.PointF" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
      </Parameters>
      <Docs>
        <param name="metafile">
          <span data-ttu-id="19ce0-1898">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1898">
              <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span>
          </span>
        </param>
        <param name="destPoint">
          <span data-ttu-id="19ce0-1899">
            <see cref="T:System.Drawing.PointF" /> 结构，它指定所绘制图元文件的左上角的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1899">
              <see cref="T:System.Drawing.PointF" /> structure that specifies the location of the upper-left corner of the drawn metafile.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-1900">
            <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1900">
              <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1901">将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的点处显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1901">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1902">此方法枚举指定的图元文件中包含的记录。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1902">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="19ce0-1903">每个记录分别发送到回调方法，指定`callback`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1903">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="19ce0-1904">通常情况下，该回调方法调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>到"播放"，或绘图，记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1904">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="19ce0-1905">如果调用的回调方法<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>，它必须这样做调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>方法特定的<xref:System.Drawing.Imaging.Metafile>正在枚举。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1905">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1906">有关代码示例，请参阅 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1906">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.PointF[] destPoints, class System.Drawing.Graphics/EnumerateMetafileProc callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::Graphics::EnumerateMetafileProc ^ callback);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.PointF[] * System.Drawing.Graphics.EnumerateMetafileProc -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoints, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
      </Parameters>
      <Docs>
        <param name="metafile">
          <span data-ttu-id="19ce0-1907">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1907">
              <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span>
          </span>
        </param>
        <param name="destPoints">
          <span data-ttu-id="19ce0-1908">由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个用来确定所绘制图元文件的大小和位置的平行四边形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1908">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-1909">
            <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1909">
              <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1910">将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的平行四边形中显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1910">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1911">此方法枚举指定的图元文件中包含的记录。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1911">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="19ce0-1912">每个记录分别发送到回调方法，指定`callback`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1912">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="19ce0-1913">通常情况下，该回调方法调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>到"播放"，或绘图，记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1913">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="19ce0-1914">如果调用的回调方法<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>，它必须这样做调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>方法特定的<xref:System.Drawing.Imaging.Metafile>正在枚举。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1914">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="19ce0-1915">`destPoints`参数指定的平行四边形的三个点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1915">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="19ce0-1916">这三种<xref:System.Drawing.PointF>结构表示平行四边形的左上角、 右上角和左下角。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1916">The three <xref:System.Drawing.PointF> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="19ce0-1917">第四个点推断出以形成一个平行四边形的前三个。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1917">The fourth point is extrapolated from the first three to form a parallelogram.</span></span> <span data-ttu-id="19ce0-1918">缩放和剪切以适合的平行四边形绘制图元文件。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1918">The drawn metafile is scaled and sheared to fit the parallelogram.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1919">有关代码示例，请参阅 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1919">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Graphics.EnumerateMetafileProc callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Rectangle destRect, class System.Drawing.Graphics/EnumerateMetafileProc callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::Rectangle destRect, System::Drawing::Graphics::EnumerateMetafileProc ^ callback);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Rectangle * System.Drawing.Graphics.EnumerateMetafileProc -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destRect, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
      </Parameters>
      <Docs>
        <param name="metafile">
          <span data-ttu-id="19ce0-1920">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1920">
              <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span>
          </span>
        </param>
        <param name="destRect">
          <span data-ttu-id="19ce0-1921">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图元文件的位置和大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1921">
              <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn metafile.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-1922">
            <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1922">
              <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1923">将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的矩形中显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1923">Sends the records of the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1924">此方法枚举指定的图元文件中包含的记录。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1924">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="19ce0-1925">每个记录分别发送到回调方法，指定`callback`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1925">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="19ce0-1926">通常情况下，该回调方法调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>到"播放"，或绘图，记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1926">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="19ce0-1927">如果调用的回调方法<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>，它必须这样做调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>方法特定的<xref:System.Drawing.Imaging.Metafile>正在枚举。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1927">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1928">有关代码示例，请参阅 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1928">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.Graphics.EnumerateMetafileProc callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.RectangleF destRect, class System.Drawing.Graphics/EnumerateMetafileProc callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::RectangleF destRect, System::Drawing::Graphics::EnumerateMetafileProc ^ callback);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.RectangleF * System.Drawing.Graphics.EnumerateMetafileProc -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destRect, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
      </Parameters>
      <Docs>
        <param name="metafile">
          <span data-ttu-id="19ce0-1929">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1929">
              <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span>
          </span>
        </param>
        <param name="destRect">
          <span data-ttu-id="19ce0-1930">
            <see cref="T:System.Drawing.RectangleF" /> 结构，它指定所绘制图元文件的位置和大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1930">
              <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn metafile.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-1931">
            <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1931">
              <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1932">将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的矩形中显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1932">Sends the records of the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1933">此方法枚举指定的图元文件中包含的记录。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1933">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="19ce0-1934">每个记录分别发送到回调方法，指定`callback`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1934">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="19ce0-1935">通常情况下，该回调方法调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>到"播放"，或绘图，记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1935">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="19ce0-1936">如果调用的回调方法<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>，它必须这样做调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>方法特定的<xref:System.Drawing.Imaging.Metafile>正在枚举。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1936">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1937">有关代码示例，请参阅 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1937">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Point destPoint, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::Point destPoint, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Point * System.Drawing.Graphics.EnumerateMetafileProc * nativeint -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoint, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoint" Type="System.Drawing.Point" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="metafile">
          <span data-ttu-id="19ce0-1938">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1938">
              <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span>
          </span>
        </param>
        <param name="destPoint">
          <span data-ttu-id="19ce0-1939">
            <see cref="T:System.Drawing.Point" /> 结构，它指定所绘制图元文件的左上角的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1939">
              <see cref="T:System.Drawing.Point" /> structure that specifies the location of the upper-left corner of the drawn metafile.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-1940">
            <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1940">
              <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span>
          </span>
        </param>
        <param name="callbackData">
          <span data-ttu-id="19ce0-1941">必需但被忽略的内部指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1941">Internal pointer that is required, but ignored.</span>
          </span>
          <span data-ttu-id="19ce0-1942">可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1942">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1943">将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的点处显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1943">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1944">此方法枚举指定的图元文件中包含的记录。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1944">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="19ce0-1945">每个记录分别发送到回调方法，指定`callback`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1945">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="19ce0-1946">通常情况下，该回调方法调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>到"播放"，或绘图，记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1946">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="19ce0-1947">如果调用的回调方法<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>，它必须这样做调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>方法特定的<xref:System.Drawing.Imaging.Metafile>正在枚举。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1947">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1948">有关代码示例，请参阅 <xref:System.Drawing.Graphics.EnumerateMetafile%2A>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1948">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Point[] destPoints, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, cli::array &lt;System::Drawing::Point&gt; ^ destPoints, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Point[] * System.Drawing.Graphics.EnumerateMetafileProc * nativeint -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoints, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoints" Type="System.Drawing.Point[]" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="metafile">
          <span data-ttu-id="19ce0-1949">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1949">
              <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span>
          </span>
        </param>
        <param name="destPoints">
          <span data-ttu-id="19ce0-1950">由三个 <see cref="T:System.Drawing.Point" /> 结构组成的数组，这三个结构定义一个用来确定所绘制图元文件的大小和位置的平行四边形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1950">Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-1951">
            <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1951">
              <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span>
          </span>
        </param>
        <param name="callbackData">
          <span data-ttu-id="19ce0-1952">必需但被忽略的内部指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1952">Internal pointer that is required, but ignored.</span>
          </span>
          <span data-ttu-id="19ce0-1953">可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1953">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1954">将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的平行四边形中显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1954">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1955">此方法枚举指定的图元文件中包含的记录。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1955">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="19ce0-1956">每个记录分别发送到回调方法，指定`callback`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1956">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="19ce0-1957">通常情况下，该回调方法调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>到"播放"，或绘图，记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1957">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="19ce0-1958">如果调用的回调方法<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>，它必须这样做调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>方法特定的<xref:System.Drawing.Imaging.Metafile>正在枚举。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1958">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1959">有关代码示例，请参阅 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1959">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.PointF destPoint, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::PointF destPoint, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.PointF * System.Drawing.Graphics.EnumerateMetafileProc * nativeint -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoint, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoint" Type="System.Drawing.PointF" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="metafile">
          <span data-ttu-id="19ce0-1960">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1960">
              <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span>
          </span>
        </param>
        <param name="destPoint">
          <span data-ttu-id="19ce0-1961">
            <see cref="T:System.Drawing.PointF" /> 结构，它指定所绘制图元文件的左上角的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1961">
              <see cref="T:System.Drawing.PointF" /> structure that specifies the location of the upper-left corner of the drawn metafile.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-1962">
            <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1962">
              <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span>
          </span>
        </param>
        <param name="callbackData">
          <span data-ttu-id="19ce0-1963">必需但被忽略的内部指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1963">Internal pointer that is required, but ignored.</span>
          </span>
          <span data-ttu-id="19ce0-1964">可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1964">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1965">将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的点处显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1965">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1966">此方法枚举指定的图元文件中包含的记录。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1966">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="19ce0-1967">每个记录分别发送到回调方法，指定`callback`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1967">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="19ce0-1968">通常情况下，该回调方法调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>到"播放"，或绘图，记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1968">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="19ce0-1969">如果调用的回调方法<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>，它必须这样做调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>方法特定的<xref:System.Drawing.Imaging.Metafile>正在枚举。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1969">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1970">有关代码示例，请参阅 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1970">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.PointF[] destPoints, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.PointF[] * System.Drawing.Graphics.EnumerateMetafileProc * nativeint -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoints, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="metafile">
          <span data-ttu-id="19ce0-1971">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1971">
              <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span>
          </span>
        </param>
        <param name="destPoints">
          <span data-ttu-id="19ce0-1972">由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个用来确定所绘制图元文件的大小和位置的平行四边形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1972">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-1973">
            <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1973">
              <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span>
          </span>
        </param>
        <param name="callbackData">
          <span data-ttu-id="19ce0-1974">必需但被忽略的内部指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1974">Internal pointer that is required, but ignored.</span>
          </span>
          <span data-ttu-id="19ce0-1975">可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1975">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1976">将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的平行四边形中显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1976">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1977">此方法枚举指定的图元文件中包含的记录。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1977">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="19ce0-1978">每个记录分别发送到回调方法，指定`callback`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1978">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="19ce0-1979">通常情况下，该回调方法调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>到"播放"，或绘图，记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1979">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="19ce0-1980">如果调用的回调方法<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>，它必须这样做调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>方法特定的<xref:System.Drawing.Imaging.Metafile>正在枚举。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1980">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="19ce0-1981">`destPoints`参数指定的平行四边形的三个点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1981">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="19ce0-1982">这三种<xref:System.Drawing.PointF>结构表示平行四边形的左上角、 右上角和左下角。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1982">The three <xref:System.Drawing.PointF> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="19ce0-1983">第四个点推断出以形成一个平行四边形的前三个。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1983">The fourth point is extrapolated from the first three to form a parallelogram.</span></span> <span data-ttu-id="19ce0-1984">缩放和剪切以适合的平行四边形绘制图元文件。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1984">The drawn metafile is scaled and sheared to fit the parallelogram.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1985">有关代码示例，请参阅 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1985">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Rectangle destRect, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::Rectangle destRect, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Rectangle * System.Drawing.Graphics.EnumerateMetafileProc * nativeint -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destRect, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="metafile">
          <span data-ttu-id="19ce0-1986">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1986">
              <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span>
          </span>
        </param>
        <param name="destRect">
          <span data-ttu-id="19ce0-1987">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图元文件的位置和大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1987">
              <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn metafile.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-1988">
            <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1988">
              <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span>
          </span>
        </param>
        <param name="callbackData">
          <span data-ttu-id="19ce0-1989">必需但被忽略的内部指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1989">Internal pointer that is required, but ignored.</span>
          </span>
          <span data-ttu-id="19ce0-1990">可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1990">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-1991">将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的矩形中显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1991">Sends the records of the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-1992">此方法枚举指定的图元文件中包含的记录。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1992">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="19ce0-1993">每个记录分别发送到回调方法，指定`callback`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1993">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="19ce0-1994">通常情况下，该回调方法调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>到"播放"，或绘图，记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1994">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="19ce0-1995">如果调用的回调方法<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>，它必须这样做调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>方法特定的<xref:System.Drawing.Imaging.Metafile>正在枚举。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1995">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-1996">有关代码示例，请参阅 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-1996">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.RectangleF destRect, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::RectangleF destRect, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.RectangleF * System.Drawing.Graphics.EnumerateMetafileProc * nativeint -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destRect, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="metafile">
          <span data-ttu-id="19ce0-1997">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1997">
              <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span>
          </span>
        </param>
        <param name="destRect">
          <span data-ttu-id="19ce0-1998">
            <see cref="T:System.Drawing.RectangleF" /> 结构，它指定所绘制图元文件的位置和大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1998">
              <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn metafile.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-1999">
            <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-1999">
              <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span>
          </span>
        </param>
        <param name="callbackData">
          <span data-ttu-id="19ce0-2000">必需但被忽略的内部指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2000">Internal pointer that is required, but ignored.</span>
          </span>
          <span data-ttu-id="19ce0-2001">可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2001">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2002">将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法以在指定的矩形中显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2002">Sends the records of the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2003">此方法枚举指定的图元文件中包含的记录。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2003">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="19ce0-2004">每个记录分别发送到回调方法，指定`callback`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2004">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="19ce0-2005">通常情况下，该回调方法调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>到"播放"，或绘图，记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2005">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="19ce0-2006">如果调用的回调方法<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>，它必须这样做调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>方法特定的<xref:System.Drawing.Imaging.Metafile>正在枚举。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2006">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2007">有关代码示例，请参阅 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2007">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Point destPoint, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::Point destPoint, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Point * System.Drawing.Graphics.EnumerateMetafileProc * nativeint * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoint, callback, callbackData, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoint" Type="System.Drawing.Point" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="metafile">
          <span data-ttu-id="19ce0-2008">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2008">
              <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span>
          </span>
        </param>
        <param name="destPoint">
          <span data-ttu-id="19ce0-2009">
            <see cref="T:System.Drawing.Point" /> 结构，它指定所绘制图元文件的左上角的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2009">
              <see cref="T:System.Drawing.Point" /> structure that specifies the location of the upper-left corner of the drawn metafile.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-2010">
            <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2010">
              <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span>
          </span>
        </param>
        <param name="callbackData">
          <span data-ttu-id="19ce0-2011">必需但被忽略的内部指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2011">Internal pointer that is required, but ignored.</span>
          </span>
          <span data-ttu-id="19ce0-2012">可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2012">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span>
          </span>
        </param>
        <param name="imageAttr">
          <span data-ttu-id="19ce0-2013">
            <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定所绘制图像的图像特性信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2013">
              <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2014">将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法，以在指定的点处用指定的图像特性显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2014">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point using specified image attributes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2015">此方法枚举指定的图元文件中包含的记录。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2015">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="19ce0-2016">每个记录分别发送到回调方法，指定`callback`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2016">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="19ce0-2017">通常情况下，该回调方法调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>到"播放"，或绘图，记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2017">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="19ce0-2018">如果调用的回调方法<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>，它必须这样做调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>方法特定的<xref:System.Drawing.Imaging.Metafile>正在枚举。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2018">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2019">有关代码示例，请参阅 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2019">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Point destPoint, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Graphics/EnumerateMetafileProc callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::Point destPoint, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Point * System.Drawing.Rectangle * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoint, srcRect, srcUnit, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoint" Type="System.Drawing.Point" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
      </Parameters>
      <Docs>
        <param name="metafile">
          <span data-ttu-id="19ce0-2020">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2020">
              <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span>
          </span>
        </param>
        <param name="destPoint">
          <span data-ttu-id="19ce0-2021">
            <see cref="T:System.Drawing.Point" /> 结构，它指定所绘制图元文件的左上角的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2021">
              <see cref="T:System.Drawing.Point" /> structure that specifies the location of the upper-left corner of the drawn metafile.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="19ce0-2022">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2022">
              <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span>
          </span>
        </param>
        <param name="srcUnit">
          <span data-ttu-id="19ce0-2023">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <c>srcRect</c> 参数指定的矩形所包含的部分图元文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2023">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <c>srcRect</c> parameter contains.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-2024">
            <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2024">
              <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2025">将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法以在指定的点处显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2025">Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2026">此方法枚举指定的图元文件中包含的记录。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2026">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="19ce0-2027">每个记录分别发送到回调方法，指定`callback`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2027">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="19ce0-2028">通常情况下，该回调方法调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>到"播放"，或绘图，记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2028">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="19ce0-2029">如果调用的回调方法<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>，它必须这样做调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>方法特定的<xref:System.Drawing.Imaging.Metafile>正在枚举。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2029">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2030">有关代码示例，请参阅 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2030">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Point[] destPoints, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, cli::array &lt;System::Drawing::Point&gt; ^ destPoints, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Point[] * System.Drawing.Graphics.EnumerateMetafileProc * nativeint * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoints, callback, callbackData, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoints" Type="System.Drawing.Point[]" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="metafile">
          <span data-ttu-id="19ce0-2031">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2031">
              <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span>
          </span>
        </param>
        <param name="destPoints">
          <span data-ttu-id="19ce0-2032">由三个 <see cref="T:System.Drawing.Point" /> 结构组成的数组，这三个结构定义一个用来确定所绘制图元文件的大小和位置的平行四边形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2032">Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-2033">
            <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2033">
              <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span>
          </span>
        </param>
        <param name="callbackData">
          <span data-ttu-id="19ce0-2034">必需但被忽略的内部指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2034">Internal pointer that is required, but ignored.</span>
          </span>
          <span data-ttu-id="19ce0-2035">可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2035">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span>
          </span>
        </param>
        <param name="imageAttr">
          <span data-ttu-id="19ce0-2036">
            <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定所绘制图像的图像特性信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2036">
              <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2037">将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法，以在指定的平行四边形中用指定的图像特性显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2037">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram using specified image attributes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2038">此方法枚举指定的图元文件中包含的记录。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2038">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="19ce0-2039">每个记录分别发送到回调方法，指定`callback`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2039">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="19ce0-2040">通常情况下，该回调方法调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>到"播放"，或绘图，记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2040">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="19ce0-2041">如果调用的回调方法<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>，它必须这样做调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>方法特定的<xref:System.Drawing.Imaging.Metafile>正在枚举。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2041">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="19ce0-2042">`destPoints`参数指定的平行四边形的三个点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2042">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="19ce0-2043">这三种<xref:System.Drawing.Point>结构表示平行四边形的左上角、 右上角和左下角。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2043">The three <xref:System.Drawing.Point> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="19ce0-2044">第四个点推断出以形成一个平行四边形的前三个。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2044">The fourth point is extrapolated from the first three to form a parallelogram.</span></span> <span data-ttu-id="19ce0-2045">缩放和剪切以适合的平行四边形绘制图元文件。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2045">The drawn metafile is scaled and sheared to fit the parallelogram.</span></span>  
  
 <span data-ttu-id="19ce0-2046">指定的图像特性`imageAttr`参数替换指定何时写入图元文件。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2046">The image attributes specified by the `imageAttr` parameter replace those specified when the metafile was written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2047">有关代码示例，请参阅 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2047">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Point[] destPoints, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Graphics/EnumerateMetafileProc callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, cli::array &lt;System::Drawing::Point&gt; ^ destPoints, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Point[] * System.Drawing.Rectangle * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoints, srcRect, srcUnit, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoints" Type="System.Drawing.Point[]" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
      </Parameters>
      <Docs>
        <param name="metafile">
          <span data-ttu-id="19ce0-2048">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2048">
              <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span>
          </span>
        </param>
        <param name="destPoints">
          <span data-ttu-id="19ce0-2049">由三个 <see cref="T:System.Drawing.Point" /> 结构组成的数组，这三个结构定义一个用来确定所绘制图元文件的大小和位置的平行四边形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2049">Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="19ce0-2050">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2050">
              <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span>
          </span>
        </param>
        <param name="srcUnit">
          <span data-ttu-id="19ce0-2051">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <c>srcRect</c> 参数指定的矩形所包含的部分图元文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2051">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <c>srcRect</c> parameter contains.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-2052">
            <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2052">
              <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2053">将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法以在指定的平行四边形中显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2053">Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2054">此方法枚举指定的图元文件中包含的记录。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2054">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="19ce0-2055">每个记录分别发送到回调方法，指定`callback`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2055">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="19ce0-2056">通常情况下，该回调方法调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>到"播放"，或绘图，记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2056">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="19ce0-2057">如果调用的回调方法<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>，它必须这样做调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>方法特定的<xref:System.Drawing.Imaging.Metafile>正在枚举。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2057">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="19ce0-2058">`destPoints`参数指定的平行四边形的三个点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2058">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="19ce0-2059">这三种<xref:System.Drawing.Point>结构表示平行四边形的左上角、 右上角和左下角。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2059">The three <xref:System.Drawing.Point> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="19ce0-2060">第四个点推断出以形成一个平行四边形的前三个。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2060">The fourth point is extrapolated from the first three to form a parallelogram.</span></span> <span data-ttu-id="19ce0-2061">缩放和剪切以适合的平行四边形绘制图元文件。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2061">The drawn metafile is scaled and sheared to fit the parallelogram.</span></span>  
  
 <span data-ttu-id="19ce0-2062">任何绘制发生在由指定的矩形外部`srcRect`参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2062">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2063">有关代码示例，请参阅 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2063">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.PointF destPoint, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::PointF destPoint, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.PointF * System.Drawing.Graphics.EnumerateMetafileProc * nativeint * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoint, callback, callbackData, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoint" Type="System.Drawing.PointF" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="metafile">
          <span data-ttu-id="19ce0-2064">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2064">
              <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span>
          </span>
        </param>
        <param name="destPoint">
          <span data-ttu-id="19ce0-2065">
            <see cref="T:System.Drawing.PointF" /> 结构，它指定所绘制图元文件的左上角的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2065">
              <see cref="T:System.Drawing.PointF" /> structure that specifies the location of the upper-left corner of the drawn metafile.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-2066">
            <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2066">
              <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span>
          </span>
        </param>
        <param name="callbackData">
          <span data-ttu-id="19ce0-2067">必需但被忽略的内部指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2067">Internal pointer that is required, but ignored.</span>
          </span>
          <span data-ttu-id="19ce0-2068">可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2068">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span>
          </span>
        </param>
        <param name="imageAttr">
          <span data-ttu-id="19ce0-2069">
            <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定所绘制图像的图像特性信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2069">
              <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2070">将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法，以在指定的点处用指定的图像特性显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2070">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point using specified image attributes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2071">此方法枚举指定的图元文件中包含的记录。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2071">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="19ce0-2072">每个记录分别发送到回调方法，指定`callback`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2072">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="19ce0-2073">通常情况下，该回调方法调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>到"播放"，或绘图，记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2073">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="19ce0-2074">如果调用的回调方法<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>，它必须通过调用特定的方法在执行<xref:System.Drawing.Imaging.Metafile>正在枚举。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2074">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="19ce0-2075">指定的图像特性`imageAttr`参数替换指定何时写入图元文件。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2075">The image attributes specified by the `imageAttr` parameter replace those specified when the metafile was written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2076">有关代码示例，请参阅 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2076">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.PointF destPoint, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Graphics/EnumerateMetafileProc callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::PointF destPoint, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.PointF * System.Drawing.RectangleF * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoint, srcRect, srcUnit, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoint" Type="System.Drawing.PointF" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
      </Parameters>
      <Docs>
        <param name="metafile">
          <span data-ttu-id="19ce0-2077">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2077">
              <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span>
          </span>
        </param>
        <param name="destPoint">
          <span data-ttu-id="19ce0-2078">
            <see cref="T:System.Drawing.PointF" /> 结构，它指定所绘制图元文件的左上角的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2078">
              <see cref="T:System.Drawing.PointF" /> structure that specifies the location of the upper-left corner of the drawn metafile.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="19ce0-2079">
            <see cref="T:System.Drawing.RectangleF" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2079">
              <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span>
          </span>
        </param>
        <param name="srcUnit">
          <span data-ttu-id="19ce0-2080">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <c>srcRect</c> 参数指定的矩形所包含的部分图元文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2080">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <c>srcRect</c> parameter contains.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-2081">
            <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2081">
              <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2082">将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法以在指定的点处显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2082">Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2083">此方法枚举指定的图元文件中包含的记录。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2083">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="19ce0-2084">每个记录分别发送到回调方法，指定`callback`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2084">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="19ce0-2085">通常情况下，该回调方法调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>到"播放"，或绘图，记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2085">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="19ce0-2086">如果调用的回调方法<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>，它必须这样做调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>方法特定的<xref:System.Drawing.Imaging.Metafile>正在枚举。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2086">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="19ce0-2087">任何绘制发生在由指定的矩形外部`srcRect`参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2087">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2088">有关代码示例，请参阅 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2088">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.PointF[] destPoints, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.PointF[] * System.Drawing.Graphics.EnumerateMetafileProc * nativeint * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoints, callback, callbackData, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="metafile">
          <span data-ttu-id="19ce0-2089">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2089">
              <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span>
          </span>
        </param>
        <param name="destPoints">
          <span data-ttu-id="19ce0-2090">由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个用来确定所绘制图元文件的大小和位置的平行四边形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2090">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-2091">
            <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2091">
              <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span>
          </span>
        </param>
        <param name="callbackData">
          <span data-ttu-id="19ce0-2092">必需但被忽略的内部指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2092">Internal pointer that is required, but ignored.</span>
          </span>
          <span data-ttu-id="19ce0-2093">可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2093">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span>
          </span>
        </param>
        <param name="imageAttr">
          <span data-ttu-id="19ce0-2094">
            <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定所绘制图像的图像特性信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2094">
              <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2095">将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法，以在指定的平行四边形中用指定的图像特性显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2095">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram using specified image attributes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2096">此方法枚举指定的图元文件中包含的记录。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2096">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="19ce0-2097">每个记录分别发送到回调方法，指定`callback`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2097">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="19ce0-2098">通常情况下，该回调方法调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>到"播放"，或绘图，记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2098">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="19ce0-2099">如果调用的回调方法<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>，它必须这样做调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>方法特定的<xref:System.Drawing.Imaging.Metafile>正在枚举。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2099">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="19ce0-2100">`destPoints`参数指定的平行四边形的三个点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2100">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="19ce0-2101">这三种<xref:System.Drawing.PointF>结构表示平行四边形的左上角、 右上角和左下角。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2101">The three <xref:System.Drawing.PointF> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="19ce0-2102">第四个点推断出以形成一个平行四边形的前三个。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2102">The fourth point is extrapolated from the first three to form a parallelogram.</span></span> <span data-ttu-id="19ce0-2103">缩放和剪切以适合的平行四边形绘制图元文件。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2103">The drawn metafile is scaled and sheared to fit the parallelogram.</span></span>  
  
 <span data-ttu-id="19ce0-2104">指定的图像特性`imageAttr`参数替换指定何时写入图元文件。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2104">The image attributes specified by the `imageAttr` parameter replace those specified when the metafile was written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2105">有关代码示例，请参阅 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2105">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Graphics/EnumerateMetafileProc callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoints, srcRect, srcUnit, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
      </Parameters>
      <Docs>
        <param name="metafile">
          <span data-ttu-id="19ce0-2106">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2106">
              <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span>
          </span>
        </param>
        <param name="destPoints">
          <span data-ttu-id="19ce0-2107">由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个用来确定所绘制图元文件的大小和位置的平行四边形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2107">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="19ce0-2108">
            <see cref="T:System.Drawing.RectangleF" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2108">
              <see cref="T:System.Drawing.RectangleF" /> structures that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span>
          </span>
        </param>
        <param name="srcUnit">
          <span data-ttu-id="19ce0-2109">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <c>srcRect</c> 参数指定的矩形所包含的部分图元文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2109">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <c>srcRect</c> parameter contains.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-2110">
            <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2110">
              <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2111">将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法以在指定的平行四边形中显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2111">Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2112">此方法枚举指定的图元文件中包含的记录。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2112">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="19ce0-2113">每个记录分别发送到回调方法，指定`callback`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2113">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="19ce0-2114">通常情况下，该回调方法调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>到"播放"，或绘图，记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2114">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="19ce0-2115">如果调用的回调方法<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>，它必须这样做调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>方法特定的<xref:System.Drawing.Imaging.Metafile>正在枚举。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2115">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="19ce0-2116">`destPoints`参数指定的平行四边形的三个点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2116">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="19ce0-2117">这三种<xref:System.Drawing.Point>结构表示平行四边形的左上角、 右上角和左下角。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2117">The three <xref:System.Drawing.Point> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="19ce0-2118">第四个点推断出以形成一个平行四边形的前三个。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2118">The fourth point is extrapolated from the first three to form a parallelogram.</span></span> <span data-ttu-id="19ce0-2119">缩放和剪切以适合的平行四边形绘制图元文件。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2119">The drawn metafile is scaled and sheared to fit the parallelogram.</span></span>  
  
 <span data-ttu-id="19ce0-2120">任何绘制发生在由指定的矩形外部`srcRect`参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2120">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2121">有关代码示例，请参阅 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2121">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Rectangle destRect, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::Rectangle destRect, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Rectangle * System.Drawing.Graphics.EnumerateMetafileProc * nativeint * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destRect, callback, callbackData, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="metafile">
          <span data-ttu-id="19ce0-2122">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2122">
              <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span>
          </span>
        </param>
        <param name="destRect">
          <span data-ttu-id="19ce0-2123">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图元文件的位置和大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2123">
              <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn metafile.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-2124">
            <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2124">
              <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span>
          </span>
        </param>
        <param name="callbackData">
          <span data-ttu-id="19ce0-2125">必需但被忽略的内部指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2125">Internal pointer that is required, but ignored.</span>
          </span>
          <span data-ttu-id="19ce0-2126">可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2126">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span>
          </span>
        </param>
        <param name="imageAttr">
          <span data-ttu-id="19ce0-2127">
            <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定所绘制图像的图像特性信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2127">
              <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2128">将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法，以在指定的矩形中用指定的图像特性显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2128">Sends the records of the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle using specified image attributes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2129">此方法枚举指定的图元文件中包含的记录。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2129">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="19ce0-2130">每个记录分别发送到回调方法，指定`callback`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2130">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="19ce0-2131">通常情况下，该回调方法调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>到"播放"，或绘图，记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2131">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="19ce0-2132">如果调用的回调方法<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>，它必须这样做调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>方法特定的<xref:System.Drawing.Imaging.Metafile>正在枚举。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2132">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="19ce0-2133">指定的图像特性`imageAttr`参数替换指定何时写入图元文件。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2133">The image attributes specified by the `imageAttr` parameter replace those specified when the metafile was written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2134">有关代码示例，请参阅 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2134">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Rectangle destRect, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Graphics/EnumerateMetafileProc callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::Rectangle destRect, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Rectangle * System.Drawing.Rectangle * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destRect, srcRect, srcUnit, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
      </Parameters>
      <Docs>
        <param name="metafile">
          <span data-ttu-id="19ce0-2135">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2135">
              <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span>
          </span>
        </param>
        <param name="destRect">
          <span data-ttu-id="19ce0-2136">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图元文件的位置和大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2136">
              <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn metafile.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="19ce0-2137">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2137">
              <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span>
          </span>
        </param>
        <param name="srcUnit">
          <span data-ttu-id="19ce0-2138">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <c>srcRect</c> 参数指定的矩形所包含的部分图元文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2138">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <c>srcRect</c> parameter contains.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-2139">
            <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2139">
              <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2140">将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法以在指定的矩形中显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2140">Sends the records of a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2141">此方法枚举指定的图元文件中包含的记录。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2141">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="19ce0-2142">每个记录分别发送到回调方法，指定`callback`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2142">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="19ce0-2143">通常情况下，该回调方法调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>到"播放"，或绘图，记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2143">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="19ce0-2144">如果调用的回调方法<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>，它必须这样做调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>方法特定的<xref:System.Drawing.Imaging.Metafile>正在枚举。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2144">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="19ce0-2145">任何绘制发生在由指定的矩形外部`srcRect`参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2145">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2146">有关代码示例，请参阅 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2146">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.RectangleF destRect, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::RectangleF destRect, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.RectangleF * System.Drawing.Graphics.EnumerateMetafileProc * nativeint * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destRect, callback, callbackData, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="metafile">
          <span data-ttu-id="19ce0-2147">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2147">
              <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span>
          </span>
        </param>
        <param name="destRect">
          <span data-ttu-id="19ce0-2148">
            <see cref="T:System.Drawing.RectangleF" /> 结构，它指定所绘制图元文件的位置和大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2148">
              <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn metafile.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-2149">
            <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2149">
              <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span>
          </span>
        </param>
        <param name="callbackData">
          <span data-ttu-id="19ce0-2150">必需但被忽略的内部指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2150">Internal pointer that is required, but ignored.</span>
          </span>
          <span data-ttu-id="19ce0-2151">可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2151">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span>
          </span>
        </param>
        <param name="imageAttr">
          <span data-ttu-id="19ce0-2152">
            <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定所绘制图像的图像特性信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2152">
              <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2153">将指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的记录逐个发送到回调方法，以在指定的矩形中用指定的图像特性显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2153">Sends the records of the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle using specified image attributes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2154">此方法枚举指定的图元文件中包含的记录。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2154">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="19ce0-2155">每个记录分别发送到回调方法，指定`callback`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2155">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="19ce0-2156">通常情况下，该回调方法调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>到"播放"，或绘图，记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2156">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="19ce0-2157">如果调用的回调方法<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>，它必须这样做调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>方法特定的<xref:System.Drawing.Imaging.Metafile>正在枚举。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2157">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="19ce0-2158">指定的图像特性`imageAttr`参数替换指定何时写入图元文件。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2158">The image attributes specified by the `imageAttr` parameter replace those specified when the metafile was written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2159">有关代码示例，请参阅 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2159">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.RectangleF destRect, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Graphics/EnumerateMetafileProc callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::RectangleF destRect, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.RectangleF * System.Drawing.RectangleF * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destRect, srcRect, srcUnit, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
      </Parameters>
      <Docs>
        <param name="metafile">
          <span data-ttu-id="19ce0-2160">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2160">
              <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span>
          </span>
        </param>
        <param name="destRect">
          <span data-ttu-id="19ce0-2161">
            <see cref="T:System.Drawing.RectangleF" /> 结构，它指定所绘制图元文件的位置和大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2161">
              <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn metafile.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="19ce0-2162">
            <see cref="T:System.Drawing.RectangleF" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2162">
              <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span>
          </span>
        </param>
        <param name="srcUnit">
          <span data-ttu-id="19ce0-2163">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <c>srcRect</c> 参数指定的矩形所包含的部分图元文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2163">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <c>srcRect</c> parameter contains.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-2164">
            <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2164">
              <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2165">将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法以在指定的矩形中显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2165">Sends the records of a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2166">此方法枚举指定的图元文件中包含的记录。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2166">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="19ce0-2167">每个记录分别发送到回调方法，指定`callback`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2167">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="19ce0-2168">通常情况下，该回调方法调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>到"播放"，或绘图，记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2168">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="19ce0-2169">如果调用的回调方法<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>，它必须这样做调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>方法特定的<xref:System.Drawing.Imaging.Metafile>正在枚举。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2169">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="19ce0-2170">任何绘制发生在由指定的矩形外部`srcRect`参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2170">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2171">有关代码示例，请参阅 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2171">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Point destPoint, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::Point destPoint, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Point * System.Drawing.Rectangle * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc * nativeint -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoint, srcRect, srcUnit, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoint" Type="System.Drawing.Point" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="metafile">
          <span data-ttu-id="19ce0-2172">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2172">
              <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span>
          </span>
        </param>
        <param name="destPoint">
          <span data-ttu-id="19ce0-2173">
            <see cref="T:System.Drawing.Point" /> 结构，它指定所绘制图元文件的左上角的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2173">
              <see cref="T:System.Drawing.Point" /> structure that specifies the location of the upper-left corner of the drawn metafile.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="19ce0-2174">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2174">
              <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span>
          </span>
        </param>
        <param name="srcUnit">
          <span data-ttu-id="19ce0-2175">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <c>srcRect</c> 参数指定的矩形所包含的部分图元文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2175">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <c>srcRect</c> parameter contains.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-2176">
            <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2176">
              <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span>
          </span>
        </param>
        <param name="callbackData">
          <span data-ttu-id="19ce0-2177">必需但被忽略的内部指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2177">Internal pointer that is required, but ignored.</span>
          </span>
          <span data-ttu-id="19ce0-2178">可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2178">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2179">将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法以在指定的点处显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2179">Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2180">此方法枚举指定的图元文件中包含的记录。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2180">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="19ce0-2181">每个记录分别发送到回调方法，指定`callback`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2181">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="19ce0-2182">通常情况下，该回调方法调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>到"播放"，或绘图，记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2182">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="19ce0-2183">如果调用的回调方法<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>，它必须这样做调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>方法特定的<xref:System.Drawing.Imaging.Metafile>正在枚举。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2183">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2184">有关代码示例，请参阅 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2184">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Point[] destPoints, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, cli::array &lt;System::Drawing::Point&gt; ^ destPoints, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Point[] * System.Drawing.Rectangle * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc * nativeint -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoints, srcRect, srcUnit, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoints" Type="System.Drawing.Point[]" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="metafile">
          <span data-ttu-id="19ce0-2185">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2185">
              <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span>
          </span>
        </param>
        <param name="destPoints">
          <span data-ttu-id="19ce0-2186">由三个 <see cref="T:System.Drawing.Point" /> 结构组成的数组，这三个结构定义一个用来确定所绘制图元文件的大小和位置的平行四边形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2186">Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="19ce0-2187">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2187">
              <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span>
          </span>
        </param>
        <param name="srcUnit">
          <span data-ttu-id="19ce0-2188">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <c>srcRect</c> 参数指定的矩形所包含的部分图元文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2188">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <c>srcRect</c> parameter contains.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-2189">
            <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2189">
              <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span>
          </span>
        </param>
        <param name="callbackData">
          <span data-ttu-id="19ce0-2190">必需但被忽略的内部指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2190">Internal pointer that is required, but ignored.</span>
          </span>
          <span data-ttu-id="19ce0-2191">可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2191">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2192">将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法以在指定的平行四边形中显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2192">Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2193">此方法枚举指定的图元文件中包含的记录。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2193">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="19ce0-2194">每个记录分别发送到回调方法，指定`callback`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2194">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="19ce0-2195">通常情况下，该回调方法调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>到"播放"，或绘图，记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2195">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="19ce0-2196">如果调用的回调方法<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>，它必须这样做调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>方法特定的<xref:System.Drawing.Imaging.Metafile>正在枚举。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2196">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="19ce0-2197">`destPoints`参数指定的平行四边形的三个点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2197">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="19ce0-2198">这三种<xref:System.Drawing.Point>结构表示平行四边形的左上角、 右上角和左下角。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2198">The three <xref:System.Drawing.Point> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="19ce0-2199">第四个点推断出以形成一个平行四边形的前三个。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2199">The fourth point is extrapolated from the first three to form a parallelogram.</span></span> <span data-ttu-id="19ce0-2200">缩放和剪切以适合的平行四边形绘制图元文件。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2200">The drawn metafile is scaled and sheared to fit the parallelogram.</span></span>  
  
 <span data-ttu-id="19ce0-2201">任何绘制发生在由指定的矩形外部`srcRect`参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2201">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2202">有关代码示例，请参阅 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2202">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.PointF destPoint, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::PointF destPoint, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.PointF * System.Drawing.RectangleF * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc * nativeint -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoint, srcRect, srcUnit, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoint" Type="System.Drawing.PointF" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="metafile">
          <span data-ttu-id="19ce0-2203">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2203">
              <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span>
          </span>
        </param>
        <param name="destPoint">
          <span data-ttu-id="19ce0-2204">
            <see cref="T:System.Drawing.PointF" /> 结构，它指定所绘制图元文件的左上角的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2204">
              <see cref="T:System.Drawing.PointF" /> structure that specifies the location of the upper-left corner of the drawn metafile.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="19ce0-2205">
            <see cref="T:System.Drawing.RectangleF" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2205">
              <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span>
          </span>
        </param>
        <param name="srcUnit">
          <span data-ttu-id="19ce0-2206">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <c>srcRect</c> 参数指定的矩形所包含的部分图元文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2206">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <c>srcRect</c> parameter contains.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-2207">
            <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2207">
              <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span>
          </span>
        </param>
        <param name="callbackData">
          <span data-ttu-id="19ce0-2208">必需但被忽略的内部指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2208">Internal pointer that is required, but ignored.</span>
          </span>
          <span data-ttu-id="19ce0-2209">可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2209">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2210">将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法以在指定的点处显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2210">Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2211">此方法枚举指定的图元文件中包含的记录。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2211">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="19ce0-2212">每个记录分别发送到回调方法，指定`callback`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2212">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="19ce0-2213">通常情况下，该回调方法调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>到"播放"，或绘图，记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2213">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="19ce0-2214">如果调用的回调方法<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>，它必须这样做调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>方法特定的<xref:System.Drawing.Imaging.Metafile>正在枚举。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2214">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="19ce0-2215">任何绘制发生在由指定的矩形外部`srcRect`参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2215">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2216">有关代码示例，请参阅 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2216">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc * nativeint -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoints, srcRect, srcUnit, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="metafile">
          <span data-ttu-id="19ce0-2217">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2217">
              <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span>
          </span>
        </param>
        <param name="destPoints">
          <span data-ttu-id="19ce0-2218">由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个用来确定所绘制图元文件的大小和位置的平行四边形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2218">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="19ce0-2219">
            <see cref="T:System.Drawing.RectangleF" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2219">
              <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span>
          </span>
        </param>
        <param name="srcUnit">
          <span data-ttu-id="19ce0-2220">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <c>srcRect</c> 参数指定的矩形所包含的部分图元文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2220">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <c>srcRect</c> parameter contains.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-2221">
            <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2221">
              <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span>
          </span>
        </param>
        <param name="callbackData">
          <span data-ttu-id="19ce0-2222">必需但被忽略的内部指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2222">Internal pointer that is required, but ignored.</span>
          </span>
          <span data-ttu-id="19ce0-2223">可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2223">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2224">将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法以在指定的平行四边形中显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2224">Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2225">此方法枚举指定的图元文件中包含的记录。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2225">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="19ce0-2226">每个记录分别发送到回调方法，指定`callback`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2226">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="19ce0-2227">通常情况下，该回调方法调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>到"播放"，或绘图，记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2227">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="19ce0-2228">如果调用的回调方法<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>，它必须这样做调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>方法特定的<xref:System.Drawing.Imaging.Metafile>正在枚举。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2228">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="19ce0-2229">`destPoints`参数指定的平行四边形的三个点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2229">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="19ce0-2230">这三种<xref:System.Drawing.PointF>结构表示平行四边形的左上角、 右上角和左下角。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2230">The three <xref:System.Drawing.PointF> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="19ce0-2231">第四个点推断出以形成一个平行四边形的前三个。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2231">The fourth point is extrapolated from the first three to form a parallelogram.</span></span> <span data-ttu-id="19ce0-2232">缩放和剪切以适合的平行四边形绘制图元文件。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2232">The drawn metafile is scaled and sheared to fit the parallelogram.</span></span>  
  
 <span data-ttu-id="19ce0-2233">任何绘制发生在由指定的矩形外部`srcRect`参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2233">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2234">有关代码示例，请参阅 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2234">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Rectangle destRect, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::Rectangle destRect, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Rectangle * System.Drawing.Rectangle * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc * nativeint -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destRect, srcRect, srcUnit, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="metafile">
          <span data-ttu-id="19ce0-2235">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2235">
              <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span>
          </span>
        </param>
        <param name="destRect">
          <span data-ttu-id="19ce0-2236">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图元文件的位置和大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2236">
              <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn metafile.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="19ce0-2237">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2237">
              <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span>
          </span>
        </param>
        <param name="srcUnit">
          <span data-ttu-id="19ce0-2238">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <c>srcRect</c> 参数指定的矩形所包含的部分图元文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2238">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <c>srcRect</c> parameter contains.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-2239">
            <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2239">
              <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span>
          </span>
        </param>
        <param name="callbackData">
          <span data-ttu-id="19ce0-2240">必需但被忽略的内部指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2240">Internal pointer that is required, but ignored.</span>
          </span>
          <span data-ttu-id="19ce0-2241">可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2241">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2242">将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法以在指定的矩形中显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2242">Sends the records of a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2243">此方法枚举指定的图元文件中包含的记录。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2243">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="19ce0-2244">每个记录分别发送到回调方法，指定`callback`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2244">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="19ce0-2245">通常情况下，该回调方法调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>到"播放"，或绘图，记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2245">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="19ce0-2246">如果调用的回调方法<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>，它必须这样做调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>方法特定的<xref:System.Drawing.Imaging.Metafile>正在枚举。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2246">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="19ce0-2247">任何绘制发生在由指定的矩形外部`srcRect`参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2247">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2248">有关代码示例，请参阅 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2248">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.RectangleF destRect, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::RectangleF destRect, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.RectangleF * System.Drawing.RectangleF * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc * nativeint -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destRect, srcRect, srcUnit, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="metafile">
          <span data-ttu-id="19ce0-2249">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2249">
              <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span>
          </span>
        </param>
        <param name="destRect">
          <span data-ttu-id="19ce0-2250">
            <see cref="T:System.Drawing.RectangleF" /> 结构，它指定所绘制图元文件的位置和大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2250">
              <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn metafile.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="19ce0-2251">
            <see cref="T:System.Drawing.RectangleF" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2251">
              <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span>
          </span>
        </param>
        <param name="srcUnit">
          <span data-ttu-id="19ce0-2252">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <c>srcRect</c> 参数指定的矩形所包含的部分图元文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2252">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <c>srcRect</c> parameter contains.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-2253">
            <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2253">
              <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span>
          </span>
        </param>
        <param name="callbackData">
          <span data-ttu-id="19ce0-2254">必需但被忽略的内部指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2254">Internal pointer that is required, but ignored.</span>
          </span>
          <span data-ttu-id="19ce0-2255">可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2255">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2256">将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法以在指定的矩形中显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2256">Sends the records of a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2257">此方法枚举指定的图元文件中包含的记录。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2257">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="19ce0-2258">每个记录分别发送到回调方法，指定`callback`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2258">Each record is individually sent to a callback method specified by the`callback` parameter.</span></span> <span data-ttu-id="19ce0-2259">通常情况下，该回调方法调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>到"播放"，或绘图，记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2259">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="19ce0-2260">如果调用的回调方法<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>，它必须这样做调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>方法特定的<xref:System.Drawing.Imaging.Metafile>正在枚举。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2260">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="19ce0-2261">任何绘制发生在由指定的矩形外部`srcRect`参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2261">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2262">有关代码示例，请参阅 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2262">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Point destPoint, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit unit, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::Point destPoint, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit unit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Point * System.Drawing.Rectangle * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc * nativeint * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoint, srcRect, unit, callback, callbackData, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoint" Type="System.Drawing.Point" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="metafile">
          <span data-ttu-id="19ce0-2263">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2263">
              <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span>
          </span>
        </param>
        <param name="destPoint">
          <span data-ttu-id="19ce0-2264">
            <see cref="T:System.Drawing.Point" /> 结构，它指定所绘制图元文件的左上角的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2264">
              <see cref="T:System.Drawing.Point" /> structure that specifies the location of the upper-left corner of the drawn metafile.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="19ce0-2265">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2265">
              <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span>
          </span>
        </param>
        <param name="unit">
          <span data-ttu-id="19ce0-2266">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <c>srcRect</c> 参数指定的矩形所包含的部分图元文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2266">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <c>srcRect</c> parameter contains.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-2267">
            <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2267">
              <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span>
          </span>
        </param>
        <param name="callbackData">
          <span data-ttu-id="19ce0-2268">必需但被忽略的内部指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2268">Internal pointer that is required, but ignored.</span>
          </span>
          <span data-ttu-id="19ce0-2269">可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2269">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span>
          </span>
        </param>
        <param name="imageAttr">
          <span data-ttu-id="19ce0-2270">
            <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定所绘制图像的图像特性信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2270">
              <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2271">将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法，以在指定的点处用指定的图像特性显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2271">Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point using specified image attributes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2272">此方法枚举指定的图元文件中包含的记录。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2272">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="19ce0-2273">每个记录分别发送到回调方法，指定`callback`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2273">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="19ce0-2274">通常情况下，该回调方法调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>到"播放"，或绘图，记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2274">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="19ce0-2275">如果调用的回调方法<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>，它必须这样做调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>方法特定的<xref:System.Drawing.Imaging.Metafile>正在枚举。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2275">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2276">有关代码示例，请参阅 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2276">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Point[] destPoints, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit unit, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, cli::array &lt;System::Drawing::Point&gt; ^ destPoints, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit unit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Point[] * System.Drawing.Rectangle * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc * nativeint * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoints, srcRect, unit, callback, callbackData, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoints" Type="System.Drawing.Point[]" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="metafile">
          <span data-ttu-id="19ce0-2277">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2277">
              <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span>
          </span>
        </param>
        <param name="destPoints">
          <span data-ttu-id="19ce0-2278">由三个 <see cref="T:System.Drawing.Point" /> 结构组成的数组，这三个结构定义一个用来确定所绘制图元文件的大小和位置的平行四边形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2278">Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="19ce0-2279">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2279">
              <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span>
          </span>
        </param>
        <param name="unit">
          <span data-ttu-id="19ce0-2280">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <c>srcRect</c> 参数指定的矩形所包含的部分图元文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2280">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <c>srcRect</c> parameter contains.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-2281">
            <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2281">
              <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span>
          </span>
        </param>
        <param name="callbackData">
          <span data-ttu-id="19ce0-2282">必需但被忽略的内部指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2282">Internal pointer that is required, but ignored.</span>
          </span>
          <span data-ttu-id="19ce0-2283">可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2283">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span>
          </span>
        </param>
        <param name="imageAttr">
          <span data-ttu-id="19ce0-2284">
            <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定所绘制图像的图像特性信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2284">
              <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2285">将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法，以在指定的平行四边形中用指定的图像特性显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2285">Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram using specified image attributes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2286">此方法枚举指定的图元文件中包含的记录。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2286">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="19ce0-2287">每个记录分别发送到回调方法，指定`callback`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2287">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="19ce0-2288">通常情况下，该回调方法调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>到"播放"，或绘图，记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2288">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="19ce0-2289">如果调用的回调方法<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>，它必须这样做调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>方法特定的<xref:System.Drawing.Imaging.Metafile>正在枚举。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2289">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="19ce0-2290">`destPoints`参数指定的平行四边形的三个点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2290">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="19ce0-2291">这三种<xref:System.Drawing.Point>结构表示平行四边形的左上角、 右上角和左下角。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2291">The three <xref:System.Drawing.Point> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="19ce0-2292">第四个点推断出以形成一个平行四边形的前三个。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2292">The fourth point is extrapolated from the first three to form a parallelogram.</span></span> <span data-ttu-id="19ce0-2293">缩放和剪切以适合的平行四边形绘制图元文件。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2293">The drawn metafile is scaled and sheared to fit the parallelogram.</span></span>  
  
 <span data-ttu-id="19ce0-2294">任何绘制发生在由指定的矩形外部`srcRect`参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2294">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
 <span data-ttu-id="19ce0-2295">指定的图像特性`imageAttr`参数替换指定何时写入图元文件。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2295">The image attributes specified by the `imageAttr` parameter replace those specified when the metafile was written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2296">有关代码示例，请参阅 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2296">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.PointF destPoint, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit unit, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::PointF destPoint, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit unit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.PointF * System.Drawing.RectangleF * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc * nativeint * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoint, srcRect, unit, callback, callbackData, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoint" Type="System.Drawing.PointF" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="metafile">
          <span data-ttu-id="19ce0-2297">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2297">
              <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span>
          </span>
        </param>
        <param name="destPoint">
          <span data-ttu-id="19ce0-2298">
            <see cref="T:System.Drawing.PointF" /> 结构，它指定所绘制图元文件的左上角的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2298">
              <see cref="T:System.Drawing.PointF" /> structure that specifies the location of the upper-left corner of the drawn metafile.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="19ce0-2299">
            <see cref="T:System.Drawing.RectangleF" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2299">
              <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span>
          </span>
        </param>
        <param name="unit">
          <span data-ttu-id="19ce0-2300">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <c>srcRect</c> 参数指定的矩形所包含的部分图元文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2300">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <c>srcRect</c> parameter contains.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-2301">
            <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2301">
              <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span>
          </span>
        </param>
        <param name="callbackData">
          <span data-ttu-id="19ce0-2302">必需但被忽略的内部指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2302">Internal pointer that is required, but ignored.</span>
          </span>
          <span data-ttu-id="19ce0-2303">可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2303">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span>
          </span>
        </param>
        <param name="imageAttr">
          <span data-ttu-id="19ce0-2304">
            <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定所绘制图像的图像特性信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2304">
              <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2305">将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法，以在指定的点处用指定的图像特性显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2305">Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point using specified image attributes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2306">此方法枚举指定的图元文件中包含的记录。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2306">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="19ce0-2307">每个记录分别发送到回调方法，指定`callback`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2307">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="19ce0-2308">通常情况下，该回调方法调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>到"播放"，或绘图，记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2308">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="19ce0-2309">如果调用的回调方法<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>，它必须这样做调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>方法特定的<xref:System.Drawing.Imaging.Metafile>正在枚举。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2309">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="19ce0-2310">任何绘制发生在由指定的矩形外部`srcRect`参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2310">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
 <span data-ttu-id="19ce0-2311">指定的图像特性`imageAttr`参数替换指定何时写入图元文件。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2311">The image attributes specified by the `imageAttr` parameter replace those specified when the metafile was written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2312">有关代码示例，请参阅 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2312">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit unit, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit unit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc * nativeint * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoints, srcRect, unit, callback, callbackData, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="metafile">
          <span data-ttu-id="19ce0-2313">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2313">
              <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span>
          </span>
        </param>
        <param name="destPoints">
          <span data-ttu-id="19ce0-2314">由三个 <see cref="T:System.Drawing.PointF" /> 结构组成的数组，这三个结构定义一个用来确定所绘制图元文件的大小和位置的平行四边形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2314">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="19ce0-2315">
            <see cref="T:System.Drawing.RectangleF" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2315">
              <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span>
          </span>
        </param>
        <param name="unit">
          <span data-ttu-id="19ce0-2316">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <c>srcRect</c> 参数指定的矩形所包含的部分图元文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2316">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <c>srcRect</c> parameter contains.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-2317">
            <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2317">
              <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span>
          </span>
        </param>
        <param name="callbackData">
          <span data-ttu-id="19ce0-2318">必需但被忽略的内部指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2318">Internal pointer that is required, but ignored.</span>
          </span>
          <span data-ttu-id="19ce0-2319">可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2319">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span>
          </span>
        </param>
        <param name="imageAttr">
          <span data-ttu-id="19ce0-2320">
            <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定所绘制图像的图像特性信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2320">
              <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2321">将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法，以在指定的平行四边形中用指定的图像特性显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2321">Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram using specified image attributes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2322">此方法枚举指定的图元文件中包含的记录。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2322">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="19ce0-2323">每个记录分别发送到回调方法，指定`callback`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2323">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="19ce0-2324">通常情况下，该回调方法调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>到"播放"，或绘图，记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2324">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="19ce0-2325">如果调用的回调方法<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>，它必须这样做调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>方法特定的<xref:System.Drawing.Imaging.Metafile>正在枚举。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2325">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="19ce0-2326">`destPoints`参数指定的平行四边形的三个点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2326">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="19ce0-2327">这三种<xref:System.Drawing.PointF>结构表示平行四边形的左上角、 右上角和左下角。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2327">The three <xref:System.Drawing.PointF> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="19ce0-2328">第四个点推断出以形成一个平行四边形的前三个。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2328">The fourth point is extrapolated from the first three to form a parallelogram.</span></span> <span data-ttu-id="19ce0-2329">缩放和剪切以适合的平行四边形绘制图元文件。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2329">The drawn metafile is scaled and sheared to fit the parallelogram.</span></span>  
  
 <span data-ttu-id="19ce0-2330">任何绘制发生在由指定的矩形外部`srcRect`参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2330">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
 <span data-ttu-id="19ce0-2331">指定的图像特性`imageAttr`参数替换指定何时写入图元文件。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2331">The image attributes specified by the `imageAttr` parameter replace those specified when the metafile was written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2332">有关代码示例，请参阅 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2332">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Rectangle destRect, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit unit, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::Rectangle destRect, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit unit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Rectangle * System.Drawing.Rectangle * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc * nativeint * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destRect, srcRect, unit, callback, callbackData, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="metafile">
          <span data-ttu-id="19ce0-2333">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2333">
              <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span>
          </span>
        </param>
        <param name="destRect">
          <span data-ttu-id="19ce0-2334">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它指定所绘制图元文件的位置和大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2334">
              <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn metafile.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="19ce0-2335">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2335">
              <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span>
          </span>
        </param>
        <param name="unit">
          <span data-ttu-id="19ce0-2336">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <c>srcRect</c> 参数指定的矩形所包含的部分图元文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2336">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <c>srcRect</c> parameter contains.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-2337">
            <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2337">
              <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span>
          </span>
        </param>
        <param name="callbackData">
          <span data-ttu-id="19ce0-2338">必需但被忽略的内部指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2338">Internal pointer that is required, but ignored.</span>
          </span>
          <span data-ttu-id="19ce0-2339">可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2339">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span>
          </span>
        </param>
        <param name="imageAttr">
          <span data-ttu-id="19ce0-2340">
            <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定所绘制图像的图像特性信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2340">
              <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2341">将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法，以在指定的矩形中用指定的图像特性显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2341">Sends the records of a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle using specified image attributes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2342">此方法枚举指定的图元文件中包含的记录。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2342">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="19ce0-2343">每个记录分别发送到回调方法，指定`callback`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2343">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="19ce0-2344">通常情况下，该回调方法调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>到"播放"，或绘图，记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2344">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="19ce0-2345">如果调用的回调方法<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>，它必须这样做调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>方法特定的<xref:System.Drawing.Imaging.Metafile>正在枚举。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2345">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="19ce0-2346">任何绘制发生在由指定的矩形外部`srcRect`参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2346">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
 <span data-ttu-id="19ce0-2347">指定的图像特性`imageAttr`参数替换指定何时写入图元文件。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2347">The image attributes specified by the `imageAttr` parameter replace those specified when the metafile was written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2348">有关代码示例，请参阅 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2348">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.RectangleF destRect, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit unit, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::RectangleF destRect, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit unit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.RectangleF * System.Drawing.RectangleF * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc * nativeint * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destRect, srcRect, unit, callback, callbackData, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="metafile">
          <span data-ttu-id="19ce0-2349">要枚举的 <see cref="T:System.Drawing.Imaging.Metafile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2349">
              <see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span>
          </span>
        </param>
        <param name="destRect">
          <span data-ttu-id="19ce0-2350">
            <see cref="T:System.Drawing.RectangleF" /> 结构，它指定所绘制图元文件的位置和大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2350">
              <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn metafile.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="19ce0-2351">
            <see cref="T:System.Drawing.RectangleF" /> 结构，它相对于图元文件的左上角指定要绘制的部分图元文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2351">
              <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span>
          </span>
        </param>
        <param name="unit">
          <span data-ttu-id="19ce0-2352">
            <see cref="T:System.Drawing.GraphicsUnit" /> 枚举的成员，它指定度量单位，该度量单位用于确定 <c>srcRect</c> 参数指定的矩形所包含的部分图元文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2352">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <c>srcRect</c> parameter contains.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="19ce0-2353">
            <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委托，它指定将图元文件记录发送到的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2353">
              <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span>
          </span>
        </param>
        <param name="callbackData">
          <span data-ttu-id="19ce0-2354">必需但被忽略的内部指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2354">Internal pointer that is required, but ignored.</span>
          </span>
          <span data-ttu-id="19ce0-2355">可以为此参数传递 <see cref="F:System.IntPtr.Zero" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2355">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span>
          </span>
        </param>
        <param name="imageAttr">
          <span data-ttu-id="19ce0-2356">
            <see cref="T:System.Drawing.Imaging.ImageAttributes" />，它指定所绘制图像的图像特性信息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2356">
              <see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2357">将 <see cref="T:System.Drawing.Imaging.Metafile" /> 中选定矩形内的记录逐个发送到回调方法，以在指定的矩形中用指定的图像特性显示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2357">Sends the records of a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle using specified image attributes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2358">此方法枚举指定的图元文件中包含的记录。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2358">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="19ce0-2359">每个记录分别发送到回调方法，指定`callback`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2359">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="19ce0-2360">通常情况下，该回调方法调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>到"播放"，或绘图，记录的方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2360">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="19ce0-2361">如果调用的回调方法<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>，它必须这样做调用<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>方法特定的<xref:System.Drawing.Imaging.Metafile>正在枚举。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2361">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="19ce0-2362">任何绘制发生在由指定的矩形外部`srcRect`参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2362">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
 <span data-ttu-id="19ce0-2363">指定的图像特性`imageAttr`参数替换指定何时写入图元文件。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2363">The image attributes specified by the `imageAttr` parameter replace those specified when the metafile was written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2364">有关代码示例，请参阅 <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2364">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExcludeClip">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-2365">更新此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域，以排除 <see cref="T:System.Drawing.Rectangle" /> 结构所指定的区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2365">Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> to exclude the area specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExcludeClip">
      <MemberSignature Language="C#" Value="public void ExcludeClip (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExcludeClip(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExcludeClip (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExcludeClip(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.ExcludeClip : System.Drawing.Rectangle -&gt; unit" Usage="graphics.ExcludeClip rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="19ce0-2366">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它指定要从剪辑区域排除的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2366">
              <see cref="T:System.Drawing.Rectangle" /> structure that specifies the rectangle to exclude from the clip region.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2367">更新此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域，以排除 <see cref="T:System.Drawing.Rectangle" /> 结构所指定的区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2367">Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> to exclude the area specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2368">此方法排除指定的区域`rect`从为当前剪辑区域的参数并将分配到结果区域<xref:System.Drawing.Graphics.Clip%2A>此属性<xref:System.Drawing.Graphics>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2368">This method excludes the area specified by the `rect` parameter from the current clip region and assigns the resulting area to the <xref:System.Drawing.Graphics.Clip%2A> property of this <xref:System.Drawing.Graphics>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2369">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2369">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2370">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2370">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-2371">创建 100 像素 x 100 像素的矩形的左上角位于坐标 （100，100）。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2371">Creates a 100 pixel by 100 pixel rectangle whose upper-left corner is at the coordinate (100, 100).</span></span>  
  
-   <span data-ttu-id="19ce0-2372">创建定义矩形的区域。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2372">Creates a region defined by the rectangle.</span></span>  
  
-   <span data-ttu-id="19ce0-2373">设置要排除的矩形区域的剪辑区域。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2373">Sets the clipping region to exclude the rectangular region.</span></span>  
  
-   <span data-ttu-id="19ce0-2374">X 300 像素的矩形的左上角位于坐标 （0，0） 与纯蓝色画笔填充 300 像素。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2374">Fills a 300 pixel by 300 pixel rectangle whose upper-left corner is at the coordinate (0, 0) with a solid blue brush.</span></span>  
  
 <span data-ttu-id="19ce0-2375">结果是一个具有其右下角方向缺少一个正方形区域的蓝色矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2375">The result is a blue rectangle with a square region toward its lower-right corner missing.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#92](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#92)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#92](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#92)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#92](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#92)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExcludeClip">
      <MemberSignature Language="C#" Value="public void ExcludeClip (System.Drawing.Region region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExcludeClip(class System.Drawing.Region region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Region)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExcludeClip(System::Drawing::Region ^ region);" />
      <MemberSignature Language="F#" Value="member this.ExcludeClip : System.Drawing.Region -&gt; unit" Usage="graphics.ExcludeClip region" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
      </Parameters>
      <Docs>
        <param name="region">
          <span data-ttu-id="19ce0-2376">
            <see cref="T:System.Drawing.Region" />，它指定要从剪辑区域排除的区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2376">
              <see cref="T:System.Drawing.Region" /> that specifies the region to exclude from the clip region.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2377">更新此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域，以排除 <see cref="T:System.Drawing.Region" /> 所指定的区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2377">Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> to exclude the area specified by a <see cref="T:System.Drawing.Region" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2378">此方法排除指定的区域`region`从为当前剪辑区域的参数并将分配到结果区域<xref:System.Drawing.Graphics.Clip%2A>此属性<xref:System.Drawing.Graphics>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2378">This method excludes the area specified by the `region` parameter from the current clip region and assigns the resulting area to the <xref:System.Drawing.Graphics.Clip%2A> property of this <xref:System.Drawing.Graphics>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2379">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2379">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2380">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2380">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-2381">创建 100 像素 x 100 像素的矩形的左上角位于坐标 （100，100）。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2381">Creates a 100 pixel by 100 pixel rectangle whose upper-left corner is at the coordinate (100, 100).</span></span>  
  
-   <span data-ttu-id="19ce0-2382">设置以排除该矩形的剪辑区域。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2382">Sets the clipping region to exclude the rectangle.</span></span>  
  
-   <span data-ttu-id="19ce0-2383">X 300 像素的矩形的左上角位于坐标 （0，0） 与纯蓝色画笔填充 300 像素。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2383">Fills a 300 pixel by 300 pixel rectangle whose upper-left corner is at the coordinate (0, 0) with a solid blue brush.</span></span>  
  
 <span data-ttu-id="19ce0-2384">结果是其右下角方向缺少一个正方形区域一个蓝色矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2384">The result is a blue rectangle with a square area toward its lower-right corner missing.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#91](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#91)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#91](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#91)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#91](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#91)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FillClosedCurve">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-2385">填充由 <see cref="T:System.Drawing.Point" /> 结构数组定义的闭合基数样条曲线的内部。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2385">Fills the interior of a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.Point" /> structures.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillClosedCurve">
      <MemberSignature Language="C#" Value="public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillClosedCurve(class System.Drawing.Brush brush, valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillClosedCurve(System::Drawing::Brush ^ brush, cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.FillClosedCurve : System.Drawing.Brush * System.Drawing.Point[] -&gt; unit" Usage="graphics.FillClosedCurve (brush, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="brush">
          <span data-ttu-id="19ce0-2386">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2386">
              <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span>
          </span>
        </param>
        <param name="points">
          <span data-ttu-id="19ce0-2387">
            <see cref="T:System.Drawing.Point" /> 结构数组，这些结构定义样条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2387">Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2388">填充由 <see cref="T:System.Drawing.Point" /> 结构数组定义的闭合基数样条曲线的内部。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2388">Fills the interior of a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.Point" /> structures.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2389">此方法填充经过数组中每个点的闭合基数样条的内部。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2389">This method fills the interior of a closed cardinal spline that passes through each point in the array.</span></span> <span data-ttu-id="19ce0-2390">如果最后一个点不匹配的第一个点，则将附加曲线段添加在最后一个点的第一个点，以将其关闭。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2390">If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.</span></span>  
  
 <span data-ttu-id="19ce0-2391">点的数组必须包含至少四个<xref:System.Drawing.Point>结构。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2391">The array of points must contain at least four <xref:System.Drawing.Point> structures.</span></span>  
  
 <span data-ttu-id="19ce0-2392">此方法使用默认张力 0.5。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2392">This method uses a default tension of 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2393">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2393">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2394">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2394">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-2395">创建实心的红色画笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2395">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="19ce0-2396">创建一个数组的四个点定义样条。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2396">Creates an array of four points to define a spline.</span></span>  
  
-   <span data-ttu-id="19ce0-2397">填充屏幕上的曲线。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2397">Fills the curve on the screen.</span></span>  
  
 <span data-ttu-id="19ce0-2398">曲线的默认张力 0.5。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2398">The curve has a default tension of 0.5.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#93](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#93)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#93](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#93)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#93](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#93)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-2399">
            <paramref name="brush" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2399">
              <paramref name="brush" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-2400">- 或 -  <paramref name="points" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2400">-or-  <paramref name="points" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FillClosedCurve">
      <MemberSignature Language="C#" Value="public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillClosedCurve(class System.Drawing.Brush brush, valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillClosedCurve(System::Drawing::Brush ^ brush, cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.FillClosedCurve : System.Drawing.Brush * System.Drawing.PointF[] -&gt; unit" Usage="graphics.FillClosedCurve (brush, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="brush">
          <span data-ttu-id="19ce0-2401">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2401">
              <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span>
          </span>
        </param>
        <param name="points">
          <span data-ttu-id="19ce0-2402">
            <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构定义样条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2402">Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2403">填充由 <see cref="T:System.Drawing.PointF" /> 结构数组定义的闭合基数样条曲线的内部。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2403">Fills the interior of a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.PointF" /> structures.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2404">此方法填充经过数组中每个点的闭合基数样条的内部。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2404">This method fills the interior of a closed cardinal spline that passes through each point in the array.</span></span> <span data-ttu-id="19ce0-2405">如果最后一个点不匹配的第一个点，则将附加曲线段添加在最后一个点的第一个点，以将其关闭。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2405">If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.</span></span>  
  
 <span data-ttu-id="19ce0-2406">点的数组必须包含至少四个<xref:System.Drawing.PointF>结构。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2406">The array of points must contain at least four <xref:System.Drawing.PointF> structures.</span></span>  
  
 <span data-ttu-id="19ce0-2407">此方法使用默认张力 0.5。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2407">This method uses a default tension of 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2408">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2408">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2409">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2409">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-2410">创建实心的红色画笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2410">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="19ce0-2411">创建一个数组的四个点定义样条。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2411">Creates an array of four points to define a spline.</span></span>  
  
-   <span data-ttu-id="19ce0-2412">填充屏幕上的曲线。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2412">Fills the curve on the screen.</span></span>  
  
 <span data-ttu-id="19ce0-2413">曲线的默认张力 0.5。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2413">The curve has a default tension of 0.5.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#96](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#96)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#96](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#96)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#96](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#96)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-2414">
            <paramref name="brush" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2414">
              <paramref name="brush" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-2415">- 或 -  <paramref name="points" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2415">-or-  <paramref name="points" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FillClosedCurve">
      <MemberSignature Language="C#" Value="public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.Point[] points, System.Drawing.Drawing2D.FillMode fillmode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillClosedCurve(class System.Drawing.Brush brush, valuetype System.Drawing.Point[] points, valuetype System.Drawing.Drawing2D.FillMode fillmode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillClosedCurve(System::Drawing::Brush ^ brush, cli::array &lt;System::Drawing::Point&gt; ^ points, System::Drawing::Drawing2D::FillMode fillmode);" />
      <MemberSignature Language="F#" Value="member this.FillClosedCurve : System.Drawing.Brush * System.Drawing.Point[] * System.Drawing.Drawing2D.FillMode -&gt; unit" Usage="graphics.FillClosedCurve (brush, points, fillmode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="fillmode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="brush">
          <span data-ttu-id="19ce0-2416">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2416">
              <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span>
          </span>
        </param>
        <param name="points">
          <span data-ttu-id="19ce0-2417">
            <see cref="T:System.Drawing.Point" /> 结构数组，这些结构定义样条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2417">Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.</span>
          </span>
        </param>
        <param name="fillmode">
          <span data-ttu-id="19ce0-2418">
            <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举的成员，它确定填充曲线的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2418">Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the curve is filled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2419">使用指定的填充模式填充 <see cref="T:System.Drawing.Point" /> 结构数组定义的闭合基数样条曲线的内部。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2419">Fills the interior of a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.Point" /> structures using the specified fill mode.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2420">此方法填充经过数组中每个点的闭合基数样条的内部。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2420">This method fills the interior of a closed cardinal spline that passes through each point in the array.</span></span> <span data-ttu-id="19ce0-2421">如果最后一个点不匹配的第一个点，则将附加曲线段添加在最后一个点的第一个点，以将其关闭。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2421">If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.</span></span>  
  
 <span data-ttu-id="19ce0-2422">点的数组必须包含至少四个<xref:System.Drawing.Point>结构。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2422">The array of points must contain at least four <xref:System.Drawing.Point> structures.</span></span>  
  
 <span data-ttu-id="19ce0-2423">此方法使用默认张力 0.5。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2423">This method uses a default tension of 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2424">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2424">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2425">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2425">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-2426">创建实心的红色画笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2426">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="19ce0-2427">创建一个数组的四个点定义样条。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2427">Creates an array of four points to define a spline.</span></span>  
  
-   <span data-ttu-id="19ce0-2428">将填充模式设置为<xref:System.Drawing.Drawing2D.FillMode.Winding>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2428">Sets the fill mode to <xref:System.Drawing.Drawing2D.FillMode.Winding>.</span></span>  
  
-   <span data-ttu-id="19ce0-2429">填充屏幕上的曲线。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2429">Fills the curve on the screen.</span></span>  
  
 <span data-ttu-id="19ce0-2430">曲线的默认张力 0.5。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2430">The curve has a default tension of 0.5.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#94](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#94)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#94](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#94)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#94](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#94)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-2431">
            <paramref name="brush" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2431">
              <paramref name="brush" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-2432">- 或 -  <paramref name="points" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2432">-or-  <paramref name="points" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FillClosedCurve">
      <MemberSignature Language="C#" Value="public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.PointF[] points, System.Drawing.Drawing2D.FillMode fillmode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillClosedCurve(class System.Drawing.Brush brush, valuetype System.Drawing.PointF[] points, valuetype System.Drawing.Drawing2D.FillMode fillmode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillClosedCurve(System::Drawing::Brush ^ brush, cli::array &lt;System::Drawing::PointF&gt; ^ points, System::Drawing::Drawing2D::FillMode fillmode);" />
      <MemberSignature Language="F#" Value="member this.FillClosedCurve : System.Drawing.Brush * System.Drawing.PointF[] * System.Drawing.Drawing2D.FillMode -&gt; unit" Usage="graphics.FillClosedCurve (brush, points, fillmode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="fillmode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="brush">
          <span data-ttu-id="19ce0-2433">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2433">
              <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span>
          </span>
        </param>
        <param name="points">
          <span data-ttu-id="19ce0-2434">
            <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构定义样条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2434">Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.</span>
          </span>
        </param>
        <param name="fillmode">
          <span data-ttu-id="19ce0-2435">
            <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举的成员，它确定填充曲线的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2435">Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the curve is filled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2436">使用指定的填充模式填充 <see cref="T:System.Drawing.PointF" /> 结构数组定义的闭合基数样条曲线的内部。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2436">Fills the interior of a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.PointF" /> structures using the specified fill mode.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2437">此方法填充经过数组中每个点的闭合基数样条的内部。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2437">This method fills the interior of a closed cardinal spline that passes through each point in the array.</span></span> <span data-ttu-id="19ce0-2438">如果最后一个点不匹配的第一个点，则将附加曲线段添加在最后一个点的第一个点，以将其关闭。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2438">If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.</span></span>  
  
 <span data-ttu-id="19ce0-2439">点的数组必须包含至少四个<xref:System.Drawing.Point>结构。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2439">The array of points must contain at least four <xref:System.Drawing.Point> structures.</span></span>  
  
 <span data-ttu-id="19ce0-2440">此方法使用默认张力 0.5。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2440">This method uses a default tension of 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2441">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2441">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2442">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2442">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-2443">创建实心的红色画笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2443">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="19ce0-2444">创建一个数组的四个点定义样条。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2444">Creates an array of four points to define a spline.</span></span>  
  
-   <span data-ttu-id="19ce0-2445">将填充模式设置为<xref:System.Drawing.Drawing2D.FillMode.Winding>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2445">Sets the fill mode to <xref:System.Drawing.Drawing2D.FillMode.Winding>.</span></span>  
  
-   <span data-ttu-id="19ce0-2446">填充屏幕上的曲线。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2446">Fills the curve on the screen.</span></span>  
  
 <span data-ttu-id="19ce0-2447">曲线的默认张力 0.5。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2447">The curve has a default tension of 0.5.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#97](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#97)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#97](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#97)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#97](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#97)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-2448">
            <paramref name="brush" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2448">
              <paramref name="brush" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-2449">- 或 -  <paramref name="points" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2449">-or-  <paramref name="points" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FillClosedCurve">
      <MemberSignature Language="C#" Value="public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.Point[] points, System.Drawing.Drawing2D.FillMode fillmode, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillClosedCurve(class System.Drawing.Brush brush, valuetype System.Drawing.Point[] points, valuetype System.Drawing.Drawing2D.FillMode fillmode, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillClosedCurve(System::Drawing::Brush ^ brush, cli::array &lt;System::Drawing::Point&gt; ^ points, System::Drawing::Drawing2D::FillMode fillmode, float tension);" />
      <MemberSignature Language="F#" Value="member this.FillClosedCurve : System.Drawing.Brush * System.Drawing.Point[] * System.Drawing.Drawing2D.FillMode * single -&gt; unit" Usage="graphics.FillClosedCurve (brush, points, fillmode, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="fillmode" Type="System.Drawing.Drawing2D.FillMode" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="brush">
          <span data-ttu-id="19ce0-2450">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2450">
              <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span>
          </span>
        </param>
        <param name="points">
          <span data-ttu-id="19ce0-2451">
            <see cref="T:System.Drawing.Point" /> 结构数组，这些结构定义样条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2451">Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.</span>
          </span>
        </param>
        <param name="fillmode">
          <span data-ttu-id="19ce0-2452">
            <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举的成员，它确定填充曲线的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2452">Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the curve is filled.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="19ce0-2453">大于或等于 0.0F 的值，该值指定曲线的张力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2453">Value greater than or equal to 0.0F that specifies the tension of the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2454">使用指定的填充模式和张力填充 <see cref="T:System.Drawing.Point" /> 结构数组定义的闭合基数样条曲线的内部。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2454">Fills the interior of a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.Point" /> structures using the specified fill mode and tension.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2455">此方法填充经过数组中每个点的闭合基数样条的内部。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2455">This method fills the interior of a closed cardinal spline that passes through each point in the array.</span></span> <span data-ttu-id="19ce0-2456">如果最后一个点不匹配的第一个点，则将附加曲线段添加在最后一个点的第一个点，以将其关闭。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2456">If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.</span></span>  
  
 <span data-ttu-id="19ce0-2457">点的数组必须包含至少四个<xref:System.Drawing.Point>结构。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2457">The array of points must contain at least four <xref:System.Drawing.Point> structures.</span></span>  
  
 <span data-ttu-id="19ce0-2458">`tension`参数确定样条的形状。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2458">The `tension` parameter determines the shape of the spline.</span></span> <span data-ttu-id="19ce0-2459">如果值`tension`参数为 0.0 f 时，此方法用于绘制直线段连接的点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2459">If the value of the `tension` parameter is 0.0F, this method draws straight line segments to connect the points.</span></span> <span data-ttu-id="19ce0-2460">通常情况下，`tension`参数是否小于或等于 1.0 f。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2460">Usually, the `tension` parameter is less than or equal to 1.0F.</span></span> <span data-ttu-id="19ce0-2461">通过 1.0 f 的值不会生成不寻常的结果。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2461">Values over 1.0F produce unusual results.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2462">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2462">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2463">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2463">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-2464">创建实心的红色画笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2464">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="19ce0-2465">创建一个数组的四个点定义样条。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2465">Creates an array of four points to define a spline.</span></span>  
  
-   <span data-ttu-id="19ce0-2466">将填充模式设置为<xref:System.Drawing.Drawing2D.FillMode.Winding>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2466">Sets the fill mode to <xref:System.Drawing.Drawing2D.FillMode.Winding>.</span></span>  
  
-   <span data-ttu-id="19ce0-2467">将张力设置为 1.0。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2467">Sets the tension to 1.0.</span></span>  
  
-   <span data-ttu-id="19ce0-2468">填充屏幕上的曲线。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2468">Fills the curve on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#95](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#95)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#95](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#95)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#95](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#95)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-2469">
            <paramref name="brush" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2469">
              <paramref name="brush" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-2470">- 或 -  <paramref name="points" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2470">-or-  <paramref name="points" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FillClosedCurve">
      <MemberSignature Language="C#" Value="public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.PointF[] points, System.Drawing.Drawing2D.FillMode fillmode, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillClosedCurve(class System.Drawing.Brush brush, valuetype System.Drawing.PointF[] points, valuetype System.Drawing.Drawing2D.FillMode fillmode, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillClosedCurve(System::Drawing::Brush ^ brush, cli::array &lt;System::Drawing::PointF&gt; ^ points, System::Drawing::Drawing2D::FillMode fillmode, float tension);" />
      <MemberSignature Language="F#" Value="member this.FillClosedCurve : System.Drawing.Brush * System.Drawing.PointF[] * System.Drawing.Drawing2D.FillMode * single -&gt; unit" Usage="graphics.FillClosedCurve (brush, points, fillmode, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="fillmode" Type="System.Drawing.Drawing2D.FillMode" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="brush">
          <span data-ttu-id="19ce0-2471">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2471">A <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span>
          </span>
        </param>
        <param name="points">
          <span data-ttu-id="19ce0-2472">
            <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构定义样条。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2472">Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.</span>
          </span>
        </param>
        <param name="fillmode">
          <span data-ttu-id="19ce0-2473">
            <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举的成员，它确定填充曲线的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2473">Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the curve is filled.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="19ce0-2474">大于或等于 0.0F 的值，该值指定曲线的张力。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2474">Value greater than or equal to 0.0F that specifies the tension of the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2475">使用指定的填充模式和张力填充 <see cref="T:System.Drawing.PointF" /> 结构数组定义的闭合基数样条曲线的内部。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2475">Fills the interior of a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.PointF" /> structures using the specified fill mode and tension.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2476">此方法填充经过数组中每个点的闭合基数样条的内部。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2476">This method fills the interior of a closed cardinal spline that passes through each point in the array.</span></span> <span data-ttu-id="19ce0-2477">如果最后一个点不匹配的第一个点，则将附加曲线段添加在最后一个点的第一个点，以将其关闭。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2477">If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.</span></span>  
  
 <span data-ttu-id="19ce0-2478">点的数组必须包含至少四个<xref:System.Drawing.Point>结构。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2478">The array of points must contain at least four <xref:System.Drawing.Point> structures.</span></span>  
  
 <span data-ttu-id="19ce0-2479">`tension`参数确定样条的形状。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2479">The `tension` parameter determines the shape of the spline.</span></span> <span data-ttu-id="19ce0-2480">如果值`tension`参数为 0.0 f 时，此方法用于绘制直线段连接的点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2480">If the value of the `tension` parameter is 0.0F, this method draws straight line segments to connect the points.</span></span> <span data-ttu-id="19ce0-2481">通常情况下，`tension`参数是否小于或等于 1.0 f。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2481">Usually, the `tension` parameter is less than or equal to 1.0F.</span></span> <span data-ttu-id="19ce0-2482">通过 1.0 f 的值不会生成不寻常的结果。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2482">Values over 1.0F produce unusual results.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2483">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2483">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2484">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2484">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-2485">创建实心的红色画笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2485">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="19ce0-2486">创建一个数组的四个点定义样条。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2486">Creates an array of four points to define a spline.</span></span>  
  
-   <span data-ttu-id="19ce0-2487">将填充模式设置为<xref:System.Drawing.Drawing2D.FillMode.Winding>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2487">Sets the fill mode to <xref:System.Drawing.Drawing2D.FillMode.Winding>.</span></span>  
  
-   <span data-ttu-id="19ce0-2488">将张力设置为 1.0。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2488">Sets the tension to 1.0.</span></span>  
  
-   <span data-ttu-id="19ce0-2489">填充屏幕上的曲线。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2489">Fills the curve on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#98](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#98)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#98](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#98)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#98](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-2490">
            <paramref name="brush" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2490">
              <paramref name="brush" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-2491">- 或 -  <paramref name="points" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2491">-or-  <paramref name="points" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FillEllipse">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-2492">填充边框所定义的椭圆的内部，该边框由一对坐标、一个宽度和一个高度指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2492">Fills the interior of an ellipse defined by a bounding rectangle specified by a pair of coordinates, a width, and a height.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillEllipse">
      <MemberSignature Language="C#" Value="public void FillEllipse (System.Drawing.Brush brush, System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillEllipse(class System.Drawing.Brush brush, valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillEllipse(System::Drawing::Brush ^ brush, System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.FillEllipse : System.Drawing.Brush * System.Drawing.Rectangle -&gt; unit" Usage="graphics.FillEllipse (brush, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="brush">
          <span data-ttu-id="19ce0-2493">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2493">
              <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span>
          </span>
        </param>
        <param name="rect">
          <span data-ttu-id="19ce0-2494">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它表示定义椭圆的边框。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2494">
              <see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2495">填充 <see cref="T:System.Drawing.Rectangle" /> 结构指定的边框所定义的椭圆的内部。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2495">Fills the interior of an ellipse defined by a bounding rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2496">此方法填充的椭圆的内部<xref:System.Drawing.Brush>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2496">This method fills the interior of an ellipse with a <xref:System.Drawing.Brush>.</span></span> <span data-ttu-id="19ce0-2497">椭圆定义的边界矩形表示`rect`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2497">The ellipse is defined by the bounding rectangle represented by the `rect` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2498">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2498">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2499">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2499">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-2500">创建实心的红色画笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2500">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="19ce0-2501">创建限定椭圆的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2501">Creates a rectangle that bounds an ellipse.</span></span>  
  
-   <span data-ttu-id="19ce0-2502">填充在屏幕上的椭圆。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2502">Fills the ellipse on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#99](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#99)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#99](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#99)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#99](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#99)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-2503">
            <paramref name="brush" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2503">
              <paramref name="brush" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FillEllipse">
      <MemberSignature Language="C#" Value="public void FillEllipse (System.Drawing.Brush brush, System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillEllipse(class System.Drawing.Brush brush, valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillEllipse(System::Drawing::Brush ^ brush, System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.FillEllipse : System.Drawing.Brush * System.Drawing.RectangleF -&gt; unit" Usage="graphics.FillEllipse (brush, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="brush">
          <span data-ttu-id="19ce0-2504">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2504">
              <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span>
          </span>
        </param>
        <param name="rect">
          <span data-ttu-id="19ce0-2505">
            <see cref="T:System.Drawing.RectangleF" /> 结构，它表示定义椭圆的边框。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2505">
              <see cref="T:System.Drawing.RectangleF" /> structure that represents the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2506">填充 <see cref="T:System.Drawing.RectangleF" /> 结构指定的边框所定义的椭圆的内部。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2506">Fills the interior of an ellipse defined by a bounding rectangle specified by a <see cref="T:System.Drawing.RectangleF" /> structure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2507">此方法填充的椭圆的内部<xref:System.Drawing.Brush>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2507">This method fills the interior of an ellipse with a <xref:System.Drawing.Brush>.</span></span> <span data-ttu-id="19ce0-2508">椭圆定义的边界矩形表示`rect`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2508">The ellipse is defined by the bounding rectangle represented by the `rect` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2509">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2509">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2510">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2510">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-2511">创建实心的红色画笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2511">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="19ce0-2512">创建限定椭圆的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2512">Creates a rectangle that bounds an ellipse.</span></span>  
  
-   <span data-ttu-id="19ce0-2513">填充在屏幕上的椭圆。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2513">Fills the ellipse on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#100](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#100)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#100](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#100)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#100](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#100)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-2514">
            <paramref name="brush" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2514">
              <paramref name="brush" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FillEllipse">
      <MemberSignature Language="C#" Value="public void FillEllipse (System.Drawing.Brush brush, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillEllipse(class System.Drawing.Brush brush, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillEllipse(System::Drawing::Brush ^ brush, int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.FillEllipse : System.Drawing.Brush * int * int * int * int -&gt; unit" Usage="graphics.FillEllipse (brush, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="brush">
          <span data-ttu-id="19ce0-2515">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2515">
              <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="19ce0-2516">定义椭圆的边框的左上角的 X 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2516">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="19ce0-2517">定义椭圆的边框的左上角的 Y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2517">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="19ce0-2518">定义椭圆的边框的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2518">Width of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="19ce0-2519">定义椭圆的边框的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2519">Height of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2520">填充边框所定义的椭圆的内部，该边框由一对坐标、一个宽度和一个高度指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2520">Fills the interior of an ellipse defined by a bounding rectangle specified by a pair of coordinates, a width, and a height.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2521">此方法填充的椭圆的内部<xref:System.Drawing.Brush>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2521">This method fills the interior of an ellipse with a <xref:System.Drawing.Brush>.</span></span> <span data-ttu-id="19ce0-2522">椭圆定义的边界矩形表示`x`， `y`， `width`，和`height`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2522">The ellipse is defined by the bounding rectangle represented by the `x`, `y`, `width`, and `height` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2523">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2523">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2524">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2524">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-2525">创建实心的红色画笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2525">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="19ce0-2526">创建的位置和限定椭圆的矩形的大小。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2526">Creates the location and size of a rectangle that bounds an ellipse.</span></span>  
  
-   <span data-ttu-id="19ce0-2527">填充在屏幕上的椭圆。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2527">Fills the ellipse on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#101](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#101)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#101](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#101)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#101](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#101)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-2528">
            <paramref name="brush" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2528">
              <paramref name="brush" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FillEllipse">
      <MemberSignature Language="C#" Value="public void FillEllipse (System.Drawing.Brush brush, float x, float y, float width, float height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillEllipse(class System.Drawing.Brush brush, float32 x, float32 y, float32 width, float32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillEllipse(System::Drawing::Brush ^ brush, float x, float y, float width, float height);" />
      <MemberSignature Language="F#" Value="member this.FillEllipse : System.Drawing.Brush * single * single * single * single -&gt; unit" Usage="graphics.FillEllipse (brush, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="brush">
          <span data-ttu-id="19ce0-2529">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2529">
              <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="19ce0-2530">定义椭圆的边框的左上角的 X 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2530">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="19ce0-2531">定义椭圆的边框的左上角的 Y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2531">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="19ce0-2532">定义椭圆的边框的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2532">Width of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="19ce0-2533">定义椭圆的边框的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2533">Height of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2534">填充边框所定义的椭圆的内部，该边框由一对坐标、一个宽度和一个高度指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2534">Fills the interior of an ellipse defined by a bounding rectangle specified by a pair of coordinates, a width, and a height.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2535">此方法填充的椭圆的内部<xref:System.Drawing.Brush>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2535">This method fills the interior of an ellipse with a <xref:System.Drawing.Brush>.</span></span> <span data-ttu-id="19ce0-2536">椭圆定义的边界矩形表示`x`， `y`， `width`，和`height`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2536">The ellipse is defined by the bounding rectangle represented by the `x`, `y`, `width`, and `height` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2537">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2537">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2538">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2538">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-2539">创建实心的红色画笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2539">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="19ce0-2540">创建的位置和限定椭圆的矩形的大小。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2540">Creates the location and size of a rectangle that bounds an ellipse.</span></span>  
  
-   <span data-ttu-id="19ce0-2541">填充在屏幕上的椭圆。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2541">Fills the ellipse on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#102](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#102)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#102](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#102)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#102](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#102)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-2542">
            <paramref name="brush" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2542">
              <paramref name="brush" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FillPath">
      <MemberSignature Language="C#" Value="public void FillPath (System.Drawing.Brush brush, System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillPath(class System.Drawing.Brush brush, class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillPath(System::Drawing::Brush ^ brush, System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberSignature Language="F#" Value="member this.FillPath : System.Drawing.Brush * System.Drawing.Drawing2D.GraphicsPath -&gt; unit" Usage="graphics.FillPath (brush, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="brush">
          <span data-ttu-id="19ce0-2543">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2543">
              <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span>
          </span>
        </param>
        <param name="path">
          <span data-ttu-id="19ce0-2544">
            <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />，它表示要填充的路径。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2544">
              <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> that represents the path to fill.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2545">填充 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的内部。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2545">Fills the interior of a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2546">A<xref:System.Drawing.Drawing2D.GraphicsPath>由一系列的直线和曲线的段组成。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2546">A <xref:System.Drawing.Drawing2D.GraphicsPath> consists of a series of line and curve segments.</span></span> <span data-ttu-id="19ce0-2547">如果路径由表示`path`参数未闭合，添加额外的线段在最后一个点来闭合路径和第一个点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2547">If the path represented by the `path` parameter is not closed, an additional segment is added from the last point to the first point to close the path.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2548">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2548">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2549">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2549">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-2550">创建实心的红色画笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2550">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="19ce0-2551">创建图形路径对象。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2551">Creates a graphics path object.</span></span>  
  
-   <span data-ttu-id="19ce0-2552">向图形路径中添加一个椭圆。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2552">Adds an ellipse to the graphics path.</span></span>  
  
-   <span data-ttu-id="19ce0-2553">填充屏幕上的路径。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2553">Fills the path on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#103](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#103)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#103](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#103)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#103](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#103)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-2554">
            <paramref name="brush" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2554">
              <paramref name="brush" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-2555">- 或 -  <paramref name="path" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2555">-or-  <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FillPie">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-2556">填充由一对坐标、一个宽度、一个高度以及两条射线指定的椭圆所定义的扇形区的内部。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2556">Fills the interior of a pie section defined by an ellipse specified by a pair of coordinates, a width, a height, and two radial lines.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillPie">
      <MemberSignature Language="C#" Value="public void FillPie (System.Drawing.Brush brush, System.Drawing.Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillPie(class System.Drawing.Brush brush, valuetype System.Drawing.Rectangle rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillPie(System::Drawing::Brush ^ brush, System::Drawing::Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.FillPie : System.Drawing.Brush * System.Drawing.Rectangle * single * single -&gt; unit" Usage="graphics.FillPie (brush, rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="brush">
          <span data-ttu-id="19ce0-2557">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2557">
              <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span>
          </span>
        </param>
        <param name="rect">
          <span data-ttu-id="19ce0-2558">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它表示定义该扇形区所属的椭圆的边框。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2558">
              <see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle that defines the ellipse from which the pie section comes.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="19ce0-2559">从 x 轴沿顺时针方向旋转到扇形区第一个边所测得的角度（以度为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2559">Angle in degrees measured clockwise from the x-axis to the first side of the pie section.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="19ce0-2560">从 <c>startAngle</c> 参数沿顺时针方向旋转到扇形区第二个边所测得的角度（以度为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2560">Angle in degrees measured clockwise from the <c>startAngle</c> parameter to the second side of the pie section.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2561">填充椭圆所定义的扇形区的内部，该椭圆由 <see cref="T:System.Drawing.RectangleF" /> 结构和两条射线指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2561">Fills the interior of a pie section defined by an ellipse specified by a <see cref="T:System.Drawing.RectangleF" /> structure and two radial lines.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2562">此方法填充椭圆和两条射线相交的一段弧线，与弧的终结点所定义的扇形区的内部。椭圆的边框由定义。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2562">This method fills the interior of a pie section defined by an arc of an ellipse and the two radial lines that intersect with the endpoints of the arc. The ellipse is defined by the bounding rectangle.</span></span> <span data-ttu-id="19ce0-2563">扇形区包含定义的两条射线`startAngle`和`sweepAngle`参数和之间的交集的射线与椭圆弧。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2563">The pie section consists of the two radial lines defined by the `startAngle` and `sweepAngle` parameters and the arc between the intersections of those radial lines with the ellipse.</span></span>  
  
 <span data-ttu-id="19ce0-2564">如果`sweepAngle`参数的值大于 360 度或小于-360 度，就像它是 360 度或-360 度，分别处理。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2564">If the `sweepAngle` parameter is greater than 360 degrees or less than -360 degrees, it is treated as if it were 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2565">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2565">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2566">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2566">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-2567">创建实心的红色画笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2567">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="19ce0-2568">创建限定椭圆的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2568">Creates a rectangle that bounds an ellipse.</span></span>  
  
-   <span data-ttu-id="19ce0-2569">定义 （相对于 x 轴） 的开始角度和扫描角度 （不管是在顺时针方向）。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2569">Defines the start angle (relative to the x axis) and the sweep angle (both in a clockwise direction).</span></span>  
  
-   <span data-ttu-id="19ce0-2570">填充椭圆在屏幕上的饼形区域。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2570">Fills the pie-shaped area of the ellipse on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#104](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#104)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#104](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#104)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#104](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#104)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-2571">
            <paramref name="brush" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2571">
              <paramref name="brush" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FillPie">
      <MemberSignature Language="C#" Value="public void FillPie (System.Drawing.Brush brush, int x, int y, int width, int height, int startAngle, int sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillPie(class System.Drawing.Brush brush, int32 x, int32 y, int32 width, int32 height, int32 startAngle, int32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillPie(System::Drawing::Brush ^ brush, int x, int y, int width, int height, int startAngle, int sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.FillPie : System.Drawing.Brush * int * int * int * int * int * int -&gt; unit" Usage="graphics.FillPie (brush, x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="startAngle" Type="System.Int32" />
        <Parameter Name="sweepAngle" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="brush">
          <span data-ttu-id="19ce0-2572">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2572">
              <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="19ce0-2573">边框左上角的 x 坐标，该边框定义扇形区所属的椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2573">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="19ce0-2574">边框左上角的 y 坐标，该边框定义扇形区所属的椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2574">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="19ce0-2575">边框的宽度，该边框定义扇形区所属的椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2575">Width of the bounding rectangle that defines the ellipse from which the pie section comes.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="19ce0-2576">边框的高度，该边框定义扇形区所属的椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2576">Height of the bounding rectangle that defines the ellipse from which the pie section comes.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="19ce0-2577">从 x 轴沿顺时针方向旋转到扇形区第一个边所测得的角度（以度为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2577">Angle in degrees measured clockwise from the x-axis to the first side of the pie section.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="19ce0-2578">从 <c>startAngle</c> 参数沿顺时针方向旋转到扇形区第二个边所测得的角度（以度为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2578">Angle in degrees measured clockwise from the <c>startAngle</c> parameter to the second side of the pie section.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2579">填充由一对坐标、一个宽度、一个高度以及两条射线指定的椭圆所定义的扇形区的内部。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2579">Fills the interior of a pie section defined by an ellipse specified by a pair of coordinates, a width, a height, and two radial lines.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2580">此方法填充椭圆和两条射线相交的一段弧线，与弧的终结点所定义的扇形区的内部。椭圆的边框由定义。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2580">This method fills the interior of a pie section defined by an arc of an ellipse and the two radial lines that intersect with the endpoints of the arc. The ellipse is defined by the bounding rectangle.</span></span> <span data-ttu-id="19ce0-2581">扇形区包含定义的两条射线`startAngle`和`sweepAngle`参数和之间的交集的射线与椭圆弧。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2581">The pie section consists of the two radial lines defined by the `startAngle` and `sweepAngle` parameters and the arc between the intersections of those radial lines with the ellipse.</span></span>  
  
 <span data-ttu-id="19ce0-2582">如果`sweepAngle`参数的值大于 360 度或小于-360 度，就像它是 360 度或-360 度，分别处理。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2582">If the `sweepAngle` parameter is greater than 360 degrees or less than -360 degrees, it is treated as if it were 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2583">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2583">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2584">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2584">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-2585">创建实心的红色画笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2585">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="19ce0-2586">创建的位置和限定椭圆的矩形的大小。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2586">Creates the location and size of a rectangle that bounds an ellipse.</span></span>  
  
-   <span data-ttu-id="19ce0-2587">定义 （相对于 x 轴） 的开始角度和扫描角度 （不管是在顺时针方向）。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2587">Defines the start angle (relative to the x axis) and the sweep angle (both in a clockwise direction).</span></span>  
  
-   <span data-ttu-id="19ce0-2588">填充椭圆在屏幕上的饼形区域。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2588">Fills the pie-shaped area of the ellipse on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#105](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#105)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#105](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#105)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#105](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#105)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-2589">
            <paramref name="brush" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2589">
              <paramref name="brush" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FillPie">
      <MemberSignature Language="C#" Value="public void FillPie (System.Drawing.Brush brush, float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillPie(class System.Drawing.Brush brush, float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillPie(System::Drawing::Brush ^ brush, float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.FillPie : System.Drawing.Brush * single * single * single * single * single * single -&gt; unit" Usage="graphics.FillPie (brush, x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="brush">
          <span data-ttu-id="19ce0-2590">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2590">
              <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="19ce0-2591">边框左上角的 x 坐标，该边框定义扇形区所属的椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2591">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="19ce0-2592">边框左上角的 y 坐标，该边框定义扇形区所属的椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2592">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="19ce0-2593">边框的宽度，该边框定义扇形区所属的椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2593">Width of the bounding rectangle that defines the ellipse from which the pie section comes.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="19ce0-2594">边框的高度，该边框定义扇形区所属的椭圆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2594">Height of the bounding rectangle that defines the ellipse from which the pie section comes.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="19ce0-2595">从 x 轴沿顺时针方向旋转到扇形区第一个边所测得的角度（以度为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2595">Angle in degrees measured clockwise from the x-axis to the first side of the pie section.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="19ce0-2596">从 <c>startAngle</c> 参数沿顺时针方向旋转到扇形区第二个边所测得的角度（以度为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2596">Angle in degrees measured clockwise from the <c>startAngle</c> parameter to the second side of the pie section.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2597">填充由一对坐标、一个宽度、一个高度以及两条射线指定的椭圆所定义的扇形区的内部。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2597">Fills the interior of a pie section defined by an ellipse specified by a pair of coordinates, a width, a height, and two radial lines.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2598">此方法填充椭圆和两条射线相交的一段弧线，与弧的终结点所定义的扇形区的内部。椭圆的边框由定义。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2598">This method fills the interior of a pie section defined by an arc of an ellipse and the two radial lines that intersect with the endpoints of the arc. The ellipse is defined by the bounding rectangle.</span></span> <span data-ttu-id="19ce0-2599">扇形区包含定义的两条射线`startAngle`和`sweepAngle`参数和之间的交集的射线与椭圆弧。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2599">The pie section consists of the two radial lines defined by the `startAngle` and `sweepAngle` parameters, and the arc between the intersections of those radial lines with the ellipse.</span></span>  
  
 <span data-ttu-id="19ce0-2600">如果`sweepAngle`参数的值大于 360 度或小于-360 度，就像它是 360 度或-360 度，分别处理。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2600">If the `sweepAngle` parameter is greater than 360 degrees or less than -360 degrees, it is treated as if it were 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2601">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2601">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2602">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2602">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-2603">创建实心的红色画笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2603">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="19ce0-2604">创建的位置和限定椭圆的矩形的大小。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2604">Creates the location and size of a rectangle that bounds an ellipse.</span></span>  
  
-   <span data-ttu-id="19ce0-2605">定义 （相对于 x 轴） 的开始角度和扫描角度 （不管是在顺时针方向）。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2605">Defines the start angle (relative to the x axis) and the sweep angle (both in a clockwise direction).</span></span>  
  
-   <span data-ttu-id="19ce0-2606">填充椭圆在屏幕上的饼形区域。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2606">Fills the pie-shaped area of the ellipse on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#106](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#106)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#106](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#106)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#106](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#106)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-2607">
            <paramref name="brush" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2607">
              <paramref name="brush" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FillPolygon">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-2608">填充 <see cref="T:System.Drawing.Point" /> 结构指定的点数组所定义的多边形的内部。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2608">Fills the interior of a polygon defined by an array of points specified by <see cref="T:System.Drawing.Point" /> structures.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillPolygon">
      <MemberSignature Language="C#" Value="public void FillPolygon (System.Drawing.Brush brush, System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillPolygon(class System.Drawing.Brush brush, valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillPolygon(System::Drawing::Brush ^ brush, cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.FillPolygon : System.Drawing.Brush * System.Drawing.Point[] -&gt; unit" Usage="graphics.FillPolygon (brush, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="brush">
          <span data-ttu-id="19ce0-2609">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2609">
              <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span>
          </span>
        </param>
        <param name="points">
          <span data-ttu-id="19ce0-2610">
            <see cref="T:System.Drawing.Point" /> 结构数组，这些结构表示要填充的多边形的顶点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2610">Array of <see cref="T:System.Drawing.Point" /> structures that represent the vertices of the polygon to fill.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2611">填充 <see cref="T:System.Drawing.Point" /> 结构指定的点数组所定义的多边形的内部。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2611">Fills the interior of a polygon defined by an array of points specified by <see cref="T:System.Drawing.Point" /> structures.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2612">每个数组中的两个连续点指定多边形的边。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2612">Every two consecutive points in the array specify a side of the polygon.</span></span> <span data-ttu-id="19ce0-2613">此外，如果最后一个点和第一个点时间不一致，它们将指定多边形的右的端。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2613">In addition, if the last point and the first point do not coincide, they specify the closing side of the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2614">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2614">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2615">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2615">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-2616">创建纯蓝色画笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2616">Creates a solid blue brush.</span></span>  
  
-   <span data-ttu-id="19ce0-2617">创建七个点来定义多边形的一个数组。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2617">Creates an array of seven points to define a polygon.</span></span>  
  
-   <span data-ttu-id="19ce0-2618">填充屏幕上的多边形区域。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2618">Fills the polygonal area on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#107](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#107)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#107](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#107)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#107](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#107)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-2619">
            <paramref name="brush" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2619">
              <paramref name="brush" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-2620">- 或 -  <paramref name="points" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2620">-or-  <paramref name="points" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FillPolygon">
      <MemberSignature Language="C#" Value="public void FillPolygon (System.Drawing.Brush brush, System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillPolygon(class System.Drawing.Brush brush, valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillPolygon(System::Drawing::Brush ^ brush, cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.FillPolygon : System.Drawing.Brush * System.Drawing.PointF[] -&gt; unit" Usage="graphics.FillPolygon (brush, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="brush">
          <span data-ttu-id="19ce0-2621">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2621">
              <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span>
          </span>
        </param>
        <param name="points">
          <span data-ttu-id="19ce0-2622">
            <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构表示要填充的多边形的顶点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2622">Array of <see cref="T:System.Drawing.PointF" /> structures that represent the vertices of the polygon to fill.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2623">填充 <see cref="T:System.Drawing.PointF" /> 结构指定的点数组所定义的多边形的内部。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2623">Fills the interior of a polygon defined by an array of points specified by <see cref="T:System.Drawing.PointF" /> structures.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2624">每个数组中的两个连续点指定多边形的边。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2624">Every two consecutive points in the array specify a side of the polygon.</span></span> <span data-ttu-id="19ce0-2625">此外，如果最后一个点和第一个点时间不一致，它们将指定多边形的右的端。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2625">In addition, if the last point and the first point do not coincide, they specify the closing side of the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2626">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2626">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2627">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2627">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-2628">创建纯蓝色画笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2628">Creates a solid blue brush.</span></span>  
  
-   <span data-ttu-id="19ce0-2629">创建七个点来定义多边形的一个数组。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2629">Creates an array of seven points to define a polygon.</span></span>  
  
-   <span data-ttu-id="19ce0-2630">填充屏幕上的多边形区域。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2630">Fills the polygonal area on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#109](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#109)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#109](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#109)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#109](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#109)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-2631">
            <paramref name="brush" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2631">
              <paramref name="brush" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-2632">- 或 -  <paramref name="points" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2632">-or-  <paramref name="points" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FillPolygon">
      <MemberSignature Language="C#" Value="public void FillPolygon (System.Drawing.Brush brush, System.Drawing.Point[] points, System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillPolygon(class System.Drawing.Brush brush, valuetype System.Drawing.Point[] points, valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillPolygon(System::Drawing::Brush ^ brush, cli::array &lt;System::Drawing::Point&gt; ^ points, System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberSignature Language="F#" Value="member this.FillPolygon : System.Drawing.Brush * System.Drawing.Point[] * System.Drawing.Drawing2D.FillMode -&gt; unit" Usage="graphics.FillPolygon (brush, points, fillMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="brush">
          <span data-ttu-id="19ce0-2633">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2633">
              <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span>
          </span>
        </param>
        <param name="points">
          <span data-ttu-id="19ce0-2634">
            <see cref="T:System.Drawing.Point" /> 结构数组，这些结构表示要填充的多边形的顶点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2634">Array of <see cref="T:System.Drawing.Point" /> structures that represent the vertices of the polygon to fill.</span>
          </span>
        </param>
        <param name="fillMode">
          <span data-ttu-id="19ce0-2635">确定填充样式的 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举的成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2635">Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines the style of the fill.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2636">使用指定的填充模式填充 <see cref="T:System.Drawing.Point" /> 结构指定的点数组所定义的多边形的内部。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2636">Fills the interior of a polygon defined by an array of points specified by <see cref="T:System.Drawing.Point" /> structures using the specified fill mode.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2637">每个数组中的两个连续点指定多边形的边。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2637">Every two consecutive points in the array specify a side of the polygon.</span></span> <span data-ttu-id="19ce0-2638">此外，如果最后一个点和第一个点时间不一致，它们将指定多边形的右的端。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2638">In addition, if the last point and the first point do not coincide, they specify the closing side of the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2639">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2639">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2640">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2640">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-2641">创建纯蓝色画笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2641">Creates a solid blue brush.</span></span>  
  
-   <span data-ttu-id="19ce0-2642">创建七个点来定义多边形的一个数组。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2642">Creates an array of seven points to define a polygon.</span></span>  
  
-   <span data-ttu-id="19ce0-2643">将填充模式设置为<xref:System.Drawing.Drawing2D.FillMode.Winding>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2643">Sets the fill mode to <xref:System.Drawing.Drawing2D.FillMode.Winding>.</span></span>  
  
-   <span data-ttu-id="19ce0-2644">填充屏幕上的多边形区域。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2644">Fills the polygonal area on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#108](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#108)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#108](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#108)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#108](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#108)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-2645">
            <paramref name="brush" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2645">
              <paramref name="brush" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-2646">- 或 -  <paramref name="points" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2646">-or-  <paramref name="points" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FillPolygon">
      <MemberSignature Language="C#" Value="public void FillPolygon (System.Drawing.Brush brush, System.Drawing.PointF[] points, System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillPolygon(class System.Drawing.Brush brush, valuetype System.Drawing.PointF[] points, valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillPolygon(System::Drawing::Brush ^ brush, cli::array &lt;System::Drawing::PointF&gt; ^ points, System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberSignature Language="F#" Value="member this.FillPolygon : System.Drawing.Brush * System.Drawing.PointF[] * System.Drawing.Drawing2D.FillMode -&gt; unit" Usage="graphics.FillPolygon (brush, points, fillMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="brush">
          <span data-ttu-id="19ce0-2647">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2647">
              <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span>
          </span>
        </param>
        <param name="points">
          <span data-ttu-id="19ce0-2648">
            <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构表示要填充的多边形的顶点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2648">Array of <see cref="T:System.Drawing.PointF" /> structures that represent the vertices of the polygon to fill.</span>
          </span>
        </param>
        <param name="fillMode">
          <span data-ttu-id="19ce0-2649">确定填充样式的 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 枚举的成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2649">Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines the style of the fill.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2650">使用指定的填充模式填充 <see cref="T:System.Drawing.PointF" /> 结构指定的点数组所定义的多边形的内部。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2650">Fills the interior of a polygon defined by an array of points specified by <see cref="T:System.Drawing.PointF" /> structures using the specified fill mode.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2651">每个数组中的两个连续点指定多边形的边。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2651">Every two consecutive points in the array specify a side of the polygon.</span></span> <span data-ttu-id="19ce0-2652">此外，如果最后一个点和第一个点时间不一致，它们将指定多边形的右的端。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2652">In addition, if the last point and the first point do not coincide, they specify the closing side of the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2653">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2653">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2654">该代码执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2654">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="19ce0-2655">创建纯蓝色画笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2655">Creates a solid blue brush.</span></span>  
  
-   <span data-ttu-id="19ce0-2656">创建七个点来定义多边形的一个数组。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2656">Creates an array of seven points to define a polygon.</span></span>  
  
-   <span data-ttu-id="19ce0-2657">将填充模式设置为<xref:System.Drawing.Drawing2D.FillMode.Winding>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2657">Sets the fill mode to <xref:System.Drawing.Drawing2D.FillMode.Winding>.</span></span>  
  
-   <span data-ttu-id="19ce0-2658">填充屏幕上的多边形区域。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2658">Fills the polygonal area on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#110](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#110)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#110](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#110)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#110](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#110)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-2659">
            <paramref name="brush" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2659">
              <paramref name="brush" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-2660">- 或 -  <paramref name="points" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2660">-or-  <paramref name="points" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FillRectangle">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-2661">填充由一对坐标、一个宽度和一个高度指定的矩形的内部。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2661">Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillRectangle">
      <MemberSignature Language="C#" Value="public void FillRectangle (System.Drawing.Brush brush, System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillRectangle(class System.Drawing.Brush brush, valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillRectangle(System::Drawing::Brush ^ brush, System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.FillRectangle : System.Drawing.Brush * System.Drawing.Rectangle -&gt; unit" Usage="graphics.FillRectangle (brush, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="brush">
          <span data-ttu-id="19ce0-2662">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2662">
              <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span>
          </span>
        </param>
        <param name="rect">
          <span data-ttu-id="19ce0-2663">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它表示要填充的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2663">
              <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle to fill.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2664">填充 <see cref="T:System.Drawing.Rectangle" /> 结构指定的矩形的内部。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2664">Fills the interior of a rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2665">此方法填充由定义的矩形的内部`rect`参数，包括指定的左上角直到计算下边缘和下边缘。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2665">This method fills the interior of the rectangle defined by the `rect` parameter, including the specified upper-left corner and up to the calculated lower and bottom edges.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2666">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2666">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2667">该代码执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2667">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="19ce0-2668">创建纯蓝色画笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2668">Creates a solid blue brush.</span></span>  
  
-   <span data-ttu-id="19ce0-2669">创建一个矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2669">Creates a rectangle.</span></span>  
  
-   <span data-ttu-id="19ce0-2670">填充在屏幕上的矩形区域。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2670">Fills the rectangular area on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#111](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#111)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#111](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#111)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#111](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#111)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-2671">
            <paramref name="brush" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2671">
              <paramref name="brush" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FillRectangle">
      <MemberSignature Language="C#" Value="public void FillRectangle (System.Drawing.Brush brush, System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillRectangle(class System.Drawing.Brush brush, valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillRectangle(System::Drawing::Brush ^ brush, System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.FillRectangle : System.Drawing.Brush * System.Drawing.RectangleF -&gt; unit" Usage="graphics.FillRectangle (brush, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="brush">
          <span data-ttu-id="19ce0-2672">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2672">
              <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span>
          </span>
        </param>
        <param name="rect">
          <span data-ttu-id="19ce0-2673">
            <see cref="T:System.Drawing.RectangleF" /> 结构，它表示要填充的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2673">
              <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle to fill.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2674">填充 <see cref="T:System.Drawing.RectangleF" /> 结构指定的矩形的内部。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2674">Fills the interior of a rectangle specified by a <see cref="T:System.Drawing.RectangleF" /> structure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2675">此方法填充由定义的矩形的内部`rect`参数，包括指定的左上角直到计算下边缘和下边缘。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2675">This method fills the interior of the rectangle defined by the `rect` parameter, including the specified upper-left corner and up to the calculated lower and bottom edges.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2676">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2676">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2677">该代码执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2677">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="19ce0-2678">创建纯蓝色画笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2678">Creates a solid blue brush.</span></span>  
  
-   <span data-ttu-id="19ce0-2679">创建一个矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2679">Creates a rectangle.</span></span>  
  
-   <span data-ttu-id="19ce0-2680">填充在屏幕上的矩形区域。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2680">Fills the rectangular area on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#112](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#112)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#112](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#112)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#112](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#112)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-2681">
            <paramref name="brush" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2681">
              <paramref name="brush" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FillRectangle">
      <MemberSignature Language="C#" Value="public void FillRectangle (System.Drawing.Brush brush, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillRectangle(class System.Drawing.Brush brush, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillRectangle(System::Drawing::Brush ^ brush, int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.FillRectangle : System.Drawing.Brush * int * int * int * int -&gt; unit" Usage="graphics.FillRectangle (brush, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="brush">
          <span data-ttu-id="19ce0-2682">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2682">
              <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="19ce0-2683">要填充的矩形的左上角的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2683">The x-coordinate of the upper-left corner of the rectangle to fill.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="19ce0-2684">要填充的矩形的左上角的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2684">The y-coordinate of the upper-left corner of the rectangle to fill.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="19ce0-2685">要填充的矩形的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2685">Width of the rectangle to fill.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="19ce0-2686">要填充的矩形的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2686">Height of the rectangle to fill.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2687">填充由一对坐标、一个宽度和一个高度指定的矩形的内部。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2687">Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2688">此方法填充由定义的矩形的内部`x`， `y`， `width`，和`height`参数，包括指定的左上角直到计算下边缘和下边缘。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2688">This method fills the interior of the rectangle defined by the`x`, `y`, `width`, and `height` parameters, including the specified upper-left corner and up to the calculated lower and bottom edges.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2689">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2689">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2690">该代码执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2690">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="19ce0-2691">创建纯蓝色画笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2691">Creates a solid blue brush.</span></span>  
  
-   <span data-ttu-id="19ce0-2692">创建的位置和大小的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2692">Creates the location and size of a rectangle.</span></span>  
  
-   <span data-ttu-id="19ce0-2693">填充在屏幕上的矩形区域。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2693">Fills the rectangular area on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#113](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#113)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#113](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#113)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#113](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#113)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-2694">
            <paramref name="brush" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2694">
              <paramref name="brush" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FillRectangle">
      <MemberSignature Language="C#" Value="public void FillRectangle (System.Drawing.Brush brush, float x, float y, float width, float height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillRectangle(class System.Drawing.Brush brush, float32 x, float32 y, float32 width, float32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillRectangle(System::Drawing::Brush ^ brush, float x, float y, float width, float height);" />
      <MemberSignature Language="F#" Value="member this.FillRectangle : System.Drawing.Brush * single * single * single * single -&gt; unit" Usage="graphics.FillRectangle (brush, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="brush">
          <span data-ttu-id="19ce0-2695">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2695">
              <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="19ce0-2696">要填充的矩形的左上角的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2696">The x-coordinate of the upper-left corner of the rectangle to fill.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="19ce0-2697">要填充的矩形的左上角的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2697">The y-coordinate of the upper-left corner of the rectangle to fill.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="19ce0-2698">要填充的矩形的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2698">Width of the rectangle to fill.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="19ce0-2699">要填充的矩形的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2699">Height of the rectangle to fill.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2700">填充由一对坐标、一个宽度和一个高度指定的矩形的内部。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2700">Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2701">此方法填充由定义的矩形的内部`x`， `y`， `width`，和`height`参数，包括指定的左上角直到计算下边缘和下边缘。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2701">This method fills the interior of the rectangle defined by the `x`, `y`, `width`, and `height` parameters, including the specified upper-left corner and up to the calculated lower and bottom edges.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2702">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2702">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2703">该代码执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2703">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="19ce0-2704">创建纯蓝色画笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2704">Creates a solid blue brush.</span></span>  
  
-   <span data-ttu-id="19ce0-2705">创建的位置和大小的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2705">Creates the location and size of a rectangle.</span></span>  
  
-   <span data-ttu-id="19ce0-2706">填充在屏幕上的矩形区域。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2706">Fills the rectangular area on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#114](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#114)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#114](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#114)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#114](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#114)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-2707">
            <paramref name="brush" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2707">
              <paramref name="brush" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FillRectangles">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-2708">填充由 <see cref="T:System.Drawing.Rectangle" /> 结构指定的一系列矩形的内部。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2708">Fills the interiors of a series of rectangles specified by <see cref="T:System.Drawing.Rectangle" /> structures.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillRectangles">
      <MemberSignature Language="C#" Value="public void FillRectangles (System.Drawing.Brush brush, System.Drawing.Rectangle[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillRectangles(class System.Drawing.Brush brush, valuetype System.Drawing.Rectangle[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillRectangles(System::Drawing::Brush ^ brush, cli::array &lt;System::Drawing::Rectangle&gt; ^ rects);" />
      <MemberSignature Language="F#" Value="member this.FillRectangles : System.Drawing.Brush * System.Drawing.Rectangle[] -&gt; unit" Usage="graphics.FillRectangles (brush, rects)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="rects" Type="System.Drawing.Rectangle[]" />
      </Parameters>
      <Docs>
        <param name="brush">
          <span data-ttu-id="19ce0-2709">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2709">
              <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span>
          </span>
        </param>
        <param name="rects">
          <span data-ttu-id="19ce0-2710">
            <see cref="T:System.Drawing.Rectangle" /> 结构数组，这些结构表示要填充的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2710">Array of <see cref="T:System.Drawing.Rectangle" /> structures that represent the rectangles to fill.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2711">填充由 <see cref="T:System.Drawing.Rectangle" /> 结构指定的一系列矩形的内部。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2711">Fills the interiors of a series of rectangles specified by <see cref="T:System.Drawing.Rectangle" /> structures.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19ce0-2712">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2712">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2713">该代码执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2713">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="19ce0-2714">创建纯蓝色画笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2714">Creates a solid blue brush.</span></span>  
  
-   <span data-ttu-id="19ce0-2715">创建三个矩形的数组。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2715">Creates an array of three rectangles.</span></span>  
  
-   <span data-ttu-id="19ce0-2716">填充在屏幕上的三个矩形区域。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2716">Fills the three rectangular areas on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#115](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#115)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#115](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#115)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#115](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#115)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-2717">
            <paramref name="brush" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2717">
              <paramref name="brush" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-2718">- 或 -  <paramref name="rects" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2718">-or-  <paramref name="rects" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="19ce0-2719">
            <paramref name="rects" /> 是一个长度为零的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2719">
              <paramref name="rects" /> is a zero-length array.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FillRectangles">
      <MemberSignature Language="C#" Value="public void FillRectangles (System.Drawing.Brush brush, System.Drawing.RectangleF[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillRectangles(class System.Drawing.Brush brush, valuetype System.Drawing.RectangleF[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillRectangles(System::Drawing::Brush ^ brush, cli::array &lt;System::Drawing::RectangleF&gt; ^ rects);" />
      <MemberSignature Language="F#" Value="member this.FillRectangles : System.Drawing.Brush * System.Drawing.RectangleF[] -&gt; unit" Usage="graphics.FillRectangles (brush, rects)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="rects" Type="System.Drawing.RectangleF[]" />
      </Parameters>
      <Docs>
        <param name="brush">
          <span data-ttu-id="19ce0-2720">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2720">
              <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span>
          </span>
        </param>
        <param name="rects">
          <span data-ttu-id="19ce0-2721">
            <see cref="T:System.Drawing.RectangleF" /> 结构数组，这些结构表示要填充的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2721">Array of <see cref="T:System.Drawing.RectangleF" /> structures that represent the rectangles to fill.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2722">填充由 <see cref="T:System.Drawing.RectangleF" /> 结构指定的一系列矩形的内部。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2722">Fills the interiors of a series of rectangles specified by <see cref="T:System.Drawing.RectangleF" /> structures.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19ce0-2723">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2723">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2724">该代码执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2724">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="19ce0-2725">创建纯蓝色画笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2725">Creates a solid blue brush.</span></span>  
  
-   <span data-ttu-id="19ce0-2726">创建三个矩形的数组。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2726">Creates an array of three rectangles.</span></span>  
  
-   <span data-ttu-id="19ce0-2727">填充在屏幕上的三个矩形区域。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2727">Fills the three rectangular areas on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#116](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#116)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#116](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#116)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#116](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#116)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-2728">
            <paramref name="brush" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2728">
              <paramref name="brush" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-2729">- 或 -  <paramref name="rects" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2729">-or-  <paramref name="rects" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="19ce0-2730">
            <paramref name="Rects" /> 是一个长度为零的数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2730">
              <paramref name="Rects" /> is a zero-length array.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FillRegion">
      <MemberSignature Language="C#" Value="public void FillRegion (System.Drawing.Brush brush, System.Drawing.Region region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillRegion(class System.Drawing.Brush brush, class System.Drawing.Region region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillRegion(System::Drawing::Brush ^ brush, System::Drawing::Region ^ region);" />
      <MemberSignature Language="F#" Value="member this.FillRegion : System.Drawing.Brush * System.Drawing.Region -&gt; unit" Usage="graphics.FillRegion (brush, region)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="region" Type="System.Drawing.Region" />
      </Parameters>
      <Docs>
        <param name="brush">
          <span data-ttu-id="19ce0-2731">确定填充特性的 <see cref="T:System.Drawing.Brush" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2731">
              <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span>
          </span>
        </param>
        <param name="region">
          <span data-ttu-id="19ce0-2732">
            <see cref="T:System.Drawing.Region" />，它表示要填充的区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2732">
              <see cref="T:System.Drawing.Region" /> that represents the area to fill.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2733">填充 <see cref="T:System.Drawing.Region" /> 的内部。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2733">Fills the interior of a <see cref="T:System.Drawing.Region" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2734">A<xref:System.Drawing.Region>由组成矩形和路径。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2734">A <xref:System.Drawing.Region> is composed of rectangles and paths.</span></span> <span data-ttu-id="19ce0-2735">如果区域未关闭，添加额外的线段在最后一个点的第一个点，以将其关闭。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2735">If the region is not closed, an additional segment is added from the last point to the first point to close it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2736">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2736">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2737">该代码执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2737">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="19ce0-2738">创建纯蓝色画笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2738">Creates a solid blue brush.</span></span>  
  
-   <span data-ttu-id="19ce0-2739">创建一个矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2739">Creates a rectangle.</span></span>  
  
-   <span data-ttu-id="19ce0-2740">创建一个矩形区域。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2740">Creates a rectangular region.</span></span>  
  
-   <span data-ttu-id="19ce0-2741">填充在屏幕上的矩形区域。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2741">Fills the rectangular region on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#117](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#117)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#117](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#117)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#117](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#117)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-2742">
            <paramref name="brush" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2742">
              <paramref name="brush" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="19ce0-2743">- 或 -  <paramref name="region" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2743">-or-  <paramref name="region" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Graphics ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Graphics ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="graphics.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-2744">在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2744">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Flush">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-2745">强制执行所有挂起的图形操作并立即返回而不等待操作完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2745">Forces execution of all pending graphics operations and returns immediately without waiting for the operations to finish.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="graphics.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-2746">强制执行所有挂起的图形操作并立即返回而不等待操作完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2746">Forces execution of all pending graphics operations and returns immediately without waiting for the operations to finish.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2747">此方法开始刷新，并立即返回，而不必等待任何当前正在执行的图形操作完成。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2747">This method starts a flush and returns immediately without waiting for any currently executing graphics operation to finish.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush (System.Drawing.Drawing2D.FlushIntention intention);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush(valuetype System.Drawing.Drawing2D.FlushIntention intention) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.Flush(System.Drawing.Drawing2D.FlushIntention)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush (intention As FlushIntention)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush(System::Drawing::Drawing2D::FlushIntention intention);" />
      <MemberSignature Language="F#" Value="member this.Flush : System.Drawing.Drawing2D.FlushIntention -&gt; unit" Usage="graphics.Flush intention" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intention" Type="System.Drawing.Drawing2D.FlushIntention" />
      </Parameters>
      <Docs>
        <param name="intention">
          <span data-ttu-id="19ce0-2748">
            <see cref="T:System.Drawing.Drawing2D.FlushIntention" /> 枚举的成员，它指定该方法是立即返回还是等待所有现有的操作都完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2748">Member of the <see cref="T:System.Drawing.Drawing2D.FlushIntention" /> enumeration that specifies whether the method returns immediately or waits for any existing operations to finish.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2749">用此方法强制执行所有挂起的图形操作，按照指定，等待或者不等待，在操作完成之前返回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2749">Forces execution of all pending graphics operations with the method waiting or not waiting, as specified, to return before the operations finish.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2750">值为<xref:System.Drawing.Drawing2D.FlushIntention.Flush>为`intention`参数指定该方法返回在开始刷新，而值后立即<xref:System.Drawing.Drawing2D.FlushIntention.Sync>指定，该方法在返回之前一直等到所有现有的操作完成。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2750">A value of <xref:System.Drawing.Drawing2D.FlushIntention.Flush> for the `intention` parameter specifies that the method return immediately after beginning the flush, while a value of <xref:System.Drawing.Drawing2D.FlushIntention.Sync> specifies that the method wait before returning until any existing operations finish.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromHdc">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-2751">从设备上下文的指定句柄创建新的 <see cref="T:System.Drawing.Graphics" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2751">Creates a new <see cref="T:System.Drawing.Graphics" /> from the specified handle to a device context.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromHdc">
      <MemberSignature Language="C#" Value="public static System.Drawing.Graphics FromHdc (IntPtr hdc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Graphics FromHdc(native int hdc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FromHdc(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHdc (hdc As IntPtr) As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Graphics ^ FromHdc(IntPtr hdc);" />
      <MemberSignature Language="F#" Value="static member FromHdc : nativeint -&gt; System.Drawing.Graphics" Usage="System.Drawing.Graphics.FromHdc hdc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hdc" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hdc">
          <span data-ttu-id="19ce0-2752">设备上下文的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2752">Handle to a device context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2753">从设备上下文的指定句柄创建新的 <see cref="T:System.Drawing.Graphics" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2753">Creates a new <see cref="T:System.Drawing.Graphics" /> from the specified handle to a device context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19ce0-2754">此方法为指定的设备上下文返回新的 <see cref="T:System.Drawing.Graphics" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2754">This method returns a new <see cref="T:System.Drawing.Graphics" /> for the specified device context.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2755">始终应调用<xref:System.Drawing.Graphics.Dispose%2A>方法来释放<xref:System.Drawing.Graphics>和相关资源创建的<xref:System.Drawing.Graphics.FromHdc%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2755">You should always call the <xref:System.Drawing.Graphics.Dispose%2A> method to release the <xref:System.Drawing.Graphics> and related resources created by the <xref:System.Drawing.Graphics.FromHdc%2A> method.</span></span>  
  
 <span data-ttu-id="19ce0-2756">即使显示设备具有关联的 ICM 颜色配置文件，[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]不将默认使用该配置文件。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2756">Even if the display device has an associated ICM color profile, [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] will not use that profile by default.</span></span> <span data-ttu-id="19ce0-2757">若要启用的 ICM <xref:System.Drawing.Graphics>，构造<xref:System.Drawing.Graphics>从 HDC 后 HDC （和 ICM_ON） 传递给`SetICMMode`函数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2757">To enable ICM for a <xref:System.Drawing.Graphics>, construct the <xref:System.Drawing.Graphics> from an HDC after you pass the HDC (and ICM_ON) to the `SetICMMode` function.</span></span> <span data-ttu-id="19ce0-2758">然后通过任何绘图<xref:System.Drawing.Graphics>将根据关联到显示设备的 ICM 配置文件调整。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2758">Then any drawing done by the <xref:System.Drawing.Graphics> will be adjusted according to the ICM profile associated with the display device.</span></span> <span data-ttu-id="19ce0-2759">启用 ICM 将导致性能降低。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2759">Enabling ICM will result in slower performance.</span></span>  
  
 <span data-ttu-id="19ce0-2760">调用时的设备上下文 （映射模式、 逻辑单元，以及类似的） 的状态<xref:System.Drawing.Graphics.FromHdc%2A>可能会影响呈现通过<xref:System.Drawing.Graphics>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2760">The state of the device context (mapping mode, logical unit, and the like) at the time you call <xref:System.Drawing.Graphics.FromHdc%2A> can affect rendering done by the <xref:System.Drawing.Graphics>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2761">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2761">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2762">该代码执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2762">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="19ce0-2763">创建了一个内部指针类型变量`hdc`并将它设置为窗体的图形对象的设备上下文的句柄。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2763">Creates an internal pointer type variable `hdc` and sets it to the handle to the device context of the graphics object of the form.</span></span>  
  
-   <span data-ttu-id="19ce0-2764">创建新的图形对象使用`hdc`。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2764">Creates a new graphics object using `hdc`.</span></span>  
  
-   <span data-ttu-id="19ce0-2765">（在屏幕） 绘制一个具有新的图形对象的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2765">Draws a rectangle with the new graphics object (on the screen).</span></span>  
  
-   <span data-ttu-id="19ce0-2766">释放新的图形对象使用`hdc`。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2766">Releases the new graphics object using `hdc`.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#118](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#118)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#118](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#118)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#118](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#118)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromHdc">
      <MemberSignature Language="C#" Value="public static System.Drawing.Graphics FromHdc (IntPtr hdc, IntPtr hdevice);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Graphics FromHdc(native int hdc, native int hdevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FromHdc(System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHdc (hdc As IntPtr, hdevice As IntPtr) As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Graphics ^ FromHdc(IntPtr hdc, IntPtr hdevice);" />
      <MemberSignature Language="F#" Value="static member FromHdc : nativeint * nativeint -&gt; System.Drawing.Graphics" Usage="System.Drawing.Graphics.FromHdc (hdc, hdevice)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hdc" Type="System.IntPtr" />
        <Parameter Name="hdevice" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hdc">
          <span data-ttu-id="19ce0-2767">设备上下文的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2767">Handle to a device context.</span>
          </span>
        </param>
        <param name="hdevice">
          <span data-ttu-id="19ce0-2768">设备的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2768">Handle to a device.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2769">从设备上下文的指定句柄和设备的句柄创建新的 <see cref="T:System.Drawing.Graphics" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2769">Creates a new <see cref="T:System.Drawing.Graphics" /> from the specified handle to a device context and handle to a device.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19ce0-2770">此方法为指定的设备上下文和设备返回新的 <see cref="T:System.Drawing.Graphics" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2770">This method returns a new <see cref="T:System.Drawing.Graphics" /> for the specified device context and device.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2771">始终应调用<xref:System.Drawing.Graphics.Dispose%2A>方法来释放<xref:System.Drawing.Graphics>和相关资源创建的<xref:System.Drawing.Graphics.FromHdc%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2771">You should always call the <xref:System.Drawing.Graphics.Dispose%2A> method to release the <xref:System.Drawing.Graphics> and related resources created by the <xref:System.Drawing.Graphics.FromHdc%2A> method.</span></span>  
  
 <span data-ttu-id="19ce0-2772">即使显示设备具有关联的 ICM 颜色配置文件，[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]不将默认使用该配置文件。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2772">Even if the display device has an associated ICM color profile, [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] will not use that profile by default.</span></span> <span data-ttu-id="19ce0-2773">若要启用的 ICM <xref:System.Drawing.Graphics>，构造<xref:System.Drawing.Graphics>从 HDC 后 HDC （和 ICM_ON） 传递给`SetICMMode`函数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2773">To enable ICM for a <xref:System.Drawing.Graphics>, construct the <xref:System.Drawing.Graphics> from an HDC after you pass the HDC (and ICM_ON) to the `SetICMMode` function.</span></span> <span data-ttu-id="19ce0-2774">然后通过任何绘图<xref:System.Drawing.Graphics>将根据关联到显示设备的 ICM 配置文件调整。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2774">Then any drawing done by the <xref:System.Drawing.Graphics> will be adjusted according to the ICM profile associated with the display device.</span></span> <span data-ttu-id="19ce0-2775">启用 ICM 将导致性能降低。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2775">Enabling ICM will result in slower performance.</span></span>  
  
 <span data-ttu-id="19ce0-2776">调用时的设备上下文 （映射模式、 逻辑单元，以及类似的） 的状态<xref:System.Drawing.Graphics.FromHdc%2A>可能会影响呈现通过<xref:System.Drawing.Graphics>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2776">The state of the device context (mapping mode, logical unit, and the like) at the time you call <xref:System.Drawing.Graphics.FromHdc%2A> can affect rendering done by the <xref:System.Drawing.Graphics>.</span></span>  
  
 <span data-ttu-id="19ce0-2777">查询特定打印机功能通常用于设备句柄。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2777">The device handle is typically used to query specific printer capabilities.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="19ce0-2778">用于访问非托管代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2778">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="19ce0-2779">相关枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2779">Related enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="FromHdcInternal">
      <MemberSignature Language="C#" Value="public static System.Drawing.Graphics FromHdcInternal (IntPtr hdc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Graphics FromHdcInternal(native int hdc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FromHdcInternal(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHdcInternal (hdc As IntPtr) As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Graphics ^ FromHdcInternal(IntPtr hdc);" />
      <MemberSignature Language="F#" Value="static member FromHdcInternal : nativeint -&gt; System.Drawing.Graphics" Usage="System.Drawing.Graphics.FromHdcInternal hdc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hdc" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hdc">
          <span data-ttu-id="19ce0-2780">设备上下文的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2780">Handle to a device context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2781">返回指定设备上下文的 <see cref="T:System.Drawing.Graphics" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2781">Returns a <see cref="T:System.Drawing.Graphics" /> for the specified device context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19ce0-2782">指定设备上下文的 <see cref="T:System.Drawing.Graphics" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2782">A <see cref="T:System.Drawing.Graphics" /> for the specified device context.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2783">不应使用此方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2783">This method should not be used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromHwnd">
      <MemberSignature Language="C#" Value="public static System.Drawing.Graphics FromHwnd (IntPtr hwnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Graphics FromHwnd(native int hwnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FromHwnd(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHwnd (hwnd As IntPtr) As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Graphics ^ FromHwnd(IntPtr hwnd);" />
      <MemberSignature Language="F#" Value="static member FromHwnd : nativeint -&gt; System.Drawing.Graphics" Usage="System.Drawing.Graphics.FromHwnd hwnd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwnd" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hwnd">
          <span data-ttu-id="19ce0-2784">窗口的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2784">Handle to a window.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2785">从窗口的指定句柄创建新的 <see cref="T:System.Drawing.Graphics" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2785">Creates a new <see cref="T:System.Drawing.Graphics" /> from the specified handle to a window.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19ce0-2786">此方法为指定的窗口句柄返回新的 <see cref="T:System.Drawing.Graphics" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2786">This method returns a new <see cref="T:System.Drawing.Graphics" /> for the specified window handle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2787">始终应调用<xref:System.Drawing.Graphics.Dispose%2A>方法来释放<xref:System.Drawing.Graphics>和相关资源创建的<xref:System.Drawing.Graphics.FromHwnd%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2787">You should always call the <xref:System.Drawing.Graphics.Dispose%2A> method to release the <xref:System.Drawing.Graphics> and related resources created by the <xref:System.Drawing.Graphics.FromHwnd%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2788">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序，以及`thisForm`、<xref:System.Windows.Forms.Form>示例。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2788">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler, as well as `thisForm`, the <xref:System.Windows.Forms.Form> for the example.</span></span> <span data-ttu-id="19ce0-2789">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2789">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-2790">创建一个新的内部指针变量`hwnd`并将它设置为示例的窗体的句柄。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2790">Creates a new internal pointer variable `hwnd` and sets it to the handle of the example's form.</span></span>  
  
-   <span data-ttu-id="19ce0-2791">创建一个新<xref:System.Drawing.Graphics>从的句柄。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2791">Creates a new <xref:System.Drawing.Graphics> from the handle.</span></span>  
  
-   <span data-ttu-id="19ce0-2792">向新绘制一个矩形<xref:System.Drawing.Graphics>使用红色钢笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2792">Draws a rectangle to the new <xref:System.Drawing.Graphics> using a red pen.</span></span>  
  
-   <span data-ttu-id="19ce0-2793">释放新<xref:System.Drawing.Graphics>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2793">Disposes the new <xref:System.Drawing.Graphics>.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#119](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#119)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#119](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#119)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#119](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#119)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="19ce0-2794">用于访问非托管代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2794">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="19ce0-2795">相关枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2795">Related enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="FromHwndInternal">
      <MemberSignature Language="C#" Value="public static System.Drawing.Graphics FromHwndInternal (IntPtr hwnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Graphics FromHwndInternal(native int hwnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FromHwndInternal(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHwndInternal (hwnd As IntPtr) As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Graphics ^ FromHwndInternal(IntPtr hwnd);" />
      <MemberSignature Language="F#" Value="static member FromHwndInternal : nativeint -&gt; System.Drawing.Graphics" Usage="System.Drawing.Graphics.FromHwndInternal hwnd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwnd" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hwnd">
          <span data-ttu-id="19ce0-2796">窗口的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2796">Handle to a window.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2797">创建指定 Windows 句柄的新 <see cref="T:System.Drawing.Graphics" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2797">Creates a new <see cref="T:System.Drawing.Graphics" /> for the specified windows handle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19ce0-2798">指定窗口句柄的 <see cref="T:System.Drawing.Graphics" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2798">A <see cref="T:System.Drawing.Graphics" /> for the specified window handle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2799">不应使用此方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2799">This method should not be used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromImage">
      <MemberSignature Language="C#" Value="public static System.Drawing.Graphics FromImage (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Graphics FromImage(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FromImage(System.Drawing.Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Graphics ^ FromImage(System::Drawing::Image ^ image);" />
      <MemberSignature Language="F#" Value="static member FromImage : System.Drawing.Image -&gt; System.Drawing.Graphics" Usage="System.Drawing.Graphics.FromImage image" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="image">
          <span data-ttu-id="19ce0-2800">从中创建新 <see cref="T:System.Drawing.Graphics" /> 的 <see cref="T:System.Drawing.Image" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2800">
              <see cref="T:System.Drawing.Image" /> from which to create the new <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2801">从指定的 <see cref="T:System.Drawing.Image" /> 创建新的 <see cref="T:System.Drawing.Graphics" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2801">Creates a new <see cref="T:System.Drawing.Graphics" /> from the specified <see cref="T:System.Drawing.Image" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19ce0-2802">此方法为指定的 <see cref="T:System.Drawing.Image" /> 返回一个新的 <see cref="T:System.Drawing.Graphics" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2802">This method returns a new <see cref="T:System.Drawing.Graphics" /> for the specified <see cref="T:System.Drawing.Image" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2803">如果该图像索引的像素格式，此方法将引发异常，消息，"图形对象无法创建从映像具有索引的像素格式。"</span><span class="sxs-lookup"><span data-stu-id="19ce0-2803">If the image has an indexed pixel format, this method throws an exception with the message, "A Graphics object cannot be created from an image that has an indexed pixel format."</span></span> <span data-ttu-id="19ce0-2804">以下列表中显示的索引的像素格式。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2804">The indexed pixel formats are shown in the following list.</span></span>  
  
-   <xref:System.Drawing.Imaging.PixelFormat.Format1bppIndexed>  
  
-   <xref:System.Drawing.Imaging.PixelFormat.Format4bppIndexed>  
  
-   <xref:System.Drawing.Imaging.PixelFormat.Format8bppIndexed>  
  
 <span data-ttu-id="19ce0-2805">你可以通过使用索引的图像保存为另一种格式<xref:System.Drawing.Image.Save%28System.String%2CSystem.Drawing.Imaging.ImageFormat%29>方法，然后检索<xref:System.Drawing.Graphics>新映像的对象。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2805">You can save the indexed image as another format by using the <xref:System.Drawing.Image.Save%28System.String%2CSystem.Drawing.Imaging.ImageFormat%29> method and then retrieve a <xref:System.Drawing.Graphics> object for the new image.</span></span>  
  
 <span data-ttu-id="19ce0-2806">如果该图像任一以下的像素格式，则此方法还会引发异常。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2806">This method also throws an exception if the image has any of the following pixel formats.</span></span>  
  
-   <xref:System.Drawing.Imaging.PixelFormat.Undefined>  
  
-   <xref:System.Drawing.Imaging.PixelFormat.DontCare>  
  
-   <xref:System.Drawing.Imaging.PixelFormat.Format16bppArgb1555>  
  
-   <xref:System.Drawing.Imaging.PixelFormat.Format16bppGrayScale>  
  
 <span data-ttu-id="19ce0-2807">始终应调用<xref:System.Drawing.Graphics.Dispose%2A>方法来释放<xref:System.Drawing.Graphics>和相关资源创建的<xref:System.Drawing.Graphics.FromImage%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2807">You should always call the <xref:System.Drawing.Graphics.Dispose%2A> method to release the <xref:System.Drawing.Graphics> and related resources created by the <xref:System.Drawing.Graphics.FromImage%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2808">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2808">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2809">该代码执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2809">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="19ce0-2810">创建<xref:System.Drawing.Image>从一种图形文件 sampimag.jpg 位于同的示例文件夹中。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2810">Creates an <xref:System.Drawing.Image> from a graphics file SampImag.jpg in the example folder.</span></span>  
  
-   <span data-ttu-id="19ce0-2811">创建<xref:System.Drawing.Graphics>从<xref:System.Drawing.Image>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2811">Creates a <xref:System.Drawing.Graphics> from the <xref:System.Drawing.Image>.</span></span>  
  
-   <span data-ttu-id="19ce0-2812">通过填充其中的一个矩形来改变该图像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2812">Alters the image by filling a rectangle within it.</span></span>  
  
-   <span data-ttu-id="19ce0-2813">绘制<xref:System.Drawing.Image>到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2813">Draws the <xref:System.Drawing.Image> to the screen.</span></span>  
  
-   <span data-ttu-id="19ce0-2814">释放创建<xref:System.Drawing.Graphics>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2814">Releases the created <xref:System.Drawing.Graphics>.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#120](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#120)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#120](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#120)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#120](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#120)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="19ce0-2815">
            <paramref name="image" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2815">
              <paramref name="image" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Exception">
          <span data-ttu-id="19ce0-2816">
            <paramref name="image" /> 具有索引像素格式，或者格式未定义。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2816">
              <paramref name="image" /> has an indexed pixel format or its format is undefined.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetContextInfo">
      <MemberSignature Language="C#" Value="public object GetContextInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetContextInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.GetContextInfo" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContextInfo () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetContextInfo();" />
      <MemberSignature Language="F#" Value="member this.GetContextInfo : unit -&gt; obj" Usage="graphics.GetContextInfo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-2817">获取累积的图形上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2817">Gets the cumulative graphics context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19ce0-2818">一个 <see cref="T:System.Object" />，表示累积的图形上下文。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2818">An <see cref="T:System.Object" /> representing the cumulative graphics context.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2819">返回值是一个对象数组，其中的第一个元素包含累积的剪辑区域，第二个元素包含累积平移/变换矩阵。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2819">The return value is an object array where the first element contains the cumulative clip region and the second element contains the cumulative translate/transform matrix.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHalftonePalette">
      <MemberSignature Language="C#" Value="public static IntPtr GetHalftonePalette ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetHalftonePalette() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.GetHalftonePalette" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHalftonePalette () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetHalftonePalette();" />
      <MemberSignature Language="F#" Value="static member GetHalftonePalette : unit -&gt; nativeint" Usage="System.Drawing.Graphics.GetHalftonePalette " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-2820">获取当前 Windows 的半色调调色板的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2820">Gets a handle to the current Windows halftone palette.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19ce0-2821">指定调色板的句柄的内部指针。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2821">Internal pointer that specifies the handle to the palette.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2822">用途<xref:System.Drawing.Graphics.GetHalftonePalette%2A>方法是使[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]当显示使用每个像素的 8 位时产生更好的质量半色调。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2822">The purpose of the <xref:System.Drawing.Graphics.GetHalftonePalette%2A> method is to enable [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] to produce a better quality halftone when the display uses 8 bits per pixel.</span></span> <span data-ttu-id="19ce0-2823">若要显示使用半色调调色板的映像，请使用以下过程。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2823">To display an image using the halftone palette, use the following procedure.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2824">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2824">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2825">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2825">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-2826">定义互操作性<xref:System.Runtime.InteropServices.DllImportAttribute>Windows DLL 文件 gdi32.dll，其中包含所需的属性[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]函数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2826">Defines interoperability <xref:System.Runtime.InteropServices.DllImportAttribute> attributes for the Windows DLL file gdi32.dll, which contains the necessary [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] functions.</span></span>  
  
-   <span data-ttu-id="19ce0-2827">定义`SelectPalette`和`RealizePalette`，即外部该 DLL 中的函数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2827">Defines the `SelectPalette` and `RealizePalette` functions in that DLL as external.</span></span>  
  
-   <span data-ttu-id="19ce0-2828">从现有的图像文件 sampimag.jpg 位于同 （它必须是在与示例代码文件相同的文件夹中） 创建的映像并将图像绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2828">Creates an image from an existing image file SampImag.jpg (which must be in the same folder as the example code file) and draws the image to the screen.</span></span>  
  
-   <span data-ttu-id="19ce0-2829">创建内部指针类型变量，并将其值分别设置为图形对象与当前 Windows 的半色调调色板的句柄。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2829">Creates internal pointer type variables and sets their values to the handle to the graphics object and to the current Windows halftone palette, respectively.</span></span>  
  
-   <span data-ttu-id="19ce0-2830">选择和实现半色调调色板。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2830">Selects and realizes the halftone palette.</span></span>  
  
-   <span data-ttu-id="19ce0-2831">创建新的图形对象使用`hdc`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2831">Creates a new graphics object using the `hdc` parameter.</span></span>  
  
-   <span data-ttu-id="19ce0-2832">重新绘制的图像。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2832">Draws the image again.</span></span>  
  
-   <span data-ttu-id="19ce0-2833">释放设备上下文的句柄。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2833">Releases the handle to the device context.</span></span>  
  
 <span data-ttu-id="19ce0-2834">结果是示例图像的两种呈现形式： 一种具有 16 位调色板，另一个使用 8 位调色板。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2834">The result is two renderings of the sample image: one with the 16-bit palette and one with the 8-bit palette.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#121](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#121)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#121](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#121)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#121](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#121)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHdc">
      <MemberSignature Language="C#" Value="public IntPtr GetHdc ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int GetHdc() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.GetHdc" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHdc () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IntPtr GetHdc();" />
      <MemberSignature Language="F#" Value="abstract member GetHdc : unit -&gt; nativeint&#xA;override this.GetHdc : unit -&gt; nativeint" Usage="graphics.GetHdc " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Drawing.IDeviceContext.GetHdc</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-2835">获取与此 <see cref="T:System.Drawing.Graphics" /> 关联的设备上下文的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2835">Gets the handle to the device context associated with this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19ce0-2836">与此 <see cref="T:System.Drawing.Graphics" /> 关联的设备上下文的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2836">Handle to the device context associated with this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2837">设备上下文是基于 Windows 结构[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]，它定义一组的图形对象和其关联的属性，以及影响输出的图形模式。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2837">The device context is a Windows structure based on [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] that defines a set of graphical objects and their associated attributes, as well as the graphical modes that affect output.</span></span> <span data-ttu-id="19ce0-2838">此方法返回一种字体除了该设备上下文。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2838">This method returns that device context with the exception of a font.</span></span> <span data-ttu-id="19ce0-2839">由于没有选中一种字体，调用<xref:System.Drawing.Font.FromHdc%2A>方法使用从返回的句柄<xref:System.Drawing.Graphics.GetHdc%2A>方法将失败。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2839">Because a font is not selected, calls to the <xref:System.Drawing.Font.FromHdc%2A> method using a handle returned from the <xref:System.Drawing.Graphics.GetHdc%2A> method will fail.</span></span>  
  
 <span data-ttu-id="19ce0-2840">调用<xref:System.Drawing.Graphics.GetHdc%2A>和<xref:System.Drawing.Graphics.ReleaseHdc%2A>方法必须成对出现。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2840">Calls to the <xref:System.Drawing.Graphics.GetHdc%2A> and <xref:System.Drawing.Graphics.ReleaseHdc%2A> methods must appear in pairs.</span></span> <span data-ttu-id="19ce0-2841">期间的作用域<xref:System.Drawing.Graphics.GetHdc%2A>和<xref:System.Drawing.Graphics.ReleaseHdc%2A>方法对，您通常仅对进行调用[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]函数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2841">During the scope of a <xref:System.Drawing.Graphics.GetHdc%2A> and <xref:System.Drawing.Graphics.ReleaseHdc%2A> method pair, you usually make only calls to [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] functions.</span></span> <span data-ttu-id="19ce0-2842">调用在该范围内到[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]方法<xref:System.Drawing.Graphics>生成`hdc`参数因`ObjectBusy`错误。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2842">Calls in that scope made to [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] methods of the <xref:System.Drawing.Graphics> that produced the `hdc` parameter fail with an `ObjectBusy` error.</span></span> <span data-ttu-id="19ce0-2843">此外，[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]忽略对所做的任何状态更改<xref:System.Drawing.Graphics>的`hdc`在后续操作中的参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2843">Also, [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] ignores any state changes made to the <xref:System.Drawing.Graphics> of the `hdc` parameter in subsequent operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2844">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2844">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2845">该示例说明了调用 Windows[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]函数来执行相同的任务[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]<xref:System.Drawing.Graphics>方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2845">The example illustrates calling a Windows [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] function to perform the same task as a [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] <xref:System.Drawing.Graphics> method.</span></span> <span data-ttu-id="19ce0-2846">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2846">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-2847">定义互操作性<xref:System.Runtime.InteropServices.DllImportAttribute>Windows DLL 文件 gdi32.dll 的属性。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2847">Defines the interoperability <xref:System.Runtime.InteropServices.DllImportAttribute> attribute for the Windows DLL file gdi32.dll.</span></span> <span data-ttu-id="19ce0-2848">此 DLL 包含所需[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]函数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2848">This DLL contains the desired [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] function.</span></span>  
  
-   <span data-ttu-id="19ce0-2849">定义<xref:System.Drawing.Rectangle>，即外部该 DLL 中的函数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2849">Defines the <xref:System.Drawing.Rectangle> function in that DLL as external.</span></span>  
  
-   <span data-ttu-id="19ce0-2850">创建一个红色的笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2850">Creates a red pen.</span></span>  
  
-   <span data-ttu-id="19ce0-2851">使用笔，向屏幕使用绘制一个矩形[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]<xref:System.Drawing.Graphics.DrawRectangle%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2851">With the pen, draws a rectangle to the screen using the [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] <xref:System.Drawing.Graphics.DrawRectangle%2A> method.</span></span>  
  
-   <span data-ttu-id="19ce0-2852">定义了一个内部指针类型变量`hdc`并将其值设置为窗体的设备上下文的句柄。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2852">Defines an internal pointer type variable `hdc` and sets its value to the handle to the device context of the form.</span></span>  
  
-   <span data-ttu-id="19ce0-2853">向屏幕使用绘制一个矩形[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]<xref:System.Drawing.Rectangle>函数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2853">Draws a rectangle to the screen using the [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] <xref:System.Drawing.Rectangle> function.</span></span>  
  
-   <span data-ttu-id="19ce0-2854">释放所表示的设备上下文`hdc`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2854">Releases the device context represented by the `hdc` parameter.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#122](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#122)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#122](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#122)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#122](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#122)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="19ce0-2855">用于访问非托管代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2855">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="19ce0-2856">相关枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2856">Related enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetNearestColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color GetNearestColor (System.Drawing.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Color GetNearestColor(valuetype System.Drawing.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.GetNearestColor(System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Color GetNearestColor(System::Drawing::Color color);" />
      <MemberSignature Language="F#" Value="member this.GetNearestColor : System.Drawing.Color -&gt; System.Drawing.Color" Usage="graphics.GetNearestColor color" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="color">
          <span data-ttu-id="19ce0-2857">
            <see cref="T:System.Drawing.Color" /> 结构，为其查找匹配项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2857">
              <see cref="T:System.Drawing.Color" /> structure for which to find a match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2858">获取与指定的 <see cref="T:System.Drawing.Color" /> 结构最接近的颜色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2858">Gets the nearest color to the specified <see cref="T:System.Drawing.Color" /> structure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19ce0-2859">一个 <see cref="T:System.Drawing.Color" /> 结构，它表示与 <paramref name="color" /> 参数指定的颜色最接近的颜色。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2859">A <see cref="T:System.Drawing.Color" /> structure that represents the nearest color to the one specified with the <paramref name="color" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19ce0-2860">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2860">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2861">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2861">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-2862">使用 ARGB 坐标 （255，165、 63，136） 创建一个任意颜色。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2862">Creates an arbitrary color with ARGB coordinates (255, 165, 63, 136).</span></span>  
  
-   <span data-ttu-id="19ce0-2863">创建实心画笔，并将其颜色设置为指定的颜色。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2863">Creates a solid brush and sets its color to the specified color.</span></span>  
  
-   <span data-ttu-id="19ce0-2864">填充椭圆使用任意的颜色。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2864">Fills an ellipse using the arbitrary color.</span></span>  
  
-   <span data-ttu-id="19ce0-2865">创建第二种颜色，并将其值设置为最接近的系统 ARGB 颜色。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2865">Creates a second color and sets its value to the nearest system ARGB color.</span></span>  
  
-   <span data-ttu-id="19ce0-2866">用此颜色填充第二个椭圆。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2866">Fills a second ellipse with this color.</span></span>  
  
 <span data-ttu-id="19ce0-2867">结果是两个椭圆： 第一个用任意指定的颜色和第二个绘制最接近的指定颜色的系统颜色。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2867">The result is two ellipses: the first drawn with the arbitrary specified color and the second drawn with the system color nearest the specified color.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#123](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#123)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#123](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#123)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#123](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#123)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InterpolationMode">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.InterpolationMode InterpolationMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.InterpolationMode InterpolationMode" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.InterpolationMode" />
      <MemberSignature Language="VB.NET" Value="Public Property InterpolationMode As InterpolationMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::InterpolationMode InterpolationMode { System::Drawing::Drawing2D::InterpolationMode get(); void set(System::Drawing::Drawing2D::InterpolationMode value); };" />
      <MemberSignature Language="F#" Value="member this.InterpolationMode : System.Drawing.Drawing2D.InterpolationMode with get, set" Usage="System.Drawing.Graphics.InterpolationMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.InterpolationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-2868">获取或设置与此 <see cref="T:System.Drawing.Graphics" /> 关联的插补模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2868">Gets or sets the interpolation mode associated with this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19ce0-2869">
            <see cref="T:System.Drawing.Drawing2D.InterpolationMode" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2869">One of the <see cref="T:System.Drawing.Drawing2D.InterpolationMode" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2870">内插模式确定如何中间值之间两个终结点进行计算。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2870">The interpolation mode determines how intermediate values between two endpoints are calculated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IntersectClip">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-2871">将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域更新为当前剪辑区域与指定 <see cref="T:System.Drawing.Rectangle" /> 结构的交集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2871">Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> to the intersection of the current clip region and the specified <see cref="T:System.Drawing.Rectangle" /> structure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IntersectClip">
      <MemberSignature Language="C#" Value="public void IntersectClip (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void IntersectClip(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IntersectClip (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IntersectClip(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.IntersectClip : System.Drawing.Rectangle -&gt; unit" Usage="graphics.IntersectClip rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="19ce0-2872">与当前剪辑区域相交的 <see cref="T:System.Drawing.Rectangle" /> 结构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2872">
              <see cref="T:System.Drawing.Rectangle" /> structure to intersect with the current clip region.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2873">将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域更新为当前剪辑区域与指定 <see cref="T:System.Drawing.Rectangle" /> 结构的交集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2873">Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> to the intersection of the current clip region and the specified <see cref="T:System.Drawing.Rectangle" /> structure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2874">此方法将分配给<xref:System.Drawing.Graphics.Clip%2A>此属性<xref:System.Drawing.Graphics>表示为当前剪辑区域与由指定的矩形的交集的区域`rect`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2874">This method assigns to the <xref:System.Drawing.Graphics.Clip%2A> property of this <xref:System.Drawing.Graphics> the area represented by the intersection of the current clip region and the rectangle specified by the `rect` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2875">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2875">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2876">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2876">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-2877">创建一个矩形的左上角，位于 （0，0） 和剪辑区域设置到此矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2877">Creates a rectangle with upper-left corner at (0, 0) and sets the clipping region to this rectangle.</span></span>  
  
-   <span data-ttu-id="19ce0-2878">创建第二个矩形的左上角，位于 （100，100） 和剪辑区域设置将此矩形交集的当前剪辑区域 （第一个矩形）。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2878">Creates a second rectangle with upper-left corner at (100, 100) and sets the clipping region to the intersection of this rectangle and the current clipping region (the first rectangle).</span></span>  
  
-   <span data-ttu-id="19ce0-2879">填充包括纯蓝色画笔与前的两个矩形大矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2879">Fills a large rectangle that includes both previous rectangles with a solid blue brush.</span></span>  
  
-   <span data-ttu-id="19ce0-2880">将的剪辑区域重置为无限。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2880">Resets the clipping region to infinite.</span></span>  
  
-   <span data-ttu-id="19ce0-2881">在两个剪辑区域周围绘制的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2881">Draws rectangles around the two clipping regions.</span></span> <span data-ttu-id="19ce0-2882">它使用黑色钢笔的第一个剪辑矩形和红色钢笔的第二个剪辑区域。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2882">It uses a black pen for the first clipping rectangle and a red pen for the second clipping region.</span></span>  
  
 <span data-ttu-id="19ce0-2883">结果是仅两个矩形交集用蓝色填充。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2883">The result is that only the intersection of the two rectangles is filled with blue.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#124](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#124)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#124](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#124)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#124](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#124)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntersectClip">
      <MemberSignature Language="C#" Value="public void IntersectClip (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void IntersectClip(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.IntersectClip(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IntersectClip (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IntersectClip(System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.IntersectClip : System.Drawing.RectangleF -&gt; unit" Usage="graphics.IntersectClip rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="19ce0-2884">与当前剪辑区域相交的 <see cref="T:System.Drawing.RectangleF" /> 结构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2884">
              <see cref="T:System.Drawing.RectangleF" /> structure to intersect with the current clip region.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2885">将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域更新为当前剪辑区域与指定 <see cref="T:System.Drawing.RectangleF" /> 结构的交集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2885">Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> to the intersection of the current clip region and the specified <see cref="T:System.Drawing.RectangleF" /> structure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2886">此方法将分配给<xref:System.Drawing.Graphics.Clip%2A>此属性<xref:System.Drawing.Graphics>表示为当前剪辑区域与由指定的矩形的交集的区域`rect`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2886">This method assigns to the <xref:System.Drawing.Graphics.Clip%2A> property of this <xref:System.Drawing.Graphics> the area represented by the intersection of the current clip region and the rectangle specified by the `rect` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2887">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2887">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2888">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2888">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-2889">创建一个矩形的左上角，位于 （0，0） 和剪辑区域设置到此矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2889">Creates a rectangle with upper-left corner at (0, 0) and sets the clipping region to this rectangle.</span></span>  
  
-   <span data-ttu-id="19ce0-2890">创建第二个矩形的左上角，位于 （100，100） 和剪辑区域设置将此矩形交集的当前剪辑区域 （第一个矩形）。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2890">Creates a second rectangle with upper-left corner at (100, 100) and sets the clipping region to the intersection of this rectangle and the current clipping region (the first rectangle).</span></span>  
  
-   <span data-ttu-id="19ce0-2891">填充包括纯蓝色画笔与前的两个矩形大矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2891">Fills a large rectangle that includes both previous rectangles with a solid blue brush.</span></span>  
  
-   <span data-ttu-id="19ce0-2892">将的剪辑区域重置为无限。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2892">Resets the clipping region to infinite.</span></span>  
  
-   <span data-ttu-id="19ce0-2893">在两个剪辑区域周围绘制的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2893">Draws rectangles around the two clipping regions.</span></span> <span data-ttu-id="19ce0-2894">它使用黑色钢笔的第一个剪辑矩形和红色钢笔的第二个剪辑区域。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2894">It uses a black pen for the first clipping rectangle and a red pen for the second clipping region.</span></span>  
  
 <span data-ttu-id="19ce0-2895">结果是仅两个矩形交集用蓝色填充。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2895">The result is that only the intersection of the two rectangles is filled with blue.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#125](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#125)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#125](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#125)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#125](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#125)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntersectClip">
      <MemberSignature Language="C#" Value="public void IntersectClip (System.Drawing.Region region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void IntersectClip(class System.Drawing.Region region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Region)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IntersectClip(System::Drawing::Region ^ region);" />
      <MemberSignature Language="F#" Value="member this.IntersectClip : System.Drawing.Region -&gt; unit" Usage="graphics.IntersectClip region" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
      </Parameters>
      <Docs>
        <param name="region">
          <span data-ttu-id="19ce0-2896">要与当前区域交叉的 <see cref="T:System.Drawing.Region" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2896">
              <see cref="T:System.Drawing.Region" /> to intersect with the current region.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2897">将此 <see cref="T:System.Drawing.Graphics" /> 对象的剪辑区域更新为当前剪辑区域与指定 <see cref="T:System.Drawing.Region" /> 的交集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2897">Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> to the intersection of the current clip region and the specified <see cref="T:System.Drawing.Region" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2898">此方法将分配给<xref:System.Drawing.Graphics.Clip%2A>此属性<xref:System.Drawing.Graphics>表示为当前剪辑区域与指定的区域的交集的区域`region`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2898">This method assigns to the <xref:System.Drawing.Graphics.Clip%2A> property of this <xref:System.Drawing.Graphics> the area represented by the intersection of the current clip region and the region specified by the `region` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-2899">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2899">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2900">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2900">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-2901">创建一个矩形的左上角，位于 （0，0）。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2901">Creates a rectangle with upper-left corner at (0, 0).</span></span>  
  
-   <span data-ttu-id="19ce0-2902">创建区域并将其设置为矩形，并将的剪辑区域设置为此区域。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2902">Creates a region and sets it to the rectangle, and sets the clipping region to this region.</span></span>  
  
-   <span data-ttu-id="19ce0-2903">创建第二个矩形的左上角，位于 （100，100）。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2903">Creates a second rectangle with upper-left corner at (100, 100).</span></span>  
  
-   <span data-ttu-id="19ce0-2904">创建区域并将其设置为第二个矩形的剪辑区域设置的此区域与当前剪辑区域 （第一个矩形） 使用的组合模式的交集<xref:System.Drawing.Drawing2D.CombineMode.Replace>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2904">Creates a region and sets it to the second rectangle, and sets the clipping region to the intersection of this region and the current clipping region (the first rectangle) using a combine mode of <xref:System.Drawing.Drawing2D.CombineMode.Replace>.</span></span>  
  
-   <span data-ttu-id="19ce0-2905">填充包含前两个用纯蓝色画笔大矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2905">Fills a large rectangle that includes both previous regions with a solid blue brush.</span></span>  
  
-   <span data-ttu-id="19ce0-2906">将的剪辑区域重置为无限。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2906">Resets the clipping region to infinite.</span></span>  
  
-   <span data-ttu-id="19ce0-2907">在两个剪辑区域周围绘制的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2907">Draws rectangles around the two clipping regions.</span></span> <span data-ttu-id="19ce0-2908">它使用黑色钢笔的第一个剪辑区域和红色钢笔的第二个剪辑区域。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2908">It uses a black pen for the first clipping region and a red pen for the second clipping region.</span></span>  
  
 <span data-ttu-id="19ce0-2909">结果是仅两个区域的交集用蓝色填充。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2909">The result is that only the intersection of the two regions is filled with blue.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#126](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#126)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#126](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#126)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#126](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#126)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClipEmpty">
      <MemberSignature Language="C#" Value="public bool IsClipEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClipEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.IsClipEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsClipEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsClipEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClipEmpty : bool" Usage="System.Drawing.Graphics.IsClipEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-2910">获取一个值，该值指示此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域是否为空。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2910">Gets a value indicating whether the clipping region of this <see cref="T:System.Drawing.Graphics" /> is empty.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19ce0-2911">如果此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域为空，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2911">
              <see langword="true" /> if the clipping region of this <see cref="T:System.Drawing.Graphics" /> is empty; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsVisible">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-2912">指示由一对坐标指定的点是否包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2912">Indicates whether the point specified by a pair of coordinates is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.IsVisible(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.Point -&gt; bool" Usage="graphics.IsVisible point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="19ce0-2913">要测试其可见性的 <see cref="T:System.Drawing.Point" /> 结构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2913">
              <see cref="T:System.Drawing.Point" /> structure to test for visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2914">指示指定的 <see cref="T:System.Drawing.Point" /> 结构是否包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2914">Indicates whether the specified <see cref="T:System.Drawing.Point" /> structure is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19ce0-2915">如果 <paramref name="point" /> 参数指定的点包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2915">
              <see langword="true" /> if the point specified by the <paramref name="point" /> parameter is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19ce0-2916">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2916">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2917">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2917">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-2918">创建矩形的剪辑区域，并将其设置为窗体使用的图形对象的剪辑区域<xref:System.Drawing.Drawing2D.CombineMode.Replace>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2918">Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode.Replace>.</span></span>  
  
-   <span data-ttu-id="19ce0-2919">创建两个点，一个的剪辑区域内，一个外部。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2919">Creates two points, one inside the clipping region and one outside.</span></span>  
  
-   <span data-ttu-id="19ce0-2920">测试每个可见性的点，并绘制只有可见的一个。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2920">Tests each of the points for visibility and draws only the visible one.</span></span>  
  
 <span data-ttu-id="19ce0-2921">结果是一个小红色圆圈，是的剪辑区域内。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2921">The result is one small red circle, which is within the clip region.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#127](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#127)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#127](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#127)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#127](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#127)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.PointF point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.PointF point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.IsVisible(System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (point As PointF) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::PointF point);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.PointF -&gt; bool" Usage="graphics.IsVisible point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="19ce0-2922">要测试其可见性的 <see cref="T:System.Drawing.PointF" /> 结构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2922">
              <see cref="T:System.Drawing.PointF" /> structure to test for visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2923">指示指定的 <see cref="T:System.Drawing.PointF" /> 结构是否包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2923">Indicates whether the specified <see cref="T:System.Drawing.PointF" /> structure is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19ce0-2924">如果 <paramref name="point" /> 参数指定的点包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2924">
              <see langword="true" /> if the point specified by the <paramref name="point" /> parameter is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19ce0-2925">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2925">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2926">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2926">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-2927">创建矩形的剪辑区域，并将其设置为窗体使用的图形的剪辑区域<xref:System.Drawing.Drawing2D.CombineMode.Replace>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2927">Creates a rectangular clipping region and sets it as the clipping region for the graphics of the form using <xref:System.Drawing.Drawing2D.CombineMode.Replace>.</span></span>  
  
-   <span data-ttu-id="19ce0-2928">创建两个点，一个的剪辑区域内，一个外部。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2928">Creates two points, one inside the clipping region and one outside.</span></span>  
  
-   <span data-ttu-id="19ce0-2929">测试每个可见性的点，并绘制只有可见的一个。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2929">Tests each of the points for visibility and draws only the visible one.</span></span>  
  
 <span data-ttu-id="19ce0-2930">结果是一个小红色圆圈，是的剪辑区域内。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2930">The result is one small red circle, which is within the clip region.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#128](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#128)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#128](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#128)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#128](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#128)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.IsVisible(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (rect As Rectangle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.Rectangle -&gt; bool" Usage="graphics.IsVisible rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="19ce0-2931">要测试其可见性的 <see cref="T:System.Drawing.Rectangle" /> 结构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2931">
              <see cref="T:System.Drawing.Rectangle" /> structure to test for visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2932">指示 <see cref="T:System.Drawing.Rectangle" /> 结构指定的矩形是否包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2932">Indicates whether the rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19ce0-2933">如果 <paramref name="rect" /> 参数指定的矩形包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2933">
              <see langword="true" /> if the rectangle specified by the <paramref name="rect" /> parameter is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19ce0-2934">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2934">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2935">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2935">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-2936">创建矩形的剪辑区域，并将其设置为窗体使用的图形对象的剪辑区域<xref:System.Drawing.Drawing2D.CombineMode.Replace>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2936">Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode.Replace>.</span></span>  
  
-   <span data-ttu-id="19ce0-2937">创建位置和大小的两个矩形，一个的剪辑区域内，一个外部。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2937">Creates the location and size of two rectangles, one inside the clipping region and one outside.</span></span>  
  
-   <span data-ttu-id="19ce0-2938">可见性的矩形的每个测试，并绘制只有可见的一个。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2938">Tests each of the rectangles for visibility and draws only the visible one.</span></span>  
  
 <span data-ttu-id="19ce0-2939">结果是一个小红色矩形，是的剪辑区域内。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2939">The result is one small red rectangle, which is within the clip region.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#129](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#129)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#129](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#129)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#129](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#129)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.IsVisible(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (rect As RectangleF) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.RectangleF -&gt; bool" Usage="graphics.IsVisible rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="19ce0-2940">要测试其可见性的 <see cref="T:System.Drawing.RectangleF" /> 结构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2940">
              <see cref="T:System.Drawing.RectangleF" /> structure to test for visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2941">指示 <see cref="T:System.Drawing.RectangleF" /> 结构指定的矩形是否包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2941">Indicates whether the rectangle specified by a <see cref="T:System.Drawing.RectangleF" /> structure is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19ce0-2942">如果 <paramref name="rect" /> 参数指定的矩形包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2942">
              <see langword="true" /> if the rectangle specified by the <paramref name="rect" /> parameter is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19ce0-2943">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2943">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2944">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2944">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-2945">创建矩形的剪辑区域，并将其设置为窗体使用的图形对象的剪辑区域<xref:System.Drawing.Drawing2D.CombineMode.Replace>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2945">Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode.Replace>.</span></span>  
  
-   <span data-ttu-id="19ce0-2946">创建两个矩形，一个的剪辑区域内，一个外部。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2946">Creates two rectangles, one inside the clipping region and one outside.</span></span>  
  
-   <span data-ttu-id="19ce0-2947">可见性的矩形的每个测试，并绘制只有可见的一个。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2947">Tests each of the rectangles for visibility and draws only the visible one.</span></span>  
  
 <span data-ttu-id="19ce0-2948">结果是一个小红色矩形，是的剪辑区域内。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2948">The result is one small red rectangle, which is within the clip region.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#130](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#130)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#130](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#130)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#130](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#130)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Integer, y As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : int * int -&gt; bool" Usage="graphics.IsVisible (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="19ce0-2949">要测试其可见性的点的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2949">The x-coordinate of the point to test for visibility.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="19ce0-2950">要测试其可见性的点的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2950">The y-coordinate of the point to test for visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2951">指示由一对坐标指定的点是否包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2951">Indicates whether the point specified by a pair of coordinates is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19ce0-2952">如果由 <paramref name="x" /> 和 <paramref name="y" /> 参数定义的点包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2952">
              <see langword="true" /> if the point defined by the <paramref name="x" /> and <paramref name="y" /> parameters is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19ce0-2953">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2953">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2954">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2954">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-2955">创建矩形的剪辑区域，并将其设置为窗体使用的图形对象的剪辑区域<xref:System.Drawing.Drawing2D.CombineMode.Replace>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2955">Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode.Replace>.</span></span>  
  
-   <span data-ttu-id="19ce0-2956">创建两个点，一个的剪辑区域内，一个外部。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2956">Creates two points, one inside the clipping region and one outside.</span></span>  
  
-   <span data-ttu-id="19ce0-2957">测试每个可见性的点，并绘制只有可见的一个。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2957">Tests each of the points for visibility and draws only the visible one.</span></span>  
  
 <span data-ttu-id="19ce0-2958">结果是一个小红色圆圈，是的剪辑区域内。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2958">The result is one small red circle, which is within the clip region.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#131](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#131)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#131](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#131)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#131](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#131)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Single, y As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : single * single -&gt; bool" Usage="graphics.IsVisible (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="19ce0-2959">要测试其可见性的点的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2959">The x-coordinate of the point to test for visibility.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="19ce0-2960">要测试其可见性的点的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2960">The y-coordinate of the point to test for visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2961">指示由一对坐标指定的点是否包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2961">Indicates whether the point specified by a pair of coordinates is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19ce0-2962">如果由 <paramref name="x" /> 和 <paramref name="y" /> 参数定义的点包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2962">
              <see langword="true" /> if the point defined by the <paramref name="x" /> and <paramref name="y" /> parameters is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19ce0-2963">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2963">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2964">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2964">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-2965">创建矩形的剪辑区域，并将其设置为窗体使用的图形对象的剪辑区域<xref:System.Drawing.Drawing2D.CombineMode.Replace>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2965">Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode.Replace>.</span></span>  
  
-   <span data-ttu-id="19ce0-2966">创建两个点，一个的剪辑区域内，一个外部。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2966">Creates two points, one inside the clipping region and one outside.</span></span>  
  
-   <span data-ttu-id="19ce0-2967">测试每个可见性的点，并绘制只有可见的一个。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2967">Tests each of the points for visibility and draws only the visible one.</span></span>  
  
 <span data-ttu-id="19ce0-2968">结果是一个小红色圆圈，是的剪辑区域内。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2968">The result is one small red circle, which is within the clip region.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#133](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#133)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#133](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#133)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#133](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#133)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Integer, y As Integer, width As Integer, height As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : int * int * int * int -&gt; bool" Usage="graphics.IsVisible (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="19ce0-2969">要测试其可见性的矩形的左上角的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2969">The x-coordinate of the upper-left corner of the rectangle to test for visibility.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="19ce0-2970">要测试其可见性的矩形的左上角的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2970">The y-coordinate of the upper-left corner of the rectangle to test for visibility.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="19ce0-2971">要测试其可见性的矩形的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2971">Width of the rectangle to test for visibility.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="19ce0-2972">要测试其可见性的矩形的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2972">Height of the rectangle to test for visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2973">指示由一对坐标、一个宽度和一个高度指定的矩形是否包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2973">Indicates whether the rectangle specified by a pair of coordinates, a width, and a height is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19ce0-2974">如果 <paramref name="x" />、<paramref name="y" />、<paramref name="width" /> 和 <paramref name="height" /> 参数定义的矩形包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2974">
              <see langword="true" /> if the rectangle defined by the <paramref name="x" />, <paramref name="y" />, <paramref name="width" />, and <paramref name="height" /> parameters is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19ce0-2975">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2975">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2976">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2976">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-2977">创建矩形的剪辑区域，并将其设置为窗体使用的图形对象的剪辑区域<xref:System.Drawing.Drawing2D.CombineMode.Replace>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2977">Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode.Replace>.</span></span>  
  
-   <span data-ttu-id="19ce0-2978">创建位置和大小的两个矩形，一个的剪辑区域内，一个外部。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2978">Creates the location and size of two rectangles, one inside the clipping region and one outside.</span></span>  
  
-   <span data-ttu-id="19ce0-2979">可见性的矩形的每个测试，并绘制只有可见的一个。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2979">Tests each of the rectangles for visibility and draws only the visible one.</span></span>  
  
 <span data-ttu-id="19ce0-2980">结果是一个小红色矩形，是的剪辑区域内。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2980">The result is one small red rectangle, which is within the clip region.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#132](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#132)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#132](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#132)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#132](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#132)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y, float width, float height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y, float32 width, float32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Single, y As Single, width As Single, height As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y, float width, float height);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : single * single * single * single -&gt; bool" Usage="graphics.IsVisible (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="19ce0-2981">要测试其可见性的矩形的左上角的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2981">The x-coordinate of the upper-left corner of the rectangle to test for visibility.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="19ce0-2982">要测试其可见性的矩形的左上角的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2982">The y-coordinate of the upper-left corner of the rectangle to test for visibility.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="19ce0-2983">要测试其可见性的矩形的宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2983">Width of the rectangle to test for visibility.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="19ce0-2984">要测试其可见性的矩形的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2984">Height of the rectangle to test for visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-2985">指示由一对坐标、一个宽度和一个高度指定的矩形是否包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2985">Indicates whether the rectangle specified by a pair of coordinates, a width, and a height is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19ce0-2986">如果 <paramref name="x" />、<paramref name="y" />、<paramref name="width" /> 和 <paramref name="height" /> 参数定义的矩形包含在此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域内，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2986">
              <see langword="true" /> if the rectangle defined by the <paramref name="x" />, <paramref name="y" />, <paramref name="width" />, and <paramref name="height" /> parameters is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19ce0-2987">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2987">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-2988">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-2988">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-2989">创建矩形的剪辑区域，并将其设置为窗体使用的图形对象的剪辑区域<xref:System.Drawing.Drawing2D.CombineMode.Replace>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2989">Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode.Replace>.</span></span>  
  
-   <span data-ttu-id="19ce0-2990">创建位置和大小的两个矩形，一个的剪辑区域内，一个外部。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2990">Creates the location and size of two rectangles, one inside the clipping region and one outside.</span></span>  
  
-   <span data-ttu-id="19ce0-2991">可见性的矩形的每个测试，并绘制只有可见的一个。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2991">Tests each of the rectangles for visibility and draws only the visible one.</span></span>  
  
 <span data-ttu-id="19ce0-2992">结果是一个小红色矩形，是的剪辑区域内。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2992">The result is one small red rectangle, which is within the clip region.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#134](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#134)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#134](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#134)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#134](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#134)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisibleClipEmpty">
      <MemberSignature Language="C#" Value="public bool IsVisibleClipEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVisibleClipEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.IsVisibleClipEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsVisibleClipEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVisibleClipEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsVisibleClipEmpty : bool" Usage="System.Drawing.Graphics.IsVisibleClipEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-2993">获取一个值，该值指示此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域是否为空。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2993">Gets a value indicating whether the visible clipping region of this <see cref="T:System.Drawing.Graphics" /> is empty.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19ce0-2994">如果此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域的可见部分为空，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2994">
              <see langword="true" /> if the visible portion of the clipping region of this <see cref="T:System.Drawing.Graphics" /> is empty; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-2995">可见剪辑区域是此的剪辑区域的交集`Graphics`和窗口的剪辑区域。</span><span class="sxs-lookup"><span data-stu-id="19ce0-2995">The visible clipping region is the intersection of the clipping region of this `Graphics` and the clipping region of the window.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureCharacterRanges">
      <MemberSignature Language="C#" Value="public System.Drawing.Region[] MeasureCharacterRanges (string text, System.Drawing.Font font, System.Drawing.RectangleF layoutRect, System.Drawing.StringFormat stringFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Region[] MeasureCharacterRanges(string text, class System.Drawing.Font font, valuetype System.Drawing.RectangleF layoutRect, class System.Drawing.StringFormat stringFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Drawing::Region ^&gt; ^ MeasureCharacterRanges(System::String ^ text, System::Drawing::Font ^ font, System::Drawing::RectangleF layoutRect, System::Drawing::StringFormat ^ stringFormat);" />
      <MemberSignature Language="F#" Value="member this.MeasureCharacterRanges : string * System.Drawing.Font * System.Drawing.RectangleF * System.Drawing.StringFormat -&gt; System.Drawing.Region[]" Usage="graphics.MeasureCharacterRanges (text, font, layoutRect, stringFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Region[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="layoutRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="stringFormat" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="19ce0-2996">要测量的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2996">String to measure.</span>
          </span>
        </param>
        <param name="font">
          <span data-ttu-id="19ce0-2997">
            <see cref="T:System.Drawing.Font" />，它定义字符串的文本格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2997">
              <see cref="T:System.Drawing.Font" /> that defines the text format of the string.</span>
          </span>
        </param>
        <param name="layoutRect">
          <span data-ttu-id="19ce0-2998">
            <see cref="T:System.Drawing.RectangleF" /> 结构，它指定字符串的布局矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2998">
              <see cref="T:System.Drawing.RectangleF" /> structure that specifies the layout rectangle for the string.</span>
          </span>
        </param>
        <param name="stringFormat">
          <span data-ttu-id="19ce0-2999">
            <see cref="T:System.Drawing.StringFormat" />，它表示字符串的格式化信息（如行距）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-2999">
              <see cref="T:System.Drawing.StringFormat" /> that represents formatting information, such as line spacing, for the string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-3000">获取 <see cref="T:System.Drawing.Region" /> 对象的数组，其中每个对象将字符位置的范围限定在指定字符串内。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3000">Gets an array of <see cref="T:System.Drawing.Region" /> objects, each of which bounds a range of character positions within the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19ce0-3001">此方法返回 <see cref="T:System.Drawing.Region" /> 对象的数组，其中每个对象将字符位置的范围限定在指定字符串内。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3001">This method returns an array of <see cref="T:System.Drawing.Region" /> objects, each of which bounds a range of character positions within the specified string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-3002">此方法返回的区域与分辨率有关，因此，如果字符串是一种解决方法在图元文件中记录和更高版本播放不同的分辨率可能会略有下降的准确性。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3002">The regions returned by this method are resolution-dependent, so there might be a slight loss of accuracy if strings are recorded in a metafile at one resolution and later played back at a different resolution.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-3003">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3003">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-3004">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-3004">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-3005">设置"第一个和第二个范围"的一个字符串和字符串 ("Times New Roman"，16 点) 的显示字体。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3005">Sets a string "First and Second ranges" and a font for display of the string ("Times New Roman", 16 point).</span></span>  
  
-   <span data-ttu-id="19ce0-3006">设置两个字符在字符串中的范围 （与相对应的单词"First"和"第二个"）。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3006">Sets two character ranges within the string (which correspond to the words "First" and "Second").</span></span>  
  
-   <span data-ttu-id="19ce0-3007">创建在其中显示字符串的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3007">Creates a rectangle in which to display the string.</span></span>  
  
-   <span data-ttu-id="19ce0-3008">设置格式的字符串包括两个字符范围。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3008">Sets the formatting of the string ¾ including the two character ranges.</span></span>  
  
-   <span data-ttu-id="19ce0-3009">将字符串绘制到屏幕。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3009">Draws the string to the screen.</span></span>  
  
-   <span data-ttu-id="19ce0-3010">测量的字符范围，将确定绑定的两个指定的范围的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3010">Measures the character ranges, determines rectangles that bound the two specified ranges.</span></span>  
  
-   <span data-ttu-id="19ce0-3011">向屏幕绘制两个矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3011">Draws the two rectangles to the screen.</span></span>  
  
 <span data-ttu-id="19ce0-3012">结果是与第一个范围 （"第一次"） 受红色矩形 （"第二个"） 受蓝色矩形，第二个范围的显示的字符串。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3012">The result is the displayed string with the first range ("First") bounded by a red rectangle and the second range ("Second") bounded by a blue rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#135](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#135)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#135](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#135)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#135](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#135)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)" />
        <altmember cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="MeasureString">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-3013">测量用指定的 <see cref="T:System.Drawing.Font" /> 绘制的指定字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3013">Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MeasureString">
      <MemberSignature Language="C#" Value="public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.SizeF MeasureString(string text, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::SizeF MeasureString(System::String ^ text, System::Drawing::Font ^ font);" />
      <MemberSignature Language="F#" Value="member this.MeasureString : string * System.Drawing.Font -&gt; System.Drawing.SizeF" Usage="graphics.MeasureString (text, font)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="19ce0-3014">要测量的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3014">String to measure.</span>
          </span>
        </param>
        <param name="font">
          <span data-ttu-id="19ce0-3015">
            <see cref="T:System.Drawing.Font" />，它定义字符串的文本格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3015">
              <see cref="T:System.Drawing.Font" /> that defines the text format of the string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-3016">测量用指定的 <see cref="T:System.Drawing.Font" /> 绘制的指定字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3016">Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19ce0-3017">此方法返回 <see cref="T:System.Drawing.SizeF" /> 结构，该结构表示 <paramref name="text" /> 参数指定的、使用 <paramref name="font" /> 参数绘制的字符串的大小，单位由 <see cref="P:System.Drawing.Graphics.PageUnit" /> 属性指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3017">This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size, in the units specified by the <see cref="P:System.Drawing.Graphics.PageUnit" /> property, of the string specified by the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-3018"><xref:System.Drawing.Graphics.MeasureString%2A>方法旨在用于使用与单个字符串和包含少量的额外空间之前和之后要供突出的标志符号的字符串。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3018">The <xref:System.Drawing.Graphics.MeasureString%2A> method is designed for use with individual strings and includes a small amount of extra space before and after the string to allow for overhanging glyphs.</span></span> <span data-ttu-id="19ce0-3019">此外，<xref:System.Drawing.Graphics.DrawString%2A>方法调整标志符号点以优化显示质量和可能显示不是报告的窄字符串<xref:System.Drawing.Graphics.MeasureString%2A>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3019">Also, the <xref:System.Drawing.Graphics.DrawString%2A> method adjusts glyph points to optimize display quality and might display a string narrower than reported by <xref:System.Drawing.Graphics.MeasureString%2A>.</span></span> <span data-ttu-id="19ce0-3020">若要获取适用于在布局中 （例如，实现格式化文本时） 的相邻字符串的度量值，使用<xref:System.Drawing.Graphics.MeasureCharacterRanges%2A>方法或之一<xref:System.Drawing.Graphics.MeasureString%2A>采用的方法<xref:System.Drawing.StringFormat>，并将传递<xref:System.Drawing.StringFormat.GenericTypographic%2A>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3020">To obtain metrics suitable for adjacent strings in layout (for example, when implementing formatted text), use the <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> method or one of the <xref:System.Drawing.Graphics.MeasureString%2A> methods that takes a <xref:System.Drawing.StringFormat>, and pass <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</span></span> <span data-ttu-id="19ce0-3021">此外，确保<xref:System.Drawing.Graphics.TextRenderingHint%2A>为<xref:System.Drawing.Graphics>是<xref:System.Drawing.Text.TextRenderingHint.AntiAlias>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3021">Also, ensure the <xref:System.Drawing.Graphics.TextRenderingHint%2A> for the <xref:System.Drawing.Graphics> is <xref:System.Drawing.Text.TextRenderingHint.AntiAlias>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-3022">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3022">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-3023">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-3023">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-3024">创建要测量的字符串。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3024">Creates a string to measure.</span></span>  
  
-   <span data-ttu-id="19ce0-3025">创建一个 font 对象并将其设置为 Arial （16 磅）。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3025">Creates a font object and sets it to Arial (16 point).</span></span>  
  
-   <span data-ttu-id="19ce0-3026">创建对大小对象对象并使用它和字体对象来度量字符串的大小。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3026">Creates a size object and uses it and the font object to measure the size of the string.</span></span>  
  
-   <span data-ttu-id="19ce0-3027">绘制一个红色矩形使用测得字符串大小。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3027">Draws a red rectangle using the measured size of the string.</span></span>  
  
-   <span data-ttu-id="19ce0-3028">绘制绘制的矩形内的字符串。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3028">Draws the string within the drawn rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#136](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#136)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#136](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#136)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#136](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#136)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="19ce0-3029">
            <paramref name="font" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3029">
              <paramref name="font" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
        <altmember cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
      </Docs>
    </Member>
    <Member MemberName="MeasureString">
      <MemberSignature Language="C#" Value="public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, System.Drawing.SizeF layoutArea);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.SizeF MeasureString(string text, class System.Drawing.Font font, valuetype System.Drawing.SizeF layoutArea) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::SizeF MeasureString(System::String ^ text, System::Drawing::Font ^ font, System::Drawing::SizeF layoutArea);" />
      <MemberSignature Language="F#" Value="member this.MeasureString : string * System.Drawing.Font * System.Drawing.SizeF -&gt; System.Drawing.SizeF" Usage="graphics.MeasureString (text, font, layoutArea)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="layoutArea" Type="System.Drawing.SizeF" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="19ce0-3030">要测量的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3030">String to measure.</span>
          </span>
        </param>
        <param name="font">
          <span data-ttu-id="19ce0-3031">
            <see cref="T:System.Drawing.Font" /> 定义字符串的文本格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3031">
              <see cref="T:System.Drawing.Font" /> defines the text format of the string.</span>
          </span>
        </param>
        <param name="layoutArea">
          <span data-ttu-id="19ce0-3032">
            <see cref="T:System.Drawing.SizeF" /> 结构，它指定文本的最大布局区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3032">
              <see cref="T:System.Drawing.SizeF" /> structure that specifies the maximum layout area for the text.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-3033">当在指定的布局区域内以指定的 <see cref="T:System.Drawing.Font" /> 绘制时，测量指定的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3033">Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" /> within the specified layout area.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19ce0-3034">此方法返回 <see cref="T:System.Drawing.SizeF" /> 结构，该结构表示 <paramref name="text" /> 参数指定的、使用 <paramref name="font" /> 参数绘制的字符串的大小，单位由 <see cref="P:System.Drawing.Graphics.PageUnit" /> 属性指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3034">This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size, in the units specified by the <see cref="P:System.Drawing.Graphics.PageUnit" /> property, of the string specified by the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-3035"><xref:System.Drawing.Graphics.MeasureString%2A>方法旨在用于使用与单个字符串和包含少量的额外空间之前和之后要供突出的标志符号的字符串。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3035">The <xref:System.Drawing.Graphics.MeasureString%2A> method is designed for use with individual strings and includes a small amount of extra space before and after the string to allow for overhanging glyphs.</span></span> <span data-ttu-id="19ce0-3036">此外，<xref:System.Drawing.Graphics.DrawString%2A>方法调整标志符号点以优化显示质量和可能显示不是报告的窄字符串<xref:System.Drawing.Graphics.MeasureString%2A>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3036">Also, the <xref:System.Drawing.Graphics.DrawString%2A> method adjusts glyph points to optimize display quality and might display a string narrower than reported by <xref:System.Drawing.Graphics.MeasureString%2A>.</span></span> <span data-ttu-id="19ce0-3037">若要获取适用于在布局中 （例如，实现格式化文本时） 的相邻字符串的度量值，使用<xref:System.Drawing.Graphics.MeasureCharacterRanges%2A>方法或之一<xref:System.Drawing.Graphics.MeasureString%2A>采用的方法<xref:System.Drawing.StringFormat>，并将传递<xref:System.Drawing.StringFormat.GenericTypographic%2A>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3037">To obtain metrics suitable for adjacent strings in layout (for example, when implementing formatted text), use the <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> method or one of the <xref:System.Drawing.Graphics.MeasureString%2A> methods that takes a <xref:System.Drawing.StringFormat>, and pass <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</span></span> <span data-ttu-id="19ce0-3038">此外，确保<xref:System.Drawing.Graphics.TextRenderingHint%2A>为<xref:System.Drawing.Graphics>是<xref:System.Drawing.Text.TextRenderingHint.AntiAlias>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3038">Also, ensure the <xref:System.Drawing.Graphics.TextRenderingHint%2A> for the <xref:System.Drawing.Graphics> is <xref:System.Drawing.Text.TextRenderingHint.AntiAlias>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-3039">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3039">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-3040">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-3040">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-3041">创建要测量的字符串和字体对象设置为 Arial （16 点）。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3041">Creates a string to measure and a font object set to Arial (16 point).</span></span>  
  
-   <span data-ttu-id="19ce0-3042">设置字符串的最大布局大小。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3042">Sets the maximum layout size of the string.</span></span>  
  
-   <span data-ttu-id="19ce0-3043">创建一个大小对象并使用它、 字体对象和最大布局大小来测量字符串的大小。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3043">Creates a size object and uses it, the font object, and the maximum layout size to measure the size of the string.</span></span>  
  
-   <span data-ttu-id="19ce0-3044">绘制一个红色矩形使用测得字符串大小。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3044">Draws a red rectangle using the measured size of the string.</span></span>  
  
-   <span data-ttu-id="19ce0-3045">绘制绘制的矩形内的字符串。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3045">Draws the string within the drawn rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#138](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#138)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#138](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#138)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#138](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#138)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="19ce0-3046">
            <paramref name="font" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3046">
              <paramref name="font" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
        <altmember cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
      </Docs>
    </Member>
    <Member MemberName="MeasureString">
      <MemberSignature Language="C#" Value="public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, int width);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.SizeF MeasureString(string text, class System.Drawing.Font font, int32 width) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::SizeF MeasureString(System::String ^ text, System::Drawing::Font ^ font, int width);" />
      <MemberSignature Language="F#" Value="member this.MeasureString : string * System.Drawing.Font * int -&gt; System.Drawing.SizeF" Usage="graphics.MeasureString (text, font, width)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="width" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="19ce0-3047">要测量的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3047">String to measure.</span>
          </span>
        </param>
        <param name="font">
          <span data-ttu-id="19ce0-3048">
            <see cref="T:System.Drawing.Font" />，它定义字符串的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3048">
              <see cref="T:System.Drawing.Font" /> that defines the format of the string.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="19ce0-3049">字符串的最大宽度（以像素为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3049">Maximum width of the string in pixels.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-3050">测量用指定的 <see cref="T:System.Drawing.Font" /> 绘制的指定字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3050">Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19ce0-3051">此方法返回 <see cref="T:System.Drawing.SizeF" /> 结构，该结构表示在 <paramref name="text" /> 参数中指定的、使用 <paramref name="font" /> 参数绘制的字符串的大小，单位由 <see cref="P:System.Drawing.Graphics.PageUnit" /> 属性指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3051">This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size, in the units specified by the <see cref="P:System.Drawing.Graphics.PageUnit" /> property, of the string specified in the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-3052">`width`参数指定的宽度组件返回的最大值<xref:System.Drawing.SizeF>结构 (<xref:System.Drawing.SizeF.Width%2A>)。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3052">The `width` parameter specifies the maximum value of the width component of the returned <xref:System.Drawing.SizeF> structure (<xref:System.Drawing.SizeF.Width%2A>).</span></span> <span data-ttu-id="19ce0-3053">如果`width`参数是字符串，将返回的实际宽度小于<xref:System.Drawing.SizeF.Width%2A>组件截断为表示的最大适合指定的宽度的字符数的值。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3053">If the `width` parameter is less than the actual width of the string, the returned <xref:System.Drawing.SizeF.Width%2A> component is truncated to a value representing the maximum number of characters that will fit within the specified width.</span></span> <span data-ttu-id="19ce0-3054">可容纳整个字符串，返回的<xref:System.Drawing.SizeF.Height%2A>组件将会调整为一个值，允许显示使用字符换行字符串。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3054">To accommodate the entire string, the returned <xref:System.Drawing.SizeF.Height%2A> component is adjusted to a value that allows displaying the string with character wrap.</span></span>  
  
 <span data-ttu-id="19ce0-3055"><xref:System.Drawing.Graphics.MeasureString%2A>方法旨在用于使用与单个字符串和包含少量的额外空间之前和之后要供突出的标志符号的字符串。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3055">The <xref:System.Drawing.Graphics.MeasureString%2A> method is designed for use with individual strings and includes a small amount of extra space before and after the string to allow for overhanging glyphs.</span></span> <span data-ttu-id="19ce0-3056">此外，<xref:System.Drawing.Graphics.DrawString%2A>方法调整标志符号点以优化显示质量和可能显示不是报告的窄字符串<xref:System.Drawing.Graphics.MeasureString%2A>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3056">Also, the <xref:System.Drawing.Graphics.DrawString%2A> method adjusts glyph points to optimize display quality and might display a string narrower than reported by <xref:System.Drawing.Graphics.MeasureString%2A>.</span></span> <span data-ttu-id="19ce0-3057">若要获取适用于在布局中 （例如，实现格式化文本时） 的相邻字符串的度量值，使用<xref:System.Drawing.Graphics.MeasureCharacterRanges%2A>方法或之一<xref:System.Drawing.Graphics.MeasureString%2A>采用的方法<xref:System.Drawing.StringFormat>，并将传递<xref:System.Drawing.StringFormat.GenericTypographic%2A>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3057">To obtain metrics suitable for adjacent strings in layout (for example, when implementing formatted text), use the <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> method or one of the <xref:System.Drawing.Graphics.MeasureString%2A> methods that takes a <xref:System.Drawing.StringFormat>, and pass <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</span></span> <span data-ttu-id="19ce0-3058">此外，确保<xref:System.Drawing.Graphics.TextRenderingHint%2A>为<xref:System.Drawing.Graphics>是<xref:System.Drawing.Text.TextRenderingHint.AntiAlias>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3058">Also, ensure the <xref:System.Drawing.Graphics.TextRenderingHint%2A> for the <xref:System.Drawing.Graphics> is <xref:System.Drawing.Text.TextRenderingHint.AntiAlias>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-3059">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3059">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-3060">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-3060">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-3061">创建要测量的字符串和字体对象设置为 Arial （16 点）。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3061">Creates a string to measure and a font object set to Arial (16 point).</span></span>  
  
-   <span data-ttu-id="19ce0-3062">设置字符串的最大宽度。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3062">Sets the maximum width of the string.</span></span>  
  
-   <span data-ttu-id="19ce0-3063">创建一个大小对象并使用它、 字体对象和最大字符串宽度来测量字符串的大小。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3063">Creates a size object and uses it, the font object, and the maximum string width to measure the size of the string.</span></span>  
  
-   <span data-ttu-id="19ce0-3064">绘制一个红色矩形使用测得字符串大小。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3064">Draws a red rectangle using the measured size of the string.</span></span>  
  
-   <span data-ttu-id="19ce0-3065">绘制绘制的矩形内的字符串。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3065">Draws the string within the drawn rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#141](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#141)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#141](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#141)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#141](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#141)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="19ce0-3066">
            <paramref name="font" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3066">
              <paramref name="font" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
        <altmember cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
      </Docs>
    </Member>
    <Member MemberName="MeasureString">
      <MemberSignature Language="C#" Value="public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, System.Drawing.PointF origin, System.Drawing.StringFormat stringFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.SizeF MeasureString(string text, class System.Drawing.Font font, valuetype System.Drawing.PointF origin, class System.Drawing.StringFormat stringFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::SizeF MeasureString(System::String ^ text, System::Drawing::Font ^ font, System::Drawing::PointF origin, System::Drawing::StringFormat ^ stringFormat);" />
      <MemberSignature Language="F#" Value="member this.MeasureString : string * System.Drawing.Font * System.Drawing.PointF * System.Drawing.StringFormat -&gt; System.Drawing.SizeF" Usage="graphics.MeasureString (text, font, origin, stringFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="origin" Type="System.Drawing.PointF" />
        <Parameter Name="stringFormat" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="19ce0-3067">要测量的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3067">String to measure.</span>
          </span>
        </param>
        <param name="font">
          <span data-ttu-id="19ce0-3068">
            <see cref="T:System.Drawing.Font" /> 定义字符串的文本格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3068">
              <see cref="T:System.Drawing.Font" /> defines the text format of the string.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="19ce0-3069">
            <see cref="T:System.Drawing.PointF" /> 结构，它表示字符串的左上角。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3069">
              <see cref="T:System.Drawing.PointF" /> structure that represents the upper-left corner of the string.</span>
          </span>
        </param>
        <param name="stringFormat">
          <span data-ttu-id="19ce0-3070">
            <see cref="T:System.Drawing.StringFormat" />，它表示字符串的格式化信息（如行距）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3070">
              <see cref="T:System.Drawing.StringFormat" /> that represents formatting information, such as line spacing, for the string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-3071">测量用指定的 <see cref="T:System.Drawing.Font" /> 绘制并用指定的 <see cref="T:System.Drawing.StringFormat" /> 格式化的指定字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3071">Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" /> and formatted with the specified <see cref="T:System.Drawing.StringFormat" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19ce0-3072">此方法返回 <see cref="T:System.Drawing.SizeF" /> 结构，该结构表示 <paramref name="text" /> 参数指定的、使用 <paramref name="font" /> 参数和 <paramref name="stringFormat" /> 参数绘制的字符串的大小，单位由 <see cref="P:System.Drawing.Graphics.PageUnit" /> 属性指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3072">This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size, in the units specified by the <see cref="P:System.Drawing.Graphics.PageUnit" /> property, of the string specified by the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter and the <paramref name="stringFormat" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-3073"><xref:System.Drawing.Graphics.MeasureString%2A>方法旨在用于使用与单个字符串和包含少量的额外空间之前和之后要供突出的标志符号的字符串。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3073">The <xref:System.Drawing.Graphics.MeasureString%2A> method is designed for use with individual strings and includes a small amount of extra space before and after the string to allow for overhanging glyphs.</span></span> <span data-ttu-id="19ce0-3074">此外，<xref:System.Drawing.Graphics.DrawString%2A>方法调整标志符号点以优化显示质量和可能显示不是报告的窄字符串<xref:System.Drawing.Graphics.MeasureString%2A>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3074">Also, the <xref:System.Drawing.Graphics.DrawString%2A> method adjusts glyph points to optimize display quality and might display a string narrower than reported by <xref:System.Drawing.Graphics.MeasureString%2A>.</span></span> <span data-ttu-id="19ce0-3075">若要获取适用于在布局中 （例如，实现格式化文本时） 的相邻字符串的度量值，使用<xref:System.Drawing.Graphics.MeasureCharacterRanges%2A>方法或之一<xref:System.Drawing.Graphics.MeasureString%2A>采用的方法<xref:System.Drawing.StringFormat>，并将传递<xref:System.Drawing.StringFormat.GenericTypographic%2A>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3075">To obtain metrics suitable for adjacent strings in layout (for example, when implementing formatted text), use the <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> method or one of the <xref:System.Drawing.Graphics.MeasureString%2A> methods that takes a <xref:System.Drawing.StringFormat>, and pass <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</span></span> <span data-ttu-id="19ce0-3076">此外，确保<xref:System.Drawing.Graphics.TextRenderingHint%2A>为<xref:System.Drawing.Graphics>是<xref:System.Drawing.Text.TextRenderingHint.AntiAlias>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3076">Also, ensure the <xref:System.Drawing.Graphics.TextRenderingHint%2A> for the <xref:System.Drawing.Graphics> is <xref:System.Drawing.Text.TextRenderingHint.AntiAlias>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-3077">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3077">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-3078">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-3078">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-3079">创建要测量的字符串和字体对象设置为 Arial （16 点）</span><span class="sxs-lookup"><span data-stu-id="19ce0-3079">Creates a string to measure and a font object set to Arial (16 point)</span></span>  
  
-   <span data-ttu-id="19ce0-3080">创建一个点以定位该字符串的左上角。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3080">Creates a point to locate the upper-left corner of the string.</span></span>  
  
-   <span data-ttu-id="19ce0-3081">创建一个字符串格式对象并将它的格式标志设置为<xref:System.Drawing.StringFormatFlags.DirectionVertical>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3081">Creates a string format object and sets its format flags to <xref:System.Drawing.StringFormatFlags.DirectionVertical>.</span></span>  
  
-   <span data-ttu-id="19ce0-3082">创建用于测量字符串的大小的对象。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3082">Creates a size object to measure the string.</span></span>  
  
-   <span data-ttu-id="19ce0-3083">测量使用字符串、 字体对象、 定位点和字符串格式的字符串的大小。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3083">Measures the size of the string, using the string, the font object, the locating point, and the string format.</span></span>  
  
-   <span data-ttu-id="19ce0-3084">绘制一个红色矩形使用定位点和测得字符串大小。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3084">Draws a red rectangle using the locating point and the measured size of the string.</span></span>  
  
-   <span data-ttu-id="19ce0-3085">绘制绘制的矩形内的字符串。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3085">Draws the string within the drawn rectangle.</span></span>  
  
 <span data-ttu-id="19ce0-3086">结果是一个垂直矩形围垂直的字符串。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3086">The result is a vertical rectangle enclosing a vertical string.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#137](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#137)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#137](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#137)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#137](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#137)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="19ce0-3087">
            <paramref name="font" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3087">
              <paramref name="font" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
        <altmember cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
      </Docs>
    </Member>
    <Member MemberName="MeasureString">
      <MemberSignature Language="C#" Value="public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, System.Drawing.SizeF layoutArea, System.Drawing.StringFormat stringFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.SizeF MeasureString(string text, class System.Drawing.Font font, valuetype System.Drawing.SizeF layoutArea, class System.Drawing.StringFormat stringFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::SizeF MeasureString(System::String ^ text, System::Drawing::Font ^ font, System::Drawing::SizeF layoutArea, System::Drawing::StringFormat ^ stringFormat);" />
      <MemberSignature Language="F#" Value="member this.MeasureString : string * System.Drawing.Font * System.Drawing.SizeF * System.Drawing.StringFormat -&gt; System.Drawing.SizeF" Usage="graphics.MeasureString (text, font, layoutArea, stringFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="layoutArea" Type="System.Drawing.SizeF" />
        <Parameter Name="stringFormat" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="19ce0-3088">要测量的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3088">String to measure.</span>
          </span>
        </param>
        <param name="font">
          <span data-ttu-id="19ce0-3089">
            <see cref="T:System.Drawing.Font" /> 定义字符串的文本格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3089">
              <see cref="T:System.Drawing.Font" /> defines the text format of the string.</span>
          </span>
        </param>
        <param name="layoutArea">
          <span data-ttu-id="19ce0-3090">
            <see cref="T:System.Drawing.SizeF" /> 结构，它指定文本的最大布局区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3090">
              <see cref="T:System.Drawing.SizeF" /> structure that specifies the maximum layout area for the text.</span>
          </span>
        </param>
        <param name="stringFormat">
          <span data-ttu-id="19ce0-3091">
            <see cref="T:System.Drawing.StringFormat" />，它表示字符串的格式化信息（如行距）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3091">
              <see cref="T:System.Drawing.StringFormat" /> that represents formatting information, such as line spacing, for the string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-3092">测量用指定的 <see cref="T:System.Drawing.Font" /> 绘制并用指定的 <see cref="T:System.Drawing.StringFormat" /> 格式化的指定字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3092">Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" /> and formatted with the specified <see cref="T:System.Drawing.StringFormat" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19ce0-3093">此方法返回 <see cref="T:System.Drawing.SizeF" /> 结构，该结构表示在 <paramref name="text" /> 参数中指定的、用 <paramref name="font" /> 参数和 <paramref name="stringFormat" /> 参数绘制的字符串的大小，单位由 <see cref="P:System.Drawing.Graphics.PageUnit" /> 属性指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3093">This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size, in the units specified by the <see cref="P:System.Drawing.Graphics.PageUnit" /> property, of the string specified in the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter and the <paramref name="stringFormat" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-3094"><xref:System.Drawing.Graphics.MeasureString%2A>方法旨在用于使用与单个字符串和包含少量的额外空间之前和之后要供突出的标志符号的字符串。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3094">The <xref:System.Drawing.Graphics.MeasureString%2A> method is designed for use with individual strings and includes a small amount of extra space before and after the string to allow for overhanging glyphs.</span></span> <span data-ttu-id="19ce0-3095">此外，<xref:System.Drawing.Graphics.DrawString%2A>方法调整标志符号点以优化显示质量和可能显示不是报告的窄字符串<xref:System.Drawing.Graphics.MeasureString%2A>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3095">Also, the <xref:System.Drawing.Graphics.DrawString%2A> method adjusts glyph points to optimize display quality and might display a string narrower than reported by <xref:System.Drawing.Graphics.MeasureString%2A>.</span></span> <span data-ttu-id="19ce0-3096">若要获取适用于在布局中 （例如，实现格式化文本时） 的相邻字符串的度量值，使用<xref:System.Drawing.Graphics.MeasureCharacterRanges%2A>方法或之一<xref:System.Drawing.Graphics.MeasureString%2A>采用的方法<xref:System.Drawing.StringFormat>，并将传递<xref:System.Drawing.StringFormat.GenericTypographic%2A>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3096">To obtain metrics suitable for adjacent strings in layout (for example, when implementing formatted text), use the <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> method or one of the <xref:System.Drawing.Graphics.MeasureString%2A> methods that takes a <xref:System.Drawing.StringFormat>, and pass <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</span></span> <span data-ttu-id="19ce0-3097">此外，确保<xref:System.Drawing.Graphics.TextRenderingHint%2A>为<xref:System.Drawing.Graphics>是<xref:System.Drawing.Text.TextRenderingHint.AntiAlias>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3097">Also, ensure the <xref:System.Drawing.Graphics.TextRenderingHint%2A> for the <xref:System.Drawing.Graphics> is <xref:System.Drawing.Text.TextRenderingHint.AntiAlias>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-3098">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3098">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-3099">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-3099">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-3100">创建要测量的字符串和字体对象设置为 Arial （16 点）。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3100">Creates a string to measure and a font object set to Arial (16 point).</span></span>  
  
-   <span data-ttu-id="19ce0-3101">设置字符串，创建用于测量字符串的大小的对象的最大布局大小。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3101">Sets the maximum layout size of the string, creating a size object to measure the string.</span></span>  
  
-   <span data-ttu-id="19ce0-3102">创建一个字符串格式对象并将它的格式标志设置为<xref:System.Drawing.StringFormatFlags.DirectionVertical>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3102">Creates a string format object and sets its format flags to <xref:System.Drawing.StringFormatFlags.DirectionVertical>.</span></span>  
  
-   <span data-ttu-id="19ce0-3103">测量使用字符串、 字体对象、 最大布局大小和字符串格式的字符串的大小。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3103">Measures the size of the string, using the string, the font object, the maximum layout size, and the string format.</span></span>  
  
-   <span data-ttu-id="19ce0-3104">绘制一个红色矩形使用测得字符串大小。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3104">Draws a red rectangle using the measured size of the string.</span></span>  
  
-   <span data-ttu-id="19ce0-3105">绘制绘制的矩形内的字符串。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3105">Draws the string within the drawn rectangle.</span></span>  
  
 <span data-ttu-id="19ce0-3106">结果是一个垂直矩形围垂直的字符串。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3106">The result is a vertical rectangle enclosing a vertical string.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#139](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#139)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#139](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#139)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#139](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#139)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="19ce0-3107">
            <paramref name="font" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3107">
              <paramref name="font" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
        <altmember cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
      </Docs>
    </Member>
    <Member MemberName="MeasureString">
      <MemberSignature Language="C#" Value="public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, int width, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.SizeF MeasureString(string text, class System.Drawing.Font font, int32 width, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::SizeF MeasureString(System::String ^ text, System::Drawing::Font ^ font, int width, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.MeasureString : string * System.Drawing.Font * int * System.Drawing.StringFormat -&gt; System.Drawing.SizeF" Usage="graphics.MeasureString (text, font, width, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="19ce0-3108">要测量的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3108">String to measure.</span>
          </span>
        </param>
        <param name="font">
          <span data-ttu-id="19ce0-3109">
            <see cref="T:System.Drawing.Font" />，它定义字符串的文本格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3109">
              <see cref="T:System.Drawing.Font" /> that defines the text format of the string.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="19ce0-3110">字符串的最大宽度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3110">Maximum width of the string.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="19ce0-3111">
            <see cref="T:System.Drawing.StringFormat" />，它表示字符串的格式化信息（如行距）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3111">
              <see cref="T:System.Drawing.StringFormat" /> that represents formatting information, such as line spacing, for the string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-3112">测量用指定的 <see cref="T:System.Drawing.Font" /> 绘制并用指定的 <see cref="T:System.Drawing.StringFormat" /> 格式化的指定字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3112">Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" /> and formatted with the specified <see cref="T:System.Drawing.StringFormat" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19ce0-3113">此方法返回 <see cref="T:System.Drawing.SizeF" /> 结构，该结构表示在 <paramref name="text" /> 参数中指定的、用 <paramref name="font" /> 参数和 <paramref name="stringFormat" /> 参数绘制的字符串的大小，单位由 <see cref="P:System.Drawing.Graphics.PageUnit" /> 属性指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3113">This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size, in the units specified by the <see cref="P:System.Drawing.Graphics.PageUnit" /> property, of the string specified in the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter and the <paramref name="stringFormat" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-3114"><xref:System.Drawing.Graphics.MeasureString%2A>方法旨在用于使用与单个字符串和包含少量的额外空间之前和之后要供突出的标志符号的字符串。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3114">The <xref:System.Drawing.Graphics.MeasureString%2A> method is designed for use with individual strings and includes a small amount of extra space before and after the string to allow for overhanging glyphs.</span></span> <span data-ttu-id="19ce0-3115">此外，<xref:System.Drawing.Graphics.DrawString%2A>方法调整标志符号点以优化显示质量和可能显示不是报告的窄字符串<xref:System.Drawing.Graphics.MeasureString%2A>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3115">Also, the <xref:System.Drawing.Graphics.DrawString%2A> method adjusts glyph points to optimize display quality and might display a string narrower than reported by <xref:System.Drawing.Graphics.MeasureString%2A>.</span></span> <span data-ttu-id="19ce0-3116">若要获取适用于在布局中 （例如，实现格式化文本时） 的相邻字符串的度量值，使用<xref:System.Drawing.Graphics.MeasureCharacterRanges%2A>方法或之一<xref:System.Drawing.Graphics.MeasureString%2A>采用的方法<xref:System.Drawing.StringFormat>，并将传递<xref:System.Drawing.StringFormat.GenericTypographic%2A>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3116">To obtain metrics suitable for adjacent strings in layout (for example, when implementing formatted text), use the <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> method or one of the <xref:System.Drawing.Graphics.MeasureString%2A> methods that takes a <xref:System.Drawing.StringFormat>, and pass <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</span></span> <span data-ttu-id="19ce0-3117">此外，确保<xref:System.Drawing.Graphics.TextRenderingHint%2A>为<xref:System.Drawing.Graphics>是<xref:System.Drawing.Text.TextRenderingHint.AntiAlias>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3117">Also, ensure the <xref:System.Drawing.Graphics.TextRenderingHint%2A> for the <xref:System.Drawing.Graphics> is <xref:System.Drawing.Text.TextRenderingHint.AntiAlias>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-3118">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3118">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-3119">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-3119">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-3120">创建度量值和字体的字符串对象将其设置为 Arial （16 磅）。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3120">Creates a string to measure and a font object set it to Arial (16 point).</span></span>  
  
-   <span data-ttu-id="19ce0-3121">设置字符串的最大宽度。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3121">Sets the maximum width of the string.</span></span>  
  
-   <span data-ttu-id="19ce0-3122">创建一个字符串格式对象并将它的格式标志设置为<xref:System.Drawing.StringFormatFlags.DirectionVertical>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3122">Creates a string format object and sets its format flags to <xref:System.Drawing.StringFormatFlags.DirectionVertical>.</span></span>  
  
-   <span data-ttu-id="19ce0-3123">创建用于测量字符串的大小的对象。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3123">Creates a size object to measure the string.</span></span>  
  
-   <span data-ttu-id="19ce0-3124">测量使用字符串、 字体对象、 最大宽度和字符串格式的字符串的大小。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3124">Measures the size of the string, using the string, the font object, the maximum width, and the string format.</span></span>  
  
-   <span data-ttu-id="19ce0-3125">绘制一个红色矩形使用测得字符串大小。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3125">Draws a red rectangle using the measured size of the string.</span></span>  
  
-   <span data-ttu-id="19ce0-3126">绘制绘制的矩形内的字符串。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3126">Draws the string within the drawn rectangle.</span></span>  
  
 <span data-ttu-id="19ce0-3127">结果是一个垂直矩形围垂直的字符串。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3127">The result is a vertical rectangle enclosing a vertical string.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#142](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#142)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#142](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#142)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#142](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#142)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="19ce0-3128">
            <paramref name="font" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3128">
              <paramref name="font" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
        <altmember cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
      </Docs>
    </Member>
    <Member MemberName="MeasureString">
      <MemberSignature Language="C#" Value="public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, System.Drawing.SizeF layoutArea, System.Drawing.StringFormat stringFormat, out int charactersFitted, out int linesFilled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.SizeF MeasureString(string text, class System.Drawing.Font font, valuetype System.Drawing.SizeF layoutArea, class System.Drawing.StringFormat stringFormat, [out] int32&amp; charactersFitted, [out] int32&amp; linesFilled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::SizeF MeasureString(System::String ^ text, System::Drawing::Font ^ font, System::Drawing::SizeF layoutArea, System::Drawing::StringFormat ^ stringFormat, [Runtime::InteropServices::Out] int % charactersFitted, [Runtime::InteropServices::Out] int % linesFilled);" />
      <MemberSignature Language="F#" Value="member this.MeasureString : string * System.Drawing.Font * System.Drawing.SizeF * System.Drawing.StringFormat *  *  -&gt; System.Drawing.SizeF" Usage="graphics.MeasureString (text, font, layoutArea, stringFormat, charactersFitted, linesFilled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="layoutArea" Type="System.Drawing.SizeF" />
        <Parameter Name="stringFormat" Type="System.Drawing.StringFormat" />
        <Parameter Name="charactersFitted" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="linesFilled" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="19ce0-3129">要测量的字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3129">String to measure.</span>
          </span>
        </param>
        <param name="font">
          <span data-ttu-id="19ce0-3130">
            <see cref="T:System.Drawing.Font" />，它定义字符串的文本格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3130">
              <see cref="T:System.Drawing.Font" /> that defines the text format of the string.</span>
          </span>
        </param>
        <param name="layoutArea">
          <span data-ttu-id="19ce0-3131">
            <see cref="T:System.Drawing.SizeF" /> 结构，它指定文本的最大布局区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3131">
              <see cref="T:System.Drawing.SizeF" /> structure that specifies the maximum layout area for the text.</span>
          </span>
        </param>
        <param name="stringFormat">
          <span data-ttu-id="19ce0-3132">
            <see cref="T:System.Drawing.StringFormat" />，它表示字符串的格式化信息（如行距）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3132">
              <see cref="T:System.Drawing.StringFormat" /> that represents formatting information, such as line spacing, for the string.</span>
          </span>
        </param>
        <param name="charactersFitted">
          <span data-ttu-id="19ce0-3133">字符串中的字符数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3133">Number of characters in the string.</span>
          </span>
        </param>
        <param name="linesFilled">
          <span data-ttu-id="19ce0-3134">字符串中的文本行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3134">Number of text lines in the string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-3135">测量用指定的 <see cref="T:System.Drawing.Font" /> 绘制并用指定的 <see cref="T:System.Drawing.StringFormat" /> 格式化的指定字符串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3135">Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" /> and formatted with the specified <see cref="T:System.Drawing.StringFormat" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19ce0-3136">此方法返回 <see cref="T:System.Drawing.SizeF" /> 结构，该结构表示 <paramref name="text" /> 参数指定的、使用 <paramref name="font" /> 参数和 <paramref name="stringFormat" /> 参数绘制的字符串的大小，单位由 <see cref="P:System.Drawing.Graphics.PageUnit" /> 属性指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3136">This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size of the string, in the units specified by the <see cref="P:System.Drawing.Graphics.PageUnit" /> property, of the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter and the <paramref name="stringFormat" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-3137"><xref:System.Drawing.Graphics.MeasureString%2A>方法旨在用于使用与单个字符串和包含少量的额外空间之前和之后要供突出的标志符号的字符串。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3137">The <xref:System.Drawing.Graphics.MeasureString%2A> method is designed for use with individual strings and includes a small amount of extra space before and after the string to allow for overhanging glyphs.</span></span> <span data-ttu-id="19ce0-3138">此外，<xref:System.Drawing.Graphics.DrawString%2A>方法调整标志符号点以优化显示质量和可能显示不是报告的窄字符串<xref:System.Drawing.Graphics.MeasureString%2A>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3138">Also, the <xref:System.Drawing.Graphics.DrawString%2A> method adjusts glyph points to optimize display quality and might display a string narrower than reported by <xref:System.Drawing.Graphics.MeasureString%2A>.</span></span> <span data-ttu-id="19ce0-3139">若要获取适用于在布局中 （例如，实现格式化文本时） 的相邻字符串的度量值，使用<xref:System.Drawing.Graphics.MeasureCharacterRanges%2A>方法或之一<xref:System.Drawing.Graphics.MeasureString%2A>采用的方法<xref:System.Drawing.StringFormat>并将传递<xref:System.Drawing.StringFormat.GenericTypographic%2A>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3139">To obtain metrics suitable for adjacent strings in layout (for example, when implementing formatted text), use the <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> method or one of the <xref:System.Drawing.Graphics.MeasureString%2A> methods that takes a <xref:System.Drawing.StringFormat> and pass <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</span></span> <span data-ttu-id="19ce0-3140">另外，请确保<xref:System.Drawing.Graphics.TextRenderingHint%2A>为<xref:System.Drawing.Graphics>是<xref:System.Drawing.Text.TextRenderingHint.AntiAlias>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3140">Also ensure the <xref:System.Drawing.Graphics.TextRenderingHint%2A> for the <xref:System.Drawing.Graphics> is <xref:System.Drawing.Text.TextRenderingHint.AntiAlias>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-3141">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3141">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-3142">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-3142">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-3143">创建要测量的字符串和字体对象设置为 Arial （16 点）</span><span class="sxs-lookup"><span data-stu-id="19ce0-3143">Creates a string to measure and a font object set to Arial (16 point)</span></span>  
  
-   <span data-ttu-id="19ce0-3144">设置字符串的最大布局大小。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3144">Sets the maximum layout size of the string.</span></span>  
  
-   <span data-ttu-id="19ce0-3145">创建一个字符串格式对象并将它的格式标志设置为<xref:System.Drawing.StringFormatFlags.DirectionVertical>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3145">Creates a string format object and sets its format flags to <xref:System.Drawing.StringFormatFlags.DirectionVertical>.</span></span>  
  
-   <span data-ttu-id="19ce0-3146">创建整数变量`charactersFitted`和`linesFilled`和用于测量字符串的大小的对象。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3146">Creates the integer variables `charactersFitted` and `linesFilled` and a size object to measure the string.</span></span>  
  
-   <span data-ttu-id="19ce0-3147">测量字符串的大小，并确定的字符拟合和填充，使用字符串、 字体对象、 最大布局大小和字符串格式的行数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3147">Measures the size of the string and determines the number of characters fitted and lines filled, using the string, the font object, the maximum layout size, and the string format.</span></span>  
  
-   <span data-ttu-id="19ce0-3148">绘制一个红色矩形使用测得字符串大小。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3148">Draws a red rectangle using the measured size of the string.</span></span>  
  
-   <span data-ttu-id="19ce0-3149">绘制绘制的矩形内的字符串。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3149">Draws the string within the drawn rectangle.</span></span>  
  
-   <span data-ttu-id="19ce0-3150">绘制的字符拟合和填充的行数的值。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3150">Draws the values of the number of characters fitted and lines filled.</span></span>  
  
 <span data-ttu-id="19ce0-3151">结果是一个垂直矩形围垂直的字符串。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3151">The result is a vertical rectangle enclosing a vertical string.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#140](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#140)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#140](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#140)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#140](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#140)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="19ce0-3152">
            <paramref name="font" /> 为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3152">
              <paramref name="font" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
        <altmember cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="MultiplyTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-3153">将此 <see cref="T:System.Drawing.Graphics" /> 的世界变换乘以指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3153">Multiplies the world transformation of this <see cref="T:System.Drawing.Graphics" /> and specified the <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MultiplyTransform">
      <MemberSignature Language="C#" Value="public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MultiplyTransform(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MultiplyTransform(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.MultiplyTransform : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphics.MultiplyTransform matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="19ce0-3154">乘以世界变换的 4x4 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3154">4x4 <see cref="T:System.Drawing.Drawing2D.Matrix" /> that multiplies the world transformation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-3155">将此 <see cref="T:System.Drawing.Graphics" /> 的世界变换乘以指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3155">Multiplies the world transformation of this <see cref="T:System.Drawing.Graphics" /> and specified the <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-3156">此方法将指定的矩阵添加前`matrix`参数，以使结果`matrix`x 世界变换。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3156">This method prepends the matrix specified by the `matrix` parameter, so that the result is `matrix` x world transformation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-3157">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3157">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-3158">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-3158">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-3159">创建`transformMatrix`矩阵 （两个由两个单位矩阵加上零转换向量）。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3159">Creates a `transformMatrix` matrix (a two by two identity matrix plus a zero-translation vector).</span></span>  
  
-   <span data-ttu-id="19ce0-3160">平移向量 （200，100） 的转换矩阵。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3160">Translates the transform matrix by a vector (200, 100).</span></span>  
  
-   <span data-ttu-id="19ce0-3161">将 Windows 窗体的世界转换矩阵旋转 30 度，将添加前 30 度到窗体的转换矩阵的旋转矩阵。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3161">Rotates the world transformation matrix of the Windows Form by 30 degrees, prepends the rotation matrix for 30 degrees to the form's transformation matrix.</span></span>  
  
-   <span data-ttu-id="19ce0-3162">旋转的世界转换矩阵乘以转换`transformMatrix`，和前面添加`transformMatrix`到世界变换矩阵。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3162">Multiplies the rotated world transformation matrix by the translated `transformMatrix`, and prepends the `transformMatrix` to the world transformation matrix.</span></span>  
  
-   <span data-ttu-id="19ce0-3163">绘制经过旋转、 平移椭圆。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3163">Draws a rotated, translated ellipse.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#143](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#143)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#143](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#143)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#143](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#143)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyTransform">
      <MemberSignature Language="C#" Value="public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MultiplyTransform(class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MultiplyTransform(System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.MultiplyTransform : System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="graphics.MultiplyTransform (matrix, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="19ce0-3164">乘以世界变换的 4x4 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3164">4x4 <see cref="T:System.Drawing.Drawing2D.Matrix" /> that multiplies the world transformation.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="19ce0-3165">
            <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 枚举的成员，它确定乘法的顺序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3165">Member of the <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that determines the order of the multiplication.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-3166">以指定顺序将此 <see cref="T:System.Drawing.Graphics" /> 的世界变换乘以指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3166">Multiplies the world transformation of this <see cref="T:System.Drawing.Graphics" /> and specified the <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-3167">值为<xref:System.Drawing.Drawing2D.MatrixOrder.Prepend>为`order`参数指定乘法的顺序是`matrix`x 世界变换。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3167">A value of <xref:System.Drawing.Drawing2D.MatrixOrder.Prepend> for the `order` parameter specifies that the order of the multiplication is `matrix` x world transformation.</span></span> <span data-ttu-id="19ce0-3168">值为<xref:System.Drawing.Drawing2D.MatrixOrder.Append>为`order`指定乘法的顺序是世界变换 x `matrix`。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3168">A value of <xref:System.Drawing.Drawing2D.MatrixOrder.Append> for `order` specifies that the order of the multiplication is world transformation x `matrix`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-3169">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3169">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-3170">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-3170">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-3171">创建`transformMatrix`矩阵 （两个由两个单位矩阵加上零转换向量）。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3171">Creates a `transformMatrix` matrix (a two by two identity matrix plus a zero-translation vector).</span></span>  
  
-   <span data-ttu-id="19ce0-3172">平移向量 （200，100） 的转换矩阵。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3172">Translates the transform matrix by a vector (200, 100).</span></span>  
  
-   <span data-ttu-id="19ce0-3173">Windows 窗体的世界转换矩阵旋转 30 度，预先计算 30 度到窗体的转换矩阵的旋转矩阵。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3173">Rotates the world transformation matrix of the Windows Form by 30 degrees, prepending the rotation matrix for 30 degrees to the form's transformation matrix.</span></span>  
  
-   <span data-ttu-id="19ce0-3174">旋转的世界转换矩阵乘以转换`transformMatrix`、 追加`transformMatrix`到世界变换矩阵。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3174">Multiplies the rotated world transformation matrix by the translated `transformMatrix`, appending the `transformMatrix` to the world transformation matrix.</span></span>  
  
-   <span data-ttu-id="19ce0-3175">绘制经过旋转、 平移椭圆。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3175">Draws a rotated, translated ellipse.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#144](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#144)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#144](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#144)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#144](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#144)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageScale">
      <MemberSignature Language="C#" Value="public float PageScale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 PageScale" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.PageScale" />
      <MemberSignature Language="VB.NET" Value="Public Property PageScale As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float PageScale { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.PageScale : single with get, set" Usage="System.Drawing.Graphics.PageScale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-3176">获取或设置此 <see cref="T:System.Drawing.Graphics" /> 的世界单位和页单位之间的比例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3176">Gets or sets the scaling between world units and page units for this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19ce0-3177">此属性指定此 <see cref="T:System.Drawing.Graphics" /> 的世界单位和页单位之间的比例值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3177">This property specifies a value for the scaling between world units and page units for this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19ce0-3178">下面的代码示例演示如何使用<xref:System.Drawing.Graphics.PageScale%2A>和<xref:System.Drawing.Graphics.TranslateTransform%2A>成员可以更改的缩放和来源时绘制矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3178">The following code example demonstrates how to use the <xref:System.Drawing.Graphics.PageScale%2A> and <xref:System.Drawing.Graphics.TranslateTransform%2A> members to change the scale and origin when you draw a rectangle.</span></span>  
  
 <span data-ttu-id="19ce0-3179">本示例旨在与 Windows 窗体一起使用。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3179">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="19ce0-3180">将代码粘贴到窗体并调用`ChangePageScaleAndTranslateTransform`方法时处理该窗体的<xref:System.Windows.Forms.Control.Paint>事件，并传递`e`作为<xref:System.Windows.Forms.PaintEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3180">Paste the code into a form and call the `ChangePageScaleAndTranslateTransform` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.GraphicsProperties#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.GraphicsProperties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CS/form1.cs#2)]
 [!code-vb[System.Drawing.GraphicsProperties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageUnit">
      <MemberSignature Language="C#" Value="public System.Drawing.GraphicsUnit PageUnit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.GraphicsUnit PageUnit" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.PageUnit" />
      <MemberSignature Language="VB.NET" Value="Public Property PageUnit As GraphicsUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::GraphicsUnit PageUnit { System::Drawing::GraphicsUnit get(); void set(System::Drawing::GraphicsUnit value); };" />
      <MemberSignature Language="F#" Value="member this.PageUnit : System.Drawing.GraphicsUnit with get, set" Usage="System.Drawing.Graphics.PageUnit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.GraphicsUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-3181">获取或设置用于此 <see cref="T:System.Drawing.Graphics" /> 中的页坐标的度量单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3181">Gets or sets the unit of measure used for page coordinates in this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19ce0-3182">除 <see cref="F:System.Drawing.GraphicsUnit.World" /> 以外的 <see cref="T:System.Drawing.GraphicsUnit" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3182">One of the <see cref="T:System.Drawing.GraphicsUnit" /> values other than <see cref="F:System.Drawing.GraphicsUnit.World" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-3183">图形单元是用于在此页坐标的度量值的单位<xref:System.Drawing.Graphics>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3183">The graphics unit is the unit of measure used for page coordinates in this <xref:System.Drawing.Graphics>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-3184">下面的代码示例演示如何更改的效果<xref:System.Drawing.Graphics.PageUnit%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3184">The following code example demonstrates the effect of changing the <xref:System.Drawing.Graphics.PageUnit%2A> property.</span></span>  
  
 <span data-ttu-id="19ce0-3185">本示例旨在与 Windows 窗体一起使用。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3185">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="19ce0-3186">将代码粘贴到窗体并调用`ChangePageUnit`方法时处理该窗体的<xref:System.Windows.Forms.Control.Paint>事件，并传递`e`作为<xref:System.Windows.Forms.PaintEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3186">Paste the code into a form and call the `ChangePageUnit` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.GraphicsProperties#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.GraphicsProperties#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CS/form1.cs#3)]
 [!code-vb[System.Drawing.GraphicsProperties#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="19ce0-3187">
            <see cref="P:System.Drawing.Graphics.PageUnit" /> 设置为 <see cref="F:System.Drawing.GraphicsUnit.World" />，此值不是物理单位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3187">
              <see cref="P:System.Drawing.Graphics.PageUnit" /> is set to <see cref="F:System.Drawing.GraphicsUnit.World" />, which is not a physical unit.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PixelOffsetMode">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.PixelOffsetMode PixelOffsetMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.PixelOffsetMode PixelOffsetMode" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.PixelOffsetMode" />
      <MemberSignature Language="VB.NET" Value="Public Property PixelOffsetMode As PixelOffsetMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::PixelOffsetMode PixelOffsetMode { System::Drawing::Drawing2D::PixelOffsetMode get(); void set(System::Drawing::Drawing2D::PixelOffsetMode value); };" />
      <MemberSignature Language="F#" Value="member this.PixelOffsetMode : System.Drawing.Drawing2D.PixelOffsetMode with get, set" Usage="System.Drawing.Graphics.PixelOffsetMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.PixelOffsetMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-3188">获取或设置一个值，该值指定在呈现此 <see cref="T:System.Drawing.Graphics" /> 的过程中像素如何偏移。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3188">Gets or set a value specifying how pixels are offset during rendering of this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19ce0-3189">此属性指定 <see cref="T:System.Drawing.Drawing2D.PixelOffsetMode" /> 枚举的成员。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3189">This property specifies a member of the <see cref="T:System.Drawing.Drawing2D.PixelOffsetMode" /> enumeration</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-3190">此属性用于指定此内容的任一更高质量、 低速呈现或质量较低，更快呈现<xref:System.Drawing.Graphics>对象。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3190">Use this property to specify either higher quality, slower rendering, or lower quality, faster rendering of the contents of this <xref:System.Drawing.Graphics> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReleaseHdc">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-3191">释放通过以前对此 <see cref="T:System.Drawing.Graphics" /> 的 <see cref="M:System.Drawing.Graphics.GetHdc" /> 方法的调用获得的设备上下文句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3191">Releases a device context handle obtained by a previous call to the <see cref="M:System.Drawing.Graphics.GetHdc" /> method of this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReleaseHdc">
      <MemberSignature Language="C#" Value="public void ReleaseHdc ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseHdc() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.ReleaseHdc" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseHdc ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseHdc();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseHdc : unit -&gt; unit&#xA;override this.ReleaseHdc : unit -&gt; unit" Usage="graphics.ReleaseHdc " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Drawing.IDeviceContext.ReleaseHdc</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-3192">释放通过以前对此 <see cref="T:System.Drawing.Graphics" /> 的 <see cref="M:System.Drawing.Graphics.GetHdc" /> 方法的调用获得的设备上下文句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3192">Releases a device context handle obtained by a previous call to the <see cref="M:System.Drawing.Graphics.GetHdc" /> method of this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-3193"><xref:System.Drawing.Graphics.GetHdc%2A> 和<xref:System.Drawing.Graphics.ReleaseHdc%2A>两种方法，可用于获取和发布 Windows 设备的句柄。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3193"><xref:System.Drawing.Graphics.GetHdc%2A> and <xref:System.Drawing.Graphics.ReleaseHdc%2A> are two methods that allow you to get and release the handle for a Windows device.</span></span> <span data-ttu-id="19ce0-3194">你应始终遵循调用<xref:System.Drawing.Graphics.GetHdc%2A>通过调用<xref:System.Drawing.Graphics.ReleaseHdc%2A>完成之后使用的 Windows 句柄。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3194">You should always follow a call to <xref:System.Drawing.Graphics.GetHdc%2A> with a call to <xref:System.Drawing.Graphics.ReleaseHdc%2A> when you are finished with the Windows handle.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="19ce0-3195">用于访问非托管代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3195">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="19ce0-3196">相关枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3196">Related enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Drawing.IDeviceContext" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseHdc">
      <MemberSignature Language="C#" Value="public void ReleaseHdc (IntPtr hdc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseHdc(native int hdc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.ReleaseHdc(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseHdc (hdc As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseHdc(IntPtr hdc);" />
      <MemberSignature Language="F#" Value="member this.ReleaseHdc : nativeint -&gt; unit" Usage="graphics.ReleaseHdc hdc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hdc" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hdc">
          <span data-ttu-id="19ce0-3197">通过以前对此 <see cref="T:System.Drawing.Graphics" /> 的 <see cref="M:System.Drawing.Graphics.GetHdc" /> 方法的调用获得的设备上下文句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3197">Handle to a device context obtained by a previous call to the <see cref="M:System.Drawing.Graphics.GetHdc" /> method of this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-3198">释放通过以前对此 <see cref="T:System.Drawing.Graphics" /> 的 <see cref="M:System.Drawing.Graphics.GetHdc" /> 方法的调用获得的设备上下文句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3198">Releases a device context handle obtained by a previous call to the <see cref="M:System.Drawing.Graphics.GetHdc" /> method of this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-3199">设备上下文是基于 Windows 结构[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]，它定义一组的图形对象和其关联的属性，以及影响输出的图形模式。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3199">The device context is a Windows structure based on [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] that defines a set of graphical objects and their associated attributes, as well as the graphical modes that affect output.</span></span>  
  
 <span data-ttu-id="19ce0-3200">调用<xref:System.Drawing.Graphics.GetHdc%2A>和<xref:System.Drawing.Graphics.ReleaseHdc%2A>方法必须成对出现。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3200">Calls to the <xref:System.Drawing.Graphics.GetHdc%2A> and <xref:System.Drawing.Graphics.ReleaseHdc%2A> methods must appear in pairs.</span></span> <span data-ttu-id="19ce0-3201">期间的作用域<xref:System.Drawing.Graphics.GetHdc%2A>和<xref:System.Drawing.Graphics.ReleaseHdc%2A>方法对，你通常会使调用只能与[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]函数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3201">During the scope of a <xref:System.Drawing.Graphics.GetHdc%2A> and <xref:System.Drawing.Graphics.ReleaseHdc%2A> method pair, you usually make calls only to [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] functions.</span></span> <span data-ttu-id="19ce0-3202">调用在该范围内到[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]方法<xref:System.Drawing.Graphics>生成`hdc`参数因`ObjectBusy`错误。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3202">Calls in that scope made to [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] methods of the <xref:System.Drawing.Graphics> that produced the `hdc` parameter fail with an `ObjectBusy` error.</span></span> <span data-ttu-id="19ce0-3203">此外，[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]忽略对所做的任何状态更改<xref:System.Drawing.Graphics>的`hdc`在后续操作中的参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3203">Also, [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] ignores any state changes made to the <xref:System.Drawing.Graphics> of the `hdc` parameter in subsequent operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-3204">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3204">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-3205">该示例说明了调用 Windows[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]函数来执行相同的任务[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]<xref:System.Drawing.Graphics>方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3205">The example illustrates calling a Windows [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] function to perform the same task as a [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] <xref:System.Drawing.Graphics> method.</span></span> <span data-ttu-id="19ce0-3206">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-3206">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-3207">定义互操作性<xref:System.Runtime.InteropServices.DllImportAttribute>Windows DLL 文件 gdi32.dll 的属性。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3207">Defines the interoperability <xref:System.Runtime.InteropServices.DllImportAttribute> attribute for the Windows DLL file gdi32.dll.</span></span> <span data-ttu-id="19ce0-3208">此 DLL 包含所需[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]函数，并且它定义<xref:System.Drawing.Rectangle>，即外部该 DLL 中的函数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3208">This DLL contains the desired [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] function, and it defines the <xref:System.Drawing.Rectangle> function in that DLL as external.</span></span>  
  
-   <span data-ttu-id="19ce0-3209">创建一个红色的笔。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3209">Creates a red pen.</span></span>  
  
-   <span data-ttu-id="19ce0-3210">使用笔，向屏幕使用绘制一个矩形[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]<xref:System.Drawing.Graphics.DrawRectangle%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3210">With the pen, draws a rectangle to the screen using the [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] <xref:System.Drawing.Graphics.DrawRectangle%2A> method.</span></span>  
  
-   <span data-ttu-id="19ce0-3211">定义了一个内部指针类型变量`hdc`并将其值设置为窗体的设备上下文的句柄。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3211">Defines an internal pointer type variable `hdc` and sets its value to the handle to the device context of the form.</span></span>  
  
-   <span data-ttu-id="19ce0-3212">向屏幕使用绘制一个矩形[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]<xref:System.Drawing.Rectangle>函数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3212">Draws a rectangle to the screen using the [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] <xref:System.Drawing.Rectangle> function.</span></span>  
  
-   <span data-ttu-id="19ce0-3213">释放所表示的设备上下文`hdc`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3213">Releases the device context represented by the `hdc` parameter.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#145](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#145)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#145](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#145)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#145](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#145)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="19ce0-3214">用于访问非托管代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3214">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="19ce0-3215">相关枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3215">Related enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ReleaseHdcInternal">
      <MemberSignature Language="C#" Value="public void ReleaseHdcInternal (IntPtr hdc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseHdcInternal(native int hdc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.ReleaseHdcInternal(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseHdcInternal (hdc As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseHdcInternal(IntPtr hdc);" />
      <MemberSignature Language="F#" Value="member this.ReleaseHdcInternal : nativeint -&gt; unit" Usage="graphics.ReleaseHdcInternal hdc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hdc" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hdc">
          <span data-ttu-id="19ce0-3216">设备上下文的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3216">Handle to a device context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-3217">释放设备上下文的句柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3217">Releases a handle to a device context.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="19ce0-3218">用于访问非托管代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3218">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="19ce0-3219">相关枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3219">Related enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="RenderingOrigin">
      <MemberSignature Language="C#" Value="public System.Drawing.Point RenderingOrigin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point RenderingOrigin" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.RenderingOrigin" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderingOrigin As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point RenderingOrigin { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberSignature Language="F#" Value="member this.RenderingOrigin : System.Drawing.Point with get, set" Usage="System.Drawing.Graphics.RenderingOrigin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-3220">为抵色处理和阴影画笔获取或设置此 <see cref="T:System.Drawing.Graphics" /> 的呈现原点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3220">Gets or sets the rendering origin of this <see cref="T:System.Drawing.Graphics" /> for dithering and for hatch brushes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19ce0-3221">一个 <see cref="T:System.Drawing.Point" /> 结构，它表示 8 位/像素和 16 位/像素抖色处理的抖色原点，还用于设置阴影画笔的原点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3221">A <see cref="T:System.Drawing.Point" /> structure that represents the dither origin for 8-bits-per-pixel and 16-bits-per-pixel dithering and is also used to set the origin for hatch brushes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetClip">
      <MemberSignature Language="C#" Value="public void ResetClip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetClip() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.ResetClip" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetClip ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetClip();" />
      <MemberSignature Language="F#" Value="member this.ResetClip : unit -&gt; unit" Usage="graphics.ResetClip " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-3222">将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域重置为无限区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3222">Resets the clip region of this <see cref="T:System.Drawing.Graphics" /> to an infinite region.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-3223">时的剪辑区域<xref:System.Drawing.Graphics>为无限制，此项<xref:System.Drawing.Graphics>不剪切绘制。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3223">When the clipping region of a <xref:System.Drawing.Graphics> is infinite, items that this <xref:System.Drawing.Graphics> draws are not clipped.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-3224">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3224">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-3225">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-3225">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-3226">创建一个矩形的左上角，位于 （0，0） 和剪辑区域设置到此矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3226">Creates a rectangle with upper-left corner at (0, 0) and sets the clipping region to this rectangle.</span></span>  
  
-   <span data-ttu-id="19ce0-3227">创建第二个矩形的左上角，位于 （100，100） 和剪辑区域设置将此矩形交集的当前剪辑区域 （第一个矩形）。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3227">Creates a second rectangle with upper-left corner at (100, 100) and sets the clipping region to the intersection of this rectangle and the current clipping region (the first rectangle).</span></span>  
  
-   <span data-ttu-id="19ce0-3228">填充包括纯蓝色画笔与前的两个矩形大矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3228">Fills a large rectangle that includes both previous rectangles with a solid blue brush.</span></span>  
  
-   <span data-ttu-id="19ce0-3229">将的剪辑区域重置为无限。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3229">Resets the clipping region to infinite.</span></span>  
  
-   <span data-ttu-id="19ce0-3230">在两个剪辑区域中; 周围绘制矩形它使用黑色钢笔的第一个剪辑矩形和红色钢笔的第二个剪辑区域。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3230">Draws rectangles around the two clipping regions; it uses a black pen for the first clipping rectangle and a red pen for the second clipping region.</span></span>  
  
 <span data-ttu-id="19ce0-3231">结果是仅两个矩形交集用蓝色填充。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3231">The result is that only the intersection of the two rectangles is filled with blue.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#146](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#146)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#146](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#146)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#146](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#146)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetTransform">
      <MemberSignature Language="C#" Value="public void ResetTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetTransform() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.ResetTransform" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetTransform ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetTransform();" />
      <MemberSignature Language="F#" Value="member this.ResetTransform : unit -&gt; unit" Usage="graphics.ResetTransform " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-3232">将此 <see cref="T:System.Drawing.Graphics" /> 的世界变换矩阵重置为单位矩阵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3232">Resets the world transformation matrix of this <see cref="T:System.Drawing.Graphics" /> to the identity matrix.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-3233">标识矩阵表示无缩放、 旋转或平移一个转换。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3233">The identity matrix represents a transformation with no scaling, rotation, or translation.</span></span> <span data-ttu-id="19ce0-3234">重置的世界变换<xref:System.Drawing.Graphics>为单位矩阵意味着其世界转换不会更改转换后的项目的几何图形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3234">Resetting the world transformation of this <xref:System.Drawing.Graphics> to the identity matrix means that its world transformation does not change the geometry of transformed items.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-3235">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3235">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-3236">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-3236">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-3237">将 Windows 窗体的世界变换平移向量 （100，0）。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3237">Translates the world transform of the Windows Form by a vector (100, 0).</span></span>  
  
-   <span data-ttu-id="19ce0-3238">保存该窗体的图形状态。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3238">Saves the graphics state of the form.</span></span>  
  
-   <span data-ttu-id="19ce0-3239">将窗体的世界变换重置为一个标识，并用纯红色画笔填充矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3239">Resets the world transform of the form to an identity and fills a rectangle with a solid red brush.</span></span>  
  
-   <span data-ttu-id="19ce0-3240">还原的已翻译的图形状态并与纯蓝色画笔填充的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3240">Restores the translated graphics state and fills a rectangle with a solid blue brush.</span></span>  
  
 <span data-ttu-id="19ce0-3241">结果是一个未转换的红色填充的矩形，并且已翻译的蓝色填充的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3241">The result is an untranslated red-filled rectangle and a translated blue-filled rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#147](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#147)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#147](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#147)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#147](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#147)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Restore">
      <MemberSignature Language="C#" Value="public void Restore (System.Drawing.Drawing2D.GraphicsState gstate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Restore(class System.Drawing.Drawing2D.GraphicsState gstate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Restore (gstate As GraphicsState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Restore(System::Drawing::Drawing2D::GraphicsState ^ gstate);" />
      <MemberSignature Language="F#" Value="member this.Restore : System.Drawing.Drawing2D.GraphicsState -&gt; unit" Usage="graphics.Restore gstate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gstate" Type="System.Drawing.Drawing2D.GraphicsState" />
      </Parameters>
      <Docs>
        <param name="gstate">
          <span data-ttu-id="19ce0-3242">
            <see cref="T:System.Drawing.Drawing2D.GraphicsState" />，它表示要将此 <see cref="T:System.Drawing.Graphics" /> 还原到的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3242">
              <see cref="T:System.Drawing.Drawing2D.GraphicsState" /> that represents the state to which to restore this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-3243">将此 <see cref="T:System.Drawing.Graphics" /> 的状态还原到 <see cref="T:System.Drawing.Drawing2D.GraphicsState" /> 表示的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3243">Restores the state of this <see cref="T:System.Drawing.Graphics" /> to the state represented by a <see cref="T:System.Drawing.Drawing2D.GraphicsState" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-3244">当调用<xref:System.Drawing.Graphics.Save%2A>方法<xref:System.Drawing.Graphics>，保存的状态信息块<xref:System.Drawing.Graphics>放置在堆栈上。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3244">When you call the <xref:System.Drawing.Graphics.Save%2A> method of a <xref:System.Drawing.Graphics>, an information block that holds the state of the <xref:System.Drawing.Graphics> is put on a stack.</span></span> <span data-ttu-id="19ce0-3245"><xref:System.Drawing.Graphics.Save%2A>方法返回<xref:System.Drawing.Drawing2D.GraphicsState>标识该信息块。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3245">The <xref:System.Drawing.Graphics.Save%2A> method returns a <xref:System.Drawing.Drawing2D.GraphicsState> that identifies that information block.</span></span> <span data-ttu-id="19ce0-3246">传递时，标识<xref:System.Drawing.Drawing2D.GraphicsState>到<xref:System.Drawing.Graphics.Restore%2A>方法，该信息块从堆栈中移除，并用于还原<xref:System.Drawing.Graphics>到它所处的时间中的状态<xref:System.Drawing.Graphics.Save%2A>方法调用。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3246">When you pass the identifying <xref:System.Drawing.Drawing2D.GraphicsState> to the <xref:System.Drawing.Graphics.Restore%2A> method, the information block is removed from the stack and is used to restore the <xref:System.Drawing.Graphics> to the state it was in at the time of the <xref:System.Drawing.Graphics.Save%2A> method call.</span></span> <span data-ttu-id="19ce0-3247">请注意，<xref:System.Drawing.Drawing2D.GraphicsState>给定调用返回<xref:System.Drawing.Graphics.Save%2A>方法可以一次传递给`Restore`方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3247">Note that the <xref:System.Drawing.Drawing2D.GraphicsState> returned by a given call to the <xref:System.Drawing.Graphics.Save%2A> method can be passed only once to the `Restore` method.</span></span>  
  
 <span data-ttu-id="19ce0-3248">调用<xref:System.Drawing.Graphics.Save%2A>方法可以嵌套; 也就是说，你可以调用<xref:System.Drawing.Graphics.Save%2A>方法调用之前多次<xref:System.Drawing.Graphics.Restore%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3248">Calls to the <xref:System.Drawing.Graphics.Save%2A> method can be nested; that is, you can call the <xref:System.Drawing.Graphics.Save%2A> method several times before you call the <xref:System.Drawing.Graphics.Restore%2A> method.</span></span> <span data-ttu-id="19ce0-3249">每次调用<xref:System.Drawing.Graphics.Save%2A>方法，信息块放在堆栈，并且您收到<xref:System.Drawing.Drawing2D.GraphicsState>信息块。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3249">Each time you call the <xref:System.Drawing.Graphics.Save%2A> method, an information block is put on the stack, and you receive a <xref:System.Drawing.Drawing2D.GraphicsState> for the information block.</span></span> <span data-ttu-id="19ce0-3250">传递时，这些对象附加到之一<xref:System.Drawing.Graphics.Restore%2A>方法，<xref:System.Drawing.Graphics>返回到它所处的时间中的状态<xref:System.Drawing.Graphics.Save%2A>方法调用返回了该特定<xref:System.Drawing.Drawing2D.GraphicsState>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3250">When you pass one of those objects to the <xref:System.Drawing.Graphics.Restore%2A> method, the <xref:System.Drawing.Graphics> is returned to the state it was in at the time of the <xref:System.Drawing.Graphics.Save%2A> method call that returned that particular <xref:System.Drawing.Drawing2D.GraphicsState>.</span></span> <span data-ttu-id="19ce0-3251">信息块将位于堆栈上的<xref:System.Drawing.Graphics.Save%2A>从堆栈中，删除方法调用和所有信息块后，该堆栈上都放置<xref:System.Drawing.Graphics.Save%2A>方法调用也将被删除。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3251">The information block placed on the stack by that <xref:System.Drawing.Graphics.Save%2A> method call is removed from the stack, and all information blocks placed on that stack after that <xref:System.Drawing.Graphics.Save%2A> method call are also removed.</span></span>  
  
 <span data-ttu-id="19ce0-3252">调用<xref:System.Drawing.Graphics.BeginContainer%2A>方法相同为对调用堆栈上的位置信息块<xref:System.Drawing.Graphics.Save%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3252">Calls to the <xref:System.Drawing.Graphics.BeginContainer%2A> method place information blocks on the same stack as calls to the <xref:System.Drawing.Graphics.Save%2A> method.</span></span> <span data-ttu-id="19ce0-3253">就像<xref:System.Drawing.Graphics.Restore%2A>调用配合<xref:System.Drawing.Graphics.Save%2A>调用，<xref:System.Drawing.Graphics.EndContainer%2A>方法调用配合<xref:System.Drawing.Graphics.BeginContainer%2A>方法调用。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3253">Just as a <xref:System.Drawing.Graphics.Restore%2A> call is paired with a <xref:System.Drawing.Graphics.Save%2A> call, a <xref:System.Drawing.Graphics.EndContainer%2A> method call is paired with a <xref:System.Drawing.Graphics.BeginContainer%2A> method call.</span></span>  
  
 <span data-ttu-id="19ce0-3254">当调用<xref:System.Drawing.Graphics.Restore%2A>方法，在堆栈上放置的所有信息块 (通过<xref:System.Drawing.Graphics.Save%2A>方法或通过<xref:System.Drawing.Graphics.BeginContainer%2A>方法) 在相应调用<xref:System.Drawing.Graphics.Save%2A>从堆栈中移除方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3254">When you call the <xref:System.Drawing.Graphics.Restore%2A> method, all information blocks placed on the stack (by the <xref:System.Drawing.Graphics.Save%2A> method or by the <xref:System.Drawing.Graphics.BeginContainer%2A> method) after the corresponding call to the <xref:System.Drawing.Graphics.Save%2A> method are removed from the stack.</span></span> <span data-ttu-id="19ce0-3255">同样，当调用<xref:System.Drawing.Graphics.EndContainer%2A>方法，在堆栈上放置的所有信息块 (通过<xref:System.Drawing.Graphics.Save%2A>方法或通过<xref:System.Drawing.Graphics.BeginContainer%2A>方法) 在相应调用<xref:System.Drawing.Graphics.BeginContainer%2A>从堆栈中移除方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3255">Likewise, when you call the <xref:System.Drawing.Graphics.EndContainer%2A> method, all information blocks placed on the stack (by the <xref:System.Drawing.Graphics.Save%2A> method or by the <xref:System.Drawing.Graphics.BeginContainer%2A> method) after the corresponding call to the <xref:System.Drawing.Graphics.BeginContainer%2A> method are removed from the stack.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-3256">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3256">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-3257">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-3257">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-3258">将 Windows 窗体的世界变换平移向量 （100，0）。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3258">Translates the world transform of the Windows Form by a vector (100, 0).</span></span>  
  
-   <span data-ttu-id="19ce0-3259">保存该窗体的图形状态。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3259">Saves the graphics state of the form.</span></span>  
  
-   <span data-ttu-id="19ce0-3260">将窗体的世界变换重置为一个标识，并用纯红色画笔填充矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3260">Resets the world transform of the form to an identity and fills a rectangle with a solid red brush.</span></span>  
  
-   <span data-ttu-id="19ce0-3261">还原已翻译的图形状态并与纯蓝色画笔填充第二个矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3261">Restores the translated graphics state and fills a second rectangle with a solid blue brush.</span></span>  
  
 <span data-ttu-id="19ce0-3262">结果是一个未转换的红色填充的矩形，并且已翻译的蓝色填充的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3262">The result is an untranslated red-filled rectangle and a translated blue-filled rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#148](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#148)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#148](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#148)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#148](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#148)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RotateTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-3263">将指定旋转应用于此 <see cref="T:System.Drawing.Graphics" /> 的变换矩阵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3263">Applies the specified rotation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RotateTransform">
      <MemberSignature Language="C#" Value="public void RotateTransform (float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateTransform(float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.RotateTransform(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateTransform (angle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateTransform(float angle);" />
      <MemberSignature Language="F#" Value="member this.RotateTransform : single -&gt; unit" Usage="graphics.RotateTransform angle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="angle">
          <span data-ttu-id="19ce0-3264">旋转角度（以度为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3264">Angle of rotation in degrees.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-3265">将指定旋转应用于此 <see cref="T:System.Drawing.Graphics" /> 的变换矩阵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3265">Applies the specified rotation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-3266">旋转操作包括将乘以通过其元素派生自矩阵的转换矩阵`angle`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3266">The rotation operation consists of multiplying the transformation matrix by a matrix whose elements are derived from the `angle` parameter.</span></span> <span data-ttu-id="19ce0-3267">此方法将旋转应用到变换矩阵左乘该通过。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3267">This method applies the rotation by prepending it to the transformation matrix.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-3268">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3268">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-3269">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-3269">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-3270">平移的向量 （100，0） 的 Windows 窗体的世界转换矩阵。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3270">Translates the world transformation matrix of the Windows Form by the vector (100, 0).</span></span>  
  
-   <span data-ttu-id="19ce0-3271">旋转角度的 30 度，预先计算的世界变换矩阵的旋转矩阵的世界转换。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3271">Rotates the world transformation by an angle of 30 degrees, prepending the rotation matrix to the world transformation matrix.</span></span>  
  
-   <span data-ttu-id="19ce0-3272">用蓝色钢笔绘制旋转、 平移的椭圆。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3272">Draws a rotated, translated ellipse with a blue pen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#149](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#149)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#149](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#149)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#149](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#149)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateTransform">
      <MemberSignature Language="C#" Value="public void RotateTransform (float angle, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateTransform(float32 angle, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateTransform (angle As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateTransform(float angle, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.RotateTransform : single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="graphics.RotateTransform (angle, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="angle">
          <span data-ttu-id="19ce0-3273">旋转角度（以度为单位）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3273">Angle of rotation in degrees.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="19ce0-3274">
            <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 枚举的成员，它指定是将旋转追加到矩阵变换之后还是添加到矩阵变换之前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3274">Member of the <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies whether the rotation is appended or prepended to the matrix transformation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-3275">以指定顺序将指定旋转应用到此 <see cref="T:System.Drawing.Graphics" /> 的变换矩阵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3275">Applies the specified rotation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" /> in the specified order.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-3276">旋转操作包括将乘以通过其元素派生自矩阵的转换矩阵`angle`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3276">The rotation operation consists of multiplying the transformation matrix by a matrix whose elements are derived from the `angle` parameter.</span></span> <span data-ttu-id="19ce0-3277">此方法将添加前或追加的变换矩阵<xref:System.Drawing.Graphics>通过根据旋转矩阵`order`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3277">This method prepends or appends the transformation matrix of the <xref:System.Drawing.Graphics> by the rotation matrix according to the `order` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-3278">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3278">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-3279">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-3279">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-3280">平移的向量 （100，0） 的 Windows 窗体的世界转换矩阵。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3280">Translates the world transformation matrix of the Windows Form by the vector (100, 0).</span></span>  
  
-   <span data-ttu-id="19ce0-3281">旋转角度为 30 度，追加到与世界变换矩阵的旋转矩阵世界变换<xref:System.Drawing.Drawing2D.MatrixOrder.Append>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3281">Rotates the world transform by an angle of 30 degrees, appending the rotation matrix to the world transformation matrix with <xref:System.Drawing.Drawing2D.MatrixOrder.Append>.</span></span>  
  
-   <span data-ttu-id="19ce0-3282">用蓝色钢笔绘制平移、 旋转椭圆。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3282">Draws a translated, rotated ellipse with a blue pen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#150](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#150)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#150](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#150)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#150](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#150)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.GraphicsState Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Drawing2D.GraphicsState Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.Save" />
      <MemberSignature Language="VB.NET" Value="Public Function Save () As GraphicsState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Drawing2D::GraphicsState ^ Save();" />
      <MemberSignature Language="F#" Value="member this.Save : unit -&gt; System.Drawing.Drawing2D.GraphicsState" Usage="graphics.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.GraphicsState</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-3283">保存此 <see cref="T:System.Drawing.Graphics" /> 的当前状态，并用 <see cref="T:System.Drawing.Drawing2D.GraphicsState" /> 标识保存的状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3283">Saves the current state of this <see cref="T:System.Drawing.Graphics" /> and identifies the saved state with a <see cref="T:System.Drawing.Drawing2D.GraphicsState" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="19ce0-3284">此方法返回 <see cref="T:System.Drawing.Drawing2D.GraphicsState" />，该对象表示此 <see cref="T:System.Drawing.Graphics" /> 的保存状态。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3284">This method returns a <see cref="T:System.Drawing.Drawing2D.GraphicsState" /> that represents the saved state of this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-3285">当调用<xref:System.Drawing.Graphics.Save%2A>方法<xref:System.Drawing.Graphics>，保存的状态信息块<xref:System.Drawing.Graphics>放置在堆栈上。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3285">When you call the <xref:System.Drawing.Graphics.Save%2A> method of a <xref:System.Drawing.Graphics>, an information block that holds the state of the <xref:System.Drawing.Graphics> is put on a stack.</span></span> <span data-ttu-id="19ce0-3286"><xref:System.Drawing.Graphics.Save%2A>方法返回<xref:System.Drawing.Drawing2D.GraphicsState>标识该信息块。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3286">The <xref:System.Drawing.Graphics.Save%2A> method returns a <xref:System.Drawing.Drawing2D.GraphicsState> that identifies that information block.</span></span> <span data-ttu-id="19ce0-3287">传递时，标识<xref:System.Drawing.Drawing2D.GraphicsState>到<xref:System.Drawing.Graphics.Restore%2A>方法，该信息块从堆栈中移除，并用于还原<xref:System.Drawing.Graphics>到它所处的时间中的状态<xref:System.Drawing.Graphics.Save%2A>方法调用。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3287">When you pass the identifying <xref:System.Drawing.Drawing2D.GraphicsState> to the <xref:System.Drawing.Graphics.Restore%2A> method, the information block is removed from the stack and is used to restore the <xref:System.Drawing.Graphics> to the state it was in at the time of the <xref:System.Drawing.Graphics.Save%2A> method call.</span></span> <span data-ttu-id="19ce0-3288">请注意，<xref:System.Drawing.Drawing2D.GraphicsState>给定调用返回<xref:System.Drawing.Graphics.Save%2A>方法可以一次传递给<xref:System.Drawing.Graphics.Restore%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3288">Note that the <xref:System.Drawing.Drawing2D.GraphicsState> returned by a given call to the <xref:System.Drawing.Graphics.Save%2A> method can be passed only once to the <xref:System.Drawing.Graphics.Restore%2A> method.</span></span>  
  
 <span data-ttu-id="19ce0-3289">调用<xref:System.Drawing.Graphics.Save%2A>方法可以嵌套; 也就是说，你可以调用<xref:System.Drawing.Graphics.Save%2A>方法调用之前多次<xref:System.Drawing.Graphics.Restore%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3289">Calls to the <xref:System.Drawing.Graphics.Save%2A> method can be nested; that is, you can call the <xref:System.Drawing.Graphics.Save%2A> method several times before you call the <xref:System.Drawing.Graphics.Restore%2A> method.</span></span> <span data-ttu-id="19ce0-3290">每次调用<xref:System.Drawing.Graphics.Save%2A>方法，信息块放在堆栈，并且您收到<xref:System.Drawing.Drawing2D.GraphicsState>信息块。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3290">Each time you call the <xref:System.Drawing.Graphics.Save%2A> method, an information block is put on the stack, and you receive a <xref:System.Drawing.Drawing2D.GraphicsState> for the information block.</span></span> <span data-ttu-id="19ce0-3291">传递时，这些对象附加到之一<xref:System.Drawing.Graphics.Restore%2A>方法，<xref:System.Drawing.Graphics>返回到它所处的时间中的状态<xref:System.Drawing.Graphics.Save%2A>方法调用返回了该特定<xref:System.Drawing.Drawing2D.GraphicsState>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3291">When you pass one of those objects to the <xref:System.Drawing.Graphics.Restore%2A> method, the <xref:System.Drawing.Graphics> is returned to the state it was in at the time of the <xref:System.Drawing.Graphics.Save%2A> method call that returned that particular <xref:System.Drawing.Drawing2D.GraphicsState>.</span></span> <span data-ttu-id="19ce0-3292">信息块将位于堆栈上的<xref:System.Drawing.Graphics.Save%2A>从堆栈中，删除方法调用和所有信息块后，该堆栈上都放置<xref:System.Drawing.Graphics.Save%2A>方法调用也将被删除。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3292">The information block placed on the stack by that <xref:System.Drawing.Graphics.Save%2A> method call is removed from the stack, and all information blocks placed on that stack after that <xref:System.Drawing.Graphics.Save%2A> method call are also removed.</span></span>  
  
 <span data-ttu-id="19ce0-3293">调用<xref:System.Drawing.Graphics.BeginContainer%2A>方法相同为对调用堆栈上的位置信息块<xref:System.Drawing.Graphics.Save%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3293">Calls to the <xref:System.Drawing.Graphics.BeginContainer%2A> method place information blocks on the same stack as calls to the <xref:System.Drawing.Graphics.Save%2A> method.</span></span> <span data-ttu-id="19ce0-3294">就像<xref:System.Drawing.Graphics.Restore%2A>调用配合<xref:System.Drawing.Graphics.Save%2A>调用，<xref:System.Drawing.Graphics.EndContainer%2A>方法调用配合<xref:System.Drawing.Graphics.BeginContainer%2A>方法调用。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3294">Just as a <xref:System.Drawing.Graphics.Restore%2A> call is paired with a <xref:System.Drawing.Graphics.Save%2A> call, a <xref:System.Drawing.Graphics.EndContainer%2A> method call is paired with a <xref:System.Drawing.Graphics.BeginContainer%2A> method call.</span></span>  
  
 <span data-ttu-id="19ce0-3295">当调用<xref:System.Drawing.Graphics.Restore%2A>方法，在堆栈上放置的所有信息块 (通过<xref:System.Drawing.Graphics.Save%2A>方法或通过<xref:System.Drawing.Graphics.BeginContainer%2A>方法) 在相应调用<xref:System.Drawing.Graphics.Save%2A>从堆栈中移除方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3295">When you call the <xref:System.Drawing.Graphics.Restore%2A> method, all information blocks placed on the stack (by the <xref:System.Drawing.Graphics.Save%2A> method or by the <xref:System.Drawing.Graphics.BeginContainer%2A> method) after the corresponding call to the <xref:System.Drawing.Graphics.Save%2A> method are removed from the stack.</span></span> <span data-ttu-id="19ce0-3296">同样，当调用<xref:System.Drawing.Graphics.EndContainer%2A>方法，在堆栈上放置的所有信息块 (通过<xref:System.Drawing.Graphics.Save%2A>方法或通过<xref:System.Drawing.Graphics.BeginContainer%2A>方法) 在相应调用<xref:System.Drawing.Graphics.BeginContainer%2A>从堆栈中移除方法。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3296">Likewise, When you call the <xref:System.Drawing.Graphics.EndContainer%2A> method, all information blocks placed on the stack (by the <xref:System.Drawing.Graphics.Save%2A> method or by the <xref:System.Drawing.Graphics.BeginContainer%2A> method) after the corresponding call to the <xref:System.Drawing.Graphics.BeginContainer%2A> method are removed from the stack.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-3297">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3297">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-3298">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-3298">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-3299">将 Windows 窗体的世界变换平移向量 （100，0）。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3299">Translates the world transform of the Windows Form by a vector (100, 0).</span></span>  
  
-   <span data-ttu-id="19ce0-3300">保存该窗体的图形状态。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3300">Saves the graphics state of the form.</span></span>  
  
-   <span data-ttu-id="19ce0-3301">将窗体的世界变换重置为 （2 x 2 标识矩阵以及零向量转换） 的标识和使用实心的红色画笔填充的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3301">Resets the world transform of the form to an identity (2x2 identity matrix plus a zero-vector translation) and fills a rectangle with a solid red brush.</span></span>  
  
-   <span data-ttu-id="19ce0-3302">还原的已翻译的图形状态并与纯蓝色画笔填充的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3302">Restores the translated graphics state and fills a rectangle with a solid blue brush.</span></span>  
  
 <span data-ttu-id="19ce0-3303">结果是一个未转换的红色填充的矩形左侧，并且已翻译的蓝色填充矩形窗体的右侧。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3303">The result is an untranslated red-filled rectangle on the left and a translated blue-filled rectangle on the right of the form.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#151](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#151)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#151](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#151)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#151](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#151)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ScaleTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-3304">将指定的缩放操作应用于此 <see cref="T:System.Drawing.Graphics" /> 的变换矩阵，方法是将该对象的变换矩阵左乘该缩放矩阵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3304">Applies the specified scaling operation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" /> by prepending it to the object's transformation matrix.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ScaleTransform">
      <MemberSignature Language="C#" Value="public void ScaleTransform (float sx, float sy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleTransform(float32 sx, float32 sy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleTransform (sx As Single, sy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleTransform(float sx, float sy);" />
      <MemberSignature Language="F#" Value="member this.ScaleTransform : single * single -&gt; unit" Usage="graphics.ScaleTransform (sx, sy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sx" Type="System.Single" />
        <Parameter Name="sy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="sx">
          <span data-ttu-id="19ce0-3305">x 方向的缩放比例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3305">Scale factor in the x direction.</span>
          </span>
        </param>
        <param name="sy">
          <span data-ttu-id="19ce0-3306">y 方向的缩放比例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3306">Scale factor in the y direction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-3307">将指定的缩放操作应用于此 <see cref="T:System.Drawing.Graphics" /> 的变换矩阵，方法是将该对象的变换矩阵左乘该缩放矩阵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3307">Applies the specified scaling operation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" /> by prepending it to the object's transformation matrix.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-3308">在缩放操作包括将乘以其元素的对角矩阵的转换矩阵 (`sx`， `sy`，1)。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3308">The scaling operation consists of multiplying the transformation matrix by a diagonal matrix whose elements are (`sx`, `sy`, 1).</span></span> <span data-ttu-id="19ce0-3309">此方法将添加的变换矩阵前<xref:System.Drawing.Graphics>通过缩放矩阵。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3309">This method prepends the transformation matrix of the <xref:System.Drawing.Graphics> by the scaling matrix.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-3310">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3310">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-3311">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-3311">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-3312">将 Windows 窗体的世界转换矩阵旋转 30 度。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3312">Rotates the world transformation matrix of the Windows Form by 30 degrees.</span></span>  
  
-   <span data-ttu-id="19ce0-3313">通过预先计算缩放转换按在 x 方向的 3 倍和因子为 1 y 方向的缩放该矩阵。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3313">Scales that matrix by a factor of 3 in the x direction and a factor of 1 in the y direction by prepending the scaling transformation.</span></span>  
  
-   <span data-ttu-id="19ce0-3314">用蓝色钢笔绘制缩放、 旋转矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3314">Draws a scaled, rotated rectangle with a blue pen.</span></span>  
  
 <span data-ttu-id="19ce0-3315">结果仍是一个矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3315">The result is still a rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#152](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#152)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#152](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#152)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#152](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#152)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleTransform">
      <MemberSignature Language="C#" Value="public void ScaleTransform (float sx, float sy, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleTransform(float32 sx, float32 sy, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleTransform (sx As Single, sy As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleTransform(float sx, float sy, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.ScaleTransform : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="graphics.ScaleTransform (sx, sy, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sx" Type="System.Single" />
        <Parameter Name="sy" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="sx">
          <span data-ttu-id="19ce0-3316">x 方向的缩放比例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3316">Scale factor in the x direction.</span>
          </span>
        </param>
        <param name="sy">
          <span data-ttu-id="19ce0-3317">y 方向的缩放比例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3317">Scale factor in the y direction.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="19ce0-3318">
            <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 枚举的成员，它指定是将缩放操作添加到变换矩阵前还是追加到变换矩阵后。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3318">Member of the <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies whether the scaling operation is prepended or appended to the transformation matrix.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-3319">以指定顺序将指定的缩放操作应用到此 <see cref="T:System.Drawing.Graphics" /> 的变换矩阵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3319">Applies the specified scaling operation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" /> in the specified order.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-3320">在缩放操作包括将乘以其元素的对角矩阵的转换矩阵 (`sx`， `sy`，1)。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3320">The scaling operation consists of multiplying the transformation matrix by a diagonal matrix whose elements are (`sx`, `sy`, 1).</span></span> <span data-ttu-id="19ce0-3321">此方法将添加前或追加的变换矩阵<xref:System.Drawing.Graphics>通过根据缩放的矩阵`order`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3321">This method prepends or appends the transformation matrix of the <xref:System.Drawing.Graphics> by the scaling matrix according to the `order` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-3322">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3322">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-3323">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-3323">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-3324">将 Windows 窗体的世界转换矩阵旋转 30 度。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3324">Rotates the world transformation matrix of the Windows Form by 30 degrees.</span></span>  
  
-   <span data-ttu-id="19ce0-3325">通过追加缩放转换用于通过在 x 方向的 3 倍和因子为 1 y 方向的缩放该矩阵<xref:System.Drawing.Drawing2D.MatrixOrder.Append>成员。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3325">Scales that matrix by a factor of 3 in the x direction and a factor of 1 in the y direction by appending the scaling transformation with the <xref:System.Drawing.Drawing2D.MatrixOrder.Append> member.</span></span>  
  
-   <span data-ttu-id="19ce0-3326">用蓝色钢笔绘制旋转、 缩放后的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3326">Draws a rotated, scaled rectangle with a blue pen.</span></span>  
  
 <span data-ttu-id="19ce0-3327">结果是一个平行四边形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3327">The result is a parallelogram.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#153](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#153)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#153](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#153)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#153](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#153)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetClip">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-3328">将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域设置为指定 <see cref="T:System.Drawing.Graphics" /> 的 <see langword="Clip" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3328">Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the <see langword="Clip" /> property of the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetClip">
      <MemberSignature Language="C#" Value="public void SetClip (System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetClip(class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetClip (path As GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClip(System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberSignature Language="F#" Value="member this.SetClip : System.Drawing.Drawing2D.GraphicsPath -&gt; unit" Usage="graphics.SetClip path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="19ce0-3329">
            <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />，它表示新的剪辑区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3329">
              <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> that represents the new clip region.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-3330">将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域设置为指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3330">Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-3331">如果由表示的图形路径`path`参数未闭合，添加额外的线段在最后一个点来闭合路径和第一个点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3331">If the graphics path represented by the `path` parameter is not closed, an additional segment is added from the last point to the first point to close the path.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-3332">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3332">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-3333">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-3333">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-3334">创建图形路径并向该路径中添加一个椭圆。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3334">Creates a graphics path and adds an ellipse to the path.</span></span>  
  
-   <span data-ttu-id="19ce0-3335">剪辑区域设置为椭圆路径。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3335">Sets the clipping region to the elliptical path.</span></span>  
  
-   <span data-ttu-id="19ce0-3336">用纯黑色画笔填充大矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3336">Fills a large rectangle with a solid black brush.</span></span>  
  
 <span data-ttu-id="19ce0-3337">结果是黑色的实心椭圆。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3337">The result is a filled, black ellipse.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#154](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#154)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#154](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#154)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#154](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#154)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClip">
      <MemberSignature Language="C#" Value="public void SetClip (System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetClip(class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetClip (g As Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClip(System::Drawing::Graphics ^ g);" />
      <MemberSignature Language="F#" Value="member this.SetClip : System.Drawing.Graphics -&gt; unit" Usage="graphics.SetClip g" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="g">
          <span data-ttu-id="19ce0-3338">
            <see cref="T:System.Drawing.Graphics" />，从该对象中获取新剪辑区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3338">
              <see cref="T:System.Drawing.Graphics" /> from which to take the new clip region.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-3339">将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域设置为指定 <see cref="T:System.Drawing.Graphics" /> 的 <see langword="Clip" /> 属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3339">Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the <see langword="Clip" /> property of the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19ce0-3340">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序，以及`thisForm`、<xref:System.Windows.Forms.Form>示例。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3340">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler, as well as `thisForm`, the <xref:System.Windows.Forms.Form> for the example.</span></span> <span data-ttu-id="19ce0-3341">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-3341">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-3342">创建一个临时<xref:System.Drawing.Graphics>从`thisForm`<xref:System.Windows.Forms.Form>的示例。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3342">Creates a temporary <xref:System.Drawing.Graphics> from the `thisForm`<xref:System.Windows.Forms.Form> of the example.</span></span>  
  
-   <span data-ttu-id="19ce0-3343">临时的剪辑区域设置<xref:System.Drawing.Graphics>到的小正方形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3343">Sets the clipping region of the temporary <xref:System.Drawing.Graphics> to a small square.</span></span>  
  
-   <span data-ttu-id="19ce0-3344">窗体的图形对象的剪辑区域更新到临时的<xref:System.Drawing.Graphics>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3344">Updates the clipping region of the form's graphic object to that of the temporary <xref:System.Drawing.Graphics>.</span></span>  
  
-   <span data-ttu-id="19ce0-3345">用纯黑色画笔填充大矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3345">Fills a large rectangle with a solid black brush.</span></span>  
  
 <span data-ttu-id="19ce0-3346">结果是一个小且已填充的黑色方形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3346">The result is a small, filled, black square.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#156](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#156)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#156](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#156)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#156](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#156)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClip">
      <MemberSignature Language="C#" Value="public void SetClip (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetClip(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetClip (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClip(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.SetClip : System.Drawing.Rectangle -&gt; unit" Usage="graphics.SetClip rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="19ce0-3347">
            <see cref="T:System.Drawing.Rectangle" /> 结构，它表示新的剪辑区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3347">
              <see cref="T:System.Drawing.Rectangle" /> structure that represents the new clip region.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-3348">将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域设置为 <see cref="T:System.Drawing.Rectangle" /> 结构指定的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3348">Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19ce0-3349">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3349">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-3350">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-3350">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-3351">创建一个小的矩形的剪辑区域。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3351">Creates a small rectangle for the clipping region.</span></span>  
  
-   <span data-ttu-id="19ce0-3352">剪辑区域设置的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3352">Sets the clipping region to the rectangle.</span></span>  
  
-   <span data-ttu-id="19ce0-3353">用纯黑色画笔填充大矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3353">Fills a large rectangle with a solid black brush.</span></span>  
  
 <span data-ttu-id="19ce0-3354">结果是一个小且已填充的黑色矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3354">The result is a small, filled, black rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#158](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#158)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#158](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#158)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#158](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#158)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClip">
      <MemberSignature Language="C#" Value="public void SetClip (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetClip(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetClip (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClip(System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.SetClip : System.Drawing.RectangleF -&gt; unit" Usage="graphics.SetClip rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="19ce0-3355">
            <see cref="T:System.Drawing.RectangleF" /> 结构，它表示新的剪辑区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3355">
              <see cref="T:System.Drawing.RectangleF" /> structure that represents the new clip region.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-3356">将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域设置为 <see cref="T:System.Drawing.RectangleF" /> 结构指定的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3356">Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the rectangle specified by a <see cref="T:System.Drawing.RectangleF" /> structure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19ce0-3357">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3357">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-3358">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-3358">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-3359">创建一个小的矩形的剪辑区域。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3359">Creates a small rectangle for the clipping region.</span></span>  
  
-   <span data-ttu-id="19ce0-3360">剪辑区域设置的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3360">Sets the clipping region to the rectangle.</span></span>  
  
-   <span data-ttu-id="19ce0-3361">用纯黑色画笔填充大矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3361">Fills a large rectangle with a solid black brush.</span></span>  
  
 <span data-ttu-id="19ce0-3362">结果是一个小且已填充的黑色矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3362">The result is a small, filled, black rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#160](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#160)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#160](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#160)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#160](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#160)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClip">
      <MemberSignature Language="C#" Value="public void SetClip (System.Drawing.Drawing2D.GraphicsPath path, System.Drawing.Drawing2D.CombineMode combineMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetClip(class System.Drawing.Drawing2D.GraphicsPath path, valuetype System.Drawing.Drawing2D.CombineMode combineMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClip(System::Drawing::Drawing2D::GraphicsPath ^ path, System::Drawing::Drawing2D::CombineMode combineMode);" />
      <MemberSignature Language="F#" Value="member this.SetClip : System.Drawing.Drawing2D.GraphicsPath * System.Drawing.Drawing2D.CombineMode -&gt; unit" Usage="graphics.SetClip (path, combineMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="combineMode" Type="System.Drawing.Drawing2D.CombineMode" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="19ce0-3363">要组合的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3363">
              <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to combine.</span>
          </span>
        </param>
        <param name="combineMode">
          <span data-ttu-id="19ce0-3364">
            <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 枚举的成员，它指定要使用的组合操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3364">Member of the <see cref="T:System.Drawing.Drawing2D.CombineMode" /> enumeration that specifies the combining operation to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-3365">将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域设置为当前剪辑区域与指定 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的组合结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3365">Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the result of the specified operation combining the current clip region and the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-3366">如果由表示的图形路径`path`参数未闭合，添加额外的线段在最后一个点来闭合路径和第一个点。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3366">If the graphics path represented by the `path` parameter is not closed, an additional segment is added from the last point to the first point to close the path.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-3367">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3367">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-3368">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-3368">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-3369">创建图形路径并向该路径中添加一个椭圆。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3369">Creates a graphics path and adds an ellipse to the path.</span></span>  
  
-   <span data-ttu-id="19ce0-3370">剪辑区域设置为与椭圆路径<xref:System.Drawing.Drawing2D.CombineMode.Replace>成员。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3370">Sets the clipping region to the elliptical path with the <xref:System.Drawing.Drawing2D.CombineMode.Replace> member.</span></span>  
  
-   <span data-ttu-id="19ce0-3371">用纯黑色画笔填充大矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3371">Fills a large rectangle with a solid black brush.</span></span>  
  
 <span data-ttu-id="19ce0-3372">结果是黑色的实心椭圆。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3372">The result is a filled, black ellipse.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#155](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#155)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#155](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#155)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#155](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#155)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClip">
      <MemberSignature Language="C#" Value="public void SetClip (System.Drawing.Graphics g, System.Drawing.Drawing2D.CombineMode combineMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetClip(class System.Drawing.Graphics g, valuetype System.Drawing.Drawing2D.CombineMode combineMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics,System.Drawing.Drawing2D.CombineMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClip(System::Drawing::Graphics ^ g, System::Drawing::Drawing2D::CombineMode combineMode);" />
      <MemberSignature Language="F#" Value="member this.SetClip : System.Drawing.Graphics * System.Drawing.Drawing2D.CombineMode -&gt; unit" Usage="graphics.SetClip (g, combineMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="combineMode" Type="System.Drawing.Drawing2D.CombineMode" />
      </Parameters>
      <Docs>
        <param name="g">
          <span data-ttu-id="19ce0-3373">
            <see cref="T:System.Drawing.Graphics" />，它指定要组合的剪辑区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3373">
              <see cref="T:System.Drawing.Graphics" /> that specifies the clip region to combine.</span>
          </span>
        </param>
        <param name="combineMode">
          <span data-ttu-id="19ce0-3374">
            <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 枚举的成员，它指定要使用的组合操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3374">Member of the <see cref="T:System.Drawing.Drawing2D.CombineMode" /> enumeration that specifies the combining operation to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-3375">将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域设置为当前剪辑区域和指定的 <see cref="T:System.Drawing.Graphics" /> 的 <see cref="P:System.Drawing.Graphics.Clip" /> 属性指定的组合操作的结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3375">Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the result of the specified combining operation of the current clip region and the <see cref="P:System.Drawing.Graphics.Clip" /> property of the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19ce0-3376">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序，以及`thisForm`、<xref:System.Windows.Forms.Form>示例。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3376">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler, as well as `thisForm`, the <xref:System.Windows.Forms.Form> for the example.</span></span> <span data-ttu-id="19ce0-3377">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-3377">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-3378">创建一个临时<xref:System.Drawing.Graphics>从`thisForm`<xref:System.Windows.Forms.Form>的示例。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3378">Creates a temporary <xref:System.Drawing.Graphics> from the `thisForm`<xref:System.Windows.Forms.Form> of the example.</span></span>  
  
-   <span data-ttu-id="19ce0-3379">临时的剪辑区域设置<xref:System.Drawing.Graphics>到的小正方形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3379">Sets the clipping region of the temporary <xref:System.Drawing.Graphics> to a small square.</span></span>  
  
-   <span data-ttu-id="19ce0-3380">窗体的图形对象的剪辑区域更新到新的<xref:System.Drawing.Graphics>与<xref:System.Drawing.Drawing2D.CombineMode.Replace>成员。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3380">Updates the clipping region of the form's graphic object to that of the new <xref:System.Drawing.Graphics> with the <xref:System.Drawing.Drawing2D.CombineMode.Replace> member.</span></span>  
  
-   <span data-ttu-id="19ce0-3381">用纯黑色画笔填充大矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3381">Fills a large rectangle with a solid black brush.</span></span>  
  
 <span data-ttu-id="19ce0-3382">结果是一个小且已填充的黑色方形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3382">The result is a small, filled, black square.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#157](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#157)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#157](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#157)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#157](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#157)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClip">
      <MemberSignature Language="C#" Value="public void SetClip (System.Drawing.Rectangle rect, System.Drawing.Drawing2D.CombineMode combineMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetClip(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Drawing2D.CombineMode combineMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClip(System::Drawing::Rectangle rect, System::Drawing::Drawing2D::CombineMode combineMode);" />
      <MemberSignature Language="F#" Value="member this.SetClip : System.Drawing.Rectangle * System.Drawing.Drawing2D.CombineMode -&gt; unit" Usage="graphics.SetClip (rect, combineMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="combineMode" Type="System.Drawing.Drawing2D.CombineMode" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="19ce0-3383">要组合的 <see cref="T:System.Drawing.Rectangle" /> 结构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3383">
              <see cref="T:System.Drawing.Rectangle" /> structure to combine.</span>
          </span>
        </param>
        <param name="combineMode">
          <span data-ttu-id="19ce0-3384">
            <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 枚举的成员，它指定要使用的组合操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3384">Member of the <see cref="T:System.Drawing.Drawing2D.CombineMode" /> enumeration that specifies the combining operation to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-3385">将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域设置为当前剪辑区域与 <see cref="T:System.Drawing.Rectangle" /> 结构所指定矩形的组合结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3385">Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the result of the specified operation combining the current clip region and the rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19ce0-3386">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3386">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-3387">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-3387">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-3388">创建一个小的矩形的剪辑区域。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3388">Creates a small rectangle for the clipping region.</span></span>  
  
-   <span data-ttu-id="19ce0-3389">剪辑区域设置为该矩形<xref:System.Drawing.Drawing2D.CombineMode.Replace>成员。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3389">Sets the clipping region to the rectangle with the <xref:System.Drawing.Drawing2D.CombineMode.Replace> member.</span></span>  
  
-   <span data-ttu-id="19ce0-3390">用纯黑色画笔填充大矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3390">Fills a large rectangle with a solid black brush.</span></span>  
  
 <span data-ttu-id="19ce0-3391">结果是一个小且已填充的黑色矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3391">The result is a small, filled, black rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#159](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#159)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#159](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#159)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#159](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#159)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClip">
      <MemberSignature Language="C#" Value="public void SetClip (System.Drawing.RectangleF rect, System.Drawing.Drawing2D.CombineMode combineMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetClip(valuetype System.Drawing.RectangleF rect, valuetype System.Drawing.Drawing2D.CombineMode combineMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF,System.Drawing.Drawing2D.CombineMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClip(System::Drawing::RectangleF rect, System::Drawing::Drawing2D::CombineMode combineMode);" />
      <MemberSignature Language="F#" Value="member this.SetClip : System.Drawing.RectangleF * System.Drawing.Drawing2D.CombineMode -&gt; unit" Usage="graphics.SetClip (rect, combineMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="combineMode" Type="System.Drawing.Drawing2D.CombineMode" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="19ce0-3392">要组合的 <see cref="T:System.Drawing.RectangleF" /> 结构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3392">
              <see cref="T:System.Drawing.RectangleF" /> structure to combine.</span>
          </span>
        </param>
        <param name="combineMode">
          <span data-ttu-id="19ce0-3393">
            <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 枚举的成员，它指定要使用的组合操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3393">Member of the <see cref="T:System.Drawing.Drawing2D.CombineMode" /> enumeration that specifies the combining operation to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-3394">将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域设置为当前剪辑区域与 <see cref="T:System.Drawing.RectangleF" /> 结构所指定矩形的组合结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3394">Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the result of the specified operation combining the current clip region and the rectangle specified by a <see cref="T:System.Drawing.RectangleF" /> structure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19ce0-3395">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3395">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-3396">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-3396">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-3397">创建一个小的矩形的剪辑区域。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3397">Creates a small rectangle for the clipping region.</span></span>  
  
-   <span data-ttu-id="19ce0-3398">剪辑区域设置为该矩形<xref:System.Drawing.Drawing2D.CombineMode.Replace>成员。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3398">Sets the clipping region to the rectangle with the <xref:System.Drawing.Drawing2D.CombineMode.Replace> member.</span></span>  
  
-   <span data-ttu-id="19ce0-3399">用纯黑色画笔填充大矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3399">Fills a large rectangle with a solid black brush.</span></span>  
  
 <span data-ttu-id="19ce0-3400">结果是一个小且已填充的黑色矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3400">The result is a small, filled, black rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#161](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#161)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#161](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#161)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#161](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#161)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClip">
      <MemberSignature Language="C#" Value="public void SetClip (System.Drawing.Region region, System.Drawing.Drawing2D.CombineMode combineMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetClip(class System.Drawing.Region region, valuetype System.Drawing.Drawing2D.CombineMode combineMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.SetClip(System.Drawing.Region,System.Drawing.Drawing2D.CombineMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClip(System::Drawing::Region ^ region, System::Drawing::Drawing2D::CombineMode combineMode);" />
      <MemberSignature Language="F#" Value="member this.SetClip : System.Drawing.Region * System.Drawing.Drawing2D.CombineMode -&gt; unit" Usage="graphics.SetClip (region, combineMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
        <Parameter Name="combineMode" Type="System.Drawing.Drawing2D.CombineMode" />
      </Parameters>
      <Docs>
        <param name="region">
          <span data-ttu-id="19ce0-3401">要组合的 <see cref="T:System.Drawing.Region" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3401">
              <see cref="T:System.Drawing.Region" /> to combine.</span>
          </span>
        </param>
        <param name="combineMode">
          <span data-ttu-id="19ce0-3402">
            <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 枚举的成员，它指定要使用的组合操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3402">Member from the <see cref="T:System.Drawing.Drawing2D.CombineMode" /> enumeration that specifies the combining operation to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-3403">将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域设置为当前剪辑区域与指定 <see cref="T:System.Drawing.Region" /> 的组合结果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3403">Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the result of the specified operation combining the current clip region and the specified <see cref="T:System.Drawing.Region" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19ce0-3404">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3404">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-3405">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-3405">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-3406">创建一个小的矩形的剪辑区域。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3406">Creates a small rectangle for the clipping region.</span></span>  
  
-   <span data-ttu-id="19ce0-3407">剪辑区域设置为该矩形<xref:System.Drawing.Drawing2D.CombineMode.Replace>成员。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3407">Sets the clipping region to the rectangle with the <xref:System.Drawing.Drawing2D.CombineMode.Replace> member.</span></span>  
  
-   <span data-ttu-id="19ce0-3408">用纯黑色画笔填充大矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3408">Fills a large rectangle with a solid black brush.</span></span>  
  
 <span data-ttu-id="19ce0-3409">结果是一个小且已填充的黑色矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3409">The result is a small, filled, black rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#162](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#162)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#162](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#162)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#162](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#162)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmoothingMode">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.SmoothingMode SmoothingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.SmoothingMode SmoothingMode" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.SmoothingMode" />
      <MemberSignature Language="VB.NET" Value="Public Property SmoothingMode As SmoothingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::SmoothingMode SmoothingMode { System::Drawing::Drawing2D::SmoothingMode get(); void set(System::Drawing::Drawing2D::SmoothingMode value); };" />
      <MemberSignature Language="F#" Value="member this.SmoothingMode : System.Drawing.Drawing2D.SmoothingMode with get, set" Usage="System.Drawing.Graphics.SmoothingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.SmoothingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-3410">获取或设置此 <see cref="T:System.Drawing.Graphics" /> 的呈现质量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3410">Gets or sets the rendering quality for this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19ce0-3411">
            <see cref="T:System.Drawing.Drawing2D.SmoothingMode" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3411">One of the <see cref="T:System.Drawing.Drawing2D.SmoothingMode" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-3412">平滑模式指定线条、 曲线和填充区域的边缘是否使用平滑 （也称为抗锯齿）。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3412">The smoothing mode specifies whether lines, curves, and the edges of filled areas use smoothing (also called antialiasing).</span></span> <span data-ttu-id="19ce0-3413">一个例外是路径渐变画刷不遵循平滑模式。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3413">One exception is that path gradient brushes do not obey the smoothing mode.</span></span> <span data-ttu-id="19ce0-3414">填充使用区域<xref:System.Drawing.Drawing2D.PathGradientBrush>呈现相同的方式 （别名） 而不考虑<xref:System.Drawing.Graphics.SmoothingMode%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3414">Areas filled using a <xref:System.Drawing.Drawing2D.PathGradientBrush> are rendered the same way (aliased) regardless of the <xref:System.Drawing.Graphics.SmoothingMode%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-3415">以下方法演示如何设置的效果<xref:System.Drawing.Pen.DashCap%2A>， <xref:System.Drawing.Pen.DashPattern%2A>，和<xref:System.Drawing.Graphics.SmoothingMode%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3415">The following method demonstrates the effects of setting the <xref:System.Drawing.Pen.DashCap%2A>, <xref:System.Drawing.Pen.DashPattern%2A>, and <xref:System.Drawing.Graphics.SmoothingMode%2A> properties.</span></span> <span data-ttu-id="19ce0-3416">该示例输出所示下图。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3416">The output of the example is shown in the following illustration.</span></span>  
  
 <span data-ttu-id="19ce0-3417">![具有和没有应用平滑处理的行。](~/add/media/gdi-smoothingmode.png "具有和没有应用平滑处理的行。")</span><span class="sxs-lookup"><span data-stu-id="19ce0-3417">![Lines with and without smoothing applied.](~/add/media/gdi-smoothingmode.png "Lines with and without smoothing applied.")</span></span>  
  
 <span data-ttu-id="19ce0-3418">本示例旨在与 Windows 窗体一起使用。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3418">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="19ce0-3419">将代码粘贴到窗体并调用`ShowPensAndSmoothingMode`方法时处理该窗体的<xref:System.Windows.Forms.Control.Paint>事件，并传递`e`作为<xref:System.Windows.Forms.PaintEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3419">Paste the code into a form and call the `ShowPensAndSmoothingMode` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.PensExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#3)]
 [!code-vb[System.Drawing.PensExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextContrast">
      <MemberSignature Language="C#" Value="public int TextContrast { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextContrast" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.TextContrast" />
      <MemberSignature Language="VB.NET" Value="Public Property TextContrast As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TextContrast { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TextContrast : int with get, set" Usage="System.Drawing.Graphics.TextContrast" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-3420">获取或设置呈现文本的灰度校正值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3420">Gets or sets the gamma correction value for rendering text.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19ce0-3421">用于呈现抗锯齿和 ClearType 文本的伽玛校正值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3421">The gamma correction value used for rendering antialiased and ClearType text.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-3422">灰度校正值必须介于 0 和 12 之间。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3422">The gamma correction value must be between 0 and 12.</span></span> <span data-ttu-id="19ce0-3423">默认值为 4。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3423">The default value is 4.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-3424">下面的代码示例演示如何将<xref:System.Drawing.Graphics.TextRenderingHint%2A>和<xref:System.Drawing.Graphics.TextContrast%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3424">The following code example demonstrates the use of the <xref:System.Drawing.Graphics.TextRenderingHint%2A> and <xref:System.Drawing.Graphics.TextContrast%2A> properties.</span></span>  
  
 <span data-ttu-id="19ce0-3425">本示例旨在与 Windows 窗体一起使用。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3425">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="19ce0-3426">将代码粘贴到窗体并调用`ChangeTextRenderingHintAndTextContrast`方法时处理该窗体的<xref:System.Windows.Forms.Control.Paint>事件，并传递`e`作为<xref:System.Windows.Forms.PaintEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3426">Paste the code into a form and call the `ChangeTextRenderingHintAndTextContrast` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.GraphicsProperties#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.GraphicsProperties#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CS/form1.cs#5)]
 [!code-vb[System.Drawing.GraphicsProperties#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextRenderingHint">
      <MemberSignature Language="C#" Value="public System.Drawing.Text.TextRenderingHint TextRenderingHint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Text.TextRenderingHint TextRenderingHint" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.TextRenderingHint" />
      <MemberSignature Language="VB.NET" Value="Public Property TextRenderingHint As TextRenderingHint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Text::TextRenderingHint TextRenderingHint { System::Drawing::Text::TextRenderingHint get(); void set(System::Drawing::Text::TextRenderingHint value); };" />
      <MemberSignature Language="F#" Value="member this.TextRenderingHint : System.Drawing.Text.TextRenderingHint with get, set" Usage="System.Drawing.Graphics.TextRenderingHint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Text.TextRenderingHint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-3427">获取或设置与此 <see cref="T:System.Drawing.Graphics" /> 关联的文本的呈现模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3427">Gets or sets the rendering mode for text associated with this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19ce0-3428">
            <see cref="T:System.Drawing.Text.TextRenderingHint" /> 值之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3428">One of the <see cref="T:System.Drawing.Text.TextRenderingHint" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-3429">文本呈现提示指定是否使用抗锯齿呈现文本。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3429">The text rendering hint specifies whether text renders with antialiasing.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="19ce0-3430">不应使用<xref:System.Drawing.Graphics.CompositingMode%2A>属性值<xref:System.Drawing.Drawing2D.CompositingMode.SourceCopy>时<xref:System.Drawing.Graphics.TextRenderingHint%2A>属性设置为<xref:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3430">You should not use a <xref:System.Drawing.Graphics.CompositingMode%2A> property value of <xref:System.Drawing.Drawing2D.CompositingMode.SourceCopy> when the <xref:System.Drawing.Graphics.TextRenderingHint%2A> property is set to <xref:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit>.</span></span> <span data-ttu-id="19ce0-3431">可能会发生异常或图像可能无法正确呈现。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3431">An exception could occur or the image may not render correctly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-3432">下面的代码示例演示如何将<xref:System.Drawing.Graphics.TextRenderingHint%2A>和<xref:System.Drawing.Graphics.TextContrast%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3432">The following code example demonstrates the use of the <xref:System.Drawing.Graphics.TextRenderingHint%2A> and <xref:System.Drawing.Graphics.TextContrast%2A> properties.</span></span>  
  
 <span data-ttu-id="19ce0-3433">本示例旨在与 Windows 窗体一起使用。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3433">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="19ce0-3434">将代码粘贴到窗体并调用`ChangeTextRenderingHintAndTextContrast`方法时处理该窗体的<xref:System.Windows.Forms.Control.Paint>事件，并传递`e`作为<xref:System.Windows.Forms.PaintEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3434">Paste the code into a form and call the `ChangeTextRenderingHintAndTextContrast` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.GraphicsProperties#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.GraphicsProperties#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CS/form1.cs#5)]
 [!code-vb[System.Drawing.GraphicsProperties#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.Matrix Transform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.Matrix Transform" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.Transform" />
      <MemberSignature Language="VB.NET" Value="Public Property Transform As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::Matrix ^ Transform { System::Drawing::Drawing2D::Matrix ^ get(); void set(System::Drawing::Drawing2D::Matrix ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Drawing.Drawing2D.Matrix with get, set" Usage="System.Drawing.Graphics.Transform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-3435">获取或设置此 <see cref="T:System.Drawing.Graphics" /> 的几何世界变换的副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3435">Gets or sets a copy of the geometric world transformation for this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19ce0-3436">一个 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 副本，表示此 <see cref="T:System.Drawing.Graphics" /> 的几何世界变换。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3436">A copy of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the geometric world transformation for this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-3437">GDI + 使用三个坐标空间： world、 页和设备。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3437">GDI+ uses three coordinate spaces: world, page, and device.</span></span> <span data-ttu-id="19ce0-3438">世界坐标是用于模型对特定图形世界的坐标，将传递到.NET Framework 中的方法的坐标。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3438">World coordinates are the coordinates used to model a particular graphic world and are the coordinates you pass to methods in the .NET Framework.</span></span> <span data-ttu-id="19ce0-3439">页坐标是指由绘图图面，如表单或控件使用的坐标系统。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3439">Page coordinates refer to the coordinate system used by a drawing surface, such as a form or a control.</span></span> <span data-ttu-id="19ce0-3440">设备坐标是由进行绘制，如屏幕或打印机的物理设备的坐标。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3440">Device coordinates are the coordinates used by the physical device being drawn on, such as a screen or a printer.</span></span> <span data-ttu-id="19ce0-3441"><xref:System.Drawing.Graphics.Transform%2A>属性表示将 world 坐标映射到的页坐标的世界变换。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3441">The <xref:System.Drawing.Graphics.Transform%2A> property represents the world transformation, which maps world coordinates to page coordinates.</span></span>  
  
 <span data-ttu-id="19ce0-3442">因为返回的矩阵和通过<xref:System.Drawing.Graphics.Transform%2A>属性为几何变换的副本，当你不再需要它时，应释放的矩阵。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3442">Because the matrix returned and by the <xref:System.Drawing.Graphics.Transform%2A> property is a copy of the geometric transform, you should dispose of the matrix when you no longer need it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TransformPoints">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-3443">使用此 <see cref="T:System.Drawing.Graphics" /> 的当前世界变换和页变换，将点数组从一个坐标空间转换到另一个坐标空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3443">Transforms an array of points from one coordinate space to another using the current world and page transformations of this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransformPoints">
      <MemberSignature Language="C#" Value="public void TransformPoints (System.Drawing.Drawing2D.CoordinateSpace destSpace, System.Drawing.Drawing2D.CoordinateSpace srcSpace, System.Drawing.Point[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformPoints(valuetype System.Drawing.Drawing2D.CoordinateSpace destSpace, valuetype System.Drawing.Drawing2D.CoordinateSpace srcSpace, valuetype System.Drawing.Point[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformPoints (destSpace As CoordinateSpace, srcSpace As CoordinateSpace, pts As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformPoints(System::Drawing::Drawing2D::CoordinateSpace destSpace, System::Drawing::Drawing2D::CoordinateSpace srcSpace, cli::array &lt;System::Drawing::Point&gt; ^ pts);" />
      <MemberSignature Language="F#" Value="member this.TransformPoints : System.Drawing.Drawing2D.CoordinateSpace * System.Drawing.Drawing2D.CoordinateSpace * System.Drawing.Point[] -&gt; unit" Usage="graphics.TransformPoints (destSpace, srcSpace, pts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destSpace" Type="System.Drawing.Drawing2D.CoordinateSpace" />
        <Parameter Name="srcSpace" Type="System.Drawing.Drawing2D.CoordinateSpace" />
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="destSpace">
          <span data-ttu-id="19ce0-3444">
            <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> 枚举成员，它指定目标坐标空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3444">Member of the <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> enumeration that specifies the destination coordinate space.</span>
          </span>
        </param>
        <param name="srcSpace">
          <span data-ttu-id="19ce0-3445">
            <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> 枚举成员，它指定源坐标空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3445">Member of the <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> enumeration that specifies the source coordinate space.</span>
          </span>
        </param>
        <param name="pts">
          <span data-ttu-id="19ce0-3446">
            <see cref="T:System.Drawing.Point" /> 结构数组，这些结构表示要变换的点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3446">Array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transformation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-3447">使用此 <see cref="T:System.Drawing.Graphics" /> 的当前世界变换和页变换，将点数组从一个坐标空间转换到另一个坐标空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3447">Transforms an array of points from one coordinate space to another using the current world and page transformations of this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19ce0-3448">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3448">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-3449">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-3449">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-3450">创建两个点和它们之间绘制一条蓝线。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3450">Creates two points and draws a blue line between them.</span></span>  
  
-   <span data-ttu-id="19ce0-3451">设置要在 x 方向和 30 y 方向的量 40 平移的世界变换。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3451">Sets the world transform to translate by amounts 40 in the x direction and 30 in the y direction.</span></span>  
  
-   <span data-ttu-id="19ce0-3452">转换中世界坐标的点 (<xref:System.Drawing.Drawing2D.CoordinateSpace.World>) 到页坐标 (<xref:System.Drawing.Drawing2D.CoordinateSpace.Page>)。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3452">Transforms the points from world coordinates (<xref:System.Drawing.Drawing2D.CoordinateSpace.World>) to page coordinates (<xref:System.Drawing.Drawing2D.CoordinateSpace.Page>).</span></span>  
  
-   <span data-ttu-id="19ce0-3453">将世界变换重置为标识。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3453">Resets the world transformation to the identity.</span></span>  
  
-   <span data-ttu-id="19ce0-3454">变换的点之间绘制一条红线。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3454">Draws a red line between the transformed points.</span></span>  
  
 <span data-ttu-id="19ce0-3455">结果是一条蓝线和下方它已翻译的红色行。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3455">The result is a blue line and a translated red line below it.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#163](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#163)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#163](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#163)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#163](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#163)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformPoints">
      <MemberSignature Language="C#" Value="public void TransformPoints (System.Drawing.Drawing2D.CoordinateSpace destSpace, System.Drawing.Drawing2D.CoordinateSpace srcSpace, System.Drawing.PointF[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformPoints(valuetype System.Drawing.Drawing2D.CoordinateSpace destSpace, valuetype System.Drawing.Drawing2D.CoordinateSpace srcSpace, valuetype System.Drawing.PointF[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformPoints (destSpace As CoordinateSpace, srcSpace As CoordinateSpace, pts As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformPoints(System::Drawing::Drawing2D::CoordinateSpace destSpace, System::Drawing::Drawing2D::CoordinateSpace srcSpace, cli::array &lt;System::Drawing::PointF&gt; ^ pts);" />
      <MemberSignature Language="F#" Value="member this.TransformPoints : System.Drawing.Drawing2D.CoordinateSpace * System.Drawing.Drawing2D.CoordinateSpace * System.Drawing.PointF[] -&gt; unit" Usage="graphics.TransformPoints (destSpace, srcSpace, pts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destSpace" Type="System.Drawing.Drawing2D.CoordinateSpace" />
        <Parameter Name="srcSpace" Type="System.Drawing.Drawing2D.CoordinateSpace" />
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="destSpace">
          <span data-ttu-id="19ce0-3456">
            <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> 枚举成员，它指定目标坐标空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3456">Member of the <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> enumeration that specifies the destination coordinate space.</span>
          </span>
        </param>
        <param name="srcSpace">
          <span data-ttu-id="19ce0-3457">
            <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> 枚举成员，它指定源坐标空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3457">Member of the <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> enumeration that specifies the source coordinate space.</span>
          </span>
        </param>
        <param name="pts">
          <span data-ttu-id="19ce0-3458">
            <see cref="T:System.Drawing.PointF" /> 结构数组，这些结构表示要变换的点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3458">Array of <see cref="T:System.Drawing.PointF" /> structures that represent the points to transform.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-3459">使用此 <see cref="T:System.Drawing.Graphics" /> 的当前世界变换和页变换，将点数组从一个坐标空间转换到另一个坐标空间。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3459">Transforms an array of points from one coordinate space to another using the current world and page transformations of this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19ce0-3460">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3460">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-3461">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-3461">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-3462">创建两个点和它们之间绘制一条蓝线。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3462">Creates two points and draws a blue line between them.</span></span>  
  
-   <span data-ttu-id="19ce0-3463">设置要在 x 方向和 30 y 方向的量 40 平移的世界变换。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3463">Sets the world transform to translate by amounts 40 in the x direction and 30 in the y direction.</span></span>  
  
-   <span data-ttu-id="19ce0-3464">转换中世界坐标的点 (<xref:System.Drawing.Drawing2D.CoordinateSpace.World>) 到页坐标 (<xref:System.Drawing.Drawing2D.CoordinateSpace.Page>)。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3464">Transforms the points from world coordinates (<xref:System.Drawing.Drawing2D.CoordinateSpace.World>) to page coordinates (<xref:System.Drawing.Drawing2D.CoordinateSpace.Page>).</span></span>  
  
-   <span data-ttu-id="19ce0-3465">将世界变换重置为标识和变换的点之间绘制一条红线。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3465">Resets the world transformation to the identity and draws a red line between the transformed points.</span></span>  
  
 <span data-ttu-id="19ce0-3466">结果是一条蓝线和下方它已翻译的红色行。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3466">The result is a blue line and a translated red line below it.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#164](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#164)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#164](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#164)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#164](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#164)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TranslateClip">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-3467">将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域沿水平方向和垂直方向平移指定的量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3467">Translates the clipping region of this <see cref="T:System.Drawing.Graphics" /> by specified amounts in the horizontal and vertical directions.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TranslateClip">
      <MemberSignature Language="C#" Value="public void TranslateClip (int dx, int dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateClip(int32 dx, int32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.TranslateClip(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateClip (dx As Integer, dy As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateClip(int dx, int dy);" />
      <MemberSignature Language="F#" Value="member this.TranslateClip : int * int -&gt; unit" Usage="graphics.TranslateClip (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Int32" />
        <Parameter Name="dy" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dx">
          <span data-ttu-id="19ce0-3468">平移的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3468">The x-coordinate of the translation.</span>
          </span>
        </param>
        <param name="dy">
          <span data-ttu-id="19ce0-3469">平移的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3469">The y-coordinate of the translation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-3470">将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域沿水平方向和垂直方向平移指定的量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3470">Translates the clipping region of this <see cref="T:System.Drawing.Graphics" /> by specified amounts in the horizontal and vertical directions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19ce0-3471">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3471">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-3472">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-3472">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-3473">创建的剪辑区域的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3473">Creates a rectangle for the clipping region.</span></span>  
  
-   <span data-ttu-id="19ce0-3474">剪辑区域设置的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3474">Sets the clipping region to the rectangle.</span></span>  
  
-   <span data-ttu-id="19ce0-3475">一个向量 （50，50） 平移的剪辑区域。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3475">Translates the clipping region by a vector (50, 50).</span></span>  
  
-   <span data-ttu-id="19ce0-3476">用纯黑色画笔填充大矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3476">Fills a large rectangle with a solid black brush.</span></span>  
  
 <span data-ttu-id="19ce0-3477">结果是一个已翻译、 小、 黑色矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3477">The result is a translated, small, black rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#165](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#165)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#165](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#165)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#165](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#165)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateClip">
      <MemberSignature Language="C#" Value="public void TranslateClip (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateClip(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.TranslateClip(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateClip (dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateClip(float dx, float dy);" />
      <MemberSignature Language="F#" Value="member this.TranslateClip : single * single -&gt; unit" Usage="graphics.TranslateClip (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx">
          <span data-ttu-id="19ce0-3478">平移的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3478">The x-coordinate of the translation.</span>
          </span>
        </param>
        <param name="dy">
          <span data-ttu-id="19ce0-3479">平移的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3479">The y-coordinate of the translation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-3480">将此 <see cref="T:System.Drawing.Graphics" /> 的剪辑区域沿水平方向和垂直方向平移指定的量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3480">Translates the clipping region of this <see cref="T:System.Drawing.Graphics" /> by specified amounts in the horizontal and vertical directions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19ce0-3481">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3481">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-3482">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-3482">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-3483">创建的剪辑区域的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3483">Creates a rectangle for the clipping region.</span></span>  
  
-   <span data-ttu-id="19ce0-3484">剪辑区域设置的矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3484">Sets the clipping region to the rectangle.</span></span>  
  
-   <span data-ttu-id="19ce0-3485">平移向量 （50.0 f，50.0 f） 的剪辑区域。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3485">Translates the clipping region by a vector (50.0F, 50.0F).</span></span>  
  
-   <span data-ttu-id="19ce0-3486">用纯黑色画笔填充大矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3486">Fills a large rectangle with a solid black brush.</span></span>  
  
 <span data-ttu-id="19ce0-3487">结果是一个已翻译、 小、 黑色矩形。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3487">The result is a translated, small, black rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#166](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#166)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#166](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#166)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#166](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#166)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TranslateTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-3488">通过使此 <see cref="T:System.Drawing.Graphics" /> 的变换矩阵左乘指定的平移来更改坐标系统的原点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3488">Changes the origin of the coordinate system by prepending the specified translation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TranslateTransform">
      <MemberSignature Language="C#" Value="public void TranslateTransform (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateTransform(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateTransform (dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateTransform(float dx, float dy);" />
      <MemberSignature Language="F#" Value="member this.TranslateTransform : single * single -&gt; unit" Usage="graphics.TranslateTransform (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx">
          <span data-ttu-id="19ce0-3489">平移的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3489">The x-coordinate of the translation.</span>
          </span>
        </param>
        <param name="dy">
          <span data-ttu-id="19ce0-3490">平移的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3490">The y-coordinate of the translation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-3491">通过使此 <see cref="T:System.Drawing.Graphics" /> 的变换矩阵左乘指定的平移来更改坐标系统的原点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3491">Changes the origin of the coordinate system by prepending the specified translation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-3492">源都具有典型的绘图图面的左上左下角。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3492">The origin is typically the upper-left-hand corner of the drawing surface.</span></span>  <span data-ttu-id="19ce0-3493">转换操作包括将乘以通过其平移部分是的矩阵的转换矩阵`dx`和`dy`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3493">The translation operation consists of multiplying the transformation matrix by a matrix whose translation part is the `dx` and `dy` parameters.</span></span> <span data-ttu-id="19ce0-3494">此方法适用通过预先计算转换矩阵的转换矩阵的平移。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3494">This method applies the translation by prepending the translation matrix to the transformation matrix.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-3495">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3495">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-3496">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-3496">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-3497">将 Windows 窗体的世界转换矩阵旋转 30.0F 度。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3497">Rotates the world transformation matrix of the Windows Form by 30.0F degrees.</span></span>  
  
-   <span data-ttu-id="19ce0-3498">通过调用移动的源的图形对象<xref:System.Drawing.Graphics.TranslateTransform%2A>，左乘转换矩阵的平移。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3498">Moves the origin of the graphics object by calling <xref:System.Drawing.Graphics.TranslateTransform%2A>, prepending the translation to the transformation matrix.</span></span>  
  
-   <span data-ttu-id="19ce0-3499">用蓝色钢笔绘制平移、 旋转椭圆。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3499">Draws a translated, rotated ellipse with a blue pen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#167](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#167)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#167](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#167)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#167](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#167)]  
  
 <span data-ttu-id="19ce0-3500">下图显示正在运行前面的代码示例的输出。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3500">The following illustration shows the output of running the previous code example.</span></span>  
  
 <span data-ttu-id="19ce0-3501">![已翻译和变换后的椭圆](~/add/media/ndp-tranlatetransform.png "已翻译和变换后的椭圆")</span><span class="sxs-lookup"><span data-stu-id="19ce0-3501">![Translated and transformed ellipse](~/add/media/ndp-tranlatetransform.png "Translated and transformed ellipse")</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateTransform">
      <MemberSignature Language="C#" Value="public void TranslateTransform (float dx, float dy, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateTransform(float32 dx, float32 dy, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateTransform (dx As Single, dy As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateTransform(float dx, float dy, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.TranslateTransform : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="graphics.TranslateTransform (dx, dy, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="dx">
          <span data-ttu-id="19ce0-3502">平移的 x 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3502">The x-coordinate of the translation.</span>
          </span>
        </param>
        <param name="dy">
          <span data-ttu-id="19ce0-3503">平移的 y 坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3503">The y-coordinate of the translation.</span>
          </span>
        </param>
        <param name="order">
          <span data-ttu-id="19ce0-3504">
            <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 枚举的成员，它指定是将平移添加到变换矩阵前还是追加到变换矩阵后。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3504">Member of the <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies whether the translation is prepended or appended to the transformation matrix.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="19ce0-3505">通过以指定顺序将指定平移应用于此 <see cref="T:System.Drawing.Graphics" /> 的变换矩阵来更改坐标系统的原点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3505">Changes the origin of the coordinate system by applying the specified translation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" /> in the specified order.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-3506">转换操作包括将乘以通过其平移部分是的矩阵的转换矩阵`dx`和`dy`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3506">The translation operation consists of multiplying the transformation matrix by a matrix whose translation part is the `dx` and `dy` parameters.</span></span> <span data-ttu-id="19ce0-3507">此方法将添加前或追加的变换矩阵<xref:System.Drawing.Graphics>通过根据转换矩阵`order`参数。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3507">This method prepends or appends the transformation matrix of the <xref:System.Drawing.Graphics> by the translation matrix according to the `order` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19ce0-3508">下面的代码示例专用于 Windows 窗体，并且它需要<xref:System.Windows.Forms.PaintEventArgs> `e`，这是一个参数的<xref:System.Windows.Forms.Control.Paint>事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3508">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="19ce0-3509">该代码执行下列操作：</span><span class="sxs-lookup"><span data-stu-id="19ce0-3509">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="19ce0-3510">将 Windows 窗体的世界转换矩阵旋转 30.0F 度。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3510">Rotates the world transformation matrix of the Windows Form by 30.0F degrees.</span></span>  
  
-   <span data-ttu-id="19ce0-3511">通过调用移动图形对象的原点<xref:System.Drawing.Graphics.TranslateTransform%2A>，追加到世界变换矩阵的平移。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3511">Moves the graphics object's origin by calling <xref:System.Drawing.Graphics.TranslateTransform%2A>, appending the translation to the world transformation matrix.</span></span>  
  
-   <span data-ttu-id="19ce0-3512">用蓝色钢笔绘制旋转、 平移的椭圆。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3512">Draws a rotated, translated ellipse with a blue pen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#168](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#168)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#168](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#168)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#168](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#168)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisibleClipBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF VisibleClipBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.RectangleF VisibleClipBounds" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.VisibleClipBounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VisibleClipBounds As RectangleF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::RectangleF VisibleClipBounds { System::Drawing::RectangleF get(); };" />
      <MemberSignature Language="F#" Value="member this.VisibleClipBounds : System.Drawing.RectangleF" Usage="System.Drawing.Graphics.VisibleClipBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19ce0-3513">获取此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域的边框。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3513">Gets the bounding rectangle of the visible clipping region of this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19ce0-3514">一个 <see cref="T:System.Drawing.RectangleF" /> 结构，它表示此 <see cref="T:System.Drawing.Graphics" /> 的可见剪辑区域的边框。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19ce0-3514">A <see cref="T:System.Drawing.RectangleF" /> structure that represents a bounding rectangle for the visible clipping region of this <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19ce0-3515">生成的矩形的单位所指定的<xref:System.Drawing.Graphics.PageUnit%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3515">The unit for resulting rectangle is designated by the <xref:System.Drawing.Graphics.PageUnit%2A> property.</span></span> <span data-ttu-id="19ce0-3516">默认单位是像素。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3516">The default unit is pixels.</span></span> <span data-ttu-id="19ce0-3517">A<xref:System.Drawing.Graphics>通常与控件关联的源的矩形将该控件的工作区相对。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3517">A <xref:System.Drawing.Graphics> is typically associated with a control and the origin of the rectangle will be relative to the client area of that control.</span></span>  
  
 <span data-ttu-id="19ce0-3518">可见剪辑区域是此的剪辑区域的交集<xref:System.Drawing.Graphics>和窗口的剪辑区域。</span><span class="sxs-lookup"><span data-stu-id="19ce0-3518">The visible clipping region is the intersection of the clipping region of this <xref:System.Drawing.Graphics> and the clipping region of the window.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>