<Type Name="BufferedGraphicsContext" FullName="System.Drawing.BufferedGraphicsContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d10ed6671a6ad0adcb73baa01783e03dbcf050f9" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46644042" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class BufferedGraphicsContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BufferedGraphicsContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.BufferedGraphicsContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BufferedGraphicsContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class BufferedGraphicsContext sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type BufferedGraphicsContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="9a236-101">提供创建图形缓冲区的方法，该缓冲区可用于双缓冲。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9a236-101">Provides methods for creating graphics buffers that can be used for double buffering.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a236-102"><xref:System.Drawing.BufferedGraphicsContext>类可以实现自定义双缓冲图形。</span><span class="sxs-lookup"><span data-stu-id="9a236-102">The <xref:System.Drawing.BufferedGraphicsContext> class allows you to implement custom double buffering for your graphics.</span></span> <span data-ttu-id="9a236-103">使用双缓冲的图形可以减少或消除闪烁因重绘显示图面。</span><span class="sxs-lookup"><span data-stu-id="9a236-103">Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9a236-104">若要使用双缓冲的最简单方法是设置<xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer>控件上使用的控件的样式标志<xref:System.Windows.Forms.Control.SetStyle%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a236-104">The simplest way to use double buffering is to set the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style flag on a control using the <xref:System.Windows.Forms.Control.SetStyle%2A> method.</span></span> <span data-ttu-id="9a236-105">设置<xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer>控件的控件样式标志将重定向通过默认图形缓冲区，控件的所有绘制工作，而无需任何其他代码。</span><span class="sxs-lookup"><span data-stu-id="9a236-105">Setting the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control styles flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code.</span></span> <span data-ttu-id="9a236-106">此标志设置为`true`默认情况下。</span><span class="sxs-lookup"><span data-stu-id="9a236-106">This flag is set to `true` by default.</span></span>  
  
 <span data-ttu-id="9a236-107"><xref:System.Drawing.BufferedGraphicsContext>类提供了用于创建和配置图形缓冲区的方法。</span><span class="sxs-lookup"><span data-stu-id="9a236-107">The <xref:System.Drawing.BufferedGraphicsContext> class provides methods for creating and configuring a graphics buffer.</span></span> <span data-ttu-id="9a236-108"><xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>方法创建<xref:System.Drawing.BufferedGraphics>，这是一个还提供了可用于写入到缓冲区和呈现其内容与输出设备的方法的图形缓冲区的包装器。</span><span class="sxs-lookup"><span data-stu-id="9a236-108">The <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method creates a <xref:System.Drawing.BufferedGraphics>, which is a wrapper for a graphics buffer that also provides methods you can use to write to the buffer and render its contents to an output device.</span></span>  
  
 <span data-ttu-id="9a236-109">可以检索<xref:System.Drawing.BufferedGraphicsContext>当前的应用程序域，从静态<xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType>属性。</span><span class="sxs-lookup"><span data-stu-id="9a236-109">You can retrieve the <xref:System.Drawing.BufferedGraphicsContext> for the current application domain from the static <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="9a236-110">如动画图形密集型应用程序，可以创建专用<xref:System.Drawing.BufferedGraphicsContext>使用构造函数，但对于大多数应用程序<xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType>属性已足够。</span><span class="sxs-lookup"><span data-stu-id="9a236-110">For graphically intensive applications such as animation, you can create a dedicated <xref:System.Drawing.BufferedGraphicsContext> using the constructor, but for most applications the <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> property will be sufficient.</span></span>  
  
 <span data-ttu-id="9a236-111">图形缓冲的图形和自定义缓冲实现的详细信息，请参阅[双缓冲图形](~/docs/framework/winforms/advanced/double-buffered-graphics.md)并[如何： 手动管理缓冲图形](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md)。</span><span class="sxs-lookup"><span data-stu-id="9a236-111">For more information on drawing buffered graphics and custom buffering implementations, see [Double Buffered Graphics](~/docs/framework/winforms/advanced/double-buffered-graphics.md) and [How to: Manually Manage Buffered Graphics](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a236-112">下面的代码示例演示如何获取<xref:System.Drawing.BufferedGraphicsContext>当前应用程序域。</span><span class="sxs-lookup"><span data-stu-id="9a236-112">The following code example demonstrates how to acquire the <xref:System.Drawing.BufferedGraphicsContext> for the current application domain.</span></span> <span data-ttu-id="9a236-113">此代码是为提供一个更大示例的一部分<xref:System.Drawing.BufferedGraphics>类。</span><span class="sxs-lookup"><span data-stu-id="9a236-113">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#1)]
 [!code-csharp[BufferingExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#1)]
 [!code-vb[BufferingExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Drawing.BufferedGraphics" />
    <altmember cref="T:System.Drawing.BufferedGraphicsManager" />
    <altmember cref="F:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer" />
    <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">
      <span data-ttu-id="9a236-114">双缓冲图形</span>
      <span class="sxs-lookup">
        <span data-stu-id="9a236-114">Double Buffered Graphics</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BufferedGraphicsContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BufferedGraphicsContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9a236-115">初始化 <see cref="T:System.Drawing.BufferedGraphicsContext" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a236-115">Initializes a new instance of the <see cref="T:System.Drawing.BufferedGraphicsContext" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a236-116">如动画图形密集型应用程序，您有时可以提高性能使用的专用<xref:System.Drawing.BufferedGraphicsContext>而不是由提供的默认实例<xref:System.Drawing.BufferedGraphicsManager>。</span><span class="sxs-lookup"><span data-stu-id="9a236-116">For graphically intensive applications such as animation, you can sometimes improve performance by using a dedicated <xref:System.Drawing.BufferedGraphicsContext> instead of the default instance provided by the <xref:System.Drawing.BufferedGraphicsManager>.</span></span> <span data-ttu-id="9a236-117">这允许您创建和管理单独的图形缓冲区。</span><span class="sxs-lookup"><span data-stu-id="9a236-117">This allows you to create and manage graphics buffers individually.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9a236-118">应始终调用<xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>使用专用完<xref:System.Drawing.BufferedGraphicsContext>。</span><span class="sxs-lookup"><span data-stu-id="9a236-118">You should always call <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> when you finish using a dedicated <xref:System.Drawing.BufferedGraphicsContext>.</span></span>  
  
 <span data-ttu-id="9a236-119">有关专用的图形缓冲区的详细信息，请参阅[如何： 手动管理缓冲图形](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md)。</span><span class="sxs-lookup"><span data-stu-id="9a236-119">For more information about dedicated graphics buffers, see [How to: Manually Manage Buffered Graphics](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">
          <span data-ttu-id="9a236-120">双缓冲图形</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a236-120">Double Buffered Graphics</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md">
          <span data-ttu-id="9a236-121">如何：手动管理缓冲图形</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a236-121">How to: Manually Manage Buffered Graphics</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Allocate">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9a236-122">创建图形缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a236-122">Creates a graphics buffer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Allocate">
      <MemberSignature Language="C#" Value="public System.Drawing.BufferedGraphics Allocate (System.Drawing.Graphics targetGraphics, System.Drawing.Rectangle targetRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.BufferedGraphics Allocate(class System.Drawing.Graphics targetGraphics, valuetype System.Drawing.Rectangle targetRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function Allocate (targetGraphics As Graphics, targetRectangle As Rectangle) As BufferedGraphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::BufferedGraphics ^ Allocate(System::Drawing::Graphics ^ targetGraphics, System::Drawing::Rectangle targetRectangle);" />
      <MemberSignature Language="F#" Value="member this.Allocate : System.Drawing.Graphics * System.Drawing.Rectangle -&gt; System.Drawing.BufferedGraphics" Usage="bufferedGraphicsContext.Allocate (targetGraphics, targetRectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.BufferedGraphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetGraphics" Type="System.Drawing.Graphics" />
        <Parameter Name="targetRectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="targetGraphics">
          <span data-ttu-id="9a236-123">
            <see cref="T:System.Drawing.Graphics" /> 与新缓冲区的像素格式匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a236-123">The <see cref="T:System.Drawing.Graphics" /> to match the pixel format for the new buffer to.</span>
          </span>
        </param>
        <param name="targetRectangle">
          <span data-ttu-id="9a236-124">一个 <see cref="T:System.Drawing.Rectangle" />，指示要创建的缓冲区的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a236-124">A <see cref="T:System.Drawing.Rectangle" /> indicating the size of the buffer to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a236-125">使用指定的 <see cref="T:System.Drawing.Graphics" /> 的像素格式，创建指定大小的图形缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a236-125">Creates a graphics buffer of the specified size using the pixel format of the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a236-126">一个 <see cref="T:System.Drawing.BufferedGraphics" />，可用于绘制到指定尺寸的缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a236-126">A <see cref="T:System.Drawing.BufferedGraphics" /> that can be used to draw to a buffer of the specified dimensions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a236-127">当您调用<xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>方法用矩形大小超出了值的<xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A>属性中，临时<xref:System.Drawing.BufferedGraphicsContext>创建以分配缓冲区，并提供临时上下文的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="9a236-127">When you call the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method with a rectangle whose size exceeds the value of the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> property, a temporary <xref:System.Drawing.BufferedGraphicsContext> is created to allocate the buffer and provide a temporary context for the buffer.</span></span> <span data-ttu-id="9a236-128">新<xref:System.Drawing.BufferedGraphicsContext>截然不同<xref:System.Drawing.BufferedGraphicsContext>应用程序域和它自动释放时<xref:System.Drawing.BufferedGraphics>返回的<xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>释放方法。</span><span class="sxs-lookup"><span data-stu-id="9a236-128">The new <xref:System.Drawing.BufferedGraphicsContext> is distinct from the <xref:System.Drawing.BufferedGraphicsContext> for the application domain and it is disposed automatically when the <xref:System.Drawing.BufferedGraphics> returned by the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method is disposed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a236-129">下面的代码示例演示如何创建图形缓冲区使用<xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a236-129">The following code example demonstrates creating a graphics buffer using the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method.</span></span> <span data-ttu-id="9a236-130">此代码是为提供一个更大示例的一部分<xref:System.Drawing.BufferedGraphics>类。</span><span class="sxs-lookup"><span data-stu-id="9a236-130">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#3)]
 [!code-csharp[BufferingExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#3)]
 [!code-vb[BufferingExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.BufferedGraphics" />
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Drawing.Rectangle" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">
          <span data-ttu-id="9a236-131">双缓冲图形</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a236-131">Double Buffered Graphics</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Allocate">
      <MemberSignature Language="C#" Value="public System.Drawing.BufferedGraphics Allocate (IntPtr targetDC, System.Drawing.Rectangle targetRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.BufferedGraphics Allocate(native int targetDC, valuetype System.Drawing.Rectangle targetRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function Allocate (targetDC As IntPtr, targetRectangle As Rectangle) As BufferedGraphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::BufferedGraphics ^ Allocate(IntPtr targetDC, System::Drawing::Rectangle targetRectangle);" />
      <MemberSignature Language="F#" Value="member this.Allocate : nativeint * System.Drawing.Rectangle -&gt; System.Drawing.BufferedGraphics" Usage="bufferedGraphicsContext.Allocate (targetDC, targetRectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.BufferedGraphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDC" Type="System.IntPtr" />
        <Parameter Name="targetRectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="targetDC">
          <span data-ttu-id="9a236-132">
            <see cref="T:System.IntPtr" /> 指向一个设备上下文，这个设备上下文与新缓冲区的象素格式匹配。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a236-132">An <see cref="T:System.IntPtr" /> to a device context to match the pixel format of the new buffer to.</span>
          </span>
        </param>
        <param name="targetRectangle">
          <span data-ttu-id="9a236-133">一个 <see cref="T:System.Drawing.Rectangle" />，指示要创建的缓冲区的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a236-133">A <see cref="T:System.Drawing.Rectangle" /> indicating the size of the buffer to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a236-134">使用指定的 <see cref="T:System.Drawing.Graphics" /> 的像素格式，创建指定大小的图形缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a236-134">Creates a graphics buffer of the specified size using the pixel format of the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a236-135">一个 <see cref="T:System.Drawing.BufferedGraphics" />，可用于绘制到指定尺寸的缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a236-135">A <see cref="T:System.Drawing.BufferedGraphics" /> that can be used to draw to a buffer of the specified dimensions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a236-136">当您调用<xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>方法用矩形大小超出了值的<xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A>属性中，临时<xref:System.Drawing.BufferedGraphicsContext>创建以分配缓冲区，并提供临时上下文的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="9a236-136">When you call the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method with a rectangle whose size exceeds the value of the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> property, a temporary <xref:System.Drawing.BufferedGraphicsContext> is created to allocate the buffer and provide a temporary context for the buffer.</span></span> <span data-ttu-id="9a236-137">新<xref:System.Drawing.BufferedGraphicsContext>截然不同<xref:System.Drawing.BufferedGraphicsContext>应用程序域和它自动释放时<xref:System.Drawing.BufferedGraphics>返回的<xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>释放方法。</span><span class="sxs-lookup"><span data-stu-id="9a236-137">The new <xref:System.Drawing.BufferedGraphicsContext> is distinct from the <xref:System.Drawing.BufferedGraphicsContext> for the application domain and it is disposed automatically when the <xref:System.Drawing.BufferedGraphics> returned by the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method is disposed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a236-138">下面的代码示例演示如何创建图形缓冲区使用<xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9a236-138">The following code example demonstrates creating a graphics buffer using the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method.</span></span> <span data-ttu-id="9a236-139">此代码是为提供一个更大示例的一部分<xref:System.Drawing.BufferedGraphics>类。</span><span class="sxs-lookup"><span data-stu-id="9a236-139">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#4)]
 [!code-csharp[BufferingExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#4)]
 [!code-vb[BufferingExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="9a236-140">用于访问非托管代码。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a236-140">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="9a236-141">相关的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9a236-141">Related enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Drawing.BufferedGraphics" />
        <altmember cref="T:System.IntPtr" />
        <altmember cref="T:System.Drawing.Rectangle" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">
          <span data-ttu-id="9a236-142">双缓冲图形</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a236-142">Double Buffered Graphics</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="bufferedGraphicsContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9a236-143">释放由 <see cref="T:System.Drawing.BufferedGraphicsContext" /> 使用的所有资源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a236-143">Releases all resources used by the <see cref="T:System.Drawing.BufferedGraphicsContext" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a236-144">在完成使用 <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> 后，应调用 <xref:System.Drawing.BufferedGraphicsContext>。</span><span class="sxs-lookup"><span data-stu-id="9a236-144">Call <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> when you are finished using the <xref:System.Drawing.BufferedGraphicsContext>.</span></span> <span data-ttu-id="9a236-145"><xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> 方法使 <xref:System.Drawing.BufferedGraphicsContext> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="9a236-145">The <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> method leaves the <xref:System.Drawing.BufferedGraphicsContext> in an unusable state.</span></span> <span data-ttu-id="9a236-146">在调用<xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>，必须释放对所有引用<xref:System.Drawing.BufferedGraphicsContext>这样垃圾回收器才能收回内存的<xref:System.Drawing.BufferedGraphicsContext>占用。</span><span class="sxs-lookup"><span data-stu-id="9a236-146">After calling <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>, you must release all references to the <xref:System.Drawing.BufferedGraphicsContext> so the garbage collector can reclaim the memory that the <xref:System.Drawing.BufferedGraphicsContext> was occupying.</span></span> <span data-ttu-id="9a236-147">有关详细信息，请参阅[清理了非托管资源](~/docs/standard/garbage-collection/unmanaged.md)并[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="9a236-147">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9a236-148">每次释放对 <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> 的最后一个引用前，均应调用 <xref:System.Drawing.BufferedGraphicsContext>。</span><span class="sxs-lookup"><span data-stu-id="9a236-148">Always call <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> before you release your last reference to the <xref:System.Drawing.BufferedGraphicsContext>.</span></span> <span data-ttu-id="9a236-149">否则，它所使用的资源之前，不会释放垃圾回收器调用<xref:System.Object.Finalize%2A>方法的<xref:System.Drawing.BufferedGraphicsContext>。</span><span class="sxs-lookup"><span data-stu-id="9a236-149">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Object.Finalize%2A> method of the <xref:System.Drawing.BufferedGraphicsContext>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">
          <span data-ttu-id="9a236-150">双缓冲图形</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a236-150">Double Buffered Graphics</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~BufferedGraphicsContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!BufferedGraphicsContext ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="bufferedGraphicsContext.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9a236-151">在垃圾回收将某一对象回收前允许该对象尝试释放资源并执行其他清理操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a236-151">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Invalidate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate();" />
      <MemberSignature Language="F#" Value="member this.Invalidate : unit -&gt; unit" Usage="bufferedGraphicsContext.Invalidate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9a236-152">如果某个缓冲区已被分配但尚未释放，则释放当前的图形缓冲区。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a236-152">Disposes of the current graphics buffer, if a buffer has been allocated and has not yet been disposed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a236-153">只要它是免费的; 如果图形缓冲区正在使用中，它会将标记为可供使用否则，它将被释放立即。</span><span class="sxs-lookup"><span data-stu-id="9a236-153">If the graphics buffer is in use, it will be marked for disposal as soon as it is free; otherwise, it will be disposed immediately.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">
          <span data-ttu-id="9a236-154">双缓冲图形</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a236-154">Double Buffered Graphics</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="MaximumBuffer">
      <MemberSignature Language="C#" Value="public System.Drawing.Size MaximumBuffer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MaximumBuffer" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumBuffer As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size MaximumBuffer { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumBuffer : System.Drawing.Size with get, set" Usage="System.Drawing.BufferedGraphicsContext.MaximumBuffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a236-155">获取或设置要使用的缓冲区的最大大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a236-155">Gets or sets the maximum size of the buffer to use.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9a236-156">一个 <see cref="T:System.Drawing.Size" />，指示缓冲区尺寸的最大大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a236-156">A <see cref="T:System.Drawing.Size" /> indicating the maximum size of the buffer dimensions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a236-157">此属性允许您获取或设置应保留在内存中缓冲区的最大尺寸。</span><span class="sxs-lookup"><span data-stu-id="9a236-157">This property allows you to get or set the maximum dimensions for a buffer that should be retained in memory.</span></span> <span data-ttu-id="9a236-158">你可以分配任何大小的缓冲区，但尺寸大于任何缓冲<xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A>大小将为临时使用，然后被丢弃时<xref:System.Drawing.BufferedGraphics>释放对象。</span><span class="sxs-lookup"><span data-stu-id="9a236-158">You can allocate a buffer of any size, however any buffer with dimensions greater than the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> size will be used temporarily and then discarded when the <xref:System.Drawing.BufferedGraphics> object is released.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a236-159">下面的示例演示如何设置对缓冲区的最大大小<xref:System.Drawing.BufferedGraphicsContext>。</span><span class="sxs-lookup"><span data-stu-id="9a236-159">The following example demonstrates setting the maximum size for the buffer for a <xref:System.Drawing.BufferedGraphicsContext>.</span></span> <span data-ttu-id="9a236-160">此代码是为提供一个更大示例的一部分<xref:System.Drawing.BufferedGraphics>类。</span><span class="sxs-lookup"><span data-stu-id="9a236-160">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#2)]
 [!code-csharp[BufferingExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#2)]
 [!code-vb[BufferingExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9a236-161">缓冲区大小的高度或宽度小于或等于零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a236-161">The height or width of the size is less than or equal to zero.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="9a236-162">允许用户对所有 windows 访问权限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a236-162">for allowing user access to all windows.</span>
          </span>
          <span data-ttu-id="9a236-163">相关的枚举： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9a236-163">Related enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">
          <span data-ttu-id="9a236-164">双缓冲图形</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a236-164">Double Buffered Graphics</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>