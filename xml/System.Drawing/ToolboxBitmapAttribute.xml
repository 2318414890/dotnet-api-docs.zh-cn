<Type Name="ToolboxBitmapAttribute" FullName="System.Drawing.ToolboxBitmapAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="edfc13a8e9bcfc791bfc5a7ea11b0a1553dbecaa" />
    <Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="10/12/2018" />
    <Meta Name="ms.locfileid" Value="49139306" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ToolboxBitmapAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ToolboxBitmapAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.ToolboxBitmapAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ToolboxBitmapAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolboxBitmapAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type ToolboxBitmapAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>这使您可以指定一个图标来表示容器的控件，例如 Microsoft Visual Studio 窗体设计器。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以将应用<xref:System.Drawing.ToolboxBitmapAttribute>到控件，以便容器，如 Microsoft Visual Studio 窗体设计器中，可以检索一个图标，表示的控件。 图标位图可以保存在文件本身或嵌入程序集中包含控件。 在中嵌入的位图的大小控件的程序集 （或存储在单独文件中的） 应为 16 × 16。 <xref:System.Drawing.ToolboxBitmapAttribute.GetImage%2A>方法的<xref:System.Drawing.ToolboxBitmapAttribute>对象能返回小型 16 × 16 图像或它通过扩展的小图像创建一个大型 32 × 32 映像。  
  
 若要将其他版本的图标用于不同版本的程序集，您无需修改每个版本的 <xref:System.Drawing.ToolboxBitmapAttribute>。 相反，您可使用 <xref:System.Drawing.BitmapSuffixInSameAssemblyAttribute> 或 <xref:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute> 声明此程集，并为每个程序集版本指定一个 <xref:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix%2A> 配置值。 在此情况下，使用追加的位图后缀来解释由 <xref:System.Drawing.ToolboxBitmapAttribute> 表示的文件名。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Drawing.ToolboxBitmapAttribute>类来设置`stop.bmp`的工具箱图标为`StopSignControl`。 此示例假定存在名为 16 的 16 像素位图`stop.bmp`在 c:\\。  
  
 [!code-cpp[System.Drawing.ToolBoxBitmapExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/cpp/usercontrol1.cpp#1)]
 [!code-csharp[System.Drawing.ToolBoxBitmapExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/CS/usercontrol1.cs#1)]
 [!code-vb[System.Drawing.ToolBoxBitmapExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/VB/usercontrol1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化新的 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolboxBitmapAttribute (string imageFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string imageFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (imageFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolboxBitmapAttribute(System::String ^ imageFile);" />
      <MemberSignature Language="F#" Value="new System.Drawing.ToolboxBitmapAttribute : string -&gt; System.Drawing.ToolboxBitmapAttribute" Usage="new System.Drawing.ToolboxBitmapAttribute imageFile" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="imageFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="imageFile">包含一个 16 × 16 位图的文件的名称。</param>
        <summary>使用来自指定文件的图像初始化新的 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A>构造函数来设置`stop.bmp`的工具箱图标为`StopSignControl`。 此示例假定存在名为 16 的 16 像素位图`stop.bmp`在 c:\\。  
  
 [!code-cpp[System.Drawing.ToolBoxBitmapExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/cpp/usercontrol1.cpp#1)]
 [!code-csharp[System.Drawing.ToolBoxBitmapExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/CS/usercontrol1.cs#1)]
 [!code-vb[System.Drawing.ToolBoxBitmapExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/VB/usercontrol1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolboxBitmapAttribute (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (t As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolboxBitmapAttribute(Type ^ t);" />
      <MemberSignature Language="F#" Value="new System.Drawing.ToolboxBitmapAttribute : Type -&gt; System.Drawing.ToolboxBitmapAttribute" Usage="new System.Drawing.ToolboxBitmapAttribute t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t">一个 <see cref="T:System.Type" />，将在它的定义程序集中搜索位图资源。</param>
        <summary>基于作为资源嵌入到指定程序集的一个 16 × 16 位图初始化新的 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数中定义指定的类型的程序集中嵌入的资源搜索`t`参数。 构造函数搜索的资源名为的 namespace.classname.bmp，其中命名空间是命名空间包含由指定的类定义`t`参数。 例如，在 AssemblyA.dll NamespaceA ControlA 是否，则构造函数搜索 AssemblyA.dll 资源名称为 NamespaceA.ControlA.bmp。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A>构造函数来设置按钮控件的图标的工具箱图标<xref:System.Windows.Forms.UserControl>名为`StopSignControl3`。  
  
 [!code-cpp[System.Drawing.ToolBoxBitmapExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/cpp/usercontrol1.cpp#3)]
 [!code-csharp[System.Drawing.ToolBoxBitmapExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/CS/usercontrol1.cs#3)]
 [!code-vb[System.Drawing.ToolBoxBitmapExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/VB/usercontrol1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolboxBitmapAttribute (Type t, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type t, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (t As Type, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolboxBitmapAttribute(Type ^ t, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Drawing.ToolboxBitmapAttribute : Type * string -&gt; System.Drawing.ToolboxBitmapAttribute" Usage="new System.Drawing.ToolboxBitmapAttribute (t, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="t">一个 <see cref="T:System.Type" />，将在它的定义程序集中搜索位图资源。</param>
        <param name="name">嵌入的位图资源的名称。</param>
        <summary>基于作为资源嵌入到指定程序集的 16 × 16 位图，初始化新的 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数中定义指定的类型的程序集中嵌入的资源搜索`t`参数。 此构造函数搜索名为 namespace.name 的资源，其中 namespace 是包含由 `t` 参数指定的类的定义的命名空间。 例如，假设 ControlA 是在 AssemblyA.dll NamespaceA 中的类和传递"MyBitmap.bmp"，到`name`参数。 然后在构造函数搜索 AssemblyA.dll 的名为 NamespaceA.MyBitmap.bmp 资源。  
  
   
  
## Examples  
 下面的代码示例演示如何使用<xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A>构造函数来设置`StopSignControl2.bmp`的工具箱图标为`StopSignControl2`。 此示例假定存在名为 16 的 16 像素位图`StopSignControl2.bmp`使用其**BuildAction**属性设置为**EmbeddedResource**。  
  
 [!code-cpp[System.Drawing.ToolBoxBitmapExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/cpp/usercontrol1.cpp#2)]
 [!code-csharp[System.Drawing.ToolBoxBitmapExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/CS/usercontrol1.cs#2)]
 [!code-vb[System.Drawing.ToolBoxBitmapExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/VB/usercontrol1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static readonly System.Drawing.ToolboxBitmapAttribute Default;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Drawing.ToolboxBitmapAttribute Default" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.ToolboxBitmapAttribute.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Default As ToolboxBitmapAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Drawing::ToolboxBitmapAttribute ^ Default;" />
      <MemberSignature Language="F#" Value=" staticval mutable Default : System.Drawing.ToolboxBitmapAttribute" Usage="System.Drawing.ToolboxBitmapAttribute.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.ToolboxBitmapAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>一个 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象，其小图像和大图像均设置为 <see langword="null" />。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="toolboxBitmapAttribute.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">要测试的 <see cref="T:System.Object" />。</param>
        <summary>指示指定的对象是否为 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象以及是否与此 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象相同。</summary>
        <returns>如果 <paramref name="value" /> 同时也是 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象并与此 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象相同，则此方法返回 <see langword="true" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="toolboxBitmapAttribute.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>获取此 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象的哈希代码。</summary>
        <returns>此 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象的哈希代码。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetImage">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>获取与此 <see cref="T:System.Drawing.Image" /> 对象关联的小或大 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public System.Drawing.Image GetImage (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Image GetImage(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetImage (component As Object) As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Image ^ GetImage(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="member this.GetImage : obj -&gt; System.Drawing.Image" Usage="toolboxBitmapAttribute.GetImage component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">如果此 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象尚没有小图像，则此方法在定义组件参数指定的对象类型的程序集中搜索位图资源。 例如，如果将类型为 ControlA 的对象传递给组件参数，则此方法在定义 ControlA 的程序集中搜索。</param>
        <summary>获取与此 <see cref="T:System.Drawing.Image" /> 对象关联的小 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />。</summary>
        <returns>与此 <see cref="T:System.Drawing.Image" /> 对象关联的小 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法搜索的资源名为的 namespace.classname.bmp，其中命名空间是命名空间包含由指定的对象类型的定义`component`参数。 例如，假设类型为 ControlA 的对象传递到`component`参数。 如果控件： 在 NamespaceA AssemblyA.dll 中，此方法对资源名称为 NamespaceA.ControlA.bmp 搜索 AssemblyA.dll。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Drawing.ToolboxBitmapAttribute.GetImage%2A> 方法。  
  
 [!code-cpp[System.Drawing.ToolBoxBitmapExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/cpp/usercontrol1.cpp#4)]
 [!code-csharp[System.Drawing.ToolBoxBitmapExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/CS/usercontrol1.cs#4)]
 [!code-vb[System.Drawing.ToolBoxBitmapExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/VB/usercontrol1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public System.Drawing.Image GetImage (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Image GetImage(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Image ^ GetImage(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetImage : Type -&gt; System.Drawing.Image" Usage="toolboxBitmapAttribute.GetImage type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">如果此 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象尚无小图像，则此方法在定义由类型参数指定的类型的程序集中搜索位图资源。 例如，如果将 typeof(ControlA) 传递给类型参数，则此方法在定义 ControlA 的程序集中搜索。</param>
        <summary>获取与此 <see cref="T:System.Drawing.Image" /> 对象关联的小 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />。</summary>
        <returns>与此 <see cref="T:System.Drawing.Image" /> 对象关联的小 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法搜索的资源名为的 namespace.classname.bmp，其中命名空间是命名空间包含由指定的类型定义`type`参数。 例如，假设将传递到 typeof （controla）`type`参数。 如果控件： 在 NamespaceA AssemblyA.dll 中，此方法对资源名称为 NamespaceA.ControlA.bmp 搜索 AssemblyA.dll。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public System.Drawing.Image GetImage (object component, bool large);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Image GetImage(object component, bool large) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetImage (component As Object, large As Boolean) As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Image ^ GetImage(System::Object ^ component, bool large);" />
      <MemberSignature Language="F#" Value="member this.GetImage : obj * bool -&gt; System.Drawing.Image" Usage="toolboxBitmapAttribute.GetImage (component, large)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="large" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">如果此 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象尚没有小图像，则此方法在定义组件参数指定的对象类型的程序集中搜索位图资源。 例如，如果将类型为 ControlA 的对象传递给组件参数，则此方法在定义 ControlA 的程序集中搜索。</param>
        <param name="large">指定此方法是返回大图像（<see langword="true" />）还是小图像（<see langword="false" />）。 小图像是 16 × 16，而大图像是 32 × 32。</param>
        <summary>获取与此 <see cref="T:System.Drawing.Image" /> 对象关联的小或大 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />。</summary>
        <returns>与此 <see cref="T:System.Drawing.Image" /> 对象关联的 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法搜索的资源名为的 namespace.classname.bmp，其中命名空间是命名空间包含由指定的对象类型的定义`component`参数。 例如，假设类型为 ControlA 的对象传递到`component`参数。 如果控件： 在 NamespaceA AssemblyA.dll 中，此方法对资源名称为 NamespaceA.ControlA.bmp 搜索 AssemblyA.dll。  
  
 如果此<xref:System.Drawing.ToolboxBitmapAttribute>对象还没有一个大图像，此方法将通过扩展的小图像创建一个大图像。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public System.Drawing.Image GetImage (Type type, bool large);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Image GetImage(class System.Type type, bool large) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Image ^ GetImage(Type ^ type, bool large);" />
      <MemberSignature Language="F#" Value="member this.GetImage : Type * bool -&gt; System.Drawing.Image" Usage="toolboxBitmapAttribute.GetImage (type, large)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="large" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">如果此 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象尚无小图像，则此方法在定义由组件类型指定的类型的程序集中搜索位图资源。 例如，如果将 typeof(ControlA) 传递给类型参数，则此方法在定义 ControlA 的程序集中搜索。</param>
        <param name="large">指定此方法是返回大图像（<see langword="true" />）还是小图像（<see langword="false" />）。 小图像是 16 × 16，而大图像是 32 × 32。</param>
        <summary>获取与此 <see cref="T:System.Drawing.Image" /> 对象关联的小或大 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />。</summary>
        <returns>与此 <see cref="T:System.Drawing.Image" /> 对象关联的 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法搜索的资源名为的 namespace.classname.bmp，其中命名空间是命名空间包含由指定的类型定义`type`参数。 例如，假设将传递到 typeof （controla）`type`参数。 如果控件： 在 NamespaceA AssemblyA.dll 中，此方法对资源名称为 NamespaceA.ControlA.bmp 搜索 AssemblyA.dll。  
  
 如果此<xref:System.Drawing.ToolboxBitmapAttribute>对象还没有一个大图像，此方法将通过扩展的小图像创建一个大图像。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public System.Drawing.Image GetImage (Type type, string imgName, bool large);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Image GetImage(class System.Type type, string imgName, bool large) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Image ^ GetImage(Type ^ type, System::String ^ imgName, bool large);" />
      <MemberSignature Language="F#" Value="member this.GetImage : Type * string * bool -&gt; System.Drawing.Image" Usage="toolboxBitmapAttribute.GetImage (type, imgName, large)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="imgName" Type="System.String" />
        <Parameter Name="large" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">如果此 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 对象尚无小图像，则此方法将搜索嵌入的位图资源，搜索范围是在定义了由组件类型指定的类型的程序集中。 例如，如果将 typeof(ControlA) 传递给类型参数，则此方法在定义 ControlA 的程序集中搜索。</param>
        <param name="imgName">嵌入的位图资源的名称。</param>
        <param name="large">指定此方法是返回大图像（<see langword="true" />）还是小图像（<see langword="false" />）。 小图像是 16 × 16，而大图像是 32 × 32。</param>
        <summary>获取与此 <see cref="T:System.Drawing.Image" /> 对象关联的小或大 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />。</summary>
        <returns>与此 <see cref="T:System.Drawing.Image" /> 对象关联的 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法搜索的资源名为的 namespace.imgName，其中命名空间是命名空间包含由指定的类型定义`type`参数。 例如，假设将传递到 typeof （controla）`type`参数和"MyBitmap.bmp"传递给 imgName 参数。 如果控件： 在 NamespaceA AssemblyA.dll 中，此方法对资源名称为 NamespaceA.MyBitmap.bmp 搜索 AssemblyA.dll。  
  
 如果此<xref:System.Drawing.ToolboxBitmapAttribute>对象还没有一个大图像，此方法将通过扩展的小图像创建一个大图像。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImageFromResource">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image GetImageFromResource (Type t, string imageName, bool large);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Image GetImageFromResource(class System.Type t, string imageName, bool large) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetImageFromResource (t As Type, imageName As String, large As Boolean) As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ GetImageFromResource(Type ^ t, System::String ^ imageName, bool large);" />
      <MemberSignature Language="F#" Value="static member GetImageFromResource : Type * string * bool -&gt; System.Drawing.Image" Usage="System.Drawing.ToolboxBitmapAttribute.GetImageFromResource (t, imageName, large)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
        <Parameter Name="imageName" Type="System.String" />
        <Parameter Name="large" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="t">此方法在定义由 t 参数指定的类型的程序集中搜索嵌入的位图资源。 例如，如果将 typeof(ControlA) 传递给 t 参数，则此方法在定义 ControlA 的程序集中搜索。</param>
        <param name="imageName">嵌入的位图资源的名称。</param>
        <param name="large">指定此方法是返回大图像 (true)，还是小图像 (false)。 小图像为 16 × 16，而大图像为 32 × 32。</param>
        <summary>基于程序集中嵌入的位图资源返回 <see cref="T:System.Drawing.Image" /> 对象。</summary>
        <returns>基于检索到的位图的 <see cref="T:System.Drawing.Image" /> 对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法搜索的资源名为的 namespace.imgName，其中命名空间是命名空间包含由指定的类型定义`t`参数。 例如，假设将传递到 typeof （controla）`t`参数，将"MyBitmap.bmp"传递给 imgName 参数。 如果控件： 在 NamespaceA AssemblyA.dll 中，此方法对资源名称为 NamespaceA.MyBitmap.bmp 搜索 AssemblyA.dll。  
  
 此方法用于检索嵌入在程序集中的 16x16 位图资源。 但是，没有任何嵌入的位图，其大小为 16 x 16 的要求。 从 （无论何种大小） 的程序集检索到的位图被视为小图像。 大型映像创建的缩放到的大小为 32 x 32"小"的图像。 因此大图像将始终为 32 × 32，而不考虑从该程序集检索到的位图的大小。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>