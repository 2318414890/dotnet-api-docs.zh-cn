<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ToolboxBitmapAttribute.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58e7e3baddc7823e3a9d97c1cce31418160f7e4a9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8e7e3baddc7823e3a9d97c1cce31418160f7e4a9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>Allows you to specify an icon to represent a control in a container, such as the Microsoft Visual Studio Form Designer.</source>
          <target state="translated">这使您可以指定一个图标来表示容器的控件，例如 Microsoft Visual Studio 窗体设计器。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>You can apply a <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> to a control so that containers, such as Microsoft Visual Studio Form Designer, can retrieve an icon that represents the control.</source>
          <target state="translated">你可以将应用<ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph>到控件，以便容器，如 Microsoft Visual Studio 窗体设计器中，可以检索一个图标，表示的控件。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>The bitmap for the icon can be in a file by itself or embedded in the assembly that contains the control.</source>
          <target state="translated">图标位图可存在于一个文件中单独或嵌入到程序集中包含该控件。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>The size of the bitmap that you embed in the control's assembly (or store in a separate file) should be 16 by 16.</source>
          <target state="translated">用于在中嵌入的位图大小控件的程序集 （或在单独的文件的存储区） 应为 16 × 16。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.GetImage%2A&gt;</ph> method of a <ph id="ph2">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> object can return the small 16 by 16 image or a large 32 by 32 image that it creates by scaling the small image.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.GetImage%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph>对象能否返回 16x16 小型图像或它通过缩放小图像创建 32x32 大型图像。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>If you want to use different versions of your icons with different versions of your assembly, you do not have to modify the <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> for each version.</source>
          <target state="translated">若要将其他版本的图标用于不同版本的程序集，您无需修改每个版本的 <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>Instead, you can declare the assembly with a <ph id="ph1">&lt;xref:System.Drawing.BitmapSuffixInSameAssemblyAttribute&gt;</ph> or a <ph id="ph2">&lt;xref:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute&gt;</ph>, and specify a <ph id="ph3">&lt;xref:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix%2A&gt;</ph> configuration value for each assembly version.</source>
          <target state="translated">相反，您可使用 <ph id="ph1">&lt;xref:System.Drawing.BitmapSuffixInSameAssemblyAttribute&gt;</ph> 或 <ph id="ph2">&lt;xref:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute&gt;</ph> 声明此程集，并为每个程序集版本指定一个 <ph id="ph3">&lt;xref:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix%2A&gt;</ph> 配置值。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>In this case, a file name indicated by a <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> is interpreted with the bitmap suffix appended.</source>
          <target state="translated">在此情况下，使用追加的位图后缀来解释由 <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> 表示的文件名。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> class to set <ph id="ph2">`stop.bmp`</ph> as the toolbox icon for the <ph id="ph3">`StopSignControl`</ph>.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph>类来设置<ph id="ph2">`stop.bmp`</ph>为的工具箱图标<ph id="ph3">`StopSignControl`</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>This example assumes the existence of a 16-by-16-pixel bitmap named <ph id="ph1">`stop.bmp`</ph> at c:<ph id="ph2">\\</ph>.</source>
          <target state="translated">此示例假定名为 16 *-16 像素的位图是否存在<ph id="ph1">`stop.bmp`</ph>在 c:<ph id="ph2">\\</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">初始化新的 <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.String)">
          <source>The name of a file that contains a 16 by 16 bitmap.</source>
          <target state="translated">包含一个 16 × 16 位图的文件的名称。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.String)">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object with an image from a specified file.</source>
          <target state="translated">使用来自指定文件的图像初始化新的 <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.String)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A&gt;</ph> constructor to set <ph id="ph2">`stop.bmp`</ph> as the toolbox icon for the <ph id="ph3">`StopSignControl`</ph>.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A&gt;</ph>构造函数来设置<ph id="ph2">`stop.bmp`</ph>为的工具箱图标<ph id="ph3">`StopSignControl`</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.String)">
          <source>This example assumes the existence of a 16-by-16-pixel bitmap named <ph id="ph1">`stop.bmp`</ph> at c:<ph id="ph2">\\</ph>.</source>
          <target state="translated">此示例假定名为 16 *-16 像素的位图是否存在<ph id="ph1">`stop.bmp`</ph>在 c:<ph id="ph2">\\</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> whose defining assembly is searched for the bitmap resource.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>，将在它的定义程序集中搜索位图资源。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object based on a 16 x 16 bitmap that is embedded as a resource in a specified assembly.</source>
          <target state="translated">基于作为资源嵌入到指定程序集的一个 16 × 16 位图初始化新的 <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)">
          <source>This constructor searches for an embedded resource in the assembly that defines the type specified by the <ph id="ph1">`t`</ph> parameter.</source>
          <target state="translated">此构造函数搜索中定义由指定的类型的程序集的嵌入资源<ph id="ph1">`t`</ph>参数。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)">
          <source>The constructor searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the class specified by the <ph id="ph1">`t`</ph> parameter.</source>
          <target state="translated">构造函数搜索的资源名称为的 namespace.classname.bmp，其中命名空间是命名空间包含指定的类的定义<ph id="ph1">`t`</ph>参数。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)">
          <source>For example, if ControlA is in NamespaceA in AssemblyA.dll, then the constructor searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.</source>
          <target state="translated">例如，如果控件处于 NamespaceA AssemblyA.dll 中，则构造函数搜索 AssemblyA.dll 一个名为 NamespaceA.ControlA.bmp 资源。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A&gt;</ph> constructor to set the icon of the button control to the toolbox icon for a <ph id="ph2">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> named <ph id="ph3">`StopSignControl3`</ph>.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A&gt;</ph>构造函数来设置为工具箱图标的按钮控件的图标<ph id="ph2">&lt;xref:System.Windows.Forms.UserControl&gt;</ph>名为<ph id="ph3">`StopSignControl3`</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> whose defining assembly is searched for the bitmap resource.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>，将在它的定义程序集中搜索位图资源。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
          <source>The name of the embedded bitmap resource.</source>
          <target state="translated">嵌入的位图资源的名称。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object based on a 16 by 16 bitmap that is embedded as a resource in a specified assembly.</source>
          <target state="translated">基于作为资源嵌入到指定程序集的 16 × 16 位图，初始化新的 <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
          <source>This constructor searches for an embedded resource in the assembly that defines the type specified by the <ph id="ph1">`t`</ph> parameter.</source>
          <target state="translated">此构造函数搜索中定义由指定的类型的程序集的嵌入资源<ph id="ph1">`t`</ph>参数。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
          <source>The constructor searches for a resource named namespace.name, where namespace is the namespace containing the definition of the class specified by the <ph id="ph1">`t`</ph> parameter.</source>
          <target state="translated">此构造函数搜索名为 namespace.name 的资源，其中 namespace 是包含由 <ph id="ph1">`t`</ph> 参数指定的类的定义的命名空间。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
          <source>For example, suppose that ControlA is a class in NamespaceA in AssemblyA.dll and that you passed "MyBitmap.bmp" to the <ph id="ph1">`name`</ph> parameter.</source>
          <target state="translated">例如，假设到控件是在 AssemblyA.dll NamespaceA 中的类，且传递"MyBitmap.bmp"<ph id="ph1">`name`</ph>参数。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
          <source>Then the constructor searches AssemblyA.dll for a resource named NamespaceA.MyBitmap.bmp.</source>
          <target state="translated">则构造函数搜索资源名称为 NamespaceA.MyBitmap.bmp AssemblyA.dll。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
          <source>'The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A&gt;</ph> constructor to set <ph id="ph2">`StopSignControl2.bmp`</ph> as a toolbox icon for the <ph id="ph3">`StopSignControl2`</ph>.</source>
          <target state="translated">下面的代码示例演示如何使用<ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A&gt;</ph>构造函数来设置<ph id="ph2">`StopSignControl2.bmp`</ph>作为的工具箱图标<ph id="ph3">`StopSignControl2`</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
          <source>This example assumes the existence of a 16-by-16-pixel bitmap named <ph id="ph1">`StopSignControl2.bmp`</ph> with its <bpt id="p1">**</bpt>BuildAction<ept id="p1">**</ept> property set to <bpt id="p2">**</bpt>EmbeddedResource<ept id="p2">**</ept>.</source>
          <target state="translated">此示例假定名为 16 *-16 像素的位图是否存在<ph id="ph1">`StopSignControl2.bmp`</ph>与其<bpt id="p1">**</bpt>BuildAction<ept id="p1">**</ept>属性设置为<bpt id="p2">**</bpt>EmbeddedResource<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="F:System.Drawing.ToolboxBitmapAttribute.Default">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object that has its small image and its large image set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">一个 <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> 对象，其小图像和大图像均设置为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to test.</source>
          <target state="translated">要测试的 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.Equals(System.Object)">
          <source>Indicates whether the specified object is a <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object and is identical to this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">指示指定的对象是否为 <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> 对象以及是否与此 <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> 对象相同。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.Equals(System.Object)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is both a <ph id="ph3">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object and is identical to this <ph id="ph4">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 同时也是 <ph id="ph3">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> 对象并与此 <ph id="ph4">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> 对象相同，则此方法返回 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetHashCode">
          <source>Gets a hash code for this <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">获取此 <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> 对象的哈希代码。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetHashCode">
          <source>The hash code for this <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">此 <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> 对象的哈希代码。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>Gets the small or large <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">获取与此 <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> 对象关联的小或大 <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
          <source>If this <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type of the object specified by the component parameter.</source>
          <target state="translated">如果此 <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> 对象尚没有小图像，则此方法在定义组件参数指定的对象类型的程序集中搜索位图资源。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
          <source>For example, if you pass an object of type ControlA to the component parameter, then this method searches the assembly that defines ControlA.</source>
          <target state="translated">例如，如果将类型为 ControlA 的对象传递给组件参数，则此方法在定义 ControlA 的程序集中搜索。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
          <source>Gets the small <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">获取与此 <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> 对象关联的小 <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
          <source>The small <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">与此 <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> 对象关联的小 <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
          <source>This method searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the type of the object specified by the <ph id="ph1">`component`</ph> parameter.</source>
          <target state="translated">此方法搜索资源名称为的 namespace.classname.bmp，其中命名空间是命名空间包含由指定的对象类型的定义<ph id="ph1">`component`</ph>参数。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
          <source>For example, suppose you pass an object of type ControlA to the <ph id="ph1">`component`</ph> parameter.</source>
          <target state="translated">例如，假设类型控件的对象传递到<ph id="ph1">`component`</ph>参数。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
          <source>If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.</source>
          <target state="translated">如果控件处于 NamespaceA AssemblyA.dll 中，此方法对资源名称为 NamespaceA.ControlA.bmp 搜索 AssemblyA.dll。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.GetImage%2A&gt;</ph> method.</source>
          <target state="translated">下面的示例演示如何使用 <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.GetImage%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)">
          <source>If this <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type specified by the type parameter.</source>
          <target state="translated">如果此 <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> 对象尚无小图像，则此方法在定义由类型参数指定的类型的程序集中搜索位图资源。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)">
          <source>For example, if you pass typeof(ControlA) to the type parameter, then this method searches the assembly that defines ControlA.</source>
          <target state="translated">例如，如果将 typeof(ControlA) 传递给类型参数，则此方法在定义 ControlA 的程序集中搜索。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)">
          <source>Gets the small <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">获取与此 <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> 对象关联的小 <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)">
          <source>The small <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">与此 <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> 对象关联的小 <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)">
          <source>This method searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the type specified by the <ph id="ph1">`type`</ph> parameter.</source>
          <target state="translated">此方法搜索资源名称为的 namespace.classname.bmp，其中命名空间是命名空间包含由指定的类型的定义<ph id="ph1">`type`</ph>参数。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)">
          <source>For example, suppose you pass typeof(ControlA) to the <ph id="ph1">`type`</ph> parameter.</source>
          <target state="translated">例如，假设将传递到 typeof(ControlA)<ph id="ph1">`type`</ph>参数。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)">
          <source>If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.</source>
          <target state="translated">如果控件处于 NamespaceA AssemblyA.dll 中，此方法对资源名称为 NamespaceA.ControlA.bmp 搜索 AssemblyA.dll。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>If this <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type of the object specified by the component parameter.</source>
          <target state="translated">如果此 <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> 对象尚没有小图像，则此方法在定义组件参数指定的对象类型的程序集中搜索位图资源。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>For example, if you pass an object of type ControlA to the component parameter, then this method searches the assembly that defines ControlA.</source>
          <target state="translated">例如，如果将类型为 ControlA 的对象传递给组件参数，则此方法在定义 ControlA 的程序集中搜索。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>Specifies whether this method returns a large image (<ph id="ph1">&lt;see langword="true" /&gt;</ph>) or a small image (<ph id="ph2">&lt;see langword="false" /&gt;</ph>).</source>
          <target state="translated">指定此方法是返回大图像（<ph id="ph1">&lt;see langword="true" /&gt;</ph>）还是小图像（<ph id="ph2">&lt;see langword="false" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>The small image is 16 by 16, and the large image is 32 by 32.</source>
          <target state="translated">小图像是 16 × 16，而大图像是 32 × 32。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>Gets the small or large <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">获取与此 <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> 对象关联的小或大 <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> object associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">与此 <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> 对象关联的 <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>This method searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the type of the object specified by the <ph id="ph1">`component`</ph> parameter.</source>
          <target state="translated">此方法搜索资源名称为的 namespace.classname.bmp，其中命名空间是命名空间包含由指定的对象类型的定义<ph id="ph1">`component`</ph>参数。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>For example, suppose you pass an object of type ControlA to the <ph id="ph1">`component`</ph> parameter.</source>
          <target state="translated">例如，假设类型控件的对象传递到<ph id="ph1">`component`</ph>参数。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.</source>
          <target state="translated">如果控件处于 NamespaceA AssemblyA.dll 中，此方法对资源名称为 NamespaceA.ControlA.bmp 搜索 AssemblyA.dll。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>If this <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> object does not already have a large image, this method creates a large image by scaling the small image.</source>
          <target state="translated">如果此<ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph>对象不具有较大的图像，此方法通过缩放小图像来创建较大的图像。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>If this <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type specified by the component type.</source>
          <target state="translated">如果此 <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> 对象尚无小图像，则此方法在定义由组件类型指定的类型的程序集中搜索位图资源。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>For example, if you pass typeof(ControlA) to the type parameter, then this method searches the assembly that defines ControlA.</source>
          <target state="translated">例如，如果将 typeof(ControlA) 传递给类型参数，则此方法在定义 ControlA 的程序集中搜索。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>Specifies whether this method returns a large image (<ph id="ph1">&lt;see langword="true" /&gt;</ph>) or a small image (<ph id="ph2">&lt;see langword="false" /&gt;</ph>).</source>
          <target state="translated">指定此方法是返回大图像（<ph id="ph1">&lt;see langword="true" /&gt;</ph>）还是小图像（<ph id="ph2">&lt;see langword="false" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>The small image is 16 by 16, and the large image is 32 by 32.</source>
          <target state="translated">小图像是 16 × 16，而大图像是 32 × 32。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>Gets the small or large <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">获取与此 <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> 对象关联的小或大 <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">与此 <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> 对象关联的 <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>This method searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the type specified by the <ph id="ph1">`type`</ph> parameter.</source>
          <target state="translated">此方法搜索资源名称为的 namespace.classname.bmp，其中命名空间是命名空间包含由指定的类型的定义<ph id="ph1">`type`</ph>参数。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>For example, suppose you pass an typeof(ControlA) to the <ph id="ph1">`type`</ph> parameter.</source>
          <target state="translated">例如，假设将传递到 typeof(ControlA)<ph id="ph1">`type`</ph>参数。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.</source>
          <target state="translated">如果控件处于 NamespaceA AssemblyA.dll 中，此方法对资源名称为 NamespaceA.ControlA.bmp 搜索 AssemblyA.dll。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>If this <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> object does not already have a large image, this method creates a large image by scaling the small image.</source>
          <target state="translated">如果此<ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph>对象不具有较大的图像，此方法通过缩放小图像来创建较大的图像。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>If this <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object does not already have a small image, this method searches for an embedded bitmap resource in the assembly that defines the type specified by the component type.</source>
          <target state="translated">如果此 <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> 对象尚无小图像，则此方法将搜索嵌入的位图资源，搜索范围是在定义了由组件类型指定的类型的程序集中。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>For example, if you pass typeof(ControlA) to the type parameter, then this method searches the assembly that defines ControlA.</source>
          <target state="translated">例如，如果将 typeof(ControlA) 传递给类型参数，则此方法在定义 ControlA 的程序集中搜索。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>The name of the embedded bitmap resource.</source>
          <target state="translated">嵌入的位图资源的名称。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>Specifies whether this method returns a large image (<ph id="ph1">&lt;see langword="true" /&gt;</ph>) or a small image (<ph id="ph2">&lt;see langword="false" /&gt;</ph>).</source>
          <target state="translated">指定此方法是返回大图像（<ph id="ph1">&lt;see langword="true" /&gt;</ph>）还是小图像（<ph id="ph2">&lt;see langword="false" /&gt;</ph>）。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>The small image is 16 by 16, and the large image is 32 by 32.</source>
          <target state="translated">小图像是 16 × 16，而大图像是 32 × 32。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>Gets the small or large <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">获取与此 <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> 对象关联的小或大 <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">与此 <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> 对象关联的 <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>This method searches for a resource named namespace.imgName, where namespace is the namespace containing the definition of the type specified by the <ph id="ph1">`type`</ph> parameter.</source>
          <target state="translated">此方法搜索资源名称为的 namespace.imgName，其中命名空间是命名空间包含由指定的类型的定义<ph id="ph1">`type`</ph>参数。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>For example, suppose you pass typeof(ControlA) to the <ph id="ph1">`type`</ph> parameter and that you passed "MyBitmap.bmp" to the imgName parameter.</source>
          <target state="translated">例如，假设将传递到 typeof(ControlA)<ph id="ph1">`type`</ph>参数和"MyBitmap.bmp"传递给 imgName 参数。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.MyBitmap.bmp.</source>
          <target state="translated">如果控件处于 NamespaceA AssemblyA.dll 中，此方法对资源名称为 NamespaceA.MyBitmap.bmp 搜索 AssemblyA.dll。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>If this <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> object does not already have a large image, this method creates a large image by scaling the small image.</source>
          <target state="translated">如果此<ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph>对象不具有较大的图像，此方法通过缩放小图像来创建较大的图像。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>This method searches for an embedded bitmap resource in the assembly that defines the type specified by the t parameter.</source>
          <target state="translated">此方法在定义由 t 参数指定的类型的程序集中搜索嵌入的位图资源。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>For example, if you pass typeof(ControlA) to the t parameter, then this method searches the assembly that defines ControlA.</source>
          <target state="translated">例如，如果将 typeof(ControlA) 传递给 t 参数，则此方法在定义 ControlA 的程序集中搜索。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>The name of the embedded bitmap resource.</source>
          <target state="translated">嵌入的位图资源的名称。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>Specifies whether this method returns a large image (true)or a small image (false).</source>
          <target state="translated">指定此方法是返回大图像（真）还是小图像（假）。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>The small image is 16 by 16, and the large image is 32 x 32.</source>
          <target state="translated">小图像为 16 × 16，而大图像为 32 × 32。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> object based on a bitmap resource that is embedded in an assembly.</source>
          <target state="translated">基于程序集中嵌入的位图资源返回 <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> object based on the retrieved bitmap.</source>
          <target state="translated">基于检索到的位图的 <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>This method searches for a resource named namespace.imgName, where namespace is the namespace containing the definition of the type specified by the <ph id="ph1">`t`</ph> parameter.</source>
          <target state="translated">此方法搜索资源名称为的 namespace.imgName，其中命名空间是命名空间包含由指定的类型的定义<ph id="ph1">`t`</ph>参数。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>For example, suppose you pass typeof(ControlA) to the <ph id="ph1">`t`</ph> parameter and you pass "MyBitmap.bmp" to the imgName parameter.</source>
          <target state="translated">例如，假设将传递到 typeof(ControlA)<ph id="ph1">`t`</ph>参数，并将"MyBitmap.bmp"传递给 imgName 参数。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.MyBitmap.bmp.</source>
          <target state="translated">如果控件处于 NamespaceA AssemblyA.dll 中，此方法对资源名称为 NamespaceA.MyBitmap.bmp 搜索 AssemblyA.dll。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>This method is intended to retrieve a 16 x 16 bitmap resource that is embedded in an assembly.</source>
          <target state="translated">此方法用于检索嵌入到程序集中的 16 x 16 位图资源。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>However, there is no requirement that the embedded bitmap has a size of 16 x 16.</source>
          <target state="translated">但是，没有任何要求，即嵌入的位图的大小为 16 x 16。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>The bitmap that is retrieved from the assembly (no matter what size) is considered the small image.</source>
          <target state="translated">用于检索从 （无论何种大小） 的程序集中的位图被视为小图像。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>The large image is created by scaling the "small" image to a size of 32 x 32.</source>
          <target state="translated">大型映像创建的缩放大小为 32 x 32"小"的图像。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>So the large image will always be 32 by 32, regardless of the size of the bitmap retrieved from the assembly.</source>
          <target state="translated">因此，大的图像将始终是 32 × 32，而不考虑的程序集中检索到的位图的大小。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>