<Type Name="IDeviceContext" FullName="System.Drawing.IDeviceContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b21f56cebcab3ae5e6626cacd6e8c3414b9fd79c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36489073" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDeviceContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDeviceContext implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.IDeviceContext" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDeviceContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDeviceContext : IDisposable" />
  <TypeSignature Language="F#" Value="type IDeviceContext = interface&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="da3f8-101">定义用于获取并释放 Windows 设备上下文的现有图柄的方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="da3f8-101">Defines methods for obtaining and releasing an existing handle to a Windows device context.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da3f8-102">设备上下文定义为在基于 Windows 的设备上进行绘制的图形对象。</span><span class="sxs-lookup"><span data-stu-id="da3f8-102">A device context defines the graphics object for drawing on a Windows-based device.</span></span> <span data-ttu-id="da3f8-103">实现类的一个示例<xref:System.Drawing.IDeviceContext>接口是<xref:System.Drawing.Graphics>类。</span><span class="sxs-lookup"><span data-stu-id="da3f8-103">An example of a class that implements the <xref:System.Drawing.IDeviceContext> interface is the <xref:System.Drawing.Graphics> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetHdc">
      <MemberSignature Language="C#" Value="public IntPtr GetHdc ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int GetHdc() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.IDeviceContext.GetHdc" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHdc () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetHdc();" />
      <MemberSignature Language="F#" Value="abstract member GetHdc : unit -&gt; nativeint" Usage="iDeviceContext.GetHdc " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="da3f8-104">返回 Windows 设备上下文的图柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da3f8-104">Returns the handle to a Windows device context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da3f8-105">表示设备上下文的图柄的 <see cref="T:System.IntPtr" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da3f8-105">An <see cref="T:System.IntPtr" /> representing the handle of a device context.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da3f8-106"><xref:System.Drawing.IDeviceContext.GetHdc%2A> 和<xref:System.Drawing.IDeviceContext.ReleaseHdc%2A>两种方法，可用于获取和发布基于 Windows 的设备的句柄。</span><span class="sxs-lookup"><span data-stu-id="da3f8-106"><xref:System.Drawing.IDeviceContext.GetHdc%2A> and <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> are two methods that allow you to get and release the handle for a Windows-based device.</span></span> <span data-ttu-id="da3f8-107">你应始终遵循调用<xref:System.Drawing.IDeviceContext.GetHdc%2A>通过调用<xref:System.Drawing.IDeviceContext.ReleaseHdc%2A>完成之后使用的 Windows 句柄。</span><span class="sxs-lookup"><span data-stu-id="da3f8-107">You should always follow a call to <xref:System.Drawing.IDeviceContext.GetHdc%2A> with a call to <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> when you are finished with the Windows handle.</span></span>  
  
 <span data-ttu-id="da3f8-108"><xref:System.Drawing.IDeviceContext.GetHdc%2A> 不是获取句柄创建使用 Windows GDI 方法如`CreateDC`或`CreateCompatibleDC`。</span><span class="sxs-lookup"><span data-stu-id="da3f8-108"><xref:System.Drawing.IDeviceContext.GetHdc%2A> is not designed to obtain handles created using Windows GDI methods such as `CreateDC` or `CreateCompatibleDC`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseHdc">
      <MemberSignature Language="C#" Value="public void ReleaseHdc ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseHdc() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.IDeviceContext.ReleaseHdc" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseHdc ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseHdc();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseHdc : unit -&gt; unit" Usage="iDeviceContext.ReleaseHdc " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="da3f8-109">释放 Windows 设备上下文的图柄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da3f8-109">Releases the handle of a Windows device context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da3f8-110"><xref:System.Drawing.IDeviceContext.GetHdc%2A> 和<xref:System.Drawing.IDeviceContext.ReleaseHdc%2A>两种方法，可用于获取和发布基于 Windows 的设备的句柄。</span><span class="sxs-lookup"><span data-stu-id="da3f8-110"><xref:System.Drawing.IDeviceContext.GetHdc%2A> and <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> are two methods that allow you to get and release the handle for a Windows-based device.</span></span> <span data-ttu-id="da3f8-111">你应始终遵循调用<xref:System.Drawing.IDeviceContext.GetHdc%2A>通过调用<xref:System.Drawing.IDeviceContext.ReleaseHdc%2A>完成之后使用的 Windows 句柄。</span><span class="sxs-lookup"><span data-stu-id="da3f8-111">You should always follow a call to <xref:System.Drawing.IDeviceContext.GetHdc%2A> with a call to <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> when you are finished with the Windows handle.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>