<Type Name="CharacterRange" FullName="System.Drawing.CharacterRange">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3d29f85f794eac071194ba6e4f6f1badeb94612c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36340637" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct CharacterRange" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit CharacterRange extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.CharacterRange" />
  <TypeSignature Language="VB.NET" Value="Public Structure CharacterRange" />
  <TypeSignature Language="C++ CLI" Value="public value class CharacterRange" />
  <TypeSignature Language="F#" Value="type CharacterRange = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>指定字符串内字符位置的范围。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何创建<xref:System.Drawing.CharacterRange>并使用它来突出显示字符串的一部分。 本示例旨在与 Windows 窗体一起使用。 将示例粘贴到窗体并调用`HighlightACharacterRange`方法时处理该窗体的<xref:System.Windows.Forms.Control.Paint>事件，并传递`e`作为<xref:System.Windows.Forms.PaintEventArgs>。  
  
 [!code-cpp[System.Drawing.CharacterRangeExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.CharacterRangeExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.CharacterRangeExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CharacterRange (int First, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 First, int32 Length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.CharacterRange.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (First As Integer, Length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CharacterRange(int First, int Length);" />
      <MemberSignature Language="F#" Value="new System.Drawing.CharacterRange : int * int -&gt; System.Drawing.CharacterRange" Usage="new System.Drawing.CharacterRange (First, Length)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="First" Type="System.Int32" />
        <Parameter Name="Length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="First">此范围内第一个字符的位置。 例如，如果第一个设置为 0，那么此范围的第一个位置是字符串中的位置 0<c></c>。</param>
        <param name="Length">此范围内的位置数。</param>
        <summary>指定字符串内字符位置的范围，初始化 <see cref="T:System.Drawing.CharacterRange" /> 结构的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何创建<xref:System.Drawing.CharacterRange>并使用它来突出显示字符串的一部分。 本示例旨在与 Windows 窗体一起使用。 将示例粘贴到窗体并调用`HighlightACharacterRange`方法时处理该窗体的<xref:System.Windows.Forms.Control.Paint>事件，并传递`e`作为<xref:System.Windows.Forms.PaintEventArgs>。  
  
 [!code-cpp[System.Drawing.CharacterRangeExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.CharacterRangeExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.CharacterRangeExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.CharacterRange.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="characterRange.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">要进行等效性比较的对象。</param>
        <summary>获取指示此对象是否与指定对象等效的值。</summary>
        <returns>如果指定对象是与此实例具有相同的 <see cref="P:System.Drawing.CharacterRange.First" /> 和 <see cref="P:System.Drawing.CharacterRange.Length" /> 值的实例，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你还可以使用<xref:System.Drawing.CharacterRange.op_Equality%2A>来测试相等性。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Drawing.CharacterRange.Equals%2A> 方法。 若要运行此示例，请将其粘贴到 Windows 窗体中。 处理窗体的<xref:System.Windows.Forms.Control.Paint>事件并调用`CharacterRangeEquality2`方法从<xref:System.Windows.Forms.Control.Paint>事件处理方法，并传递`e`作为<xref:System.Windows.Forms.PaintEventArgs>。  
  
 [!code-csharp[System.Drawing.MiscWhidbeySnippets#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/CS/Form1.cs#2)]
 [!code-vb[System.Drawing.MiscWhidbeySnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="First">
      <MemberSignature Language="C#" Value="public int First { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 First" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.CharacterRange.First" />
      <MemberSignature Language="VB.NET" Value="Public Property First As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int First { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.First : int with get, set" Usage="System.Drawing.CharacterRange.First" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置字符串中此 <see cref="T:System.Drawing.CharacterRange" /> 的第一个字符的位置。</summary>
        <value>此 <see cref="T:System.Drawing.CharacterRange" /> 的第一个位置。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.CharacterRange.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="characterRange.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回此实例的哈希代码。</summary>
        <returns>一个 32 位带符号整数，它是此实例的哈希代码。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.CharacterRange.Length" />
      <MemberSignature Language="VB.NET" Value="Public Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Length : int with get, set" Usage="System.Drawing.CharacterRange.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置此 <see cref="T:System.Drawing.CharacterRange" /> 中的位置数。</summary>
        <value>此 <see cref="T:System.Drawing.CharacterRange" /> 中的位置数。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Drawing.CharacterRange cr1, System.Drawing.CharacterRange cr2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Drawing.CharacterRange cr1, valuetype System.Drawing.CharacterRange cr2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.CharacterRange.op_Equality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (cr1 As CharacterRange, cr2 As CharacterRange) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Drawing::CharacterRange cr1, System::Drawing::CharacterRange cr2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Drawing.CharacterRange * System.Drawing.CharacterRange -&gt; bool" Usage="cr1 = cr2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cr1" Type="System.Drawing.CharacterRange" />
        <Parameter Name="cr2" Type="System.Drawing.CharacterRange" />
      </Parameters>
      <Docs>
        <param name="cr1">要比较等效性的 <see cref="T:System.Drawing.CharacterRange" />。</param>
        <param name="cr2">要比较等效性的 <see cref="T:System.Drawing.CharacterRange" />。</param>
        <summary>比较两个 <see cref="T:System.Drawing.CharacterRange" /> 对象。 指示两个 <see cref="T:System.Drawing.CharacterRange" /> 对象的 <see cref="P:System.Drawing.CharacterRange.First" /> 和 <see cref="P:System.Drawing.CharacterRange.Length" /> 值是否相等的值。</summary>
        <returns>如果两个 <see cref="T:System.Drawing.CharacterRange" /> 对象的 <see cref="P:System.Drawing.CharacterRange.First" /> 和 <see cref="P:System.Drawing.CharacterRange.Length" /> 值均相同，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 你还可以测试相等性使用<xref:System.Drawing.CharacterRange.Equals%2A>方法。  
  
 此运算符的等效方法是 <xref:System.Drawing.CharacterRange.Equals%28System.Object%29?displayProperty=nameWithType>  
  
## Examples  
 下面的示例演示如何使用<xref:System.Drawing.CharacterRange.op_Equality%2A>运算符。 若要运行此示例，请将其粘贴到 Windows 窗体中。 处理窗体的<xref:System.Windows.Forms.Control.Paint>事件并调用`CharacterRangeEquality1`方法从<xref:System.Windows.Forms.Control.Paint>事件处理方法，并传递`e`作为<xref:System.Windows.Forms.PaintEventArgs>。  
  
 [!code-csharp[System.Drawing.MiscWhidbeySnippets#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.MiscWhidbeySnippets#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Drawing.CharacterRange cr1, System.Drawing.CharacterRange cr2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Drawing.CharacterRange cr1, valuetype System.Drawing.CharacterRange cr2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.CharacterRange.op_Inequality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (cr1 As CharacterRange, cr2 As CharacterRange) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Drawing::CharacterRange cr1, System::Drawing::CharacterRange cr2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Drawing.CharacterRange * System.Drawing.CharacterRange -&gt; bool" Usage="System.Drawing.CharacterRange.op_Inequality (cr1, cr2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cr1" Type="System.Drawing.CharacterRange" />
        <Parameter Name="cr2" Type="System.Drawing.CharacterRange" />
      </Parameters>
      <Docs>
        <param name="cr1">要比较不等性的 <see cref="T:System.Drawing.CharacterRange" />。</param>
        <param name="cr2">要比较不等性的 <see cref="T:System.Drawing.CharacterRange" />。</param>
        <summary>比较两个 <see cref="T:System.Drawing.CharacterRange" /> 对象。 指示两个 <see cref="T:System.Drawing.CharacterRange" /> 对象的 <see cref="P:System.Drawing.CharacterRange.First" /> 和 <see cref="P:System.Drawing.CharacterRange.Length" /> 值是否不等的值。</summary>
        <returns>如果两个 <see cref="T:System.Drawing.CharacterRange" /> 对象的 <see cref="P:System.Drawing.CharacterRange.First" /> 或 <see cref="P:System.Drawing.CharacterRange.Length" /> 值中的任一个不同，为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.CharacterRange.op_Inequality%2A>方法返回的相反<xref:System.Drawing.CharacterRange.op_Equality%2A>方法。  
  
 此运算符的等效方法是 <xref:System.Drawing.CharacterRange.Equals%28System.Object%29?displayProperty=nameWithType>  
  
## Examples  
 下面的示例演示如何使用 <xref:System.Drawing.CharacterRange.op_Inequality%2A> 方法。 若要运行此示例，请将其粘贴到 Windows 窗体中。 处理窗体的<xref:System.Windows.Forms.Control.Paint>事件并调用`CharacterRangeInequality`方法从<xref:System.Windows.Forms.Control.Paint>事件处理方法，并传递`e`作为<xref:System.Windows.Forms.PaintEventArgs>。  
  
 [!code-csharp[System.Drawing.MiscWhidbeySnippets#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/CS/Form1.cs#3)]
 [!code-vb[System.Drawing.MiscWhidbeySnippets#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Drawing.CharacterRange.Equals(System.Object)" />
        <altmember cref="M:System.Drawing.CharacterRange.op_Equality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)" />
      </Docs>
    </Member>
  </Members>
</Type>