<Type Name="XmlSchemaInference" FullName="System.Xml.Schema.XmlSchemaInference">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="94996ed28953aab1f5992bf59b810fe3573b1285" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37733598" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XmlSchemaInference" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlSchemaInference extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaInference" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlSchemaInference" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaInference sealed" />
  <TypeSignature Language="F#" Value="type XmlSchemaInference = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c6504-101">从 XML 文档中推理出 XML 架构定义语言 (XSD) 架构。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c6504-101">Infers an XML Schema Definition Language (XSD) schema from an XML document.</span>
      </span>
      <span data-ttu-id="c6504-102">不能继承 <see cref="T:System.Xml.Schema.XmlSchemaInference" /> 类。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c6504-102">The <see cref="T:System.Xml.Schema.XmlSchemaInference" /> class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  -   <span data-ttu-id="c6504-103">不要使用来自未知或不受信任的源或位置的架构。</span><span class="sxs-lookup"><span data-stu-id="c6504-103">Do not use schemas from unknown or untrusted sources or locations.</span></span> <span data-ttu-id="c6504-104">执行此操作将影响你的代码的安全性。</span><span class="sxs-lookup"><span data-stu-id="c6504-104">Doing so will compromise the security of your code.</span></span>  
> -   <span data-ttu-id="c6504-105">XML 架构 （包括内联架构） 是本质上是容易受到拒绝服务攻击;不接受不受信任的方案中。</span><span class="sxs-lookup"><span data-stu-id="c6504-105">XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.</span></span>  
> -   <span data-ttu-id="c6504-106">架构验证错误消息和异常可能会公开的内容模型的架构文件的 URI 路径的敏感信息。</span><span class="sxs-lookup"><span data-stu-id="c6504-106">Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file.</span></span> <span data-ttu-id="c6504-107">请注意不公开此信息向不受信任调用方。</span><span class="sxs-lookup"><span data-stu-id="c6504-107">Be careful not to expose this information to untrusted callers.</span></span>  
  
 <span data-ttu-id="c6504-108"><xref:System.Xml.Schema.XmlSchemaInference>类中<xref:System.Xml.Schema?displayProperty=nameWithType>命名空间，可推断 XML 架构定义语言 (XSD) 架构的 XML 文档结构。</span><span class="sxs-lookup"><span data-stu-id="c6504-108">The <xref:System.Xml.Schema.XmlSchemaInference> class in the <xref:System.Xml.Schema?displayProperty=nameWithType> namespace allows you to infer an XML Schema Definition Language (XSD) schema from the structure of an XML document.</span></span> <span data-ttu-id="c6504-109"><xref:System.Xml.Schema.XmlSchemaInference> 类输出的 XML 架构可以验证 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="c6504-109">The <xref:System.Xml.Schema.XmlSchemaInference> class outputs an XML schema that can validate the XML document.</span></span>  
  
 <span data-ttu-id="c6504-110"><xref:System.Xml.Schema.XmlSchemaInference>类支持 W3C XML 架构和 XML 架构标准。</span><span class="sxs-lookup"><span data-stu-id="c6504-110">The <xref:System.Xml.Schema.XmlSchemaInference> class supports the W3C XML and XML Schemas standards.</span></span> <span data-ttu-id="c6504-111">它可以用于推断新的架构或以优化现有的架构。</span><span class="sxs-lookup"><span data-stu-id="c6504-111">It can be used to infer a new schema or to refine an existing schema.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6504-112">此示例使用 XML 文件作为输入，并生成可验证的示例 XML 的架构。</span><span class="sxs-lookup"><span data-stu-id="c6504-112">This example takes an XML file as input, and generates a schema that can validate the example XML.</span></span>  
  
 [!code-cpp[XmlSchemaInferenceExamples#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#1)]
 [!code-csharp[XmlSchemaInferenceExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#1)]
 [!code-vb[XmlSchemaInferenceExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#1)]  
  
 <span data-ttu-id="c6504-113">下面是输入的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="c6504-113">The following is the input XML file.</span></span>  
  
 [!code-xml[XmlSchemaInferenceExamples#5](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xml#5)]  
  
 <span data-ttu-id="c6504-114">以下是从 XML 文档推理出的架构。</span><span class="sxs-lookup"><span data-stu-id="c6504-114">The following is the schema inferred from the XML document.</span></span>  
  
 [!code-xml[XmlSchemaInferenceExamples#6](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xsd#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaInference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaInference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaInference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6504-115">初始化 <see cref="T:System.Xml.Schema.XmlSchemaInference" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6504-115">Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaInference" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InferSchema">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c6504-116">从指定的 XML 文档推理出 XML 架构定义语言 (XSD) 架构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6504-116">Infers an XML Schema Definition Language (XSD) schema from the XML document specified.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InferSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaSet InferSchema(class System.Xml.XmlReader instanceDocument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function InferSchema (instanceDocument As XmlReader) As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchemaSet ^ InferSchema(System::Xml::XmlReader ^ instanceDocument);" />
      <MemberSignature Language="F#" Value="member this.InferSchema : System.Xml.XmlReader -&gt; System.Xml.Schema.XmlSchemaSet" Usage="xmlSchemaInference.InferSchema instanceDocument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceDocument" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="instanceDocument">
          <span data-ttu-id="c6504-117">
            <see cref="T:System.Xml.XmlReader" /> 对象，该对象包含要从其推理出架构的 XML 文档。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6504-117">An <see cref="T:System.Xml.XmlReader" /> object containing the XML document to infer a schema from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6504-118">从指定的 <see cref="T:System.Xml.XmlReader" /> 对象包含的 XML 文档推理出 XML 架构定义语言 (XSD) 架构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6504-118">Infers an XML Schema Definition Language (XSD) schema from the XML document contained in the <see cref="T:System.Xml.XmlReader" /> object specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6504-119">
            <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 对象，该对象包含推理出的架构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6504-119">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object containing the inferred schemas.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6504-120"><xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>方法来推断一个或多个 W3C XML 架构定义语言 (XSD) 架构，从 XML 实例文档中包含<xref:System.Xml.XmlReader>指定的对象。</span><span class="sxs-lookup"><span data-stu-id="c6504-120">The <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> method infers one or more W3C XML Schema Definition Language (XSD) schemas from the XML instance document contained in the <xref:System.Xml.XmlReader> object specified.</span></span> <span data-ttu-id="c6504-121">如果 XML 文档包含的元素和属性从多个命名空间，则生成多个架构： 一个用于在文档中使用每个命名空间。</span><span class="sxs-lookup"><span data-stu-id="c6504-121">If the XML document contains elements and attributes from multiple namespaces, then multiple schemas are generated: one for each namespace used in the document.</span></span> <span data-ttu-id="c6504-122">主要的架构是可以验证整个 XML 文档的架构和目标命名空间是 XML 文档的文档元素的命名空间相同。</span><span class="sxs-lookup"><span data-stu-id="c6504-122">The primary schema is the schema that can validate the entire XML document, and its target namespace is the same as the namespace of the document element of the XML document.</span></span>  
  
 <span data-ttu-id="c6504-123">以下是使用时要考虑的重要说明<xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c6504-123">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> method.</span></span>  
  
-   <span data-ttu-id="c6504-124"><xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>方法将忽略任何`xsi:type`， `xsi:schemaLocation`，或`xsi:noNamespaceSchemaLocation`XML 文档中的属性。</span><span class="sxs-lookup"><span data-stu-id="c6504-124">The <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> method ignores any `xsi:type`, `xsi:schemaLocation`, or `xsi:noNamespaceSchemaLocation` attributes in the XML document.</span></span>  
  
-   <span data-ttu-id="c6504-125">如果<xref:System.Xml.XmlReader>类型化对象，它包含类型信息将被忽略。</span><span class="sxs-lookup"><span data-stu-id="c6504-125">If the <xref:System.Xml.XmlReader> object is typed, the type information it contains is ignored.</span></span>  
  
-   <span data-ttu-id="c6504-126">如果<xref:System.Xml.XmlReader>对象定位在元素上不是 XML 文档的根元素，仅为该元素推断的架构。</span><span class="sxs-lookup"><span data-stu-id="c6504-126">If the <xref:System.Xml.XmlReader> object is positioned on an element that is not the root element of the XML document, a schema is inferred for only that element.</span></span> <span data-ttu-id="c6504-127">如果<xref:System.Xml.XmlReader>对象未定位在元素上，<xref:System.Xml.XmlReader.Read%2A>上调用方法<xref:System.Xml.XmlReader>直到遇到一个元素的参数 (例如，当<xref:System.Xml.XmlReader.NodeType%2A>是<xref:System.Xml.XmlNodeType.Element>)。</span><span class="sxs-lookup"><span data-stu-id="c6504-127">If the <xref:System.Xml.XmlReader> object is not positioned on an element, the <xref:System.Xml.XmlReader.Read%2A> method is called on the <xref:System.Xml.XmlReader> parameter until an element is encountered (for example, when <xref:System.Xml.XmlReader.NodeType%2A> is <xref:System.Xml.XmlNodeType.Element>).</span></span> <span data-ttu-id="c6504-128">在此情况中，推断过程开始从该元素。</span><span class="sxs-lookup"><span data-stu-id="c6504-128">At this point, the inference process starts from that element.</span></span> <span data-ttu-id="c6504-129">如果没有元素遇到文档中，结束前一直<xref:System.ArgumentException>引发。</span><span class="sxs-lookup"><span data-stu-id="c6504-129">If no element is encountered until the end of the document, an <xref:System.ArgumentException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6504-130">此示例使用 XML 文件作为输入，并生成可验证的示例 XML 的架构。</span><span class="sxs-lookup"><span data-stu-id="c6504-130">This example takes an XML file as input, and generates a schema that can validate the example XML.</span></span>  
  
 [!code-cpp[XmlSchemaInferenceExamples#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#1)]
 [!code-csharp[XmlSchemaInferenceExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#1)]
 [!code-vb[XmlSchemaInferenceExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#1)]  
  
 <span data-ttu-id="c6504-131">下面是输入的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="c6504-131">The following is the input XML file.</span></span>  
  
 [!code-xml[XmlSchemaInferenceExamples#5](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xml#5)]  
  
 <span data-ttu-id="c6504-132">以下是从 XML 文档推理出的架构。</span><span class="sxs-lookup"><span data-stu-id="c6504-132">The following is the schema inferred from the XML document.</span></span>  
  
 [!code-xml[XmlSchemaInferenceExamples#6](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xsd#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="c6504-133">XML 文档不是格式良好的文档。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6504-133">The XML document is not well-formed.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException">
          <span data-ttu-id="c6504-134">
            <see cref="T:System.Xml.XmlReader" /> 对象不位于根节点或元素上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6504-134">The <see cref="T:System.Xml.XmlReader" /> object is not positioned on the root node or on an element.</span>
          </span>
          <span data-ttu-id="c6504-135">架构推理过程中出现错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6504-135">An error occurs during the schema inference process.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InferSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument, System.Xml.Schema.XmlSchemaSet schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaSet InferSchema(class System.Xml.XmlReader instanceDocument, class System.Xml.Schema.XmlSchemaSet schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function InferSchema (instanceDocument As XmlReader, schemas As XmlSchemaSet) As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchemaSet ^ InferSchema(System::Xml::XmlReader ^ instanceDocument, System::Xml::Schema::XmlSchemaSet ^ schemas);" />
      <MemberSignature Language="F#" Value="member this.InferSchema : System.Xml.XmlReader * System.Xml.Schema.XmlSchemaSet -&gt; System.Xml.Schema.XmlSchemaSet" Usage="xmlSchemaInference.InferSchema (instanceDocument, schemas)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceDocument" Type="System.Xml.XmlReader" />
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="instanceDocument">
          <span data-ttu-id="c6504-136">
            <see cref="T:System.Xml.XmlReader" /> 对象，该对象包含要从其推理出架构的 XML 文档。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6504-136">An <see cref="T:System.Xml.XmlReader" /> object containing the XML document to infer a schema from.</span>
          </span>
        </param>
        <param name="schemas">
          <span data-ttu-id="c6504-137">
            <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 对象，包含用于精炼推理出的架构的现有架构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6504-137">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object containing an existing schema used to refine the inferred schema.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6504-138">从指定的 <see cref="T:System.Xml.XmlReader" /> 对象包含的 XML 文档推理出 XML 架构定义语言 (XSD) 架构，并通过用相同目标命名空间指定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 对象中的现有架构精炼已推理出的架构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6504-138">Infers an XML Schema Definition Language (XSD) schema from the XML document contained in the <see cref="T:System.Xml.XmlReader" /> object specified, and refines the inferred schema using an existing schema in the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object specified with the same target namespace.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6504-139">
            <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 对象，该对象包含推理出的架构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6504-139">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object containing the inferred schemas.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6504-140"><xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>方法来推断一个或多个 W3C XML 架构定义语言 (XSD) 架构，从 XML 实例文档中包含<xref:System.Xml.XmlReader>指定的对象。</span><span class="sxs-lookup"><span data-stu-id="c6504-140">The <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> method infers one or more W3C XML Schema Definition Language (XSD) schemas from the XML instance document contained in the <xref:System.Xml.XmlReader> object specified.</span></span> <span data-ttu-id="c6504-141">如果 XML 文档包含来自多个命名空间元素和属性，则会生成多个架构： 一个用于在文档中使用每个命名空间。</span><span class="sxs-lookup"><span data-stu-id="c6504-141">If the XML document contains elements and attributes from multiple namespaces, multiple schemas are generated: one for each namespace used in the document.</span></span> <span data-ttu-id="c6504-142">主要的架构是可以验证整个 XML 文档的架构和目标命名空间是 XML 文档的文档元素的命名空间相同。</span><span class="sxs-lookup"><span data-stu-id="c6504-142">The primary schema is the schema that can validate the entire XML document, and its target namespace is the same as the namespace of the document element of the XML document.</span></span>  
  
 <span data-ttu-id="c6504-143">以下是使用时要考虑的重要说明<xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c6504-143">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> method.</span></span>  
  
-   <span data-ttu-id="c6504-144"><xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>方法将忽略任何`xsi:type`， `xsi:schemaLocation`，或`xsi:noNamespaceSchemaLocation`XML 文档中的属性。</span><span class="sxs-lookup"><span data-stu-id="c6504-144">The <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> method ignores any `xsi:type`, `xsi:schemaLocation`, or `xsi:noNamespaceSchemaLocation` attributes in the XML document.</span></span>  
  
-   <span data-ttu-id="c6504-145">如果<xref:System.Xml.XmlReader>类型化对象，它包含类型信息将被忽略。</span><span class="sxs-lookup"><span data-stu-id="c6504-145">If the <xref:System.Xml.XmlReader> object is typed, the type information it contains is ignored.</span></span>  
  
-   <span data-ttu-id="c6504-146">如果<xref:System.Xml.XmlReader>对象定位在元素上不是 XML 文档的根元素，仅为该元素推断的架构。</span><span class="sxs-lookup"><span data-stu-id="c6504-146">If the <xref:System.Xml.XmlReader> object is positioned on an element that is not the root element of the XML document, a schema is inferred for only that element.</span></span> <span data-ttu-id="c6504-147">如果<xref:System.Xml.XmlReader>对象未定位在元素上，<xref:System.Xml.XmlReader.Read%2A>上调用方法<xref:System.Xml.XmlReader>直到遇到一个元素的参数 (例如，当<xref:System.Xml.XmlReader.NodeType%2A>是<xref:System.Xml.XmlNodeType.Element>)。</span><span class="sxs-lookup"><span data-stu-id="c6504-147">If the <xref:System.Xml.XmlReader> object is not positioned on an element, the <xref:System.Xml.XmlReader.Read%2A> method is called on the <xref:System.Xml.XmlReader> parameter until an element is encountered (for example, when <xref:System.Xml.XmlReader.NodeType%2A> is <xref:System.Xml.XmlNodeType.Element>).</span></span> <span data-ttu-id="c6504-148">在此情况中，推断过程开始从该元素。</span><span class="sxs-lookup"><span data-stu-id="c6504-148">At this point, the inference process starts from that element.</span></span> <span data-ttu-id="c6504-149">如果没有元素遇到文档中，结束前一直<xref:System.ArgumentException>引发。</span><span class="sxs-lookup"><span data-stu-id="c6504-149">If no element is encountered until the end of the document, an <xref:System.ArgumentException> is thrown.</span></span>  
  
-   <span data-ttu-id="c6504-150">如果<xref:System.Xml.Schema.XmlSchemaSet>对象作为参数，并对其元素传递<xref:System.Xml.XmlReader>对象所处定义中的架构之一<xref:System.Xml.Schema.XmlSchemaSet>，推断出的架构用于优化中的现有架构<xref:System.Xml.Schema.XmlSchemaSet>参数具有相同目标命名空间;否则，为命名空间推断新架构。</span><span class="sxs-lookup"><span data-stu-id="c6504-150">If an <xref:System.Xml.Schema.XmlSchemaSet> object is passed as a parameter and the element upon which the <xref:System.Xml.XmlReader> object is positioned is defined in one of the schemas in the <xref:System.Xml.Schema.XmlSchemaSet>, the inferred schema is used to refine an existing schema in the <xref:System.Xml.Schema.XmlSchemaSet> parameter with the same target namespace; otherwise, a new schema is inferred for the namespace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6504-151">下面的代码示例使用 XML 文档作为输入 1 并生成可验证 XML 文档 1 的架构。</span><span class="sxs-lookup"><span data-stu-id="c6504-151">The following example code takes XML document 1 as an input and generates a schema that can validate XML document 1.</span></span> <span data-ttu-id="c6504-152">示例代码然后将 XML 文档 2 和重新定义了从基于 XML 文档 2 中找到的更改的 XML 文档 1，生成的架构。</span><span class="sxs-lookup"><span data-stu-id="c6504-152">The example code then takes XML document 2 and refines the schema generated from XML document 1, based on the changes found in XML document 2.</span></span>  
  
 <span data-ttu-id="c6504-153">以下是 XML 文档 1。</span><span class="sxs-lookup"><span data-stu-id="c6504-153">The following is XML document 1.</span></span>  
  
 [!code-xml[XmlSchemaInferenceExamples#13](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/item1.xml#13)]  
  
 <span data-ttu-id="c6504-154">下面是 2 的 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="c6504-154">The following is XML document 2.</span></span>  
  
 [!code-xml[XmlSchemaInferenceExamples#14](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/item2.xml#14)]  
  
 <span data-ttu-id="c6504-155">下面的代码示例将来自中包含的第一个 XML 文档的架构推断`reader`，然后对推断出的架构中包含的第二个 XML 文档中找到的更改进行优化`reader1`。</span><span class="sxs-lookup"><span data-stu-id="c6504-155">The following example code infers a schema from the first XML document contained in `reader`, and then refines the inferred schema with the changes found in the second XML document contained in `reader1`.</span></span> <span data-ttu-id="c6504-156">该示例代码使用第一个重载<xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>方法来推断架构，第二个重载<xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>方法来优化中的现有架构<xref:System.Xml.Schema.XmlSchemaSet>对象。</span><span class="sxs-lookup"><span data-stu-id="c6504-156">The example code uses the first overloaded <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> method to infer the schema, and the second overloaded <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> method to refine the existing schema in the <xref:System.Xml.Schema.XmlSchemaSet> object.</span></span>  
  
 [!code-cpp[XmlSchemaInferenceExamples#4](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#4)]
 [!code-csharp[XmlSchemaInferenceExamples#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#4)]
 [!code-vb[XmlSchemaInferenceExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#4)]  
  
 <span data-ttu-id="c6504-157">下面的架构是从 1 的 XML 文档推断的架构。</span><span class="sxs-lookup"><span data-stu-id="c6504-157">The following schema is the schema inferred from XML document 1.</span></span>  
  
 [!code-xml[XmlSchemaInferenceExamples#15](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/InferSchema1.xml#15)]  
  
 <span data-ttu-id="c6504-158">下面的架构是架构的基于 XML 文档 2 上面的精炼的版本。</span><span class="sxs-lookup"><span data-stu-id="c6504-158">The following schema is the refined version of the schema above, based on XML document 2.</span></span>  
  
 [!code-xml[XmlSchemaInferenceExamples#16](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/InferSchema2.xml#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="c6504-159">XML 文档不是格式良好的文档。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6504-159">The XML document is not well-formed.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException">
          <span data-ttu-id="c6504-160">
            <see cref="T:System.Xml.XmlReader" /> 对象不位于根节点或元素上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6504-160">The <see cref="T:System.Xml.XmlReader" /> object is not positioned on the root node or on an element.</span>
          </span>
          <span data-ttu-id="c6504-161">架构推理过程中出现错误。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6504-161">An error occurs during the schema inference process.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Occurrence">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaInference.InferenceOption Occurrence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaInference/InferenceOption Occurrence" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaInference.Occurrence" />
      <MemberSignature Language="VB.NET" Value="Public Property Occurrence As XmlSchemaInference.InferenceOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaInference::InferenceOption Occurrence { System::Xml::Schema::XmlSchemaInference::InferenceOption get(); void set(System::Xml::Schema::XmlSchemaInference::InferenceOption value); };" />
      <MemberSignature Language="F#" Value="member this.Occurrence : System.Xml.Schema.XmlSchemaInference.InferenceOption with get, set" Usage="System.Xml.Schema.XmlSchemaInference.Occurrence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaInference+InferenceOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6504-162">获取或设置 <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> 值，该值影响从 XML 文档推理出的架构匹配项声明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6504-162">Gets or sets the <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> value that affects schema occurrence declarations inferred from the XML document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6504-163">一个 <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6504-163">An <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6504-164">如果<xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A>属性设置为<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>，在 XML 文档中遇到的第一个时间元素，架构声明将被推断为`minOccurs="1"`。</span><span class="sxs-lookup"><span data-stu-id="c6504-164">If the <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> property is set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>, the first time elements are encountered in the XML document, the schema declaration is inferred as `minOccurs="1"`.</span></span> <span data-ttu-id="c6504-165">当遇到特性时，架构声明将被推断为`use="required"`。</span><span class="sxs-lookup"><span data-stu-id="c6504-165">When attributes are encountered, the schema declaration is inferred as `use="required"`.</span></span>  
  
 <span data-ttu-id="c6504-166">如果<xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A>属性设置为<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>，元素架构声明均推断为`minOccurs="0"`，和属性架构声明均推断为`use="optional"`。</span><span class="sxs-lookup"><span data-stu-id="c6504-166">If the <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> property is set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, element schema declarations are inferred as `minOccurs="0"`, and attribute schema declarations are inferred as `use="optional"`.</span></span>  
  
 <span data-ttu-id="c6504-167">默认值<xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A>属性是<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>。</span><span class="sxs-lookup"><span data-stu-id="c6504-167">The default value of the <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> property is <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6504-168">此示例演示了如何匹配项受<xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="c6504-168">This example illustrates how occurrence is affected by the <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> property.</span></span> <span data-ttu-id="c6504-169">代码示例将匹配项从 XML 文件推断两个不同的方式： 放宽和受限制。</span><span class="sxs-lookup"><span data-stu-id="c6504-169">The example code infers occurrence from an XML file in two different ways: relaxed and restricted.</span></span> <span data-ttu-id="c6504-170">下面是示例 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="c6504-170">The following is the example XML file.</span></span>  
  
 [!code-xml[XmlSchemaInferenceExamples#7](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/Occurrence1.xml#7)]  
  
 <span data-ttu-id="c6504-171">下面的代码示例指示<xref:System.Xml.Schema.XmlSchemaInference>类宽松方式推断元素和属性的匹配项。</span><span class="sxs-lookup"><span data-stu-id="c6504-171">The following example code instructs the <xref:System.Xml.Schema.XmlSchemaInference> class to infer occurrence of elements and attributes in a relaxed way.</span></span>  
  
 [!code-cpp[XmlSchemaInferenceExamples#2](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#2)]
 [!code-csharp[XmlSchemaInferenceExamples#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#2)]
 [!code-vb[XmlSchemaInferenceExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#2)]  
  
 <span data-ttu-id="c6504-172">因为<xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A>属性设置为<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>，生成下面的架构。</span><span class="sxs-lookup"><span data-stu-id="c6504-172">Because the <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> property was set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, the following schema was generated.</span></span>  
  
 [!code-xml[XmlSchemaInferenceExamples#8](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/Occurrence2.xml#8)]  
  
 <span data-ttu-id="c6504-173">在示例代码中，如果<xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A>属性未设置为<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>，则<xref:System.Xml.Schema.XmlSchemaInference>类具有默认设置为<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>并生成下面的架构。</span><span class="sxs-lookup"><span data-stu-id="c6504-173">In the example code above, if the <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> property was not set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, the <xref:System.Xml.Schema.XmlSchemaInference> class would have defaulted to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted> and generated the following schema.</span></span>  
  
 [!code-xml[XmlSchemaInferenceExamples#9](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/Occurrence3.xml#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeInference">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaInference.InferenceOption TypeInference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaInference/InferenceOption TypeInference" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaInference.TypeInference" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeInference As XmlSchemaInference.InferenceOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaInference::InferenceOption TypeInference { System::Xml::Schema::XmlSchemaInference::InferenceOption get(); void set(System::Xml::Schema::XmlSchemaInference::InferenceOption value); };" />
      <MemberSignature Language="F#" Value="member this.TypeInference : System.Xml.Schema.XmlSchemaInference.InferenceOption with get, set" Usage="System.Xml.Schema.XmlSchemaInference.TypeInference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaInference+InferenceOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6504-174">获取或设置影响从 XML 文档推理出的类型的 <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6504-174">Gets or sets the <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> value that affects types inferred from the XML document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6504-175">一个 <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6504-175">An <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6504-176">如果<xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A>属性设置为<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>，具有简单内容的 XML 文档中元素和属性的推断的类型始终是`xs:string`。</span><span class="sxs-lookup"><span data-stu-id="c6504-176">If the <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> property is set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, the inferred type of elements and attributes in the XML document with simple content is always `xs:string`.</span></span> <span data-ttu-id="c6504-177">如果<xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A>属性设置为<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>，推断更具体的类型，如`xs:date`， `xs:decimal`， `xs:unsignedByte`，依次类推。</span><span class="sxs-lookup"><span data-stu-id="c6504-177">If the <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> property is set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>, more specific types are inferred, such as `xs:date`, `xs:decimal`, `xs:unsignedByte`, and so on.</span></span>  
  
 <span data-ttu-id="c6504-178">默认值<xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A>属性是<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>。</span><span class="sxs-lookup"><span data-stu-id="c6504-178">The default value of the <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> property is <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6504-179">此示例演示了如何受类型推理<xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="c6504-179">This example illustrates how type inference is affected by the <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> property.</span></span> <span data-ttu-id="c6504-180">示例代码将从 XML 文件的类型推断两个不同的方式： 放宽和受限制。</span><span class="sxs-lookup"><span data-stu-id="c6504-180">The example code infers types from an XML file in two different ways: relaxed and restricted.</span></span> <span data-ttu-id="c6504-181">下面是示例 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="c6504-181">The following is the example XML file.</span></span>  
  
 [!code-xml[XmlSchemaInferenceExamples#10](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/TypeInference1.xml#10)]  
  
 <span data-ttu-id="c6504-182">下面的代码示例指示<xref:System.Xml.Schema.XmlSchemaInference>类推断`xs:string`的元素和特性具有简单内容。</span><span class="sxs-lookup"><span data-stu-id="c6504-182">The following example code instructs the <xref:System.Xml.Schema.XmlSchemaInference> class to infer `xs:string` for elements and attributes with simple content.</span></span>  
  
 [!code-cpp[XmlSchemaInferenceExamples#3](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#3)]
 [!code-csharp[XmlSchemaInferenceExamples#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#3)]
 [!code-vb[XmlSchemaInferenceExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#3)]  
  
 <span data-ttu-id="c6504-183">因为<xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A>属性设置为<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>，生成下面的架构。</span><span class="sxs-lookup"><span data-stu-id="c6504-183">Because the <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> property was set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, the following schema was generated.</span></span>  
  
 [!code-xml[XmlSchemaInferenceExamples#11](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/TypeInference2.xml#11)]  
  
 <span data-ttu-id="c6504-184">在示例代码中，如果<xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A>属性未设置为<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>，则<xref:System.Xml.Schema.XmlSchemaInference>类具有默认设置为<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>并生成下面的架构。</span><span class="sxs-lookup"><span data-stu-id="c6504-184">In the example code above, if the <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> property was not set to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>, the <xref:System.Xml.Schema.XmlSchemaInference> class would have defaulted to <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted> and generated the following schema.</span></span>  
  
 [!code-xml[XmlSchemaInferenceExamples#12](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/TypeInference3.xml#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>