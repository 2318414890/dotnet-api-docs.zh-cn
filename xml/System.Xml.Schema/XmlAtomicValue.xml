<Type Name="XmlAtomicValue" FullName="System.Xml.Schema.XmlAtomicValue">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7e17f1969843ccd7db7b2e7ebcad2d0f58133fce" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39827377" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XmlAtomicValue : System.Xml.XPath.XPathItem, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlAtomicValue extends System.Xml.XPath.XPathItem implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlAtomicValue" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlAtomicValue&#xA;Inherits XPathItem&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAtomicValue sealed : System::Xml::XPath::XPathItem, ICloneable" />
  <TypeSignature Language="F#" Value="type XmlAtomicValue = class&#xA;    inherit XPathItem&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XPath.XPathItem</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="8edac-101">表示经验证的 XML 元素或特性的类型化值。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8edac-101">Represents the typed value of a validated XML element or attribute.</span>
      </span>
      <span data-ttu-id="8edac-102">不能继承 <see cref="T:System.Xml.Schema.XmlAtomicValue" /> 类。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8edac-102">The <see cref="T:System.Xml.Schema.XmlAtomicValue" /> class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlAtomicValue Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlAtomicValue Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlAtomicValue.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As XmlAtomicValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlAtomicValue ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Xml.Schema.XmlAtomicValue" Usage="xmlAtomicValue.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlAtomicValue</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8edac-103">返回此 <see cref="T:System.Xml.Schema.XmlAtomicValue" /> 对象的一个副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-103">Returns a copy of this <see cref="T:System.Xml.Schema.XmlAtomicValue" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8edac-104">此 <see cref="T:System.Xml.Schema.XmlAtomicValue" /> 对象的一个 <see cref="T:System.Xml.Schema.XmlAtomicValue" /> 对象副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-104">An <see cref="T:System.Xml.Schema.XmlAtomicValue" /> object copy of this <see cref="T:System.Xml.Schema.XmlAtomicValue" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNode">
      <MemberSignature Language="C#" Value="public override bool IsNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNode" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlAtomicValue.IsNode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsNode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsNode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNode : bool" Usage="System.Xml.Schema.XmlAtomicValue.IsNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8edac-105">获取一个值，指示经验证的 XML 元素或特性是一个 XPath 节点还是一个原子值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-105">Gets a value indicating whether the validated XML element or attribute is an XPath node or an atomic value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8edac-106">如果经验证的 XML 元素或特性是一个 XPath 节点，为 <see langword="true" />；如果经验证的 XML 元素或特性是一个原子值，为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-106">
              <see langword="true" /> if the validated XML element or attribute is an XPath node; <see langword="false" /> if the validated XML element or attribute is an atomic value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edac-107"><xref:System.Xml.Schema.XmlAtomicValue.IsNode%2A> 属性总是返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="8edac-107">The <xref:System.Xml.Schema.XmlAtomicValue.IsNode%2A> property always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlAtomicValue.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8edac-108">有关此成员的说明，请参阅 <see cref="M:System.Xml.Schema.XmlAtomicValue.Clone" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-108">For a description of this member, see <see cref="M:System.Xml.Schema.XmlAtomicValue.Clone" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8edac-109">返回此 <see cref="T:System.Xml.Schema.XmlAtomicValue" /> 对象的一个副本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-109">Returns a copy of this <see cref="T:System.Xml.Schema.XmlAtomicValue" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edac-110">此成员是显式的接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="8edac-110">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8edac-111">它只能在 <xref:System.Xml.Schema.XmlAtomicValue> 实例强制转换为 <xref:System.ICloneable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="8edac-111">It can be used only when the <xref:System.Xml.Schema.XmlAtomicValue> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlAtomicValue.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xmlAtomicValue.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8edac-112">获取经验证的 XML 元素或特性的 <see langword="string" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-112">Gets the <see langword="string" /> value of the validated XML element or attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8edac-113">经验证的 XML 元素或特性的 <see langword="string" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-113">The <see langword="string" /> value of the validated XML element or attribute.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypedValue">
      <MemberSignature Language="C#" Value="public override object TypedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TypedValue" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlAtomicValue.TypedValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TypedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ TypedValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypedValue : obj" Usage="System.Xml.Schema.XmlAtomicValue.TypedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8edac-114">根据架构类型，以最适合的 Microsoft .NET Framework 类型的已装箱对象的形式获取当前经验证的 XML 元素或特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-114">Gets the current validated XML element or attribute as a boxed object of the most appropriate Microsoft .NET Framework type according to its schema type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8edac-115">作为最适合的 .NET Framework 类型的已装箱对象的当前经验证的 XML 元素或特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-115">The current validated XML element or attribute as a boxed object of the most appropriate .NET Framework type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edac-116">如果项的值不符合其指定架构类型，值<xref:System.Xml.Schema.XmlAtomicValue.TypedValue%2A>属性的值等效<xref:System.Xml.Schema.XmlAtomicValue.Value%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="8edac-116">If the value of the item is not valid according to its specified schema type, the value of the <xref:System.Xml.Schema.XmlAtomicValue.TypedValue%2A> property is equivalent to the value of the <xref:System.Xml.Schema.XmlAtomicValue.Value%2A> property.</span></span>  
  
 <span data-ttu-id="8edac-117">有关类型的详细信息，支持在<xref:System.Xml?displayProperty=nameWithType>命名空间，请参阅[System.Xml 类中的类型支持](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)。</span><span class="sxs-lookup"><span data-stu-id="8edac-117">For more information about type support in the <xref:System.Xml?displayProperty=nameWithType> namespace, see [Type Support in the System.Xml Classes](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlAtomicValue.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Xml.Schema.XmlAtomicValue.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8edac-118">获取经验证的 XML 元素或特性的 <see langword="string" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-118">Gets the <see langword="string" /> value of the validated XML element or attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8edac-119">经验证的 XML 元素或特性的 <see langword="string" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-119">The <see langword="string" /> value of the validated XML element or attribute.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueAs">
      <MemberSignature Language="C#" Value="public override object ValueAs (Type type, System.Xml.IXmlNamespaceResolver nsResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ValueAs(class System.Type type, class System.Xml.IXmlNamespaceResolver nsResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlAtomicValue.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ValueAs(Type ^ type, System::Xml::IXmlNamespaceResolver ^ nsResolver);" />
      <MemberSignature Language="F#" Value="override this.ValueAs : Type * System.Xml.IXmlNamespaceResolver -&gt; obj" Usage="xmlAtomicValue.ValueAs (type, nsResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="nsResolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="8edac-120">将经验证的 XML 元素或特性值返回时使用的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-120">The type to return the validated XML element or attribute's value as.</span>
          </span>
        </param>
        <param name="nsResolver">
          <span data-ttu-id="8edac-121">用于解析命名空间前缀的 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-121">The <see cref="T:System.Xml.IXmlNamespaceResolver" /> object used to resolve namespace prefixes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8edac-122">将经验证的 XML 元素或特性值按指定类型返回，并使用指定的 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 对象解析命名空间前缀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-122">Returns the validated XML element or attribute's value as the type specified using the <see cref="T:System.Xml.IXmlNamespaceResolver" /> object specified to resolve namespace prefixes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8edac-123">请求类型的经验证的 XML 元素或特性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-123">The value of the validated XML element or attribute as the type requested.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edac-124"><xref:System.Xml.Schema.XmlAtomicValue.ValueAs%2A>方法会尝试将经验证的 XML 元素或特性的值转换为指定的 Microsoft.NET Framework 类型。</span><span class="sxs-lookup"><span data-stu-id="8edac-124">The <xref:System.Xml.Schema.XmlAtomicValue.ValueAs%2A> method attempts to convert the value of the validated XML element or attribute to the Microsoft .NET Framework type specified.</span></span>  
  
 <span data-ttu-id="8edac-125"><xref:System.Xml.IXmlNamespaceResolver>对象用于解析与类型转换有关的命名空间前缀。</span><span class="sxs-lookup"><span data-stu-id="8edac-125">The <xref:System.Xml.IXmlNamespaceResolver> object is used to resolve namespace prefixes related to type conversions.</span></span> <span data-ttu-id="8edac-126">例如，当转换`xs:QName`到`xs:string`。</span><span class="sxs-lookup"><span data-stu-id="8edac-126">For example, when converting an `xs:QName` to an `xs:string`.</span></span>  
  
 <span data-ttu-id="8edac-127">有关类型的详细信息，支持在<xref:System.Xml?displayProperty=nameWithType>命名空间，请参阅[System.Xml 类中的类型支持](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)。</span><span class="sxs-lookup"><span data-stu-id="8edac-127">For more information about type support in the <xref:System.Xml?displayProperty=nameWithType> namespace, see [Type Support in the System.Xml Classes](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8edac-128">验证的 XML 元素或特性的值不是适用于目标类型的正确格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-128">The validated XML element or attribute's value is not in the correct format for the target type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="8edac-129">试图进行的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-129">The attempted cast is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="8edac-130">尝试进行的强制转换导致溢出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-130">The attempted cast resulted in an overflow.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.IXmlNamespaceResolver" />
      </Docs>
    </Member>
    <Member MemberName="ValueAsBoolean">
      <MemberSignature Language="C#" Value="public override bool ValueAsBoolean { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValueAsBoolean" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlAtomicValue.ValueAsBoolean" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValueAsBoolean As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ValueAsBoolean { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueAsBoolean : bool" Usage="System.Xml.Schema.XmlAtomicValue.ValueAsBoolean" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8edac-131">获取经验证的 XML 元素或特性的 <see cref="T:System.Boolean" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-131">Gets the validated XML element or attribute's value as a <see cref="T:System.Boolean" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8edac-132">经验证的 XML 元素或特性的 <see cref="T:System.Boolean" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-132">The validated XML element or attribute's value as a <see cref="T:System.Boolean" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edac-133"><xref:System.Xml.Schema.XmlAtomicValue.ValueAsBoolean%2A>属性尝试将经验证的 XML 元素或特性的值转换为 Microsoft.NET Framework<xref:System.Boolean>根据 XPath 2.0 规则用于将项的类型强制转换的类型。</span><span class="sxs-lookup"><span data-stu-id="8edac-133">The <xref:System.Xml.Schema.XmlAtomicValue.ValueAsBoolean%2A> property attempts to convert the value of the validated XML element or attribute to the Microsoft .NET Framework <xref:System.Boolean> type according to the XPath 2.0 rules for casting the item's type.</span></span>  
  
 <span data-ttu-id="8edac-134">有关类型的详细信息，支持在<xref:System.Xml?displayProperty=nameWithType>命名空间，请参阅[System.Xml 类中的类型支持](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)。</span><span class="sxs-lookup"><span data-stu-id="8edac-134">For more information about type support in the <xref:System.Xml?displayProperty=nameWithType> namespace, see [Type Support in the System.Xml Classes](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8edac-135">验证的 XML 元素或特性的值不是适用于 <see cref="T:System.Boolean" /> 类型的正确格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-135">The validated XML element or attribute's value is not in the correct format for the <see cref="T:System.Boolean" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="8edac-136">尝试到 <see cref="T:System.Boolean" /> 的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-136">The attempted cast to <see cref="T:System.Boolean" /> is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ValueAsDateTime">
      <MemberSignature Language="C#" Value="public override DateTime ValueAsDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValueAsDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlAtomicValue.ValueAsDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValueAsDateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime ValueAsDateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueAsDateTime : DateTime" Usage="System.Xml.Schema.XmlAtomicValue.ValueAsDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8edac-137">获取经验证的 XML 元素或特性的 <see cref="T:System.DateTime" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-137">Gets the validated XML element or attribute's value as a <see cref="T:System.DateTime" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8edac-138">经验证的 XML 元素或特性的 <see cref="T:System.DateTime" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-138">The validated XML element or attribute's value as a <see cref="T:System.DateTime" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edac-139"><xref:System.Xml.Schema.XmlAtomicValue.ValueAsDateTime%2A>属性尝试将经验证的 XML 元素或特性的值转换为 Microsoft.NET Framework<xref:System.DateTime>根据 XPath 2.0 规则用于将项的类型强制转换的类型。</span><span class="sxs-lookup"><span data-stu-id="8edac-139">The <xref:System.Xml.Schema.XmlAtomicValue.ValueAsDateTime%2A> property attempts to convert the value of the validated XML element or attribute to the Microsoft .NET Framework <xref:System.DateTime> type according to the XPath 2.0 rules for casting the item's type.</span></span>  
  
 <span data-ttu-id="8edac-140">有关类型的详细信息，支持在<xref:System.Xml?displayProperty=nameWithType>命名空间，请参阅[System.Xml 类中的类型支持](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)。</span><span class="sxs-lookup"><span data-stu-id="8edac-140">For more information about type support in the <xref:System.Xml?displayProperty=nameWithType> namespace, see [Type Support in the System.Xml Classes](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8edac-141">验证的 XML 元素或特性的值不是适用于 <see cref="T:System.DateTime" /> 类型的正确格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-141">The validated XML element or attribute's value is not in the correct format for the <see cref="T:System.DateTime" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="8edac-142">尝试到 <see cref="T:System.DateTime" /> 的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-142">The attempted cast to <see cref="T:System.DateTime" /> is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ValueAsDouble">
      <MemberSignature Language="C#" Value="public override double ValueAsDouble { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ValueAsDouble" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlAtomicValue.ValueAsDouble" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValueAsDouble As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property double ValueAsDouble { double get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueAsDouble : double" Usage="System.Xml.Schema.XmlAtomicValue.ValueAsDouble" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8edac-143">获取经验证的 XML 元素或特性的 <see cref="T:System.Double" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-143">Gets the validated XML element or attribute's value as a <see cref="T:System.Double" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8edac-144">经验证的 XML 元素或特性的 <see cref="T:System.Double" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-144">The validated XML element or attribute's value as a <see cref="T:System.Double" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edac-145"><xref:System.Xml.Schema.XmlAtomicValue.ValueAsDouble%2A>属性尝试将经验证的 XML 元素或特性的值转换为 Microsoft.NET Framework<xref:System.Double>根据 XPath 2.0 规则用于将项的类型强制转换的类型。</span><span class="sxs-lookup"><span data-stu-id="8edac-145">The <xref:System.Xml.Schema.XmlAtomicValue.ValueAsDouble%2A> property attempts to convert the value of the validated XML element or attribute to the Microsoft .NET Framework <xref:System.Double> type according to the XPath 2.0 rules for casting the item's type.</span></span>  
  
 <span data-ttu-id="8edac-146">有关类型的详细信息，支持在<xref:System.Xml?displayProperty=nameWithType>命名空间，请参阅[System.Xml 类中的类型支持](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)。</span><span class="sxs-lookup"><span data-stu-id="8edac-146">For more information about type support in the <xref:System.Xml?displayProperty=nameWithType> namespace, see [Type Support in the System.Xml Classes](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8edac-147">验证的 XML 元素或特性的值不是适用于 <see cref="T:System.Double" /> 类型的正确格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-147">The validated XML element or attribute's value is not in the correct format for the <see cref="T:System.Double" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="8edac-148">尝试到 <see cref="T:System.Double" /> 的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-148">The attempted cast to <see cref="T:System.Double" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="8edac-149">尝试进行的强制转换导致溢出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-149">The attempted cast resulted in an overflow.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ValueAsInt">
      <MemberSignature Language="C#" Value="public override int ValueAsInt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ValueAsInt" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlAtomicValue.ValueAsInt" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValueAsInt As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ValueAsInt { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueAsInt : int" Usage="System.Xml.Schema.XmlAtomicValue.ValueAsInt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8edac-150">获取经验证的 XML 元素或特性的 <see cref="T:System.Int32" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-150">Gets the validated XML element or attribute's value as an <see cref="T:System.Int32" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8edac-151">经验证的 XML 元素或特性的 <see cref="T:System.Int32" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-151">The validated XML element or attribute's value as an <see cref="T:System.Int32" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edac-152"><xref:System.Xml.Schema.XmlAtomicValue.ValueAsInt%2A>属性尝试将经验证的 XML 元素或特性的值转换为 Microsoft.NET Framework<xref:System.Int32>根据 XPath 2.0 规则用于将项的类型强制转换的类型。</span><span class="sxs-lookup"><span data-stu-id="8edac-152">The <xref:System.Xml.Schema.XmlAtomicValue.ValueAsInt%2A> property attempts to convert the value of the validated XML element or attribute to the Microsoft .NET Framework <xref:System.Int32> type according to the XPath 2.0 rules for casting the item's type.</span></span>  
  
 <span data-ttu-id="8edac-153">有关类型的详细信息，支持在<xref:System.Xml?displayProperty=nameWithType>命名空间，请参阅[System.Xml 类中的类型支持](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)。</span><span class="sxs-lookup"><span data-stu-id="8edac-153">For more information about type support in the <xref:System.Xml?displayProperty=nameWithType> namespace, see [Type Support in the System.Xml Classes](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8edac-154">验证的 XML 元素或特性的值不是适用于 <see cref="T:System.Int32" /> 类型的正确格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-154">The validated XML element or attribute's value is not in the correct format for the <see cref="T:System.Int32" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="8edac-155">尝试到 <see cref="T:System.Int32" /> 的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-155">The attempted cast to <see cref="T:System.Int32" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="8edac-156">尝试进行的强制转换导致溢出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-156">The attempted cast resulted in an overflow.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ValueAsLong">
      <MemberSignature Language="C#" Value="public override long ValueAsLong { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ValueAsLong" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlAtomicValue.ValueAsLong" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValueAsLong As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long ValueAsLong { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueAsLong : int64" Usage="System.Xml.Schema.XmlAtomicValue.ValueAsLong" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8edac-157">获取经验证的 XML 元素或特性的 <see cref="T:System.Int64" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-157">Gets the validated XML element or attribute's value as an <see cref="T:System.Int64" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8edac-158">经验证的 XML 元素或特性的 <see cref="T:System.Int64" /> 形式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-158">The validated XML element or attribute's value as an <see cref="T:System.Int64" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edac-159"><xref:System.Xml.Schema.XmlAtomicValue.ValueAsLong%2A>属性尝试将经验证的 XML 元素或特性的值转换为 Microsoft.NET Framework<xref:System.Int64>根据 XPath 2.0 规则用于将项的类型强制转换的类型。</span><span class="sxs-lookup"><span data-stu-id="8edac-159">The <xref:System.Xml.Schema.XmlAtomicValue.ValueAsLong%2A> property attempts to convert the value of the validated XML element or attribute to the Microsoft .NET Framework <xref:System.Int64> type according to the XPath 2.0 rules for casting the item's type.</span></span>  
  
 <span data-ttu-id="8edac-160">有关类型的详细信息，支持在<xref:System.Xml?displayProperty=nameWithType>命名空间，请参阅[System.Xml 类中的类型支持](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)。</span><span class="sxs-lookup"><span data-stu-id="8edac-160">For more information about type support in the <xref:System.Xml?displayProperty=nameWithType> namespace, see [Type Support in the System.Xml Classes](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="8edac-161">验证的 XML 元素或特性的值不是适用于 <see cref="T:System.Int64" /> 类型的正确格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-161">The validated XML element or attribute's value is not in the correct format for the <see cref="T:System.Int64" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="8edac-162">尝试到 <see cref="T:System.Int64" /> 的强制转换无效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-162">The attempted cast to <see cref="T:System.Int64" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="8edac-163">尝试进行的强制转换导致溢出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-163">The attempted cast resulted in an overflow.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ValueType">
      <MemberSignature Language="C#" Value="public override Type ValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValueType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlAtomicValue.ValueType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValueType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ValueType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueType : Type" Usage="System.Xml.Schema.XmlAtomicValue.ValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8edac-164">获取经验证的 XML 元素或特性的 Microsoft .NET Framework 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-164">Gets the Microsoft .NET Framework type of the validated XML element or attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8edac-165">经验证的 XML 元素或特性的 .NET Framework 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-165">The .NET Framework type of the validated XML element or attribute.</span>
          </span>
          <span data-ttu-id="8edac-166">默认值为 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-166">The default value is <see cref="T:System.String" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edac-167"><xref:System.Xml.Schema.XmlAtomicValue.ValueType%2A>属性获取经验证的 XML 元素或特性的类型化值的.NET Framework 类型。</span><span class="sxs-lookup"><span data-stu-id="8edac-167">The <xref:System.Xml.Schema.XmlAtomicValue.ValueType%2A> property gets the .NET Framework type of the typed value of the validated XML element or attribute.</span></span>  
  
 <span data-ttu-id="8edac-168">例如，类型的元素`xs:int`必须<xref:System.Xml.Schema.XmlAtomicValue.ValueType%2A>的<xref:System.Int32>默认情况下。</span><span class="sxs-lookup"><span data-stu-id="8edac-168">For example, an element of type `xs:int` would have a <xref:System.Xml.Schema.XmlAtomicValue.ValueType%2A> of <xref:System.Int32> by default.</span></span> <span data-ttu-id="8edac-169">但是，<xref:System.Xml.Schema.XmlAtomicValue.ValueType%2A>可能是任何一种可以映射到有效类型`xs:int`，如<xref:System.Int16>或<xref:System.Double>。</span><span class="sxs-lookup"><span data-stu-id="8edac-169">However, the <xref:System.Xml.Schema.XmlAtomicValue.ValueType%2A> could be any one of the valid types that can be mapped to `xs:int`, such as <xref:System.Int16> or <xref:System.Double>.</span></span>  
  
 <span data-ttu-id="8edac-170">有关类型的详细信息，支持在<xref:System.Xml?displayProperty=nameWithType>命名空间，请参阅[System.Xml 类中的类型支持](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)。</span><span class="sxs-lookup"><span data-stu-id="8edac-170">For more information about type support in the <xref:System.Xml?displayProperty=nameWithType> namespace, see [Type Support in the System.Xml Classes](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlType">
      <MemberSignature Language="C#" Value="public override System.Xml.Schema.XmlSchemaType XmlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaType XmlType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlAtomicValue.XmlType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlType As XmlSchemaType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::XmlSchemaType ^ XmlType { System::Xml::Schema::XmlSchemaType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlType : System.Xml.Schema.XmlSchemaType" Usage="System.Xml.Schema.XmlAtomicValue.XmlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8edac-171">获取经验证的 XML 元素或特性的 <see cref="T:System.Xml.Schema.XmlSchemaType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-171">Gets the <see cref="T:System.Xml.Schema.XmlSchemaType" /> for the validated XML element or attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8edac-172">经验证的 XML 元素或特性的 <see cref="T:System.Xml.Schema.XmlSchemaType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8edac-172">The <see cref="T:System.Xml.Schema.XmlSchemaType" /> for the validated XML element or attribute.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8edac-173"><xref:System.Xml.Schema.XmlAtomicValue.XmlType%2A>属性获取<xref:System.Xml.Schema.XmlSchemaType>经验证的 XML 元素或属性。</span><span class="sxs-lookup"><span data-stu-id="8edac-173">The <xref:System.Xml.Schema.XmlAtomicValue.XmlType%2A> property gets the <xref:System.Xml.Schema.XmlSchemaType> for the validated XML element or attribute.</span></span> <span data-ttu-id="8edac-174">例如，<xref:System.Xml.Schema.XmlSchemaSimpleType>或<xref:System.Xml.Schema.XmlSchemaComplexType>。</span><span class="sxs-lookup"><span data-stu-id="8edac-174">For example, the <xref:System.Xml.Schema.XmlSchemaSimpleType> or <xref:System.Xml.Schema.XmlSchemaComplexType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchemaType" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaSimpleType" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaComplexType" />
      </Docs>
    </Member>
  </Members>
</Type>