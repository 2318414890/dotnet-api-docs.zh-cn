<Type Name="XmlSchemaGroupRef" FullName="System.Xml.Schema.XmlSchemaGroupRef">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f98e29d05e07e0377caa2c27229cd868f872a4f2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36441971" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlSchemaGroupRef : System.Xml.Schema.XmlSchemaParticle" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlSchemaGroupRef extends System.Xml.Schema.XmlSchemaParticle" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaGroupRef" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlSchemaGroupRef&#xA;Inherits XmlSchemaParticle" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaGroupRef : System::Xml::Schema::XmlSchemaParticle" />
  <TypeSignature Language="F#" Value="type XmlSchemaGroupRef = class&#xA;    inherit XmlSchemaParticle" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.Schema.XmlSchemaParticle</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>按万维网联合会 (W3C)指定的方式表示来自 XML 架构的具有 <see langword="ref" /> 属性的 <see langword="group" /> 元素。 此类在复杂类型中使用，而这些复杂类型引用在 <see langword="group" /> 级别定义的 <see langword="schema" />。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 请参阅<xref:System.Xml.Schema.XmlSchemaGroup>有关使用此类的示例。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaGroupRef ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaGroupRef.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaGroupRef();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Particle">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaGroupBase Particle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaGroupBase Particle" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaGroupRef.Particle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Particle As XmlSchemaGroupBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaGroupBase ^ Particle { System::Xml::Schema::XmlSchemaGroupBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Particle : System.Xml.Schema.XmlSchemaGroupBase" Usage="System.Xml.Schema.XmlSchemaGroupRef.Particle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaGroupBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="T:System.Xml.Schema.XmlSchemaChoice" /> 类、<see cref="T:System.Xml.Schema.XmlSchemaAll" /> 类或 <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> 类中的一个，这些类保存 <see langword="Particle" /> 属性的编译后值。</summary>
        <value>
          <see langword="Particle" /> 属性的编译后值（<see cref="T:System.Xml.Schema.XmlSchemaChoice" /> 类、<see cref="T:System.Xml.Schema.XmlSchemaAll" /> 类或 <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> 类之一）。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefName">
      <MemberSignature Language="C#" Value="public System.Xml.XmlQualifiedName RefName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlQualifiedName RefName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaGroupRef.RefName" />
      <MemberSignature Language="VB.NET" Value="Public Property RefName As XmlQualifiedName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlQualifiedName ^ RefName { System::Xml::XmlQualifiedName ^ get(); void set(System::Xml::XmlQualifiedName ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RefName : System.Xml.XmlQualifiedName with get, set" Usage="System.Xml.Schema.XmlSchemaGroupRef.RefName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute("ref")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在此架构（或指定命名空间指示的其他架构）中定义的组的名称。</summary>
        <value>在此架构中定义的组的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `RefName`值必须是 QName。 `RefName`可以包括命名空间前缀。 若要包括在组`complexType`元素，而使用`RefName`属性以指定要包含在此架构中的组。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>