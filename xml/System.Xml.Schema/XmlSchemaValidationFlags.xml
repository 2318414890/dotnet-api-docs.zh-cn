<Type Name="XmlSchemaValidationFlags" FullName="System.Xml.Schema.XmlSchemaValidationFlags">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2ac5fe369800592ddff28eb05142bb8cabdd1f99" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52198929" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum XmlSchemaValidationFlags" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XmlSchemaValidationFlags extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaValidationFlags" />
  <TypeSignature Language="VB.NET" Value="Public Enum XmlSchemaValidationFlags" />
  <TypeSignature Language="C++ CLI" Value="public enum class XmlSchemaValidationFlags" />
  <TypeSignature Language="F#" Value="type XmlSchemaValidationFlags = " />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b9d79-101">指定由 <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> 和 <see cref="T:System.Xml.XmlReader" /> 类使用的架构验证选项。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b9d79-101">Specifies schema validation options used by the <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> and <see cref="T:System.Xml.XmlReader" /> classes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9d79-102">以下是使用时需要考虑事项<xref:System.Xml.Schema.XmlSchemaValidationFlags>值替换<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="b9d79-102">The following are notes to consider when using <xref:System.Xml.Schema.XmlSchemaValidationFlags> values with the <xref:System.Xml.XmlReader>.</span></span>  
  
-   <span data-ttu-id="b9d79-103"><xref:System.Xml.Schema.XmlSchemaValidationFlags> 值定义使用的架构验证的验证选项<xref:System.Xml.XmlReader>执行针对架构的 XML 验证。</span><span class="sxs-lookup"><span data-stu-id="b9d79-103"><xref:System.Xml.Schema.XmlSchemaValidationFlags> values define validation options used by a schema validating <xref:System.Xml.XmlReader> to perform XML validation against a schema.</span></span> <span data-ttu-id="b9d79-104"><xref:System.Xml.Schema.XmlSchemaValidationFlags> 用于验证的值<xref:System.Xml.XmlReader>使用指定的<xref:System.Xml.XmlReaderSettings.ValidationFlags%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="b9d79-104"><xref:System.Xml.Schema.XmlSchemaValidationFlags> values for a validating <xref:System.Xml.XmlReader> are specified using the <xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> property.</span></span>  
  
 <span data-ttu-id="b9d79-105">以下是使用 AllowXmlAttributes 值时要考虑的说明。</span><span class="sxs-lookup"><span data-stu-id="b9d79-105">The following are notes to consider when using the AllowXmlAttributes value.</span></span>  
  
1.  <span data-ttu-id="b9d79-106">当架构不能导入的 Xml 命名空间。</span><span class="sxs-lookup"><span data-stu-id="b9d79-106">When a schema doesn’t import the Xml namespace.</span></span>  
  
    1.  <span data-ttu-id="b9d79-107">如果设置为 AllowXmlAttributes `true` （默认值） 和实例文档中包含的 Xml 属性，验证引擎将加载默认 Xml 命名空间架构的快照并将其用于验证。</span><span class="sxs-lookup"><span data-stu-id="b9d79-107">If AllowXmlAttributes is set to `true` (default) and the instance document contains Xml attributes, the validation engine will load a snapshot of the default Xml namespace schema and use it for validation.</span></span> <span data-ttu-id="b9d79-108">如果默认架构中，找不到实例文档中使用的 Xml 特性，将不会验证该文档。</span><span class="sxs-lookup"><span data-stu-id="b9d79-108">If Xml attributes used in the instance document are not found in the default schema, the document will not validate.</span></span>  
  
    2.  <span data-ttu-id="b9d79-109">如果设置为 AllowXmlAttributes`false`和实例文档中包含的 Xml 属性，则验证引擎将报告错误。</span><span class="sxs-lookup"><span data-stu-id="b9d79-109">If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes, the validation engine will report an error.</span></span>  
  
2.  <span data-ttu-id="b9d79-110">当某个架构导入没有位置的 Xml 命名空间。</span><span class="sxs-lookup"><span data-stu-id="b9d79-110">When a schema imports the Xml namespace without a location.</span></span>  
  
    1.  <span data-ttu-id="b9d79-111">如果设置为 AllowXmlAttributes `true` （默认值） 和实例文档中包含的 Xml 属性，验证引擎将使用默认 Xml 命名空间架构进行验证。</span><span class="sxs-lookup"><span data-stu-id="b9d79-111">If AllowXmlAttributes is set to `true` (default) and the instance document contains Xml attributes, the validation engine will use the default Xml namespace schema for validation.</span></span> <span data-ttu-id="b9d79-112">如果默认架构中，找不到实例文档中使用的 Xml 特性，将不会验证该文档。</span><span class="sxs-lookup"><span data-stu-id="b9d79-112">If Xml attributes used in the instance document are not found in the default schema, the document will not validate.</span></span>  
  
    2.  <span data-ttu-id="b9d79-113">如果设置为 AllowXmlAttributes`false`和实例文档中包含不显式允许的架构，则验证引擎将报告错误的 Xml 特性。</span><span class="sxs-lookup"><span data-stu-id="b9d79-113">If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes that are not explicitly allowed by the schema, the validation engine will report an error.</span></span>  
  
    3.  <span data-ttu-id="b9d79-114">如果设置为 AllowXmlAttributes`false`和实例文档中包含显式允许通过架构验证引擎将验证属性相同的方式验证其他属性使用默认的 Xml 的 Xml 属性命名空间的架构。</span><span class="sxs-lookup"><span data-stu-id="b9d79-114">If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes that are explicitly allowed by the schema, the validation engine will validate the attributes the same way it validates other attributes using the default Xml namespace schema.</span></span>  
  
3.  <span data-ttu-id="b9d79-115">当某个架构导入自定义 schemalocation 自定义 Xml 命名空间架构。</span><span class="sxs-lookup"><span data-stu-id="b9d79-115">When a schema imports a custom Xml namespace schema with a custom schemaLocation.</span></span>  
  
    1.  <span data-ttu-id="b9d79-116">如果设置为 AllowXmlAttributes `true` （默认值） 和实例文档中包含的 Xml 属性，验证引擎将使用自定义 Xml 命名空间架构进行验证。</span><span class="sxs-lookup"><span data-stu-id="b9d79-116">If AllowXmlAttributes is set to `true` (default) and the instance document contains Xml attributes, the validation engine will use the custom Xml namespace schema for validation.</span></span> <span data-ttu-id="b9d79-117">如果指定的架构中，找不到实例文档中使用的 Xml 特性，将不会验证该文档。</span><span class="sxs-lookup"><span data-stu-id="b9d79-117">If Xml attributes used in the instance document are not found in the specified schema, the document will not validate.</span></span>  
  
    2.  <span data-ttu-id="b9d79-118">如果设置为 AllowXmlAttributes`false`和实例文档中包含不显式允许的架构，则验证引擎将报告错误的 Xml 特性。</span><span class="sxs-lookup"><span data-stu-id="b9d79-118">If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes that are not explicitly allowed by the schema, the validation engine will report an error.</span></span>  
  
    3.  <span data-ttu-id="b9d79-119">如果设置为 AllowXmlAttributes`false`和实例文档中包含显式允许的架构验证引擎将验证属性相同的方式验证使用指定的 Xml 的其他特性的 Xml 属性命名空间的架构。</span><span class="sxs-lookup"><span data-stu-id="b9d79-119">If AllowXmlAttributes is set to `false` and the instance document contains Xml attributes that are explicitly allowed by the schema, the validation engine will validate the attributes the same way it validates other attributes using specified Xml namespace schema.</span></span>  
  
4.  <span data-ttu-id="b9d79-120">如果架构定义 xml: \* 使用属性 ="required"。</span><span class="sxs-lookup"><span data-stu-id="b9d79-120">When a schema defines an xml:\* attribute with use="required".</span></span>  
  
    1.  <span data-ttu-id="b9d79-121">AllowXmlAttributes 设置为时，将应用以下`true`和`false`。</span><span class="sxs-lookup"><span data-stu-id="b9d79-121">The following applies when AllowXmlAttributes is set to `true` and `false`.</span></span> <span data-ttu-id="b9d79-122">必需的 xml: \* 属性应被视为其他属性，使用指定的 Xml 命名空间架构进行验证。</span><span class="sxs-lookup"><span data-stu-id="b9d79-122">Required xml:\* attributes should be treated as other attributes and validated using the specified Xml namespace schema.</span></span>  
  
5.  <span data-ttu-id="b9d79-123">如果架构定义 xml: \* 使用属性 ="prohibited"。</span><span class="sxs-lookup"><span data-stu-id="b9d79-123">When a schema defines an xml:\* attribute with use="prohibited".</span></span>  
  
    1.  <span data-ttu-id="b9d79-124">AllowXmlAttributes 设置为时，将应用以下`true`和`false`。</span><span class="sxs-lookup"><span data-stu-id="b9d79-124">The following applies when AllowXmlAttributes is set to `true` and `false`.</span></span> <span data-ttu-id="b9d79-125">如果实例文档包含的 xml: \* 属性未显式禁止的架构，则验证引擎将报告错误。</span><span class="sxs-lookup"><span data-stu-id="b9d79-125">If an instance document contains xml:\* attributes that are explicitly prohibited by the schema, the validation engine will report an error.</span></span>  
  
6.  <span data-ttu-id="b9d79-126">当架构指定属性通配符。</span><span class="sxs-lookup"><span data-stu-id="b9d79-126">When a schema specifies an attribute wildcard.</span></span>  
  
    1.  <span data-ttu-id="b9d79-127">如果实例文档包含一个 Xml 特性，并且该架构指定某个特性通配符与 processContents 省略或者设置为"strict"，验证引擎将使用 Xml 命名空间架构中存在<xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="b9d79-127">If an instance document contains an Xml attribute and the schema specifies an attribute wildcard with processContents either omitted or set to "strict", the validation engine will use the Xml namespace schema present in the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="b9d79-128">如果指定没有 Xml 命名空间的架构，则验证引擎将按如下所示的行为。</span><span class="sxs-lookup"><span data-stu-id="b9d79-128">If no Xml namespace schema is specified, the validation engine will behave as follows.</span></span>  
  
    2.  <span data-ttu-id="b9d79-129">如果设置为 AllowXmlAttributes `true`，验证引擎将使用默认 Xml 命名空间架构执行验证。</span><span class="sxs-lookup"><span data-stu-id="b9d79-129">If AllowXmlAttributes is set to `true`, the validation engine will use the default Xml namespace schema to perform validation.</span></span>  
  
    3.  <span data-ttu-id="b9d79-130">如果设置为 AllowXmlAttributes `false`，验证引擎将报告错误。</span><span class="sxs-lookup"><span data-stu-id="b9d79-130">If AllowXmlAttributes is set to `false`, the validation engine will report an error.</span></span>  
  
    4.  <span data-ttu-id="b9d79-131">如果实例文档包含一个 Xml 特性，并且该架构指定具有设置为"skip"processContents 属性通配符，则验证引擎将跳过属性验证。</span><span class="sxs-lookup"><span data-stu-id="b9d79-131">If an instance document contains an Xml attribute and the schema specifies an attribute wildcard with processContents set to "skip", the validation engine will skip attribute validation.</span></span>  
  
    5.  <span data-ttu-id="b9d79-132">如果实例文档包含一个 Xml 特性，并且该架构指定具有设置为"lax"processContents 属性通配符，则验证引擎将使用 Xml 命名空间架构中存在<xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="b9d79-132">If an instance document contains an Xml attribute and the schema specifies an attribute wildcard with processContents set to "lax", the validation engine will use the Xml namespace schema present in the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="b9d79-133">如果指定没有 Xml 命名空间的架构，则验证引擎将按如下所示的行为。</span><span class="sxs-lookup"><span data-stu-id="b9d79-133">If no Xml namespace schema is specified, the validation engine will behave as follows.</span></span>  
  
    6.  <span data-ttu-id="b9d79-134">如果设置为 AllowXmlAttributes `true`，验证引擎将使用默认 Xml 命名空间架构执行验证。</span><span class="sxs-lookup"><span data-stu-id="b9d79-134">If AllowXmlAttributes is set to `true`, the validation engine will use the default Xml namespace schema to perform validation.</span></span>  
  
    7.  <span data-ttu-id="b9d79-135">如果设置为 AllowXmlAttributes `false`，则不会执行属性验证。</span><span class="sxs-lookup"><span data-stu-id="b9d79-135">If AllowXmlAttributes is set to `false`, attribute validation will not be performed.</span></span>  
  
7.  <span data-ttu-id="b9d79-136">当正在验证的简单类型。</span><span class="sxs-lookup"><span data-stu-id="b9d79-136">When validating simple types.</span></span>  
  
    1.  <span data-ttu-id="b9d79-137">如果设置为 AllowXmlAttributes `true` （默认值），Xml 属性将不允许对简单类型的元素。</span><span class="sxs-lookup"><span data-stu-id="b9d79-137">When AllowXmlAttributes is set to `true` (default), Xml attributes will be allowed on elements of simple types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9d79-138">有关的示例<xref:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes>类，请参阅<xref:System.Xml.Schema.XmlSchemaValidator>类。</span><span class="sxs-lookup"><span data-stu-id="b9d79-138">For an example of the <xref:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes> class, see the <xref:System.Xml.Schema.XmlSchemaValidator> class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Schema.XmlSchemaValidator" />
  </Docs>
  <Members>
    <Member MemberName="AllowXmlAttributes">
      <MemberSignature Language="C#" Value="AllowXmlAttributes" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Schema.XmlSchemaValidationFlags AllowXmlAttributes = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes" />
      <MemberSignature Language="VB.NET" Value="AllowXmlAttributes" />
      <MemberSignature Language="C++ CLI" Value="AllowXmlAttributes" />
      <MemberSignature Language="F#" Value="AllowXmlAttributes = 16" Usage="System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9d79-139">即使架构中未定义 xml:\* 特性，也允许这些特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9d79-139">Allow xml:\* attributes even if they are not defined in the schema.</span>
          </span>
          <span data-ttu-id="b9d79-140">将根据这些特性的数据类型对它们进行验证。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9d79-140">The attributes will be validated based on their data type.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Schema.XmlSchemaValidationFlags None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchemaValidationFlags.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Xml.Schema.XmlSchemaValidationFlags.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9d79-141">不要处理标识约束、内联架构、架构位置提示或报告架构验证警告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9d79-141">Do not process identity constraints, inline schemas, schema location hints, or report schema validation warnings.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ProcessIdentityConstraints">
      <MemberSignature Language="C#" Value="ProcessIdentityConstraints" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Schema.XmlSchemaValidationFlags ProcessIdentityConstraints = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints" />
      <MemberSignature Language="VB.NET" Value="ProcessIdentityConstraints" />
      <MemberSignature Language="C++ CLI" Value="ProcessIdentityConstraints" />
      <MemberSignature Language="F#" Value="ProcessIdentityConstraints = 8" Usage="System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9d79-142">处理验证过程中遇到的标识约束（<c>xs:ID</c>、<c>xs:IDREF</c>、<c>xs:key</c>、<c>xs:keyref</c>、<c>xs:unique</c>）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9d79-142">Process identity constraints (<c>xs:ID</c>, <c>xs:IDREF</c>, <c>xs:key</c>, <c>xs:keyref</c>, <c>xs:unique</c>) encountered during validation.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ProcessInlineSchema">
      <MemberSignature Language="C#" Value="ProcessInlineSchema" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Schema.XmlSchemaValidationFlags ProcessInlineSchema = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema" />
      <MemberSignature Language="VB.NET" Value="ProcessInlineSchema" />
      <MemberSignature Language="C++ CLI" Value="ProcessInlineSchema" />
      <MemberSignature Language="F#" Value="ProcessInlineSchema = 1" Usage="System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9d79-143">处理在验证过程中遇到的内联架构。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9d79-143">Process inline schemas encountered during validation.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ProcessSchemaLocation">
      <MemberSignature Language="C#" Value="ProcessSchemaLocation" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Schema.XmlSchemaValidationFlags ProcessSchemaLocation = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation" />
      <MemberSignature Language="VB.NET" Value="ProcessSchemaLocation" />
      <MemberSignature Language="C++ CLI" Value="ProcessSchemaLocation" />
      <MemberSignature Language="F#" Value="ProcessSchemaLocation = 2" Usage="System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9d79-144">处理验证过程中遇到的架构位置提示（<c>xsi:schemaLocation</c>、<c>xsi:noNamespaceSchemaLocation</c>）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9d79-144">Process schema location hints (<c>xsi:schemaLocation</c>, <c>xsi:noNamespaceSchemaLocation</c>) encountered during validation.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ReportValidationWarnings">
      <MemberSignature Language="C#" Value="ReportValidationWarnings" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.Schema.XmlSchemaValidationFlags ReportValidationWarnings = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings" />
      <MemberSignature Language="VB.NET" Value="ReportValidationWarnings" />
      <MemberSignature Language="C++ CLI" Value="ReportValidationWarnings" />
      <MemberSignature Language="F#" Value="ReportValidationWarnings = 4" Usage="System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="b9d79-145">报告在验证过程中遇到的架构验证警告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b9d79-145">Report schema validation warnings encountered during validation.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>