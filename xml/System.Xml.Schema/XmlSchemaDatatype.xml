<Type Name="XmlSchemaDatatype" FullName="System.Xml.Schema.XmlSchemaDatatype">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a9136de8d2ae0d3c1fa75491de52dcf23ca9cde2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class XmlSchemaDatatype" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlSchemaDatatype extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaDatatype" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlSchemaDatatype" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaDatatype abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="57a45-101">
        <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> 类是将 XML 架构定义语言 (XSD) 类型映射为公共语言运行时 (CLR) 类型的抽象类。</span>
      <span class="sxs-lookup">
        <span data-stu-id="57a45-101">The <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> class is an abstract class for mapping XML Schema definition language (XSD) types to Common Language Runtime (CLR) types.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="57a45-102">下面的示例演示使用<xref:System.Xml.Schema.XmlSchemaDatatype>类。</span><span class="sxs-lookup"><span data-stu-id="57a45-102">The following example shows use of the <xref:System.Xml.Schema.XmlSchemaDatatype> class.</span></span>  
  
 [!code-cpp[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/CPP/datatype.cpp#1)]
 [!code-csharp[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/CS/datatype.cs#1)]
 [!code-vb[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/VB/datatype.vb#1)]  
  
 <span data-ttu-id="57a45-103">下面的 XML 文件用于前面的代码示例。</span><span class="sxs-lookup"><span data-stu-id="57a45-103">The following XML file is used for the preceding code example.</span></span>  
  
 [!code-xml[Classic Webdata XmlSchemaDatatype Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/XML/example.xsd#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlSchemaDatatype ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlSchemaDatatype();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="57a45-104">初始化 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a45-104">Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a45-105">派生的类构造函数来初始化此类型中的状态将调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="57a45-105">This constructor is called by derived class constructors to initialize state in this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ChangeType">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="57a45-106">将指定值转换为相同值的另一有效 CLR 表示形式，该指定值的类型为由 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> 表示的 XML 架构类型的一种有效公共语言运行时 (CLR) 表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a45-106">Converts the value specified, whose type is one of the valid Common Language Runtime (CLR) representations of the XML schema type represented by the <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, to another valid CLR representation of the same value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public virtual object ChangeType (object value, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChangeType(object value, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ChangeType (value As Object, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ChangeType(System::Object ^ value, Type ^ targetType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="57a45-107">要转换为指定类型的输入值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a45-107">The input value to convert to the specified type.</span>
          </span>
        </param>
        <param name="targetType">
          <span data-ttu-id="57a45-108">输入值要转换成的目标类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a45-108">The target type to convert the input value to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57a45-109">将指定值转换为指定的 CLR 类型，该指定值的类型为由 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> 表示的 XML 架构类型的一种有效公共语言运行时 (CLR) 表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a45-109">Converts the value specified, whose type is one of the valid Common Language Runtime (CLR) representations of the XML schema type represented by the <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, to the CLR type specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57a45-110">转换后的输入值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a45-110">The converted input value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a45-111">有关类型的详细信息，支持在<xref:System.Xml?displayProperty=nameWithType>类和转换的 XML 数据类型，请参阅[System.Xml 类中的类型支持](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)主题。</span><span class="sxs-lookup"><span data-stu-id="57a45-111">For more information about type support in the <xref:System.Xml?displayProperty=nameWithType> classes and conversion of XML data types, see the [Type Support in the System.Xml Classes](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md) topic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57a45-112">
            <see cref="T:System.Object" /> 或 <see cref="T:System.Type" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a45-112">The <see cref="T:System.Object" /> or <see cref="T:System.Type" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="57a45-113">由 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> 表示的类型不支持从指定值的类型转换为指定类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a45-113">The type represented by the <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> does not support a conversion from type of the value specified to the type specified.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public virtual object ChangeType (object value, Type targetType, System.Xml.IXmlNamespaceResolver namespaceResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChangeType(object value, class System.Type targetType, class System.Xml.IXmlNamespaceResolver namespaceResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ChangeType (value As Object, targetType As Type, namespaceResolver As IXmlNamespaceResolver) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ChangeType(System::Object ^ value, Type ^ targetType, System::Xml::IXmlNamespaceResolver ^ namespaceResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="namespaceResolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="57a45-114">要转换为指定类型的输入值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a45-114">The input value to convert to the specified type.</span>
          </span>
        </param>
        <param name="targetType">
          <span data-ttu-id="57a45-115">输入值要转换成的目标类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a45-115">The target type to convert the input value to.</span>
          </span>
        </param>
        <param name="namespaceResolver">
          <span data-ttu-id="57a45-116">用于解析命名空间前缀的 <see cref="T:System.Xml.IXmlNamespaceResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a45-116">An <see cref="T:System.Xml.IXmlNamespaceResolver" /> used for resolving namespace prefixes.</span>
          </span>
          <span data-ttu-id="57a45-117">只有 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> 表示 xs:QName 类型或从该类型派生的类型时，这才有用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a45-117">This is only of use if the <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> represents the xs:QName type or a type derived from it.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57a45-118">如果 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> 表示 xs:QName 类型或从中派生的类型，将指定值转换为用 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 指定的 CLR 类型，该指定值的类型为用 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> 表示的 XML 架构类型的一种有效公共语言运行时 (CLR) 表示形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a45-118">Converts the value specified, whose type is one of the valid Common Language Runtime (CLR) representations of the XML schema type represented by the <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, to the CLR type specified using the <see cref="T:System.Xml.IXmlNamespaceResolver" /> if the <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> represents the xs:QName type or a type derived from it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57a45-119">转换后的输入值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a45-119">The converted input value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a45-120">有关类型的详细信息，支持在<xref:System.Xml?displayProperty=nameWithType>类和转换的 XML 数据类型，请参阅[System.Xml 类中的类型支持](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)主题。</span><span class="sxs-lookup"><span data-stu-id="57a45-120">For more information about type support in the <xref:System.Xml?displayProperty=nameWithType> classes and conversion of XML data types, see the [Type Support in the System.Xml Classes](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md) topic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57a45-121">
            <see cref="T:System.Object" /> 或 <see cref="T:System.Type" /> 参数为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a45-121">The <see cref="T:System.Object" /> or <see cref="T:System.Type" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="57a45-122">由 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> 表示的类型不支持从指定值的类型转换为指定类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a45-122">The type represented by the <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> does not support a conversion from type of the value specified to the type specified.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDerivedFrom">
      <MemberSignature Language="C#" Value="public virtual bool IsDerivedFrom (System.Xml.Schema.XmlSchemaDatatype datatype);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDerivedFrom(class System.Xml.Schema.XmlSchemaDatatype datatype) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDerivedFrom (datatype As XmlSchemaDatatype) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDerivedFrom(System::Xml::Schema::XmlSchemaDatatype ^ datatype);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datatype" Type="System.Xml.Schema.XmlSchemaDatatype" />
      </Parameters>
      <Docs>
        <param name="datatype">
          <span data-ttu-id="57a45-123">
            <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a45-123">The <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57a45-124">
            <see cref="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)" /> 方法始终返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a45-124">The <see cref="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)" /> method always returns <see langword="false" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57a45-125">始终返回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a45-125">Always returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseValue">
      <MemberSignature Language="C#" Value="public abstract object ParseValue (string s, System.Xml.XmlNameTable nameTable, System.Xml.IXmlNamespaceResolver nsmgr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ParseValue(string s, class System.Xml.XmlNameTable nameTable, class System.Xml.IXmlNamespaceResolver nsmgr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ParseValue (s As String, nameTable As XmlNameTable, nsmgr As IXmlNamespaceResolver) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ParseValue(System::String ^ s, System::Xml::XmlNameTable ^ nameTable, System::Xml::IXmlNamespaceResolver ^ nsmgr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="nameTable" Type="System.Xml.XmlNameTable" />
        <Parameter Name="nsmgr" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="57a45-126">要根据简单类型验证的 <see langword="string" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a45-126">The <see langword="string" /> to validate against the simple type.</span>
          </span>
        </param>
        <param name="nameTable">
          <span data-ttu-id="57a45-127">如果 <see cref="T:System.Xml.XmlNameTable" /> 对象表示 xs:NCName 类型，在分析 <see langword="string" /> 时用于原子化的 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a45-127">The <see cref="T:System.Xml.XmlNameTable" /> to use for atomization while parsing the <see langword="string" /> if this <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> object represents the xs:NCName type.</span>
          </span>
        </param>
        <param name="nsmgr">
          <span data-ttu-id="57a45-128">如果 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 对象表示 xs:QName 类型，在分析 <see langword="string" /> 时使用的 <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a45-128">The <see cref="T:System.Xml.IXmlNamespaceResolver" /> object to use while parsing the <see langword="string" /> if this <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> object represents the xs:QName type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="57a45-129">当在派生类中重写时，根据内置或用户定义的简单类型验证指定的 <see langword="string" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a45-129">When overridden in a derived class, validates the <see langword="string" /> specified against a built-in or user-defined simple type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="57a45-130">
            <see cref="T:System.Object" />，它可以被安全地强制转换为由 <see cref="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" /> 属性返回的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a45-130">An <see cref="T:System.Object" /> that can be cast safely to the type returned by the <see cref="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" /> property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a45-131"><xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A>方法验证`string`指定根据内置或用户定义的简单类型。</span><span class="sxs-lookup"><span data-stu-id="57a45-131">The <xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A> method validates the `string` specified against a built-in or user-defined simple type.</span></span> <span data-ttu-id="57a45-132">例如，如果此<xref:System.Xml.Schema.XmlSchemaDatatype>表示类型 xs: date，则实例<xref:System.DateTime>返回。</span><span class="sxs-lookup"><span data-stu-id="57a45-132">For example, if this <xref:System.Xml.Schema.XmlSchemaDatatype> represents the type xs:date, then an instance of <xref:System.DateTime> is returned.</span></span>  
  
 <span data-ttu-id="57a45-133">下面是期间执行的步骤<xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A>方法的验证过程。</span><span class="sxs-lookup"><span data-stu-id="57a45-133">The following are the steps performed during the <xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A> method's validation process.</span></span>  
  
1.  <span data-ttu-id="57a45-134">将指定为值转换`string`到其相应的公共语言运行时 (CLR) 类型。</span><span class="sxs-lookup"><span data-stu-id="57a45-134">Convert the value specified as a `string` to its corresponding Common Language Runtime (CLR) type.</span></span>  
  
2.  <span data-ttu-id="57a45-135">验证值不违反任何方面的简单类型定义。</span><span class="sxs-lookup"><span data-stu-id="57a45-135">Verify that the value does not violate any facets defined for the simple type.</span></span>  
  
 <span data-ttu-id="57a45-136">然后返回转换后的值为<xref:System.Object>可以安全地强制转换为返回的类型和<xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="57a45-136">The converted value is then returned as an <xref:System.Object> and can be cast safely to the type returned by the <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> property.</span></span>  
  
 <span data-ttu-id="57a45-137">当<xref:System.Xml.Schema.XmlSchemaDatatype>对象表示列表类型，输入`string`值转换为的一个或多个对象的列表。</span><span class="sxs-lookup"><span data-stu-id="57a45-137">When the <xref:System.Xml.Schema.XmlSchemaDatatype> object represents a list type, the input `string` value is converted to a list of one or more objects.</span></span> <span data-ttu-id="57a45-138">当<xref:System.Xml.Schema.XmlSchemaDatatype>对象表示列表类型，则尝试将输入的值作为联合的成员类型解析。</span><span class="sxs-lookup"><span data-stu-id="57a45-138">When the <xref:System.Xml.Schema.XmlSchemaDatatype> object represents a list type, an attempt is made to parse the input value as a member type of the union.</span></span> <span data-ttu-id="57a45-139">如果尝试分析失败，然后尝试联合的下一个成员进行转换，直到分析成功或没有其他要分析的成员类型。</span><span class="sxs-lookup"><span data-stu-id="57a45-139">If the parse attempt fails, then the conversion is attempted with the next member of the union until the parse is successful or there are no other member types to parse.</span></span> <span data-ttu-id="57a45-140">如果分析失败，则引发异常。</span><span class="sxs-lookup"><span data-stu-id="57a45-140">If the parse is unsuccessful, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57a45-141">下面的示例检索`LotteryNumber`简单类型从 example.xsd 文件作为<xref:System.Xml.Schema.XmlSchemaSimpleType>然后验证`string`值`5`使用<xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="57a45-141">The following example retrieves the `LotteryNumber` simple type from the example.xsd file as an <xref:System.Xml.Schema.XmlSchemaSimpleType> and then validates the `string` value of `5` using the <xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A> method.</span></span>  
  
 [!code-cpp[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/CPP/datatype.cpp#1)]
 [!code-csharp[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/CS/datatype.cs#1)]
 [!code-vb[Classic Webdata XmlSchemaDatatype Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/VB/datatype.vb#1)]  
  
 <span data-ttu-id="57a45-142">下面的 XML 文件用于前面的代码示例。</span><span class="sxs-lookup"><span data-stu-id="57a45-142">The following XML file is used for the preceding code example.</span></span>  
  
 [!code-xml[Classic Webdata XmlSchemaDatatype Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic Webdata XmlSchemaDatatype Example/XML/example.xsd#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">
          <span data-ttu-id="57a45-143">输入值不是该 W3C XML 架构类型的有效实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a45-143">The input value is not a valid instance of this W3C XML Schema type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="57a45-144">要分析的值不可以为 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a45-144">The value to parse cannot be <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TokenizedType">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlTokenizedType TokenizedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlTokenizedType TokenizedType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TokenizedType As XmlTokenizedType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::XmlTokenizedType TokenizedType { System::Xml::XmlTokenizedType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlTokenizedType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="57a45-145">当在派生类中重写时，获取在 WWW 联合会 (W3C) XML 1.0 规范中指定的 <see langword="string" /> 的类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a45-145">When overridden in a derived class, gets the type for the <see langword="string" /> as specified in the World Wide Web Consortium (W3C) XML 1.0 specification.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="57a45-146">用于 <see langword="string" /> 的 <see cref="T:System.Xml.XmlTokenizedType" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a45-146">An <see cref="T:System.Xml.XmlTokenizedType" /> value for the <see langword="string" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a45-147">允许`string`CDATA 部分类型作为特定 XML 类型，例如，读取。</span><span class="sxs-lookup"><span data-stu-id="57a45-147">Allows the `string` to be read as a particular XML type, for example, a CDATA section type.</span></span>  
  
 <span data-ttu-id="57a45-148">下表显示的令牌类型。</span><span class="sxs-lookup"><span data-stu-id="57a45-148">The following table shows the token types.</span></span>  
  
|<span data-ttu-id="57a45-149">XmlTokenizedType</span><span class="sxs-lookup"><span data-stu-id="57a45-149">XmlTokenizedType</span></span>|<span data-ttu-id="57a45-150">描述</span><span class="sxs-lookup"><span data-stu-id="57a45-150">Description</span></span>|  
|----------------------|-----------------|  
|`CDATA`|<span data-ttu-id="57a45-151">CDATA 类型</span><span class="sxs-lookup"><span data-stu-id="57a45-151">CDATA type</span></span>|  
|`ID`|<span data-ttu-id="57a45-152">ID 类型</span><span class="sxs-lookup"><span data-stu-id="57a45-152">ID type</span></span>|  
|`IDREF`|<span data-ttu-id="57a45-153">IDREF 类型</span><span class="sxs-lookup"><span data-stu-id="57a45-153">IDREF type</span></span>|  
|`IDREFS`|<span data-ttu-id="57a45-154">IDREFS 类型</span><span class="sxs-lookup"><span data-stu-id="57a45-154">IDREFS type</span></span>|  
|`ENTITY`|<span data-ttu-id="57a45-155">实体类型</span><span class="sxs-lookup"><span data-stu-id="57a45-155">ENTITY type</span></span>|  
|`ENTITIES`|<span data-ttu-id="57a45-156">实体类型</span><span class="sxs-lookup"><span data-stu-id="57a45-156">ENTITIES type</span></span>|  
|`NMTOKEN`|<span data-ttu-id="57a45-157">NMTOKEN 类型</span><span class="sxs-lookup"><span data-stu-id="57a45-157">NMTOKEN type</span></span>|  
|`NMTOKENS`|<span data-ttu-id="57a45-158">NMTOKENS 类型</span><span class="sxs-lookup"><span data-stu-id="57a45-158">NMTOKENS type</span></span>|  
|`NOTATION`|<span data-ttu-id="57a45-159">NOTATION 类型</span><span class="sxs-lookup"><span data-stu-id="57a45-159">NOTATION type</span></span>|  
|`ENUMERATION`|<span data-ttu-id="57a45-160">枚举类型</span><span class="sxs-lookup"><span data-stu-id="57a45-160">ENUMERATION type</span></span>|  
|`QName`|<span data-ttu-id="57a45-161">QName 类型</span><span class="sxs-lookup"><span data-stu-id="57a45-161">QName type</span></span>|  
|`NCName`|<span data-ttu-id="57a45-162">NCName 类型</span><span class="sxs-lookup"><span data-stu-id="57a45-162">NCName type</span></span>|  
|`None`|<span data-ttu-id="57a45-163">任何类型</span><span class="sxs-lookup"><span data-stu-id="57a45-163">No type</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeCode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.Schema.XmlTypeCode TypeCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlTypeCode TypeCode" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaDatatype.TypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TypeCode As XmlTypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::XmlTypeCode TypeCode { System::Xml::Schema::XmlTypeCode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlTypeCode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="57a45-164">获取简单类型的 <see cref="T:System.Xml.Schema.XmlTypeCode" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a45-164">Gets the <see cref="T:System.Xml.Schema.XmlTypeCode" /> value for the simple type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="57a45-165">简单类型的 <see cref="T:System.Xml.Schema.XmlTypeCode" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a45-165">The <see cref="T:System.Xml.Schema.XmlTypeCode" /> value for the simple type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a45-166">W3C XML 架构的列表类型，如由不表示 xs:ENTITIES、 xs:NMTOKENS 和 xs: idrefs<xref:System.Xml.Schema.XmlTypeCode>枚举。</span><span class="sxs-lookup"><span data-stu-id="57a45-166">W3C XML Schema list types such as xs:ENTITIES, xs:NMTOKENS and xs:IDREFS are not represented by the <xref:System.Xml.Schema.XmlTypeCode> enumeration.</span></span> <span data-ttu-id="57a45-167">而是由表示<xref:System.Xml.Schema.XmlTypeCode>xs:ENTITY、 xs:NMTOKEN 和 xs: idref 具有的类型的值<xref:System.Xml.Schema.XmlSchemaDatatype.Variety%2A>属性<xref:System.Xml.Schema.XmlSchemaDatatype>对象设置为<xref:System.Xml.Schema.XmlSchemaDatatypeVariety.List>。</span><span class="sxs-lookup"><span data-stu-id="57a45-167">Instead they are represented by the <xref:System.Xml.Schema.XmlTypeCode> values for the xs:ENTITY, xs:NMTOKEN and xs:IDREF types with the <xref:System.Xml.Schema.XmlSchemaDatatype.Variety%2A> property of the <xref:System.Xml.Schema.XmlSchemaDatatype> object set to <xref:System.Xml.Schema.XmlSchemaDatatypeVariety.List>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="57a45-168">不表示 xs:anySimpleType 和 xs: anytype 类型<xref:System.Xml.Schema.XmlTypeCode>枚举。</span><span class="sxs-lookup"><span data-stu-id="57a45-168">Both the xs:anySimpleType and xs:anyType types are not represented by <xref:System.Xml.Schema.XmlTypeCode> enumeration.</span></span> <span data-ttu-id="57a45-169">这些都包含在<xref:System.Xml.Schema.XmlSchemaDatatype>对象<xref:System.Xml.Schema.XmlTypeCode>其值是<xref:System.Xml.Schema.XmlTypeCode.UntypedAtomic>为 xs:anySimpleType 或<xref:System.Xml.Schema.XmlTypeCode.Item>为 xs: anytype。</span><span class="sxs-lookup"><span data-stu-id="57a45-169">These are represented in an <xref:System.Xml.Schema.XmlSchemaDatatype> object with an <xref:System.Xml.Schema.XmlTypeCode> whose value is <xref:System.Xml.Schema.XmlTypeCode.UntypedAtomic> for xs:anySimpleType or <xref:System.Xml.Schema.XmlTypeCode.Item> for xs:anyType.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57a45-170">有关的示例<xref:System.Xml.Schema.XmlSchemaDatatype.TypeCode%2A>属性，请参阅<xref:System.Xml.Schema.XmlSchemaDatatype>。</span><span class="sxs-lookup"><span data-stu-id="57a45-170">For an example of the <xref:System.Xml.Schema.XmlSchemaDatatype.TypeCode%2A> property, see <xref:System.Xml.Schema.XmlSchemaDatatype>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlTypeCode" />
      </Docs>
    </Member>
    <Member MemberName="ValueType">
      <MemberSignature Language="C#" Value="public abstract Type ValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValueType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ValueType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ValueType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="57a45-171">在派生类中重写时，获取项的公共语言运行时 (CLR) 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a45-171">When overridden in a derived class, gets the Common Language Runtime (CLR) type of the item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="57a45-172">项的公共语言运行时 (CLR) 类型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a45-172">The Common Language Runtime (CLR) type of the item.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="57a45-173"><xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A>属性获取的项的 CLR 类型。</span><span class="sxs-lookup"><span data-stu-id="57a45-173">The <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> property gets the CLR type of the item.</span></span> <span data-ttu-id="57a45-174">例如，类型的元素`xs:int`都<xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A>的<xref:System.Int32>默认情况下。</span><span class="sxs-lookup"><span data-stu-id="57a45-174">For example, an element of type `xs:int` would have a <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> of <xref:System.Int32> by default.</span></span> <span data-ttu-id="57a45-175">但是，<xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A>可能是任何一种可以映射到有效类型`xs:int`，如<xref:System.Int16>或<xref:System.Double>。</span><span class="sxs-lookup"><span data-stu-id="57a45-175">However, the <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> could be any one of the valid types that can be mapped to `xs:int`, such as <xref:System.Int16> or <xref:System.Double>.</span></span>  
  
 <span data-ttu-id="57a45-176">有关类型的详细信息，支持在<xref:System.Xml?displayProperty=nameWithType>命名空间，请参阅[System.Xml 类中的类型支持](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)。</span><span class="sxs-lookup"><span data-stu-id="57a45-176">For more information about type support in the <xref:System.Xml?displayProperty=nameWithType> namespace, see [Type Support in the System.Xml Classes](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="57a45-177">有关的示例<xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A>属性，请参阅<xref:System.Xml.Schema.XmlSchemaDatatype>。</span><span class="sxs-lookup"><span data-stu-id="57a45-177">For an example of the <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> property, see <xref:System.Xml.Schema.XmlSchemaDatatype>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Variety">
      <MemberSignature Language="C#" Value="public virtual System.Xml.Schema.XmlSchemaDatatypeVariety Variety { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaDatatypeVariety Variety" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaDatatype.Variety" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Variety As XmlSchemaDatatypeVariety" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::XmlSchemaDatatypeVariety Variety { System::Xml::Schema::XmlSchemaDatatypeVariety get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaDatatypeVariety</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="57a45-178">获取简单类型的 <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a45-178">Gets the <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> value for the simple type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="57a45-179">简单类型的 <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="57a45-179">The <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> value for the simple type.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" />
      </Docs>
    </Member>
  </Members>
</Type>