<Type Name="XmlSchemaSet" FullName="System.Xml.Schema.XmlSchemaSet">
  <TypeSignature Language="C#" Value="public class XmlSchemaSet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlSchemaSet extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaSet" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlSchemaSet" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaSet" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6f378-101">包含 XML 架构定义语言 (XSD) 架构的缓存。</span><span class="sxs-lookup"><span data-stu-id="6f378-101">Contains a cache of XML Schema definition language (XSD) schemas.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  -   <span data-ttu-id="6f378-102">不要使用来自未知或不受信任的源或位置的架构。</span><span class="sxs-lookup"><span data-stu-id="6f378-102">Do not use schemas from unknown or untrusted sources or locations.</span></span> <span data-ttu-id="6f378-103">这样会危及你的代码的安全性。</span><span class="sxs-lookup"><span data-stu-id="6f378-103">Doing so will compromise the security of your code.</span></span>  
> -   <span data-ttu-id="6f378-104">XML 架构 （包括内联架构） 的本质上就容易受到拒绝服务攻击;不要在不受信任的情况下接受它们。</span><span class="sxs-lookup"><span data-stu-id="6f378-104">XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.</span></span>  
> -   <span data-ttu-id="6f378-105">架构验证错误消息和异常可能会公开有关内容模型或架构文件的 URI 路径的敏感信息。</span><span class="sxs-lookup"><span data-stu-id="6f378-105">Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file.</span></span> <span data-ttu-id="6f378-106">请注意不要公开此信息来不受信任的调用方。</span><span class="sxs-lookup"><span data-stu-id="6f378-106">Be careful not to expose this information to untrusted callers.</span></span>  
> -   <span data-ttu-id="6f378-107">在"安全注意事项"部分中介绍的其他安全注意事项。</span><span class="sxs-lookup"><span data-stu-id="6f378-107">Additional security considerations are covered in the "Security Considerations" section.</span></span>  
  
 <span data-ttu-id="6f378-108"><xref:System.Xml.Schema.XmlSchemaSet> 是一个缓存或库可以在其中存储 XML 架构定义语言 (XSD) 架构。</span><span class="sxs-lookup"><span data-stu-id="6f378-108"><xref:System.Xml.Schema.XmlSchemaSet> is a cache or library where you can store XML Schema definition language (XSD) schemas.</span></span> <span data-ttu-id="6f378-109"><xref:System.Xml.Schema.XmlSchemaSet> 通过将架构缓存在内存中，而不是从文件或 URL 访问架构，从而提高性能。</span><span class="sxs-lookup"><span data-stu-id="6f378-109"><xref:System.Xml.Schema.XmlSchemaSet> improves performance by caching schemas in memory instead of accessing them from a file or a URL.</span></span> <span data-ttu-id="6f378-110">由命名空间 URI 标识每个架构和架构添加到集时的位置指定。</span><span class="sxs-lookup"><span data-stu-id="6f378-110">Each schema is identified by the namespace URI and location that was specified when the schema was added to the set.</span></span> <span data-ttu-id="6f378-111">你使用<xref:System.Xml.XmlReaderSettings.Schemas%2A?displayProperty=nameWithType>要分配属性<xref:System.Xml.Schema.XmlSchemaSet>对象的 XML 读取器应该用于数据验证。</span><span class="sxs-lookup"><span data-stu-id="6f378-111">You use the <xref:System.Xml.XmlReaderSettings.Schemas%2A?displayProperty=nameWithType> property to assign the <xref:System.Xml.Schema.XmlSchemaSet> object an XML reader should use for data validation.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="6f378-112">安全注意事项</span><span class="sxs-lookup"><span data-stu-id="6f378-112">Security Considerations</span></span>  
  
-   <span data-ttu-id="6f378-113">不要使用来自未知或不可信源的架构。</span><span class="sxs-lookup"><span data-stu-id="6f378-113">Do not use schemas from unknown or untrusted sources.</span></span> <span data-ttu-id="6f378-114">这样会危及你的代码的安全性。</span><span class="sxs-lookup"><span data-stu-id="6f378-114">Doing so will compromise the security of your code.</span></span> <span data-ttu-id="6f378-115">外部命名空间或中引用的位置包括，导入和架构的重新定义元素均已解决方面包括或导入这些架构的基 URI。</span><span class="sxs-lookup"><span data-stu-id="6f378-115">External namespaces or locations referenced in include, import, and redefine elements of a schema are resolved with respect to the base URI of the schema that includes or imports them.</span></span> <span data-ttu-id="6f378-116">例如，如果包括或导入架构的基 URI 为空或`null`，则外部位置来解析相对于当前目录。</span><span class="sxs-lookup"><span data-stu-id="6f378-116">For example, if the base URI of the including or importing schema is empty or `null`, the external locations are resolved with respect to the current directory.</span></span> <span data-ttu-id="6f378-117"><xref:System.Xml.XmlUrlResolver>类用于解析外部架构默认情况下。</span><span class="sxs-lookup"><span data-stu-id="6f378-117">The <xref:System.Xml.XmlUrlResolver> class is used to resolve external schemas by default.</span></span> <span data-ttu-id="6f378-118">若要禁用解析包含、 导入，而重新定义架构的元素，<xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=nameWithType>属性`null`。</span><span class="sxs-lookup"><span data-stu-id="6f378-118">To disable resolution of include, import, and redefine elements of a schema, set the <xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=nameWithType> property to `null`.</span></span>  
  
-   <span data-ttu-id="6f378-119"><xref:System.Xml.Schema.XmlSchemaSet>类使用<xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType>类来分析和匹配 XML 架构中的正则表达式。</span><span class="sxs-lookup"><span data-stu-id="6f378-119">The <xref:System.Xml.Schema.XmlSchemaSet> class uses the <xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType> class to parse and match regular expressions in an XML schema.</span></span> <span data-ttu-id="6f378-120">使用 XML 架构中的正则表达式模式方面的验证可能涉及到增加的 CPU 使用率，应当避免在高可用性方案。</span><span class="sxs-lookup"><span data-stu-id="6f378-120">Validation of pattern facets with regular expressions in an XML schema may involve increased CPU usage and should be avoided in high availability scenarios.</span></span>  
  
-   <span data-ttu-id="6f378-121">由于使用而引发的异常<xref:System.Xml.Schema.XmlSchemaSet>类，如<xref:System.Xml.Schema.XmlSchemaException>类可能包含不应在不受信任的方案中公开的敏感信息。</span><span class="sxs-lookup"><span data-stu-id="6f378-121">Exceptions raised as a result of using the <xref:System.Xml.Schema.XmlSchemaSet> class, such as the <xref:System.Xml.Schema.XmlSchemaException> class may contain sensitive information that should not be exposed in untrusted scenarios.</span></span> <span data-ttu-id="6f378-122">例如，<xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A>属性<xref:System.Xml.Schema.XmlSchemaException>返回导致异常的架构文件的 URI 路径。</span><span class="sxs-lookup"><span data-stu-id="6f378-122">For example, the <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> property of an <xref:System.Xml.Schema.XmlSchemaException> returns the URI path to the schema file that caused the exception.</span></span> <span data-ttu-id="6f378-123"><xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A>不应在不受信任的方案中公开属性。</span><span class="sxs-lookup"><span data-stu-id="6f378-123">The <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> property should not be exposed in untrusted scenarios.</span></span> <span data-ttu-id="6f378-124">应正确处理异常，以便在不受信任的情况下不公开此敏感信息。</span><span class="sxs-lookup"><span data-stu-id="6f378-124">Exceptions should be properly handled so that this sensitive information is not exposed in untrusted scenarios.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f378-125">以下示例使用 <xref:System.Xml.Schema.XmlSchemaSet> 中存储的架构验证 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="6f378-125">The following example validates an XML file using schemas stored in the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="6f378-126">XML 文件 `urn:bookstore-schema` 中的命名空间标识 <xref:System.Xml.Schema.XmlSchemaSet> 中要用于验证的架构。</span><span class="sxs-lookup"><span data-stu-id="6f378-126">The namespace in the XML file, `urn:bookstore-schema`, identifies which schema in the <xref:System.Xml.Schema.XmlSchemaSet> to use for validation.</span></span>  
  
 [!code-cpp[XmlReader_Validate_SchemaSet#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReader_Validate_SchemaSet/CPP/XmlReader_Validate_SchemaSet.cpp#1)]
 [!code-csharp[XmlReader_Validate_SchemaSet#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Validate_SchemaSet/CS/validschemaset.cs#1)]
 [!code-vb[XmlReader_Validate_SchemaSet#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Validate_SchemaSet/VB/validschemaset.vb#1)]  
  
## <a name="input"></a><span data-ttu-id="6f378-127">输入</span><span class="sxs-lookup"><span data-stu-id="6f378-127">Input</span></span>  
 <span data-ttu-id="6f378-128">示例使用下列两个输入文件。</span><span class="sxs-lookup"><span data-stu-id="6f378-128">The sample uses the following two input files.</span></span>  
  
 <span data-ttu-id="6f378-129">**booksSchemaFail.xml:**</span><span class="sxs-lookup"><span data-stu-id="6f378-129">**booksSchemaFail.xml:**</span></span>  
  
 [!code-xml[XmlReader_Validate_SchemaSet#2](~/samples/snippets/xml/VS_Snippets_Data/XmlReader_Validate_SchemaSet/XML/booksschemafail.xml#2)]  
  
 <span data-ttu-id="6f378-130">**books.xsd:**</span><span class="sxs-lookup"><span data-stu-id="6f378-130">**books.xsd:**</span></span>  
  
 [!code-xml[XmlReader_Validate_SchemaSet#3](~/samples/snippets/xml/VS_Snippets_Data/XmlReader_Validate_SchemaSet/XML/books.xsd#3)]  
  
## <a name="output"></a><span data-ttu-id="6f378-131">输出</span><span class="sxs-lookup"><span data-stu-id="6f378-131">Output</span></span>  
 <span data-ttu-id="6f378-132">验证错误：命名空间“urn:bookstore-schema”中的元素“book”在命名空间“urn:bookstore-schema”中具有无效子元素“author”。</span><span class="sxs-lookup"><span data-stu-id="6f378-132">Validation Error: The element 'book' in namespace 'urn:bookstore-schema' has invalid child element 'author' in namespace 'urn:bookstore-schema'.</span></span> <span data-ttu-id="6f378-133">应为命名空间“urn:bookstore-schema”中的“title”。</span><span class="sxs-lookup"><span data-stu-id="6f378-133">Expected 'title' in namespace 'urn:bookstore-schema'.</span></span>  
  
 <span data-ttu-id="6f378-134">验证错误：命名空间“urn:bookstore-schema”中的元素“author”在命名空间“urn:bookstore-schema”中具有无效子元素“name”。</span><span class="sxs-lookup"><span data-stu-id="6f378-134">Validation Error: The element 'author' in namespace 'urn:bookstore-schema' has invalid child element 'name' in namespace 'urn:bookstore-schema'.</span></span> <span data-ttu-id="6f378-135">应为命名空间“urn:bookstore-schema”中的“first-name”。</span><span class="sxs-lookup"><span data-stu-id="6f378-135">Expected 'first-name' in namespace 'urn:bookstore-schema'.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6f378-136">初始化 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="6f378-136">Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaSet ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaSet();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6f378-137">初始化 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="6f378-137">Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaSet (System.Xml.XmlNameTable nameTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlNameTable nameTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (nameTable As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaSet(System::Xml::XmlNameTable ^ nameTable);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="nameTable" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="nameTable"><span data-ttu-id="6f378-138">要使用的 <see cref="T:System.Xml.XmlNameTable" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="6f378-138">The <see cref="T:System.Xml.XmlNameTable" /> object to use.</span></span></param>
        <summary><span data-ttu-id="6f378-139">使用指定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 初始化 <see cref="T:System.Xml.XmlNameTable" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="6f378-139">Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> class with the specified <see cref="T:System.Xml.XmlNameTable" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6f378-140">作为参数传递的 <see cref="T:System.Xml.XmlNameTable" /> 对象为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6f378-140">The <see cref="T:System.Xml.XmlNameTable" /> object passed as a parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Xml.XmlNameTable" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6f378-141">将给定的 XML 架构定义语言 (XSD) 架构添加到 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="6f378-141">Adds the given XML Schema definition language (XSD) schema to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Add (System.Xml.Schema.XmlSchema schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Add(class System.Xml.Schema.XmlSchema schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (schema As XmlSchema) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Add(System::Xml::Schema::XmlSchema ^ schema);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schema"><span data-ttu-id="6f378-142">添加到 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="6f378-142">The <see cref="T:System.Xml.Schema.XmlSchema" /> object to add to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></param>
        <summary><span data-ttu-id="6f378-143">将指定的 <see cref="T:System.Xml.Schema.XmlSchema" /> 添加到 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="6f378-143">Adds the given <see cref="T:System.Xml.Schema.XmlSchema" /> to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="6f378-144">如果架构有效，则为 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="6f378-144">An <see cref="T:System.Xml.Schema.XmlSchema" /> object if the schema is valid.</span></span> <span data-ttu-id="6f378-145">如果架构无效且指定了 <see cref="T:System.Xml.Schema.ValidationEventHandler" />，则将返回 <see langword="null" /> 并引发适当的验证事件。</span><span class="sxs-lookup"><span data-stu-id="6f378-145">If the schema is not valid and a <see cref="T:System.Xml.Schema.ValidationEventHandler" /> is specified, then <see langword="null" /> is returned and the appropriate validation event is raised.</span></span> <span data-ttu-id="6f378-146">否则会引发 <see cref="T:System.Xml.Schema.XmlSchemaException" />。</span><span class="sxs-lookup"><span data-stu-id="6f378-146">Otherwise, an <see cref="T:System.Xml.Schema.XmlSchemaException" /> is thrown.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f378-147">如果<xref:System.Xml.Schema.XmlSchema>对象已存在于<xref:System.Xml.Schema.XmlSchemaSet>、<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>方法不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="6f378-147">If the <xref:System.Xml.Schema.XmlSchema> object already exists in the <xref:System.Xml.Schema.XmlSchemaSet>, the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method does nothing.</span></span>  
  
 <span data-ttu-id="6f378-148">此方法的功能等同于的<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6f378-148">The functionality of this method is identical to that of the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="6f378-149">该架构无效。</span><span class="sxs-lookup"><span data-stu-id="6f378-149">The schema is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6f378-150">作为参数传递的 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6f378-150">The <see cref="T:System.Xml.Schema.XmlSchema" /> object passed as a parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Xml.Schema.XmlSchemaSet schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Xml.Schema.XmlSchemaSet schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (schemas As XmlSchemaSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Xml::Schema::XmlSchemaSet ^ schemas);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="schemas"><span data-ttu-id="6f378-151"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="6f378-151">The <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object.</span></span></param>
        <summary><span data-ttu-id="6f378-152">将给定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中的所有 XML 架构定义语言 (XSD) 架构添加到 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="6f378-152">Adds all the XML Schema definition language (XSD) schemas in the given <see cref="T:System.Xml.Schema.XmlSchemaSet" /> to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f378-153">可以将架构添加到之前<xref:System.Xml.Schema.XmlSchemaSet>，它必须成功预处理。</span><span class="sxs-lookup"><span data-stu-id="6f378-153">Before a schema can be added to an <xref:System.Xml.Schema.XmlSchemaSet>, it has to be successfully preprocessed.</span></span> <span data-ttu-id="6f378-154">预处理执行以下基本任务。</span><span class="sxs-lookup"><span data-stu-id="6f378-154">Preprocessing performs the following basic tasks.</span></span>  
  
1.  <span data-ttu-id="6f378-155">根据 W3C XML 架构的规则的结构化有效性检查该架构，但没有完全验证架构。</span><span class="sxs-lookup"><span data-stu-id="6f378-155">The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.</span></span>  
  
2.  <span data-ttu-id="6f378-156">对内部和外部架构组件的引用进行解析。</span><span class="sxs-lookup"><span data-stu-id="6f378-156">References to internal and external schema components are resolved.</span></span> <span data-ttu-id="6f378-157">已成功检索到任何导入或包含架构也将添加到<xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="6f378-157">Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="6f378-158">导入的架构添加为单独<xref:System.Xml.Schema.XmlSchema>对象和包括的架构进行的包括一部分<xref:System.Xml.Schema.XmlSchema>。</span><span class="sxs-lookup"><span data-stu-id="6f378-158">Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects, and included schemas are made a part of the including <xref:System.Xml.Schema.XmlSchema>.</span></span>  
  
 <span data-ttu-id="6f378-159">如果<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>属性<xref:System.Xml.Schema.XmlSchemaSet>若要将添加`true`中的所有架构<xref:System.Xml.Schema.XmlSchemaSet>将添加到<xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="6f378-159">If the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property of the <xref:System.Xml.Schema.XmlSchemaSet> to add is `true`, all schemas in the <xref:System.Xml.Schema.XmlSchemaSet> to add are added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="6f378-160">如果<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>属性<xref:System.Xml.Schema.XmlSchemaSet>若要将添加`false`，添加每个架构在添加之前进行预处理。</span><span class="sxs-lookup"><span data-stu-id="6f378-160">If the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property of the <xref:System.Xml.Schema.XmlSchemaSet> to add is `false`, each schema added is preprocessed before being added.</span></span> <span data-ttu-id="6f378-161">如果任何中新添加的架构<xref:System.Xml.Schema.XmlSchemaSet>无法进行预处理，不添加任何架构; 相反，<xref:System.Xml.Schema.XmlSchemaException>引发。</span><span class="sxs-lookup"><span data-stu-id="6f378-161">If any of the schemas in the newly added <xref:System.Xml.Schema.XmlSchemaSet> fails to be preprocessed, no schemas are added; instead, an <xref:System.Xml.Schema.XmlSchemaException> is thrown.</span></span> <span data-ttu-id="6f378-162">因此，下面的两个代码示例不是等效的。</span><span class="sxs-lookup"><span data-stu-id="6f378-162">As a result, the following two code example are not equivalent.</span></span>  
  
```vb  
' First example  
schemaSet.Add(schemaSet1)  
  
' Second example  
Dim schema As XmlSchema  
  
For Each schema in schemaSet.Schemas()  
  
    schemaSet.Add(schema)  
  
Next  
```  
  
```csharp  
// First example  
schemaSet.Add(schemaSet1);  
  
// Second example  
foreach(XmlSchema schema in schemaSet.Schemas())  
{  
    schemaSet.Add(schema);  
}  
```  
  
 <span data-ttu-id="6f378-163">前面的两个代码示例不是等效的。</span><span class="sxs-lookup"><span data-stu-id="6f378-163">The previous two code examples are not equivalent.</span></span> <span data-ttu-id="6f378-164">在第一个示例中，如果了无效的架构中存在`schemaSet1`及其<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>属性设置为`false`，任何架构将添加到`schemaSet`。</span><span class="sxs-lookup"><span data-stu-id="6f378-164">In the first example, if an invalid schema exists in `schemaSet1` and its <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to `false`, no schemas are added to `schemaSet`.</span></span> <span data-ttu-id="6f378-165">在第二个示例中，可以将大量的架构添加到`schemaSet`遇到了无效的架构和引发异常之前。</span><span class="sxs-lookup"><span data-stu-id="6f378-165">In the second example, a number of schemas can be added to `schemaSet` before an invalid schema is encountered and an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f378-166">下面的代码示例演示添加架构写入<xref:System.Xml.Schema.XmlSchemaSet>，然后添加<xref:System.Xml.Schema.XmlSchemaSet>到新<xref:System.Xml.Schema.XmlSchemaSet>使用<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6f378-166">The following code example illustrates adding schemas to an <xref:System.Xml.Schema.XmlSchemaSet>, then adding the <xref:System.Xml.Schema.XmlSchemaSet> to a new <xref:System.Xml.Schema.XmlSchemaSet> using the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.</span></span>  
  
```vb  
Dim schemaSet1 As XmlSchemaSet = New XmlSchemaSet  
schemaSet1.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd")  
schemaSet1.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
schemaSet1.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd")  
  
Dim schemaSet2 As XmlSchemaSet = New XmlSchemaSet  
schemaSet2.Add(schemaSet1)  
```  
  
```csharp  
XmlSchemaSet schemaSet1 = new XmlSchemaSet();  
schemaSet1.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd");  
schemaSet1.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
schemaSet1.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd");  
  
XmlSchemaSet schemaSet2 = new XmlSchemaSet();  
schemaSet2.Add(schemaSet1);  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="6f378-167"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中的架构无效。</span><span class="sxs-lookup"><span data-stu-id="6f378-167">A schema in the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6f378-168">作为参数传递的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 对象为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6f378-168">The <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object passed as a parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Add (string targetNamespace, string schemaUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Add(string targetNamespace, string schemaUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (targetNamespace As String, schemaUri As String) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Add(System::String ^ targetNamespace, System::String ^ schemaUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetNamespace" Type="System.String" />
        <Parameter Name="schemaUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetNamespace"><span data-ttu-id="6f378-169">架构 <c>targetNamespace</c> 属性，或使用架构中指定的 <c>targetNamespace</c> 的 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6f378-169">The schema <c>targetNamespace</c> property, or <see langword="null" /> to use the <c>targetNamespace</c> specified in the schema.</span></span></param>
        <param name="schemaUri"><span data-ttu-id="6f378-170">指定要加载的架构的 URL。</span><span class="sxs-lookup"><span data-stu-id="6f378-170">The URL that specifies the schema to load.</span></span></param>
        <summary><span data-ttu-id="6f378-171">将位于指定 URL 的 XML 架构定义语言 (XSD) 架构添加到 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="6f378-171">Adds the XML Schema definition language (XSD) schema at the URL specified to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="6f378-172">如果架构有效，则为 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="6f378-172">An <see cref="T:System.Xml.Schema.XmlSchema" /> object if the schema is valid.</span></span> <span data-ttu-id="6f378-173">如果架构无效且指定了 <see cref="T:System.Xml.Schema.ValidationEventHandler" />，则将返回 <see langword="null" /> 并引发适当的验证事件。</span><span class="sxs-lookup"><span data-stu-id="6f378-173">If the schema is not valid and a <see cref="T:System.Xml.Schema.ValidationEventHandler" /> is specified, then <see langword="null" /> is returned and the appropriate validation event is raised.</span></span> <span data-ttu-id="6f378-174">否则会引发 <see cref="T:System.Xml.Schema.XmlSchemaException" />。</span><span class="sxs-lookup"><span data-stu-id="6f378-174">Otherwise, an <see cref="T:System.Xml.Schema.XmlSchemaException" /> is thrown.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f378-175">可以将架构添加到之前<xref:System.Xml.Schema.XmlSchemaSet>，它必须成功预处理。</span><span class="sxs-lookup"><span data-stu-id="6f378-175">Before a schema can be added to an <xref:System.Xml.Schema.XmlSchemaSet>, it has to be successfully preprocessed.</span></span> <span data-ttu-id="6f378-176">预处理执行以下基本任务。</span><span class="sxs-lookup"><span data-stu-id="6f378-176">Preprocessing performs the following basic tasks.</span></span>  
  
1.  <span data-ttu-id="6f378-177">根据 W3C XML 架构的规则的结构化有效性检查该架构，但没有完全验证架构。</span><span class="sxs-lookup"><span data-stu-id="6f378-177">The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.</span></span>  
  
2.  <span data-ttu-id="6f378-178">对内部和外部架构组件的引用进行解析。</span><span class="sxs-lookup"><span data-stu-id="6f378-178">References to internal and external schema components are resolved.</span></span> <span data-ttu-id="6f378-179">已成功检索到任何导入或包含架构也将添加到<xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="6f378-179">Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="6f378-180">导入的架构添加为单独<xref:System.Xml.Schema.XmlSchema>对象和包括的架构进行的包括一部分<xref:System.Xml.Schema.XmlSchema>。</span><span class="sxs-lookup"><span data-stu-id="6f378-180">Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects, and included schemas are made a part of the including <xref:System.Xml.Schema.XmlSchema>.</span></span>  
  
 <span data-ttu-id="6f378-181">以下是使用时要考虑的重要说明<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6f378-181">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.</span></span>  
  
-   <span data-ttu-id="6f378-182">添加到架构<xref:System.Xml.Schema.XmlSchemaSet>具有相同目标命名空间和架构位置 URL 内已包含架构作为<xref:System.Xml.Schema.XmlSchemaSet>将返回原始的架构对象。</span><span class="sxs-lookup"><span data-stu-id="6f378-182">Adding a schema to the <xref:System.Xml.Schema.XmlSchemaSet> with the same target namespace and schema location URL as a schema already contained within the <xref:System.Xml.Schema.XmlSchemaSet> will return the original schema object.</span></span>  
  
-   <span data-ttu-id="6f378-183">当新的架构已成功添加到<xref:System.Xml.Schema.XmlSchemaSet>、<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>属性<xref:System.Xml.Schema.XmlSchemaSet>设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="6f378-183">When a new schema is successfully added to an <xref:System.Xml.Schema.XmlSchemaSet>, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property of the <xref:System.Xml.Schema.XmlSchemaSet> is set to `false`.</span></span>  
  
-   <span data-ttu-id="6f378-184">时，在 XML 架构中遇到任何包含或导入元素将解决<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="6f378-184">Any include or import elements encountered in an XML schema are resolved when the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method is called.</span></span> <span data-ttu-id="6f378-185">无法解析包含和导入架构验证警告的元素导致而且如果没有<xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler>为指定了<xref:System.Xml.Schema.XmlSchemaSet>对象，这些警告将不会报告。</span><span class="sxs-lookup"><span data-stu-id="6f378-185">Failure to resolve include and import elements results in a schema validation warning and if no <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler> has been specified for the <xref:System.Xml.Schema.XmlSchemaSet> object, these warning will not be reported.</span></span>  
  
-   <span data-ttu-id="6f378-186">如果具有架构中已存在相同的目标命名空间的架构<xref:System.Xml.Schema.XmlSchemaSet>添加到<xref:System.Xml.Schema.XmlSchemaSet>，添加两个架构。</span><span class="sxs-lookup"><span data-stu-id="6f378-186">If a schema with the same target namespace as a schema that already exists in the <xref:System.Xml.Schema.XmlSchemaSet> is added to the <xref:System.Xml.Schema.XmlSchemaSet>, both schemas are added.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="6f378-187">此行为不同于过时<xref:System.Xml.Schema.XmlSchemaCollection>对象。</span><span class="sxs-lookup"><span data-stu-id="6f378-187">This behavior differs from the obsolete <xref:System.Xml.Schema.XmlSchemaCollection> object.</span></span>  
  
-   <span data-ttu-id="6f378-188"><xref:System.Xml.Schema.XmlSchemaSet.Add%2A>方法<xref:System.Xml.Schema.XmlSchemaSet>能够使用一个架构中定义，而无需作为参数指定的目标命名空间的目标命名空间时<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="6f378-188">The <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method of the <xref:System.Xml.Schema.XmlSchemaSet> has the ability to use the target namespace defined in a schema, rather than requiring the target namespace be specified as a parameter when the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method is called.</span></span> <span data-ttu-id="6f378-189">指定`null`中`targetNamespace`参数<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>方法指示<xref:System.Xml.Schema.XmlSchemaSet>若要使用的架构中定义的目标命名空间，如下面的代码示例中所示。</span><span class="sxs-lookup"><span data-stu-id="6f378-189">Specifying `null` in the `targetNamespace` parameter of the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method instructs the <xref:System.Xml.Schema.XmlSchemaSet> to use the target namespace defined in the schema, as illustrated in the following code example.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add(Nothing, "books.xsd")  
  
Dim schema As XmlSchema  
For Each schema In schemaSet.Schemas("http://www.contoso.com/books")  
    schema.Write(Console.Out)  
Next  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add(null, "books.xsd");  
  
foreach(XmlSchema schema in schemaSet.Schemas("http://www.contoso.com/books"))  
{  
    schema.Write(Console.Out);  
}  
```  
  
 <span data-ttu-id="6f378-190">在上面的代码示例`null`指定为`targetNamespace`参数<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6f378-190">In the code example above, `null` is specified as the `targetNamespace` parameter to the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.</span></span> <span data-ttu-id="6f378-191">因此，`targetNamespace`定义 books.xml 中使用文件。</span><span class="sxs-lookup"><span data-stu-id="6f378-191">As a result, the `targetNamespace` defined in the books.xml file is used.</span></span> <span data-ttu-id="6f378-192">在此情况下，调用<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>将是相同的方法如果http://www.contoso.com/books已被指定为`targetNamespace`参数。</span><span class="sxs-lookup"><span data-stu-id="6f378-192">In this case, the result of calling the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method would be identical if http://www.contoso.com/books had been specified as the `targetNamespace` parameter.</span></span>  
  
-   <span data-ttu-id="6f378-193">W3C XML 架构允许没有目标命名空间包括在架构中，与定义的目标命名空间的架构。</span><span class="sxs-lookup"><span data-stu-id="6f378-193">W3C XML Schema allows schemas without a target namespace to be included in schemas with a target namespace defined.</span></span> <span data-ttu-id="6f378-194">在这种情况下，没有定义的目标命名空间的架构是强制转换为包括架构的目标命名空间。</span><span class="sxs-lookup"><span data-stu-id="6f378-194">In this case, the schema without a target namespace defined is coerced into the target namespace of the including schema.</span></span> <span data-ttu-id="6f378-195">包含的架构被视为已定义该目标命名空间。</span><span class="sxs-lookup"><span data-stu-id="6f378-195">The included schema is treated as if it had that target namespace defined.</span></span> <span data-ttu-id="6f378-196">同样，可以将没有目标命名空间的架构添加到<xref:System.Xml.Schema.XmlSchemaSet>并被强迫由指定的目标命名空间<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>方法，如下面的示例中所示。</span><span class="sxs-lookup"><span data-stu-id="6f378-196">Similarly, schemas without a target namespace can be added to the <xref:System.Xml.Schema.XmlSchemaSet> and coerced into the target namespace specified by the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method, as illustrated in the following example.</span></span>  
  
```  
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">  
    <xs:element name="A" type="xs:string" />  
</xs:schema>  
```  
  
 <span data-ttu-id="6f378-197">如果上面的架构添加到<xref:System.Xml.Schema.XmlSchemaSet>目标命名空间http://www.contoso.com/new/targetnamespace（如下面的代码所示），它将被视为架构中声明的目标命名空间已`http://www.contoso.com/new/targetnamespace`。</span><span class="sxs-lookup"><span data-stu-id="6f378-197">If the schema above is added to the <xref:System.Xml.Schema.XmlSchemaSet> with the target namespace http://www.contoso.com/new/targetnamespace (as shown in the code below), it is treated as if the target namespace declared in the schema was `http://www.contoso.com/new/targetnamespace`.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add("http://www.contoso.com/new/targetnamespace", "http://www.contoso.com/targetnamespace.xsd")  
  
Dim schema As XmlSchema  
  
For Each schema in schemaSet.Schemas()  
  
    Console.WriteLine(schema.TargetNamespace)     
  
Next  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/new/targetnamespace", "http://www.contoso.com/targetnamespace.xsd");  
foreach(XmlSchema schema in schemaSet.Schemas())  
{  
    Console.WriteLine(schema.TargetNamespace);  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="6f378-198">下面的代码示例将添加http://www.contoso.com/books.xsd具有的目标命名空间架构http://www.contoso.com/books到<xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="6f378-198">The following code example adds the http://www.contoso.com/books.xsd schema with a target namespace of http://www.contoso.com/books to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
```  
  
 <span data-ttu-id="6f378-199">示例使用 `books.xsd` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="6f378-199">The example uses the `books.xsd` file as input.</span></span>  
  
 [!code-xml[XmlSchemaSetOverall Example#3](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaSetOverall Example/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="6f378-200">该架构无效。</span><span class="sxs-lookup"><span data-stu-id="6f378-200">The schema is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6f378-201">作为参数传递的 URL 为 <see langword="null" /> 或 <see cref="F:System.String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="6f378-201">The URL passed as a parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Add (string targetNamespace, System.Xml.XmlReader schemaDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Add(string targetNamespace, class System.Xml.XmlReader schemaDocument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (targetNamespace As String, schemaDocument As XmlReader) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Add(System::String ^ targetNamespace, System::Xml::XmlReader ^ schemaDocument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetNamespace" Type="System.String" />
        <Parameter Name="schemaDocument" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="targetNamespace"><span data-ttu-id="6f378-202">架构 <c>targetNamespace</c> 属性，或使用架构中指定的 <c>targetNamespace</c> 的 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6f378-202">The schema <c>targetNamespace</c> property, or <see langword="null" /> to use the <c>targetNamespace</c> specified in the schema.</span></span></param>
        <param name="schemaDocument"><span data-ttu-id="6f378-203"><see cref="T:System.Xml.XmlReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="6f378-203">The <see cref="T:System.Xml.XmlReader" /> object.</span></span></param>
        <summary><span data-ttu-id="6f378-204">将 <see cref="T:System.Xml.XmlReader" /> 中包含的 XML 架构定义语言 (XSD) 架构添加到 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="6f378-204">Adds the XML Schema definition language (XSD) schema contained in the <see cref="T:System.Xml.XmlReader" /> to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="6f378-205">如果架构有效，则为 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="6f378-205">An <see cref="T:System.Xml.Schema.XmlSchema" /> object if the schema is valid.</span></span> <span data-ttu-id="6f378-206">如果架构无效且指定了 <see cref="T:System.Xml.Schema.ValidationEventHandler" />，则将返回 <see langword="null" /> 并引发适当的验证事件。</span><span class="sxs-lookup"><span data-stu-id="6f378-206">If the schema is not valid and a <see cref="T:System.Xml.Schema.ValidationEventHandler" /> is specified, then <see langword="null" /> is returned and the appropriate validation event is raised.</span></span> <span data-ttu-id="6f378-207">否则会引发 <see cref="T:System.Xml.Schema.XmlSchemaException" />。</span><span class="sxs-lookup"><span data-stu-id="6f378-207">Otherwise, an <see cref="T:System.Xml.Schema.XmlSchemaException" /> is thrown.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f378-208">可以将架构添加到之前<xref:System.Xml.Schema.XmlSchemaSet>，它必须成功预处理。</span><span class="sxs-lookup"><span data-stu-id="6f378-208">Before a schema can be added to an <xref:System.Xml.Schema.XmlSchemaSet>, it has to be successfully preprocessed.</span></span> <span data-ttu-id="6f378-209">预处理执行以下基本任务。</span><span class="sxs-lookup"><span data-stu-id="6f378-209">Preprocessing performs the following basic tasks.</span></span>  
  
1.  <span data-ttu-id="6f378-210">根据 W3C XML 架构的规则的结构化有效性检查该架构，但没有完全验证架构。</span><span class="sxs-lookup"><span data-stu-id="6f378-210">The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.</span></span>  
  
2.  <span data-ttu-id="6f378-211">对内部和外部架构组件的引用进行解析。</span><span class="sxs-lookup"><span data-stu-id="6f378-211">References to internal and external schema components are resolved.</span></span> <span data-ttu-id="6f378-212">已成功检索到任何导入或包含架构也将添加到<xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="6f378-212">Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="6f378-213">导入的架构添加为单独<xref:System.Xml.Schema.XmlSchema>对象和包括的架构进行的包括一部分<xref:System.Xml.Schema.XmlSchema>。</span><span class="sxs-lookup"><span data-stu-id="6f378-213">Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects, and included schemas are made a part of the including <xref:System.Xml.Schema.XmlSchema>.</span></span>  
  
 <span data-ttu-id="6f378-214">以下是使用时要考虑的重要说明<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6f378-214">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.</span></span>  
  
-   <span data-ttu-id="6f378-215">已成功检索的架构导入或中包含的架构包括<xref:System.Xml.XmlReader>也将添加到<xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="6f378-215">Successfully retrieved schemas imported or included by the schemas contained in the <xref:System.Xml.XmlReader> are also added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span>  
  
-   <span data-ttu-id="6f378-216">如果<xref:System.Xml.XmlReader>未定位在的根元素，<xref:System.Xml.Schema.XmlSchemaException>引发除非当前项是一个元素。</span><span class="sxs-lookup"><span data-stu-id="6f378-216">If the <xref:System.Xml.XmlReader> is not positioned on the root element, an <xref:System.Xml.Schema.XmlSchemaException> is thrown unless the current item is an element.</span></span> <span data-ttu-id="6f378-217">如果当前项`xs:schema`元素，架构文档读取到<xref:System.Xml.Schema.XmlSchemaSet>; 否则为<xref:System.Xml.Schema.XmlSchemaException>因为架构不是有效引发。</span><span class="sxs-lookup"><span data-stu-id="6f378-217">If the current item is an `xs:schema` element, the schema document is read into the <xref:System.Xml.Schema.XmlSchemaSet>; otherwise, an <xref:System.Xml.Schema.XmlSchemaException> is thrown because the schema is not valid.</span></span>  
  
-   <span data-ttu-id="6f378-218">如果<xref:System.Xml.XmlReader>位于通过 XML 节点的序列，添加仅在序列中的第一个节点。</span><span class="sxs-lookup"><span data-stu-id="6f378-218">If the <xref:System.Xml.XmlReader> is positioned over a sequence of XML nodes, only the first node in the sequence is added.</span></span>  
  
-   <span data-ttu-id="6f378-219">如果从已创建的架构<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法调用、 的值<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema>属性被忽略，因为内联架构处理不应用于 W3C XML 架构文档。</span><span class="sxs-lookup"><span data-stu-id="6f378-219">If the schema was created from a <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method call, the value of the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> property is ignored, because inline schema processing is not applied for W3C XML Schema documents.</span></span>  
  
-   <span data-ttu-id="6f378-220"><xref:System.Xml.XmlResolver>属性<xref:System.Xml.XmlReader>不用于解析命名空间或架构中的位置的引用包含和导入元素。</span><span class="sxs-lookup"><span data-stu-id="6f378-220">The <xref:System.Xml.XmlResolver> property of the <xref:System.Xml.XmlReader> is not used to resolve references to namespaces or schema locations in include and import elements.</span></span> <span data-ttu-id="6f378-221">相反，<xref:System.Xml.XmlResolver>属性<xref:System.Xml.Schema.XmlSchemaSet>使用。</span><span class="sxs-lookup"><span data-stu-id="6f378-221">Instead, the <xref:System.Xml.XmlResolver> property of the <xref:System.Xml.Schema.XmlSchemaSet> is used.</span></span>  
  
-   <span data-ttu-id="6f378-222"><xref:System.Xml.Schema.XmlSchemaSet.Add%2A>方法<xref:System.Xml.Schema.XmlSchemaSet>能够使用一个架构中定义，而无需作为参数指定的目标命名空间的目标命名空间时<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="6f378-222">The <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method of the <xref:System.Xml.Schema.XmlSchemaSet> has the ability to use the target namespace defined in a schema, rather than requiring the target namespace be specified as a parameter when the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method is called.</span></span> <span data-ttu-id="6f378-223">指定`null`或<xref:System.String.Empty?displayProperty=nameWithType>到<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>方法指示<xref:System.Xml.Schema.XmlSchemaSet>若要使用的架构中定义的目标命名空间。</span><span class="sxs-lookup"><span data-stu-id="6f378-223">Specifying `null` or <xref:System.String.Empty?displayProperty=nameWithType> to the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method instructs the <xref:System.Xml.Schema.XmlSchemaSet> to use the target namespace defined in the schema.</span></span> <span data-ttu-id="6f378-224">此行为的一个示例，请参阅<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6f378-224">For an example of this behavior, see the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.</span></span>  
  
 <span data-ttu-id="6f378-225">此方法的其他功能等同于的<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6f378-225">The remaining functionality of this method is identical to that of the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f378-226">下面的代码示例将 books.xsd 架构中包含添加<xref:System.Xml.XmlTextReader>与目标命名空间的http://www.contoso.com/books到<xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="6f378-226">The following code example adds the books.xsd schema contained in the <xref:System.Xml.XmlTextReader> with a target namespace of http://www.contoso.com/books to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add("http://www.contoso.com/books", New XmlTextReader("books.xsd")  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/books", new XmlTextReader("books.xsd");  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="6f378-227">该架构无效。</span><span class="sxs-lookup"><span data-stu-id="6f378-227">The schema is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6f378-228">作为参数传递的 <see cref="T:System.Xml.XmlReader" /> 对象为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6f378-228">The <see cref="T:System.Xml.XmlReader" /> object passed as a parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CompilationSettings">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaCompilationSettings CompilationSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaCompilationSettings CompilationSettings" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.CompilationSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property CompilationSettings As XmlSchemaCompilationSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaCompilationSettings ^ CompilationSettings { System::Xml::Schema::XmlSchemaCompilationSettings ^ get(); void set(System::Xml::Schema::XmlSchemaCompilationSettings ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaCompilationSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f378-229">获取或设置 <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> 的 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="6f378-229">Gets or sets the <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> for the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <value><span data-ttu-id="6f378-230">
          <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> 的 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="6f378-230">The <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> for the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span> <span data-ttu-id="6f378-231">默认为 <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> 属性设置为 <see langword="true" /> 的 <see cref="P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="6f378-231">The default is an <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> instance with the <see cref="P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck" /> property set to <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f378-232"><xref:System.Xml.Schema.XmlSchemaCompilationSettings>类指定唯一粒子归属 (UPA) 验证选项<xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="6f378-232">The <xref:System.Xml.Schema.XmlSchemaCompilationSettings> class specifies Unique Particle Attribution (UPA) validation options for the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="6f378-233">有关启用 UPA 验证检查的详细信息，请参阅<xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="6f378-233">For more information about enabling UPA validation checks, see the <xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile">
      <MemberSignature Language="C#" Value="public void Compile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Compile() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Compile" />
      <MemberSignature Language="VB.NET" Value="Public Sub Compile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Compile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6f378-234">将添加到 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XML 架构定义语言 (XSD) 架构编译成一个逻辑架构。</span><span class="sxs-lookup"><span data-stu-id="6f378-234">Compiles the XML Schema definition language (XSD) schemas added to the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> into one logical schema.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f378-235">需要验证时自动调用此方法与<xref:System.Xml.Schema.XmlSchemaSet>以前尚未编译-例如，当<xref:System.Xml.Schema.XmlSchemaSet>作为输入用于创建<xref:System.Xml.XmlReader>对象在<xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A>属性<xref:System.Xml.XmlReaderSettings>对象。</span><span class="sxs-lookup"><span data-stu-id="6f378-235">This method is called automatically when validation is needed and the <xref:System.Xml.Schema.XmlSchemaSet> has not been previously compiled—for example, when an <xref:System.Xml.Schema.XmlSchemaSet> is used as an input to create an <xref:System.Xml.XmlReader> object in the <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> property of an <xref:System.Xml.XmlReaderSettings> object.</span></span> <span data-ttu-id="6f378-236">如果<xref:System.Xml.Schema.XmlSchemaSet>是已在编译的状态，此方法不会重新编译架构。</span><span class="sxs-lookup"><span data-stu-id="6f378-236">If the <xref:System.Xml.Schema.XmlSchemaSet> is already in the compiled state, this method will not recompile the schemas.</span></span> <span data-ttu-id="6f378-237">如果此方法成功执行，<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>属性设置为`true`。</span><span class="sxs-lookup"><span data-stu-id="6f378-237">If this method executes successfully, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="6f378-238">以前编译的架构<xref:System.Xml.Schema.XmlSchemaSet>不重新编译。</span><span class="sxs-lookup"><span data-stu-id="6f378-238">Schemas that have been previously compiled by an <xref:System.Xml.Schema.XmlSchemaSet> are not recompiled.</span></span> <span data-ttu-id="6f378-239">但是，使用编译的架构<xref:System.Xml.Schema.XmlSchemaSet.Compile%2A>方法<xref:System.Xml.Schema.XmlSchema>将重新编译。</span><span class="sxs-lookup"><span data-stu-id="6f378-239">However, schemas that were compiled using the <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> method of the <xref:System.Xml.Schema.XmlSchema> will be recompiled.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6f378-240">你需要调用<xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>方法如果你已将其添加到后更改架构 （或其的包括/导入之一） <xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="6f378-240">You need to call the <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method if you have changed a schema (or one of its includes/imports) after adding it to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="6f378-241"><xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>方法将检查根据 W3C XML 架构的规则的结构化有效性的架构。</span><span class="sxs-lookup"><span data-stu-id="6f378-241">The <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method will check the schema for structural validity according to the rules of W3C XML Schema.</span></span> <span data-ttu-id="6f378-242">但是，它不会执行完整的验证检查。</span><span class="sxs-lookup"><span data-stu-id="6f378-242">However, it will not perform a full validation check.</span></span> <span data-ttu-id="6f378-243">它还会解析到内部和外部架构组件的引用。</span><span class="sxs-lookup"><span data-stu-id="6f378-243">It will also resolve references to internal and external schema components.</span></span> <span data-ttu-id="6f378-244">已成功检索到任何导入或包含架构也将添加到<xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="6f378-244">Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="6f378-245">导入的架构添加为单独<xref:System.Xml.Schema.XmlSchema>对象而被包含架构所做的包括一部分<xref:System.Xml.Schema.XmlSchema>。</span><span class="sxs-lookup"><span data-stu-id="6f378-245">Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects while included schemas are made part of the including <xref:System.Xml.Schema.XmlSchema>.</span></span> <span data-ttu-id="6f378-246">若要重新处理的调用是否成功，<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>属性设置为 false。</span><span class="sxs-lookup"><span data-stu-id="6f378-246">If the call to reprocess is successful, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to false.</span></span>  
  
   
  
## Examples  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
schemaSet.Compile()  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
schemaSet.Compile();  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="6f378-247">当验证和编译 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中的架构时发生错误。</span><span class="sxs-lookup"><span data-stu-id="6f378-247">An error occurred when validating and compiling the schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6f378-248">指示 XML 架构定义语言 (XSD) 架构是否位于 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="6f378-248">Indicates whether an XML Schema definition language (XSD) schema is in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string targetNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string targetNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (targetNamespace As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ targetNamespace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetNamespace"><span data-ttu-id="6f378-249">架构 <c>targetNamespace</c> 属性。</span><span class="sxs-lookup"><span data-stu-id="6f378-249">The schema <c>targetNamespace</c> property.</span></span></param>
        <summary><span data-ttu-id="6f378-250">指示具有指定目标命名空间 URI 的 XML 架构定义语言 (XSD) 架构是否位于 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="6f378-250">Indicates whether an XML Schema definition language (XSD) schema with the specified target namespace URI is in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns>
          <span data-ttu-id="6f378-251">如果具有指定目标命名空间 URI 的架构位于 <see cref="T:System.Xml.Schema.XmlSchemaSet" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6f378-251"><see langword="true" /> if a schema with the specified target namespace URI is in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f378-252">间接添加到的架构<xref:System.Xml.Schema.XmlSchemaSet>检测到的<xref:System.Xml.Schema.XmlSchemaSet.Contains%2A>方法; 例如，如果导入的架构。</span><span class="sxs-lookup"><span data-stu-id="6f378-252">Schemas that are indirectly added to the <xref:System.Xml.Schema.XmlSchemaSet> are detected by the <xref:System.Xml.Schema.XmlSchemaSet.Contains%2A> method; for example, imported schemas.</span></span> <span data-ttu-id="6f378-253">因此，如果架构http://www.contoso.com/retail导入的架构命名空间http://www.contoso.com/books命名空间添加到<xref:System.Xml.Schema.XmlSchemaSet>，则调用<xref:System.Xml.Schema.XmlSchemaSet.Contains%2A>与`http://www.contoso.com/books`作为参数，它将返回`true`。</span><span class="sxs-lookup"><span data-stu-id="6f378-253">As a result, if a schema for the http://www.contoso.com/retail namespace which imports a schema for the http://www.contoso.com/books namespace is added to the <xref:System.Xml.Schema.XmlSchemaSet>, calling <xref:System.Xml.Schema.XmlSchemaSet.Contains%2A> with `http://www.contoso.com/books` as a parameter, it returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Xml.Schema.XmlSchema schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Xml.Schema.XmlSchema schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (schema As XmlSchema) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Xml::Schema::XmlSchema ^ schema);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schema"><span data-ttu-id="6f378-254"><see cref="T:System.Xml.Schema.XmlSchema" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="6f378-254">The <see cref="T:System.Xml.Schema.XmlSchema" /> object.</span></span></param>
        <summary><span data-ttu-id="6f378-255">指示指定的 XML 架构定义语言 (XSD) <see cref="T:System.Xml.Schema.XmlSchema" /> 对象是否位于 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="6f378-255">Indicates whether the specified XML Schema definition language (XSD) <see cref="T:System.Xml.Schema.XmlSchema" /> object is in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns>
          <span data-ttu-id="6f378-256">如果 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象在 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6f378-256"><see langword="true" /> if the <see cref="T:System.Xml.Schema.XmlSchema" /> object is in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6f378-257">作为参数传递的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6f378-257">The <see cref="T:System.Xml.Schema.XmlSchemaSet" /> passed as a parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Xml.Schema.XmlSchema[] schemas, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Xml.Schema.XmlSchema[] schemas, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (schemas As XmlSchema(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Xml::Schema::XmlSchema ^&gt; ^ schemas, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchema[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="schemas"><span data-ttu-id="6f378-258">要向其复制对象的数组。</span><span class="sxs-lookup"><span data-stu-id="6f378-258">The array to copy the objects to.</span></span></param>
        <param name="index"><span data-ttu-id="6f378-259">数组中开始复制处的索引。</span><span class="sxs-lookup"><span data-stu-id="6f378-259">The index in the array where copying will begin.</span></span></param>
        <summary><span data-ttu-id="6f378-260">将 <see cref="T:System.Xml.Schema.XmlSchema" /> 中的所有 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 对象复制到起始位置为给定索引的给定数组中。</span><span class="sxs-lookup"><span data-stu-id="6f378-260">Copies all the <see cref="T:System.Xml.Schema.XmlSchema" /> objects from the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> to the given array, starting at the given index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6f378-261">下面的示例将所有复制<xref:System.Xml.Schema.XmlSchema>中的对象<xref:System.Xml.Schema.XmlSchemaSet>指向数组<xref:System.Xml.Schema.XmlSchema>对象。</span><span class="sxs-lookup"><span data-stu-id="6f378-261">The following example copies all the <xref:System.Xml.Schema.XmlSchema> objects in the <xref:System.Xml.Schema.XmlSchemaSet> to an array of <xref:System.Xml.Schema.XmlSchema> objects.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet  
schemaSet.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd")  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
schemaSet.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd")  
  
Dim schemas(schemaSet.Count) As XmlSchema  
schemaSet.CopyTo(schemas, 0)  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd");  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
schemaSet.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd");  
  
XmlSchema[] schemas = new XmlSchema[schemaSet.Count];  
schemaSet.CopyTo(schemas, 0);  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f378-262">获取 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中逻辑 XML 架构定义语言 (XSD) 架构的数量。</span><span class="sxs-lookup"><span data-stu-id="6f378-262">Gets the number of logical XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <value><span data-ttu-id="6f378-263"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中的逻辑架构数。</span><span class="sxs-lookup"><span data-stu-id="6f378-263">The number of logical schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f378-264">如果没有命名空间的两个架构`http://www.contoso.com`中<xref:System.Xml.Schema.XmlSchemaSet>、<xref:System.Xml.Schema.XmlSchemaSet.Count%2A>属性将返回 1，因为架构被视为单个逻辑架构来进行验证。</span><span class="sxs-lookup"><span data-stu-id="6f378-264">If there are two schemas for the namespace `http://www.contoso.com` in the <xref:System.Xml.Schema.XmlSchemaSet>, the <xref:System.Xml.Schema.XmlSchemaSet.Count%2A> property would return 1 because the schemas are treated as a single logical schema for validation purposes.</span></span> <span data-ttu-id="6f378-265">但是，如果用于命名空间的架构`http://www.contoso.com/retail`导入的架构`http://www.contoso.com/books`命名空间的值<xref:System.Xml.Schema.XmlSchemaSet.Count%2A>属性将为 2。</span><span class="sxs-lookup"><span data-stu-id="6f378-265">However, if a schema for the namespace `http://www.contoso.com/retail` imported a schema for the `http://www.contoso.com/books` namespace, the value of the <xref:System.Xml.Schema.XmlSchemaSet.Count%2A> property would be 2.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalAttributes">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaObjectTable GlobalAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaObjectTable GlobalAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.GlobalAttributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalAttributes As XmlSchemaObjectTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaObjectTable ^ GlobalAttributes { System::Xml::Schema::XmlSchemaObjectTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaObjectTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f378-266">获取 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中所有 XML 架构定义语言 (XSD) 架构的所有全局特性。</span><span class="sxs-lookup"><span data-stu-id="6f378-266">Gets all the global attributes in all the XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <value><span data-ttu-id="6f378-267">属性特性的集合。</span><span class="sxs-lookup"><span data-stu-id="6f378-267">The collection of global attributes.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Xml.Schema.XmlSchemaSet.GlobalElements" />
        <altmember cref="P:System.Xml.Schema.XmlSchemaSet.GlobalTypes" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaObjectTable" />
      </Docs>
    </Member>
    <Member MemberName="GlobalElements">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaObjectTable GlobalElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaObjectTable GlobalElements" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.GlobalElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalElements As XmlSchemaObjectTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaObjectTable ^ GlobalElements { System::Xml::Schema::XmlSchemaObjectTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaObjectTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f378-268">获取 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中所有 XML 架构定义语言 (XSD) 架构的所有全局元素。</span><span class="sxs-lookup"><span data-stu-id="6f378-268">Gets all the global elements in all the XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <value><span data-ttu-id="6f378-269">全局元素的集合。</span><span class="sxs-lookup"><span data-stu-id="6f378-269">The collection of global elements.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Xml.Schema.XmlSchemaSet.GlobalTypes" />
        <altmember cref="P:System.Xml.Schema.XmlSchemaSet.GlobalAttributes" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaObjectTable" />
      </Docs>
    </Member>
    <Member MemberName="GlobalTypes">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaObjectTable GlobalTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaObjectTable GlobalTypes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.GlobalTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalTypes As XmlSchemaObjectTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaObjectTable ^ GlobalTypes { System::Xml::Schema::XmlSchemaObjectTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaObjectTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f378-270">获取 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中所有 XML 架构定义语言 (XSD) 架构的所有全局简单和复杂类型。</span><span class="sxs-lookup"><span data-stu-id="6f378-270">Gets all of the global simple and complex types in all the XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <value><span data-ttu-id="6f378-271">全局简单和复杂类型的集合。</span><span class="sxs-lookup"><span data-stu-id="6f378-271">The collection of global simple and complex types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f378-272"><xref:System.Xml.Schema.XmlSchemaSet.GlobalTypes%2A>属性始终返回一个表示类型`xs:anyType`复杂类型。</span><span class="sxs-lookup"><span data-stu-id="6f378-272">The <xref:System.Xml.Schema.XmlSchemaSet.GlobalTypes%2A> property always returns a type that represents the `xs:anyType` complex type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Schema.XmlSchemaSet.GlobalElements" />
        <altmember cref="P:System.Xml.Schema.XmlSchemaSet.GlobalAttributes" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaObjectTable" />
      </Docs>
    </Member>
    <Member MemberName="IsCompiled">
      <MemberSignature Language="C#" Value="public bool IsCompiled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompiled" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.IsCompiled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompiled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompiled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f378-273">获取一个值指示 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中的 XML 架构定义语言 (XSD) 架构是否已编译的值。</span><span class="sxs-lookup"><span data-stu-id="6f378-273">Gets a value that indicates whether the XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> have been compiled.</span></span></summary>
        <value>
          <span data-ttu-id="6f378-274">如果 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中的架构自上次在 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中添加或移除以来已被编译，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6f378-274"><see langword="true" /> if the schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> have been compiled since the last time a schema was added or removed from the <see cref="T:System.Xml.Schema.XmlSchemaSet" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f378-275">如果架构在 <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> 中编辑，<xref:System.Xml.Schema.XmlSchemaSet> 属性不受影响。</span><span class="sxs-lookup"><span data-stu-id="6f378-275">The <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is not affected if schemas are edited while in the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="6f378-276">不跟踪对 <xref:System.Xml.Schema.XmlSchemaSet> 中各个架构的更新。</span><span class="sxs-lookup"><span data-stu-id="6f378-276">Updates of the individual schemas in the <xref:System.Xml.Schema.XmlSchemaSet> are not tracked.</span></span> <span data-ttu-id="6f378-277">因此，只要 <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> 中没有添加或移除任何架构，即使 `true` 中包含的一个架构已更改，<xref:System.Xml.Schema.XmlSchemaSet> 属性也可以为 <xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="6f378-277">As a result, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property can be `true` even though one of the schemas contained in the <xref:System.Xml.Schema.XmlSchemaSet> has been altered, as long as no schemas were added or removed from the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f378-278">有关的示例<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>属性，请参阅<xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6f378-278">For an example of the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property, see the <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Schema.XmlSchemaSet.Compile" />
        <altmember cref="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)" />
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f378-279">获取加载新的 XML 架构定义语言 (XSD) 架构时 <see cref="T:System.Xml.XmlNameTable" /> 使用的默认 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="6f378-279">Gets the default <see cref="T:System.Xml.XmlNameTable" /> used by the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> when loading new XML Schema definition language (XSD) schemas.</span></span></summary>
        <value><span data-ttu-id="6f378-280">原子化字符串对象表。</span><span class="sxs-lookup"><span data-stu-id="6f378-280">A table of atomized string objects.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.XmlNameTable" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Remove (System.Xml.Schema.XmlSchema schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Remove(class System.Xml.Schema.XmlSchema schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (schema As XmlSchema) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Remove(System::Xml::Schema::XmlSchema ^ schema);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schema"><span data-ttu-id="6f378-281">要从 <see cref="T:System.Xml.Schema.XmlSchema" /> 中移除的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="6f378-281">The <see cref="T:System.Xml.Schema.XmlSchema" /> object to remove from the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></param>
        <summary><span data-ttu-id="6f378-282">从 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 移除指定的 XML 架构定义语言 (XSD) 架构。</span><span class="sxs-lookup"><span data-stu-id="6f378-282">Removes the specified XML Schema definition language (XSD) schema from the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="6f378-283">从 <see cref="T:System.Xml.Schema.XmlSchema" /> 中移除的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 对象，或如果在 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中未找到该架构，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6f378-283">The <see cref="T:System.Xml.Schema.XmlSchema" /> object removed from the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> or <see langword="null" /> if the schema was not found in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f378-284">删除从架构<xref:System.Xml.Schema.XmlSchemaSet>设置<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>属性`false`。</span><span class="sxs-lookup"><span data-stu-id="6f378-284">Removing a schema from the <xref:System.Xml.Schema.XmlSchemaSet> sets the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f378-285">下面的示例演示添加到多个架构<xref:System.Xml.Schema.XmlSchemaSet>，然后删除其中一个使用的架构<xref:System.Xml.Schema.XmlSchemaSet.Remove%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6f378-285">The following example illustrates adding multiple schemas to an <xref:System.Xml.Schema.XmlSchemaSet>, then removing one of the schemas using the <xref:System.Xml.Schema.XmlSchemaSet.Remove%2A> method.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd")  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
schemaSet.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd")  
  
Dim schema As XmlSchema  
  
For Each schema In schemaSet.Schemas()  
  
    If schema.TargetNamespace = "http://www.contoso.com/music" Then  
        schemaSet.Remove(schema)  
    End If  
  
Next  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd");  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
schemaSet.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd");  
  
foreach (XmlSchema schema in schemaSet.Schemas())  
{  
    if (schema.TargetNamespace == "http://www.contoso.com/music")  
    {  
        schemaSet.Remove(schema);  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="6f378-286">此架构不是有效的架构。</span><span class="sxs-lookup"><span data-stu-id="6f378-286">The schema is not a valid schema.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6f378-287">作为参数传递的 <see cref="T:System.Xml.Schema.XmlSchema" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6f378-287">The <see cref="T:System.Xml.Schema.XmlSchema" /> passed as a parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveRecursive">
      <MemberSignature Language="C#" Value="public bool RemoveRecursive (System.Xml.Schema.XmlSchema schemaToRemove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveRecursive(class System.Xml.Schema.XmlSchema schemaToRemove) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveRecursive (schemaToRemove As XmlSchema) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveRecursive(System::Xml::Schema::XmlSchema ^ schemaToRemove);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaToRemove" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schemaToRemove"><span data-ttu-id="6f378-288">要从 <see cref="T:System.Xml.Schema.XmlSchema" /> 中移除的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="6f378-288">The <see cref="T:System.Xml.Schema.XmlSchema" /> object to remove from the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></param>
        <summary><span data-ttu-id="6f378-289">从 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中移除指定的 XML 架构定义语言 (XSD) 架构和它导入的所有架构。</span><span class="sxs-lookup"><span data-stu-id="6f378-289">Removes the specified XML Schema definition language (XSD) schema and all the schemas it imports from the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns>
          <span data-ttu-id="6f378-290">如果已成功移除 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象和其导入的所有内容，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6f378-290"><see langword="true" /> if the <see cref="T:System.Xml.Schema.XmlSchema" /> object and all its imports were successfully removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f378-291"><xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A>方法中删除指定的架构和它从中导入的所有架构<xref:System.Xml.Schema.XmlSchemaSet>，只要有不依赖于架构或其导入的架构。</span><span class="sxs-lookup"><span data-stu-id="6f378-291">The <xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A> method removes the specified schema and all the schemas it imports from the <xref:System.Xml.Schema.XmlSchemaSet>, as long as there are no dependencies on the schema or its imported schemas.</span></span> <span data-ttu-id="6f378-292">如果不存在架构或在其导入的架构上的依赖关系<xref:System.Xml.Schema.XmlSchemaSet>，移除任何内容和<xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A>返回`false`。</span><span class="sxs-lookup"><span data-stu-id="6f378-292">If there are dependencies on the schema or its imported schemas in the <xref:System.Xml.Schema.XmlSchemaSet>, nothing is removed and <xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A> returns `false`.</span></span> <span data-ttu-id="6f378-293">如果`false`返回和<xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler>是定义，警告被发送到事件处理程序描述的相关性。</span><span class="sxs-lookup"><span data-stu-id="6f378-293">If `false` is returned and a <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler> is defined, a warning is sent to the event handler describing the dependencies.</span></span>  
  
 <span data-ttu-id="6f378-294">如果指定的架构导入其他架构和以前移除了指定的架构<xref:System.Xml.Schema.XmlSchemaSet.Remove%2A>方法，<xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A>方法不会删除导入的架构并将返回`false`。</span><span class="sxs-lookup"><span data-stu-id="6f378-294">If the specified schema imports other schemas and the specified schema was previously removed with the <xref:System.Xml.Schema.XmlSchemaSet.Remove%2A> method, the <xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A> method will not remove the imported schemas and will return `false`.</span></span> <span data-ttu-id="6f378-295">例如，如果`parentSchema`导入`childSchema1`和`childSchema2`下面的代码只会删除`parentSchema`，但不是导入`childSchema1`和`childSchema2`架构：</span><span class="sxs-lookup"><span data-stu-id="6f378-295">For example, if `parentSchema` imports `childSchema1` and `childSchema2` the following code will only remove `parentSchema`, but not the imported `childSchema1` and `childSchema2` schemas:</span></span>  
  
```  
XmlSchemaSet ss = new XmlSchemaSet();  
XmlSchema xs = XmlSchema.Read(XmlReader.Create("parentSchema.xsd"), null);  
ss.Add(xs);  
ss.Compile();  
ss.Remove(xs);  
ss.Compile();  
ss.RemoveRecursive(xs);  
ss.Compile();  
```  
  
 <span data-ttu-id="6f378-296">下面的代码将删除`parentSchema`和导入的架构：</span><span class="sxs-lookup"><span data-stu-id="6f378-296">The following code will remove the `parentSchema` and the imported schemas:</span></span>  
  
```  
XmlSchemaSet ss = new XmlSchemaSet();  
XmlSchema xs = XmlSchema.Read(XmlReader.Create("parentSchema.xsd"), null);  
ss.Add(xs);  
ss.Compile();  
ss.RemoveRecursive(xs);  
ss.Compile();  
```  
  
 <span data-ttu-id="6f378-297"><xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A>方法不起作用的状态<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="6f378-297">The <xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A> method has no effect on the state of the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f378-298">下面的代码示例演示了添加到多个架构<xref:System.Xml.Schema.XmlSchemaSet>，然后删除其中一个架构及其导入使用的所有架构<xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6f378-298">The following code example illustrates adding multiple schemas to an <xref:System.Xml.Schema.XmlSchemaSet>, then removing one of the schemas and all the schemas it imports using the <xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A> method.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd")  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
schemaSet.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd")  
  
Dim schema As XmlSchema  
  
For Each schema In schemaSet.Schemas()  
  
    If schema.TargetNamespace = "http://www.contoso.com/music" Then  
        schemaSet.RemoveRecursive(schema)  
    End If  
  
Next  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd");  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
schemaSet.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd");  
  
foreach (XmlSchema schema in schemaSet.Schemas())  
{  
    if (schema.TargetNamespace == "http://www.contoso.com/music")  
    {  
        schemaSet.RemoveRecursive(schema);  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6f378-299">作为参数传递的 <see cref="T:System.Xml.Schema.XmlSchema" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6f378-299">The <see cref="T:System.Xml.Schema.XmlSchema" /> passed as a parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reprocess">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Reprocess (System.Xml.Schema.XmlSchema schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Reprocess(class System.Xml.Schema.XmlSchema schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Function Reprocess (schema As XmlSchema) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Reprocess(System::Xml::Schema::XmlSchema ^ schema);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schema"><span data-ttu-id="6f378-300">要重新处理的架构。</span><span class="sxs-lookup"><span data-stu-id="6f378-300">The schema to reprocess.</span></span></param>
        <summary><span data-ttu-id="6f378-301">重新处理已经存在于 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中的 XML 架构定义语言 (XSD) 架构。</span><span class="sxs-lookup"><span data-stu-id="6f378-301">Reprocesses an XML Schema definition language (XSD) schema that already exists in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="6f378-302">如果架构有效，则为 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="6f378-302">An <see cref="T:System.Xml.Schema.XmlSchema" /> object if the schema is a valid schema.</span></span> <span data-ttu-id="6f378-303">如果架构无效且指定了 <see cref="T:System.Xml.Schema.ValidationEventHandler" />，则将返回 <see langword="null" /> 并引发适当的验证事件。</span><span class="sxs-lookup"><span data-stu-id="6f378-303">If the schema is not valid and a <see cref="T:System.Xml.Schema.ValidationEventHandler" /> is specified, <see langword="null" /> is returned and the appropriate validation event is raised.</span></span> <span data-ttu-id="6f378-304">否则会引发 <see cref="T:System.Xml.Schema.XmlSchemaException" />。</span><span class="sxs-lookup"><span data-stu-id="6f378-304">Otherwise, an <see cref="T:System.Xml.Schema.XmlSchemaException" /> is thrown.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f378-305">重新处理架构执行针对架构执行的所有预处理步骤时<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="6f378-305">Reprocessing a schema performs all the preprocessing steps performed on a schema when the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method is called.</span></span> <span data-ttu-id="6f378-306">如果调用<xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>成功，<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>属性设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="6f378-306">If the call to <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> is successful, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to `false`.</span></span>  
  
 <span data-ttu-id="6f378-307">重新处理方法应使用后架构<xref:System.Xml.Schema.XmlSchemaSet>已被修改，之后<xref:System.Xml.Schema.XmlSchemaSet>执行编译。</span><span class="sxs-lookup"><span data-stu-id="6f378-307">The Reprocess method should be used after a schema in the <xref:System.Xml.Schema.XmlSchemaSet> has been modified, after the <xref:System.Xml.Schema.XmlSchemaSet> has performed compilation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6f378-308">你需要调用<xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>方法如果你已将其添加到后更改架构 （或其的包括/导入之一） <xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="6f378-308">You need to call the <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method if you have changed a schema (or one of its includes/imports) after adding it to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="6f378-309"><xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>方法将检查根据 W3C XML 架构的规则的结构化有效性的架构。</span><span class="sxs-lookup"><span data-stu-id="6f378-309">The <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method will check the schema for structural validity according to the rules of W3C XML Schema.</span></span> <span data-ttu-id="6f378-310">但是，它不会执行完整的验证检查。</span><span class="sxs-lookup"><span data-stu-id="6f378-310">However, it will not perform a full validation check.</span></span> <span data-ttu-id="6f378-311">它还会解析到内部和外部架构组件的引用。</span><span class="sxs-lookup"><span data-stu-id="6f378-311">It will also resolve references to internal and external schema components.</span></span> <span data-ttu-id="6f378-312">已成功检索到任何导入或包含架构也将添加到<xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="6f378-312">Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="6f378-313">导入的架构添加为单独<xref:System.Xml.Schema.XmlSchema>对象而被包含架构所做的包括一部分<xref:System.Xml.Schema.XmlSchema>。</span><span class="sxs-lookup"><span data-stu-id="6f378-313">Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects while included schemas are made part of the including <xref:System.Xml.Schema.XmlSchema>.</span></span> <span data-ttu-id="6f378-314">若要重新处理的调用是否成功，<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>属性设置为 false。</span><span class="sxs-lookup"><span data-stu-id="6f378-314">If the call to reprocess is successful, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to false.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f378-315">下面的示例演示如何重新处理添加到架构<xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="6f378-315">The following example illustrates reprocessing a schema added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="6f378-316">后<xref:System.Xml.Schema.XmlSchemaSet>使用编译<xref:System.Xml.Schema.XmlSchemaSet.Compile%2A>方法，并添加到架构<xref:System.Xml.Schema.XmlSchemaSet>修改时，<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>属性将设置为`true`，即使在架构<xref:System.Xml.Schema.XmlSchemaSet>已被修改。</span><span class="sxs-lookup"><span data-stu-id="6f378-316">After the <xref:System.Xml.Schema.XmlSchemaSet> is compiled using the <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> method, and the schema added to the <xref:System.Xml.Schema.XmlSchemaSet> is modified, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property will be set to `true`, even though a schema in the <xref:System.Xml.Schema.XmlSchemaSet> has been modified.</span></span> <span data-ttu-id="6f378-317">调用<xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>方法执行执行的所有预处理<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>方法和集<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>属性`false`。</span><span class="sxs-lookup"><span data-stu-id="6f378-317">Calling the <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method performs all the preprocessing performed by the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method and sets the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property to `false`.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
Dim schema As XmlSchema = schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
schemaSet.Compile()  
  
Dim element As XmlSchemaElement = New XmlSchemaElement()  
schema.Items.Add(element)  
element.Name = "book"  
element.SchemaTypeName = New XmlQualifiedName("string", "http://www.w3.org/2001/XMLSchema")  
  
schemaSet.Reprocess(schema)  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
XmlSchema schema = schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
schemaSet.Compile();  
  
XmlSchemaElement element = new XmlSchemaElement();  
schema.Items.Add(element);  
element.Name = "book";  
element.SchemaTypeName = new XmlQualifiedName("string", "http://www.w3.org/2001/XMLSchema");  
  
schemaSet.Reprocess(schema);  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="6f378-318">该架构无效。</span><span class="sxs-lookup"><span data-stu-id="6f378-318">The schema is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6f378-319">作为参数传递的 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6f378-319">The <see cref="T:System.Xml.Schema.XmlSchema" /> object passed as a parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6f378-320">作为参数传递的 <see cref="T:System.Xml.Schema.XmlSchema" /> 对象并不存在于 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中。</span><span class="sxs-lookup"><span data-stu-id="6f378-320">The <see cref="T:System.Xml.Schema.XmlSchema" /> object passed as a parameter does not already exist in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Schemas">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6f378-321">返回 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中 XML 架构定义语言 (XSD) 架构的集合。</span><span class="sxs-lookup"><span data-stu-id="6f378-321">Returns a collection of XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Schemas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ICollection Schemas() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public Function Schemas () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ Schemas();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6f378-322">返回 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中所有 XML 架构定义语言 (XSD) 架构的集合。</span><span class="sxs-lookup"><span data-stu-id="6f378-322">Returns a collection of all the XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="6f378-323"><see cref="T:System.Collections.ICollection" /> 对象，它包含已添加到 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中的所有架构。</span><span class="sxs-lookup"><span data-stu-id="6f378-323">An <see cref="T:System.Collections.ICollection" /> object containing all the schemas that have been added to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span> <span data-ttu-id="6f378-324">如果没有架构添加到 <see cref="T:System.Xml.Schema.XmlSchemaSet" />，则返回空的 <see cref="T:System.Collections.ICollection" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="6f378-324">If no schemas have been added to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />, an empty <see cref="T:System.Collections.ICollection" /> object is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f378-325">此方法返回间接添加到的架构<xref:System.Xml.Schema.XmlSchemaSet>因为它们已导入。</span><span class="sxs-lookup"><span data-stu-id="6f378-325">This method returns schemas that were added indirectly to the <xref:System.Xml.Schema.XmlSchemaSet> because they were imported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6f378-326"><xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A>方法相当于<xref:System.Xml.Schema.XmlSchemaCollection.GetEnumerator%2A>方法已过时<xref:System.Xml.Schema.XmlSchemaCollection>。</span><span class="sxs-lookup"><span data-stu-id="6f378-326">The <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> method is the equivalent of the <xref:System.Xml.Schema.XmlSchemaCollection.GetEnumerator%2A> method of the obsolete <xref:System.Xml.Schema.XmlSchemaCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f378-327">下面的示例演示如何循环访问中的所有架构<xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="6f378-327">The following example illustrates how to iterate over all the schemas in the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
  
Dim schema As XmlSchema  
  
For Each schema In schemaSet.Schemas()  
  
    schema.Write(Console.Out)  
  
Next  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
  
foreach (XmlSchema schema in schemaSet.Schemas())  
{  
    schema.Write(Console.Out);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Schemas (string targetNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ICollection Schemas(string targetNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Schemas (targetNamespace As String) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ Schemas(System::String ^ targetNamespace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetNamespace"><span data-ttu-id="6f378-328">架构 <c>targetNamespace</c> 属性。</span><span class="sxs-lookup"><span data-stu-id="6f378-328">The schema <c>targetNamespace</c> property.</span></span></param>
        <summary><span data-ttu-id="6f378-329">返回 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中属于给定命名空间的所有 XML 架构定义语言 (XSD) 架构的集合。</span><span class="sxs-lookup"><span data-stu-id="6f378-329">Returns a collection of all the XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that belong to the given namespace.</span></span></summary>
        <returns><span data-ttu-id="6f378-330"><see cref="T:System.Collections.ICollection" /> 对象，它包含已添加到 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的中的属于给定命名空间的所有架构。</span><span class="sxs-lookup"><span data-stu-id="6f378-330">An <see cref="T:System.Collections.ICollection" /> object containing all the schemas that have been added to the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that belong to the given namespace.</span></span> <span data-ttu-id="6f378-331">如果没有架构添加到 <see cref="T:System.Xml.Schema.XmlSchemaSet" />，则返回空的 <see cref="T:System.Collections.ICollection" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="6f378-331">If no schemas have been added to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />, an empty <see cref="T:System.Collections.ICollection" /> object is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f378-332">如果`targetNamespace`参数是`null`或<xref:System.String.Empty>，则返回所有没有命名空间的架构。</span><span class="sxs-lookup"><span data-stu-id="6f378-332">If the `targetNamespace` parameter is `null` or <xref:System.String.Empty>, then all schemas without a namespace are returned.</span></span>  
  
 <span data-ttu-id="6f378-333">此方法返回间接添加到的架构<xref:System.Xml.Schema.XmlSchemaSet>因为它们已导入。</span><span class="sxs-lookup"><span data-stu-id="6f378-333">This method returns schemas that were added indirectly to the <xref:System.Xml.Schema.XmlSchemaSet> because they were imported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6f378-334"><xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A>方法相当于<xref:System.Xml.Schema.XmlSchemaCollection.Item%2A>方法已过时<xref:System.Xml.Schema.XmlSchemaCollection>。</span><span class="sxs-lookup"><span data-stu-id="6f378-334">The <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> method is the equivalent of the <xref:System.Xml.Schema.XmlSchemaCollection.Item%2A> method of the obsolete <xref:System.Xml.Schema.XmlSchemaCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f378-335">下面的示例演示如何循环访问中的所有架构http://www.contoso.com/books中的命名空间<xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="6f378-335">The following example illustrates how to iterate over all the schemas in the http://www.contoso.com/books namespace in the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
  
Dim schema As XmlSchema  
  
For Each schema In schemaSet.Schemas("http://www.contoso.com/books")  
  
    schema.Write(Console.Out)  
  
Next  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
  
foreach (XmlSchema schema in schemaSet.Schemas("http://www.contoso.com/books"))  
{  
    schema.Write(Console.Out);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationEventHandler">
      <MemberSignature Language="C#" Value="public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Schema.ValidationEventHandler ValidationEventHandler" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Schema::ValidationEventHandler ^ ValidationEventHandler;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.ValidationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f378-336">指定一个事件处理程序，用于接收有关 XML 架构定义语言 (XSD) 架构验证错误的信息。</span><span class="sxs-lookup"><span data-stu-id="6f378-336">Specifies an event handler for receiving information about XML Schema definition language (XSD) schema validation errors.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f378-337">设置事件处理程序，用于接收有关架构验证错误的信息时<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>或<xref:System.Xml.Schema.XmlSchemaSet.Compile%2A>方法<xref:System.Xml.Schema.XmlSchemaSet>调用。</span><span class="sxs-lookup"><span data-stu-id="6f378-337">Sets an event handler for receiving information about schema validation errors when the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> or <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> methods of the <xref:System.Xml.Schema.XmlSchemaSet> are called.</span></span>  
  
 <span data-ttu-id="6f378-338">如果未定义事件处理程序，<xref:System.Xml.Schema.XmlSchemaException>上任何验证错误引发其中<xref:System.Xml.Schema.XmlSeverityType>是<xref:System.Xml.Schema.XmlSeverityType.Error>。</span><span class="sxs-lookup"><span data-stu-id="6f378-338">If an event handler is not defined, an <xref:System.Xml.Schema.XmlSchemaException> is thrown on any validation errors where the <xref:System.Xml.Schema.XmlSeverityType> is <xref:System.Xml.Schema.XmlSeverityType.Error>.</span></span> <span data-ttu-id="6f378-339">验证错误不会引发异常<xref:System.Xml.Schema.XmlSeverityType>的<xref:System.Xml.Schema.XmlSeverityType.Warning>。</span><span class="sxs-lookup"><span data-stu-id="6f378-339">Exceptions are not thrown for validation errors with an <xref:System.Xml.Schema.XmlSeverityType> of <xref:System.Xml.Schema.XmlSeverityType.Warning>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f378-340">下面的代码示例演示添加<xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler>验证针对架构的 XML 文档时捕获错误和警告。</span><span class="sxs-lookup"><span data-stu-id="6f378-340">The following code example illustrates adding a <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler> to capture errors and warnings when validating an XML document against a schema.</span></span>  
  
 [!code-cpp[XmlSchemaSetOverall Example#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaSetOverall Example/CPP/xmlschemasetexample.cpp#1)]
 [!code-csharp[XmlSchemaSetOverall Example#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaSetOverall Example/CS/xmlschemasetexample.cs#1)]
 [!code-vb[XmlSchemaSetOverall Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaSetOverall Example/VB/xmlschemasetexample.vb#1)]  
  
 <span data-ttu-id="6f378-341">该示例使用 books.xml 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="6f378-341">The example uses the books.xml file as an input.</span></span>  
  
 [!code-xml[XmlSchemaSetOverall Example#2](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaSetOverall Example/XML/books.xml#2)]  
  
 <span data-ttu-id="6f378-342">该示例使用 books.xsd 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="6f378-342">The example uses the books.xsd file as an input.</span></span>  
  
 [!code-xml[XmlSchemaSetOverall Example#3](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaSetOverall Example/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6f378-343">设置用于解析在架构的包含和导入元素中引用的命名空间或位置的 <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="6f378-343">Sets the <see cref="T:System.Xml.XmlResolver" /> used to resolve namespaces or locations referenced in include and import elements of a schema.</span></span></summary>
        <value><span data-ttu-id="6f378-344"><see cref="T:System.Xml.XmlResolver" />，用于解析在架构的包含和导入元素中引用的命名空间或位置。</span><span class="sxs-lookup"><span data-stu-id="6f378-344">The <see cref="T:System.Xml.XmlResolver" /> used to resolve namespaces or locations referenced in include and import elements of a schema.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f378-345"><xref:System.Xml.XmlResolver>的<xref:System.Xml.Schema.XmlSchemaSet>用于解析包含和导入的架构，元素的随时使用添加架构命名空间或中引用的位置<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>或<xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6f378-345">The <xref:System.Xml.XmlResolver> of an <xref:System.Xml.Schema.XmlSchemaSet> is used to resolve namespaces or locations referenced in include and import elements of a schema, any time a schema is added using the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> or <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> methods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6f378-346">外部命名空间或中引用的位置包括，导入和架构的重新定义元素均已解决方面包括或导入这些架构的基 URI。</span><span class="sxs-lookup"><span data-stu-id="6f378-346">External namespaces or locations referenced in include, import, and redefine elements of a schema are resolved with respect to the base URI of the schema that includes or imports them.</span></span> <span data-ttu-id="6f378-347">例如，如果包括或导入架构的基 URI 为空或`null`，则外部位置来解析相对于当前目录。</span><span class="sxs-lookup"><span data-stu-id="6f378-347">For example, if the base URI of the including or importing schema is empty or `null`, the external locations are resolved with respect to the current directory.</span></span> <span data-ttu-id="6f378-348"><xref:System.Xml.XmlUrlResolver>类用于解析外部架构默认情况下。</span><span class="sxs-lookup"><span data-stu-id="6f378-348">The <xref:System.Xml.XmlUrlResolver> class is used to resolve external schemas by default.</span></span> <span data-ttu-id="6f378-349">若要禁用解析包含、 导入，而重新定义架构的元素，<xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A>属性`null`。</span><span class="sxs-lookup"><span data-stu-id="6f378-349">To disable resolution of include, import, and redefine elements of a schema, set the <xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A> property to `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlResolver" />
      </Docs>
    </Member>
  </Members>
</Type>