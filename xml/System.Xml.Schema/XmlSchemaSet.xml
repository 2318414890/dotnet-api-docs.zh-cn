<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlSchemaSet.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5de049e0953bd01f68f7214056a7531dd4c85931d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">de049e0953bd01f68f7214056a7531dd4c85931d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Contains a cache of XML Schema definition language (XSD) schemas.</source>
          <target state="translated">包含 XML 架构定义语言 (XSD) 架构的缓存。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Do not use schemas from unknown or untrusted sources or locations.</source>
          <target state="translated">不要使用来自未知或不受信任的源或位置的架构。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Doing so will compromise the security of your code.</source>
          <target state="translated">这样会危及你的代码的安全性。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.</source>
          <target state="translated">XML 架构 （包括内联架构） 的本质上就容易受到拒绝服务攻击;不要在不受信任的情况下接受它们。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file.</source>
          <target state="translated">架构验证错误消息和异常可能会公开有关内容模型或架构文件的 URI 路径的敏感信息。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Be careful not to expose this information to untrusted callers.</source>
          <target state="translated">请注意不要公开此信息来不受信任的调用方。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Additional security considerations are covered in the "Security Considerations" section.</source>
          <target state="translated">在"安全注意事项"部分中介绍的其他安全注意事项。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is a cache or library where you can store XML Schema definition language (XSD) schemas.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 是一个缓存或库可以在其中存储 XML 架构定义语言 (XSD) 架构。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> improves performance by caching schemas in memory instead of accessing them from a file or a URL.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 通过将架构缓存在内存中，而不是从文件或 URL 访问架构，从而提高性能。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Each schema is identified by the namespace URI and location that was specified when the schema was added to the set.</source>
          <target state="translated">由命名空间 URI 标识每个架构和架构添加到集时的位置指定。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>You use the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Schemas%2A?displayProperty=nameWithType&gt;</ph> property to assign the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> object an XML reader should use for data validation.</source>
          <target state="translated">你使用<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Schemas%2A?displayProperty=nameWithType&gt;</ph>要分配属性<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>对象的 XML 读取器应该用于数据验证。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Security Considerations</source>
          <target state="translated">安全注意事项</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Do not use schemas from unknown or untrusted sources.</source>
          <target state="translated">不要使用来自未知或不可信源的架构。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Doing so will compromise the security of your code.</source>
          <target state="translated">这样会危及你的代码的安全性。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>External namespaces or locations referenced in include, import, and redefine elements of a schema are resolved with respect to the base URI of the schema that includes or imports them.</source>
          <target state="translated">外部命名空间或中引用的位置包括，导入和架构的重新定义元素均已解决方面包括或导入这些架构的基 URI。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>For example, if the base URI of the including or importing schema is empty or <ph id="ph1">`null`</ph>, the external locations are resolved with respect to the current directory.</source>
          <target state="translated">例如，如果包括或导入架构的基 URI 为空或<ph id="ph1">`null`</ph>，则外部位置来解析相对于当前目录。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> class is used to resolve external schemas by default.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>类用于解析外部架构默认情况下。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>To disable resolution of include, import, and redefine elements of a schema, set the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property to <ph id="ph2">`null`</ph>.</source>
          <target state="translated">若要禁用解析包含、 导入，而重新定义架构的元素，<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=nameWithType&gt;</ph>属性<ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class uses the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType&gt;</ph> class to parse and match regular expressions in an XML schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>类使用<ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType&gt;</ph>类来分析和匹配 XML 架构中的正则表达式。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Validation of pattern facets with regular expressions in an XML schema may involve increased CPU usage and should be avoided in high availability scenarios.</source>
          <target state="translated">使用 XML 架构中的正则表达式模式方面的验证可能涉及到增加的 CPU 使用率，应当避免在高可用性方案。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Exceptions raised as a result of using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class, such as the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> class may contain sensitive information that should not be exposed in untrusted scenarios.</source>
          <target state="translated">由于使用而引发的异常<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>类，如<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph>类可能包含不应在不受信任的方案中公开的敏感信息。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>For example, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A&gt;</ph> property of an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> returns the URI path to the schema file that caused the exception.</source>
          <target state="translated">例如，<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph>返回导致异常的架构文件的 URI 路径。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A&gt;</ph> property should not be exposed in untrusted scenarios.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A&gt;</ph>不应在不受信任的方案中公开属性。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Exceptions should be properly handled so that this sensitive information is not exposed in untrusted scenarios.</source>
          <target state="translated">应正确处理异常，以便在不受信任的情况下不公开此敏感信息。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>The following example validates an XML file using schemas stored in the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">以下示例使用 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 中存储的架构验证 XML 文件。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>The namespace in the XML file, <ph id="ph1">`urn:bookstore-schema`</ph>, identifies which schema in the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to use for validation.</source>
          <target state="translated">XML 文件 <ph id="ph1">`urn:bookstore-schema`</ph> 中的命名空间标识 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 中要用于验证的架构。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Input</source>
          <target state="translated">输入</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>The sample uses the following two input files.</source>
          <target state="translated">示例使用下列两个输入文件。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source><bpt id="p1">**</bpt>booksSchemaFail.xml:<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>booksSchemaFail.xml:<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source><bpt id="p1">**</bpt>books.xsd:<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>books.xsd:<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Output</source>
          <target state="translated">输出</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Validation Error: The element 'book' in namespace 'urn:bookstore-schema' has invalid child element 'author' in namespace 'urn:bookstore-schema'.</source>
          <target state="translated">验证错误：命名空间“urn:bookstore-schema”中的元素“book”在命名空间“urn:bookstore-schema”中具有无效子元素“author”。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Expected 'title' in namespace 'urn:bookstore-schema'.</source>
          <target state="translated">应为命名空间“urn:bookstore-schema”中的“title”。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Validation Error: The element 'author' in namespace 'urn:bookstore-schema' has invalid child element 'name' in namespace 'urn:bookstore-schema'.</source>
          <target state="translated">验证错误：命名空间“urn:bookstore-schema”中的元素“author”在命名空间“urn:bookstore-schema”中具有无效子元素“name”。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Expected 'first-name' in namespace 'urn:bookstore-schema'.</source>
          <target state="translated">应为命名空间“urn:bookstore-schema”中的“first-name”。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> object to use.</source>
          <target state="translated">要使用的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph>.</source>
          <target state="translated">使用指定的 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 初始化 <ph id="ph2">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> object passed as a parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">作为参数传递的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> 对象为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Adds the given XML Schema definition language (XSD) schema to the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">将给定的 XML 架构定义语言 (XSD) 架构添加到 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object to add to the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">添加到 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
          <source>Adds the given <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">将指定的 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 添加到 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object if the schema is valid.</source>
          <target state="translated">如果架构有效，则为 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
          <source>If the schema is not valid and a <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> is specified, then <ph id="ph2">&lt;see langword="null" /&gt;</ph> is returned and the appropriate validation event is raised.</source>
          <target state="translated">如果架构无效且指定了 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph>，则将返回 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 并引发适当的验证事件。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
          <source>Otherwise, an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaException" /&gt;</ph> is thrown.</source>
          <target state="translated">否则会引发 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> object already exists in the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method does nothing.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>对象已存在于<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>、<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>方法不执行任何操作。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
          <source>The functionality of this method is identical to that of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method.</source>
          <target state="translated">此方法的功能等同于的<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
          <source>The schema is not valid.</source>
          <target state="translated">该架构无效。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object passed as a parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">作为参数传递的 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 对象为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>Adds all the XML Schema definition language (XSD) schemas in the given <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">将给定的 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 中的所有 XML 架构定义语言 (XSD) 架构添加到 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>Before a schema can be added to an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, it has to be successfully preprocessed.</source>
          <target state="translated">可以将架构添加到之前<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>，它必须成功预处理。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>Preprocessing performs the following basic tasks.</source>
          <target state="translated">预处理执行以下基本任务。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.</source>
          <target state="translated">根据 W3C XML 架构的规则的结构化有效性检查该架构，但没有完全验证架构。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>References to internal and external schema components are resolved.</source>
          <target state="translated">对内部和外部架构组件的引用进行解析。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>Any imported or included schemas that are successfully retrieved are also added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">已成功检索到任何导入或包含架构也将添加到<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>Imported schemas are added as separate <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> objects, and included schemas are made a part of the including <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>.</source>
          <target state="translated">导入的架构添加为单独<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>对象和包括的架构进行的包括一部分<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to add is <ph id="ph3">`true`</ph>, all schemas in the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to add are added to the <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>若要将添加<ph id="ph3">`true`</ph>中的所有架构<ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>将添加到<ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to add is <ph id="ph3">`false`</ph>, each schema added is preprocessed before being added.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph>属性<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>若要将添加<ph id="ph3">`false`</ph>，添加每个架构在添加之前进行预处理。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>If any of the schemas in the newly added <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> fails to be preprocessed, no schemas are added; instead, an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> is thrown.</source>
          <target state="translated">如果任何中新添加的架构<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>无法进行预处理，不添加任何架构; 相反，<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph>引发。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>As a result, the following two code example are not equivalent.</source>
          <target state="translated">因此，下面的两个代码示例不是等效的。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>The previous two code examples are not equivalent.</source>
          <target state="translated">前面的两个代码示例不是等效的。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>In the first example, if an invalid schema exists in <ph id="ph1">`schemaSet1`</ph> and its <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property is set to <ph id="ph3">`false`</ph>, no schemas are added to <ph id="ph4">`schemaSet`</ph>.</source>
          <target state="translated">在第一个示例中，如果了无效的架构中存在<ph id="ph1">`schemaSet1`</ph>及其<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph>属性设置为<ph id="ph3">`false`</ph>，任何架构将添加到<ph id="ph4">`schemaSet`</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>In the second example, a number of schemas can be added to <ph id="ph1">`schemaSet`</ph> before an invalid schema is encountered and an exception is thrown.</source>
          <target state="translated">在第二个示例中，可以将大量的架构添加到<ph id="ph1">`schemaSet`</ph>遇到了无效的架构和引发异常之前。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>The following code example illustrates adding schemas to an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, then adding the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to a new <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> using the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method.</source>
          <target state="translated">下面的代码示例演示添加架构写入<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>，然后添加<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>到新<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>使用<ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>A schema in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 中的架构无效。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> object passed as a parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">作为参数传递的 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 对象为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>The schema <bpt id="p1">&lt;c&gt;</bpt>targetNamespace<ept id="p1">&lt;/c&gt;</ept> property, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the <bpt id="p2">&lt;c&gt;</bpt>targetNamespace<ept id="p2">&lt;/c&gt;</ept> specified in the schema.</source>
          <target state="translated">架构 <bpt id="p1">&lt;c&gt;</bpt>targetNamespace<ept id="p1">&lt;/c&gt;</ept> 属性，或使用架构中指定的 <bpt id="p2">&lt;c&gt;</bpt>targetNamespace<ept id="p2">&lt;/c&gt;</ept> 的 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>The URL that specifies the schema to load.</source>
          <target state="translated">指定要加载的架构的 URL。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>Adds the XML Schema definition language (XSD) schema at the URL specified to the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">将位于指定 URL 的 XML 架构定义语言 (XSD) 架构添加到 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object if the schema is valid.</source>
          <target state="translated">如果架构有效，则为 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>If the schema is not valid and a <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> is specified, then <ph id="ph2">&lt;see langword="null" /&gt;</ph> is returned and the appropriate validation event is raised.</source>
          <target state="translated">如果架构无效且指定了 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph>，则将返回 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 并引发适当的验证事件。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>Otherwise, an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaException" /&gt;</ph> is thrown.</source>
          <target state="translated">否则会引发 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>Before a schema can be added to an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, it has to be successfully preprocessed.</source>
          <target state="translated">可以将架构添加到之前<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>，它必须成功预处理。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>Preprocessing performs the following basic tasks.</source>
          <target state="translated">预处理执行以下基本任务。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.</source>
          <target state="translated">根据 W3C XML 架构的规则的结构化有效性检查该架构，但没有完全验证架构。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>References to internal and external schema components are resolved.</source>
          <target state="translated">对内部和外部架构组件的引用进行解析。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>Any imported or included schemas that are successfully retrieved are also added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">已成功检索到任何导入或包含架构也将添加到<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>Imported schemas are added as separate <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> objects, and included schemas are made a part of the including <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>.</source>
          <target state="translated">导入的架构添加为单独<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>对象和包括的架构进行的包括一部分<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method.</source>
          <target state="translated">以下是使用时要考虑的重要说明<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>Adding a schema to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> with the same target namespace and schema location URL as a schema already contained within the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> will return the original schema object.</source>
          <target state="translated">添加到架构<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>具有相同目标命名空间和架构位置 URL 内已包含架构作为<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>将返回原始的架构对象。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>When a new schema is successfully added to an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">当新的架构已成功添加到<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph>属性<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>设置为<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>Any include or import elements encountered in an XML schema are resolved when the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method is called.</source>
          <target state="translated">时，在 XML 架构中遇到任何包含或导入元素将解决<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>调用方法。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>Failure to resolve include and import elements results in a schema validation warning and if no <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler&gt;</ph> has been specified for the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> object, these warning will not be reported.</source>
          <target state="translated">无法解析包含和导入架构验证警告的元素导致而且如果没有<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler&gt;</ph>为指定了<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>对象，这些警告将不会报告。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>If a schema with the same target namespace as a schema that already exists in the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is added to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, both schemas are added.</source>
          <target state="translated">如果具有架构中已存在相同的目标命名空间的架构<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>添加到<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>，添加两个架构。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>This behavior differs from the obsolete <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> object.</source>
          <target state="translated">此行为不同于过时<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> has the ability to use the target namespace defined in a schema, rather than requiring the target namespace be specified as a parameter when the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>能够使用一个架构中定义，而无需作为参数指定的目标命名空间的目标命名空间时<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>调用方法。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>Specifying <ph id="ph1">`null`</ph> in the <ph id="ph2">`targetNamespace`</ph> parameter of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method instructs the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to use the target namespace defined in the schema, as illustrated in the following code example.</source>
          <target state="translated">指定<ph id="ph1">`null`</ph>中<ph id="ph2">`targetNamespace`</ph>参数<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>方法指示<ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>若要使用的架构中定义的目标命名空间，如下面的代码示例中所示。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>In the code example above, <ph id="ph1">`null`</ph> is specified as the <ph id="ph2">`targetNamespace`</ph> parameter to the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method.</source>
          <target state="translated">在上面的代码示例<ph id="ph1">`null`</ph>指定为<ph id="ph2">`targetNamespace`</ph>参数<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>As a result, the <ph id="ph1">`targetNamespace`</ph> defined in the books.xml file is used.</source>
          <target state="translated">因此，<ph id="ph1">`targetNamespace`</ph>定义 books.xml 中使用文件。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>In this case, the result of calling the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method would be identical if <ph id="ph2">http://www.contoso.com/books</ph> had been specified as the <ph id="ph3">`targetNamespace`</ph> parameter.</source>
          <target state="translated">在此情况下，调用<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>将是相同的方法如果<ph id="ph2">http://www.contoso.com/books</ph>已被指定为<ph id="ph3">`targetNamespace`</ph>参数。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>W3C XML Schema allows schemas without a target namespace to be included in schemas with a target namespace defined.</source>
          <target state="translated">W3C XML 架构允许没有目标命名空间包括在架构中，与定义的目标命名空间的架构。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>In this case, the schema without a target namespace defined is coerced into the target namespace of the including schema.</source>
          <target state="translated">在这种情况下，没有定义的目标命名空间的架构是强制转换为包括架构的目标命名空间。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>The included schema is treated as if it had that target namespace defined.</source>
          <target state="translated">包含的架构被视为已定义该目标命名空间。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>Similarly, schemas without a target namespace can be added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> and coerced into the target namespace specified by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method, as illustrated in the following example.</source>
          <target state="translated">同样，可以将没有目标命名空间的架构添加到<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>并被强迫由指定的目标命名空间<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>方法，如下面的示例中所示。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>If the schema above is added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> with the target namespace <ph id="ph2">http://www.contoso.com/new/targetnamespace</ph> (as shown in the code below), it is treated as if the target namespace declared in the schema was <ph id="ph3">`http://www.contoso.com/new/targetnamespace`</ph>.</source>
          <target state="translated">如果上面的架构添加到<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>目标命名空间<ph id="ph2">http://www.contoso.com/new/targetnamespace</ph>（如下面的代码所示），它将被视为架构中声明的目标命名空间已<ph id="ph3">`http://www.contoso.com/new/targetnamespace`</ph>。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>The following code example adds the <ph id="ph1">http://www.contoso.com/books.xsd</ph> schema with a target namespace of <ph id="ph2">http://www.contoso.com/books</ph> to the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">下面的代码示例将添加<ph id="ph1">http://www.contoso.com/books.xsd</ph>具有的目标命名空间架构<ph id="ph2">http://www.contoso.com/books</ph>到<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>The example uses the <ph id="ph1">`books.xsd`</ph> file as input.</source>
          <target state="translated">示例使用 <ph id="ph1">`books.xsd`</ph> 文件作为输入。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>The schema is not valid.</source>
          <target state="translated">该架构无效。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>The URL passed as a parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated">作为参数传递的 URL 为 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>The schema <bpt id="p1">&lt;c&gt;</bpt>targetNamespace<ept id="p1">&lt;/c&gt;</ept> property, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the <bpt id="p2">&lt;c&gt;</bpt>targetNamespace<ept id="p2">&lt;/c&gt;</ept> specified in the schema.</source>
          <target state="translated">架构 <bpt id="p1">&lt;c&gt;</bpt>targetNamespace<ept id="p1">&lt;/c&gt;</ept> 属性，或使用架构中指定的 <bpt id="p2">&lt;c&gt;</bpt>targetNamespace<ept id="p2">&lt;/c&gt;</ept> 的 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>Adds the XML Schema definition language (XSD) schema contained in the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 中包含的 XML 架构定义语言 (XSD) 架构添加到 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object if the schema is valid.</source>
          <target state="translated">如果架构有效，则为 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>If the schema is not valid and a <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> is specified, then <ph id="ph2">&lt;see langword="null" /&gt;</ph> is returned and the appropriate validation event is raised.</source>
          <target state="translated">如果架构无效且指定了 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph>，则将返回 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 并引发适当的验证事件。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>Otherwise, an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaException" /&gt;</ph> is thrown.</source>
          <target state="translated">否则会引发 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>Before a schema can be added to an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, it has to be successfully preprocessed.</source>
          <target state="translated">可以将架构添加到之前<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>，它必须成功预处理。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>Preprocessing performs the following basic tasks.</source>
          <target state="translated">预处理执行以下基本任务。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.</source>
          <target state="translated">根据 W3C XML 架构的规则的结构化有效性检查该架构，但没有完全验证架构。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>References to internal and external schema components are resolved.</source>
          <target state="translated">对内部和外部架构组件的引用进行解析。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>Any imported or included schemas that are successfully retrieved are also added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">已成功检索到任何导入或包含架构也将添加到<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>Imported schemas are added as separate <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> objects, and included schemas are made a part of the including <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>.</source>
          <target state="translated">导入的架构添加为单独<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>对象和包括的架构进行的包括一部分<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method.</source>
          <target state="translated">以下是使用时要考虑的重要说明<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>Successfully retrieved schemas imported or included by the schemas contained in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> are also added to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">已成功检索的架构导入或中包含的架构包括<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>也将添加到<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> is not positioned on the root element, an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> is thrown unless the current item is an element.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>未定位在的根元素，<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph>引发除非当前项是一个元素。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>If the current item is an <ph id="ph1">`xs:schema`</ph> element, the schema document is read into the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>; otherwise, an <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> is thrown because the schema is not valid.</source>
          <target state="translated">如果当前项<ph id="ph1">`xs:schema`</ph>元素，架构文档读取到<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>; 否则为<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph>因为架构不是有效引发。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> is positioned over a sequence of XML nodes, only the first node in the sequence is added.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>位于通过 XML 节点的序列，添加仅在序列中的第一个节点。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>If the schema was created from a <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method call, the value of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> property is ignored, because inline schema processing is not applied for W3C XML Schema documents.</source>
          <target state="translated">如果从已创建的架构<ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>方法调用、 的值<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph>属性被忽略，因为内联架构处理不应用于 W3C XML 架构文档。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> is not used to resolve references to namespaces or schema locations in include and import elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>属性<ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>不用于解析命名空间或架构中的位置的引用包含和导入元素。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>Instead, the <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is used.</source>
          <target state="translated">相反，<ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>属性<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>使用。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> has the ability to use the target namespace defined in a schema, rather than requiring the target namespace be specified as a parameter when the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>能够使用一个架构中定义，而无需作为参数指定的目标命名空间的目标命名空间时<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>调用方法。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>Specifying <ph id="ph1">`null`</ph> or <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> to the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method instructs the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to use the target namespace defined in the schema.</source>
          <target state="translated">指定<ph id="ph1">`null`</ph>或<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>到<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>方法指示<ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>若要使用的架构中定义的目标命名空间。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>For an example of this behavior, see the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method.</source>
          <target state="translated">此行为的一个示例，请参阅<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>The remaining functionality of this method is identical to that of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method.</source>
          <target state="translated">此方法的其他功能等同于的<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>The following code example adds the books.xsd schema contained in the <ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph> with a target namespace of <ph id="ph2">http://www.contoso.com/books</ph> to the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">下面的代码示例将 books.xsd 架构中包含添加<ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph>与目标命名空间的<ph id="ph2">http://www.contoso.com/books</ph>到<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>The schema is not valid.</source>
          <target state="translated">该架构无效。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object passed as a parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">作为参数传递的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> 对象为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaSet.CompilationSettings">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">获取或设置 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.CompilationSettings">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.CompilationSettings">
          <source>The default is an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /&gt;</ph> instance with the <ph id="ph2">&lt;see cref="P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck" /&gt;</ph> property set to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">默认为 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /&gt;</ph> 属性设置为 <ph id="ph3">&lt;see langword="true" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck" /&gt;</ph> 实例。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.CompilationSettings">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCompilationSettings&gt;</ph> class specifies Unique Particle Attribution (UPA) validation options for the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCompilationSettings&gt;</ph>类指定唯一粒子归属 (UPA) 验证选项<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.CompilationSettings">
          <source>For more information about enabling UPA validation checks, see the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck%2A&gt;</ph> property.</source>
          <target state="translated">有关启用 UPA 验证检查的详细信息，请参阅<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>Compiles the XML Schema definition language (XSD) schemas added to the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> into one logical schema.</source>
          <target state="translated">将添加到 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 的 XML 架构定义语言 (XSD) 架构编译成一个逻辑架构。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>This method is called automatically when validation is needed and the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> has not been previously compiled—for example, when an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is used as an input to create an <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> object in the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt;</ph> property of an <ph id="ph5">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object.</source>
          <target state="translated">需要验证时自动调用此方法与<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>以前尚未编译-例如，当<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>作为输入用于创建<ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph>对象在<ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt;</ph>属性<ph id="ph5">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is already in the compiled state, this method will not recompile the schemas.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>是已在编译的状态，此方法不会重新编译架构。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>If this method executes successfully, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">如果此方法成功执行，<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph>属性设置为<ph id="ph2">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>Schemas that have been previously compiled by an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> are not recompiled.</source>
          <target state="translated">以前编译的架构<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>不重新编译。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>However, schemas that were compiled using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> will be recompiled.</source>
          <target state="translated">但是，使用编译的架构<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph>方法<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>将重新编译。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>You need to call the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> method if you have changed a schema (or one of its includes/imports) after adding it to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">你需要调用<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph>方法如果你已将其添加到后更改架构 （或其的包括/导入之一） <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> method will check the schema for structural validity according to the rules of W3C XML Schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph>方法将检查根据 W3C XML 架构的规则的结构化有效性的架构。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>However, it will not perform a full validation check.</source>
          <target state="translated">但是，它不会执行完整的验证检查。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>It will also resolve references to internal and external schema components.</source>
          <target state="translated">它还会解析到内部和外部架构组件的引用。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>Any imported or included schemas that are successfully retrieved are also added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">已成功检索到任何导入或包含架构也将添加到<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>Imported schemas are added as separate <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> objects while included schemas are made part of the including <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>.</source>
          <target state="translated">导入的架构添加为单独<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>对象而被包含架构所做的包括一部分<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>If the call to reprocess is successful, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property is set to false.</source>
          <target state="translated">若要重新处理的调用是否成功，<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph>属性设置为 false。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>An error occurred when validating and compiling the schemas in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">当验证和编译 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 中的架构时发生错误。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Indicates whether an XML Schema definition language (XSD) schema is in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">指示 XML 架构定义语言 (XSD) 架构是否位于 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Contains(System.String)">
          <source>The schema <bpt id="p1">&lt;c&gt;</bpt>targetNamespace<ept id="p1">&lt;/c&gt;</ept> property.</source>
          <target state="translated">架构 <bpt id="p1">&lt;c&gt;</bpt>targetNamespace<ept id="p1">&lt;/c&gt;</ept> 属性。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Contains(System.String)">
          <source>Indicates whether an XML Schema definition language (XSD) schema with the specified target namespace URI is in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">指示具有指定目标命名空间 URI 的 XML 架构定义语言 (XSD) 架构是否位于 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Contains(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a schema with the specified target namespace URI is in the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果具有指定目标命名空间 URI 的架构位于 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Contains(System.String)">
          <source>Schemas that are indirectly added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> are detected by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Contains%2A&gt;</ph> method; for example, imported schemas.</source>
          <target state="translated">间接添加到的架构<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>检测到的<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Contains%2A&gt;</ph>方法; 例如，如果导入的架构。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Contains(System.String)">
          <source>As a result, if a schema for the <ph id="ph1">http://www.contoso.com/retail</ph> namespace which imports a schema for the <ph id="ph2">http://www.contoso.com/books</ph> namespace is added to the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, calling <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.Contains%2A&gt;</ph> with <ph id="ph5">`http://www.contoso.com/books`</ph> as a parameter, it returns <ph id="ph6">`true`</ph>.</source>
          <target state="translated">因此，如果架构<ph id="ph1">http://www.contoso.com/retail</ph>导入的架构命名空间<ph id="ph2">http://www.contoso.com/books</ph>命名空间添加到<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>，则调用<ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.Contains%2A&gt;</ph>与<ph id="ph5">`http://www.contoso.com/books`</ph>作为参数，它将返回<ph id="ph6">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)">
          <source>Indicates whether the specified XML Schema definition language (XSD) <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object is in the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">指示指定的 XML 架构定义语言 (XSD) <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 对象是否位于 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object is in the <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 对象在 <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 中，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> passed as a parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">作为参数传递的 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
          <source>The array to copy the objects to.</source>
          <target state="translated">要向其复制对象的数组。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
          <source>The index in the array where copying will begin.</source>
          <target state="translated">数组中开始复制处的索引。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
          <source>Copies all the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> objects from the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> to the given array, starting at the given index.</source>
          <target state="translated">将 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 中的所有 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 对象复制到起始位置为给定索引的给定数组中。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
          <source>The following example copies all the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> objects in the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to an array of <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> objects.</source>
          <target state="translated">下面的示例将所有复制<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>中的对象<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>指向数组<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>对象。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaSet.Count">
          <source>Gets the number of logical XML Schema definition language (XSD) schemas in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 中逻辑 XML 架构定义语言 (XSD) 架构的数量。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.Count">
          <source>The number of logical schemas in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 中的逻辑架构数。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.Count">
          <source>If there are two schemas for the namespace <ph id="ph1">`http://www.contoso.com`</ph> in the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Count%2A&gt;</ph> property would return 1 because the schemas are treated as a single logical schema for validation purposes.</source>
          <target state="translated">如果没有命名空间的两个架构<ph id="ph1">`http://www.contoso.com`</ph>中<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>、<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Count%2A&gt;</ph>属性将返回 1，因为架构被视为单个逻辑架构来进行验证。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.Count">
          <source>However, if a schema for the namespace <ph id="ph1">`http://www.contoso.com/retail`</ph> imported a schema for the <ph id="ph2">`http://www.contoso.com/books`</ph> namespace, the value of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Count%2A&gt;</ph> property would be 2.</source>
          <target state="translated">但是，如果用于命名空间的架构<ph id="ph1">`http://www.contoso.com/retail`</ph>导入的架构<ph id="ph2">`http://www.contoso.com/books`</ph>命名空间的值<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Count%2A&gt;</ph>属性将为 2。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaSet.GlobalAttributes">
          <source>Gets all the global attributes in all the XML Schema definition language (XSD) schemas in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 中所有 XML 架构定义语言 (XSD) 架构的所有全局特性。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.GlobalAttributes">
          <source>The collection of global attributes.</source>
          <target state="translated">属性特性的集合。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaSet.GlobalElements">
          <source>Gets all the global elements in all the XML Schema definition language (XSD) schemas in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 中所有 XML 架构定义语言 (XSD) 架构的所有全局元素。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.GlobalElements">
          <source>The collection of global elements.</source>
          <target state="translated">全局元素的集合。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaSet.GlobalTypes">
          <source>Gets all of the global simple and complex types in all the XML Schema definition language (XSD) schemas in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">获取 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 中所有 XML 架构定义语言 (XSD) 架构的所有全局简单和复杂类型。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.GlobalTypes">
          <source>The collection of global simple and complex types.</source>
          <target state="translated">全局简单和复杂类型的集合。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.GlobalTypes">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.GlobalTypes%2A&gt;</ph> property always returns a type that represents the <ph id="ph2">`xs:anyType`</ph> complex type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.GlobalTypes%2A&gt;</ph>属性始终返回一个表示类型<ph id="ph2">`xs:anyType`</ph>复杂类型。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaSet.IsCompiled">
          <source>Gets a value that indicates whether the XML Schema definition language (XSD) schemas in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> have been compiled.</source>
          <target state="translated">获取一个值指示 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 中的 XML 架构定义语言 (XSD) 架构是否已编译的值。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.IsCompiled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the schemas in the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> have been compiled since the last time a schema was added or removed from the <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 中的架构自上次在 <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 中添加或移除以来已被编译，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.IsCompiled">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property is not affected if schemas are edited while in the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">如果架构在 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> 中编辑，<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 属性不受影响。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.IsCompiled">
          <source>Updates of the individual schemas in the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> are not tracked.</source>
          <target state="translated">不跟踪对 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 中各个架构的更新。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.IsCompiled">
          <source>As a result, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property can be <ph id="ph2">`true`</ph> even though one of the schemas contained in the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> has been altered, as long as no schemas were added or removed from the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">因此，只要 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> 中没有添加或移除任何架构，即使 <ph id="ph2">`true`</ph> 中包含的一个架构已更改，<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 属性也可以为 <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.IsCompiled">
          <source>For an example of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property, see the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> method.</source>
          <target state="translated">有关的示例<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph>属性，请参阅<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaSet.NameTable">
          <source>Gets the default <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> used by the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> when loading new XML Schema definition language (XSD) schemas.</source>
          <target state="translated">获取加载新的 XML 架构定义语言 (XSD) 架构时 <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> 使用的默认 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.NameTable">
          <source>A table of atomized string objects.</source>
          <target state="translated">原子化字符串对象表。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object to remove from the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">要从 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 中移除的 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)">
          <source>Removes the specified XML Schema definition language (XSD) schema from the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">从 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 移除指定的 XML 架构定义语言 (XSD) 架构。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object removed from the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the schema was not found in the <ph id="ph4">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">从 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 中移除的 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 对象，或如果在 <ph id="ph4">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 中未找到该架构，则为 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)">
          <source>Removing a schema from the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> sets the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">删除从架构<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>设置<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph>属性<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)">
          <source>The following example illustrates adding multiple schemas to an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, then removing one of the schemas using the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Remove%2A&gt;</ph> method.</source>
          <target state="translated">下面的示例演示添加到多个架构<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>，然后删除其中一个使用的架构<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Remove%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)">
          <source>The schema is not a valid schema.</source>
          <target state="translated">此架构不是有效的架构。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> passed as a parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">作为参数传递的 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object to remove from the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">要从 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 中移除的 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
          <source>Removes the specified XML Schema definition language (XSD) schema and all the schemas it imports from the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">从 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 中移除指定的 XML 架构定义语言 (XSD) 架构和它导入的所有架构。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object and all its imports were successfully removed; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果已成功移除 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 对象和其导入的所有内容，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph> method removes the specified schema and all the schemas it imports from the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, as long as there are no dependencies on the schema or its imported schemas.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph>方法中删除指定的架构和它从中导入的所有架构<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>，只要有不依赖于架构或其导入的架构。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
          <source>If there are dependencies on the schema or its imported schemas in the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, nothing is removed and <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">如果不存在架构或在其导入的架构上的依赖关系<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>，移除任何内容和<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph>返回<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
          <source>If <ph id="ph1">`false`</ph> is returned and a <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler&gt;</ph> is defined, a warning is sent to the event handler describing the dependencies.</source>
          <target state="translated">如果<ph id="ph1">`false`</ph>返回和<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler&gt;</ph>是定义，警告被发送到事件处理程序描述的相关性。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
          <source>If the specified schema imports other schemas and the specified schema was previously removed with the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Remove%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph> method will not remove the imported schemas and will return <ph id="ph3">`false`</ph>.</source>
          <target state="translated">如果指定的架构导入其他架构和以前移除了指定的架构<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Remove%2A&gt;</ph>方法，<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph>方法不会删除导入的架构并将返回<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
          <source>For example, if <ph id="ph1">`parentSchema`</ph> imports <ph id="ph2">`childSchema1`</ph> and <ph id="ph3">`childSchema2`</ph> the following code will only remove <ph id="ph4">`parentSchema`</ph>, but not the imported <ph id="ph5">`childSchema1`</ph> and <ph id="ph6">`childSchema2`</ph> schemas:</source>
          <target state="translated">例如，如果<ph id="ph1">`parentSchema`</ph>导入<ph id="ph2">`childSchema1`</ph>和<ph id="ph3">`childSchema2`</ph>下面的代码只会删除<ph id="ph4">`parentSchema`</ph>，但不是导入<ph id="ph5">`childSchema1`</ph>和<ph id="ph6">`childSchema2`</ph>架构：</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
          <source>The following code will remove the <ph id="ph1">`parentSchema`</ph> and the imported schemas:</source>
          <target state="translated">下面的代码将删除<ph id="ph1">`parentSchema`</ph>和导入的架构：</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph> method has no effect on the state of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph>方法不起作用的状态<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
          <source>The following code example illustrates adding multiple schemas to an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, then removing one of the schemas and all the schemas it imports using the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph> method.</source>
          <target state="translated">下面的代码示例演示了添加到多个架构<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>，然后删除其中一个架构及其导入使用的所有架构<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> passed as a parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">作为参数传递的 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>The schema to reprocess.</source>
          <target state="translated">要重新处理的架构。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>Reprocesses an XML Schema definition language (XSD) schema that already exists in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">重新处理已经存在于 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 中的 XML 架构定义语言 (XSD) 架构。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object if the schema is a valid schema.</source>
          <target state="translated">如果架构有效，则为 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>If the schema is not valid and a <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> is specified, <ph id="ph2">&lt;see langword="null" /&gt;</ph> is returned and the appropriate validation event is raised.</source>
          <target state="translated">如果架构无效且指定了 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph>，则将返回 <ph id="ph2">&lt;see langword="null" /&gt;</ph> 并引发适当的验证事件。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>Otherwise, an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaException" /&gt;</ph> is thrown.</source>
          <target state="translated">否则会引发 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaException" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>Reprocessing a schema performs all the preprocessing steps performed on a schema when the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method is called.</source>
          <target state="translated">重新处理架构执行针对架构执行的所有预处理步骤时<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>调用方法。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>If the call to <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> is successful, the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property is set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">如果调用<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph>成功，<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph>属性设置为<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>The Reprocess method should be used after a schema in the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> has been modified, after the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> has performed compilation.</source>
          <target state="translated">重新处理方法应使用后架构<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>已被修改，之后<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>执行编译。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>You need to call the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> method if you have changed a schema (or one of its includes/imports) after adding it to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">你需要调用<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph>方法如果你已将其添加到后更改架构 （或其的包括/导入之一） <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> method will check the schema for structural validity according to the rules of W3C XML Schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph>方法将检查根据 W3C XML 架构的规则的结构化有效性的架构。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>However, it will not perform a full validation check.</source>
          <target state="translated">但是，它不会执行完整的验证检查。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>It will also resolve references to internal and external schema components.</source>
          <target state="translated">它还会解析到内部和外部架构组件的引用。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>Any imported or included schemas that are successfully retrieved are also added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">已成功检索到任何导入或包含架构也将添加到<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>Imported schemas are added as separate <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> objects while included schemas are made part of the including <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>.</source>
          <target state="translated">导入的架构添加为单独<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>对象而被包含架构所做的包括一部分<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>If the call to reprocess is successful, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property is set to false.</source>
          <target state="translated">若要重新处理的调用是否成功，<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph>属性设置为 false。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>The following example illustrates reprocessing a schema added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">下面的示例演示如何重新处理添加到架构<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>After the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is compiled using the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph> method, and the schema added to the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is modified, the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property will be set to <ph id="ph5">`true`</ph>, even though a schema in the <ph id="ph6">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> has been modified.</source>
          <target state="translated">后<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>使用编译<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph>方法，并添加到架构<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>修改时，<ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph>属性将设置为<ph id="ph5">`true`</ph>，即使在架构<ph id="ph6">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>已被修改。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> method performs all the preprocessing performed by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method and sets the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">调用<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph>方法执行执行的所有预处理<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>方法和集<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph>属性<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>The schema is not valid.</source>
          <target state="translated">该架构无效。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object passed as a parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">作为参数传递的 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 对象为 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object passed as a parameter does not already exist in the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">作为参数传递的 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 对象并不存在于 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Returns a collection of XML Schema definition language (XSD) schemas in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">返回 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 中 XML 架构定义语言 (XSD) 架构的集合。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas">
          <source>Returns a collection of all the XML Schema definition language (XSD) schemas in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">返回 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 中所有 XML 架构定义语言 (XSD) 架构的集合。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object containing all the schemas that have been added to the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 对象，它包含已添加到 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 中的所有架构。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas">
          <source>If no schemas have been added to the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>, an empty <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object is returned.</source>
          <target state="translated">如果没有架构添加到 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>，则返回空的 <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas">
          <source>This method returns schemas that were added indirectly to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> because they were imported.</source>
          <target state="translated">此方法返回间接添加到的架构<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>因为它们已导入。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt;</ph> method is the equivalent of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaCollection.GetEnumerator%2A&gt;</ph> method of the obsolete <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt;</ph>方法相当于<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaCollection.GetEnumerator%2A&gt;</ph>方法已过时<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas">
          <source>The following example illustrates how to iterate over all the schemas in the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">下面的示例演示如何循环访问中的所有架构<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)">
          <source>The schema <bpt id="p1">&lt;c&gt;</bpt>targetNamespace<ept id="p1">&lt;/c&gt;</ept> property.</source>
          <target state="translated">架构 <bpt id="p1">&lt;c&gt;</bpt>targetNamespace<ept id="p1">&lt;/c&gt;</ept> 属性。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)">
          <source>Returns a collection of all the XML Schema definition language (XSD) schemas in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> that belong to the given namespace.</source>
          <target state="translated">返回 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 中属于给定命名空间的所有 XML 架构定义语言 (XSD) 架构的集合。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object containing all the schemas that have been added to the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> that belong to the given namespace.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 对象，它包含已添加到 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 的中的属于给定命名空间的所有架构。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)">
          <source>If no schemas have been added to the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>, an empty <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object is returned.</source>
          <target state="translated">如果没有架构添加到 <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>，则返回空的 <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> 对象。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)">
          <source>If the <ph id="ph1">`targetNamespace`</ph> parameter is <ph id="ph2">`null`</ph> or <ph id="ph3">&lt;xref:System.String.Empty&gt;</ph>, then all schemas without a namespace are returned.</source>
          <target state="translated">如果<ph id="ph1">`targetNamespace`</ph>参数是<ph id="ph2">`null`</ph>或<ph id="ph3">&lt;xref:System.String.Empty&gt;</ph>，则返回所有没有命名空间的架构。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)">
          <source>This method returns schemas that were added indirectly to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> because they were imported.</source>
          <target state="translated">此方法返回间接添加到的架构<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>因为它们已导入。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt;</ph> method is the equivalent of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaCollection.Item%2A&gt;</ph> method of the obsolete <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt;</ph>方法相当于<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaCollection.Item%2A&gt;</ph>方法已过时<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)">
          <source>The following example illustrates how to iterate over all the schemas in the <ph id="ph1">http://www.contoso.com/books</ph> namespace in the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">下面的示例演示如何循环访问中的所有架构<ph id="ph1">http://www.contoso.com/books</ph>中的命名空间<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="E:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler">
          <source>Specifies an event handler for receiving information about XML Schema definition language (XSD) schema validation errors.</source>
          <target state="translated">指定一个事件处理程序，用于接收有关 XML 架构定义语言 (XSD) 架构验证错误的信息。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler">
          <source>Sets an event handler for receiving information about schema validation errors when the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph> methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> are called.</source>
          <target state="translated">设置事件处理程序，用于接收有关架构验证错误的信息时<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph>方法<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>调用。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler">
          <source>If an event handler is not defined, an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> is thrown on any validation errors where the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSeverityType&gt;</ph> is <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSeverityType.Error&gt;</ph>.</source>
          <target state="translated">如果未定义事件处理程序，<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph>上任何验证错误引发其中<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSeverityType&gt;</ph>是<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSeverityType.Error&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler">
          <source>Exceptions are not thrown for validation errors with an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSeverityType&gt;</ph> of <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSeverityType.Warning&gt;</ph>.</source>
          <target state="translated">验证错误不会引发异常<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSeverityType&gt;</ph>的<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSeverityType.Warning&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler">
          <source>The following code example illustrates adding a <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler&gt;</ph> to capture errors and warnings when validating an XML document against a schema.</source>
          <target state="translated">下面的代码示例演示添加<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler&gt;</ph>验证针对架构的 XML 文档时捕获错误和警告。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler">
          <source>The example uses the books.xml file as an input.</source>
          <target state="translated">该示例使用 books.xml 文件作为输入。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler">
          <source>The example uses the books.xsd file as an input.</source>
          <target state="translated">该示例使用 books.xsd 文件作为输入。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaSet.XmlResolver">
          <source>Sets the <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> used to resolve namespaces or locations referenced in include and import elements of a schema.</source>
          <target state="translated">设置用于解析在架构的包含和导入元素中引用的命名空间或位置的 <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.XmlResolver">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> used to resolve namespaces or locations referenced in include and import elements of a schema.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph>，用于解析在架构的包含和导入元素中引用的命名空间或位置。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.XmlResolver">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> of an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is used to resolve namespaces or locations referenced in include and import elements of a schema, any time a schema is added using the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>的<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>用于解析包含和导入的架构，元素的随时使用添加架构命名空间或中引用的位置<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>或<ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.XmlResolver">
          <source>External namespaces or locations referenced in include, import, and redefine elements of a schema are resolved with respect to the base URI of the schema that includes or imports them.</source>
          <target state="translated">外部命名空间或中引用的位置包括，导入和架构的重新定义元素均已解决方面包括或导入这些架构的基 URI。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.XmlResolver">
          <source>For example, if the base URI of the including or importing schema is empty or <ph id="ph1">`null`</ph>, the external locations are resolved with respect to the current directory.</source>
          <target state="translated">例如，如果包括或导入架构的基 URI 为空或<ph id="ph1">`null`</ph>，则外部位置来解析相对于当前目录。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.XmlResolver">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> class is used to resolve external schemas by default.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>类用于解析外部架构默认情况下。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.XmlResolver">
          <source>To disable resolution of include, import, and redefine elements of a schema, set the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A&gt;</ph> property to <ph id="ph2">`null`</ph>.</source>
          <target state="translated">若要禁用解析包含、 导入，而重新定义架构的元素，<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A&gt;</ph>属性<ph id="ph2">`null`</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>