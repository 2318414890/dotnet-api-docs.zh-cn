<Type Name="MenuScrollingVisibilityConverter" FullName="System.Windows.Controls.MenuScrollingVisibilityConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d9b6adb38ce1d85d2fb3c7e4d7454cc70ad11ab0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30618981" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class MenuScrollingVisibilityConverter : System.Windows.Data.IMultiValueConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MenuScrollingVisibilityConverter extends System.Object implements class System.Windows.Data.IMultiValueConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.MenuScrollingVisibilityConverter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MenuScrollingVisibilityConverter&#xA;Implements IMultiValueConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MenuScrollingVisibilityConverter sealed : System::Windows::Data::IMultiValueConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Data.IMultiValueConverter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>表示用于处理滚动菜单中重复按钮的可见性的数据绑定转换器。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.MenuScrollingVisibilityConverter>确定当菜单拥有过多的项以在一次适合于屏幕菜单是否应显示重复的按钮。  使用转换器<xref:System.Windows.Data.MultiBinding>具有四个绑定。  四种绑定到的父级的属性应为<xref:System.Windows.Controls.ScrollViewer>： 如果菜单项进行垂直组织 （这是菜单的默认值），将绑定到<xref:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibility%2A>， <xref:System.Windows.Controls.ScrollViewer.VerticalOffset%2A>， <xref:System.Windows.Controls.ScrollViewer.ExtentHeight%2A>，和<xref:System.Windows.Controls.ScrollViewer.ViewportHeight%2A>。  如果菜单项进行水平组织，将绑定到<xref:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibility%2A>， <xref:System.Windows.Controls.ScrollViewer.HorizontalOffset%2A>， <xref:System.Windows.Controls.ScrollViewer.ExtentWidth%2A>，和<xref:System.Windows.Controls.ScrollViewer.ViewportWidth%2A>。  
  
 设置<xref:System.Windows.Data.MultiBinding.ConverterParameter%2A?displayProperty=nameWithType>为 0 或 100。  值作为百分比，并确定是否隐藏按钮时<xref:System.Windows.Controls.ScrollViewer>位于给定位置。  当<xref:System.Windows.Controls.ScrollViewer>正处于顶部的位置<xref:System.Windows.Controls.ScrollViewer>是 0%和隐藏最上方的按钮。  当<xref:System.Windows.Controls.ScrollViewer>正处于底部的位置<xref:System.Windows.Controls.ScrollViewer>为 100%，而底部按钮处于隐藏状态。  
  
   
  
## Examples  
 下面的示例使用<xref:System.Windows.Controls.MenuScrollingVisibilityConverter>中<xref:System.Windows.Controls.ControlTemplate>的<xref:System.Windows.Controls.ScrollViewer>菜单。  有关完整示例，请参阅[ControlTemplates 示例样式](http://go.microsoft.com/fwlink/?LinkID=160041)。  
  
 [!code-xaml[ControlTemplateExamples#MenuScrollViewer](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples/CS/resources/menu.xaml#menuscrollviewer)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuScrollingVisibilityConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuScrollingVisibilityConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuScrollingVisibilityConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Controls.MenuScrollingVisibilityConverter" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public object Convert (object[] values, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Convert(object[] values, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuScrollingVisibilityConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Convert (values As Object(), targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Convert(cli::array &lt;System::Object ^&gt; ^ values, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="values">源绑定生成的值。</param>
        <param name="targetType">目标的类型。 源将转换成的类型。</param>
        <param name="parameter">转换器参数。</param>
        <param name="culture">区域信息。</param>
        <summary>在将值从源移到目标时调用。</summary>
        <returns>已转换的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.DependencyProperty.UnsetValue> 可能返回以指示转换器没有生成任何值，并且应使用默认值。  
  
 <xref:System.Windows.Data.Binding.DoNothing> 可能返回以指示绑定应传输该值，或不使用默认值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertBack">
      <MemberSignature Language="C#" Value="public object[] ConvertBack (object value, Type[] targetTypes, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] ConvertBack(object value, class System.Type[] targetTypes, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.MenuScrollingVisibilityConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertBack (value As Object, targetTypes As Type(), parameter As Object, culture As CultureInfo) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ ConvertBack(System::Object ^ value, cli::array &lt;Type ^&gt; ^ targetTypes, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetTypes" Type="System.Type[]" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">未使用此参数。</param>
        <param name="targetTypes">未使用此参数。</param>
        <param name="parameter">未使用此参数。</param>
        <param name="culture">未使用此参数。</param>
        <summary>不支持。</summary>
        <returns>
          <see cref="F:System.Windows.Data.Binding.DoNothing" />
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>