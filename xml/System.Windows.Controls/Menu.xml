<Type Name="Menu" FullName="System.Windows.Controls.Menu">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4d4b8eda1b128606db24c15ccf8bef79c660ce78" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30618921" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Menu : System.Windows.Controls.Primitives.MenuBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Menu extends System.Windows.Controls.Primitives.MenuBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Menu" />
  <TypeSignature Language="VB.NET" Value="Public Class Menu&#xA;Inherits MenuBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class Menu : System::Windows::Controls::Primitives::MenuBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.MenuBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f1823-101">表示一个 Windows 菜单控件，该控件可用于按层次组织与命令和事件处理程序关联的元素。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f1823-101">Represents a Windows menu control that enables you to hierarchically organize elements associated with commands and event handlers.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1823-102"><xref:System.Windows.Controls.Menu>控件显示的命令或应用程序的选项指定的项的列表。</span><span class="sxs-lookup"><span data-stu-id="f1823-102">The <xref:System.Windows.Controls.Menu> control presents a list of items that specify commands or options for an application.</span></span> <span data-ttu-id="f1823-103">通常情况下，单击菜单上的项打开一个子菜单或导致应用程序执行的命令。</span><span class="sxs-lookup"><span data-stu-id="f1823-103">Typically, clicking an item on a menu opens a submenu or causes an application to carry out a command.</span></span>  
  
 <span data-ttu-id="f1823-104"><xref:System.Windows.Controls.Menu> 是<xref:System.Windows.Controls.ItemsControl>，这意味着它可以包含的任何类型 （如字符串、 图像或面板） 的对象的集合。</span><span class="sxs-lookup"><span data-stu-id="f1823-104"><xref:System.Windows.Controls.Menu> is an <xref:System.Windows.Controls.ItemsControl>, which means it can contain a collection of objects of any type (such as string, image, or panel).</span></span> <span data-ttu-id="f1823-105">有关更多信息，请参见 <xref:System.Windows.Controls.ItemsControl> 类。</span><span class="sxs-lookup"><span data-stu-id="f1823-105">For more information, see the <xref:System.Windows.Controls.ItemsControl> class.</span></span> <span data-ttu-id="f1823-106"><xref:System.Windows.Controls.MenuItem>是中的项的最常见类型<xref:System.Windows.Controls.Menu>。</span><span class="sxs-lookup"><span data-stu-id="f1823-106">The <xref:System.Windows.Controls.MenuItem> is the most common type of item in a <xref:System.Windows.Controls.Menu>.</span></span> <span data-ttu-id="f1823-107">A<xref:System.Windows.Controls.MenuItem>可以包含子项目。</span><span class="sxs-lookup"><span data-stu-id="f1823-107">A <xref:System.Windows.Controls.MenuItem> can contain child items.</span></span> <span data-ttu-id="f1823-108">子项将显示的子菜单中，当用户选择父<xref:System.Windows.Controls.MenuItem>。</span><span class="sxs-lookup"><span data-stu-id="f1823-108">The child items will appear in a submenu when the user chooses a parent <xref:System.Windows.Controls.MenuItem>.</span></span>  
  
## <a name="customizing-the-menu-control"></a><span data-ttu-id="f1823-109">自定义菜单控件</span><span class="sxs-lookup"><span data-stu-id="f1823-109">Customizing the Menu Control</span></span>  
 <span data-ttu-id="f1823-110">若要将相同的属性设置应用于多个<xref:System.Windows.Controls.Menu>控件，使用<xref:System.Windows.FrameworkElement.Style%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="f1823-110">To apply the same property settings to multiple <xref:System.Windows.Controls.Menu> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="f1823-111">你可以修改默认<xref:System.Windows.Controls.ControlTemplate>提供独特外观的控件。</span><span class="sxs-lookup"><span data-stu-id="f1823-111">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="f1823-112">有关创建<xref:System.Windows.Controls.ControlTemplate>，请参阅[通过创建 ControlTemplate 自定义现有的控件的外观](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。</span><span class="sxs-lookup"><span data-stu-id="f1823-112">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="f1823-113">若要查看的部件和特定于状态<xref:System.Windows.Controls.Menu>，请参阅[菜单样式和模板](~/docs/framework/wpf/controls/menu-styles-and-templates.md)。</span><span class="sxs-lookup"><span data-stu-id="f1823-113">To see the parts and states that are specific to the <xref:System.Windows.Controls.Menu>, see [Menu Styles and Templates](~/docs/framework/wpf/controls/menu-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="f1823-114">对于此控件的依赖项属性可能由控件的默认样式设置。</span><span class="sxs-lookup"><span data-stu-id="f1823-114">Dependency properties for this control might be set by the control’s default style.</span></span>  <span data-ttu-id="f1823-115">如果属性设置的默认样式，该属性可能会更改从其默认值，如果控件出现在应用程序中。</span><span class="sxs-lookup"><span data-stu-id="f1823-115">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="f1823-116">桌面主题用应用程序运行时确定的默认样式。</span><span class="sxs-lookup"><span data-stu-id="f1823-116">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="f1823-117">有关详细信息，请参阅[默认 WPF 主题](http://go.microsoft.com/fwlink/?LinkID=158252)。</span><span class="sxs-lookup"><span data-stu-id="f1823-117">For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f1823-118">设置 visual 属性会仅造成影响该属性是否都存在于<xref:System.Windows.Controls.Menu>控件的默认模板，并通过设置。</span><span class="sxs-lookup"><span data-stu-id="f1823-118">Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Controls.Menu> control's default template and is set by using a .</span></span> <span data-ttu-id="f1823-119">可以在的"更改 Visual 结构的控件"一节中找到的可视属性列表[通过创建 ControlTemplate 自定义现有的控件的外观](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。</span><span class="sxs-lookup"><span data-stu-id="f1823-119">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.MenuItem" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Menu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Menu();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f1823-120">初始化 <see cref="T:System.Windows.Controls.Menu" /> 类的新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1823-120">Initializes a new instance of the <see cref="T:System.Windows.Controls.Menu" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleMouseButton">
      <MemberSignature Language="C#" Value="protected override void HandleMouseButton (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HandleMouseButton(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.HandleMouseButton(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HandleMouseButton (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HandleMouseButton(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f1823-121">包含事件数据的 <see cref="T:System.Windows.Input.MouseButtonEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1823-121">A <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f1823-122">在按下或释放任意鼠标按钮时调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1823-122">Called when any mouse button is pressed or released.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMainMenu">
      <MemberSignature Language="C#" Value="public bool IsMainMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMainMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Menu.IsMainMenu" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMainMenu As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMainMenu { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1823-123">获取或设置一个值，该值指示此 <see cref="T:System.Windows.Controls.Menu" /> 是否接收主菜单激活通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1823-123">Gets or sets a value that indicates whether this <see cref="T:System.Windows.Controls.Menu" /> receives a main menu activation notification.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f1823-124">如果菜单接收主菜单激活通知，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1823-124">
              <see langword="true" /> if the menu receives a main menu activation notification; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f1823-125">默认值为 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1823-125">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1823-126">如果有多个<xref:System.Windows.Controls.Menu>控件在页中，<xref:System.Windows.Controls.Menu>不应在收到 ALT 或 F10 键通知的控件应将此属性设置为`false`。</span><span class="sxs-lookup"><span data-stu-id="f1823-126">If there are multiple <xref:System.Windows.Controls.Menu> controls on a page, <xref:System.Windows.Controls.Menu> controls that should not receive ALT or F10 key notifications should set this property to `false`.</span></span>  
  
<a name="dependencyPropertyInfo_IsMainMenu"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="f1823-127">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="f1823-127">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="f1823-128">标识符字段</span><span class="sxs-lookup"><span data-stu-id="f1823-128">Identifier field</span></span>|<xref:System.Windows.Controls.Menu.IsMainMenuProperty>|  
|<span data-ttu-id="f1823-129">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="f1823-129">Metadata properties set to `true`</span></span>|<span data-ttu-id="f1823-130">无</span><span class="sxs-lookup"><span data-stu-id="f1823-130">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="f1823-131">下面的示例演示如何使用<xref:System.Windows.Controls.Menu.IsMainMenu%2A>属性创建<xref:System.Windows.Controls.Menu>不接收激活通知。</span><span class="sxs-lookup"><span data-stu-id="f1823-131">The following example shows how to use the <xref:System.Windows.Controls.Menu.IsMainMenu%2A> property to create a <xref:System.Windows.Controls.Menu> that does not receive activation notification.</span></span>  
  
 [!code-xaml[MenuStylesSnippet#MenuIsMainMenu](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuStylesSnippet/CS/pane1.xaml#menuismainmenu)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMainMenuProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMainMenuProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMainMenuProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Menu.IsMainMenuProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMainMenuProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMainMenuProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f1823-132">标识 <see cref="P:System.Windows.Controls.Menu.IsMainMenu" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1823-132">Identifies the <see cref="P:System.Windows.Controls.Menu.IsMainMenu" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f1823-133">为此控件提供适当的 <see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer" /> 实现，作为 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 自动化基础结构的一部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1823-133">Provides an appropriate <see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer" /> implementation for this control, as part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] automation infrastructure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f1823-134">特定于类型的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 实现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1823-134">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitialized">
      <MemberSignature Language="C#" Value="protected override void OnInitialized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInitialized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.OnInitialized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInitialized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInitialized(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f1823-135">包含事件数据的 <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1823-135">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f1823-136">当 <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> 属性设置为 <see langword="true" /> 时调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1823-136">Called when the <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> property is set to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f1823-137">包含事件数据的 <see cref="T:System.Windows.Input.KeyEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1823-137">A <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f1823-138">响应 <see cref="E:System.Windows.ContentElement.KeyDown" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1823-138">Responds to the <see cref="E:System.Windows.ContentElement.KeyDown" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected override void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="f1823-139">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1823-139">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f1823-140">处理 <see cref="E:System.Windows.UIElement.TextInput" /> 路由事件，该事件在菜单接收来自任何设备的文本输入时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1823-140">Handles the <see cref="E:System.Windows.UIElement.TextInput" /> routed event that occurs when the menu receives text input from any device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1823-141">此实现不会更改已处理的状态 (<xref:System.Windows.RoutedEventArgs.Handled%2A>属性) 的<xref:System.Windows.UIElement.TextInput>事件数据。</span><span class="sxs-lookup"><span data-stu-id="f1823-141">This implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.TextInput> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="f1823-142">如果你重写<see cref="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />，始终调用基实现你<see cref="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />实现。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f1823-142">If you override <see cref="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" /> implementation.</span>
            </span>
            <span data-ttu-id="f1823-143">如果调用基实现会使基类处理具有类处理程序，这可能会改变最终类的运行时行为的事件。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f1823-143">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span>
            </span>
            <span data-ttu-id="f1823-144">你可以调用基实现之前或之后你特殊的处理，具体取决于你的要求。</span>
            <span class="sxs-lookup">
              <span data-stu-id="f1823-144">You can call the base implementation either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="f1823-145">用于显示指定项的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1823-145">The element used to display the specified item.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="f1823-146">要显示的项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1823-146">The item to display.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f1823-147">准备好指定的元素以显示指定的项。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f1823-147">Prepares the specified element to display the specified item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1823-148">元素的准备工作可能涉及应用样式、 设置的绑定，依次类推。</span><span class="sxs-lookup"><span data-stu-id="f1823-148">Preparing the element might involve applying styles, setting bindings, and so on.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>