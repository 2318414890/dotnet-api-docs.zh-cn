<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Menu.xml" source-language="en-US" target-language="zh-CN">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54d4b8eda1b128606db24c15ccf8bef79c660ce78.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4d4b8eda1b128606db24c15ccf8bef79c660ce78</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Controls.Menu">
          <source>Represents a Windows menu control that enables you to hierarchically organize elements associated with commands and event handlers.</source>
          <target state="translated">表示一个 Windows 菜单控件，该控件可用于按层次组织与命令和事件处理程序关联的元素。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Menu">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.Menu&gt;</ph> control presents a list of items that specify commands or options for an application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.Menu&gt;</ph>控件显示的命令或应用程序的选项指定的项的列表。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Menu">
          <source>Typically, clicking an item on a menu opens a submenu or causes an application to carry out a command.</source>
          <target state="translated">通常情况下，单击菜单上的项打开一个子菜单或导致应用程序执行的命令。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Menu">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.Menu&gt;</ph> is an <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, which means it can contain a collection of objects of any type (such as string, image, or panel).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.Menu&gt;</ph> 是<ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>，这意味着它可以包含的任何类型 （如字符串、 图像或面板） 的对象的集合。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Menu">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> class.</source>
          <target state="translated">有关更多信息，请参见 <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph> 类。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Menu">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph> is the most common type of item in a <ph id="ph2">&lt;xref:System.Windows.Controls.Menu&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph>是中的项的最常见类型<ph id="ph2">&lt;xref:System.Windows.Controls.Menu&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Menu">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph> can contain child items.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph>可以包含子项目。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Menu">
          <source>The child items will appear in a submenu when the user chooses a parent <ph id="ph1">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph>.</source>
          <target state="translated">子项将显示的子菜单中，当用户选择父<ph id="ph1">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Menu">
          <source>Customizing the Menu Control</source>
          <target state="translated">自定义菜单控件</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Menu">
          <source>To apply the same property settings to multiple <ph id="ph1">&lt;xref:System.Windows.Controls.Menu&gt;</ph> controls, use the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Style%2A&gt;</ph> property.</source>
          <target state="translated">若要将相同的属性设置应用于多个<ph id="ph1">&lt;xref:System.Windows.Controls.Menu&gt;</ph>控件，使用<ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Style%2A&gt;</ph>属性。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Menu">
          <source>You can modify the default <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> to give the control a unique appearance.</source>
          <target state="translated">你可以修改默认<ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>提供独特外观的控件。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Menu">
          <source>For more information about creating a <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>, see <bpt id="p1">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>.</source>
          <target state="translated">有关创建<ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>，请参阅<bpt id="p1">[</bpt>通过创建 ControlTemplate 自定义现有的控件的外观<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Menu">
          <source>To see the parts and states that are specific to the <ph id="ph1">&lt;xref:System.Windows.Controls.Menu&gt;</ph>, see <bpt id="p1">[</bpt>Menu Styles and Templates<ept id="p1">](~/docs/framework/wpf/controls/menu-styles-and-templates.md)</ept>.</source>
          <target state="translated">若要查看的部件和特定于状态<ph id="ph1">&lt;xref:System.Windows.Controls.Menu&gt;</ph>，请参阅<bpt id="p1">[</bpt>菜单样式和模板<ept id="p1">](~/docs/framework/wpf/controls/menu-styles-and-templates.md)</ept>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Menu">
          <source>Dependency properties for this control might be set by the control’s default style.</source>
          <target state="translated">对于此控件的依赖项属性可能由控件的默认样式设置。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Menu">
          <source>If a property is set by a default style, the property might change from its default value when the control appears in the application.</source>
          <target state="translated">如果属性设置的默认样式，该属性可能会更改从其默认值，如果控件出现在应用程序中。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Menu">
          <source>The default style is determined by which desktop theme is used when the application is running.</source>
          <target state="translated">桌面主题用应用程序运行时确定的默认样式。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Menu">
          <source>For more information, see <bpt id="p1">[</bpt>Default WPF Themes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=158252)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>默认 WPF 主题<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=158252)</ept>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Menu">
          <source>Setting a visual property will only have an effect if that property is both present in <ph id="ph1">&lt;xref:System.Windows.Controls.Menu&gt;</ph> control's default template and is set by using a .</source>
          <target state="translated">设置 visual 属性会仅造成影响该属性是否都存在于<ph id="ph1">&lt;xref:System.Windows.Controls.Menu&gt;</ph>控件的默认模板，并通过设置。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Controls.Menu">
          <source>You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in <bpt id="p1">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>.</source>
          <target state="translated">可以在的"更改 Visual 结构的控件"一节中找到的可视属性列表<bpt id="p1">[</bpt>通过创建 ControlTemplate 自定义现有的控件的外观<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Menu.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Menu" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Menu" /&gt;</ph> 类的新实例。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Menu.HandleMouseButton(System.Windows.Input.MouseButtonEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Input.MouseButtonEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Input.MouseButtonEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Menu.HandleMouseButton(System.Windows.Input.MouseButtonEventArgs)">
          <source>Called when any mouse button is pressed or released.</source>
          <target state="translated">在按下或释放任意鼠标按钮时调用。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.Windows.Controls.Menu.IsMainMenu">
          <source>Gets or sets a value that indicates whether this <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Menu" /&gt;</ph> receives a main menu activation notification.</source>
          <target state="translated">获取或设置一个值，该值指示此 <ph id="ph1">&lt;see cref="T:System.Windows.Controls.Menu" /&gt;</ph> 是否接收主菜单激活通知。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Menu.IsMainMenu">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the menu receives a main menu activation notification; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果菜单接收主菜单激活通知，则为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否则为 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Menu.IsMainMenu">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Menu.IsMainMenu">
          <source>If there are multiple <ph id="ph1">&lt;xref:System.Windows.Controls.Menu&gt;</ph> controls on a page, <ph id="ph2">&lt;xref:System.Windows.Controls.Menu&gt;</ph> controls that should not receive ALT or F10 key notifications should set this property to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">如果有多个<ph id="ph1">&lt;xref:System.Windows.Controls.Menu&gt;</ph>控件在页中，<ph id="ph2">&lt;xref:System.Windows.Controls.Menu&gt;</ph>不应在收到 ALT 或 F10 键通知的控件应将此属性设置为<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Menu.IsMainMenu">
          <source>Dependency Property Information</source>
          <target state="translated">依赖项属性信息</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Menu.IsMainMenu">
          <source>Identifier field</source>
          <target state="translated">标识符字段</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Menu.IsMainMenu">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">元数据属性设置为 <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Menu.IsMainMenu">
          <source>None</source>
          <target state="translated">无</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Controls.Menu.IsMainMenu">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Controls.Menu.IsMainMenu%2A&gt;</ph> property to create a <ph id="ph2">&lt;xref:System.Windows.Controls.Menu&gt;</ph> that does not receive activation notification.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">&lt;xref:System.Windows.Controls.Menu.IsMainMenu%2A&gt;</ph>属性创建<ph id="ph2">&lt;xref:System.Windows.Controls.Menu&gt;</ph>不接收激活通知。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="F:System.Windows.Controls.Menu.IsMainMenuProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Menu.IsMainMenu" /&gt;</ph> dependency property.</source>
          <target state="translated">标识 <ph id="ph1">&lt;see cref="P:System.Windows.Controls.Menu.IsMainMenu" /&gt;</ph> 依赖项属性。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Menu.OnCreateAutomationPeer">
          <source>Provides an appropriate <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer" /&gt;</ph> implementation for this control, as part of the <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> automation infrastructure.</source>
          <target state="translated">为此控件提供适当的 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer" /&gt;</ph> 实现，作为 <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> 自动化基础结构的一部分。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Menu.OnCreateAutomationPeer">
          <source>The type-specific <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> implementation.</source>
          <target state="translated">特定于类型的 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> 实现。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Menu.OnInitialized(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Menu.OnInitialized(System.EventArgs)">
          <source>Called when the <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.IsInitialized" /&gt;</ph> property is set to <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">当 <ph id="ph1">&lt;see cref="P:System.Windows.FrameworkElement.IsInitialized" /&gt;</ph> 属性设置为 <ph id="ph2">&lt;see langword="true" /&gt;</ph> 时调用。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Menu.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">包含事件数据的 <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyEventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Menu.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>Responds to the <ph id="ph1">&lt;see cref="E:System.Windows.ContentElement.KeyDown" /&gt;</ph> event.</source>
          <target state="translated">响应 <ph id="ph1">&lt;see cref="E:System.Windows.ContentElement.KeyDown" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
          <source>The event data.</source>
          <target state="translated">事件数据。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
          <source>Handles the <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.TextInput" /&gt;</ph> routed event that occurs when the menu receives text input from any device.</source>
          <target state="translated">处理 <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.TextInput" /&gt;</ph> 路由事件，该事件在菜单接收来自任何设备的文本输入时发生。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
          <source>This implementation does not change the handled state (the <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> property) of the <ph id="ph2">&lt;xref:System.Windows.UIElement.TextInput&gt;</ph> event data.</source>
          <target state="translated">此实现不会更改已处理的状态 (<ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph>属性) 的<ph id="ph2">&lt;xref:System.Windows.UIElement.TextInput&gt;</ph>事件数据。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
          <source>If you override <ph id="ph1">&lt;see cref="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" /&gt;</ph>, always call the base implementation in your <ph id="ph2">&lt;see cref="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" /&gt;</ph> implementation.</source>
          <target state="translated">如果你重写<ph id="ph1">&lt;see cref="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" /&gt;</ph>，始终调用基实现你<ph id="ph2">&lt;see cref="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" /&gt;</ph>实现。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
          <source>Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</source>
          <target state="translated">如果调用基实现会使基类处理具有类处理程序，这可能会改变最终类的运行时行为的事件。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
          <source>You can call the base implementation either before or after your special handling, depending on your requirements.</source>
          <target state="translated">你可以调用基实现之前或之后你特殊的处理，具体取决于你的要求。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Menu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
          <source>The element used to display the specified item.</source>
          <target state="translated">用于显示指定项的元素。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Menu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
          <source>The item to display.</source>
          <target state="translated">要显示的项。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Controls.Menu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
          <source>Prepares the specified element to display the specified item.</source>
          <target state="translated">准备好指定的元素以显示指定的项。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Controls.Menu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
          <source>Preparing the element might involve applying styles, setting bindings, and so on.</source>
          <target state="translated">元素的准备工作可能涉及应用样式、 设置的绑定，依次类推。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>