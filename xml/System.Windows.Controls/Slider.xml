<Type Name="Slider" FullName="System.Windows.Controls.Slider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="aea41106c7b22cf9eeb119a6a92cb6da38dc992c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30620531" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Slider : System.Windows.Controls.Primitives.RangeBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Slider extends System.Windows.Controls.Primitives.RangeBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Slider" />
  <TypeSignature Language="VB.NET" Value="Public Class Slider&#xA;Inherits RangeBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class Slider : System::Windows::Controls::Primitives::RangeBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.RangeBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ValueChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Value")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Ignore)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_Track", Type=typeof(System.Windows.Controls.Primitives.Track))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_SelectionRange", Type=typeof(System.Windows.FrameworkElement))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示一个控件，该控件可让用户通过沿 <see cref="T:System.Windows.Controls.Primitives.Track" /> 移动 <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> 控件从一个值范围中进行选择。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Windows.Controls.Slider>控件允许用户从一系列的值中选择一个值。 下图显示的示例<xref:System.Windows.Controls.Slider>控件。  
  
 **滑块控件的示例**  
  
 ![滑块图](~/add/media/genericslider.png "滑块图")  
  
 你可以自定义<xref:System.Windows.Controls.Slider>通过设置其属性的控件。 以下列表描述的部分的特性<xref:System.Windows.Controls.Slider>可自定义：  
  
-   方向<xref:System.Windows.Controls.Slider>，水平或垂直。  
  
-   沿刻度线位置<xref:System.Windows.Controls.Slider>跟踪。  
  
-   显示工具提示显示的当前值<xref:System.Windows.Controls.Slider>。  
  
-   能力<xref:System.Windows.Controls.Primitives.Thumb>到任一管理单元，刻度线，或放在任何点沿<xref:System.Windows.Controls.Slider>。  
  
-   增加沿值的方向<xref:System.Windows.Controls.Slider>。  
  
 有关如何自定义的详细信息<xref:System.Windows.Controls.Slider>控制，请参阅单个成员。  
  
 <xref:System.Windows.Controls.Slider> 重写的元数据<xref:System.Windows.Controls.Primitives.RangeBase.Maximum%2A>属性并将其默认设置为 10。 有关详细信息，请参阅[依赖项属性概述](~/docs/framework/wpf/advanced/dependency-properties-overview.md)。  
  
> [!NOTE]
>  如果值<xref:System.Windows.Controls.Slider>是进行动画处理，用户可能不再能够与进行交互<xref:System.Windows.Controls.Slider>控制动画完成后。 请参阅[如何： 设置属性后进行动画处理其与情节提要](~/docs/framework/wpf/graphics-multimedia/how-to-set-a-property-after-animating-it-with-a-storyboard.md)如何才能还原的用户控件的选项<xref:System.Windows.Controls.Slider>被激活后。  
  
## <a name="customizing-the-slider-control"></a>自定义滑块控件  
 若要将相同的属性设置应用于多个<xref:System.Windows.Controls.Slider>控件，使用<xref:System.Windows.FrameworkElement.Style%2A>属性。 你可以修改默认<xref:System.Windows.Controls.ControlTemplate>提供独特外观的控件。 有关创建<xref:System.Windows.Controls.ControlTemplate>，请参阅[通过创建 ControlTemplate 自定义现有的控件的外观](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。  若要查看的部件和特定于状态<xref:System.Windows.Controls.Slider>，请参阅[滑块样式和模板](~/docs/framework/wpf/controls/slider-styles-and-templates.md)。  
  
 对于此控件的依赖项属性可能由控件的默认样式设置。  如果属性设置的默认样式，该属性可能会更改从其默认值，如果控件出现在应用程序中。 桌面主题用应用程序运行时确定的默认样式。  有关详细信息，请参阅[默认 WPF 主题](http://go.microsoft.com/fwlink/?LinkID=158252)。  
  
> [!NOTE]
>  设置 visual 属性会仅造成影响该属性是否都存在于<xref:System.Windows.Controls.Slider>控件的默认模板，并通过设置。 可以在的"更改 Visual 结构的控件"一节中找到的可视属性列表[通过创建 ControlTemplate 自定义现有的控件的外观](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。  
  
   
  
## Examples  
 下面的示例演示如何将绑定<xref:System.Windows.FrameworkElement.Height%2A>属性<xref:System.Windows.Shapes.Rectangle>到<xref:System.Windows.Controls.Primitives.RangeBase.Value%2A>的<xref:System.Windows.Controls.Slider>控件。  
  
 下面的示例定义<xref:System.Windows.Controls.Slider>控件名为`RectangeHeight`能够拥有<xref:System.Windows.Controls.Primitives.RangeBase.Value%2A>介于 0 到 200 之间。  
  
 [!code-xaml[SliderwithDataBinding#Minimum](~/samples/snippets/csharp/VS_Snippets_Wpf/SliderwithDataBinding/CS/Pane1.xaml#minimum)]   
  
 下面的示例演示如何定义<xref:System.Windows.Shapes.Rectangle>绑定其<xref:System.Windows.FrameworkElement.Height%2A>属性<xref:System.Windows.Controls.Primitives.RangeBase.Value%2A>的<xref:System.Windows.Controls.Slider>控件。 (在完整的示例中，为创建类似的绑定<xref:System.Windows.FrameworkElement.Width%2A>属性。)  
  
 [!code-xaml[SliderwithDataBinding#BindingRectangle](~/samples/snippets/csharp/VS_Snippets_Wpf/SliderwithDataBinding/CS/Pane1.xaml#bindingrectangle)]   
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.Primitives.Track" />
    <altmember cref="T:System.Windows.Controls.Primitives.Thumb" />
    <altmember cref="T:System.Windows.Controls.Primitives.TickBar" />
    <altmember cref="T:System.Windows.Controls.Primitives.TickPlacement" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Slider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Slider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Slider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Controls.Slider" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size ArrangeOverride (System.Windows.Size finalSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size finalSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Slider.ArrangeOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ArrangeOverride (finalSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size ArrangeOverride(System::Windows::Size finalSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finalSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="finalSize">用于排列控件的计算的 <see cref="T:System.Windows.Size" />。</param>
        <summary>排列 <see cref="T:System.Windows.Controls.Slider" /> 的内容并确定其 <see cref="T:System.Windows.Size" />。</summary>
        <returns>
          <see cref="T:System.Windows.Controls.Slider" /> 的计算的 <see cref="T:System.Windows.Size" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoToolTipPlacement">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.AutoToolTipPlacement AutoToolTipPlacement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Primitives.AutoToolTipPlacement AutoToolTipPlacement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.AutoToolTipPlacement" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoToolTipPlacement As AutoToolTipPlacement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Primitives::AutoToolTipPlacement AutoToolTipPlacement { System::Windows::Controls::Primitives::AutoToolTipPlacement get(); void set(System::Windows::Controls::Primitives::AutoToolTipPlacement value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.AutoToolTipPlacement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在按下 <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> 时是否显示包含 <see cref="T:System.Windows.Controls.Slider" /> 的当前值的工具提示。 如果显示工具提示，此属性还指定工具提示的位置。</summary>
        <value>
          <see cref="T:System.Windows.Controls.Primitives.AutoToolTipPlacement" /> 值之一，该值确定用于显示与 <see cref="T:System.Windows.Controls.Slider" /> 的 <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> 相关的工具提示的位置，或指定不显示工具提示。 默认值为 <see cref="F:System.Windows.Controls.Primitives.AutoToolTipPlacement.None" />，该值指定不显示工具提示。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_AutoToolTipPlacement"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.Slider.AutoToolTipPlacementProperty>|  
|元数据属性设置为 `true`|无|  
  
   
  
## Examples  
 下面的示例演示如何设置<xref:System.Windows.Controls.Slider.AutoToolTipPlacement%2A>属性。  
  
 [!code-csharp[Slider#Basic](~/samples/snippets/csharp/VS_Snippets_Wpf/Slider/CSharp/Pane1.xaml.cs#basic)]
 [!code-vb[Slider#Basic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Slider/VisualBasic/Pane1.xaml.vb#basic)]
 [!code-xaml[Slider#Basic](~/samples/snippets/xaml/VS_Snippets_Wpf/Slider/xaml/window1.xaml#basic)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoToolTipPlacementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AutoToolTipPlacementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AutoToolTipPlacementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Slider.AutoToolTipPlacementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutoToolTipPlacementProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AutoToolTipPlacementProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.Slider.AutoToolTipPlacement" /> 依赖项属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Slider.AutoToolTipPlacement%2A> 依赖项属性的标识符。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoToolTipPrecision">
      <MemberSignature Language="C#" Value="public int AutoToolTipPrecision { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AutoToolTipPrecision" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.AutoToolTipPrecision" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoToolTipPrecision As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AutoToolTipPrecision { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在工具提示中的 <see cref="T:System.Windows.Controls.Slider" /> 的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 的小数点右侧显示的小数位数。</summary>
        <value>工具提示中显示的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 的精度，由小数点右侧显示的小数位数指定。 默认值为零 (0)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性的值必须为非负整数。 如果此属性设置为非负整数以外的值，则会发生异常。  
  
<a name="dependencyPropertyInfo_AutoToolTipPrecision"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.Slider.AutoToolTipPrecisionProperty>|  
|元数据属性设置为 `true`|无|  
  
   
  
## Examples  
 下面的示例演示如何设置 <xref:System.Windows.Controls.Slider.AutoToolTipPrecision%2A> 属性。  
  
 [!code-csharp[Slider#SelectionRange](~/samples/snippets/csharp/VS_Snippets_Wpf/Slider/CSharp/Pane1.xaml.cs#selectionrange)]
 [!code-vb[Slider#SelectionRange](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Slider/VisualBasic/Pane1.xaml.vb#selectionrange)]
 [!code-xaml[Slider#SelectionRange](~/samples/snippets/xaml/VS_Snippets_Wpf/Slider/xaml/window1.xaml#selectionrange)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Windows.Controls.Slider.AutoToolTipPrecision" /> 设置为一个不是非负整数的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="AutoToolTipPrecisionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AutoToolTipPrecisionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AutoToolTipPrecisionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Slider.AutoToolTipPrecisionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutoToolTipPrecisionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AutoToolTipPrecisionProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.Slider.AutoToolTipPrecision" /> 依赖项属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Slider.AutoToolTipPrecision%2A> 依赖项属性的标识符。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecreaseLarge">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedCommand DecreaseLarge { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedCommand DecreaseLarge" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.DecreaseLarge" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DecreaseLarge As RoutedCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedCommand ^ DecreaseLarge { System::Windows::Input::RoutedCommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个命令，该命令将 <see cref="T:System.Windows.Controls.Slider" /> 的值减少与 <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> 属性相同的量。</summary>
        <value>用于减少 <see cref="T:System.Windows.Controls.Slider" /> 的值（其数量与 <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> 属性减少的数量相同）的 <see cref="T:System.Windows.Input.RoutedCommand" />。 默认的 <see cref="T:System.Windows.Input.InputGesture" /> 为 <see cref="F:System.Windows.Input.Key.PageDown" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Controls.Slider.IsDirectionReversed%2A>属性设置为`true`、<xref:System.Windows.Input.InputGesture>此命令为<xref:System.Windows.Input.Key.PageUp>。  
  
 默认值<xref:System.Windows.Controls.Primitives.RangeBase.LargeChange%2A>属性为 (0.1)。  
  
<a name="xamlAttributeUsage_DecreaseLarge"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性用法  
 <code><<em>object</em> <em>property</em>="Slider.DecreaseLarge"/></code>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecreaseSmall">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedCommand DecreaseSmall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedCommand DecreaseSmall" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.DecreaseSmall" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DecreaseSmall As RoutedCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedCommand ^ DecreaseSmall { System::Windows::Input::RoutedCommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个命令，该命令将 <see cref="T:System.Windows.Controls.Slider" /> 的值减少与 <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> 属性相同的量。</summary>
        <value>用于减少 <see cref="T:System.Windows.Controls.Slider" /> 的值（其数量与 <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> 属性减少的数量相同）的 <see cref="T:System.Windows.Input.RoutedCommand" />。 默认的 <see cref="T:System.Windows.Input.InputGesture" /> 对象为 <see cref="F:System.Windows.Input.Key.Down" /> 和 <see cref="F:System.Windows.Input.Key.Left" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Controls.Slider.IsDirectionReversed%2A>属性设置为`true`、<xref:System.Windows.Input.InputGesture>对象<xref:System.Windows.Input.Key.Up>和<xref:System.Windows.Input.Key.Right>。  
  
 默认值<xref:System.Windows.Controls.Primitives.RangeBase.SmallChange%2A>属性为 (0.1)。  
  
<a name="xamlAttributeUsage_DecreaseSmall"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性用法  
 <code><<em>object</em> <em>property</em>="Slider.DecreaseSmall"/></code>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delay">
      <MemberSignature Language="C#" Value="public int Delay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Delay" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.Delay" />
      <MemberSignature Language="VB.NET" Value="Public Property Delay As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Delay { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在按下 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 之后等待执行用于移动 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 的命令（如 <see cref="P:System.Windows.Controls.Slider.DecreaseLarge" /> 命令）的时间（以毫秒为单位）。</summary>
        <value>时间延迟（以毫秒为单位）。 默认值为系统按键延迟。 有关详情，请参阅<see cref="P:System.Windows.SystemParameters.KeyboardDelay" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此属性时<xref:System.Windows.Controls.Primitives.RepeatButton>纳入的样式<xref:System.Windows.Controls.Slider>。默认样式<xref:System.Windows.Controls.Slider>包括两个不可见的<xref:System.Windows.Controls.Primitives.RepeatButton>使用之间的间距的控件<xref:System.Windows.Controls.Primitives.Thumb>和每个末尾<xref:System.Windows.Controls.Primitives.Track>。 当您按下一个不可见的按钮，<xref:System.Windows.Controls.Slider>响应通过移动<xref:System.Windows.Controls.Primitives.Thumb>后该方向<xref:System.Windows.Controls.Slider.Delay%2A>应用属性。  
  
<a name="dependencyPropertyInfo_Delay"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.Slider.DelayProperty>|  
|元数据属性设置为 `true`|无|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DelayProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DelayProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DelayProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Slider.DelayProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DelayProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DelayProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.Slider.Delay" /> 依赖项属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Slider.Delay%2A> 依赖项属性的标识符。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncreaseLarge">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedCommand IncreaseLarge { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedCommand IncreaseLarge" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.IncreaseLarge" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IncreaseLarge As RoutedCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedCommand ^ IncreaseLarge { System::Windows::Input::RoutedCommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个命令，该命令将滑块的值增加与 <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> 属性相同的量。</summary>
        <value>用于增加 <see cref="F:System.Windows.Controls.Slider.SelectionStartProperty" /> 的值（其数量与 <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> 属性增加的数量相同）的 <see cref="T:System.Windows.Input.RoutedCommand" />。 此命令的默认 <see cref="T:System.Windows.Input.InputGesture" /> 为 <see cref="F:System.Windows.Input.Key.PageUp" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Controls.Slider.IsDirectionReversed%2A>属性设置为`true`、<xref:System.Windows.Input.InputGesture>此命令为<xref:System.Windows.Input.Key.PageDown>。  
  
 默认值<xref:System.Windows.Controls.Primitives.RangeBase.LargeChange%2A>属性为 (1)。  
  
<a name="xamlAttributeUsage_IncreaseLarge"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性用法  
 <code><<em>object</em> <em>property</em>="Slider.IncreaseLarge"/></code>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncreaseSmall">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedCommand IncreaseSmall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedCommand IncreaseSmall" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.IncreaseSmall" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IncreaseSmall As RoutedCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedCommand ^ IncreaseSmall { System::Windows::Input::RoutedCommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个命令，该命令将滑块的值增加与 <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> 属性相同的量。</summary>
        <value>返回 <see cref="T:System.Windows.Input.RoutedCommand" />，该命令将增加滑块的值（其数量与 <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> 属性增加的数量相同）。 此命令的默认 <see cref="T:System.Windows.Input.InputGesture" /> 对象为 <see cref="F:System.Windows.Input.Key.Up" /> 和 <see cref="F:System.Windows.Input.Key.Right" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Controls.Slider.IsDirectionReversed%2A>属性设置为`true`、<xref:System.Windows.Input.InputGesture>为此命令的对象是<xref:System.Windows.Input.Key.Down>和<xref:System.Windows.Input.Key.Left>和<xref:System.Windows.Controls.Slider>。  
  
 默认值<xref:System.Windows.Controls.Primitives.RangeBase.SmallChange%2A>属性为 (0.1)。  
  
<a name="xamlAttributeUsage_IncreaseSmall"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性用法  
 <code><<em>object</em> <em>property</em>="Slider.IncreaseSmall"/></code>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public int Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Interval" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Interval { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置当用户单击 <see cref="T:System.Windows.Controls.Slider" /> 的 <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> 时增加或减少命令之间的时间量（以毫秒为单位）。</summary>
        <value>用于更改 <see cref="T:System.Windows.Controls.Slider" /> 的 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 的命令之间的时间（以毫秒为单位）。 默认值为系统按键重复速率。 有关详细信息，请参阅[SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp) (SPI_GETKEYBOARDSPEED)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此属性时<xref:System.Windows.Controls.Primitives.RepeatButton>纳入<xref:System.Windows.Style>的<xref:System.Windows.Controls.Slider>。  
  
<a name="dependencyPropertyInfo_Interval"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.Slider.IntervalProperty>|  
|元数据属性设置为 `true`|无|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IntervalProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IntervalProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Slider.IntervalProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IntervalProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IntervalProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.Slider.Interval" /> 依赖项属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Slider.Interval%2A> 依赖项属性的标识符。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirectionReversed">
      <MemberSignature Language="C#" Value="public bool IsDirectionReversed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirectionReversed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.IsDirectionReversed" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDirectionReversed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirectionReversed { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置增加值的方向。</summary>
        <value>
          如果增加值的方向向左（对于水平滑块）或向下（对于垂直滑块），则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性的值确定增加值的方向<xref:System.Windows.Controls.Slider>。 例如，移动<xref:System.Windows.Controls.Primitives.Track.Thumb%2A>控件上垂直<xref:System.Windows.Controls.Slider>时<xref:System.Windows.Controls.Slider.IsDirectionReversed%2A>属性设置为`false`、<xref:System.Windows.Controls.Primitives.RangeBase.Value%2A>的<xref:System.Windows.Controls.Slider>会增加。 如果值<xref:System.Windows.Controls.Slider.IsDirectionReversed%2A>属性更改为`true`、<xref:System.Windows.Controls.Primitives.RangeBase.Value%2A>的<xref:System.Windows.Controls.Slider>随着降低<xref:System.Windows.Controls.Primitives.Track.Thumb%2A>向上移动。  
  
 此属性将绑定到<xref:System.Windows.Controls.Primitives.Track.IsDirectionReversed%2A>属性<xref:System.Windows.Controls.Primitives.Track>它实现的控件。  
  
<a name="dependencyPropertyInfo_IsDirectionReversed"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.Slider.IsDirectionReversedProperty>|  
|元数据属性设置为 `true`|无|  
  
   
  
## Examples  
 下面的示例演示如何设置 <xref:System.Windows.Controls.Slider.IsDirectionReversed%2A> 属性。  
  
 [!code-csharp[Slider#SelectionRange](~/samples/snippets/csharp/VS_Snippets_Wpf/Slider/CSharp/Pane1.xaml.cs#selectionrange)]
 [!code-vb[Slider#SelectionRange](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Slider/VisualBasic/Pane1.xaml.vb#selectionrange)]
 [!code-xaml[Slider#SelectionRange](~/samples/snippets/xaml/VS_Snippets_Wpf/Slider/xaml/window1.xaml#selectionrange)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirectionReversedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsDirectionReversedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsDirectionReversedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Slider.IsDirectionReversedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsDirectionReversedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsDirectionReversedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.Slider.IsDirectionReversed" /> 依赖项属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Slider.IsDirectionReversed%2A> 依赖项属性的标识符。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMoveToPointEnabled">
      <MemberSignature Language="C#" Value="public bool IsMoveToPointEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMoveToPointEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.IsMoveToPointEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMoveToPointEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMoveToPointEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否立即将 <see cref="T:System.Windows.Controls.Slider" /> 的 <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> 移动到在鼠标指针悬停在 <see cref="T:System.Windows.Controls.Slider" /> 轨道的上方时鼠标单击的位置。</summary>
        <value>
          如果 <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> 立即移动到鼠标单击的位置，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当此属性设置为`false`和沿发生鼠标单击<xref:System.Windows.Controls.Slider>远离<xref:System.Windows.Controls.Primitives.Track.Thumb%2A>、<xref:System.Windows.Controls.Primitives.Track.Thumb%2A>鼠标方向移动单击。 而不是立即移动到鼠标单击的位置，<xref:System.Windows.Controls.Primitives.Track.Thumb%2A>移动由定义的距离<xref:System.Windows.Controls.Primitives.RangeBase.SmallChange%2A>属性为每个鼠标单击。  
  
 多个鼠标单击的效果，可以通过按住鼠标左键直到模拟<xref:System.Windows.Controls.Primitives.Track.Thumb%2A>重新定位到所需的位置。  
  
<a name="dependencyPropertyInfo_IsMoveToPointEnabled"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.Slider.IsMoveToPointEnabledProperty>|  
|元数据属性设置为 `true`|无|  
  
   
  
## Examples  
 下面的示例演示如何设置 <xref:System.Windows.Controls.Slider.IsMoveToPointEnabled%2A> 属性。  
  
 [!code-csharp[Slider#SelectionRange](~/samples/snippets/csharp/VS_Snippets_Wpf/Slider/CSharp/Pane1.xaml.cs#selectionrange)]
 [!code-vb[Slider#SelectionRange](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Slider/VisualBasic/Pane1.xaml.vb#selectionrange)]
 [!code-xaml[Slider#SelectionRange](~/samples/snippets/xaml/VS_Snippets_Wpf/Slider/xaml/window1.xaml#selectionrange)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMoveToPointEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMoveToPointEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMoveToPointEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Slider.IsMoveToPointEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMoveToPointEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMoveToPointEnabledProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.Slider.IsMoveToPointEnabled" /> 依赖项属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Slider.IsMoveToPointEnabled%2A> 依赖项属性的标识符。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionRangeEnabled">
      <MemberSignature Language="C#" Value="public bool IsSelectionRangeEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelectionRangeEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.IsSelectionRangeEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSelectionRangeEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSelectionRangeEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Controls.Slider" /> 是否沿 <see cref="T:System.Windows.Controls.Slider" /> 显示选择范围。</summary>
        <value>
          如果显示选择范围，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Slider.SelectionStart%2A>和<xref:System.Windows.Controls.Slider.SelectionEnd%2A>属性定义选择范围，并且必须设置为时，需要显示选择范围<xref:System.Windows.Controls.Slider.IsSelectionRangeEnabled%2A>设置为`true`。  
  
 下图显示<xref:System.Windows.Controls.Slider>与定义的选择范围。  
  
 **选择范围定义的滑块控件**  
  
 ![滑块选择范围](~/add/media/sliderselectionrange.GIF "滑块选择范围")  
  
 此属性绑定到<xref:System.Windows.Controls.Primitives.TickBar.IsSelectionRangeEnabled%2A>属性<xref:System.Windows.Controls.Primitives.TickBar>它实现的控件。  
  
<a name="dependencyPropertyInfo_IsSelectionRangeEnabled"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.Slider.IsSelectionRangeEnabledProperty>|  
|元数据属性设置为 `true`|无|  
  
   
  
## Examples  
 下面的示例演示如何设置 <xref:System.Windows.Controls.Slider.IsSelectionRangeEnabled%2A> 属性。  
  
 [!code-csharp[Slider#SelectionRange](~/samples/snippets/csharp/VS_Snippets_Wpf/Slider/CSharp/Pane1.xaml.cs#selectionrange)]
 [!code-vb[Slider#SelectionRange](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Slider/VisualBasic/Pane1.xaml.vb#selectionrange)]
 [!code-xaml[Slider#SelectionRange](~/samples/snippets/xaml/VS_Snippets_Wpf/Slider/xaml/window1.xaml#selectionrange)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Slider.SelectionStart" />
        <altmember cref="P:System.Windows.Controls.Slider.SelectionEnd" />
      </Docs>
    </Member>
    <Member MemberName="IsSelectionRangeEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsSelectionRangeEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsSelectionRangeEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Slider.IsSelectionRangeEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSelectionRangeEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsSelectionRangeEnabledProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.Slider.IsSelectionRangeEnabled" /> 依赖项属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Slider.IsSelectionRangeEnabled%2A> 依赖项属性的标识符。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSnapToTickEnabled">
      <MemberSignature Language="C#" Value="public bool IsSnapToTickEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSnapToTickEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.IsSnapToTickEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSnapToTickEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSnapToTickEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示 <see cref="T:System.Windows.Controls.Slider" /> 是否自动将 <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> 移动到最近的刻度线。</summary>
        <value>
          如果 <see cref="T:System.Windows.Controls.Slider" /> 要求 <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> 的位置为刻度线，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 时的位置<xref:System.Windows.Controls.Primitives.Track.Thumb%2A>更改和<xref:System.Windows.Controls.Slider.IsSnapToTickEnabled%2A>属性设置为`true`、<xref:System.Windows.Controls.Primitives.Track.Thumb%2A>自动移动到最近的刻度线。  
  
<a name="dependencyPropertyInfo_IsSnapToTickEnabled"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.Slider.IsSnapToTickEnabledProperty>|  
|元数据属性设置为 `true`|无|  
  
   
  
## Examples  
 下面的示例演示如何设置 <xref:System.Windows.Controls.Slider.IsSnapToTickEnabled%2A> 属性。  
  
 [!code-csharp[Slider#Basic](~/samples/snippets/csharp/VS_Snippets_Wpf/Slider/CSharp/Pane1.xaml.cs#basic)]
 [!code-vb[Slider#Basic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Slider/VisualBasic/Pane1.xaml.vb#basic)]
 [!code-xaml[Slider#Basic](~/samples/snippets/xaml/VS_Snippets_Wpf/Slider/xaml/window1.xaml#basic)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSnapToTickEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsSnapToTickEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsSnapToTickEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Slider.IsSnapToTickEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSnapToTickEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsSnapToTickEnabledProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.Slider.IsSnapToTickEnabled" /> 依赖项属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Slider.IsSnapToTickEnabled%2A> 依赖项属性的标识符。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximizeValue">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedCommand MaximizeValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedCommand MaximizeValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.MaximizeValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MaximizeValue As RoutedCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedCommand ^ MaximizeValue { System::Windows::Input::RoutedCommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个命令，该命令将 <see cref="T:System.Windows.Controls.Slider" /><see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 设置为 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 值。</summary>
        <value>要使用的 <see cref="T:System.Windows.Input.RoutedCommand" />。 默认值为 <see cref="F:System.Windows.Input.Key.End" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MaximizeValue"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性用法  
 <code><<em>object</em> <em>property</em>="Slider.MaximizeValue"/></code>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimizeValue">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedCommand MinimizeValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedCommand MinimizeValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.MinimizeValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MinimizeValue As RoutedCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedCommand ^ MinimizeValue { System::Windows::Input::RoutedCommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个命令，该命令将 <see cref="T:System.Windows.Controls.Slider" /><see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 设置为 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 值。</summary>
        <value>要使用的 <see cref="T:System.Windows.Input.RoutedCommand" />。 默认值为 <see cref="F:System.Windows.Input.Key.Home" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MinimizeValue"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性用法  
 <code><<em>object</em> <em>property</em>="Slider.MinimizeValue"/></code>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Slider.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>生成 <see cref="T:System.Windows.Controls.Slider" /> 控件的可视化树。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Slider.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>为 <see cref="T:System.Windows.Controls.Slider" /> 创建一个 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />。</summary>
        <returns>用于 <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer" /> 的 <see cref="T:System.Windows.Controls.Slider" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDecreaseLarge">
      <MemberSignature Language="C#" Value="protected virtual void OnDecreaseLarge ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDecreaseLarge() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Slider.OnDecreaseLarge" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDecreaseLarge ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDecreaseLarge();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>响应 <see cref="P:System.Windows.Controls.Slider.DecreaseLarge" /> 命令。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法减少<xref:System.Windows.Controls.Primitives.RangeBase.Value%2A>的<xref:System.Windows.Controls.Slider>通过<xref:System.Windows.Controls.Primitives.RangeBase.LargeChange%2A>，并将移动<xref:System.Windows.Controls.Primitives.Track.Thumb%2A>以反映更改。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDecreaseSmall">
      <MemberSignature Language="C#" Value="protected virtual void OnDecreaseSmall ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDecreaseSmall() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Slider.OnDecreaseSmall" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDecreaseSmall ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDecreaseSmall();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>响应 <see cref="P:System.Windows.Controls.Slider.DecreaseSmall" /> 命令。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法减少<xref:System.Windows.Controls.Primitives.RangeBase.Value%2A>的<xref:System.Windows.Controls.Slider>通过<xref:System.Windows.Controls.Primitives.RangeBase.SmallChange%2A>，并将移动<xref:System.Windows.Controls.Primitives.Track.Thumb%2A>以反映更改。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIncreaseLarge">
      <MemberSignature Language="C#" Value="protected virtual void OnIncreaseLarge ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIncreaseLarge() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Slider.OnIncreaseLarge" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIncreaseLarge ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIncreaseLarge();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>响应 <see cref="P:System.Windows.Controls.Slider.IncreaseLarge" /> 命令。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法会增加<xref:System.Windows.Controls.Primitives.RangeBase.Value%2A>的<xref:System.Windows.Controls.Slider>通过<xref:System.Windows.Controls.Primitives.RangeBase.LargeChange%2A>，并将移动<xref:System.Windows.Controls.Primitives.Track.Thumb%2A>以反映更改。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIncreaseSmall">
      <MemberSignature Language="C#" Value="protected virtual void OnIncreaseSmall ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIncreaseSmall() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Slider.OnIncreaseSmall" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIncreaseSmall ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIncreaseSmall();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>响应 <see cref="P:System.Windows.Controls.Slider.IncreaseSmall" /> 命令。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法会增加<xref:System.Windows.Controls.Primitives.RangeBase.Value%2A>的<xref:System.Windows.Controls.Slider>通过<xref:System.Windows.Controls.Primitives.RangeBase.SmallChange%2A>，并将移动<xref:System.Windows.Controls.Primitives.Track.Thumb%2A>以反映更改。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMaximizeValue">
      <MemberSignature Language="C#" Value="protected virtual void OnMaximizeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMaximizeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Slider.OnMaximizeValue" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMaximizeValue ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMaximizeValue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>响应 <see cref="P:System.Windows.Controls.Slider.MaximizeValue" /> 命令。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法可更改<xref:System.Windows.Controls.Primitives.RangeBase.Value%2A>的<xref:System.Windows.Controls.Slider>到<xref:System.Windows.Controls.Primitives.RangeBase.Maximum%2A>，并将移动<xref:System.Windows.Controls.Primitives.Track.Thumb%2A>以反映更改。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMaximumChanged">
      <MemberSignature Language="C#" Value="protected override void OnMaximumChanged (double oldMaximum, double newMaximum);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMaximumChanged(float64 oldMaximum, float64 newMaximum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Slider.OnMaximumChanged(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMaximumChanged (oldMaximum As Double, newMaximum As Double)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMaximumChanged(double oldMaximum, double newMaximum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldMaximum" Type="System.Double" />
        <Parameter Name="newMaximum" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="oldMaximum">
          <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 属性的旧值。</param>
        <param name="newMaximum">
          <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 属性的新值。</param>
        <summary>响应 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 属性值的更改。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果新<xref:System.Windows.Controls.Primitives.RangeBase.Maximum%2A>值是小于<xref:System.Windows.Controls.Slider.SelectionStart%2A>值，此实现设置<xref:System.Windows.Controls.Slider.SelectionStart%2A>值赋给<xref:System.Windows.Controls.Primitives.RangeBase.Maximum%2A>值。 如果新<xref:System.Windows.Controls.Primitives.RangeBase.Maximum%2A>值是小于<xref:System.Windows.Controls.Slider.SelectionEnd%2A>值，<xref:System.Windows.Controls.Slider.SelectionEnd%2A>值设置为<xref:System.Windows.Controls.Primitives.RangeBase.Maximum%2A>值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMinimizeValue">
      <MemberSignature Language="C#" Value="protected virtual void OnMinimizeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMinimizeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Slider.OnMinimizeValue" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMinimizeValue ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMinimizeValue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>响应 <see cref="P:System.Windows.Controls.Slider.MinimizeValue" /> 命令。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法可更改<xref:System.Windows.Controls.Primitives.RangeBase.Value%2A>的<xref:System.Windows.Controls.Slider>到<xref:System.Windows.Controls.Primitives.RangeBase.Minimum%2A>，并将移动<xref:System.Windows.Controls.Primitives.Track.Thumb%2A>以反映更改。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMinimumChanged">
      <MemberSignature Language="C#" Value="protected override void OnMinimumChanged (double oldMinimum, double newMinimum);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMinimumChanged(float64 oldMinimum, float64 newMinimum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Slider.OnMinimumChanged(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMinimumChanged (oldMinimum As Double, newMinimum As Double)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMinimumChanged(double oldMinimum, double newMinimum);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldMinimum" Type="System.Double" />
        <Parameter Name="newMinimum" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="oldMinimum">
          <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 属性的旧值。</param>
        <param name="newMinimum">
          <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 属性的新值。</param>
        <summary>响应 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 属性值的更改。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此实现确保<xref:System.Windows.Controls.Slider.SelectionStart%2A>值是否大于或等于新<xref:System.Windows.Controls.Primitives.RangeBase.Minimum%2A>值。 如果<xref:System.Windows.Controls.Slider.SelectionStart%2A>值是小于<xref:System.Windows.Controls.Primitives.RangeBase.Minimum%2A>值，<xref:System.Windows.Controls.Slider.SelectionStart%2A>值设置为<xref:System.Windows.Controls.Primitives.RangeBase.Minimum%2A>值。 <xref:System.Windows.Controls.Slider.SelectionEnd%2A>值还检查以确保它是大于或等于<xref:System.Windows.Controls.Slider.SelectionStart%2A>值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected override void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Slider.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件数据。</param>
        <summary>提供用于 <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> 路由事件的类处理。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当<xref:System.Windows.Controls.Slider.IsMoveToPointEnabled%2A>属性是`true`，此实现移动<xref:System.Windows.Controls.Primitives.Track.Thumb%2A>至的位置的鼠标单击。  
  
 此实现将标记<xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>事件处理的设置<xref:System.Windows.RoutedEventArgs.Handled%2A>属性的事件数据的`true`。 事件由处理此方法因此，<xref:System.Windows.Controls.Primitives.RepeatButton>控制的<xref:System.Windows.Controls.Slider>不处理该事件。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>如果你重写<see cref="M:System.Windows.Controls.Slider.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />，始终调用基实现你<see cref="M:System.Windows.Controls.Slider.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />实现。 如果调用基实现会使基类处理具有类处理程序，这可能会改变最终类的运行时行为的事件。 你可以调用基实现之前或之后你特殊的处理，具体取决于你的要求。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnThumbDragCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnThumbDragCompleted (System.Windows.Controls.Primitives.DragCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnThumbDragCompleted(class System.Windows.Controls.Primitives.DragCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Slider.OnThumbDragCompleted(System.Windows.Controls.Primitives.DragCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnThumbDragCompleted (e As DragCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnThumbDragCompleted(System::Windows::Controls::Primitives::DragCompletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.Primitives.DragCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件数据。</param>
        <summary>提供用于当用户停止拖动 <see cref="T:System.Windows.Controls.Slider" /> 的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 时发生的 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted" /> 事件的类处理。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此实现不会更改已处理的状态 (<xref:System.Windows.RoutedEventArgs.Handled%2A>属性) 的<xref:System.Windows.Controls.Primitives.Thumb.DragCompleted>事件数据。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>可以重写此方法以自定义的方式<see cref="T:System.Windows.Controls.Slider" />进程<see cref="T:System.Windows.Controls.Primitives.Thumb" />动作数。 如果你重写<see cref="M:System.Windows.Controls.Slider.OnThumbDragCompleted(System.Windows.Controls.Primitives.DragCompletedEventArgs)" />，始终调用基实现你<see cref="M:System.Windows.Controls.Slider.OnThumbDragCompleted(System.Windows.Controls.Primitives.DragCompletedEventArgs)" />实现。 如果调用基实现会使基类处理具有类处理程序，这可能会改变最终类的运行时行为的事件。 你可以调用基实现之前或之后你特殊的处理，具体取决于你的要求。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnThumbDragDelta">
      <MemberSignature Language="C#" Value="protected virtual void OnThumbDragDelta (System.Windows.Controls.Primitives.DragDeltaEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnThumbDragDelta(class System.Windows.Controls.Primitives.DragDeltaEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Slider.OnThumbDragDelta(System.Windows.Controls.Primitives.DragDeltaEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnThumbDragDelta (e As DragDeltaEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnThumbDragDelta(System::Windows::Controls::Primitives::DragDeltaEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.Primitives.DragDeltaEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件数据。</param>
        <summary>提供用于当用户拖动 <see cref="T:System.Windows.Controls.Slider" /> 的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 时发生的 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> 事件的类处理。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此实现不会更改已处理的状态 (<xref:System.Windows.RoutedEventArgs.Handled%2A>属性) 的<xref:System.Windows.Controls.Primitives.Thumb.DragDelta>事件数据。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>可以重写此方法以自定义的方式<see cref="T:System.Windows.Controls.Slider" />进程<see cref="T:System.Windows.Controls.Primitives.Thumb" />动作数。 如果你重写<see cref="M:System.Windows.Controls.Slider.OnThumbDragDelta(System.Windows.Controls.Primitives.DragDeltaEventArgs)" />，始终调用基实现你<see cref="M:System.Windows.Controls.Slider.OnThumbDragDelta(System.Windows.Controls.Primitives.DragDeltaEventArgs)" />实现。 如果调用基实现会使基类处理具有类处理程序，这可能会改变最终类的运行时行为的事件。 你可以调用基实现之前或之后你特殊的处理，具体取决于你的要求。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnThumbDragStarted">
      <MemberSignature Language="C#" Value="protected virtual void OnThumbDragStarted (System.Windows.Controls.Primitives.DragStartedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnThumbDragStarted(class System.Windows.Controls.Primitives.DragStartedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Slider.OnThumbDragStarted(System.Windows.Controls.Primitives.DragStartedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnThumbDragStarted (e As DragStartedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnThumbDragStarted(System::Windows::Controls::Primitives::DragStartedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.Primitives.DragStartedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件数据。</param>
        <summary>提供用于当用户开始拖动 <see cref="T:System.Windows.Controls.Slider" /> 的 <see cref="T:System.Windows.Controls.Primitives.Thumb" /> 时发生的 <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted" /> 事件的类处理。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 除了默认处理<xref:System.Windows.Controls.Primitives.Thumb.DragStarted>事件，此实现将显示工具提示显示<xref:System.Windows.Controls.Primitives.RangeBase.Value%2A>的<xref:System.Windows.Controls.Slider>时<xref:System.Windows.Controls.Slider.AutoToolTipPlacement%2A>属性未设置为<xref:System.Windows.Controls.Primitives.AutoToolTipPlacement.None>。  
  
 此实现不处理<xref:System.Windows.Controls.Primitives.Thumb.DragStarted>事件。 值<xref:System.Windows.RoutedEventArgs.Handled%2A>属性<xref:System.Windows.Controls.Primitives.DragCompletedEventArgs>不会更改。  
  
 可以重写此方法以自定义的方式<xref:System.Windows.Controls.Slider>进程<xref:System.Windows.Controls.Primitives.Thumb>动作数。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnValueChanged">
      <MemberSignature Language="C#" Value="protected override void OnValueChanged (double oldValue, double newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValueChanged(float64 oldValue, float64 newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Slider.OnValueChanged(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnValueChanged (oldValue As Double, newValue As Double)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnValueChanged(double oldValue, double newValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.Double" />
        <Parameter Name="newValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="oldValue">
          <see cref="T:System.Windows.Controls.Slider" /> 的旧 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" />。</param>
        <param name="newValue">
          <see cref="T:System.Windows.Controls.Slider" /> 的新 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" />。</param>
        <summary>当 <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> 属性更改时，更新 <see cref="T:System.Windows.Controls.Slider" /> 的当前位置。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Orientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Orientation Orientation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As Orientation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Orientation Orientation { System::Windows::Controls::Orientation get(); void set(System::Windows::Controls::Orientation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Controls.Slider" /> 的方向。</summary>
        <value>
          <see cref="P:System.Windows.Controls.Slider.Orientation" /> 值之一。 默认值为 <see cref="F:System.Windows.Controls.Orientation.Horizontal" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性将绑定到<xref:System.Windows.Controls.Primitives.Track.Orientation%2A>属性<xref:System.Windows.Controls.Primitives.Track>控件<xref:System.Windows.Controls.Slider>实现。  
  
<a name="dependencyPropertyInfo_Orientation"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.Slider.OrientationProperty>|  
|元数据属性设置为 `true`|无|  
  
   
  
## Examples  
 下面的示例演示如何设置 <xref:System.Windows.Controls.Slider.Orientation%2A> 属性。  
  
 [!code-csharp[Slider#Basic](~/samples/snippets/csharp/VS_Snippets_Wpf/Slider/CSharp/Pane1.xaml.cs#basic)]
 [!code-vb[Slider#Basic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Slider/VisualBasic/Pane1.xaml.vb#basic)]
 [!code-xaml[Slider#Basic](~/samples/snippets/xaml/VS_Snippets_Wpf/Slider/xaml/window1.xaml#basic)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OrientationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OrientationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OrientationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Slider.OrientationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OrientationProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OrientationProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.Slider.Orientation" /> 依赖项属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Slider.Orientation%2A> 依赖项属性的标识符。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionEnd">
      <MemberSignature Language="C#" Value="public double SelectionEnd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SelectionEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.SelectionEnd" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionEnd As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SelectionEnd { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Controls.Slider" /> 的指定选择内容的最大值。</summary>
        <value>
          <see cref="T:System.Windows.Controls.Slider" /> 的值的选择范围的最大值。 默认值为零 (0)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Windows.Controls.Slider.SelectionEnd%2A>属性不能大于值<xref:System.Windows.Controls.Primitives.RangeBase.Maximum%2A>属性，并且不能小于的值<xref:System.Windows.Controls.Primitives.RangeBase.Minimum%2A>属性。 值<xref:System.Windows.Controls.Slider.SelectionEnd%2A>属性还必须是大于或等于的值<xref:System.Windows.Controls.Slider.SelectionStart%2A>属性。 如果值<xref:System.Windows.Controls.Slider.SelectionEnd%2A>属性大于的值<xref:System.Windows.Controls.Primitives.RangeBase.Maximum%2A>属性或小于的值<xref:System.Windows.Controls.Primitives.RangeBase.Minimum%2A>属性，值设置为的值<xref:System.Windows.Controls.Primitives.RangeBase.Maximum%2A>或<xref:System.Windows.Controls.Primitives.RangeBase.Minimum%2A>属性分别。  
  
<a name="dependencyPropertyInfo_SelectionEnd"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.Slider.SelectionEndProperty>|  
|元数据属性设置为 `true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
   
  
## Examples  
 下面的示例演示如何设置 <xref:System.Windows.Controls.Slider.SelectionEnd%2A> 属性。  
  
 [!code-csharp[Slider#SelectionRange](~/samples/snippets/csharp/VS_Snippets_Wpf/Slider/CSharp/Pane1.xaml.cs#selectionrange)]
 [!code-vb[Slider#SelectionRange](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Slider/VisualBasic/Pane1.xaml.vb#selectionrange)]
 [!code-xaml[Slider#SelectionRange](~/samples/snippets/xaml/VS_Snippets_Wpf/Slider/xaml/window1.xaml#selectionrange)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Slider.SelectionStart" />
        <altmember cref="P:System.Windows.Controls.Slider.IsSelectionRangeEnabled" />
      </Docs>
    </Member>
    <Member MemberName="SelectionEndProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionEndProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionEndProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Slider.SelectionEndProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionEndProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionEndProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.Slider.SelectionEnd" /> 依赖项属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Slider.SelectionEnd%2A> 依赖项属性的标识符。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionStart">
      <MemberSignature Language="C#" Value="public double SelectionStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SelectionStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.SelectionStart" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionStart As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SelectionStart { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 <see cref="T:System.Windows.Controls.Slider" /> 的指定选择内容的最大值。</summary>
        <value>
          <see cref="T:System.Windows.Controls.Slider" /> 的值的选择范围的最大值。 默认值为零 (0)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Windows.Controls.Slider.SelectionStart%2A>属性不能为的值小于<xref:System.Windows.Controls.Primitives.RangeBase.Minimum%2A>属性，并且不能大于值<xref:System.Windows.Controls.Primitives.RangeBase.Maximum%2A>属性。 值<xref:System.Windows.Controls.Slider.SelectionEnd%2A>属性还必须是大于或等于的值<xref:System.Windows.Controls.Slider.SelectionStart%2A>属性。 如果<xref:System.Windows.Controls.Slider.SelectionStart%2A>是小于<xref:System.Windows.Controls.Primitives.RangeBase.Minimum%2A>或大于<xref:System.Windows.Controls.Primitives.RangeBase.Maximum%2A>，<xref:System.Windows.Controls.Slider.SelectionStart%2A>设置的值为<xref:System.Windows.Controls.Primitives.RangeBase.Minimum%2A>或<xref:System.Windows.Controls.Primitives.RangeBase.Maximum%2A>分别。  
  
<a name="dependencyPropertyInfo_SelectionStart"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.Slider.SelectionStartProperty>|  
|元数据属性设置为 `true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
   
  
## Examples  
 下面的示例演示如何设置 <xref:System.Windows.Controls.Slider.SelectionEnd%2A> 属性。  
  
 [!code-csharp[Slider#SelectionRange](~/samples/snippets/csharp/VS_Snippets_Wpf/Slider/CSharp/Pane1.xaml.cs#selectionrange)]
 [!code-vb[Slider#SelectionRange](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Slider/VisualBasic/Pane1.xaml.vb#selectionrange)]
 [!code-xaml[Slider#SelectionRange](~/samples/snippets/xaml/VS_Snippets_Wpf/Slider/xaml/window1.xaml#selectionrange)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Slider.SelectionEnd" />
        <altmember cref="P:System.Windows.Controls.Slider.IsSelectionRangeEnabled" />
      </Docs>
    </Member>
    <Member MemberName="SelectionStartProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionStartProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionStartProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Slider.SelectionStartProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionStartProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionStartProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.Slider.SelectionStart" /> 依赖项属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Slider.SelectionStart%2A> 依赖项属性的标识符。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TickFrequency">
      <MemberSignature Language="C#" Value="public double TickFrequency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TickFrequency" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.TickFrequency" />
      <MemberSignature Language="VB.NET" Value="Public Property TickFrequency As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double TickFrequency { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置刻度线之间的间隔。</summary>
        <value>刻度线之间的距离。 默认值为 (1.0)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Controls.Slider.Ticks%2A>属性设置为一个值，不是`null`、<xref:System.Windows.Controls.Slider.TickFrequency%2A>未使用属性。  
  
 <xref:System.Windows.Controls.Slider.TickPlacement%2A>属性必须设置为值以外<xref:System.Windows.Controls.Primitives.TickPlacement.None>为才可以显示刻度沿<xref:System.Windows.Controls.Slider>。  
  
 通过指定的时间间隔绘制刻度<xref:System.Windows.Controls.Slider.TickFrequency%2A>属性。 刻度线标记开始时间的值<xref:System.Windows.Controls.Primitives.RangeBase.Minimum%2A>属性和值的前继续<xref:System.Windows.Controls.Primitives.RangeBase.Maximum%2A>达到属性。  
  
<a name="dependencyPropertyInfo_TickFrequency"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.Slider.TickFrequencyProperty>|  
|元数据属性设置为 `true`|无|  
  
   
  
## Examples  
 下面的示例演示如何设置 <xref:System.Windows.Controls.Slider.TickFrequency%2A> 属性。  
  
 [!code-csharp[Slider#Basic](~/samples/snippets/csharp/VS_Snippets_Wpf/Slider/CSharp/Pane1.xaml.cs#basic)]
 [!code-vb[Slider#Basic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Slider/VisualBasic/Pane1.xaml.vb#basic)]
 [!code-xaml[Slider#Basic](~/samples/snippets/xaml/VS_Snippets_Wpf/Slider/xaml/window1.xaml#basic)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Slider.TickPlacement" />
      </Docs>
    </Member>
    <Member MemberName="TickFrequencyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TickFrequencyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TickFrequencyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Slider.TickFrequencyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TickFrequencyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TickFrequencyProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.Slider.TickFrequency" /> 依赖项属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Slider.TickFrequency%2A> 依赖项属性的标识符。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TickPlacement">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.TickPlacement TickPlacement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Primitives.TickPlacement TickPlacement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.TickPlacement" />
      <MemberSignature Language="VB.NET" Value="Public Property TickPlacement As TickPlacement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Primitives::TickPlacement TickPlacement { System::Windows::Controls::Primitives::TickPlacement get(); void set(System::Windows::Controls::Primitives::TickPlacement value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.TickPlacement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置与 <see cref="T:System.Windows.Controls.Primitives.Track" /> 的 <see cref="T:System.Windows.Controls.Slider" /> 相关的刻度线的位置。</summary>
        <value>一个 <see cref="P:System.Windows.Controls.Slider.TickPlacement" /> 值，该值定义如何在与滑块条相关的 <see cref="T:System.Windows.Controls.Slider" /> 中放置刻度线。 默认值为 <see cref="F:System.Windows.Controls.Primitives.TickPlacement.None" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Slider.TickPlacement%2A>属性必须设置为值以外<xref:System.Windows.Controls.Primitives.TickPlacement.None>为才可以显示刻度。  
  
   
  
## Examples  
 下面的示例演示如何设置 <xref:System.Windows.Controls.Slider.TickPlacement%2A> 属性。  
  
 [!code-csharp[Slider#Basic](~/samples/snippets/csharp/VS_Snippets_Wpf/Slider/CSharp/Pane1.xaml.cs#basic)]
 [!code-vb[Slider#Basic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Slider/VisualBasic/Pane1.xaml.vb#basic)]
 [!code-xaml[Slider#Basic](~/samples/snippets/xaml/VS_Snippets_Wpf/Slider/xaml/window1.xaml#basic)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Slider.TickFrequency" />
      </Docs>
    </Member>
    <Member MemberName="TickPlacementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TickPlacementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TickPlacementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Slider.TickPlacementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TickPlacementProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TickPlacementProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.Slider.TickPlacement" /> 依赖项属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Slider.TickPlacement%2A> 依赖项属性的标识符。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Ticks">
      <MemberSignature Language="C#" Value="public System.Windows.Media.DoubleCollection Ticks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.DoubleCollection Ticks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.Ticks" />
      <MemberSignature Language="VB.NET" Value="Public Property Ticks As DoubleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::DoubleCollection ^ Ticks { System::Windows::Media::DoubleCollection ^ get(); void set(System::Windows::Media::DoubleCollection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DoubleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置为 <see cref="T:System.Windows.Controls.Slider" /> 显示的刻度线的位置。</summary>
        <value>为 <see cref="T:System.Windows.Controls.Slider" /> 显示的一组刻度线。 默认值为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 刻度线范围外的定义的<xref:System.Windows.Controls.Primitives.RangeBase.Minimum%2A>和<xref:System.Windows.Controls.Primitives.RangeBase.Maximum%2A>属性值将被忽略。  
  
 <xref:System.Windows.Controls.Slider.TickPlacement%2A>属性必须设置为值以外<xref:System.Windows.Controls.Primitives.TickPlacement.None>为才可以显示刻度。  
  
<a name="dependencyPropertyInfo_Ticks"></a>   
## <a name="dependency-property-information"></a>依赖项属性信息  
  
|||  
|-|-|  
|标识符字段|<xref:System.Windows.Controls.Slider.TicksProperty>|  
|元数据属性设置为 `true`|无|  
  
   
  
## Examples  
 下面的示例演示如何设置 <xref:System.Windows.Controls.Slider.Ticks%2A> 属性。  
  
 [!code-csharp[Slider#SelectionRange](~/samples/snippets/csharp/VS_Snippets_Wpf/Slider/CSharp/Pane1.xaml.cs#selectionrange)]
 [!code-vb[Slider#SelectionRange](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Slider/VisualBasic/Pane1.xaml.vb#selectionrange)]
 [!code-xaml[Slider#SelectionRange](~/samples/snippets/xaml/VS_Snippets_Wpf/Slider/xaml/window1.xaml#selectionrange)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TicksProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TicksProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TicksProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Slider.TicksProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TicksProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TicksProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>标识 <see cref="P:System.Windows.Controls.Slider.Ticks" /> 依赖项属性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Slider.Ticks%2A> 依赖项属性的标识符。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>