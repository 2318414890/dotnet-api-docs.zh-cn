<Type Name="InkCanvas" FullName="System.Windows.Controls.InkCanvas">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0bf3dfdaab11626dff0c2b150b81ebb8db67c885" />
    <Meta Name="ms.sourcegitcommit" Value="4f9e960e786edf67b6a29655670b1a15e71c03de" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-CN" />
    <Meta Name="ms.lasthandoff" Value="08/02/2018" />
    <Meta Name="ms.locfileid" Value="39418464" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class InkCanvas : System.Windows.FrameworkElement, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi InkCanvas extends System.Windows.FrameworkElement implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.InkCanvas" />
  <TypeSignature Language="VB.NET" Value="Public Class InkCanvas&#xA;Inherits FrameworkElement&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class InkCanvas : System::Windows::FrameworkElement, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type InkCanvas = class&#xA;    inherit FrameworkElement&#xA;    interface IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.FrameworkElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Children")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="3a6f1-101">定义接收和显示墨迹笔划的区域。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3a6f1-101">Defines an area that receives and displays ink strokes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-102"><xref:System.Windows.Controls.InkCanvas>是可用于接收和显示墨迹输入的元素。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-102">An <xref:System.Windows.Controls.InkCanvas> is an element that can be used to receive and display ink input.</span></span> <span data-ttu-id="3a6f1-103">这通常可通过触笔与数字化器产生墨迹笔画使用触笔或鼠标交互使用。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-103">This is commonly done through the use of a stylus, which interacts with a digitizer to produce ink strokes using a stylus or a mouse.</span></span> <span data-ttu-id="3a6f1-104">创建的笔画表示为<xref:System.Windows.Ink.Stroke>对象，它们可以是以编程方式操作或根据用户输入。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-104">The created strokes are represented as <xref:System.Windows.Ink.Stroke> objects, and can be manipulated either programmatically or based on user input.</span></span> <span data-ttu-id="3a6f1-105"><xref:System.Windows.Controls.InkCanvas>使用户能够修改或删除现有<xref:System.Windows.Ink.Stroke>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-105">The <xref:System.Windows.Controls.InkCanvas> enables users to modify or delete an existing <xref:System.Windows.Ink.Stroke>.</span></span>  
  
 <span data-ttu-id="3a6f1-106"><xref:System.Windows.Controls.InkCanvas>可以绑定到数据源。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-106">The <xref:System.Windows.Controls.InkCanvas> can be bound to a data source.</span></span> <span data-ttu-id="3a6f1-107">例如，您可以将绑定<xref:System.Windows.Controls.InkCanvas.Strokes%2A>属性设置为： 包含手写内容中墨迹序列化的数据格式 (ISF); 甚至可以为 base-64 的、 已编码字符串<xref:System.Windows.Controls.InkCanvas.Strokes%2A>他人财产的<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-107">For example, you can bind the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property to: a base-64, encoded string that contains ink data in Ink Serialized format (ISF); or even to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property of another <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3a6f1-108">此外可以绑定的属性，如<xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A>和<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>，到其他数据源。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-108">You can also bind properties, such as <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> and <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, to other data sources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-109">下面的示例演示了如何模拟使用笔和荧光笔在同一个<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-109">The following example demonstrates how to simulate the use of both a pen and a highlighter on the same <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3a6f1-110">该示例假定标记语言 (XAML) 文件中的根元素是<xref:System.Windows.Controls.DockPanel>调用`root`。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-110">The example assumes that the root element in the markup language (XAML) file is a <xref:System.Windows.Controls.DockPanel> called `root`.</span></span> <span data-ttu-id="3a6f1-111">它还假定，没有<xref:System.Windows.Controls.Button>称为`switchHighlighter`并且同时<xref:System.Windows.Controls.Primitives.ButtonBase.Click>和<xref:System.Windows.FrameworkElement.Loaded>事件连接到该示例的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-111">It also assumes that there is a <xref:System.Windows.Controls.Button> called `switchHighlighter` and that both the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> and <xref:System.Windows.FrameworkElement.Loaded> events are connected to the example's event handler.</span></span>  
  
 [!code-csharp[DrawingAttributes#3](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#3)]
 [!code-vb[DrawingAttributes#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#3)]  
  
 <span data-ttu-id="3a6f1-112">下面的示例声明了两个<xref:System.Windows.Controls.InkCanvas>XAML 中的对象和它们和其他数据源之间建立数据绑定。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-112">The following example declares two <xref:System.Windows.Controls.InkCanvas> objects in XAML and establishes data binding between them and other data sources.</span></span> <span data-ttu-id="3a6f1-113">第一个<xref:System.Windows.Controls.InkCanvas>，称为`ic`，绑定到两个数据源。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-113">The first <xref:System.Windows.Controls.InkCanvas>, called `ic`, is bound to two data sources.</span></span> <span data-ttu-id="3a6f1-114"><xref:System.Windows.Controls.InkCanvas.EditingMode%2A>并<xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A>上的属性`ic`绑定到<xref:System.Windows.Controls.ListBox>，反过来，绑定到 XAML 中定义的数组的对象。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-114">The <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> and <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> properties on `ic` are bound to <xref:System.Windows.Controls.ListBox> objects, which are, in turn, bound to arrays defined in the XAML.</span></span> <span data-ttu-id="3a6f1-115"><xref:System.Windows.Controls.InkCanvas.EditingMode%2A>， <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A>，并<xref:System.Windows.Controls.InkCanvas.Strokes%2A>的第二个属性<xref:System.Windows.Controls.InkCanvas>绑定到第一个<xref:System.Windows.Controls.InkCanvas>在下面的代码。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-115">The <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A>, and <xref:System.Windows.Controls.InkCanvas.Strokes%2A> properties of the second <xref:System.Windows.Controls.InkCanvas> are bound to the first <xref:System.Windows.Controls.InkCanvas> in the following code.</span></span>  
  
 [!code-xaml[InkCanvasBindingSnippet#1](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasBindingSnippet/CS/Window1.xaml#1)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InkCanvas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InkCanvas();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-116">初始化 InkCanvas 类的一个新实例。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-116">Initializes a new instance of the InkCanvas class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveEditingMode">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.InkCanvasEditingMode ActiveEditingMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.InkCanvasEditingMode ActiveEditingMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.ActiveEditingMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveEditingMode As InkCanvasEditingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::InkCanvasEditingMode ActiveEditingMode { System::Windows::Controls::InkCanvasEditingMode get(); };" />
      <MemberSignature Language="F#" Value="member this.ActiveEditingMode : System.Windows.Controls.InkCanvasEditingMode" Usage="System.Windows.Controls.InkCanvas.ActiveEditingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasEditingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-117">获取 <see cref="T:System.Windows.Controls.InkCanvas" /> 的当前编辑模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-117">Gets the current editing mode of the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a6f1-118">
            <see cref="T:System.Windows.Controls.InkCanvas" /> 的当前编辑模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-118">The current editing mode of the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-119"><xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A>属性指示当前<xref:System.Windows.Controls.InkCanvasEditingMode>的<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-119">The <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> property indicates the current <xref:System.Windows.Controls.InkCanvasEditingMode> of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  <span data-ttu-id="3a6f1-120">假设<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>设置为<xref:System.Windows.Controls.InkCanvasEditingMode.Ink>并<xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A>设置为<xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-120">Suppose that the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode.Ink> and the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.</span></span>  <span data-ttu-id="3a6f1-121">中的倒排的位置，使用 tablet 笔时<xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A>的值为<xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-121">When the tablet pen is used in an inverted position, <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> has a value of <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.</span></span> <span data-ttu-id="3a6f1-122">否则，其值是<xref:System.Windows.Controls.InkCanvasEditingMode.Ink>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-122">Otherwise, its value is <xref:System.Windows.Controls.InkCanvasEditingMode.Ink>.</span></span>  
  
<a name="dependencyPropertyInfo_ActiveEditingMode"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3a6f1-123">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="3a6f1-123">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3a6f1-124">标识符字段</span><span class="sxs-lookup"><span data-stu-id="3a6f1-124">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.ActiveEditingModeProperty>|  
|<span data-ttu-id="3a6f1-125">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="3a6f1-125">Metadata properties set to `true`</span></span>|<span data-ttu-id="3a6f1-126">无</span><span class="sxs-lookup"><span data-stu-id="3a6f1-126">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-127">以下示例将报告的值<xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A>发生更改。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-127">The following example reports the value of <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> whenever it changes.</span></span>  
  
 [!code-csharp[InkCanvasSamples#36](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#36)]
 [!code-vb[InkCanvasSamples#36](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveEditingModeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler ActiveEditingModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler ActiveEditingModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ActiveEditingModeChanged As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ ActiveEditingModeChanged;" />
      <MemberSignature Language="F#" Value="member this.ActiveEditingModeChanged : System.Windows.RoutedEventHandler " Usage="member this.ActiveEditingModeChanged : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-128">在当前编辑模式改变时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-128">Occurs when the current editing mode changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-129"><xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A>属性更改每当<xref:System.Windows.Controls.InkCanvas>进入新的编辑模式。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-129">The <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> property changes whenever the <xref:System.Windows.Controls.InkCanvas> enters a new editing mode.</span></span> <span data-ttu-id="3a6f1-130">例如，假设<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>设置为<xref:System.Windows.Controls.InkCanvasEditingMode.Ink>并<xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A>设置为<xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-130">For example, suppose that the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode.Ink> and the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.</span></span> <span data-ttu-id="3a6f1-131">当用户更改 tablet 笔的笔尖<xref:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged>事件发生。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-131">When the user changes the tip of tablet pen, the <xref:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged> event occurs.</span></span>  
  
<a name="routedEventInfo_ActiveEditingModeChanged"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3a6f1-132">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="3a6f1-132">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3a6f1-133">标识符字段</span><span class="sxs-lookup"><span data-stu-id="3a6f1-133">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent>|  
|<span data-ttu-id="3a6f1-134">路由策略</span><span class="sxs-lookup"><span data-stu-id="3a6f1-134">Routing strategy</span></span>|<span data-ttu-id="3a6f1-135">浮升</span><span class="sxs-lookup"><span data-stu-id="3a6f1-135">Bubbling</span></span>|  
|<span data-ttu-id="3a6f1-136">委托</span><span class="sxs-lookup"><span data-stu-id="3a6f1-136">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-137">以下示例将报告的值<xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A>发生更改。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-137">The following example reports the value of <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> whenever it changes.</span></span>  
  
 [!code-csharp[InkCanvasSamples#36](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#36)]
 [!code-vb[InkCanvasSamples#36](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#36)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnActiveEditingModeChanged(System.Windows.RoutedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ActiveEditingModeChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ActiveEditingModeChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ActiveEditingModeChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ActiveEditingModeChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ActiveEditingModeChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ActiveEditingModeChangedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-138">标识 <see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" /> 路由事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-138">Identifies the <see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveEditingModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ActiveEditingModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ActiveEditingModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.ActiveEditingModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ActiveEditingModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ActiveEditingModeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ActiveEditingModeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.InkCanvas.ActiveEditingModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-139">标识 <see cref="P:System.Windows.Controls.InkCanvas.ActiveEditingMode" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-139">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.ActiveEditingMode" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size ArrangeOverride (System.Windows.Size arrangeSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size arrangeSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.ArrangeOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ArrangeOverride (arrangeSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size ArrangeOverride(System::Windows::Size arrangeSize);" />
      <MemberSignature Language="F#" Value="override this.ArrangeOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="inkCanvas.ArrangeOverride arrangeSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrangeSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="arrangeSize">
          <span data-ttu-id="3a6f1-140">父级中应使用此元素排列自身及其子元素的最终区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-140">The final area within the parent that this element should use to arrange itself and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6f1-141">定位子元素，并确定 <see cref="T:System.Windows.Controls.InkCanvas" /> 对象的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-141">Positions child elements and determines a size for the <see cref="T:System.Windows.Controls.InkCanvas" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a6f1-142">使用的实际大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-142">The actual size used.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Background">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush Background { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush Background" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Background" />
      <MemberSignature Language="VB.NET" Value="Public Property Background As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ Background { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Background : System.Windows.Media.Brush with get, set" Usage="System.Windows.Controls.InkCanvas.Background" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-143">获取或设置一个 <see cref="T:System.Windows.Media.Brush" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-143">Gets or sets a <see cref="T:System.Windows.Media.Brush" />.</span>
          </span>
          <span data-ttu-id="3a6f1-144">画笔用于填充 <see cref="T:System.Windows.Controls.InkCanvas" /> 周围的边框区域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-144">The brush is used to fill the border area surrounding a <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a6f1-145">一个用于填充 <see cref="T:System.Windows.Media.Brush" /> 周围的边框区域的 <see cref="T:System.Windows.Controls.InkCanvas" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-145">A <see cref="T:System.Windows.Media.Brush" /> used to fill the border area surrounding a <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Background"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3a6f1-146">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="3a6f1-146">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3a6f1-147">标识符字段</span><span class="sxs-lookup"><span data-stu-id="3a6f1-147">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.BackgroundProperty>|  
|<span data-ttu-id="3a6f1-148">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="3a6f1-148">Metadata properties set to `true`</span></span>|<span data-ttu-id="3a6f1-149"><xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A></span><span class="sxs-lookup"><span data-stu-id="3a6f1-149"><xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-150">下面的示例演示如何设置<xref:System.Windows.Controls.InkCanvas.Background%2A>属性上的<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-150">The following example demonstrates how to set the <xref:System.Windows.Controls.InkCanvas.Background%2A> property on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#37](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#37)]
 [!code-vb[InkCanvasSamples#37](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#37)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BackgroundProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BackgroundProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.BackgroundProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BackgroundProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BackgroundProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BackgroundProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.InkCanvas.BackgroundProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-151">标识 <see cref="P:System.Windows.Controls.InkCanvas.Background" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-151">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Background" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bottom">
      <MemberSignature Language="C#" Value="see GetBottom, and SetBottom" />
      <MemberSignature Language="ILAsm" Value="see GetBottom, and SetBottom" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Bottom" />
      <MemberSignature Language="VB.NET" Value="see GetBottom, and SetBottom" />
      <MemberSignature Language="F#" Value="see GetBottom, and SetBottom" Usage="see GetBottom, and SetBottom" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-152">获取或设置某元素的下边缘与其父 <see cref="T:System.Windows.Controls.InkCanvas" /> 的下边缘之间的距离。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-152">Gets or sets the distance between the bottom of an element and the bottom of its parent <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Bottom"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3a6f1-153">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="3a6f1-153">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3a6f1-154">标识符字段</span><span class="sxs-lookup"><span data-stu-id="3a6f1-154">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.BottomProperty>|  
|<span data-ttu-id="3a6f1-155">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="3a6f1-155">Metadata properties set to `true`</span></span>|<span data-ttu-id="3a6f1-156">无</span><span class="sxs-lookup"><span data-stu-id="3a6f1-156">None</span></span>|  
  
<a name="xamlAttributeUsage_Bottom"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="3a6f1-157">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="3a6f1-157">XAML Attribute Usage</span></span>  
  
```  
<object InkCanvas.Bottom="double"/>  
- or –  
<object InkCanvas.Bottom="qualifiedDouble"/>  
```  
  
<a name="xamlValues_Bottom"></a>   
## <a name="xaml-values"></a><span data-ttu-id="3a6f1-158">XAML 值</span><span class="sxs-lookup"><span data-stu-id="3a6f1-158">XAML Values</span></span>  
 <span data-ttu-id="3a6f1-159">*double*</span><span class="sxs-lookup"><span data-stu-id="3a6f1-159">*double*</span></span>  
 <span data-ttu-id="3a6f1-160">字符串表示形式<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-160">String representation of a <xref:System.Double> value.</span></span> <span data-ttu-id="3a6f1-161">这被解释为[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]度量。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-161">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="3a6f1-162">字符串不需要显式包括小数点。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-162">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="3a6f1-163">例如，值为`1`是可接受。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-163">For instance, a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="3a6f1-164">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="3a6f1-164">*qualifiedDouble*</span></span>  
 <span data-ttu-id="3a6f1-165">一个*双*值，上文所述跟以下单位声明字符串之一： `px`， `in`， `cm`， `pt`。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-165">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="3a6f1-166">`px` （默认值） [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="3a6f1-166">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="3a6f1-167">`in` 为英寸;1 中为 96px = =</span><span class="sxs-lookup"><span data-stu-id="3a6f1-167">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="3a6f1-168">`cm` 为厘米;1cm==(96/2.54) px</span><span class="sxs-lookup"><span data-stu-id="3a6f1-168">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="3a6f1-169">`pt` 为点;1pt==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="3a6f1-169">`pt` is points; 1pt==(96/72) px</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-170">下面的示例演示如何设置的位置<xref:System.Windows.Controls.Label>上<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-170">The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Label> on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-xml[InkCanvasSamples#35](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BottomProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BottomProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BottomProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.BottomProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BottomProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BottomProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BottomProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.InkCanvas.BottomProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-171">标识 <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> 附加属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-171">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanPaste">
      <MemberSignature Language="C#" Value="public bool CanPaste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanPaste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.CanPaste" />
      <MemberSignature Language="VB.NET" Value="Public Function CanPaste () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanPaste();" />
      <MemberSignature Language="F#" Value="member this.CanPaste : unit -&gt; bool" Usage="inkCanvas.CanPaste " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-172">指示剪贴板的内容是否可以粘贴到 <see cref="T:System.Windows.Controls.InkCanvas" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-172">Indicates whether the contents of the Clipboard can be pasted into the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a6f1-173">如果可以粘贴剪贴板的内容，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-173">
              <see langword="true" /> if the contents of the Clipboard can be pasted in; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-174"><xref:System.Windows.Controls.InkCanvas>可以支持中的剪贴板数据[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]格式， [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]，和文本格式。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-174">The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)], and text format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-175">下面的示例将一个元素复制到剪贴板，并将其粘贴到<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-175">The following example copies an element to the Clipboard and pastes it to the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3a6f1-176">此示例假定是名为的元素`rect1`，并且<xref:System.Windows.Controls.Primitives.ButtonBase.Click>事件已连接到该示例中的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-176">This example assumes that there is an element called `rect1`, and that the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> events have been connected to the event handlers in the example.</span></span>  
  
 [!code-csharp[InkCanvasSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[InkCanvasSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="3a6f1-177">粘贴到剪贴板的内容的权限<see cref="T:System.Windows.Controls.InkCanvas" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-177">Permission to paste content from the Clipboard to the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
          <span data-ttu-id="3a6f1-178">关联枚举：<see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-178">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" />.</span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Controls.InkCanvas.CopySelection" />
        <altmember cref="Overload:System.Windows.Controls.InkCanvas.Paste" />
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.UIElementCollection Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.UIElementCollection Children" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Children" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Children As UIElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::UIElementCollection ^ Children { System::Windows::Controls::UIElementCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Children : System.Windows.Controls.UIElementCollection" Usage="System.Windows.Controls.InkCanvas.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.UIElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-179">检索 <see cref="T:System.Windows.Controls.InkCanvas" /> 的子元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-179">Retrieves child elements of the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a6f1-180">位于 <see cref="T:System.Windows.Controls.InkCanvas" /> 上的一个子元素集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-180">A collection of child elements located on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Children"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="3a6f1-181">XAML 属性元素用法</span><span class="sxs-lookup"><span data-stu-id="3a6f1-181">XAML Property Element Usage</span></span>  
  
```  
<object>  
  OneOrMoreUIElements  
</object>  
```  
  
<a name="xamlValues_Children"></a>   
## <a name="xaml-values"></a><span data-ttu-id="3a6f1-182">XAML 值</span><span class="sxs-lookup"><span data-stu-id="3a6f1-182">XAML Values</span></span>  
 <span data-ttu-id="3a6f1-183">*OneOrMoreUIElements*</span><span class="sxs-lookup"><span data-stu-id="3a6f1-183">*OneOrMoreUIElements*</span></span>  
 <span data-ttu-id="3a6f1-184">一个或多个<xref:System.Windows.UIElement>对象。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-184">One or more <xref:System.Windows.UIElement> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-185">以下示例将添加<xref:System.Windows.Controls.TextBlock>到<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-185">The following example adds a <xref:System.Windows.Controls.TextBlock> to an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#8](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#8)]
 [!code-vb[InkCanvasSamples#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopySelection">
      <MemberSignature Language="C#" Value="public void CopySelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopySelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.CopySelection" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopySelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopySelection();" />
      <MemberSignature Language="F#" Value="member this.CopySelection : unit -&gt; unit" Usage="inkCanvas.CopySelection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-186">将选定笔画和/或元素复制到剪贴板。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-186">Copies selected strokes and/or elements to the Clipboard.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-187"><xref:System.Windows.Controls.InkCanvas>可以支持中的剪贴板数据[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]格式， [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]，和文本格式。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-187">The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)], and text format.</span></span> <span data-ttu-id="3a6f1-188">到剪贴板的笔画都[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]格式， [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-188">Strokes to the Clipboard are both [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-189">下面的示例选择两个元素上<xref:System.Windows.Controls.InkCanvas>并将它们复制到剪贴板。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-189">The following example selects two elements on an <xref:System.Windows.Controls.InkCanvas> and copies them to the Clipboard.</span></span> <span data-ttu-id="3a6f1-190">此示例假定有<xref:System.Windows.Controls.TextBox>称为`textbox1`和一个<xref:System.Windows.Controls.Button>调用`button1 -`，然后 thatboth 控件的子元素<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-190">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textbox1` and a <xref:System.Windows.Controls.Button> called `button1 -` and thatboth controls are child elements of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#3](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#3)]
 [!code-vb[InkCanvasSamples#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.CanPaste" />
        <altmember cref="Overload:System.Windows.Controls.InkCanvas.Paste" />
      </Docs>
    </Member>
    <Member MemberName="CutSelection">
      <MemberSignature Language="C#" Value="public void CutSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CutSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.CutSelection" />
      <MemberSignature Language="VB.NET" Value="Public Sub CutSelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CutSelection();" />
      <MemberSignature Language="F#" Value="member this.CutSelection : unit -&gt; unit" Usage="inkCanvas.CutSelection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-191">删除选定笔画和元素，并将它们复制到剪贴板。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-191">Deletes the selected strokes and elements, and copies them to the Clipboard.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-192"><xref:System.Windows.Controls.InkCanvas>可以支持中的剪贴板数据[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]格式， [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]，和文本格式。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-192">The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)], and text format.</span></span> <span data-ttu-id="3a6f1-193">到剪贴板的笔画都[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]格式， [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-193">Strokes to the Clipboard are both [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-194">下面的示例选择，并将两个元素上的剪切<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-194">The following example selects and cuts two elements on an <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3a6f1-195">此示例假定有<xref:System.Windows.Controls.TextBox>称为`textbox1`和一个<xref:System.Windows.Controls.Button>调用`button1`-和两个控件位于的子元素<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-195">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textbox1` and a <xref:System.Windows.Controls.Button> called `button1` - and that both controls are child elements of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#4](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#4)]
 [!code-vb[InkCanvasSamples#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultDrawingAttributes">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.DrawingAttributes DefaultDrawingAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Ink.DrawingAttributes DefaultDrawingAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultDrawingAttributes As DrawingAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Ink::DrawingAttributes ^ DefaultDrawingAttributes { System::Windows::Ink::DrawingAttributes ^ get(); void set(System::Windows::Ink::DrawingAttributes ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultDrawingAttributes : System.Windows.Ink.DrawingAttributes with get, set" Usage="System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.DrawingAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-196">获取或设置应用于在 <see cref="T:System.Windows.Controls.InkCanvas" /> 上绘制的新墨迹笔画的绘制特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-196">Gets or sets the drawing attributes that are applied to new ink strokes made on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a6f1-197">
            <see cref="T:System.Windows.Controls.InkCanvas" /> 的默认绘制特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-197">The default drawing attributes for the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-198">设置此属性将影响仅之后设置此属性所做的新笔画。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-198">Setting this property will affect only new strokes that are made after this property is set.</span></span> <span data-ttu-id="3a6f1-199">若要将新的绘制特性应用于已创建<xref:System.Windows.Ink.Stroke>对象，访问它们分别使用<xref:System.Windows.Controls.InkCanvas.Strokes%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-199">To apply new drawing attributes to already-created <xref:System.Windows.Ink.Stroke> objects, access them individually using the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property.</span></span>  
  
<a name="dependencyPropertyInfo_DefaultDrawingAttributes"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3a6f1-200">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="3a6f1-200">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3a6f1-201">标识符字段</span><span class="sxs-lookup"><span data-stu-id="3a6f1-201">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty>|  
|<span data-ttu-id="3a6f1-202">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="3a6f1-202">Metadata properties set to `true`</span></span>|<span data-ttu-id="3a6f1-203">无</span><span class="sxs-lookup"><span data-stu-id="3a6f1-203">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-204">下面的示例演示如何使用两个<xref:System.Windows.Ink.DrawingAttributes>对象来模拟使用笔和荧光笔上相同的体验<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-204">The following example demonstrates how to use two <xref:System.Windows.Ink.DrawingAttributes> objects to simulate the experience of using a pen and a highlighter on the same <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3a6f1-205">该示例假定标记语言 (XAML) 文件中的根元素是<xref:System.Windows.Controls.DockPanel>调用`root`。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-205">The example assumes that the root element in the markup language (XAML) file is a <xref:System.Windows.Controls.DockPanel> called `root`.</span></span> <span data-ttu-id="3a6f1-206">它还假定，没有<xref:System.Windows.Controls.Button>称为`switchHilighter`并且<xref:System.Windows.Controls.Primitives.ButtonBase.Click>事件连接到的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-206">It also assumes that there is a <xref:System.Windows.Controls.Button> called `switchHilighter` and that the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event is connected to the event handler.</span></span>  
  
 [!code-csharp[DrawingAttributes#3](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#3)]
 [!code-vb[DrawingAttributes#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#3)]  
  
 <span data-ttu-id="3a6f1-207">下面的示例演示如何将绑定<xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A>到数据源的属性。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-207">The following example demonstrates how to bind the <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> property to a data source.</span></span>  
  
 [!code-xaml[InkCanvasBindingSnippet#3](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasBindingSnippet/CS/Window2.xaml#3)]  
 [!code-xaml[InkCanvasBindingSnippet#4](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasBindingSnippet/CS/Window2.xaml#4)]   
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.InkCanvas.Strokes" />
      </Docs>
    </Member>
    <Member MemberName="DefaultDrawingAttributesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DefaultDrawingAttributesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DefaultDrawingAttributesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultDrawingAttributesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DefaultDrawingAttributesProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultDrawingAttributesProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-208">标识 <see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-208">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultDrawingAttributesReplaced">
      <MemberSignature Language="C#" Value="public event System.Windows.Ink.DrawingAttributesReplacedEventHandler DefaultDrawingAttributesReplaced;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Ink.DrawingAttributesReplacedEventHandler DefaultDrawingAttributesReplaced" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced" />
      <MemberSignature Language="VB.NET" Value="Public Event DefaultDrawingAttributesReplaced As DrawingAttributesReplacedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Ink::DrawingAttributesReplacedEventHandler ^ DefaultDrawingAttributesReplaced;" />
      <MemberSignature Language="F#" Value="member this.DefaultDrawingAttributesReplaced : System.Windows.Ink.DrawingAttributesReplacedEventHandler " Usage="member this.DefaultDrawingAttributesReplaced : System.Windows.Ink.DrawingAttributesReplacedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.DrawingAttributesReplacedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-209">在替换 <see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" /> 属性时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-209">Occurs when the <see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" /> property is replaced.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a6f1-210">以下示例检查的值<xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A>属性的新<xref:System.Windows.Ink.DrawingAttributes>对象。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-210">The following example checks the value of the <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A> property of the new <xref:System.Windows.Ink.DrawingAttributes> object.</span></span>  
  
 [!code-csharp[DrawingAttributes#17](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#17)]
 [!code-vb[DrawingAttributes#17](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultStylusPointDescription">
      <MemberSignature Language="C#" Value="public System.Windows.Input.StylusPointDescription DefaultStylusPointDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.StylusPointDescription DefaultStylusPointDescription" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultStylusPointDescription As StylusPointDescription" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::StylusPointDescription ^ DefaultStylusPointDescription { System::Windows::Input::StylusPointDescription ^ get(); void set(System::Windows::Input::StylusPointDescription ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultStylusPointDescription : System.Windows.Input.StylusPointDescription with get, set" Usage="System.Windows.Controls.InkCanvas.DefaultStylusPointDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusPointDescription</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-211">获取或设置 <see cref="T:System.Windows.Controls.InkCanvas" /> 的触笔点说明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-211">Gets or sets the stylus point description for an <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a6f1-212">
            <see cref="T:System.Windows.Controls.InkCanvas" /> 的触笔点说明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-212">The stylus point description for an <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-213">默认情况下<xref:System.Windows.Controls.InkCanvas>只存储<xref:System.Windows.Input.StylusPointProperties.X>， <xref:System.Windows.Input.StylusPointProperties.Y>，和<xref:System.Windows.Input.StylusPointProperties.NormalPressure>每个属性<xref:System.Windows.Input.StylusPoint>属于笔划。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-213">By default, the <xref:System.Windows.Controls.InkCanvas> stores only the <xref:System.Windows.Input.StylusPointProperties.X>, <xref:System.Windows.Input.StylusPointProperties.Y>, and <xref:System.Windows.Input.StylusPointProperties.NormalPressure> properties for each <xref:System.Windows.Input.StylusPoint> belonging to a stroke.</span></span> <span data-ttu-id="3a6f1-214">可以使用 DefaultStylusPointDescription 属性来存储有关构成上的其他信息<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-214">You can use the DefaultStylusPointDescription property to store additional information about points comprising the strokes on a <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3a6f1-215">设置此属性将影响仅设置该属性后所做的新笔画。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-215">Setting this property will affect only new strokes that are made after the property is set.</span></span>  
  
<a name="xamlTextUsage_DefaultStylusPointDescription"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="3a6f1-216">XAML 文本使用情况</span><span class="sxs-lookup"><span data-stu-id="3a6f1-216">XAML Text Usage</span></span>  
 <span data-ttu-id="3a6f1-217">不能使用此属性在[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-217">You cannot use this property in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-218">下面的示例设置<xref:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription%2A>，以便上的笔画的笔针点<xref:System.Windows.Controls.InkCanvas>包含<xref:System.Windows.Input.StylusPointProperties.X>， <xref:System.Windows.Input.StylusPointProperties.Y>， <xref:System.Windows.Input.StylusPointProperties.NormalPressure>，并<xref:System.Windows.Input.StylusPointProperties.TipButton>属性。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-218">The following example sets the <xref:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription%2A> so that the stylus points of the strokes on the <xref:System.Windows.Controls.InkCanvas> contain the <xref:System.Windows.Input.StylusPointProperties.X>, <xref:System.Windows.Input.StylusPointProperties.Y>, <xref:System.Windows.Input.StylusPointProperties.NormalPressure>, and <xref:System.Windows.Input.StylusPointProperties.TipButton> properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3a6f1-219">仅添加到的笔画<xref:System.Windows.Controls.InkCanvas>后<xref:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription%2A>设置为包含其他属性。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-219">Only the strokes that are added to the <xref:System.Windows.Controls.InkCanvas> after the <xref:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription%2A> is set to contain the additional property.</span></span>  
  
 [!code-csharp[InkCanvasSamples#9](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#9)]
 [!code-vb[InkCanvasSamples#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.StylusPointProperties" />
        <altmember cref="T:System.Windows.Input.StylusPointProperty" />
        <altmember cref="T:System.Windows.Input.StylusPointPropertyInfo" />
      </Docs>
    </Member>
    <Member MemberName="DynamicRenderer">
      <MemberSignature Language="C#" Value="protected System.Windows.Input.StylusPlugIns.DynamicRenderer DynamicRenderer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.StylusPlugIns.DynamicRenderer DynamicRenderer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.DynamicRenderer" />
      <MemberSignature Language="VB.NET" Value="Protected Property DynamicRenderer As DynamicRenderer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Input::StylusPlugIns::DynamicRenderer ^ DynamicRenderer { System::Windows::Input::StylusPlugIns::DynamicRenderer ^ get(); void set(System::Windows::Input::StylusPlugIns::DynamicRenderer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicRenderer : System.Windows.Input.StylusPlugIns.DynamicRenderer with get, set" Usage="System.Windows.Controls.InkCanvas.DynamicRenderer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusPlugIns.DynamicRenderer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-220">获取或设置在 <see cref="T:System.Windows.Controls.InkCanvas" /> 上动态绘制墨迹的呈现器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-220">Gets or sets the renderer that dynamically draws ink on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a6f1-221">在 <see cref="T:System.Windows.Controls.InkCanvas" /> 上动态绘制墨迹的呈现器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-221">The renderer that dynamically draws ink on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-222">可以设置<xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A>属性设置为自定义<xref:System.Windows.Input.StylusPlugIns.DynamicRenderer>如果你想要自定义墨迹。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-222">You can set the <xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A> property to a custom <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> if you want to customize the ink.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3a6f1-223"><xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A>隶属<xref:System.Windows.UIElement.StylusPlugIns%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-223">The <xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A> is a member of the <xref:System.Windows.UIElement.StylusPlugIns%2A> collection.</span></span> <span data-ttu-id="3a6f1-224">当您将设置<xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A>，则<xref:System.Windows.Controls.InkCanvas>移除旧<xref:System.Windows.Input.StylusPlugIns.DynamicRenderer>从<xref:System.Windows.Input.StylusPlugIns.StylusPlugInCollection>，并添加新<xref:System.Windows.Input.StylusPlugIns.DynamicRenderer>到集合的末尾。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-224">When you set the <xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A>, the <xref:System.Windows.Controls.InkCanvas> removes the old <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> from the <xref:System.Windows.Input.StylusPlugIns.StylusPlugInCollection> and adds the new <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> to the end of the collection.</span></span> <span data-ttu-id="3a6f1-225">这可能会更改的行为<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-225">This may change the behavior of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingMode">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.InkCanvasEditingMode EditingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.InkCanvasEditingMode EditingMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.EditingMode" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingMode As InkCanvasEditingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::InkCanvasEditingMode EditingMode { System::Windows::Controls::InkCanvasEditingMode get(); void set(System::Windows::Controls::InkCanvasEditingMode value); };" />
      <MemberSignature Language="F#" Value="member this.EditingMode : System.Windows.Controls.InkCanvasEditingMode with get, set" Usage="System.Windows.Controls.InkCanvas.EditingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasEditingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-226">获取或设置活动指针设备使用的用户编辑模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-226">Gets or sets the user editing mode used by an active pointing device.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a6f1-227">当指针设备（如触笔或鼠标）处于活动状态时使用的编辑模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-227">The editing mode used when a pointing device (such as a tablet pen or mouse) is active.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-228">默认的 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> 为 <xref:System.Windows.Controls.InkCanvasEditingMode.Ink>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-228">The default <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> is <xref:System.Windows.Controls.InkCanvasEditingMode.Ink>.</span></span> <span data-ttu-id="3a6f1-229">更改<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>清除任何现有的所选内容。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-229">Changing the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> clears any existing selections.</span></span>  
  
 <span data-ttu-id="3a6f1-230"><xref:System.Windows.Controls.InkCanvas.EditingMode%2A>指定的指针设备的模式，因为它与交互<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-230">The <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> specifies the mode of the pointing device as it interacts with the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3a6f1-231"><xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> 某些数字化仪"橡皮擦 end"的触笔接触数字化器时使用。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-231"><xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> is used by some digitizers when the "eraser end" of the stylus contacts the digitizer.</span></span>  
  
<a name="dependencyPropertyInfo_EditingMode"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3a6f1-232">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="3a6f1-232">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3a6f1-233">标识符字段</span><span class="sxs-lookup"><span data-stu-id="3a6f1-233">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.EditingModeProperty>|  
|<span data-ttu-id="3a6f1-234">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="3a6f1-234">Metadata properties set to `true`</span></span>|<span data-ttu-id="3a6f1-235">无</span><span class="sxs-lookup"><span data-stu-id="3a6f1-235">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-236">下面的示例创建使用各种类型的编辑模式上的应用程序<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-236">The following example creates an application that uses the various types of editing modes on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[ICEditingModeSample#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ICEditingModeSample/CSharp/Window1.xaml.cs#1)]
 [!code-vb[ICEditingModeSample#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ICEditingModeSample/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" />
      </Docs>
    </Member>
    <Member MemberName="EditingModeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler EditingModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler EditingModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.EditingModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EditingModeChanged As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ EditingModeChanged;" />
      <MemberSignature Language="F#" Value="member this.EditingModeChanged : System.Windows.RoutedEventHandler " Usage="member this.EditingModeChanged : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-237">在 <see cref="P:System.Windows.Controls.InkCanvas.EditingMode" /> 对象的 <see cref="T:System.Windows.Controls.InkCanvas" /> 属性更改后发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-237">Occurs when the <see cref="P:System.Windows.Controls.InkCanvas.EditingMode" /> property of an <see cref="T:System.Windows.Controls.InkCanvas" /> object has been changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-238">此事件发生后的编辑模式已更改;所做的更改反映在<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>属性的<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-238">This event occurs after the editing mode has been changed; the changes are reflected in the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
<a name="routedEventInfo_EditingModeChanged"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3a6f1-239">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="3a6f1-239">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3a6f1-240">标识符字段</span><span class="sxs-lookup"><span data-stu-id="3a6f1-240">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.EditingModeChangedEvent>|  
|<span data-ttu-id="3a6f1-241">路由策略</span><span class="sxs-lookup"><span data-stu-id="3a6f1-241">Routing strategy</span></span>|<span data-ttu-id="3a6f1-242">浮升</span><span class="sxs-lookup"><span data-stu-id="3a6f1-242">Bubbling</span></span>|  
|<span data-ttu-id="3a6f1-243">委托</span><span class="sxs-lookup"><span data-stu-id="3a6f1-243">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-244">以下示例检查是否<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>属性设置为<xref:System.Windows.Controls.InkCanvasEditingMode.Ink>或<xref:System.Windows.Controls.InkCanvasEditingMode.Select>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-244">The following example checks whether the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode.Ink> or <xref:System.Windows.Controls.InkCanvasEditingMode.Select>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#21](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#21)]
 [!code-vb[InkCanvasSamples#21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingModeChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent EditingModeChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent EditingModeChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.EditingModeChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EditingModeChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ EditingModeChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable EditingModeChangedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.InkCanvas.EditingModeChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-245">标识 <see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged" /> 路由事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-245">Identifies the <see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingModeInverted">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.InkCanvasEditingMode EditingModeInverted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.InkCanvasEditingMode EditingModeInverted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.EditingModeInverted" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingModeInverted As InkCanvasEditingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::InkCanvasEditingMode EditingModeInverted { System::Windows::Controls::InkCanvasEditingMode get(); void set(System::Windows::Controls::InkCanvasEditingMode value); };" />
      <MemberSignature Language="F#" Value="member this.EditingModeInverted : System.Windows.Controls.InkCanvasEditingMode with get, set" Usage="System.Windows.Controls.InkCanvas.EditingModeInverted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasEditingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-246">如果触笔在与 <see cref="T:System.Windows.Controls.InkCanvas" /> 交互时发生反转，则获取或设置用户编辑模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-246">Gets or sets the user editing mode if the stylus is inverted when it interacts with the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a6f1-247">
            <see cref="T:System.Windows.Controls.InkCanvas" /> 的反转编辑模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-247">The inverted editing mode of the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-248">此属性控制反转触笔时执行的操作。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-248">This property controls the actions that are performed when the stylus is inverted.</span></span>  
  
 <span data-ttu-id="3a6f1-249">同样，<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>属性控制当触笔位于数字化仪，针对标准的笔尖的位置时执行的操作</span><span class="sxs-lookup"><span data-stu-id="3a6f1-249">Similarly, the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property controls actions that are performed when the stylus is in a standard, tip-down position against the digitizer,</span></span>  
  
<a name="dependencyPropertyInfo_EditingModeInverted"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3a6f1-250">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="3a6f1-250">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3a6f1-251">标识符字段</span><span class="sxs-lookup"><span data-stu-id="3a6f1-251">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.EditingModeInvertedProperty>|  
|<span data-ttu-id="3a6f1-252">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="3a6f1-252">Metadata properties set to `true`</span></span>|<span data-ttu-id="3a6f1-253">无</span><span class="sxs-lookup"><span data-stu-id="3a6f1-253">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-254">下面的示例演示如何允许用户擦除部分笔画使用反转触笔的笔尖。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-254">The following example demonstrates how to allow a user to partially erase strokes with the inverted tip of a stylus.</span></span> <span data-ttu-id="3a6f1-255">椭圆光标出现在<xref:System.Windows.Controls.InkCanvas>时在用户擦除墨迹。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-255">An elliptical cursor appears on the <xref:System.Windows.Controls.InkCanvas> when the user erases ink.</span></span>  
  
 [!code-csharp[InkCanvasSamples#6](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#6)]
 [!code-vb[InkCanvasSamples#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingModeInvertedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler EditingModeInvertedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler EditingModeInvertedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EditingModeInvertedChanged As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ EditingModeInvertedChanged;" />
      <MemberSignature Language="F#" Value="member this.EditingModeInvertedChanged : System.Windows.RoutedEventHandler " Usage="member this.EditingModeInvertedChanged : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-256">在 <see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" /> 对象的 <see cref="T:System.Windows.Controls.InkCanvas" /> 属性更改后发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-256">Occurs when the <see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" /> property of an <see cref="T:System.Windows.Controls.InkCanvas" /> object has been changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-257">已更改的反转编辑模式后，将发生此事件。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-257">This event occurs after the inverted editing mode has been changed.</span></span> <span data-ttu-id="3a6f1-258">这些更改会反映在<xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A>属性的<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-258">These changes are reflected in the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> property of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
<a name="routedEventInfo_EditingModeInvertedChanged"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3a6f1-259">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="3a6f1-259">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3a6f1-260">标识符字段</span><span class="sxs-lookup"><span data-stu-id="3a6f1-260">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent>|  
|<span data-ttu-id="3a6f1-261">路由策略</span><span class="sxs-lookup"><span data-stu-id="3a6f1-261">Routing strategy</span></span>|<span data-ttu-id="3a6f1-262">浮升</span><span class="sxs-lookup"><span data-stu-id="3a6f1-262">Bubbling</span></span>|  
|<span data-ttu-id="3a6f1-263">委托</span><span class="sxs-lookup"><span data-stu-id="3a6f1-263">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-264">以下示例检查是否<xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A>属性设置为<xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>或<xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-264">The following example checks whether the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint> or <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#20](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#20)]
 [!code-vb[InkCanvasSamples#20](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingModeInvertedChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent EditingModeInvertedChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent EditingModeInvertedChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EditingModeInvertedChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ EditingModeInvertedChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable EditingModeInvertedChangedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-265">标识 <see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" /> 路由事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-265">Identifies the <see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingModeInvertedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty EditingModeInvertedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty EditingModeInvertedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.EditingModeInvertedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EditingModeInvertedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ EditingModeInvertedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable EditingModeInvertedProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.InkCanvas.EditingModeInvertedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-266">标识 <see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-266">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty EditingModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty EditingModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.EditingModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EditingModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ EditingModeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable EditingModeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.InkCanvas.EditingModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-267">标识 <see cref="P:System.Windows.Controls.InkCanvas.EditingMode" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-267">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.EditingMode" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EraserShape">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StylusShape EraserShape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Ink.StylusShape EraserShape" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.EraserShape" />
      <MemberSignature Language="VB.NET" Value="Public Property EraserShape As StylusShape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Ink::StylusShape ^ EraserShape { System::Windows::Ink::StylusShape ^ get(); void set(System::Windows::Ink::StylusShape ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EraserShape : System.Windows.Ink.StylusShape with get, set" Usage="System.Windows.Controls.InkCanvas.EraserShape" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StylusShape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-268">获取或设置用来按点擦除 <see cref="T:System.Windows.Ink.StylusShape" /> 中墨迹的 <see cref="T:System.Windows.Controls.InkCanvas" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-268">Gets or sets the <see cref="T:System.Windows.Ink.StylusShape" /> used to point-erase ink from an <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a6f1-269">与 <see cref="T:System.Windows.Controls.InkCanvas" /> 关联的橡皮擦形状。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-269">The eraser shape associated with the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-270">此形状将使用要清除的墨迹<xref:System.Windows.Controls.InkCanvas>时当前<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>设置为<xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-270">This shape will be used to erase ink from an <xref:System.Windows.Controls.InkCanvas> when the current <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.</span></span>  
  
 <span data-ttu-id="3a6f1-271">各个属性<xref:System.Windows.Ink.StylusShape>一旦创建形状不能修改。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-271">Individual properties of a <xref:System.Windows.Ink.StylusShape> cannot be modified once the shape has been created.</span></span>  
  
 <span data-ttu-id="3a6f1-272">如果您更改<xref:System.Windows.Controls.InkCanvas.EraserShape%2A>上, 呈现的光标<xref:System.Windows.Controls.InkCanvas>直到出现下一个未更新<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>更改。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-272">If you change the <xref:System.Windows.Controls.InkCanvas.EraserShape%2A>, the cursor rendered on the <xref:System.Windows.Controls.InkCanvas> is not updated until the next <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> change.</span></span>  
  
<a name="xamlTextUsage_EraserShape"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="3a6f1-273">XAML 文本使用情况</span><span class="sxs-lookup"><span data-stu-id="3a6f1-273">XAML Text Usage</span></span>  
 <span data-ttu-id="3a6f1-274">此属性通常不使用在[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-274">This property is not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-275">下面的示例演示如何允许用户擦除部分笔画使用反转触笔的笔尖。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-275">The following example demonstrates how to allow a user to partially erase strokes with the inverted tip of a stylus.</span></span> <span data-ttu-id="3a6f1-276">椭圆光标出现在<xref:System.Windows.Controls.InkCanvas>时在用户擦除墨迹。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-276">An elliptical cursor appears on the <xref:System.Windows.Controls.InkCanvas> when the user erases ink.</span></span>  
  
 [!code-csharp[InkCanvasSamples#6](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#6)]
 [!code-vb[InkCanvasSamples#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Ink.StylusShape" />
      </Docs>
    </Member>
    <Member MemberName="Gesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasGestureEventHandler Gesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasGestureEventHandler Gesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.Gesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Gesture As InkCanvasGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::InkCanvasGestureEventHandler ^ Gesture;" />
      <MemberSignature Language="F#" Value="member this.Gesture : System.Windows.Controls.InkCanvasGestureEventHandler " Usage="member this.Gesture : System.Windows.Controls.InkCanvasGestureEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-277">在 <see cref="T:System.Windows.Controls.InkCanvas" /> 检测到笔势时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-277">Occurs when the <see cref="T:System.Windows.Controls.InkCanvas" /> detects a gesture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Gesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3a6f1-278">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="3a6f1-278">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3a6f1-279">标识符字段</span><span class="sxs-lookup"><span data-stu-id="3a6f1-279">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.GestureEvent>|  
|<span data-ttu-id="3a6f1-280">路由策略</span><span class="sxs-lookup"><span data-stu-id="3a6f1-280">Routing strategy</span></span>|<span data-ttu-id="3a6f1-281">浮升</span><span class="sxs-lookup"><span data-stu-id="3a6f1-281">Bubbling</span></span>|  
|<span data-ttu-id="3a6f1-282">委托</span><span class="sxs-lookup"><span data-stu-id="3a6f1-282">Delegate</span></span>|<xref:System.Windows.Controls.InkCanvasGestureEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-283">下面的示例演示如何设置<xref:System.Windows.Controls.InkCanvas>识别应用程序笔势。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-283">The following example demonstrates how to set up an <xref:System.Windows.Controls.InkCanvas> to recognize application gestures.</span></span>  
  
 [!code-csharp[GestureSample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#3)]
 [!code-vb[GestureSample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[GestureSample#1](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#1)]
[!code-vb[GestureSample#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.GestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.InkCanvas.GestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-284">标识 <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> 路由事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-284">Identifies the <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBottom">
      <MemberSignature Language="C#" Value="public static double GetBottom (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetBottom(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetBottom(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBottom (element As UIElement) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetBottom(System::Windows::UIElement ^ element);" />
      <MemberSignature Language="F#" Value="static member GetBottom : System.Windows.UIElement -&gt; double" Usage="System.Windows.Controls.InkCanvas.GetBottom element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForChildren</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="3a6f1-285">要获取其下边缘属性的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-285">The element of which to get the bottom property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6f1-286">获取给定依赖项对象的 <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> 附加属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-286">Gets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> attached property for a given dependency object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a6f1-287">依赖项对象的下边缘坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-287">The bottom coordinate of the dependency object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a6f1-288">下面的示例演示如何获取的位置<xref:System.Windows.Controls.Button>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-288">The following example demonstrates how to get the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#34](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#34)]
 [!code-vb[InkCanvasSamples#34](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnabledGestures">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Ink.ApplicationGesture&gt; GetEnabledGestures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;valuetype System.Windows.Ink.ApplicationGesture&gt; GetEnabledGestures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetEnabledGestures" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnabledGestures () As ReadOnlyCollection(Of ApplicationGesture)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Ink::ApplicationGesture&gt; ^ GetEnabledGestures();" />
      <MemberSignature Language="F#" Value="member this.GetEnabledGestures : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Ink.ApplicationGesture&gt;" Usage="inkCanvas.GetEnabledGestures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Ink.ApplicationGesture&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-289">返回一个由 <see cref="T:System.Windows.Controls.InkCanvas" /> 识别的应用程序笔势集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-289">Returns a collection of application gestures that are recognized by <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a6f1-290">
            <see cref="T:System.Windows.Controls.InkCanvas" /> 识别的笔势集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-290">A collection of gestures that the <see cref="T:System.Windows.Controls.InkCanvas" /> recognizes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a6f1-291">下面的示例演示如何获取从启用的应用程序笔势<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-291">The following example demonstrates how to get the enabled application gestures from the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#24](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#24)]
 [!code-vb[InkCanvasSamples#24](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3a6f1-292">
            <see cref="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" /> 属性为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-292">The <see cref="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" /> property is <see langword="false" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLeft">
      <MemberSignature Language="C#" Value="public static double GetLeft (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetLeft(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetLeft(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLeft (element As UIElement) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetLeft(System::Windows::UIElement ^ element);" />
      <MemberSignature Language="F#" Value="static member GetLeft : System.Windows.UIElement -&gt; double" Usage="System.Windows.Controls.InkCanvas.GetLeft element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForChildren</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="3a6f1-293">要获取其左边缘属性的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-293">The element of which to get the left property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6f1-294">获取给定依赖项对象的 <see cref="P:System.Windows.Controls.InkCanvas.Left" /> 附加属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-294">Gets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Left" /> attached property for a given dependency object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a6f1-295">依赖项对象的左边缘坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-295">The left coordinate of the dependency object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a6f1-296">下面的示例演示如何获取的位置<xref:System.Windows.Controls.Button>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-296">The following example demonstrates how to get the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#31](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#31)]
 [!code-vb[InkCanvasSamples#31](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#31)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRight">
      <MemberSignature Language="C#" Value="public static double GetRight (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetRight(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetRight(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRight (element As UIElement) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetRight(System::Windows::UIElement ^ element);" />
      <MemberSignature Language="F#" Value="static member GetRight : System.Windows.UIElement -&gt; double" Usage="System.Windows.Controls.InkCanvas.GetRight element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForChildren</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="3a6f1-297">要获取其右边缘属性的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-297">The element of which to get the right property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6f1-298">获取给定依赖项对象的 <see cref="P:System.Windows.Controls.InkCanvas.Right" /> 附加属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-298">Gets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Right" /> attached property for a given dependency object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a6f1-299">依赖项对象的右边缘坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-299">The right coordinate of the dependency object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a6f1-300">下面的示例演示如何获取的位置<xref:System.Windows.Controls.Button>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-300">The following example demonstrates how to get the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#32](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#32)]
 [!code-vb[InkCanvasSamples#32](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#32)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelectedElements">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.UIElement&gt; GetSelectedElements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.UIElement&gt; GetSelectedElements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSelectedElements () As ReadOnlyCollection(Of UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::UIElement ^&gt; ^ GetSelectedElements();" />
      <MemberSignature Language="F#" Value="member this.GetSelectedElements : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.UIElement&gt;" Usage="inkCanvas.GetSelectedElements " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.UIElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-301">检索在 <see cref="T:System.Windows.FrameworkElement" /> 中选定的 <see cref="T:System.Windows.Controls.InkCanvas" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-301">Retrieves the <see cref="T:System.Windows.FrameworkElement" /> objects that are selected in the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a6f1-302">
            <see cref="T:System.Windows.FrameworkElement" /> 对象数组。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-302">Array of <see cref="T:System.Windows.FrameworkElement" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-303">此方法仅返回<xref:System.Windows.FrameworkElement>对象，而不<xref:System.Windows.Ink.Stroke>对象。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-303">This method returns only <xref:System.Windows.FrameworkElement> objects, not <xref:System.Windows.Ink.Stroke> objects.</span></span>  
  
 <span data-ttu-id="3a6f1-304">若要检索选定<xref:System.Windows.Ink.Stroke>对象，调用<xref:System.Windows.Controls.InkCanvas.GetSelectedStrokes%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-304">To retrieve selected <xref:System.Windows.Ink.Stroke> objects, call the <xref:System.Windows.Controls.InkCanvas.GetSelectedStrokes%2A> method.</span></span>  
  
 <span data-ttu-id="3a6f1-305">如果<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>的<xref:System.Windows.Controls.InkCanvas>设置为<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>，用户可以选择<xref:System.Windows.Ink.Stroke>对象和<xref:System.Windows.FrameworkElement>对象。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-305">If the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> of <xref:System.Windows.Controls.InkCanvas> is set to <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, users can select <xref:System.Windows.Ink.Stroke> objects and <xref:System.Windows.FrameworkElement> objects.</span></span> <span data-ttu-id="3a6f1-306">或者，这两种类型的对象可以选择使用的代码： 只需调用<xref:System.Windows.Controls.InkCanvas.Select%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-306">Alternatively, both types of objects can be selected using code:  just call the <xref:System.Windows.Controls.InkCanvas.Select%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-307">下面的示例上加倍的高度和宽度的每个所选元素<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-307">The following example doubles the height and width of each selected element on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#12](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#12)]
 [!code-vb[InkCanvasSamples#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
        <altmember cref="Overload:System.Windows.Controls.InkCanvas.Select" />
      </Docs>
    </Member>
    <Member MemberName="GetSelectedStrokes">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection GetSelectedStrokes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection GetSelectedStrokes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSelectedStrokes () As StrokeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::StrokeCollection ^ GetSelectedStrokes();" />
      <MemberSignature Language="F#" Value="member this.GetSelectedStrokes : unit -&gt; System.Windows.Ink.StrokeCollection" Usage="inkCanvas.GetSelectedStrokes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-308">检索一个 <see cref="T:System.Windows.Ink.StrokeCollection" />，它表示 <see cref="T:System.Windows.Ink.Stroke" /> 上选定的 <see cref="T:System.Windows.Controls.InkCanvas" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-308">Retrieves a <see cref="T:System.Windows.Ink.StrokeCollection" /> that represents selected <see cref="T:System.Windows.Ink.Stroke" /> objects on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a6f1-309">选定笔画的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-309">The collection of selected strokes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-310">此方法返回<xref:System.Windows.Ink.Stroke>对象时，仅。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-310">This method returns <xref:System.Windows.Ink.Stroke> objects, only.</span></span> <span data-ttu-id="3a6f1-311">若要检索选定<xref:System.Windows.FrameworkElement>对象，调用<xref:System.Windows.Controls.InkCanvas.GetSelectedElements%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-311">To retrieve selected <xref:System.Windows.FrameworkElement> objects, call the <xref:System.Windows.Controls.InkCanvas.GetSelectedElements%2A> method.</span></span>  
  
 <span data-ttu-id="3a6f1-312">如果<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>的<xref:System.Windows.Controls.InkCanvas>设置为<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>，用户可以选择<xref:System.Windows.Ink.Stroke>对象和<xref:System.Windows.FrameworkElement>对象。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-312">If the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> of <xref:System.Windows.Controls.InkCanvas> is set to <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, users can select <xref:System.Windows.Ink.Stroke> objects and <xref:System.Windows.FrameworkElement> objects.</span></span> <span data-ttu-id="3a6f1-313">或者，这两种类型的对象可以选择使用的代码： 只需调用<xref:System.Windows.Controls.InkCanvas.Select%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-313">Alternatively, both types of objects can be selected using code: just call the <xref:System.Windows.Controls.InkCanvas.Select%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-314">下面的示例更改每个所选笔画的颜色上<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-314">The following example changes the color of each selected stroke on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#11](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#11)]
 [!code-vb[InkCanvasSamples#11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Controls.InkCanvas.Select" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      </Docs>
    </Member>
    <Member MemberName="GetSelectionBounds">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetSelectionBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetSelectionBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetSelectionBounds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSelectionBounds () As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetSelectionBounds();" />
      <MemberSignature Language="F#" Value="member this.GetSelectionBounds : unit -&gt; System.Windows.Rect" Usage="inkCanvas.GetSelectionBounds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-315">获取 <see cref="T:System.Windows.Controls.InkCanvas" /> 上选定笔画和元素的边界。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-315">Gets the bounds of the selected strokes and elements on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a6f1-316">包围所有选定笔画和元素的最小矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-316">The smallest rectangle that encompasses all selected strokes and elements.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a6f1-317">下面的示例可防止用户进行选择小于其原始大小。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-317">The following example prevents the user from making a selection smaller than its original size.</span></span>  
  
 [!code-csharp[InkCanvasSamples#16](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#16)]
 [!code-vb[InkCanvasSamples#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTop">
      <MemberSignature Language="C#" Value="public static double GetTop (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetTop(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetTop(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTop (element As UIElement) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetTop(System::Windows::UIElement ^ element);" />
      <MemberSignature Language="F#" Value="static member GetTop : System.Windows.UIElement -&gt; double" Usage="System.Windows.Controls.InkCanvas.GetTop element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForChildren</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="3a6f1-318">要获取其上边缘属性的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-318">The element of which to get the top property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6f1-319">获取给定依赖项对象的 <see cref="P:System.Windows.Controls.InkCanvas.Top" /> 附加属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-319">Gets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Top" /> attached property for a given dependency object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a6f1-320">依赖项对象的上边缘坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-320">The top coordinate of the dependency object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a6f1-321">下面的示例演示如何获取的位置<xref:System.Windows.Controls.Button>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-321">The following example demonstrates how to get the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#33](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#33)]
 [!code-vb[InkCanvasSamples#33](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#33)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVisualChild">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.Visual GetVisualChild (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.Visual GetVisualChild(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetVisualChild(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetVisualChild (index As Integer) As Visual" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::Visual ^ GetVisualChild(int index);" />
      <MemberSignature Language="F#" Value="override this.GetVisualChild : int -&gt; System.Windows.Media.Visual" Usage="inkCanvas.GetVisualChild index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="3a6f1-322">集合中请求的子元素的从零开始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-322">The zero-based index of the requested child element in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6f1-323">重写 <see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" />，然后从子元素集合返回指定索引处的子级。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-323">Overrides <see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" />, and returns a child at the specified index from a collection of child elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a6f1-324">请求的子元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-324">The requested child element.</span>
          </span>
          <span data-ttu-id="3a6f1-325">它不应返回 <see langword="null" />；如果提供的索引超出范围，将引发异常。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-325">This should not return <see langword="null" />; if the provided index is out of range, an exception is thrown.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.HitTestResult HitTestCore (System.Windows.Media.PointHitTestParameters hitTestParams);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.HitTestResult HitTestCore(class System.Windows.Media.PointHitTestParameters hitTestParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.HitTestCore(System.Windows.Media.PointHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HitTestCore (hitTestParams As PointHitTestParameters) As HitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::HitTestResult ^ HitTestCore(System::Windows::Media::PointHitTestParameters ^ hitTestParams);" />
      <MemberSignature Language="F#" Value="override this.HitTestCore : System.Windows.Media.PointHitTestParameters -&gt; System.Windows.Media.HitTestResult" Usage="inkCanvas.HitTestCore hitTestParams" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParams" Type="System.Windows.Media.PointHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParams">
          <span data-ttu-id="3a6f1-326">一个对象，指定 <see cref="T:System.Windows.Point" /> 以命中测试。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-326">An object that specifies the <see cref="T:System.Windows.Point" /> to hit test against.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6f1-327">确定给定点是否落在 <see cref="T:System.Windows.Controls.InkCanvas" /> 的呈现边界之内。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-327">Determines whether a given point falls within the rendering bounds of an <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a6f1-328">一个由命中测试中返回的 <see cref="T:System.Windows.Media.Visual" /> 表示的对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-328">An object that represents the <see cref="T:System.Windows.Media.Visual" /> that is returned from a hit test.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTestSelection">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.InkCanvasSelectionHitResult HitTestSelection (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Controls.InkCanvasSelectionHitResult HitTestSelection(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.HitTestSelection(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Controls::InkCanvasSelectionHitResult HitTestSelection(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.HitTestSelection : System.Windows.Point -&gt; System.Windows.Controls.InkCanvasSelectionHitResult" Usage="inkCanvas.HitTestSelection point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasSelectionHitResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="3a6f1-329">要进行命中测试的点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-329">The point to hit test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6f1-330">返回一个值，该值指示选择装饰器的哪个部分与指定点相交或包围指定点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-330">Returns a value that indicates which part of the selection adorner intersects or surrounds the specified point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a6f1-331">一个值，该值指示选择装饰器的哪个部分与指定点相交或包围指定点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-331">A value that indicates which part of the selection adorner intersects or surrounds a specified point.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-332">使用<xref:System.Windows.Controls.InkCanvas.HitTestSelection%2A>方法来确定点是否笔画选取的边界内或某个八个句柄。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-332">Use the <xref:System.Windows.Controls.InkCanvas.HitTestSelection%2A> method to determine whether the point is within a stroke selection's bounds or on one of the eight handles.</span></span>  <span data-ttu-id="3a6f1-333">当执行拖放操作时，这很有用。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-333">This is useful when performing drag and drop operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-334">下面的示例演示如何使用<xref:System.Windows.Controls.InkCanvas.HitTestSelection%2A>若要确定是否创建<xref:System.Windows.DataObject>启动拖放。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-334">The following example demonstrates how use <xref:System.Windows.Controls.InkCanvas.HitTestSelection%2A> to determine whether to create a <xref:System.Windows.DataObject> to initiate drag and drop.</span></span>  <span data-ttu-id="3a6f1-335">若要实现拖放两个之间<xref:System.Windows.Controls.InkCanvas>对象，请参阅[如何： 拖放墨迹](~/docs/framework/wpf/advanced/how-to-drag-and-drop-ink.md)。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-335">To implement drag and drop between two <xref:System.Windows.Controls.InkCanvas> objects, see [How to: Drag and Drop Ink](~/docs/framework/wpf/advanced/how-to-drag-and-drop-ink.md).</span></span>  
  
 [!code-csharp[InkDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Wpf/InkDragDrop/CSharp/Window1.xaml.cs#3)]
 [!code-vb[InkDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkDragDrop/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InkPresenter">
      <MemberSignature Language="C#" Value="protected System.Windows.Controls.InkPresenter InkPresenter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.InkPresenter InkPresenter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.InkPresenter" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InkPresenter As InkPresenter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Controls::InkPresenter ^ InkPresenter { System::Windows::Controls::InkPresenter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InkPresenter : System.Windows.Controls.InkPresenter" Usage="System.Windows.Controls.InkCanvas.InkPresenter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkPresenter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-336">获取在 <see cref="T:System.Windows.Controls.InkCanvas" /> 上显示墨迹的墨迹显示器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-336">Gets the ink presenter that displays ink on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a6f1-337">在 <see cref="T:System.Windows.Controls.InkCanvas" /> 上显示墨迹的墨迹显示器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-337">The ink presenter that displays ink on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGestureRecognizerAvailable">
      <MemberSignature Language="C#" Value="public bool IsGestureRecognizerAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGestureRecognizerAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsGestureRecognizerAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsGestureRecognizerAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsGestureRecognizerAvailable : bool" Usage="System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-338">获取（确定）笔势识别组件在用户系统上是否可用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-338">Gets (determines) whether the gesture recognition component is available on the user's system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a6f1-339">如果识别组件可用，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-339">
              <see langword="true" /> if the recognition component is available; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a6f1-340">下面的示例演示如何配置<xref:System.Windows.Controls.InkCanvas>识别应用程序笔势。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-340">The following example demonstrates how to configure an <xref:System.Windows.Controls.InkCanvas> to recognize application gestures.</span></span>  
  
 [!code-csharp[GestureSample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#3)]
 [!code-vb[GestureSample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[GestureSample#1](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#1)]
[!code-vb[GestureSample#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="see GetLeft, and SetLeft" />
      <MemberSignature Language="ILAsm" Value="see GetLeft, and SetLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Left" />
      <MemberSignature Language="VB.NET" Value="see GetLeft, and SetLeft" />
      <MemberSignature Language="F#" Value="see GetLeft, and SetLeft" Usage="see GetLeft, and SetLeft" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-341">获取或设置某元素的左边缘与其父 <see cref="T:System.Windows.Controls.InkCanvas" /> 的左边缘之间的距离。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-341">Gets or sets the distance between the left side of an element and the left side of its parent <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Left"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3a6f1-342">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="3a6f1-342">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3a6f1-343">标识符字段</span><span class="sxs-lookup"><span data-stu-id="3a6f1-343">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.LeftProperty>|  
|<span data-ttu-id="3a6f1-344">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="3a6f1-344">Metadata properties set to `true`</span></span>|<span data-ttu-id="3a6f1-345">无</span><span class="sxs-lookup"><span data-stu-id="3a6f1-345">None</span></span>|  
  
<a name="xamlAttributeUsage_Left"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="3a6f1-346">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="3a6f1-346">XAML Attribute Usage</span></span>  
  
```  
<object InkCanvas.Left="double"/>  
- or –  
<object InkCanvas.Left="qualifiedDouble"/>  
```  
  
<a name="xamlValues_Left"></a>   
## <a name="xaml-values"></a><span data-ttu-id="3a6f1-347">XAML 值</span><span class="sxs-lookup"><span data-stu-id="3a6f1-347">XAML Values</span></span>  
 <span data-ttu-id="3a6f1-348">*double*</span><span class="sxs-lookup"><span data-stu-id="3a6f1-348">*double*</span></span>  
 <span data-ttu-id="3a6f1-349">字符串表示形式<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-349">String representation of a <xref:System.Double> value.</span></span> <span data-ttu-id="3a6f1-350">这被解释为[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]度量。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-350">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="3a6f1-351">字符串不需要显式包括小数点。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-351">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="3a6f1-352">例如，值为`1`是可接受。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-352">For instance, a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="3a6f1-353">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="3a6f1-353">*qualifiedDouble*</span></span>  
 <span data-ttu-id="3a6f1-354">一个*双*值，上文所述跟以下单位声明字符串之一： `px`， `in`， `cm`， `pt`。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-354">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="3a6f1-355">`px` （默认值） [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="3a6f1-355">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="3a6f1-356">`in` 为英寸;1 中为 96px = =</span><span class="sxs-lookup"><span data-stu-id="3a6f1-356">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="3a6f1-357">`cm` 为厘米;1cm==(96/2.54) px</span><span class="sxs-lookup"><span data-stu-id="3a6f1-357">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="3a6f1-358">`pt` 为点;1pt==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="3a6f1-358">`pt` is points; 1pt==(96/72) px</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-359">下面的示例演示如何设置的位置<xref:System.Windows.Controls.Label>上<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-359">The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Label> on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-xml[InkCanvasSamples#35](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LeftProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LeftProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LeftProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.LeftProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LeftProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LeftProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LeftProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.InkCanvas.LeftProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-360">标识 <see cref="P:System.Windows.Controls.InkCanvas.Left" /> 附加属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-360">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Left" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalChildren : System.Collections.IEnumerator" Usage="System.Windows.Controls.InkCanvas.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-361">返回用于逻辑子级的枚举器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-361">Returns enumerator to logical children.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (availableSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size availableSize);" />
      <MemberSignature Language="F#" Value="override this.MeasureOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="inkCanvas.MeasureOverride availableSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize">
          <span data-ttu-id="3a6f1-362">此元素可提供给子元素的可用大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-362">The available size that this element can give to child elements.</span>
          </span>
          <span data-ttu-id="3a6f1-363">可指定无穷大作为一个值，该值指示元素将调整到适应内容的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-363">Infinity can be specified as a value to indicate that the element will size to whatever content is available.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6f1-364">测量子元素在布局中所需的大小，并确定 <see cref="System.Windows.Controls.InkCanvas" /> 对象的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-364">Measures the size in layout required for child elements and determines a size for the <see cref="System.Windows.Controls.InkCanvas" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3a6f1-365">此元素基于其对子元素大小的计算确定它在布局期间所需要的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-365">The size that this element determines it needs during layout, based on its calculations of child element sizes.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="MoveEnabled">
      <MemberSignature Language="C#" Value="public bool MoveEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MoveEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.MoveEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property MoveEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MoveEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MoveEnabled : bool with get, set" Usage="System.Windows.Controls.InkCanvas.MoveEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-366">获取或设置一个布尔值，该值指示是否允许用户移动 <see cref="T:System.Windows.Controls.InkCanvas" /> 上选定的墨迹笔画和/或元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-366">Gets or sets a Boolean value which indicates whether the user is enabled to move selected ink strokes and/or elements on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a6f1-367">如果用户可以移动 <see cref="T:System.Windows.Controls.InkCanvas" /> 上的笔画和/或元素，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-367">
              <see langword="true" /> if a user can move strokes and/or elements on the <see cref="T:System.Windows.Controls.InkCanvas" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-368">如果此属性设置为`true`，在选中时，墨迹笔画和/或元素四周绘制的装饰器边框。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-368">If this property is set to `true`, an adorner border is drawn around ink strokes and/or elements when they are selected.</span></span> <span data-ttu-id="3a6f1-369">此边框使用户可以移动所选的对象。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-369">This border enables the user to move the selected objects.</span></span> <span data-ttu-id="3a6f1-370">如果<xref:System.Windows.Controls.InkCanvas.ResizeEnabled%2A>是`true`，装饰器使用户能够笔画和/或元素，以及重设大小。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-370">If <xref:System.Windows.Controls.InkCanvas.ResizeEnabled%2A> is `true`, the adorner enables the user to resize the strokes and/or elements as well.</span></span>  
  
 <span data-ttu-id="3a6f1-371">如果此属性设置为`false`在选择了一个或多个墨迹笔画和/或元素时将从所选对象自动移除装饰器边框。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-371">If this property is set to `false` while one or more ink strokes and/or elements are selected, the adorner border will be automatically removed from the selected objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-372">下面的示例将阻止用户从移动和调整元素大小和上描边<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-372">The following example prevents a user from moving and resizing the elements and strokes on a <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#7](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#7)]
 [!code-vb[InkCanvasSamples#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActiveEditingModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnActiveEditingModeChanged (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActiveEditingModeChanged(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnActiveEditingModeChanged(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnActiveEditingModeChanged (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnActiveEditingModeChanged(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnActiveEditingModeChanged : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnActiveEditingModeChanged : System.Windows.RoutedEventArgs -&gt; unit" Usage="inkCanvas.OnActiveEditingModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3a6f1-373">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-373">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6f1-374">引发 <see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-374">Raises the <see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="inkCanvas.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-375">作为 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 基础结构的一部分，为此控件提供相应的 <see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer" /> 实现。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-375">Provides an appropriate <see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer" /> implementation for this control, as part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDefaultDrawingAttributesReplaced">
      <MemberSignature Language="C#" Value="protected virtual void OnDefaultDrawingAttributesReplaced (System.Windows.Ink.DrawingAttributesReplacedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDefaultDrawingAttributesReplaced(class System.Windows.Ink.DrawingAttributesReplacedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnDefaultDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDefaultDrawingAttributesReplaced (e As DrawingAttributesReplacedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDefaultDrawingAttributesReplaced(System::Windows::Ink::DrawingAttributesReplacedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDefaultDrawingAttributesReplaced : System.Windows.Ink.DrawingAttributesReplacedEventArgs -&gt; unit&#xA;override this.OnDefaultDrawingAttributesReplaced : System.Windows.Ink.DrawingAttributesReplacedEventArgs -&gt; unit" Usage="inkCanvas.OnDefaultDrawingAttributesReplaced e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Ink.DrawingAttributesReplacedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3a6f1-376">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-376">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6f1-377">引发 <see cref="E:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-377">Raises the <see cref="E:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEditingModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnEditingModeChanged (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditingModeChanged(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnEditingModeChanged(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEditingModeChanged (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEditingModeChanged(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEditingModeChanged : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnEditingModeChanged : System.Windows.RoutedEventArgs -&gt; unit" Usage="inkCanvas.OnEditingModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3a6f1-378">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-378">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6f1-379">引发 <see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-379">Raises the <see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-380">此事件发生后的编辑模式已更改;所做的更改反映在<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>属性的<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-380">This event occurs after the editing mode has been changed; the changes are reflected in the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEditingModeInvertedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnEditingModeInvertedChanged (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditingModeInvertedChanged(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnEditingModeInvertedChanged(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEditingModeInvertedChanged (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEditingModeInvertedChanged(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEditingModeInvertedChanged : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnEditingModeInvertedChanged : System.Windows.RoutedEventArgs -&gt; unit" Usage="inkCanvas.OnEditingModeInvertedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3a6f1-381">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-381">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6f1-382">引发 <see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-382">Raises the <see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-383">此事件发生后已更改的反转编辑模式;所做的更改反映在<xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A>属性的<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-383">This event occurs after the inverted editing mode has been changed; the changes reflected in the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> property of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGesture">
      <MemberSignature Language="C#" Value="protected virtual void OnGesture (System.Windows.Controls.InkCanvasGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGesture(class System.Windows.Controls.InkCanvasGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnGesture(System.Windows.Controls.InkCanvasGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGesture (e As InkCanvasGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGesture(System::Windows::Controls::InkCanvasGestureEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGesture : System.Windows.Controls.InkCanvasGestureEventArgs -&gt; unit&#xA;override this.OnGesture : System.Windows.Controls.InkCanvasGestureEventArgs -&gt; unit" Usage="inkCanvas.OnGesture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3a6f1-384">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-384">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6f1-385">引发 <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-385">Raises the <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPropertyChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPropertyChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnPropertyChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="inkCanvas.OnPropertyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3a6f1-386">描述已更改的属性的事件数据（包括旧值和新值）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-386">The event data that describes the property that changed, as well as old and new values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6f1-387">每当更新此 <see cref="T:System.Windows.FrameworkElement" /> 上任何依赖项属性的有效值时调用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-387">Invoked whenever the effective value of any dependency property on this <see cref="T:System.Windows.FrameworkElement" /> has been updated.</span>
          </span>
          <span data-ttu-id="3a6f1-388">将在实参形参中报告已更改的特定依赖属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-388">The specific dependency property that changed is reported in the arguments parameter.</span>
          </span>
          <span data-ttu-id="3a6f1-389">重写 <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-389">Overrides <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnSelectionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionChanged : EventArgs -&gt; unit&#xA;override this.OnSelectionChanged : EventArgs -&gt; unit" Usage="inkCanvas.OnSelectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3a6f1-390">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-390">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6f1-391">引发 <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanged" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-391">Raises the <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-392">用户已选择的墨迹笔画和/或元素的一组并应用所选内容更改后，调用此方法。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-392">This method is called after a set of ink strokes and/or elements has been selected by the user and the selection change has been applied.</span></span> <span data-ttu-id="3a6f1-393">更改被应用之前，<xref:System.Windows.Controls.InkCanvas.OnSelectionChanging%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-393">Before the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionChanging%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnSelectionChanging(System.Windows.Controls.InkCanvasSelectionChangingEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionChanging (System.Windows.Controls.InkCanvasSelectionChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionChanging(class System.Windows.Controls.InkCanvasSelectionChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnSelectionChanging(System.Windows.Controls.InkCanvasSelectionChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionChanging (e As InkCanvasSelectionChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionChanging(System::Windows::Controls::InkCanvasSelectionChangingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionChanging : System.Windows.Controls.InkCanvasSelectionChangingEventArgs -&gt; unit&#xA;override this.OnSelectionChanging : System.Windows.Controls.InkCanvasSelectionChangingEventArgs -&gt; unit" Usage="inkCanvas.OnSelectionChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasSelectionChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3a6f1-394">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-394">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6f1-395">引发 <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanging" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-395">Raises the <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanging" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-396">由用户，但在应用更改之前做出新选择的笔画和/或元素时，调用此方法。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-396">This method is called when a new selection of strokes and/or elements is made by the user, but before the change is applied.</span></span> <span data-ttu-id="3a6f1-397">应用更改后，<xref:System.Windows.Controls.InkCanvas.OnSelectionChanged%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-397">After the change has been applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionChanged%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnSelectionChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionMoved">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionMoved (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionMoved(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnSelectionMoved(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionMoved (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionMoved(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionMoved : EventArgs -&gt; unit&#xA;override this.OnSelectionMoved : EventArgs -&gt; unit" Usage="inkCanvas.OnSelectionMoved e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3a6f1-398">未使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-398">Not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6f1-399">一个事件，通告用户选择并移动了所选笔画和/或元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-399">An event announcing that the user selected and moved a selection of strokes and/or elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-400">用户已移动选定笔画和/或元素内容并应用更改后，调用此方法。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-400">This method is called after a selection of strokes and/or elements has been moved by the user and the change has been applied.</span></span> <span data-ttu-id="3a6f1-401">更改被应用之前，<xref:System.Windows.Controls.InkCanvas.OnSelectionMoving%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-401">Before the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionMoving%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnSelectionMoving(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionMoving">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionMoving (System.Windows.Controls.InkCanvasSelectionEditingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionMoving(class System.Windows.Controls.InkCanvasSelectionEditingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnSelectionMoving(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionMoving (e As InkCanvasSelectionEditingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionMoving(System::Windows::Controls::InkCanvasSelectionEditingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionMoving : System.Windows.Controls.InkCanvasSelectionEditingEventArgs -&gt; unit&#xA;override this.OnSelectionMoving : System.Windows.Controls.InkCanvasSelectionEditingEventArgs -&gt; unit" Usage="inkCanvas.OnSelectionMoving e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasSelectionEditingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3a6f1-402">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-402">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6f1-403">引发 <see cref="E:System.Windows.Controls.InkCanvas.SelectionMoving" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-403">Raises the <see cref="E:System.Windows.Controls.InkCanvas.SelectionMoving" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-404">用户请求移动所选笔画和/或元素后，在应用更改之前，调用此方法。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-404">This method is called after the user requests that a selection of strokes and/or elements be moved and before the change is applied.</span></span> <span data-ttu-id="3a6f1-405">在应用更改后，<xref:System.Windows.Controls.InkCanvas.OnSelectionMoved%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-405">After the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionMoved%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnSelectionMoved(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionResized">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionResized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionResized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnSelectionResized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionResized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionResized(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionResized : EventArgs -&gt; unit&#xA;override this.OnSelectionResized : EventArgs -&gt; unit" Usage="inkCanvas.OnSelectionResized e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3a6f1-406">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-406">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6f1-407">引发 <see cref="E:System.Windows.Controls.InkCanvas.SelectionResized" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-407">Raises the <see cref="E:System.Windows.Controls.InkCanvas.SelectionResized" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-408">已调整选定笔画和/或元素的大小由用户和应用更改后调用此方法。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-408">This method is called after a selection of strokes and/or elements has been resized by the user and the change has been applied.</span></span> <span data-ttu-id="3a6f1-409">更改被应用之前，<xref:System.Windows.Controls.InkCanvas.OnSelectionResizing%2A>调用方法。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-409">Before the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionResizing%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnSelectionResizing(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionResizing">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionResizing (System.Windows.Controls.InkCanvasSelectionEditingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionResizing(class System.Windows.Controls.InkCanvasSelectionEditingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnSelectionResizing(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionResizing (e As InkCanvasSelectionEditingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionResizing(System::Windows::Controls::InkCanvasSelectionEditingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionResizing : System.Windows.Controls.InkCanvasSelectionEditingEventArgs -&gt; unit&#xA;override this.OnSelectionResizing : System.Windows.Controls.InkCanvasSelectionEditingEventArgs -&gt; unit" Usage="inkCanvas.OnSelectionResizing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasSelectionEditingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3a6f1-410">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-410">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6f1-411">引发 <see cref="E:System.Windows.Controls.InkCanvas.SelectionResizing" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-411">Raises the <see cref="E:System.Windows.Controls.InkCanvas.SelectionResizing" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-412">调整选定笔画和/或元素的用户请求后，在应用更改之前，调用此方法。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-412">This method is called after the user requests a selection of strokes and/or elements be resized and before the change is applied.</span></span> <span data-ttu-id="3a6f1-413">在应用更改后，<xref:System.Windows.Controls.InkCanvas.OnSelectionResized%2A>将调用方法。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-413">After the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionResized%2A> method will be called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnSelectionResized(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnStrokeCollected">
      <MemberSignature Language="C#" Value="protected virtual void OnStrokeCollected (System.Windows.Controls.InkCanvasStrokeCollectedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStrokeCollected(class System.Windows.Controls.InkCanvasStrokeCollectedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnStrokeCollected(System.Windows.Controls.InkCanvasStrokeCollectedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStrokeCollected (e As InkCanvasStrokeCollectedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStrokeCollected(System::Windows::Controls::InkCanvasStrokeCollectedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStrokeCollected : System.Windows.Controls.InkCanvasStrokeCollectedEventArgs -&gt; unit&#xA;override this.OnStrokeCollected : System.Windows.Controls.InkCanvasStrokeCollectedEventArgs -&gt; unit" Usage="inkCanvas.OnStrokeCollected e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasStrokeCollectedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3a6f1-414">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-414">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6f1-415">引发 <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-415">Raises the <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-416"><xref:System.Windows.Controls.InkCanvas.OnStrokeCollected%2A> 完成时调用用户以物理方式描边，例如，通过在移动之后引发触笔从平板电脑。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-416"><xref:System.Windows.Controls.InkCanvas.OnStrokeCollected%2A> is called when a user physically completes a stroke, for example, by raising the stylus from a tablet after making a motion.</span></span>  
  
 <span data-ttu-id="3a6f1-417">以编程方式添加到笔画<xref:System.Windows.Controls.InkCanvas.Strokes%2A>集合将不会调用<xref:System.Windows.Controls.InkCanvas.OnStrokeCollected%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-417">A programmatic addition of strokes to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> collection will not call the <xref:System.Windows.Controls.InkCanvas.OnStrokeCollected%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStrokeErased">
      <MemberSignature Language="C#" Value="protected virtual void OnStrokeErased (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStrokeErased(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnStrokeErased(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStrokeErased (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStrokeErased(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStrokeErased : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnStrokeErased : System.Windows.RoutedEventArgs -&gt; unit" Usage="inkCanvas.OnStrokeErased e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3a6f1-418">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-418">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6f1-419">引发 <see cref="E:System.Windows.Controls.InkCanvas.StrokeErased" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-419">Raises the <see cref="E:System.Windows.Controls.InkCanvas.StrokeErased" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStrokeErasing">
      <MemberSignature Language="C#" Value="protected virtual void OnStrokeErasing (System.Windows.Controls.InkCanvasStrokeErasingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStrokeErasing(class System.Windows.Controls.InkCanvasStrokeErasingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnStrokeErasing(System.Windows.Controls.InkCanvasStrokeErasingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStrokeErasing (e As InkCanvasStrokeErasingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStrokeErasing(System::Windows::Controls::InkCanvasStrokeErasingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStrokeErasing : System.Windows.Controls.InkCanvasStrokeErasingEventArgs -&gt; unit&#xA;override this.OnStrokeErasing : System.Windows.Controls.InkCanvasStrokeErasingEventArgs -&gt; unit" Usage="inkCanvas.OnStrokeErasing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasStrokeErasingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3a6f1-420">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-420">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6f1-421">引发 <see cref="E:System.Windows.Controls.InkCanvas.StrokeErasing" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-421">Raises the <see cref="E:System.Windows.Controls.InkCanvas.StrokeErasing" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStrokesReplaced">
      <MemberSignature Language="C#" Value="protected virtual void OnStrokesReplaced (System.Windows.Controls.InkCanvasStrokesReplacedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStrokesReplaced(class System.Windows.Controls.InkCanvasStrokesReplacedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnStrokesReplaced(System.Windows.Controls.InkCanvasStrokesReplacedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStrokesReplaced (e As InkCanvasStrokesReplacedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStrokesReplaced(System::Windows::Controls::InkCanvasStrokesReplacedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStrokesReplaced : System.Windows.Controls.InkCanvasStrokesReplacedEventArgs -&gt; unit&#xA;override this.OnStrokesReplaced : System.Windows.Controls.InkCanvasStrokesReplacedEventArgs -&gt; unit" Usage="inkCanvas.OnStrokesReplaced e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasStrokesReplacedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3a6f1-422">事件数据。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-422">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6f1-423">引发 <see cref="E:System.Windows.Controls.InkCanvas.StrokesReplaced" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-423">Raises the <see cref="E:System.Windows.Controls.InkCanvas.StrokesReplaced" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Paste">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-424">将剪贴板的内容粘贴到 <see cref="T:System.Windows.Controls.InkCanvas" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-424">Pastes the contents of the Clipboard to the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-425"><xref:System.Windows.Controls.InkCanvas>可以支持中的剪贴板数据[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]格式， [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]，和文本格式。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-425">The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)], and text format.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste();" />
      <MemberSignature Language="F#" Value="member this.Paste : unit -&gt; unit" Usage="inkCanvas.Paste " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-426">将剪贴板的内容粘贴到 <see cref="T:System.Windows.Controls.InkCanvas" /> 的左上角。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-426">Pastes the contents of the Clipboard to the top-left corner of the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-427"><xref:System.Windows.Controls.InkCanvas>可以支持中的剪贴板数据[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]格式， [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]，和文本格式。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-427">The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)], and text format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-428">下面的示例将一个元素复制到剪贴板，并将其粘贴到<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-428">The following example copies an element to the Clipboard and pastes it to the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3a6f1-429">此示例假定是名为的元素`rect1`，并且<xref:System.Windows.Controls.Primitives.ButtonBase.Click>事件已连接到该示例中的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-429">This example assumes that there is an element called `rect1`, and that the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> events have been connected to the event handlers in the example.</span></span>  
  
 [!code-csharp[InkCanvasSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[InkCanvasSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="3a6f1-430">用于将从对剪贴板内容粘贴<see cref="T:System.Windows.Controls.InkCanvas" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-430">for pasting content from the Clipboard to the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
          <span data-ttu-id="3a6f1-431">关联枚举：<see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-431">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" />.</span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Controls.InkCanvas.CopySelection" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.CanPaste" />
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.Paste(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.Paste : System.Windows.Point -&gt; unit" Usage="inkCanvas.Paste point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="3a6f1-432">笔画粘贴位置所在的点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-432">The point at which to paste the strokes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6f1-433">将剪贴板的内容粘贴到 <see cref="T:System.Windows.Controls.InkCanvas" /> 的给定点。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-433">Pastes the contents of the Clipboard to the <see cref="T:System.Windows.Controls.InkCanvas" /> at a given point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-434"><xref:System.Windows.Controls.InkCanvas>可以支持中的剪贴板数据[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]格式， [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]，和文本格式。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-434">The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)], and text format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-435">下面的示例将一个元素复制到剪贴板，并将其粘贴到<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-435">The following example copies an element to the Clipboard and pastes it to the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3a6f1-436">此示例假定是名为的元素`rect1`，并且<xref:System.Windows.Controls.Primitives.ButtonBase.Click>事件连接到该示例中的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-436">This example assumes that there is an element called `rect1`, and that the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> events are connected to the event handlers in the example.</span></span>  
  
 [!code-csharp[InkCanvasSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[InkCanvasSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="3a6f1-437">粘贴到剪贴板的内容的权限<see cref="T:System.Windows.Controls.InkCanvas" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-437">Permission to paste content from the Clipboard to the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
          <span data-ttu-id="3a6f1-438">关联枚举：<see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-438">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" />.</span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Controls.InkCanvas.CopySelection" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.CanPaste" />
      </Docs>
    </Member>
    <Member MemberName="PreferredPasteFormats">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Controls.InkCanvasClipboardFormat&gt; PreferredPasteFormats { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Controls.InkCanvasClipboardFormat&gt; PreferredPasteFormats" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.PreferredPasteFormats" />
      <MemberSignature Language="VB.NET" Value="Public Property PreferredPasteFormats As IEnumerable(Of InkCanvasClipboardFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Controls::InkCanvasClipboardFormat&gt; ^ PreferredPasteFormats { System::Collections::Generic::IEnumerable&lt;System::Windows::Controls::InkCanvasClipboardFormat&gt; ^ get(); void set(System::Collections::Generic::IEnumerable&lt;System::Windows::Controls::InkCanvasClipboardFormat&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PreferredPasteFormats : seq&lt;System.Windows.Controls.InkCanvasClipboardFormat&gt; with get, set" Usage="System.Windows.Controls.InkCanvas.PreferredPasteFormats" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Controls.InkCanvasClipboardFormat&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-439">获取或设置可粘贴到 <see cref="T:System.Windows.Controls.InkCanvas" /> 中的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-439">Gets or sets formats that can be pasted onto the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a6f1-440">一个枚举值集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-440">A collection of enumeration values.</span>
          </span>
          <span data-ttu-id="3a6f1-441">默认值为 <see cref="F:System.Windows.Controls.InkCanvasClipboardFormat.InkSerializedFormat" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-441">The default is <see cref="F:System.Windows.Controls.InkCanvasClipboardFormat.InkSerializedFormat" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_PreferredPasteFormats"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="3a6f1-442">XAML 属性元素用法</span><span class="sxs-lookup"><span data-stu-id="3a6f1-442">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.PreferredPasteFormats>  
    InkCanvasClipboardFormats  
  </object.PreferredPasteFormats>  
</object>  
```  
  
<a name="xamlValues_PreferredPasteFormats"></a>   
## <a name="xaml-values"></a><span data-ttu-id="3a6f1-443">XAML 值</span><span class="sxs-lookup"><span data-stu-id="3a6f1-443">XAML Values</span></span>  
 <span data-ttu-id="3a6f1-444">*InkCanvasClipboardFormats*</span><span class="sxs-lookup"><span data-stu-id="3a6f1-444">*InkCanvasClipboardFormats*</span></span>  
 <span data-ttu-id="3a6f1-445">一个数组<xref:System.Windows.Controls.InkCanvasClipboardFormat>枚举值。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-445">An array of <xref:System.Windows.Controls.InkCanvasClipboardFormat> enumeration values.</span></span> <span data-ttu-id="3a6f1-446">在 XAML 中指定一个字符串数组需要`x:Array`使用情况。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-446">Specifying an array in XAML requires `x:Array` usage.</span></span> <span data-ttu-id="3a6f1-447">一个枚举值指定为元素声明数组成员需要`x:Static`使用情况。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-447">Specifying an enumeration value as an element that declares an array member requires `x:Static` usage.</span></span> <span data-ttu-id="3a6f1-448">有关详细信息，请参阅[X:array 标记扩展](~/docs/framework/xaml-services/x-array-markup-extension.md)并[X:static 标记扩展](~/docs/framework/xaml-services/x-static-markup-extension.md)。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-448">For more information, see [x:Array Markup Extension](~/docs/framework/xaml-services/x-array-markup-extension.md) and [x:Static Markup Extension](~/docs/framework/xaml-services/x-static-markup-extension.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-449">下面的示例设置<xref:System.Windows.Controls.InkCanvas.PreferredPasteFormats%2A>以使<xref:System.Windows.Controls.InkCanvas>接受[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]格式， [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-449">The following example sets the <xref:System.Windows.Controls.InkCanvas.PreferredPasteFormats%2A> to make the <xref:System.Windows.Controls.InkCanvas> accept [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)].</span></span>  
  
 [!code-csharp[InkCanvasSamples#26](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#26)]
 [!code-vb[InkCanvasSamples#26](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#26)]  
  
 <span data-ttu-id="3a6f1-450">下面的示例可实现同样的任务[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-450">The following example accomplishes the same thing in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[InkCanvasSamples#38](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window2.xaml#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResizeEnabled">
      <MemberSignature Language="C#" Value="public bool ResizeEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResizeEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.ResizeEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ResizeEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ResizeEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ResizeEnabled : bool with get, set" Usage="System.Windows.Controls.InkCanvas.ResizeEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-451">获取或设置一个布尔值，该值指示用户是否可以调整 <see cref="T:System.Windows.Controls.InkCanvas" /> 上选定的墨迹笔画和/或元素的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-451">Gets or sets a Boolean value that indicates whether the user can resize selected ink strokes and/or elements on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a6f1-452">如果用户可以调整 <see cref="T:System.Windows.Controls.InkCanvas" /> 上的笔画和/或元素的大小，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-452">
              <see langword="true" /> if a user can resize strokes and/or elements on the <see cref="T:System.Windows.Controls.InkCanvas" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-453">如果此属性设置为`true`，在选中时，墨迹笔画和/或元素四周绘制的装饰器边框。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-453">If this property is set to `true`, an adorner border is drawn around ink strokes and/or elements when they are selected.</span></span> <span data-ttu-id="3a6f1-454">此边框使用户能够调整所选的对象的大小。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-454">This border enables the user to resize the selected objects.</span></span> <span data-ttu-id="3a6f1-455">如果<xref:System.Windows.Controls.InkCanvas.MoveEnabled%2A>是`true`，装饰器使用户能够将笔画和/或元素，以及移动。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-455">If <xref:System.Windows.Controls.InkCanvas.MoveEnabled%2A> is `true`, the adorner enables the user to move the strokes and/or elements as well.</span></span>  
  
 <span data-ttu-id="3a6f1-456">如果此属性设置为`false`装饰器边框在选择了一个或多个墨迹笔画和/或元素时自动删除从所选对象。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-456">If this property is set to `false` while one or more ink strokes and/or elements are selected, the adorner border is automatically removed from the selected objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-457">下面的示例将阻止用户从移动和调整元素大小和上描边<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-457">The following example prevents a user from moving and resizing the elements and strokes on a <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#7](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#7)]
 [!code-vb[InkCanvasSamples#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="see GetRight, and SetRight" />
      <MemberSignature Language="ILAsm" Value="see GetRight, and SetRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Right" />
      <MemberSignature Language="VB.NET" Value="see GetRight, and SetRight" />
      <MemberSignature Language="F#" Value="see GetRight, and SetRight" Usage="see GetRight, and SetRight" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-458">获取或设置某元素的右边缘与其父 <see cref="T:System.Windows.Controls.InkCanvas" /> 的右边缘之间的距离。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-458">Gets or sets the distance between the right side of an element and the right side of its parent <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Right"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3a6f1-459">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="3a6f1-459">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3a6f1-460">标识符字段</span><span class="sxs-lookup"><span data-stu-id="3a6f1-460">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.RightProperty>|  
|<span data-ttu-id="3a6f1-461">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="3a6f1-461">Metadata properties set to `true`</span></span>|<span data-ttu-id="3a6f1-462">无</span><span class="sxs-lookup"><span data-stu-id="3a6f1-462">None</span></span>|  
  
<a name="xamlAttributeUsage_Right"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="3a6f1-463">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="3a6f1-463">XAML Attribute Usage</span></span>  
  
```  
<object InkCanvas.Right="double"/>  
- or –  
<object InkCanvas.Right="qualifiedDouble"/>  
```  
  
<a name="xamlValues_Right"></a>   
## <a name="xaml-values"></a><span data-ttu-id="3a6f1-464">XAML 值</span><span class="sxs-lookup"><span data-stu-id="3a6f1-464">XAML Values</span></span>  
 <span data-ttu-id="3a6f1-465">*double*</span><span class="sxs-lookup"><span data-stu-id="3a6f1-465">*double*</span></span>  
 <span data-ttu-id="3a6f1-466">字符串表示形式<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-466">String representation of a <xref:System.Double> value.</span></span> <span data-ttu-id="3a6f1-467">这被解释为[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]度量。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-467">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="3a6f1-468">字符串不需要显式包括小数点。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-468">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="3a6f1-469">例如，值为`1`是可接受。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-469">For instance, a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="3a6f1-470">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="3a6f1-470">*qualifiedDouble*</span></span>  
 <span data-ttu-id="3a6f1-471">一个*双*值，上文所述跟以下单位声明字符串之一： `px`， `in`， `cm`， `pt`。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-471">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="3a6f1-472">`px` （默认值） [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="3a6f1-472">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="3a6f1-473">`in` 为英寸;1 中为 96px = =</span><span class="sxs-lookup"><span data-stu-id="3a6f1-473">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="3a6f1-474">`cm` 为厘米;1cm==(96/2.54) px</span><span class="sxs-lookup"><span data-stu-id="3a6f1-474">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="3a6f1-475">`pt` 为点;1pt==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="3a6f1-475">`pt` is points; 1pt==(96/72) px</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-476">下面的示例演示如何设置的位置<xref:System.Windows.Controls.Label>上<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-476">The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Label> on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-xml[InkCanvasSamples#35](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.RightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RightProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RightProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RightProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.InkCanvas.RightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-477">标识 <see cref="P:System.Windows.Controls.InkCanvas.Right" /> 附加属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-477">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Right" /> attached propertyy.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Select">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-478">选择一组墨迹 <see cref="T:System.Windows.Ink.Stroke" /> 对象和/或 <see cref="T:System.Windows.FrameworkElement" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-478">Selects a set of ink <see cref="T:System.Windows.Ink.Stroke" /> objects and/or <see cref="T:System.Windows.FrameworkElement" /> objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-479"><xref:System.Windows.Controls.InkCanvas>可以包含<xref:System.Windows.Ink.Stroke>对象，对用户触笔输入的响应来创建，并<xref:System.Windows.FrameworkElement>对象，如<xref:System.Windows.Controls.Image>和<xref:System.Windows.Controls.Button>对象。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-479">An <xref:System.Windows.Controls.InkCanvas> can contain <xref:System.Windows.Ink.Stroke> objects, which are created in response to user stylus input, and <xref:System.Windows.FrameworkElement> objects, such as <xref:System.Windows.Controls.Image> and <xref:System.Windows.Controls.Button> objects.</span></span>  
  
 <span data-ttu-id="3a6f1-480">在其周围一个装饰器，以便于识别和操作，将显示选定的笔画。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-480">Selected strokes will be displayed with an adorner around them for ease of recognition and manipulation.</span></span> <span data-ttu-id="3a6f1-481"><xref:System.Windows.FrameworkElement> 选中时，不会以不同方式显示对象。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-481"><xref:System.Windows.FrameworkElement> objects will not display differently when selected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (System.Collections.Generic.IEnumerable&lt;System.Windows.UIElement&gt; selectedElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.UIElement&gt; selectedElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.Select(System.Collections.Generic.IEnumerable{System.Windows.UIElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (selectedElements As IEnumerable(Of UIElement))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(System::Collections::Generic::IEnumerable&lt;System::Windows::UIElement ^&gt; ^ selectedElements);" />
      <MemberSignature Language="F#" Value="member this.Select : seq&lt;System.Windows.UIElement&gt; -&gt; unit" Usage="inkCanvas.Select selectedElements" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedElements" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.UIElement&gt;" />
      </Parameters>
      <Docs>
        <param name="selectedElements">
          <span data-ttu-id="3a6f1-482">要选择的 <see cref="T:System.Windows.UIElement" /> 对象集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-482">A collection of <see cref="T:System.Windows.UIElement" /> objects to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6f1-483">选择一组 <see cref="T:System.Windows.UIElement" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-483">Selects a set of <see cref="T:System.Windows.UIElement" /> objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-484"><xref:System.Windows.Controls.InkCanvas>可以包含<xref:System.Windows.Ink.Stroke>响应用户触笔输入中创建的对象和<xref:System.Windows.UIElement>对象，如<xref:System.Windows.Controls.Image>和<xref:System.Windows.Controls.Button>对象。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-484">An <xref:System.Windows.Controls.InkCanvas> can contain <xref:System.Windows.Ink.Stroke> objects, which are created in response to user stylus input and <xref:System.Windows.UIElement> objects, such as <xref:System.Windows.Controls.Image> and <xref:System.Windows.Controls.Button> objects.</span></span>  
  
 <span data-ttu-id="3a6f1-485">针对这些装饰器以便于识别和操作以显示选定的笔画。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-485">Selected strokes are displayed with an adorner around them for ease of recognition and manipulation.</span></span> <span data-ttu-id="3a6f1-486"><xref:System.Windows.UIElement> 选中时，不会以不同方式显示对象。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-486"><xref:System.Windows.UIElement> objects will not display differently when selected.</span></span> <span data-ttu-id="3a6f1-487">如果<xref:System.Windows.UIElement>中`selectedElements`中的 Children 集合中，不是<xref:System.Windows.Controls.InkCanvas.Select%2A>忽略<xref:System.Windows.UIElement>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-487">If a <xref:System.Windows.UIElement> in `selectedElements` is not in the Children collection, <xref:System.Windows.Controls.InkCanvas.Select%2A> ignores the <xref:System.Windows.UIElement>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-488">下面的示例选择所有笔画和两个元素上的<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-488">The following example selects all the strokes and two elements on an <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3a6f1-489">此示例假定有<xref:System.Windows.Controls.TextBox>称为`textbox1`和一个<xref:System.Windows.Controls.Button>调用`button1`-和两个控件位于的子元素<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-489">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textbox1` and a <xref:System.Windows.Controls.Button> called `button1` - and that both controls are child elements of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#2](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#2)]
 [!code-vb[InkCanvasSamples#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (System.Windows.Ink.StrokeCollection selectedStrokes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(class System.Windows.Ink.StrokeCollection selectedStrokes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (selectedStrokes As StrokeCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(System::Windows::Ink::StrokeCollection ^ selectedStrokes);" />
      <MemberSignature Language="F#" Value="member this.Select : System.Windows.Ink.StrokeCollection -&gt; unit" Usage="inkCanvas.Select selectedStrokes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedStrokes" Type="System.Windows.Ink.StrokeCollection" />
      </Parameters>
      <Docs>
        <param name="selectedStrokes">
          <span data-ttu-id="3a6f1-490">要选择的 <see cref="T:System.Windows.Ink.Stroke" /> 对象集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-490">A collection of <see cref="T:System.Windows.Ink.Stroke" /> objects to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6f1-491">选择一组墨迹 <see cref="T:System.Windows.Ink.Stroke" /> 对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-491">Selects a set of ink <see cref="T:System.Windows.Ink.Stroke" /> objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-492"><xref:System.Windows.Controls.InkCanvas>可以包含<xref:System.Windows.Ink.Stroke>对象，对用户触笔输入的响应来创建，并<xref:System.Windows.FrameworkElement>对象，如<xref:System.Windows.Controls.Image>和<xref:System.Windows.Controls.Button>对象。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-492">An <xref:System.Windows.Controls.InkCanvas> can contain <xref:System.Windows.Ink.Stroke> objects, which are created in response to user stylus input, and <xref:System.Windows.FrameworkElement> objects, such as <xref:System.Windows.Controls.Image> and <xref:System.Windows.Controls.Button> objects.</span></span>  
  
 <span data-ttu-id="3a6f1-493">针对这些装饰器以便于识别和操作以显示选定的笔画。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-493">Selected strokes are displayed with an adorner around them for ease of recognition and manipulation.</span></span> <span data-ttu-id="3a6f1-494"><xref:System.Windows.FrameworkElement> 选中时，对象并以不同方式显示。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-494"><xref:System.Windows.FrameworkElement> objects do not display differently when selected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-495">下面的示例选择所有笔画和两个元素上的<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-495">The following example selects all the strokes and two elements on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  <span data-ttu-id="3a6f1-496">此示例假定有<xref:System.Windows.Controls.TextBox>称为`textbox1`和一个<xref:System.Windows.Controls.Button>调用`button1`-和两个控件位于的子元素<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-496">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textbox1` and a <xref:System.Windows.Controls.Button> called `button1` - and that both controls are child elements of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#2](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#2)]
 [!code-vb[InkCanvasSamples#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a6f1-497">
            <paramref name="selectedStrokes" /> 中的一个或多个笔画没有包含在 <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> 属性中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-497">One or more strokes in <paramref name="selectedStrokes" /> is not in the <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (System.Windows.Ink.StrokeCollection selectedStrokes, System.Collections.Generic.IEnumerable&lt;System.Windows.UIElement&gt; selectedElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(class System.Windows.Ink.StrokeCollection selectedStrokes, class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.UIElement&gt; selectedElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.UIElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (selectedStrokes As StrokeCollection, selectedElements As IEnumerable(Of UIElement))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(System::Windows::Ink::StrokeCollection ^ selectedStrokes, System::Collections::Generic::IEnumerable&lt;System::Windows::UIElement ^&gt; ^ selectedElements);" />
      <MemberSignature Language="F#" Value="member this.Select : System.Windows.Ink.StrokeCollection * seq&lt;System.Windows.UIElement&gt; -&gt; unit" Usage="inkCanvas.Select (selectedStrokes, selectedElements)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedStrokes" Type="System.Windows.Ink.StrokeCollection" />
        <Parameter Name="selectedElements" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.UIElement&gt;" />
      </Parameters>
      <Docs>
        <param name="selectedStrokes">
          <span data-ttu-id="3a6f1-498">要选择的 <see cref="T:System.Windows.Ink.Stroke" /> 对象集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-498">A collection of <see cref="T:System.Windows.Ink.Stroke" /> objects to select.</span>
          </span>
        </param>
        <param name="selectedElements">
          <span data-ttu-id="3a6f1-499">要选择的 <see cref="T:System.Windows.UIElement" /> 对象集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-499">A collection of <see cref="T:System.Windows.UIElement" /> objects to select.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6f1-500">选择一个由 <see cref="T:System.Windows.Ink.Stroke" /> 对象与 <see cref="T:System.Windows.UIElement" /> 对象构成的组合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-500">Selects a combination of <see cref="T:System.Windows.Ink.Stroke" /> and <see cref="T:System.Windows.UIElement" /> objects.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-501"><xref:System.Windows.Controls.InkCanvas>可以包含<xref:System.Windows.Ink.Stroke>响应用户触笔输入中创建的对象和<xref:System.Windows.UIElement>对象，如<xref:System.Windows.Controls.Image>和<xref:System.Windows.Controls.Button>对象。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-501">An <xref:System.Windows.Controls.InkCanvas> can contain <xref:System.Windows.Ink.Stroke> objects, which are created in response to user stylus input and <xref:System.Windows.UIElement> objects, such as <xref:System.Windows.Controls.Image> and <xref:System.Windows.Controls.Button> objects.</span></span>  
  
 <span data-ttu-id="3a6f1-502">在其周围一个装饰器，以便于识别和操作，将显示选定的笔画。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-502">Selected strokes will be displayed with an adorner around them for ease of recognition and manipulation.</span></span> <span data-ttu-id="3a6f1-503"><xref:System.Windows.UIElement> 选中时，不会以不同方式显示对象。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-503"><xref:System.Windows.UIElement> objects will not display differently when selected.</span></span> <span data-ttu-id="3a6f1-504">如果<xref:System.Windows.UIElement>中`selectedElements`中的 Children 集合中，不是<xref:System.Windows.Controls.InkCanvas.Select%2A>忽略<xref:System.Windows.UIElement>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-504">If a <xref:System.Windows.UIElement> in `selectedElements` is not in the Children collection, <xref:System.Windows.Controls.InkCanvas.Select%2A> ignores the <xref:System.Windows.UIElement>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-505">下面的示例选择所有笔画和两个元素上的<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-505">The following example selects all the strokes and two elements on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  <span data-ttu-id="3a6f1-506">此示例假定有<xref:System.Windows.Controls.TextBox>称为`textbox1`和一个<xref:System.Windows.Controls.Button>调用`button1`-和两个控件位于的子元素<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-506">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textbox1` and a <xref:System.Windows.Controls.Button> called `button1` - and that both controls are child elements of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#2](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#2)]
 [!code-vb[InkCanvasSamples#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3a6f1-507">
            <paramref name="selectedStrokes" /> 中的一个或多个笔画没有包含在 <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> 属性中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-507">One or more strokes in <paramref name="selectedStrokes" /> is not included in the <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SelectionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.SelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectionChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectionChanged : EventHandler " Usage="member this.SelectionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-508">在 <see cref="T:System.Windows.Controls.InkCanvas" /> 上的选择更改时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-508">Occurs when the selection on the <see cref="T:System.Windows.Controls.InkCanvas" /> changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-509">选择并由用户应用了一组墨迹笔画和/或元素后，引发此事件。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-509">This event is raised after a set of ink strokes and/or elements has been selected and applied by the user.</span></span>  
  
 <span data-ttu-id="3a6f1-510">相反，如果您必须处理的请求的应用所选内容之前选择的墨迹笔画和/或元素的一组，添加到事件处理程序<xref:System.Windows.Controls.InkCanvas.SelectionChanging>事件。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-510">If, instead, you must handle a request that select a set of ink strokes and/or elements before the selection is applied, add an event handler to the <xref:System.Windows.Controls.InkCanvas.SelectionChanging> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-511">下面的示例可防止用户进行选择小于其原始大小。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-511">The following example prevents the user from making a selection smaller than its original size.</span></span>  
  
 [!code-csharp[InkCanvasSamples#16](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#16)]
 [!code-vb[InkCanvasSamples#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.InkCanvas.SelectionChanging" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      </Docs>
    </Member>
    <Member MemberName="SelectionChanging">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasSelectionChangingEventHandler SelectionChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasSelectionChangingEventHandler SelectionChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.SelectionChanging" />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionChanging As InkCanvasSelectionChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::InkCanvasSelectionChangingEventHandler ^ SelectionChanging;" />
      <MemberSignature Language="F#" Value="member this.SelectionChanging : System.Windows.Controls.InkCanvasSelectionChangingEventHandler " Usage="member this.SelectionChanging : System.Windows.Controls.InkCanvasSelectionChangingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasSelectionChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-512">在选择了一组新墨迹笔画和/或元素时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-512">Occurs when a new set of ink strokes and/or elements is being selected.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-513"><xref:System.Windows.Controls.InkCanvas.SelectionChanging>用户-但在应用更改之前选择笔画和/或元素时引发事件。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-513">The <xref:System.Windows.Controls.InkCanvas.SelectionChanging> event is raised when strokes and/or elements are selected by the user - but before the change is applied.</span></span>  
  
 <span data-ttu-id="3a6f1-514"><xref:System.Windows.Controls.InkCanvas.SelectionChanging>处理事件时<xref:System.Windows.Controls.InkCanvasSelectionChangingEventHandler>接收<xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs>对象。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-514">The <xref:System.Windows.Controls.InkCanvas.SelectionChanging> event is processed when the <xref:System.Windows.Controls.InkCanvasSelectionChangingEventHandler> receives an <xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs> object.</span></span> <span data-ttu-id="3a6f1-515"><xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs> 提供用于访问方法<xref:System.Windows.FrameworkElement>和<xref:System.Windows.Ink.StrokeCollection>对象后用户选择它们。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-515"><xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs> provides methods for accessing <xref:System.Windows.FrameworkElement> and <xref:System.Windows.Ink.StrokeCollection> objects after they are selected by the user.</span></span>  
  
 <span data-ttu-id="3a6f1-516">在应用更改后，<xref:System.Windows.Controls.InkCanvas.SelectionChanged>引发事件。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-516">After the change is applied, the <xref:System.Windows.Controls.InkCanvas.SelectionChanged> event is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3a6f1-517"><xref:System.Windows.Controls.InkCanvas.SelectionChanging>事件不会删除选定的笔画时或当<xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A>属性更改。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-517">The <xref:System.Windows.Controls.InkCanvas.SelectionChanging> event does not occur when the selected strokes are deleted or when the <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> property changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-518">下面的示例使所选的笔画皇家蓝色。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-518">The following example makes selected strokes royal blue.</span></span>  
  
 [!code-csharp[InkCanvasSamples#14](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#14)]
 [!code-vb[InkCanvasSamples#14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.GetSelectedElements" />
        <altmember cref="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.GetSelectedStrokes" />
        <altmember cref="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.SetSelectedElements(System.Collections.Generic.IEnumerable{System.Windows.UIElement})" />
        <altmember cref="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.SetSelectedStrokes(System.Windows.Ink.StrokeCollection)" />
      </Docs>
    </Member>
    <Member MemberName="SelectionMoved">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionMoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionMoved" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.SelectionMoved" />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionMoved As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectionMoved;" />
      <MemberSignature Language="F#" Value="member this.SelectionMoved : EventHandler " Usage="member this.SelectionMoved : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-519">在用户移动了所选笔画和/或元素之后发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-519">Occurs after the user moves a selection of strokes and/or elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-520">移动选定笔画和/或元素的但之前的笔划或元素的数据进行更新以记录其新位置后，将发生此事件。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-520">This event occurs after a selection of strokes and/or elements is moved, but before the stroke or element data is updated to record its new position.</span></span> <span data-ttu-id="3a6f1-521">添加事件处理程序到<xref:System.Windows.Controls.InkCanvas.SelectionMoving>事件。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-521">Add an event handler to the <xref:System.Windows.Controls.InkCanvas.SelectionMoving> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-522">下面的示例会在取消选择项<xref:System.Windows.Controls.InkCanvas>用户将其移动后。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-522">The following example unselects items on an <xref:System.Windows.Controls.InkCanvas> after the user moves them.</span></span>  
  
 [!code-csharp[InkCanvasSamples#19](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#19)]
 [!code-vb[InkCanvasSamples#19](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.InkCanvas.SelectionMoving" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      </Docs>
    </Member>
    <Member MemberName="SelectionMoving">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasSelectionEditingEventHandler SelectionMoving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasSelectionEditingEventHandler SelectionMoving" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.SelectionMoving" />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionMoving As InkCanvasSelectionEditingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::InkCanvasSelectionEditingEventHandler ^ SelectionMoving;" />
      <MemberSignature Language="F#" Value="member this.SelectionMoving : System.Windows.Controls.InkCanvasSelectionEditingEventHandler " Usage="member this.SelectionMoving : System.Windows.Controls.InkCanvasSelectionEditingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasSelectionEditingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-523">在移动选定笔画和元素之前发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-523">Occurs before selected strokes and elements are moved.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-524">用户请求移动所选笔画和/或元素的是之后, 但尚未应用更改之前，将发生此事件。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-524">This event occurs after the user requests that a selection of strokes and/or elements be moved, but before the change is applied.</span></span>  
  
 <span data-ttu-id="3a6f1-525">事件处理程序接收类型的自变量<xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs>具有两个属性：<xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A>和<xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-525">The event handler receives an argument of type <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs> with two properties: <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> and <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>.</span></span> <span data-ttu-id="3a6f1-526"><xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> 定义在移动前所选内容的边界和<xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>定义所选内容在移动后的边界。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-526"><xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> defines the boundaries of the selection before the move and <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A> defines the boundaries of the selection after the move.</span></span>  
  
 <span data-ttu-id="3a6f1-527">在应用更改后，<xref:System.Windows.Controls.InkCanvas.SelectionMoved>事件发生一次。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-527">After the change is applied, the <xref:System.Windows.Controls.InkCanvas.SelectionMoved> event will occur.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-528">下面的示例可防止用户上垂直移动所选的项<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-528">The following example prevents the user from moving selected items vertically on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#13](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#13)]
 [!code-vb[InkCanvasSamples#13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.InkCanvas.SelectionMoved" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      </Docs>
    </Member>
    <Member MemberName="SelectionResized">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionResized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionResized" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.SelectionResized" />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionResized As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectionResized;" />
      <MemberSignature Language="F#" Value="member this.SelectionResized : EventHandler " Usage="member this.SelectionResized : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-529">在用户调整了所选笔画和/或元素大小时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-529">Occurs when a selection of strokes and/or elements has been resized by the user.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-530">选定笔画和/或元素的调整大小后，引发此事件。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-530">This event is raised after a selection of strokes and/or elements is resized.</span></span>  
  
 <span data-ttu-id="3a6f1-531">如果相反，您必须处理一个请求来调整选定内容大小调整大小的笔画和/或元素之前，将添加到事件处理程序<xref:System.Windows.Controls.InkCanvas.SelectionResizing>事件。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-531">If, instead, you must handle a request to resize a selection before the strokes and/or elements are resized, add an event handler to the <xref:System.Windows.Controls.InkCanvas.SelectionResizing> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-532">下面的示例会在取消选择所有项<xref:System.Windows.Controls.InkCanvas>在用户调整大小所选内容之后。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-532">The following example unselects all the items on an <xref:System.Windows.Controls.InkCanvas> after the user re-sizes the selection.</span></span>  
  
 [!code-csharp[InkCanvasSamples#23](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#23)]
 [!code-vb[InkCanvasSamples#23](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#23)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.InkCanvas.SelectionResizing" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      </Docs>
    </Member>
    <Member MemberName="SelectionResizing">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasSelectionEditingEventHandler SelectionResizing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasSelectionEditingEventHandler SelectionResizing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.SelectionResizing" />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionResizing As InkCanvasSelectionEditingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::InkCanvasSelectionEditingEventHandler ^ SelectionResizing;" />
      <MemberSignature Language="F#" Value="member this.SelectionResizing : System.Windows.Controls.InkCanvasSelectionEditingEventHandler " Usage="member this.SelectionResizing : System.Windows.Controls.InkCanvasSelectionEditingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasSelectionEditingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-533">在调整选定笔画和元素的大小之前发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-533">Occurs before selected strokes and elements are resized.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-534">用户请求调整选定笔画和/或元素的之后, 但在应用更改之前，将发生此事件。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-534">This event occurs after the user requests that a selection of strokes and/or elements be resized, but before the change is applied.</span></span>  
  
 <span data-ttu-id="3a6f1-535">事件处理程序接收类型的自变量<xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs>包含两个属性：<xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A>和<xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-535">The event handler receives an argument of type <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs> that contains two properties: <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> and <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>.</span></span> <span data-ttu-id="3a6f1-536"><xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> 定义在调整操作之前所选内容的边界和<xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>定义的大小调整操作完成后选择边界。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-536"><xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> defines the boundaries of the selection before the resizing operation and <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A> defines the boundaries of the selection after the resizing operation.</span></span>  
  
 <span data-ttu-id="3a6f1-537">使用新大小更新笔画和/或元素后<xref:System.Windows.Controls.InkCanvas.SelectionResized>引发事件。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-537">After the strokes and/or elements are updated with the new size, the <xref:System.Windows.Controls.InkCanvas.SelectionResized> event is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-538">下面的示例可防止用户进行选择小于其原始大小。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-538">The following example prevents the user from making a selection smaller than its original size.</span></span>  
  
 [!code-csharp[InkCanvasSamples#16](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#16)]
 [!code-vb[InkCanvasSamples#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.InkCanvas.SelectionResized" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      </Docs>
    </Member>
    <Member MemberName="SetBottom">
      <MemberSignature Language="C#" Value="public static void SetBottom (System.Windows.UIElement element, double length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetBottom(class System.Windows.UIElement element, float64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.SetBottom(System.Windows.UIElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetBottom (element As UIElement, length As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetBottom(System::Windows::UIElement ^ element, double length);" />
      <MemberSignature Language="F#" Value="static member SetBottom : System.Windows.UIElement * double -&gt; unit" Usage="System.Windows.Controls.InkCanvas.SetBottom (element, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="length" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="3a6f1-539">要设置其下边缘属性的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-539">The element on which to set the bottom property.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="3a6f1-540">
            <c>element</c> 的下边缘坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-540">The bottom coordinate of <c>element</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6f1-541">设置给定依赖项对象的 <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> 附加属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-541">Sets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> attached property for a given dependency object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a6f1-542">下面的示例演示如何设置的位置<xref:System.Windows.Controls.Button>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-542">The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#28](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#28)]
 [!code-vb[InkCanvasSamples#28](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEnabledGestures">
      <MemberSignature Language="C#" Value="public void SetEnabledGestures (System.Collections.Generic.IEnumerable&lt;System.Windows.Ink.ApplicationGesture&gt; applicationGestures);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEnabledGestures(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Ink.ApplicationGesture&gt; applicationGestures) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.SetEnabledGestures(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetEnabledGestures (applicationGestures As IEnumerable(Of ApplicationGesture))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetEnabledGestures(System::Collections::Generic::IEnumerable&lt;System::Windows::Ink::ApplicationGesture&gt; ^ applicationGestures);" />
      <MemberSignature Language="F#" Value="member this.SetEnabledGestures : seq&lt;System.Windows.Ink.ApplicationGesture&gt; -&gt; unit" Usage="inkCanvas.SetEnabledGestures applicationGestures" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationGestures" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Ink.ApplicationGesture&gt;" />
      </Parameters>
      <Docs>
        <param name="applicationGestures">
          <span data-ttu-id="3a6f1-543">
            <see cref="T:System.Windows.Controls.InkCanvas" /> 将要识别的应用程序笔势的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-543">A collection of application gestures that the <see cref="T:System.Windows.Controls.InkCanvas" /> will recognize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6f1-544">设置 <see cref="T:System.Windows.Controls.InkCanvas" /> 将要识别的应用程序笔势。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-544">Sets the application gestures that the <see cref="T:System.Windows.Controls.InkCanvas" /> will recognize.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-545">下面的示例演示如何设置<xref:System.Windows.Controls.InkCanvas>识别应用程序笔势。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-545">The following example demonstrates how to set up an <xref:System.Windows.Controls.InkCanvas> to recognize application gestures.</span></span>  
  
 [!code-csharp[GestureSample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#3)]
 [!code-vb[GestureSample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[GestureSample#1](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#1)]
[!code-vb[GestureSample#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3a6f1-546">
            <see cref="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" /> 属性为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-546">The <see cref="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" /> property is <see langword="false" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetLeft">
      <MemberSignature Language="C#" Value="public static void SetLeft (System.Windows.UIElement element, double length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetLeft(class System.Windows.UIElement element, float64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.SetLeft(System.Windows.UIElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetLeft (element As UIElement, length As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetLeft(System::Windows::UIElement ^ element, double length);" />
      <MemberSignature Language="F#" Value="static member SetLeft : System.Windows.UIElement * double -&gt; unit" Usage="System.Windows.Controls.InkCanvas.SetLeft (element, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="length" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="3a6f1-547">要设置其左边缘属性的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-547">The element on which to set the left property.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="3a6f1-548">
            <c>element</c> 的左边缘坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-548">The left coordinate of <c>element</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6f1-549">设置给定依赖项对象的 <see cref="P:System.Windows.Controls.InkCanvas.Left" /> 附加属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-549">Sets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Left" /> attached property for a given dependency object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a6f1-550">下面的示例演示如何设置的位置<xref:System.Windows.Controls.Button>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-550">The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#29](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#29)]
 [!code-vb[InkCanvasSamples#29](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#29)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRight">
      <MemberSignature Language="C#" Value="public static void SetRight (System.Windows.UIElement element, double length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetRight(class System.Windows.UIElement element, float64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.SetRight(System.Windows.UIElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetRight (element As UIElement, length As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetRight(System::Windows::UIElement ^ element, double length);" />
      <MemberSignature Language="F#" Value="static member SetRight : System.Windows.UIElement * double -&gt; unit" Usage="System.Windows.Controls.InkCanvas.SetRight (element, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="length" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="3a6f1-551">要设置其右边缘属性的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-551">The element on which to set the right property.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="3a6f1-552">
            <c>element</c> 的右边缘坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-552">The right coordinate of <c>element</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6f1-553">设置给定依赖项对象的 <see cref="P:System.Windows.Controls.InkCanvas.Right" /> 附加属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-553">Sets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Right" /> attached property for a given dependency object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a6f1-554">下面的示例演示如何设置的位置<xref:System.Windows.Controls.Button>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-554">The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#30](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#30)]
 [!code-vb[InkCanvasSamples#30](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTop">
      <MemberSignature Language="C#" Value="public static void SetTop (System.Windows.UIElement element, double length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTop(class System.Windows.UIElement element, float64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.SetTop(System.Windows.UIElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTop (element As UIElement, length As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTop(System::Windows::UIElement ^ element, double length);" />
      <MemberSignature Language="F#" Value="static member SetTop : System.Windows.UIElement * double -&gt; unit" Usage="System.Windows.Controls.InkCanvas.SetTop (element, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="length" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="3a6f1-555">要设置其上边缘属性的元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-555">The element on which to set the top property.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="3a6f1-556">
            <c>element</c> 的上边缘坐标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-556">The top coordinate of <c>element</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6f1-557">设置给定依赖项对象的 <see cref="P:System.Windows.Controls.InkCanvas.Top" /> 附加属性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-557">Sets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Top" /> attached property for a given dependency object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a6f1-558">下面的示例演示如何设置的位置<xref:System.Windows.Controls.Button>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-558">The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#27](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#27)]
 [!code-vb[InkCanvasSamples#27](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeCollected">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasStrokeCollectedEventHandler StrokeCollected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasStrokeCollectedEventHandler StrokeCollected" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.StrokeCollected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StrokeCollected As InkCanvasStrokeCollectedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::InkCanvasStrokeCollectedEventHandler ^ StrokeCollected;" />
      <MemberSignature Language="F#" Value="member this.StrokeCollected : System.Windows.Controls.InkCanvasStrokeCollectedEventHandler " Usage="member this.StrokeCollected : System.Windows.Controls.InkCanvasStrokeCollectedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasStrokeCollectedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-559">在将用户绘制的笔画添加到 <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> 属性时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-559">Occurs when a stroke drawn by the user is added to the <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-560">当用户完成所使用的指针设备时，引发此事件。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-560">This event is raised when a user completes a stroke using a pointing device.</span></span> <span data-ttu-id="3a6f1-561">例如，用户可能会引发触笔从数字化器在移动之后从而完成一个笔画。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-561">For example, a user might raise a stylus from a digitizer after making a motion, thereby completing a stroke.</span></span>  
  
 <span data-ttu-id="3a6f1-562">事件处理程序接收类型的自变量<xref:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs>，它引用的已完成的笔画。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-562">The event handler receives an argument of type <xref:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs>, which references the completed stroke.</span></span> <span data-ttu-id="3a6f1-563">此外将笔画添加到<xref:System.Windows.Controls.InkCanvas.Strokes%2A>属性的<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-563">The stroke is also added to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 <span data-ttu-id="3a6f1-564">以编程方式添加<xref:System.Windows.Ink.Stroke>对象传递给<xref:System.Windows.Controls.InkCanvas.Strokes%2A>集合不会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-564">The programmatic addition of a <xref:System.Windows.Ink.Stroke> object to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> collection does not raise this event.</span></span>  
  
<a name="routedEventInfo_StrokeCollected"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3a6f1-565">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="3a6f1-565">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3a6f1-566">标识符字段</span><span class="sxs-lookup"><span data-stu-id="3a6f1-566">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.StrokeCollectedEvent>|  
|<span data-ttu-id="3a6f1-567">路由策略</span><span class="sxs-lookup"><span data-stu-id="3a6f1-567">Routing strategy</span></span>|<span data-ttu-id="3a6f1-568">浮升</span><span class="sxs-lookup"><span data-stu-id="3a6f1-568">Bubbling</span></span>|  
|<span data-ttu-id="3a6f1-569">委托</span><span class="sxs-lookup"><span data-stu-id="3a6f1-569">Delegate</span></span>|<xref:System.Windows.Controls.InkCanvasStrokeCollectedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-570">下面的示例为自定义属性节省的时间，当用户将添加到笔划<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-570">The following example saves the time as a custom property when a user adds a stroke to the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#22](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#22)]
 [!code-vb[InkCanvasSamples#22](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#22)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Ink.Stroke.AddPropertyData(System.Guid,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="StrokeCollectedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StrokeCollectedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StrokeCollectedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.StrokeCollectedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StrokeCollectedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StrokeCollectedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StrokeCollectedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.InkCanvas.StrokeCollectedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-571">标识 <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> 路由事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-571">Identifies the <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeErased">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler StrokeErased;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler StrokeErased" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.StrokeErased" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StrokeErased As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ StrokeErased;" />
      <MemberSignature Language="F#" Value="member this.StrokeErased : System.Windows.RoutedEventHandler " Usage="member this.StrokeErased : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-572">在用户擦除笔画时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-572">Occurs when user erases a stroke.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-573">此事件发生时是否在用户擦除的墨迹<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>属性设置为<xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>或<xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-573">This event occurs when a user erases ink whether the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint> or <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke>.</span></span>  
  
<a name="routedEventInfo_StrokeErasing"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3a6f1-574">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="3a6f1-574">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3a6f1-575">标识符字段</span><span class="sxs-lookup"><span data-stu-id="3a6f1-575">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.StrokeErasedEvent>|  
|<span data-ttu-id="3a6f1-576">路由策略</span><span class="sxs-lookup"><span data-stu-id="3a6f1-576">Routing strategy</span></span>|<span data-ttu-id="3a6f1-577">浮升</span><span class="sxs-lookup"><span data-stu-id="3a6f1-577">Bubbling</span></span>|  
|<span data-ttu-id="3a6f1-578">委托</span><span class="sxs-lookup"><span data-stu-id="3a6f1-578">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-579">以下示例将报告上的笔画数<xref:System.Windows.Controls.InkCanvas>时<xref:System.Windows.Controls.InkCanvas.StrokeErased>事件发生。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-579">The following example reports the number of strokes that are on an <xref:System.Windows.Controls.InkCanvas> when the <xref:System.Windows.Controls.InkCanvas.StrokeErased> event occurs.</span></span> <span data-ttu-id="3a6f1-580">如果<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>设置为<xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>并在用户擦除笔划的笔画数的中间上<xref:System.Windows.Controls.InkCanvas>会增加。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-580">If <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint> and the user erases the middle of a stroke, the number of strokes on the <xref:System.Windows.Controls.InkCanvas> increases.</span></span> <span data-ttu-id="3a6f1-581">这是因为两个新笔画替换为旧的笔画。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-581">This is because the old stroke was replaced by two new strokes.</span></span>  
  
 [!code-csharp[InkCanvasSamples#18](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#18)]
 [!code-vb[InkCanvasSamples#18](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeErasedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StrokeErasedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StrokeErasedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.StrokeErasedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StrokeErasedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StrokeErasedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StrokeErasedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.InkCanvas.StrokeErasedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-582">标识 <see cref="E:System.Windows.Controls.InkCanvas.StrokeErased" /> 路由事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-582">Identifies the <see cref="E:System.Windows.Controls.InkCanvas.StrokeErased" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeErasing">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasStrokeErasingEventHandler StrokeErasing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasStrokeErasingEventHandler StrokeErasing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.StrokeErasing" />
      <MemberSignature Language="VB.NET" Value="Public Event StrokeErasing As InkCanvasStrokeErasingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::InkCanvasStrokeErasingEventHandler ^ StrokeErasing;" />
      <MemberSignature Language="F#" Value="member this.StrokeErasing : System.Windows.Controls.InkCanvasStrokeErasingEventHandler " Usage="member this.StrokeErasing : System.Windows.Controls.InkCanvasStrokeErasingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasStrokeErasingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-583">恰好在用户擦除笔画之前发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-583">Occurs just before a user erases a stroke.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-584">处理此事件，当你想要检查是否应擦除笔画。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-584">Handle this event when you want to check whether a stroke should be erased.</span></span> <span data-ttu-id="3a6f1-585">设置<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>属性设置为`true`如果你想要禁止笔画擦除。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-585">Set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `true` if you want to prevent the stroke from being erased.</span></span> <span data-ttu-id="3a6f1-586">可以使用此方法时<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>或<xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A>属性设置为<xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke>或<xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-586">You can use this technique when the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> or <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke> or <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-587">以下示例将阻止任何呈现为荧光笔而擦除的笔画。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-587">The following example prevents any strokes rendered as highlighters from being erased.</span></span> <span data-ttu-id="3a6f1-588">该示例假定<xref:System.Windows.Controls.InkCanvas>连接到的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-588">The example assumes that the <xref:System.Windows.Controls.InkCanvas> is connected to the event handler.</span></span>  
  
 [!code-csharp[DrawingAttributes#16](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#16)]
 [!code-vb[DrawingAttributes#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Strokes">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection Strokes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Ink.StrokeCollection Strokes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Strokes" />
      <MemberSignature Language="VB.NET" Value="Public Property Strokes As StrokeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Ink::StrokeCollection ^ Strokes { System::Windows::Ink::StrokeCollection ^ get(); void set(System::Windows::Ink::StrokeCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Strokes : System.Windows.Ink.StrokeCollection with get, set" Usage="System.Windows.Controls.InkCanvas.Strokes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-589">获取或设置 <see cref="T:System.Windows.Ink.Stroke" /> 收集的墨迹 <see cref="T:System.Windows.Controls.InkCanvas" /> 对象集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-589">Gets or sets the collection of ink <see cref="T:System.Windows.Ink.Stroke" /> objects collected by the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a6f1-590">包含在 <see cref="T:System.Windows.Ink.Stroke" /> 中的 <see cref="T:System.Windows.Controls.InkCanvas" /> 对象集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-590">The collection of <see cref="T:System.Windows.Ink.Stroke" /> objects contained within the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Strokes"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3a6f1-591">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="3a6f1-591">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3a6f1-592">标识符字段</span><span class="sxs-lookup"><span data-stu-id="3a6f1-592">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.StrokesProperty>|  
|<span data-ttu-id="3a6f1-593">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="3a6f1-593">Metadata properties set to `true`</span></span>|<span data-ttu-id="3a6f1-594">无</span><span class="sxs-lookup"><span data-stu-id="3a6f1-594">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-595">下面的示例演示如何使用两个<xref:System.Windows.Ink.StrokeCollection>对象的相同<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-595">The following example demonstrates how to use two <xref:System.Windows.Ink.StrokeCollection> objects for the same <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3a6f1-596">在此示例中，一个播放器和播放器 2 每个使用单独的"墨迹书写表面"即使它们共用同一个<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-596">In this example, player one and player two each use an individual "inking surface" even though they share the same <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3a6f1-597">此示例假定 click 事件连接到事件处理程序， `switchPlayersButton_Click`。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-597">This example assumes the click event is connected to the event handler, `switchPlayersButton_Click`.</span></span>  
  
 [!code-csharp[InkCanvasSamples#15](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#15)]
 [!code-vb[InkCanvasSamples#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#15)]  
  
 <span data-ttu-id="3a6f1-598">下面的示例演示如何将绑定<xref:System.Windows.Controls.InkCanvas.Strokes%2A>的属性<xref:System.Windows.Controls.InkCanvas>到另一个<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-598">The following example demonstrates how to bind the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property of an <xref:System.Windows.Controls.InkCanvas> to another <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-xaml[InkCanvasBindingSnippet#2](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasBindingSnippet/CS/Window2.xaml#2)]   
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Ink.StrokeCollection" />
      </Docs>
    </Member>
    <Member MemberName="StrokesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StrokesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StrokesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.StrokesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StrokesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StrokesProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable StrokesProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.InkCanvas.StrokesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-599">标识 <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> 依赖项属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-599">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokesReplaced">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasStrokesReplacedEventHandler StrokesReplaced;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasStrokesReplacedEventHandler StrokesReplaced" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.StrokesReplaced" />
      <MemberSignature Language="VB.NET" Value="Public Event StrokesReplaced As InkCanvasStrokesReplacedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::InkCanvasStrokesReplacedEventHandler ^ StrokesReplaced;" />
      <MemberSignature Language="F#" Value="member this.StrokesReplaced : System.Windows.Controls.InkCanvasStrokesReplacedEventHandler " Usage="member this.StrokesReplaced : System.Windows.Controls.InkCanvasStrokesReplacedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasStrokesReplacedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-600">在替换 <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> 属性时发生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-600">Occurs when the <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> property is replaced.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3a6f1-601">下面的示例演示如何使用两个<xref:System.Windows.Ink.StrokeCollection>共同位于相同的对象<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-601">The following example demonstrates how to use two <xref:System.Windows.Ink.StrokeCollection> objects that are co-located on the same <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3a6f1-602">在此示例中，一个播放器和播放器 2 每个使用单独的"墨迹书写表面"即使它们共用同一个<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-602">In this example, player one and player two each use an individual "inking surface" even though they share the same <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3a6f1-603">此示例假定`switchPlayersButton_Click`事件连接到的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-603">This example assumes that the `switchPlayersButton_Click` event is connected to the event handler.</span></span>  
  
 [!code-csharp[InkCanvasSamples#15](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#15)]
 [!code-vb[InkCanvasSamples#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="3a6f1-604">要添加的子对象。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-604">The child object to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6f1-605">将指定的对象添加到 <see cref="T:System.Windows.Controls.InkCanvas" /> 中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-605">Adds the specified object to the <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (textData As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ textData) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textData">
          <span data-ttu-id="3a6f1-606">未使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-606">Not used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3a6f1-607">添加位于标记内的文本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-607">Adds the text that within the tags in markup.</span>
          </span>
          <span data-ttu-id="3a6f1-608">始终引发一个 <see cref="T:System.ArgumentException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-608">Always throws an <see cref="T:System.ArgumentException" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="see GetTop, and SetTop" />
      <MemberSignature Language="ILAsm" Value="see GetTop, and SetTop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Top" />
      <MemberSignature Language="VB.NET" Value="see GetTop, and SetTop" />
      <MemberSignature Language="F#" Value="see GetTop, and SetTop" Usage="see GetTop, and SetTop" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-609">获取或设置某元素的上边缘与其父 <see cref="T:System.Windows.Controls.InkCanvas" /> 的上边缘之间的距离。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-609">Gets or sets the distance between the top of an element and the top of its parent <see cref="T:System.Windows.Controls.InkCanvas" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Top"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3a6f1-610">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="3a6f1-610">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3a6f1-611">标识符字段</span><span class="sxs-lookup"><span data-stu-id="3a6f1-611">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.TopProperty>|  
|<span data-ttu-id="3a6f1-612">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="3a6f1-612">Metadata properties set to `true`</span></span>|<span data-ttu-id="3a6f1-613">无</span><span class="sxs-lookup"><span data-stu-id="3a6f1-613">None</span></span>|  
  
<a name="xamlAttributeUsage_Top"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="3a6f1-614">XAML 属性用法</span><span class="sxs-lookup"><span data-stu-id="3a6f1-614">XAML Attribute Usage</span></span>  
  
```  
<object InkCanvas.Top="double"/>  
- or –  
<object InkCanvas.Top="qualifiedDouble"/>  
```  
  
<a name="xamlValues_Top"></a>   
## <a name="xaml-values"></a><span data-ttu-id="3a6f1-615">XAML 值</span><span class="sxs-lookup"><span data-stu-id="3a6f1-615">XAML Values</span></span>  
 <span data-ttu-id="3a6f1-616">*double*</span><span class="sxs-lookup"><span data-stu-id="3a6f1-616">*double*</span></span>  
 <span data-ttu-id="3a6f1-617">字符串表示形式<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-617">String representation of a <xref:System.Double> value.</span></span> <span data-ttu-id="3a6f1-618">这被解释为[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]度量。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-618">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="3a6f1-619">字符串不需要显式包括小数点。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-619">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="3a6f1-620">例如，值的`1`是可接受。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-620">For instance a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="3a6f1-621">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="3a6f1-621">*qualifiedDouble*</span></span>  
 <span data-ttu-id="3a6f1-622">一个*双*值，上文所述跟以下单位声明字符串之一： `px`， `in`， `cm`， `pt`。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-622">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="3a6f1-623">`px` （默认值） [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="3a6f1-623">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="3a6f1-624">`in` 为英寸;1 中为 96px = =</span><span class="sxs-lookup"><span data-stu-id="3a6f1-624">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="3a6f1-625">`cm` 为厘米;1cm==(96/2.54) px</span><span class="sxs-lookup"><span data-stu-id="3a6f1-625">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="3a6f1-626">`pt` 为点;1pt==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="3a6f1-626">`pt` is points; 1pt==(96/72) px</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-627">下面的示例演示如何设置的位置<xref:System.Windows.Controls.Label>上<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-627">The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Label> on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-xml[InkCanvasSamples#35](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TopProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TopProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TopProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.TopProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TopProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TopProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TopProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.InkCanvas.TopProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-628">标识 <see cref="P:System.Windows.Controls.InkCanvas.Top" /> 附加属性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-628">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Top" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCustomCursor">
      <MemberSignature Language="C#" Value="public bool UseCustomCursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCustomCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.UseCustomCursor" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCustomCursor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCustomCursor { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseCustomCursor : bool with get, set" Usage="System.Windows.Controls.InkCanvas.UseCustomCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-629">获取或设置一个布尔值，该值指示是否重写标准的 <see cref="T:System.Windows.Controls.InkCanvas" /> 光标功能以支持自定义光标。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-629">Gets or sets a Boolean value that indicates whether to override standard <see cref="T:System.Windows.Controls.InkCanvas" /> cursor functionality to support a custom cursor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a6f1-630">如果 <see cref="T:System.Windows.Controls.InkCanvas" /> 正在使用自定义光标，则为 <see langword="true" />；否则为 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-630">
              <see langword="true" /> if the <see cref="T:System.Windows.Controls.InkCanvas" /> is using a custom cursor; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a6f1-631"><xref:System.Windows.Controls.InkCanvas>将更改以反映当前的游标样式<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>在光标位于的边界内时<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-631">The <xref:System.Windows.Controls.InkCanvas> will change the cursor style to reflect the current <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> while the cursor is within the bounds of the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3a6f1-632">如果此行为不想，例如，当<xref:System.Windows.Controls.InkCanvas>使用自定义光标，将此属性设置为`true`，并不会更改游标<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-632">If this behavior is not wanted, for example, when the <xref:System.Windows.Controls.InkCanvas> uses a custom cursor, set this property to `true`, and the cursor will not change with the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a6f1-633">下面的示例演示如何使用不同于由提供的游标<xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3a6f1-633">The following example demonstrates how to use a cursor that is different than the one supplied by the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#5](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#5)]
 [!code-vb[InkCanvasSamples#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualChildrenCount">
      <MemberSignature Language="C#" Value="protected override int VisualChildrenCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisualChildrenCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.VisualChildrenCount" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property VisualChildrenCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int VisualChildrenCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.VisualChildrenCount : int" Usage="System.Windows.Controls.InkCanvas.VisualChildrenCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3a6f1-634">获取此元素内可视子元素的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-634">Gets the number of visual child elements within this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3a6f1-635">此元素内可视子元素的数目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3a6f1-635">The number of visual child elements for this element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.FrameworkElement.VisualChildrenCount" />
      </Docs>
    </Member>
  </Members>
</Type>